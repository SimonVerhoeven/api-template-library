{
  "mappings" : [ {
    "id" : "9682f59e-b58c-357e-a2be-0d1d32931ec8",
    "name" : "Update a role",
    "request" : {
      "urlPath" : "/organisations/763x/roles/1229",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9682f59e-b58c-357e-a2be-0d1d32931ec8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "508e4272-0bd6-3ede-bc62-4d09ae330a06",
    "name" : "Update a role",
    "request" : {
      "urlPath" : "/organisations/flvy/roles/d329",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "508e4272-0bd6-3ede-bc62-4d09ae330a06",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "3b18ab32-9582-33fb-8830-404baefe86ad",
    "name" : "Update a role",
    "request" : {
      "urlPath" : "/organisations/4cm4/roles/pj2z",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3b18ab32-9582-33fb-8830-404baefe86ad",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "e0743c5c-93c0-3857-92d9-3d72a95f6c8d",
    "name" : "Update a role",
    "request" : {
      "urlPath" : "/organisations/x3zk/roles/750e",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Directorship\",\n  \"relatedPartyRoleType\" : \"Association\",\n  \"partyRoleType\" : \"Member\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e0743c5c-93c0-3857-92d9-3d72a95f6c8d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Party Role resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "2016-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/roleId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "partyRoleType" : {
                "default" : "Employee",
                "description" : "The party's role type.",
                "enum" : [ "Director", "Employee", "Member", "Partner", "Trustee" ],
                "type" : "string"
              },
              "relatedPartyId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/partyId"
                } ],
                "description" : "The related party's unique identifier."
              },
              "relatedPartyRoleType" : {
                "default" : "Employer",
                "description" : "The related party's role type.",
                "enum" : [ "Association", "Company", "Employer", "Organisation", "Partnership", "Trust" ],
                "type" : "string"
              },
              "relationshipType" : {
                "default" : "Employment",
                "description" : "The relationship type.",
                "enum" : [ "Directorship", "Employment", "Membership", "Partnership", "Trusteeship" ],
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "required" : [ "relatedPartyId", "relationshipType" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "6ad70f7e-777f-34f3-b2c8-f386498dd160",
    "name" : "Retrieve a role",
    "request" : {
      "urlPath" : "/organisations/3or6/roles/6s54",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6ad70f7e-777f-34f3-b2c8-f386498dd160",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "645b1f80-a165-3e28-888b-93f6e1ee6478",
    "name" : "Retrieve a role",
    "request" : {
      "urlPath" : "/organisations/23n0/roles/62c9",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "645b1f80-a165-3e28-888b-93f6e1ee6478",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "e84d907d-04b6-3d7e-b8e9-b1b14b0d7fdc",
    "name" : "Retrieve a role",
    "request" : {
      "urlPath" : "/organisations/6h1k/roles/566x",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Trusteeship\",\n  \"relatedPartyRoleType\" : \"Organisation\",\n  \"partyRoleType\" : \"Partner\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e84d907d-04b6-3d7e-b8e9-b1b14b0d7fdc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Party Role resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "2016-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/roleId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "partyRoleType" : {
                "default" : "Employee",
                "description" : "The party's role type.",
                "enum" : [ "Director", "Employee", "Member", "Partner", "Trustee" ],
                "type" : "string"
              },
              "relatedPartyId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/partyId"
                } ],
                "description" : "The related party's unique identifier."
              },
              "relatedPartyRoleType" : {
                "default" : "Employer",
                "description" : "The related party's role type.",
                "enum" : [ "Association", "Company", "Employer", "Organisation", "Partnership", "Trust" ],
                "type" : "string"
              },
              "relationshipType" : {
                "default" : "Employment",
                "description" : "The relationship type.",
                "enum" : [ "Directorship", "Employment", "Membership", "Partnership", "Trusteeship" ],
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "required" : [ "relatedPartyId", "relationshipType" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "a1c09e74-b6df-33b2-b7c2-601157698c21",
    "name" : "Delete a role (application/json)",
    "request" : {
      "urlPath" : "/organisations/ms1d/roles/22tx",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a1c09e74-b6df-33b2-b7c2-601157698c21",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "43e2cfcd-5c76-3f17-a1c9-13a4d7acf84f",
    "name" : "Delete a role (application/json)",
    "request" : {
      "urlPath" : "/organisations/d798/roles/5525",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "43e2cfcd-5c76-3f17-a1c9-13a4d7acf84f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "cb5c8d84-2d1c-3942-91e8-d02fa7e1c836",
    "name" : "Delete a role - 204",
    "request" : {
      "urlPath" : "/organisations/wmt5/roles/5e16",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "cb5c8d84-2d1c-3942-91e8-d02fa7e1c836",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "657f1cf9-418b-3188-b294-64d2c489c66e",
    "name" : "Create a role",
    "request" : {
      "urlPath" : "/organisations/2der/roles",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "657f1cf9-418b-3188-b294-64d2c489c66e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "5a333612-ceb9-353d-a5bd-46cb95680a53",
    "name" : "Create a role",
    "request" : {
      "urlPath" : "/organisations/l0o1/roles",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5a333612-ceb9-353d-a5bd-46cb95680a53",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "b55b4cae-b2a2-3f86-b2c0-79fe1f4784da",
    "name" : "Create a role",
    "request" : {
      "urlPath" : "/organisations/28s7/roles",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Employment\",\n  \"relatedPartyRoleType\" : \"Association\",\n  \"partyRoleType\" : \"Director\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b55b4cae-b2a2-3f86-b2c0-79fe1f4784da",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Party Role resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "2016-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/roleId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "partyRoleType" : {
                "default" : "Employee",
                "description" : "The party's role type.",
                "enum" : [ "Director", "Employee", "Member", "Partner", "Trustee" ],
                "type" : "string"
              },
              "relatedPartyId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/partyId"
                } ],
                "description" : "The related party's unique identifier."
              },
              "relatedPartyRoleType" : {
                "default" : "Employer",
                "description" : "The related party's role type.",
                "enum" : [ "Association", "Company", "Employer", "Organisation", "Partnership", "Trust" ],
                "type" : "string"
              },
              "relationshipType" : {
                "default" : "Employment",
                "description" : "The relationship type.",
                "enum" : [ "Directorship", "Employment", "Membership", "Partnership", "Trusteeship" ],
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "required" : [ "relatedPartyId", "relationshipType" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "e0636406-7228-369f-b7d5-3d42001eafe5",
    "name" : "Retrieve a list of roles",
    "request" : {
      "urlPath" : "/organisations/a250/roles",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e0636406-7228-369f-b7d5-3d42001eafe5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "a1b6d0e6-5b31-33e8-8a75-23f4c0327732",
    "name" : "Retrieve a list of roles",
    "request" : {
      "urlPath" : "/organisations/0871/roles",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a1b6d0e6-5b31-33e8-8a75-23f4c0327732",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "bab5b863-0bbf-3192-8220-5bf49361ac4e",
    "name" : "Retrieve a list of roles",
    "request" : {
      "urlPath" : "/organisations/3033/roles",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Membership\",\n  \"relatedPartyRoleType\" : \"Association\",\n  \"partyRoleType\" : \"Employee\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Partnership\",\n  \"relatedPartyRoleType\" : \"Employer\",\n  \"partyRoleType\" : \"Partner\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Employment\",\n  \"relatedPartyRoleType\" : \"Association\",\n  \"partyRoleType\" : \"Member\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bab5b863-0bbf-3192-8220-5bf49361ac4e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/party-role"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "23653ccd-301e-3360-a31f-13cf271ca57a",
    "name" : "Update a license",
    "request" : {
      "urlPath" : "/organisations/4g4p/licenses/goe6",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "23653ccd-301e-3360-a31f-13cf271ca57a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "54c5b3c0-fff8-358e-a8c4-dc5486f55a3d",
    "name" : "Update a license",
    "request" : {
      "urlPath" : "/organisations/o0iy/licenses/ykyt",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "54c5b3c0-fff8-358e-a8c4-dc5486f55a3d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "a9ac92ad-ab21-3af2-947d-9b3a33ee3b3f",
    "name" : "Update a license",
    "request" : {
      "urlPath" : "/organisations/74q7/licenses/6xp3",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a9ac92ad-ab21-3af2-947d-9b3a33ee3b3f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "1885b7fe-30f9-3fbd-a2f0-b4d826b45027",
    "name" : "Update a license",
    "request" : {
      "urlPath" : "/organisations/v457/licenses/ux7e",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"Australian Financial Services License\",\n  \"lifecycleState\" : \"Pending Approval\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1885b7fe-30f9-3fbd-a2f0-b4d826b45027",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The License resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/resourceId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "licenseType" : {
                "default" : "Australian Financial Services License",
                "description" : "The license type.",
                "enum" : [ "Australian Financial Services License", "License 2B" ],
                "type" : "string"
              },
              "lifecycleState" : {
                "default" : "Pending Approval",
                "description" : "The business name's lifecycle state.",
                "enum" : [ "Approved", "Expired", "Issued", "Pending Approval", "Suspended" ],
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "601a0afb-e308-3848-8616-9989281ff2ee",
    "name" : "Retrieve a license",
    "request" : {
      "urlPath" : "/organisations/5w3t/licenses/mx21",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "601a0afb-e308-3848-8616-9989281ff2ee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "1e25b38c-a71d-346c-9a06-264f45ec85a0",
    "name" : "Retrieve a license",
    "request" : {
      "urlPath" : "/organisations/28gc/licenses/3fnz",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1e25b38c-a71d-346c-9a06-264f45ec85a0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "e46738e8-0c68-3c76-a711-53e0126a6f51",
    "name" : "Retrieve a license",
    "request" : {
      "urlPath" : "/organisations/963n/licenses/f155",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"Australian Financial Services License\",\n  \"lifecycleState\" : \"Suspended\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e46738e8-0c68-3c76-a711-53e0126a6f51",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The License resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/resourceId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "licenseType" : {
                "default" : "Australian Financial Services License",
                "description" : "The license type.",
                "enum" : [ "Australian Financial Services License", "License 2B" ],
                "type" : "string"
              },
              "lifecycleState" : {
                "default" : "Pending Approval",
                "description" : "The business name's lifecycle state.",
                "enum" : [ "Approved", "Expired", "Issued", "Pending Approval", "Suspended" ],
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "04360ebb-8b5c-3eea-9017-bb544e65e91a",
    "name" : "Delete a license (application/json)",
    "request" : {
      "urlPath" : "/organisations/0uat/licenses/3233",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "04360ebb-8b5c-3eea-9017-bb544e65e91a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "86636624-bd4a-3a05-8bb5-66505e44540d",
    "name" : "Delete a license (application/json)",
    "request" : {
      "urlPath" : "/organisations/3vz9/licenses/or3k",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "86636624-bd4a-3a05-8bb5-66505e44540d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "a56542b3-85d4-3e1c-a3b0-47c6fd4d34c3",
    "name" : "Delete a license - 204",
    "request" : {
      "urlPath" : "/organisations/j3b5/licenses/e2r2",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "a56542b3-85d4-3e1c-a3b0-47c6fd4d34c3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "fcdfed75-bbee-3bd7-8813-f0d6c3f1c5e9",
    "name" : "Create a license",
    "request" : {
      "urlPath" : "/organisations/m1g6/licenses",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fcdfed75-bbee-3bd7-8813-f0d6c3f1c5e9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "2b26403b-c608-3ae9-9eb0-c060e2d1e3ef",
    "name" : "Create a license",
    "request" : {
      "urlPath" : "/organisations/f446/licenses",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2b26403b-c608-3ae9-9eb0-c060e2d1e3ef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "f9766d7a-1e6c-33d0-b6ef-9600758f735a",
    "name" : "Create a license",
    "request" : {
      "urlPath" : "/organisations/35d3/licenses",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"Australian Financial Services License\",\n  \"lifecycleState\" : \"Pending Approval\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f9766d7a-1e6c-33d0-b6ef-9600758f735a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The License resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/resourceId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "licenseType" : {
                "default" : "Australian Financial Services License",
                "description" : "The license type.",
                "enum" : [ "Australian Financial Services License", "License 2B" ],
                "type" : "string"
              },
              "lifecycleState" : {
                "default" : "Pending Approval",
                "description" : "The business name's lifecycle state.",
                "enum" : [ "Approved", "Expired", "Issued", "Pending Approval", "Suspended" ],
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "7d4e55e5-5121-332f-bfe4-7912d91d3794",
    "name" : "Retrieve a list of licenses",
    "request" : {
      "urlPath" : "/organisations/53vw/licenses",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7d4e55e5-5121-332f-bfe4-7912d91d3794",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "e7ba1714-f3cc-31ad-8c1f-96994d7817f0",
    "name" : "Retrieve a list of licenses",
    "request" : {
      "urlPath" : "/organisations/s6v4/licenses",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e7ba1714-f3cc-31ad-8c1f-96994d7817f0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "ab0f6ac0-05fa-3ac5-98c9-c289e36c8d53",
    "name" : "Retrieve a list of licenses",
    "request" : {
      "urlPath" : "/organisations/3e41/licenses",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"License 2B\",\n  \"lifecycleState\" : \"Pending Approval\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"License 2B\",\n  \"lifecycleState\" : \"Expired\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ab0f6ac0-05fa-3ac5-98c9-c289e36c8d53",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/license"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "fe0fa842-cf43-3355-a530-09e2fc6f5fc9",
    "name" : "Update an electronic address",
    "request" : {
      "urlPath" : "/organisations/218q/electronic-addresses/ixn9",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fe0fa842-cf43-3355-a530-09e2fc6f5fc9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "3dc4f33e-c7c6-3684-ab05-98e7895b7cdb",
    "name" : "Update an electronic address",
    "request" : {
      "urlPath" : "/organisations/54mk/electronic-addresses/eyef",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3dc4f33e-c7c6-3684-ab05-98e7895b7cdb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "f4018853-2c9f-3ba1-8f92-c950b297e3ef",
    "name" : "Update an electronic address",
    "request" : {
      "urlPath" : "/organisations/7948/electronic-addresses/0864",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f4018853-2c9f-3ba1-8f92-c950b297e3ef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "1d7db3d9-89e9-3b3b-be69-603c116ac0c9",
    "name" : "Update an electronic address",
    "request" : {
      "urlPath" : "/organisations/7xhw/electronic-addresses/60p7",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"electronicAddressType\" : \"Email\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1d7db3d9-89e9-3b3b-be69-603c116ac0c9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Electronic Address resource.",
            "properties" : {
              "areaCode" : {
                "description" : "The area code, for example, \"02\".",
                "example" : "02",
                "type" : "string"
              },
              "countryPrefix" : {
                "description" : "The country prefix, for example, \"61\".",
                "example" : "61",
                "type" : "string"
              },
              "electronicAddressType" : {
                "default" : "Landline",
                "description" : "The electronic address type.",
                "enum" : [ "Email", "Fax", "Landline", "Mobile", "Website" ],
                "type" : "string"
              },
              "email" : {
                "description" : "The email address, for example, \"robert.ferguson@ato.gov.au\".",
                "example" : "",
                "type" : "string"
              },
              "extension" : {
                "description" : "The extension number, for example, \"4453\".",
                "example" : "",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/addressId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "number" : {
                "description" : "The number, for example, \"62164453\".",
                "example" : "62164453",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The website address, for example, \"https://ato.gov.au\".",
                "example" : "",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "22c89c13-0517-3385-849c-ab01f5cdb37a",
    "name" : "Retrieve an electronic address",
    "request" : {
      "urlPath" : "/organisations/svd1/electronic-addresses/x64g",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "22c89c13-0517-3385-849c-ab01f5cdb37a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "a15b2886-a302-3c4c-bb71-59dcc6ad47ea",
    "name" : "Retrieve an electronic address",
    "request" : {
      "urlPath" : "/organisations/8o24/electronic-addresses/hb73",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a15b2886-a302-3c4c-bb71-59dcc6ad47ea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "0f943294-59eb-3d9c-bc94-644a3260b1cf",
    "name" : "Retrieve an electronic address",
    "request" : {
      "urlPath" : "/organisations/49fv/electronic-addresses/7d31",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"electronicAddressType\" : \"Mobile\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0f943294-59eb-3d9c-bc94-644a3260b1cf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Electronic Address resource.",
            "properties" : {
              "areaCode" : {
                "description" : "The area code, for example, \"02\".",
                "example" : "02",
                "type" : "string"
              },
              "countryPrefix" : {
                "description" : "The country prefix, for example, \"61\".",
                "example" : "61",
                "type" : "string"
              },
              "electronicAddressType" : {
                "default" : "Landline",
                "description" : "The electronic address type.",
                "enum" : [ "Email", "Fax", "Landline", "Mobile", "Website" ],
                "type" : "string"
              },
              "email" : {
                "description" : "The email address, for example, \"robert.ferguson@ato.gov.au\".",
                "example" : "",
                "type" : "string"
              },
              "extension" : {
                "description" : "The extension number, for example, \"4453\".",
                "example" : "",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/addressId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "number" : {
                "description" : "The number, for example, \"62164453\".",
                "example" : "62164453",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The website address, for example, \"https://ato.gov.au\".",
                "example" : "",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "0b710057-ff78-3655-8364-4eed3bd4db8c",
    "name" : "Delete an electronic address (application/json)",
    "request" : {
      "urlPath" : "/organisations/hed7/electronic-addresses/49l9",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0b710057-ff78-3655-8364-4eed3bd4db8c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "4efde664-285a-336d-891a-30c1d71e6ee1",
    "name" : "Delete an electronic address (application/json)",
    "request" : {
      "urlPath" : "/organisations/01n8/electronic-addresses/y8bu",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4efde664-285a-336d-891a-30c1d71e6ee1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "123dcafe-00ed-32cd-bb9f-640ce82b6024",
    "name" : "Delete an electronic address - 204",
    "request" : {
      "urlPath" : "/organisations/o3rw/electronic-addresses/44u2",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "123dcafe-00ed-32cd-bb9f-640ce82b6024",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "79cd6374-a007-353b-9b9c-b517c7b96336",
    "name" : "Create an electronic address",
    "request" : {
      "urlPath" : "/organisations/i76d/electronic-addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "79cd6374-a007-353b-9b9c-b517c7b96336",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 42
  }, {
    "id" : "c51276a2-3ef8-340c-b6a9-88fb44bc3762",
    "name" : "Create an electronic address",
    "request" : {
      "urlPath" : "/organisations/7kj3/electronic-addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c51276a2-3ef8-340c-b6a9-88fb44bc3762",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 43
  }, {
    "id" : "928d6f4f-4b43-3327-9852-44330b6772f7",
    "name" : "Create an electronic address",
    "request" : {
      "urlPath" : "/organisations/4k55/electronic-addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"electronicAddressType\" : \"Email\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "928d6f4f-4b43-3327-9852-44330b6772f7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Electronic Address resource.",
            "properties" : {
              "areaCode" : {
                "description" : "The area code, for example, \"02\".",
                "example" : "02",
                "type" : "string"
              },
              "countryPrefix" : {
                "description" : "The country prefix, for example, \"61\".",
                "example" : "61",
                "type" : "string"
              },
              "electronicAddressType" : {
                "default" : "Landline",
                "description" : "The electronic address type.",
                "enum" : [ "Email", "Fax", "Landline", "Mobile", "Website" ],
                "type" : "string"
              },
              "email" : {
                "description" : "The email address, for example, \"robert.ferguson@ato.gov.au\".",
                "example" : "",
                "type" : "string"
              },
              "extension" : {
                "description" : "The extension number, for example, \"4453\".",
                "example" : "",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/addressId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "number" : {
                "description" : "The number, for example, \"62164453\".",
                "example" : "62164453",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The website address, for example, \"https://ato.gov.au\".",
                "example" : "",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 44
  }, {
    "id" : "9fc1c33d-4762-3fa4-9f14-1935872fd0d8",
    "name" : "Retrieve a list of electronic addresses",
    "request" : {
      "urlPath" : "/organisations/b1s7/electronic-addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9fc1c33d-4762-3fa4-9f14-1935872fd0d8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 45
  }, {
    "id" : "bf8c6f29-0196-3822-b74c-74ba2642347a",
    "name" : "Retrieve a list of electronic addresses",
    "request" : {
      "urlPath" : "/organisations/wa4c/electronic-addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bf8c6f29-0196-3822-b74c-74ba2642347a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 46
  }, {
    "id" : "986122b9-cd48-39f1-b7af-d0906d0af54d",
    "name" : "Retrieve a list of electronic addresses",
    "request" : {
      "urlPath" : "/organisations/gvx7/electronic-addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"electronicAddressType\" : \"Fax\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "986122b9-cd48-39f1-b7af-d0906d0af54d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/electronic-address"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 47
  }, {
    "id" : "50c22a79-ebc0-313c-aa62-3fa573800f5b",
    "name" : "Update a business name",
    "request" : {
      "urlPath" : "/organisations/e11x/business-names/5tru",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "50c22a79-ebc0-313c-aa62-3fa573800f5b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 48
  }, {
    "id" : "ba9c5122-aba1-389b-8d55-0c70f5ca91ea",
    "name" : "Update a business name",
    "request" : {
      "urlPath" : "/organisations/t9dp/business-names/0nc2",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ba9c5122-aba1-389b-8d55-0c70f5ca91ea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 49
  }, {
    "id" : "b90287ac-ada6-3fba-8ce7-dbddc5de4ba8",
    "name" : "Update a business name",
    "request" : {
      "urlPath" : "/organisations/urlq/business-names/u76q",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b90287ac-ada6-3fba-8ce7-dbddc5de4ba8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 50
  }, {
    "id" : "2330d19a-a014-3414-8162-9b3353c8ef6a",
    "name" : "Update a business name",
    "request" : {
      "urlPath" : "/organisations/5075/business-names/el82",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Approved\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2330d19a-a014-3414-8162-9b3353c8ef6a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Business Name resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/resourceId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "lifecycleState" : {
                "default" : "Pending Approval",
                "description" : "The business name's lifecycle state.",
                "enum" : [ "Approved", "Expired", "Issued", "Pending Approval", "Suspended" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The business name.",
                "example" : "XYZ Technology Ventures",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 51
  }, {
    "id" : "7f7fd353-855d-3476-b501-70cd393e9a7c",
    "name" : "Retrieve a business name",
    "request" : {
      "urlPath" : "/organisations/gai9/business-names/66c5",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7f7fd353-855d-3476-b501-70cd393e9a7c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 52
  }, {
    "id" : "699a41a8-9fa5-3a73-b5a5-1cc00a9b7708",
    "name" : "Retrieve a business name",
    "request" : {
      "urlPath" : "/organisations/8w2i/business-names/vn6d",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "699a41a8-9fa5-3a73-b5a5-1cc00a9b7708",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 53
  }, {
    "id" : "01db4e20-300a-359d-85ee-7419e6e0f3bc",
    "name" : "Retrieve a business name",
    "request" : {
      "urlPath" : "/organisations/7573/business-names/gjk7",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Expired\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "01db4e20-300a-359d-85ee-7419e6e0f3bc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Business Name resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/resourceId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "lifecycleState" : {
                "default" : "Pending Approval",
                "description" : "The business name's lifecycle state.",
                "enum" : [ "Approved", "Expired", "Issued", "Pending Approval", "Suspended" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The business name.",
                "example" : "XYZ Technology Ventures",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 54
  }, {
    "id" : "f3955e0f-7fc8-3bfd-8a0a-1cdbf909c47f",
    "name" : "Delete a business name (application/json)",
    "request" : {
      "urlPath" : "/organisations/5j91/business-names/bz0d",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f3955e0f-7fc8-3bfd-8a0a-1cdbf909c47f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 55
  }, {
    "id" : "8d159799-08a4-32b5-8ee0-b471f4ecee20",
    "name" : "Delete a business name (application/json)",
    "request" : {
      "urlPath" : "/organisations/i25e/business-names/hrm3",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8d159799-08a4-32b5-8ee0-b471f4ecee20",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 56
  }, {
    "id" : "89bd1766-fb17-3fce-819d-4f2258fc6341",
    "name" : "Delete a business name - 204",
    "request" : {
      "urlPath" : "/organisations/vg4b/business-names/82v3",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "89bd1766-fb17-3fce-819d-4f2258fc6341",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 57
  }, {
    "id" : "87239d49-74b3-3d1b-b4a4-92d96751bb4e",
    "name" : "Create a business name",
    "request" : {
      "urlPath" : "/organisations/j353/business-names",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "87239d49-74b3-3d1b-b4a4-92d96751bb4e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 58
  }, {
    "id" : "3110dd66-9469-3dea-ba7d-5839b821c404",
    "name" : "Create a business name",
    "request" : {
      "urlPath" : "/organisations/ceyv/business-names",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3110dd66-9469-3dea-ba7d-5839b821c404",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 59
  }, {
    "id" : "cc5695a0-8cab-3d9d-af93-10fa3ab5175c",
    "name" : "Create a business name",
    "request" : {
      "urlPath" : "/organisations/c1ik/business-names",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Suspended\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cc5695a0-8cab-3d9d-af93-10fa3ab5175c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Business Name resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/resourceId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "lifecycleState" : {
                "default" : "Pending Approval",
                "description" : "The business name's lifecycle state.",
                "enum" : [ "Approved", "Expired", "Issued", "Pending Approval", "Suspended" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The business name.",
                "example" : "XYZ Technology Ventures",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 60
  }, {
    "id" : "143737cd-00bd-3395-914b-2a86fdbf40d2",
    "name" : "Retrieve a list of business names",
    "request" : {
      "urlPath" : "/organisations/46c5/business-names",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "143737cd-00bd-3395-914b-2a86fdbf40d2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 61
  }, {
    "id" : "509401da-59b0-35c1-9de3-d40d3e3d80dd",
    "name" : "Retrieve a list of business names",
    "request" : {
      "urlPath" : "/organisations/6a96/business-names",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "509401da-59b0-35c1-9de3-d40d3e3d80dd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 62
  }, {
    "id" : "4739a22a-e2c4-338f-98bf-f9ef191fec3b",
    "name" : "Retrieve a list of business names",
    "request" : {
      "urlPath" : "/organisations/7d12/business-names",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Expired\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Suspended\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Issued\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4739a22a-e2c4-338f-98bf-f9ef191fec3b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/business-name"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 63
  }, {
    "id" : "97782011-61b7-3964-b702-d672f72f6701",
    "name" : "Update an address",
    "request" : {
      "urlPath" : "/organisations/o1rz/addresses/22ka",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "97782011-61b7-3964-b702-d672f72f6701",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 64
  }, {
    "id" : "848511a2-aa99-3245-9dbe-06a73572521d",
    "name" : "Update an address",
    "request" : {
      "urlPath" : "/organisations/eg1q/addresses/2703",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "848511a2-aa99-3245-9dbe-06a73572521d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 65
  }, {
    "id" : "83140e55-07c4-3e51-ae06-965f42ee96d1",
    "name" : "Update an address",
    "request" : {
      "urlPath" : "/organisations/7gbg/addresses/xd41",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "83140e55-07c4-3e51-ae06-965f42ee96d1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 66
  }, {
    "id" : "9d73a11f-39ca-3a74-aa41-32d29e0b5aa4",
    "name" : "Update an address",
    "request" : {
      "urlPath" : "/organisations/10j4/addresses/866f",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9d73a11f-39ca-3a74-aa41-32d29e0b5aa4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Address resource.",
            "properties" : {
              "city" : {
                "description" : "The city.",
                "example" : "Canberra",
                "type" : "string"
              },
              "country" : {
                "description" : "The country.",
                "example" : "Australia",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/addressId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "line1" : {
                "description" : "The address line 1.",
                "example" : "Level 7",
                "type" : "string"
              },
              "line2" : {
                "description" : "The address line 2.",
                "example" : "21 Genge Street",
                "type" : "string"
              },
              "line3" : {
                "description" : "The address line 3.",
                "example" : "",
                "type" : "string"
              },
              "name" : {
                "description" : "The address name.",
                "example" : "Kembery Building",
                "type" : "string"
              },
              "postalCode" : {
                "description" : "The postal code.",
                "example" : "2601",
                "type" : "string"
              },
              "suburb" : {
                "description" : "The suburb.",
                "example" : "Civic",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 67
  }, {
    "id" : "038f1ada-9b85-3dfa-80e8-8c5e8c22cfd1",
    "name" : "Retrieve an address",
    "request" : {
      "urlPath" : "/organisations/ja56/addresses/5252",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "038f1ada-9b85-3dfa-80e8-8c5e8c22cfd1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 68
  }, {
    "id" : "444188fe-7f7d-34b4-811a-6cd32356e522",
    "name" : "Retrieve an address",
    "request" : {
      "urlPath" : "/organisations/xd3x/addresses/pwec",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "444188fe-7f7d-34b4-811a-6cd32356e522",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 69
  }, {
    "id" : "12837018-6548-3c1b-b28a-a32f398b51b8",
    "name" : "Retrieve an address",
    "request" : {
      "urlPath" : "/organisations/3178/addresses/1k73",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "12837018-6548-3c1b-b28a-a32f398b51b8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Address resource.",
            "properties" : {
              "city" : {
                "description" : "The city.",
                "example" : "Canberra",
                "type" : "string"
              },
              "country" : {
                "description" : "The country.",
                "example" : "Australia",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/addressId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "line1" : {
                "description" : "The address line 1.",
                "example" : "Level 7",
                "type" : "string"
              },
              "line2" : {
                "description" : "The address line 2.",
                "example" : "21 Genge Street",
                "type" : "string"
              },
              "line3" : {
                "description" : "The address line 3.",
                "example" : "",
                "type" : "string"
              },
              "name" : {
                "description" : "The address name.",
                "example" : "Kembery Building",
                "type" : "string"
              },
              "postalCode" : {
                "description" : "The postal code.",
                "example" : "2601",
                "type" : "string"
              },
              "suburb" : {
                "description" : "The suburb.",
                "example" : "Civic",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 70
  }, {
    "id" : "4cb0764c-87ab-371d-b92e-6a29cc59448b",
    "name" : "Delete an address (application/json)",
    "request" : {
      "urlPath" : "/organisations/668c/addresses/ziq6",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4cb0764c-87ab-371d-b92e-6a29cc59448b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 71
  }, {
    "id" : "fe2eaa54-fcd6-3aed-bc17-9bc4d50baa2d",
    "name" : "Delete an address (application/json)",
    "request" : {
      "urlPath" : "/organisations/440a/addresses/d9w2",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fe2eaa54-fcd6-3aed-bc17-9bc4d50baa2d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 72
  }, {
    "id" : "ecbb8224-0494-351f-aab3-fb84a3dfc847",
    "name" : "Delete an address - 204",
    "request" : {
      "urlPath" : "/organisations/goop/addresses/1qb5",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "ecbb8224-0494-351f-aab3-fb84a3dfc847",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 73
  }, {
    "id" : "f5760ce0-f1ab-3385-957f-b7be77343c12",
    "name" : "Create an address",
    "request" : {
      "urlPath" : "/organisations/va47/addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f5760ce0-f1ab-3385-957f-b7be77343c12",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 74
  }, {
    "id" : "83cc74c1-f390-3812-ae98-02879c858b3e",
    "name" : "Create an address",
    "request" : {
      "urlPath" : "/organisations/f1k7/addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "83cc74c1-f390-3812-ae98-02879c858b3e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 75
  }, {
    "id" : "8a660d9f-7477-3651-bccd-c27e69ce1150",
    "name" : "Create an address",
    "request" : {
      "urlPath" : "/organisations/kmr4/addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8a660d9f-7477-3651-bccd-c27e69ce1150",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Address resource.",
            "properties" : {
              "city" : {
                "description" : "The city.",
                "example" : "Canberra",
                "type" : "string"
              },
              "country" : {
                "description" : "The country.",
                "example" : "Australia",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/addressId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "line1" : {
                "description" : "The address line 1.",
                "example" : "Level 7",
                "type" : "string"
              },
              "line2" : {
                "description" : "The address line 2.",
                "example" : "21 Genge Street",
                "type" : "string"
              },
              "line3" : {
                "description" : "The address line 3.",
                "example" : "",
                "type" : "string"
              },
              "name" : {
                "description" : "The address name.",
                "example" : "Kembery Building",
                "type" : "string"
              },
              "postalCode" : {
                "description" : "The postal code.",
                "example" : "2601",
                "type" : "string"
              },
              "suburb" : {
                "description" : "The suburb.",
                "example" : "Civic",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 76
  }, {
    "id" : "e11441d1-9863-3257-8e9a-bbaacf69d713",
    "name" : "Retrieve a list of addresses",
    "request" : {
      "urlPath" : "/organisations/78qp/addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e11441d1-9863-3257-8e9a-bbaacf69d713",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 77
  }, {
    "id" : "b9c29a77-f6b4-3add-b0b2-c1082f2dfcd0",
    "name" : "Retrieve a list of addresses",
    "request" : {
      "urlPath" : "/organisations/2149/addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b9c29a77-f6b4-3add-b0b2-c1082f2dfcd0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 78
  }, {
    "id" : "61be644e-6fb1-3790-9aca-40e8693d221c",
    "name" : "Retrieve a list of addresses",
    "request" : {
      "urlPath" : "/organisations/r8gx/addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "61be644e-6fb1-3790-9aca-40e8693d221c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/address"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 79
  }, {
    "id" : "20385e68-6153-3265-81ee-20e7950c2e77",
    "name" : "Update an organisation",
    "request" : {
      "urlPath" : "/organisations/6u96",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "20385e68-6153-3265-81ee-20e7950c2e77",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 80
  }, {
    "id" : "73c2590d-f653-33bf-8857-4190d4afed4a",
    "name" : "Update an organisation",
    "request" : {
      "urlPath" : "/organisations/c540",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "73c2590d-f653-33bf-8857-4190d4afed4a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 81
  }, {
    "id" : "205e533b-3909-38e7-a3ca-9aff4c19bfc2",
    "name" : "Update an organisation",
    "request" : {
      "urlPath" : "/organisations/1ju7",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "205e533b-3909-38e7-a3ca-9aff4c19bfc2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 82
  }, {
    "id" : "41dfc1fa-93fd-363c-b444-c72f607d1c21",
    "name" : "Update an organisation",
    "request" : {
      "urlPath" : "/organisations/w655",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"names\" : [ {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  } ],\n  \"establishmentDate\" : \"1928-03-03\",\n  \"legalEntityType\" : \"Partnership\",\n  \"toDate\" : \"\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"registeredIdentifiers\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  } ],\n  \"id\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "41dfc1fa-93fd-363c-b444-c72f607d1c21",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Organisation resource.",
            "properties" : {
              "addresses" : {
                "items" : {
                  "$ref" : "#/components/schemas/organisation-address"
                },
                "type" : "array"
              },
              "electronicAddresses" : {
                "items" : {
                  "$ref" : "#/components/schemas/electronic-address"
                },
                "type" : "array"
              },
              "establishmentDate" : {
                "description" : "The organisation's establishment date, for example, `1928-03-03` (in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format).",
                "example" : "1928-03-03",
                "format" : "date",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/partyId"
                } ],
                "description" : "The party's unique identifier.",
                "readOnly" : true
              },
              "legalEntityType" : {
                "default" : "Company",
                "description" : "The organisation's legal entity type.",
                "enum" : [ "Company", "Partnership", "Trust", "Joint Venture" ],
                "type" : "string"
              },
              "names" : {
                "items" : {
                  "$ref" : "#/components/schemas/organisation-name"
                },
                "type" : "array"
              },
              "registeredIdentifiers" : {
                "items" : {
                  "$ref" : "#/components/schemas/registered-identifier"
                },
                "type" : "array"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "required" : [ "legalEntityType", "establishmentDate" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 83
  }, {
    "id" : "9163946f-a59c-3bda-861f-7dd2d73d5961",
    "name" : "Retrieve an organisation",
    "request" : {
      "urlPath" : "/organisations/vr3g",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9163946f-a59c-3bda-861f-7dd2d73d5961",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 84
  }, {
    "id" : "7ab351fd-e00c-3463-addb-8d735859b187",
    "name" : "Retrieve an organisation",
    "request" : {
      "urlPath" : "/organisations/9d6y",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7ab351fd-e00c-3463-addb-8d735859b187",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 85
  }, {
    "id" : "329afd3a-544b-3c8f-bcc8-a7e07bf99133",
    "name" : "Retrieve an organisation",
    "request" : {
      "urlPath" : "/organisations/ugb1",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"names\" : [ {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  } ],\n  \"establishmentDate\" : \"1928-03-03\",\n  \"legalEntityType\" : \"Joint Venture\",\n  \"toDate\" : \"\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"registeredIdentifiers\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  } ],\n  \"id\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "329afd3a-544b-3c8f-bcc8-a7e07bf99133",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Organisation resource.",
            "properties" : {
              "addresses" : {
                "items" : {
                  "$ref" : "#/components/schemas/organisation-address"
                },
                "type" : "array"
              },
              "electronicAddresses" : {
                "items" : {
                  "$ref" : "#/components/schemas/electronic-address"
                },
                "type" : "array"
              },
              "establishmentDate" : {
                "description" : "The organisation's establishment date, for example, `1928-03-03` (in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format).",
                "example" : "1928-03-03",
                "format" : "date",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/partyId"
                } ],
                "description" : "The party's unique identifier.",
                "readOnly" : true
              },
              "legalEntityType" : {
                "default" : "Company",
                "description" : "The organisation's legal entity type.",
                "enum" : [ "Company", "Partnership", "Trust", "Joint Venture" ],
                "type" : "string"
              },
              "names" : {
                "items" : {
                  "$ref" : "#/components/schemas/organisation-name"
                },
                "type" : "array"
              },
              "registeredIdentifiers" : {
                "items" : {
                  "$ref" : "#/components/schemas/registered-identifier"
                },
                "type" : "array"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "required" : [ "legalEntityType", "establishmentDate" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 86
  }, {
    "id" : "a2006092-1654-34b0-b007-93ff522330d3",
    "name" : "Delete an organisation (application/json)",
    "request" : {
      "urlPath" : "/organisations/6k33",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a2006092-1654-34b0-b007-93ff522330d3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 87
  }, {
    "id" : "7c71b079-167f-3a40-8e7d-694449f173a6",
    "name" : "Delete an organisation (application/json)",
    "request" : {
      "urlPath" : "/organisations/852i",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7c71b079-167f-3a40-8e7d-694449f173a6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 88
  }, {
    "id" : "b646cef7-0696-3d6c-9c7b-e946d8459d7c",
    "name" : "Delete an organisation (application/json)",
    "request" : {
      "urlPath" : "/organisations/ejg4",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"Request can not be executed in the current system state\",\n  \"status\" : \"FAILED_PRECONDITION\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b646cef7-0696-3d6c-9c7b-e946d8459d7c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request can not be executed in the current system state",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "FAILED_PRECONDITION",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 89
  }, {
    "id" : "370dd900-82fb-3198-a4ea-01fdf5da5b11",
    "name" : "Delete an organisation - 204",
    "request" : {
      "urlPath" : "/organisations/3329",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "370dd900-82fb-3198-a4ea-01fdf5da5b11",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 90
  }, {
    "id" : "c2477124-1572-31c8-8d71-c5f130fd2bf6",
    "name" : "Create an organisation",
    "request" : {
      "urlPath" : "/organisations",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c2477124-1572-31c8-8d71-c5f130fd2bf6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 91
  }, {
    "id" : "eaa43a3b-55b9-3ab8-8cb3-270e586aed7d",
    "name" : "Create an organisation",
    "request" : {
      "urlPath" : "/organisations",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eaa43a3b-55b9-3ab8-8cb3-270e586aed7d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 92
  }, {
    "id" : "f67d7d70-5bcc-3766-9250-835ffedb2e19",
    "name" : "Create an organisation",
    "request" : {
      "urlPath" : "/organisations",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"names\" : [ {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  } ],\n  \"establishmentDate\" : \"1928-03-03\",\n  \"legalEntityType\" : \"Partnership\",\n  \"toDate\" : \"\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"registeredIdentifiers\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  } ],\n  \"id\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f67d7d70-5bcc-3766-9250-835ffedb2e19",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Organisation resource.",
            "properties" : {
              "addresses" : {
                "items" : {
                  "$ref" : "#/components/schemas/organisation-address"
                },
                "type" : "array"
              },
              "electronicAddresses" : {
                "items" : {
                  "$ref" : "#/components/schemas/electronic-address"
                },
                "type" : "array"
              },
              "establishmentDate" : {
                "description" : "The organisation's establishment date, for example, `1928-03-03` (in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format).",
                "example" : "1928-03-03",
                "format" : "date",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/partyId"
                } ],
                "description" : "The party's unique identifier.",
                "readOnly" : true
              },
              "legalEntityType" : {
                "default" : "Company",
                "description" : "The organisation's legal entity type.",
                "enum" : [ "Company", "Partnership", "Trust", "Joint Venture" ],
                "type" : "string"
              },
              "names" : {
                "items" : {
                  "$ref" : "#/components/schemas/organisation-name"
                },
                "type" : "array"
              },
              "registeredIdentifiers" : {
                "items" : {
                  "$ref" : "#/components/schemas/registered-identifier"
                },
                "type" : "array"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "required" : [ "legalEntityType", "establishmentDate" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 93
  }, {
    "id" : "1d413d38-0cb3-3082-91d0-1ea642d57326",
    "name" : "Retrieve a list of organisations",
    "request" : {
      "urlPath" : "/organisations",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1d413d38-0cb3-3082-91d0-1ea642d57326",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 94
  }, {
    "id" : "5812b1db-ad9d-35f4-8f68-714389040feb",
    "name" : "Retrieve a list of organisations",
    "request" : {
      "urlPath" : "/organisations",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5812b1db-ad9d-35f4-8f68-714389040feb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 95
  }, {
    "id" : "3cb11943-fed5-3c59-a7d2-7be0884a6905",
    "name" : "Retrieve a list of organisations",
    "request" : {
      "urlPath" : "/organisations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"names\" : [ {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  } ],\n  \"establishmentDate\" : \"1928-03-03\",\n  \"legalEntityType\" : \"Partnership\",\n  \"toDate\" : \"\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"registeredIdentifiers\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  } ],\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"names\" : [ {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  } ],\n  \"establishmentDate\" : \"1928-03-03\",\n  \"legalEntityType\" : \"Joint Venture\",\n  \"toDate\" : \"\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"registeredIdentifiers\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  } ],\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"names\" : [ {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  } ],\n  \"establishmentDate\" : \"1928-03-03\",\n  \"legalEntityType\" : \"Joint Venture\",\n  \"toDate\" : \"\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"registeredIdentifiers\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  } ],\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"names\" : [ {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  } ],\n  \"establishmentDate\" : \"1928-03-03\",\n  \"legalEntityType\" : \"Trust\",\n  \"toDate\" : \"\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"registeredIdentifiers\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  } ],\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"names\" : [ {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  } ],\n  \"establishmentDate\" : \"1928-03-03\",\n  \"legalEntityType\" : \"Company\",\n  \"toDate\" : \"\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"registeredIdentifiers\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  } ],\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"names\" : [ {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  } ],\n  \"establishmentDate\" : \"1928-03-03\",\n  \"legalEntityType\" : \"Partnership\",\n  \"toDate\" : \"\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"registeredIdentifiers\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  } ],\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"names\" : [ {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  } ],\n  \"establishmentDate\" : \"1928-03-03\",\n  \"legalEntityType\" : \"Joint Venture\",\n  \"toDate\" : \"\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"registeredIdentifiers\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  } ],\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"names\" : [ {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  } ],\n  \"establishmentDate\" : \"1928-03-03\",\n  \"legalEntityType\" : \"Joint Venture\",\n  \"toDate\" : \"\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"registeredIdentifiers\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  } ],\n  \"id\" : { }\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3cb11943-fed5-3c59-a7d2-7be0884a6905",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/organisation"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 96
  }, {
    "id" : "74d0bbe8-cdc4-3731-9374-538a5cb414f5",
    "name" : "Retrieve a list of licenses",
    "request" : {
      "urlPath" : "/licenses",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "74d0bbe8-cdc4-3731-9374-538a5cb414f5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 97
  }, {
    "id" : "db4627d1-fc13-3f73-8a22-83d034a30384",
    "name" : "Retrieve a list of licenses",
    "request" : {
      "urlPath" : "/licenses",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "db4627d1-fc13-3f73-8a22-83d034a30384",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 98
  }, {
    "id" : "a59e91df-f48d-3658-b20b-76a8f66c52a6",
    "name" : "Retrieve a list of licenses",
    "request" : {
      "urlPath" : "/licenses",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"Australian Financial Services License\",\n  \"lifecycleState\" : \"Suspended\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"Australian Financial Services License\",\n  \"lifecycleState\" : \"Suspended\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"License 2B\",\n  \"lifecycleState\" : \"Suspended\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"Australian Financial Services License\",\n  \"lifecycleState\" : \"Pending Approval\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"License 2B\",\n  \"lifecycleState\" : \"Suspended\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"License 2B\",\n  \"lifecycleState\" : \"Pending Approval\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"License 2B\",\n  \"lifecycleState\" : \"Suspended\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a59e91df-f48d-3658-b20b-76a8f66c52a6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/license"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 99
  }, {
    "id" : "1e8e4b32-65ad-3d3f-be52-5ace57197680",
    "name" : "Update a role",
    "request" : {
      "urlPath" : "/individuals/c4hu/roles/y090",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1e8e4b32-65ad-3d3f-be52-5ace57197680",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 100
  }, {
    "id" : "c6bf6677-9724-38f3-bba5-b963aae8a168",
    "name" : "Update a role",
    "request" : {
      "urlPath" : "/individuals/m249/roles/8d96",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c6bf6677-9724-38f3-bba5-b963aae8a168",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 101
  }, {
    "id" : "4dc819d5-ee12-3dbe-bfaa-aa9bb2a4df12",
    "name" : "Update a role",
    "request" : {
      "urlPath" : "/individuals/rhri/roles/401h",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4dc819d5-ee12-3dbe-bfaa-aa9bb2a4df12",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 102
  }, {
    "id" : "bb1234cf-8aa1-3748-a177-e12ca2817231",
    "name" : "Update a role",
    "request" : {
      "urlPath" : "/individuals/hh0z/roles/le8m",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Employment\",\n  \"relatedPartyRoleType\" : \"Company\",\n  \"partyRoleType\" : \"Director\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bb1234cf-8aa1-3748-a177-e12ca2817231",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Party Role resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "2016-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/roleId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "partyRoleType" : {
                "default" : "Employee",
                "description" : "The party's role type.",
                "enum" : [ "Director", "Employee", "Member", "Partner", "Trustee" ],
                "type" : "string"
              },
              "relatedPartyId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/partyId"
                } ],
                "description" : "The related party's unique identifier."
              },
              "relatedPartyRoleType" : {
                "default" : "Employer",
                "description" : "The related party's role type.",
                "enum" : [ "Association", "Company", "Employer", "Organisation", "Partnership", "Trust" ],
                "type" : "string"
              },
              "relationshipType" : {
                "default" : "Employment",
                "description" : "The relationship type.",
                "enum" : [ "Directorship", "Employment", "Membership", "Partnership", "Trusteeship" ],
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "required" : [ "relatedPartyId", "relationshipType" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 103
  }, {
    "id" : "72d8c09e-efe3-34f9-9c07-aa5f88757e53",
    "name" : "Retrieve a role",
    "request" : {
      "urlPath" : "/individuals/2jfu/roles/x3ey",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "72d8c09e-efe3-34f9-9c07-aa5f88757e53",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 104
  }, {
    "id" : "104a7703-7a0c-3254-be91-fe45920edacf",
    "name" : "Retrieve a role",
    "request" : {
      "urlPath" : "/individuals/c18a/roles/n9l3",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "104a7703-7a0c-3254-be91-fe45920edacf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 105
  }, {
    "id" : "31fe98f7-8460-3a44-8ee1-cebe124bb1f5",
    "name" : "Retrieve a role",
    "request" : {
      "urlPath" : "/individuals/1073/roles/ai63",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Directorship\",\n  \"relatedPartyRoleType\" : \"Employer\",\n  \"partyRoleType\" : \"Director\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "31fe98f7-8460-3a44-8ee1-cebe124bb1f5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Party Role resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "2016-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/roleId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "partyRoleType" : {
                "default" : "Employee",
                "description" : "The party's role type.",
                "enum" : [ "Director", "Employee", "Member", "Partner", "Trustee" ],
                "type" : "string"
              },
              "relatedPartyId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/partyId"
                } ],
                "description" : "The related party's unique identifier."
              },
              "relatedPartyRoleType" : {
                "default" : "Employer",
                "description" : "The related party's role type.",
                "enum" : [ "Association", "Company", "Employer", "Organisation", "Partnership", "Trust" ],
                "type" : "string"
              },
              "relationshipType" : {
                "default" : "Employment",
                "description" : "The relationship type.",
                "enum" : [ "Directorship", "Employment", "Membership", "Partnership", "Trusteeship" ],
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "required" : [ "relatedPartyId", "relationshipType" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 106
  }, {
    "id" : "c639f74c-b4f0-3c21-b3f6-56bc2cd5c879",
    "name" : "Delete a role (application/json)",
    "request" : {
      "urlPath" : "/individuals/ez8q/roles/4ip7",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c639f74c-b4f0-3c21-b3f6-56bc2cd5c879",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 107
  }, {
    "id" : "5140896f-2b2e-3f17-8ce0-50b614434a0c",
    "name" : "Delete a role (application/json)",
    "request" : {
      "urlPath" : "/individuals/b172/roles/6995",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5140896f-2b2e-3f17-8ce0-50b614434a0c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 108
  }, {
    "id" : "63a1260b-c9d4-364e-ab5f-1b52f54a3d6a",
    "name" : "Delete a role - 204",
    "request" : {
      "urlPath" : "/individuals/vltc/roles/32k2",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "63a1260b-c9d4-364e-ab5f-1b52f54a3d6a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 109
  }, {
    "id" : "8f036574-c78d-300b-adda-8a6979ad43f5",
    "name" : "Create a role",
    "request" : {
      "urlPath" : "/individuals/j3p7/roles",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8f036574-c78d-300b-adda-8a6979ad43f5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 110
  }, {
    "id" : "7512ab36-ceaf-3609-b120-d53450ec4ac9",
    "name" : "Create a role",
    "request" : {
      "urlPath" : "/individuals/04bh/roles",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7512ab36-ceaf-3609-b120-d53450ec4ac9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 111
  }, {
    "id" : "2ee36f85-3ad7-3001-ba2b-4411f0e4196e",
    "name" : "Create a role",
    "request" : {
      "urlPath" : "/individuals/56em/roles",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Membership\",\n  \"relatedPartyRoleType\" : \"Partnership\",\n  \"partyRoleType\" : \"Trustee\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2ee36f85-3ad7-3001-ba2b-4411f0e4196e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Party Role resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "2016-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/roleId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "partyRoleType" : {
                "default" : "Employee",
                "description" : "The party's role type.",
                "enum" : [ "Director", "Employee", "Member", "Partner", "Trustee" ],
                "type" : "string"
              },
              "relatedPartyId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/partyId"
                } ],
                "description" : "The related party's unique identifier."
              },
              "relatedPartyRoleType" : {
                "default" : "Employer",
                "description" : "The related party's role type.",
                "enum" : [ "Association", "Company", "Employer", "Organisation", "Partnership", "Trust" ],
                "type" : "string"
              },
              "relationshipType" : {
                "default" : "Employment",
                "description" : "The relationship type.",
                "enum" : [ "Directorship", "Employment", "Membership", "Partnership", "Trusteeship" ],
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "required" : [ "relatedPartyId", "relationshipType" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 112
  }, {
    "id" : "af0c0b47-4770-3932-8381-cc043b9b6727",
    "name" : "Retrieve a list of roles",
    "request" : {
      "urlPath" : "/individuals/x0ih/roles",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "af0c0b47-4770-3932-8381-cc043b9b6727",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 113
  }, {
    "id" : "0756f235-4ba7-30dd-9684-0aff7c98b434",
    "name" : "Retrieve a list of roles",
    "request" : {
      "urlPath" : "/individuals/a401/roles",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0756f235-4ba7-30dd-9684-0aff7c98b434",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 114
  }, {
    "id" : "8a88ba33-4fc0-350e-8348-fb5e793af371",
    "name" : "Retrieve a list of roles",
    "request" : {
      "urlPath" : "/individuals/n3lf/roles",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Membership\",\n  \"relatedPartyRoleType\" : \"Organisation\",\n  \"partyRoleType\" : \"Trustee\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Trusteeship\",\n  \"relatedPartyRoleType\" : \"Company\",\n  \"partyRoleType\" : \"Employee\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8a88ba33-4fc0-350e-8348-fb5e793af371",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/party-role"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 115
  }, {
    "id" : "181f20c0-2fe8-362d-a586-3ef7a6de2904",
    "name" : "Update a license",
    "request" : {
      "urlPath" : "/individuals/558i/licenses/24b5",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "181f20c0-2fe8-362d-a586-3ef7a6de2904",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 116
  }, {
    "id" : "9c4e3e69-5f53-3a75-9ee8-4b42e0534673",
    "name" : "Update a license",
    "request" : {
      "urlPath" : "/individuals/0jaa/licenses/cjna",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9c4e3e69-5f53-3a75-9ee8-4b42e0534673",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 117
  }, {
    "id" : "3a0f36c8-c3f8-3ea8-b026-68f06bb13f37",
    "name" : "Update a license",
    "request" : {
      "urlPath" : "/individuals/ug17/licenses/7i30",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3a0f36c8-c3f8-3ea8-b026-68f06bb13f37",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 118
  }, {
    "id" : "eda47cca-f8d6-3050-ba94-93e991f761e1",
    "name" : "Update a license",
    "request" : {
      "urlPath" : "/individuals/6co0/licenses/6a61",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"License 2B\",\n  \"lifecycleState\" : \"Pending Approval\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eda47cca-f8d6-3050-ba94-93e991f761e1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The License resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/resourceId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "licenseType" : {
                "default" : "Australian Financial Services License",
                "description" : "The license type.",
                "enum" : [ "Australian Financial Services License", "License 2B" ],
                "type" : "string"
              },
              "lifecycleState" : {
                "default" : "Pending Approval",
                "description" : "The business name's lifecycle state.",
                "enum" : [ "Approved", "Expired", "Issued", "Pending Approval", "Suspended" ],
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 119
  }, {
    "id" : "4a52850e-4a74-32c9-899d-cc4ce29ae3a9",
    "name" : "Retrieve a license",
    "request" : {
      "urlPath" : "/individuals/p7k1/licenses/01ry",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4a52850e-4a74-32c9-899d-cc4ce29ae3a9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 120
  }, {
    "id" : "1d891683-f2c7-3ca2-9903-a274a6d29322",
    "name" : "Retrieve a license",
    "request" : {
      "urlPath" : "/individuals/2u6o/licenses/nzfx",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1d891683-f2c7-3ca2-9903-a274a6d29322",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 121
  }, {
    "id" : "3cd72f24-ec38-3cfa-a70b-dfb7494ec47f",
    "name" : "Retrieve a license",
    "request" : {
      "urlPath" : "/individuals/4q14/licenses/nia4",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"License 2B\",\n  \"lifecycleState\" : \"Approved\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3cd72f24-ec38-3cfa-a70b-dfb7494ec47f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The License resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/resourceId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "licenseType" : {
                "default" : "Australian Financial Services License",
                "description" : "The license type.",
                "enum" : [ "Australian Financial Services License", "License 2B" ],
                "type" : "string"
              },
              "lifecycleState" : {
                "default" : "Pending Approval",
                "description" : "The business name's lifecycle state.",
                "enum" : [ "Approved", "Expired", "Issued", "Pending Approval", "Suspended" ],
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 122
  }, {
    "id" : "840b5f37-94c4-3945-9b11-22fb3b261f91",
    "name" : "Delete a license (application/json)",
    "request" : {
      "urlPath" : "/individuals/kbpw/licenses/0h01",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "840b5f37-94c4-3945-9b11-22fb3b261f91",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 123
  }, {
    "id" : "c487837b-2d8e-3936-be08-2fbb82727a5e",
    "name" : "Delete a license (application/json)",
    "request" : {
      "urlPath" : "/individuals/h4wg/licenses/84ij",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c487837b-2d8e-3936-be08-2fbb82727a5e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 124
  }, {
    "id" : "fd489c99-cbd2-35a1-b489-5db592098f4f",
    "name" : "Delete a license - 204",
    "request" : {
      "urlPath" : "/individuals/93ti/licenses/826w",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "fd489c99-cbd2-35a1-b489-5db592098f4f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 125
  }, {
    "id" : "70a66c9e-a748-3876-88bf-b632cbf8192c",
    "name" : "Create a license",
    "request" : {
      "urlPath" : "/individuals/5q33/licenses",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "70a66c9e-a748-3876-88bf-b632cbf8192c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 126
  }, {
    "id" : "4005b313-4fb6-32d2-890c-ea29701837bf",
    "name" : "Create a license",
    "request" : {
      "urlPath" : "/individuals/mkun/licenses",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4005b313-4fb6-32d2-890c-ea29701837bf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 127
  }, {
    "id" : "4691d9a0-32d8-3328-b947-d43636c27fd1",
    "name" : "Create a license",
    "request" : {
      "urlPath" : "/individuals/d4u3/licenses",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"Australian Financial Services License\",\n  \"lifecycleState\" : \"Suspended\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4691d9a0-32d8-3328-b947-d43636c27fd1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The License resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/resourceId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "licenseType" : {
                "default" : "Australian Financial Services License",
                "description" : "The license type.",
                "enum" : [ "Australian Financial Services License", "License 2B" ],
                "type" : "string"
              },
              "lifecycleState" : {
                "default" : "Pending Approval",
                "description" : "The business name's lifecycle state.",
                "enum" : [ "Approved", "Expired", "Issued", "Pending Approval", "Suspended" ],
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 128
  }, {
    "id" : "040d4a99-8335-36cf-8f8f-3f0ed7743921",
    "name" : "Retrieve a list of licenses",
    "request" : {
      "urlPath" : "/individuals/24hg/licenses",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "040d4a99-8335-36cf-8f8f-3f0ed7743921",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 129
  }, {
    "id" : "f67aa4d8-23b9-3b0c-b4e1-7b001298e222",
    "name" : "Retrieve a list of licenses",
    "request" : {
      "urlPath" : "/individuals/b3rm/licenses",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f67aa4d8-23b9-3b0c-b4e1-7b001298e222",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 130
  }, {
    "id" : "4a9db1b6-8a9d-321e-a285-834057c9842b",
    "name" : "Retrieve a list of licenses",
    "request" : {
      "urlPath" : "/individuals/wxz5/licenses",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"Australian Financial Services License\",\n  \"lifecycleState\" : \"Pending Approval\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4a9db1b6-8a9d-321e-a285-834057c9842b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/license"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 131
  }, {
    "id" : "53eb0762-b7fd-3651-a115-7186ce1743c1",
    "name" : "Update an electronic address",
    "request" : {
      "urlPath" : "/individuals/axi1/electronic-addresses/289v",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "53eb0762-b7fd-3651-a115-7186ce1743c1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 132
  }, {
    "id" : "26271be7-f4dc-3a97-b8d6-f1ef96fbf5d9",
    "name" : "Update an electronic address",
    "request" : {
      "urlPath" : "/individuals/qq35/electronic-addresses/devl",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "26271be7-f4dc-3a97-b8d6-f1ef96fbf5d9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 133
  }, {
    "id" : "e32d3135-a17f-3ace-a46b-8583ac79c139",
    "name" : "Update an electronic address",
    "request" : {
      "urlPath" : "/individuals/9ua9/electronic-addresses/9xer",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e32d3135-a17f-3ace-a46b-8583ac79c139",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 134
  }, {
    "id" : "532c2783-2e5f-38c3-91d9-82bb5fe89ca5",
    "name" : "Update an electronic address",
    "request" : {
      "urlPath" : "/individuals/ytm5/electronic-addresses/6z6l",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"electronicAddressType\" : \"Mobile\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "532c2783-2e5f-38c3-91d9-82bb5fe89ca5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Electronic Address resource.",
            "properties" : {
              "areaCode" : {
                "description" : "The area code, for example, \"02\".",
                "example" : "02",
                "type" : "string"
              },
              "countryPrefix" : {
                "description" : "The country prefix, for example, \"61\".",
                "example" : "61",
                "type" : "string"
              },
              "electronicAddressType" : {
                "default" : "Landline",
                "description" : "The electronic address type.",
                "enum" : [ "Email", "Fax", "Landline", "Mobile", "Website" ],
                "type" : "string"
              },
              "email" : {
                "description" : "The email address, for example, \"robert.ferguson@ato.gov.au\".",
                "example" : "",
                "type" : "string"
              },
              "extension" : {
                "description" : "The extension number, for example, \"4453\".",
                "example" : "",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/addressId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "number" : {
                "description" : "The number, for example, \"62164453\".",
                "example" : "62164453",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The website address, for example, \"https://ato.gov.au\".",
                "example" : "",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 135
  }, {
    "id" : "729a97a7-4f1c-31c5-8833-d8ed1fd40a3a",
    "name" : "Retrieve an electronic address",
    "request" : {
      "urlPath" : "/individuals/c5j4/electronic-addresses/t5ub",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "729a97a7-4f1c-31c5-8833-d8ed1fd40a3a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 136
  }, {
    "id" : "e9c07548-0bb6-312f-894c-b961763c41ae",
    "name" : "Retrieve an electronic address",
    "request" : {
      "urlPath" : "/individuals/52fn/electronic-addresses/58zd",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e9c07548-0bb6-312f-894c-b961763c41ae",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 137
  }, {
    "id" : "330b1fa5-2499-38dd-bdfd-93563c71565c",
    "name" : "Retrieve an electronic address",
    "request" : {
      "urlPath" : "/individuals/epq4/electronic-addresses/r97y",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"electronicAddressType\" : \"Fax\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "330b1fa5-2499-38dd-bdfd-93563c71565c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Electronic Address resource.",
            "properties" : {
              "areaCode" : {
                "description" : "The area code, for example, \"02\".",
                "example" : "02",
                "type" : "string"
              },
              "countryPrefix" : {
                "description" : "The country prefix, for example, \"61\".",
                "example" : "61",
                "type" : "string"
              },
              "electronicAddressType" : {
                "default" : "Landline",
                "description" : "The electronic address type.",
                "enum" : [ "Email", "Fax", "Landline", "Mobile", "Website" ],
                "type" : "string"
              },
              "email" : {
                "description" : "The email address, for example, \"robert.ferguson@ato.gov.au\".",
                "example" : "",
                "type" : "string"
              },
              "extension" : {
                "description" : "The extension number, for example, \"4453\".",
                "example" : "",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/addressId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "number" : {
                "description" : "The number, for example, \"62164453\".",
                "example" : "62164453",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The website address, for example, \"https://ato.gov.au\".",
                "example" : "",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 138
  }, {
    "id" : "6c18b755-9b3f-3489-8bdf-c5d8899db471",
    "name" : "Delete an electronic address (application/json)",
    "request" : {
      "urlPath" : "/individuals/gnu3/electronic-addresses/c3ea",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6c18b755-9b3f-3489-8bdf-c5d8899db471",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 139
  }, {
    "id" : "380f47bc-72c9-329c-8134-545bbcfb46a1",
    "name" : "Delete an electronic address (application/json)",
    "request" : {
      "urlPath" : "/individuals/eg0l/electronic-addresses/itrb",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "380f47bc-72c9-329c-8134-545bbcfb46a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 140
  }, {
    "id" : "bb9daf08-461a-39e4-b85a-344e17345108",
    "name" : "Delete an electronic address - 204",
    "request" : {
      "urlPath" : "/individuals/96u9/electronic-addresses/4c81",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "bb9daf08-461a-39e4-b85a-344e17345108",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 141
  }, {
    "id" : "ba4b5bbf-8794-38ec-a5a3-75e79f0347a1",
    "name" : "Create an electronic address",
    "request" : {
      "urlPath" : "/individuals/369a/electronic-addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ba4b5bbf-8794-38ec-a5a3-75e79f0347a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 142
  }, {
    "id" : "66f0cd79-34d5-3d6a-adc4-f75e515945c7",
    "name" : "Create an electronic address",
    "request" : {
      "urlPath" : "/individuals/t3hq/electronic-addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "66f0cd79-34d5-3d6a-adc4-f75e515945c7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 143
  }, {
    "id" : "b097ca7c-0f68-33f7-9fd1-7138082d0aad",
    "name" : "Create an electronic address",
    "request" : {
      "urlPath" : "/individuals/02og/electronic-addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"electronicAddressType\" : \"Mobile\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b097ca7c-0f68-33f7-9fd1-7138082d0aad",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Electronic Address resource.",
            "properties" : {
              "areaCode" : {
                "description" : "The area code, for example, \"02\".",
                "example" : "02",
                "type" : "string"
              },
              "countryPrefix" : {
                "description" : "The country prefix, for example, \"61\".",
                "example" : "61",
                "type" : "string"
              },
              "electronicAddressType" : {
                "default" : "Landline",
                "description" : "The electronic address type.",
                "enum" : [ "Email", "Fax", "Landline", "Mobile", "Website" ],
                "type" : "string"
              },
              "email" : {
                "description" : "The email address, for example, \"robert.ferguson@ato.gov.au\".",
                "example" : "",
                "type" : "string"
              },
              "extension" : {
                "description" : "The extension number, for example, \"4453\".",
                "example" : "",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/addressId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "number" : {
                "description" : "The number, for example, \"62164453\".",
                "example" : "62164453",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The website address, for example, \"https://ato.gov.au\".",
                "example" : "",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 144
  }, {
    "id" : "31746664-474e-3d62-a8ed-446353286dac",
    "name" : "Retrieve a list of electronic addresses",
    "request" : {
      "urlPath" : "/individuals/52ud/electronic-addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "31746664-474e-3d62-a8ed-446353286dac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 145
  }, {
    "id" : "a6fe8f0e-8f9b-3b1d-a86b-83c2d2c99ea8",
    "name" : "Retrieve a list of electronic addresses",
    "request" : {
      "urlPath" : "/individuals/3jmo/electronic-addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a6fe8f0e-8f9b-3b1d-a86b-83c2d2c99ea8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 146
  }, {
    "id" : "1e0af87b-0ae1-3ddb-85e7-b280d034fda0",
    "name" : "Retrieve a list of electronic addresses",
    "request" : {
      "urlPath" : "/individuals/7gvc/electronic-addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"electronicAddressType\" : \"Mobile\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n}, {\n  \"electronicAddressType\" : \"Fax\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1e0af87b-0ae1-3ddb-85e7-b280d034fda0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/electronic-address"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 147
  }, {
    "id" : "0741fa7f-7f27-3b53-8ed7-0db649714028",
    "name" : "Update a business name",
    "request" : {
      "urlPath" : "/individuals/8o5g/business-names/z7g0",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0741fa7f-7f27-3b53-8ed7-0db649714028",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 148
  }, {
    "id" : "95672887-1656-3616-9c8d-3b1fab231f8a",
    "name" : "Update a business name",
    "request" : {
      "urlPath" : "/individuals/1jx9/business-names/6dt6",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "95672887-1656-3616-9c8d-3b1fab231f8a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 149
  }, {
    "id" : "f4e87331-9581-3b67-b1e0-b454792708fa",
    "name" : "Update a business name",
    "request" : {
      "urlPath" : "/individuals/1q7a/business-names/d883",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f4e87331-9581-3b67-b1e0-b454792708fa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 150
  }, {
    "id" : "77c9bb7f-d993-3663-bf17-217f9b9f97b5",
    "name" : "Update a business name",
    "request" : {
      "urlPath" : "/individuals/769q/business-names/9407",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Expired\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "77c9bb7f-d993-3663-bf17-217f9b9f97b5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Business Name resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/resourceId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "lifecycleState" : {
                "default" : "Pending Approval",
                "description" : "The business name's lifecycle state.",
                "enum" : [ "Approved", "Expired", "Issued", "Pending Approval", "Suspended" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The business name.",
                "example" : "XYZ Technology Ventures",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 151
  }, {
    "id" : "99b24f98-f54c-3027-8f17-73e9873bc3c7",
    "name" : "Retrieve a business name",
    "request" : {
      "urlPath" : "/individuals/75g3/business-names/q62c",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "99b24f98-f54c-3027-8f17-73e9873bc3c7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 152
  }, {
    "id" : "ce7e2969-1e4b-3483-9b49-0073a600ecdd",
    "name" : "Retrieve a business name",
    "request" : {
      "urlPath" : "/individuals/45js/business-names/98qo",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ce7e2969-1e4b-3483-9b49-0073a600ecdd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 153
  }, {
    "id" : "ffde1874-ee06-322f-b037-2fd349ff7413",
    "name" : "Retrieve a business name",
    "request" : {
      "urlPath" : "/individuals/93ft/business-names/k06j",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Approved\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ffde1874-ee06-322f-b037-2fd349ff7413",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Business Name resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/resourceId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "lifecycleState" : {
                "default" : "Pending Approval",
                "description" : "The business name's lifecycle state.",
                "enum" : [ "Approved", "Expired", "Issued", "Pending Approval", "Suspended" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The business name.",
                "example" : "XYZ Technology Ventures",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 154
  }, {
    "id" : "45862426-4255-304d-810f-a91a54b3a494",
    "name" : "Delete a business name (application/json)",
    "request" : {
      "urlPath" : "/individuals/a1b4/business-names/2518",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "45862426-4255-304d-810f-a91a54b3a494",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 155
  }, {
    "id" : "63fda96b-f6c7-3ba1-bb39-14ad8f2241ab",
    "name" : "Delete a business name (application/json)",
    "request" : {
      "urlPath" : "/individuals/211c/business-names/79d2",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "63fda96b-f6c7-3ba1-bb39-14ad8f2241ab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 156
  }, {
    "id" : "7655eb15-b6de-31e1-ba75-e0ca2f7348cd",
    "name" : "Delete a business name - 204",
    "request" : {
      "urlPath" : "/individuals/2u6d/business-names/23o8",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "7655eb15-b6de-31e1-ba75-e0ca2f7348cd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 157
  }, {
    "id" : "e43fc258-c05e-3768-ac38-27acde84ff51",
    "name" : "Create a business name",
    "request" : {
      "urlPath" : "/individuals/7e9x/business-names",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e43fc258-c05e-3768-ac38-27acde84ff51",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 158
  }, {
    "id" : "dd413925-a3ec-3a95-8416-4dfad6f42411",
    "name" : "Create a business name",
    "request" : {
      "urlPath" : "/individuals/uiiv/business-names",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dd413925-a3ec-3a95-8416-4dfad6f42411",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 159
  }, {
    "id" : "8c99223c-2354-350d-ba40-b743edd1fca7",
    "name" : "Create a business name",
    "request" : {
      "urlPath" : "/individuals/8c3k/business-names",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Approved\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8c99223c-2354-350d-ba40-b743edd1fca7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Business Name resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/resourceId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "lifecycleState" : {
                "default" : "Pending Approval",
                "description" : "The business name's lifecycle state.",
                "enum" : [ "Approved", "Expired", "Issued", "Pending Approval", "Suspended" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The business name.",
                "example" : "XYZ Technology Ventures",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 160
  }, {
    "id" : "12ad97a1-82b3-3f34-b386-62c6bdae851b",
    "name" : "Retrieve a list of business names",
    "request" : {
      "urlPath" : "/individuals/7i28/business-names",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "12ad97a1-82b3-3f34-b386-62c6bdae851b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 161
  }, {
    "id" : "e269fa73-d67f-30d9-8f33-3b5142eae828",
    "name" : "Retrieve a list of business names",
    "request" : {
      "urlPath" : "/individuals/cqt9/business-names",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e269fa73-d67f-30d9-8f33-3b5142eae828",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 162
  }, {
    "id" : "14ffdd85-63f4-3966-aa5e-a251cc6e774a",
    "name" : "Retrieve a list of business names",
    "request" : {
      "urlPath" : "/individuals/5np9/business-names",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Expired\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Suspended\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Issued\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "14ffdd85-63f4-3966-aa5e-a251cc6e774a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/business-name"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 163
  }, {
    "id" : "83a005c9-bf36-3562-9281-957b373356f1",
    "name" : "Update an address",
    "request" : {
      "urlPath" : "/individuals/7rsa/addresses/002a",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "83a005c9-bf36-3562-9281-957b373356f1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 164
  }, {
    "id" : "58d3d173-8d9a-3fd4-bc37-4445081f1763",
    "name" : "Update an address",
    "request" : {
      "urlPath" : "/individuals/7871/addresses/29b1",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "58d3d173-8d9a-3fd4-bc37-4445081f1763",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 165
  }, {
    "id" : "927835fb-ce25-3e77-85b1-71c0cd7d16f1",
    "name" : "Update an address",
    "request" : {
      "urlPath" : "/individuals/2vsr/addresses/xi57",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "927835fb-ce25-3e77-85b1-71c0cd7d16f1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 166
  }, {
    "id" : "6354d692-6052-3975-8337-f99cd90c2661",
    "name" : "Update an address",
    "request" : {
      "urlPath" : "/individuals/2ocr/addresses/17wp",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6354d692-6052-3975-8337-f99cd90c2661",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Address resource.",
            "properties" : {
              "city" : {
                "description" : "The city.",
                "example" : "Canberra",
                "type" : "string"
              },
              "country" : {
                "description" : "The country.",
                "example" : "Australia",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/addressId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "line1" : {
                "description" : "The address line 1.",
                "example" : "Level 7",
                "type" : "string"
              },
              "line2" : {
                "description" : "The address line 2.",
                "example" : "21 Genge Street",
                "type" : "string"
              },
              "line3" : {
                "description" : "The address line 3.",
                "example" : "",
                "type" : "string"
              },
              "name" : {
                "description" : "The address name.",
                "example" : "Kembery Building",
                "type" : "string"
              },
              "postalCode" : {
                "description" : "The postal code.",
                "example" : "2601",
                "type" : "string"
              },
              "suburb" : {
                "description" : "The suburb.",
                "example" : "Civic",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 167
  }, {
    "id" : "70f84d77-0193-3078-ac8f-ebe96a7d36c9",
    "name" : "Retrieve an address",
    "request" : {
      "urlPath" : "/individuals/06gz/addresses/7kc4",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "70f84d77-0193-3078-ac8f-ebe96a7d36c9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 168
  }, {
    "id" : "7cd45f0d-b6bf-38ae-9309-0f678dbad4a3",
    "name" : "Retrieve an address",
    "request" : {
      "urlPath" : "/individuals/5r15/addresses/7333",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7cd45f0d-b6bf-38ae-9309-0f678dbad4a3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 169
  }, {
    "id" : "c67ce27d-8312-3b06-b7a7-5603b7207ed5",
    "name" : "Retrieve an address",
    "request" : {
      "urlPath" : "/individuals/qp8b/addresses/y814",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c67ce27d-8312-3b06-b7a7-5603b7207ed5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Address resource.",
            "properties" : {
              "city" : {
                "description" : "The city.",
                "example" : "Canberra",
                "type" : "string"
              },
              "country" : {
                "description" : "The country.",
                "example" : "Australia",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/addressId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "line1" : {
                "description" : "The address line 1.",
                "example" : "Level 7",
                "type" : "string"
              },
              "line2" : {
                "description" : "The address line 2.",
                "example" : "21 Genge Street",
                "type" : "string"
              },
              "line3" : {
                "description" : "The address line 3.",
                "example" : "",
                "type" : "string"
              },
              "name" : {
                "description" : "The address name.",
                "example" : "Kembery Building",
                "type" : "string"
              },
              "postalCode" : {
                "description" : "The postal code.",
                "example" : "2601",
                "type" : "string"
              },
              "suburb" : {
                "description" : "The suburb.",
                "example" : "Civic",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 170
  }, {
    "id" : "30ef7411-0918-3600-b536-3c78a4f5f826",
    "name" : "Delete an address (application/json)",
    "request" : {
      "urlPath" : "/individuals/9f90/addresses/ws1t",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "30ef7411-0918-3600-b536-3c78a4f5f826",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 171
  }, {
    "id" : "f902cc12-0ba8-3a2f-b48e-a33851967949",
    "name" : "Delete an address (application/json)",
    "request" : {
      "urlPath" : "/individuals/3qe9/addresses/cp97",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f902cc12-0ba8-3a2f-b48e-a33851967949",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 172
  }, {
    "id" : "bbfc333c-ba5e-3eef-b671-6f36f71d4718",
    "name" : "Delete an address - 204",
    "request" : {
      "urlPath" : "/individuals/ml43/addresses/mbud",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "bbfc333c-ba5e-3eef-b671-6f36f71d4718",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 173
  }, {
    "id" : "1c25295d-14e6-3df0-82ce-7299ef7b2564",
    "name" : "Create an address",
    "request" : {
      "urlPath" : "/individuals/70nk/addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1c25295d-14e6-3df0-82ce-7299ef7b2564",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 174
  }, {
    "id" : "8e3d9499-eb77-36bb-b08e-10af82336cdd",
    "name" : "Create an address",
    "request" : {
      "urlPath" : "/individuals/3060/addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8e3d9499-eb77-36bb-b08e-10af82336cdd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 175
  }, {
    "id" : "049a058d-225a-313d-91ad-9e994de10b73",
    "name" : "Create an address",
    "request" : {
      "urlPath" : "/individuals/b7t4/addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "049a058d-225a-313d-91ad-9e994de10b73",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Address resource.",
            "properties" : {
              "city" : {
                "description" : "The city.",
                "example" : "Canberra",
                "type" : "string"
              },
              "country" : {
                "description" : "The country.",
                "example" : "Australia",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/addressId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "line1" : {
                "description" : "The address line 1.",
                "example" : "Level 7",
                "type" : "string"
              },
              "line2" : {
                "description" : "The address line 2.",
                "example" : "21 Genge Street",
                "type" : "string"
              },
              "line3" : {
                "description" : "The address line 3.",
                "example" : "",
                "type" : "string"
              },
              "name" : {
                "description" : "The address name.",
                "example" : "Kembery Building",
                "type" : "string"
              },
              "postalCode" : {
                "description" : "The postal code.",
                "example" : "2601",
                "type" : "string"
              },
              "suburb" : {
                "description" : "The suburb.",
                "example" : "Civic",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 176
  }, {
    "id" : "03db4b04-5862-3cd5-aa8b-e621246cfe12",
    "name" : "Retrieve a list of addresses",
    "request" : {
      "urlPath" : "/individuals/kn8q/addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "03db4b04-5862-3cd5-aa8b-e621246cfe12",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 177
  }, {
    "id" : "18ae96c3-cc9e-308f-892d-166a384eb709",
    "name" : "Retrieve a list of addresses",
    "request" : {
      "urlPath" : "/individuals/0ed7/addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "18ae96c3-cc9e-308f-892d-166a384eb709",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 178
  }, {
    "id" : "b9c05d5d-c8cd-376d-9e98-379312f0493b",
    "name" : "Retrieve a list of addresses",
    "request" : {
      "urlPath" : "/individuals/cn43/addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b9c05d5d-c8cd-376d-9e98-379312f0493b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/address"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 179
  }, {
    "id" : "5f402e17-5b4f-3d82-9299-dd6e7c0db10d",
    "name" : "Update an individual",
    "request" : {
      "urlPath" : "/individuals/k1jn",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5f402e17-5b4f-3d82-9299-dd6e7c0db10d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 180
  }, {
    "id" : "451eb590-e704-394c-a2e0-a131d8758004",
    "name" : "Update an individual",
    "request" : {
      "urlPath" : "/individuals/71c0",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "451eb590-e704-394c-a2e0-a131d8758004",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 181
  }, {
    "id" : "7e2ce784-8fc3-3edb-a6a8-9e62c1877e68",
    "name" : "Update an individual",
    "request" : {
      "urlPath" : "/individuals/34kp",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7e2ce784-8fc3-3edb-a6a8-9e62c1877e68",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 182
  }, {
    "id" : "ce75f929-a5b3-3f59-8937-a2c30e2c23eb",
    "name" : "Update an individual",
    "request" : {
      "urlPath" : "/individuals/5i52",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Residence\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"placeOfBirth\" : \"Tamworth\",\n  \"names\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  } ],\n  \"gender\" : \"Male\",\n  \"toDate\" : \"\",\n  \"dateOfBirth\" : \"1979-01-13\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"id\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ce75f929-a5b3-3f59-8937-a2c30e2c23eb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Individual resource.",
            "properties" : {
              "addresses" : {
                "items" : {
                  "$ref" : "#/components/schemas/individual-address"
                },
                "type" : "array"
              },
              "dateOfBirth" : {
                "description" : "The individual's date of birth, for example, `1979-01-13` (in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format).",
                "example" : "1979-01-13",
                "format" : "date",
                "type" : "string"
              },
              "electronicAddresses" : {
                "items" : {
                  "$ref" : "#/components/schemas/electronic-address"
                },
                "type" : "array"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "gender" : {
                "default" : "Male",
                "description" : "The individual's gender.",
                "enum" : [ "Female", "Male", "Not Applicable", "Not Known" ],
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/partyId"
                } ],
                "description" : "The party's unique identifier.",
                "readOnly" : true
              },
              "names" : {
                "items" : {
                  "$ref" : "#/components/schemas/individual-name"
                },
                "type" : "array"
              },
              "placeOfBirth" : {
                "description" : "The individual's place of birth, for example, `Tamworth`.",
                "example" : "Tamworth",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "required" : [ "dateOfBirth", "placeOfBirth" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 183
  }, {
    "id" : "1275b411-f42a-3886-b5ca-943d23fec898",
    "name" : "Retrieve an individual",
    "request" : {
      "urlPath" : "/individuals/7q8o",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1275b411-f42a-3886-b5ca-943d23fec898",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 184
  }, {
    "id" : "78cfd284-557a-3d46-a822-7a313a4e136a",
    "name" : "Retrieve an individual",
    "request" : {
      "urlPath" : "/individuals/ewen",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "78cfd284-557a-3d46-a822-7a313a4e136a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 185
  }, {
    "id" : "ed5fd04e-6bfd-3348-9206-8a24fc0cb254",
    "name" : "Retrieve an individual",
    "request" : {
      "urlPath" : "/individuals/ikt1",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Residence\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"placeOfBirth\" : \"Tamworth\",\n  \"names\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  } ],\n  \"gender\" : \"Female\",\n  \"toDate\" : \"\",\n  \"dateOfBirth\" : \"1979-01-13\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"id\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ed5fd04e-6bfd-3348-9206-8a24fc0cb254",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Individual resource.",
            "properties" : {
              "addresses" : {
                "items" : {
                  "$ref" : "#/components/schemas/individual-address"
                },
                "type" : "array"
              },
              "dateOfBirth" : {
                "description" : "The individual's date of birth, for example, `1979-01-13` (in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format).",
                "example" : "1979-01-13",
                "format" : "date",
                "type" : "string"
              },
              "electronicAddresses" : {
                "items" : {
                  "$ref" : "#/components/schemas/electronic-address"
                },
                "type" : "array"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "gender" : {
                "default" : "Male",
                "description" : "The individual's gender.",
                "enum" : [ "Female", "Male", "Not Applicable", "Not Known" ],
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/partyId"
                } ],
                "description" : "The party's unique identifier.",
                "readOnly" : true
              },
              "names" : {
                "items" : {
                  "$ref" : "#/components/schemas/individual-name"
                },
                "type" : "array"
              },
              "placeOfBirth" : {
                "description" : "The individual's place of birth, for example, `Tamworth`.",
                "example" : "Tamworth",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "required" : [ "dateOfBirth", "placeOfBirth" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 186
  }, {
    "id" : "ef09946a-3ef3-3327-87d6-4928c1355671",
    "name" : "Delete an individual (application/json)",
    "request" : {
      "urlPath" : "/individuals/7ilg",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ef09946a-3ef3-3327-87d6-4928c1355671",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 187
  }, {
    "id" : "31353865-a280-3289-a252-4fefc02f8726",
    "name" : "Delete an individual (application/json)",
    "request" : {
      "urlPath" : "/individuals/avo5",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "31353865-a280-3289-a252-4fefc02f8726",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 188
  }, {
    "id" : "43a6bb60-6c12-3b57-b63c-726117549431",
    "name" : "Delete an individual (application/json)",
    "request" : {
      "urlPath" : "/individuals/x301",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"Request can not be executed in the current system state\",\n  \"status\" : \"FAILED_PRECONDITION\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "43a6bb60-6c12-3b57-b63c-726117549431",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request can not be executed in the current system state",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "FAILED_PRECONDITION",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 189
  }, {
    "id" : "5531b4c4-d03a-34b8-a43a-aa3168bede3c",
    "name" : "Delete an individual - 204",
    "request" : {
      "urlPath" : "/individuals/z4bk",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "5531b4c4-d03a-34b8-a43a-aa3168bede3c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 190
  }, {
    "id" : "4456e764-d282-38b4-be33-ed66cd0b736c",
    "name" : "Create an individual",
    "request" : {
      "urlPath" : "/individuals",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4456e764-d282-38b4-be33-ed66cd0b736c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 191
  }, {
    "id" : "6cc1134f-89f6-3219-a79e-4e4151e72c66",
    "name" : "Create an individual",
    "request" : {
      "urlPath" : "/individuals",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6cc1134f-89f6-3219-a79e-4e4151e72c66",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 192
  }, {
    "id" : "babbbf29-3755-3fe2-b001-88b6c68994ec",
    "name" : "Create an individual",
    "request" : {
      "urlPath" : "/individuals",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"placeOfBirth\" : \"Tamworth\",\n  \"names\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  } ],\n  \"gender\" : \"Not Applicable\",\n  \"toDate\" : \"\",\n  \"dateOfBirth\" : \"1979-01-13\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"id\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "babbbf29-3755-3fe2-b001-88b6c68994ec",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Individual resource.",
            "properties" : {
              "addresses" : {
                "items" : {
                  "$ref" : "#/components/schemas/individual-address"
                },
                "type" : "array"
              },
              "dateOfBirth" : {
                "description" : "The individual's date of birth, for example, `1979-01-13` (in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format).",
                "example" : "1979-01-13",
                "format" : "date",
                "type" : "string"
              },
              "electronicAddresses" : {
                "items" : {
                  "$ref" : "#/components/schemas/electronic-address"
                },
                "type" : "array"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "gender" : {
                "default" : "Male",
                "description" : "The individual's gender.",
                "enum" : [ "Female", "Male", "Not Applicable", "Not Known" ],
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/partyId"
                } ],
                "description" : "The party's unique identifier.",
                "readOnly" : true
              },
              "names" : {
                "items" : {
                  "$ref" : "#/components/schemas/individual-name"
                },
                "type" : "array"
              },
              "placeOfBirth" : {
                "description" : "The individual's place of birth, for example, `Tamworth`.",
                "example" : "Tamworth",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "required" : [ "dateOfBirth", "placeOfBirth" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 193
  }, {
    "id" : "38fa8e75-d044-32e0-bdd6-b821d2e19291",
    "name" : "Retrieve a list of individuals",
    "request" : {
      "urlPath" : "/individuals",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "38fa8e75-d044-32e0-bdd6-b821d2e19291",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 194
  }, {
    "id" : "b3782e1e-b609-38a1-9d12-6eadb432e0ca",
    "name" : "Retrieve a list of individuals",
    "request" : {
      "urlPath" : "/individuals",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b3782e1e-b609-38a1-9d12-6eadb432e0ca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 195
  }, {
    "id" : "ddb8d361-df9f-3fca-8093-99ff84cdf20e",
    "name" : "Retrieve a list of individuals",
    "request" : {
      "urlPath" : "/individuals",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"placeOfBirth\" : \"Tamworth\",\n  \"names\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  } ],\n  \"gender\" : \"Not Applicable\",\n  \"toDate\" : \"\",\n  \"dateOfBirth\" : \"1979-01-13\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Residence\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Residence\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"placeOfBirth\" : \"Tamworth\",\n  \"names\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  } ],\n  \"gender\" : \"Female\",\n  \"toDate\" : \"\",\n  \"dateOfBirth\" : \"1979-01-13\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Residence\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Residence\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"placeOfBirth\" : \"Tamworth\",\n  \"names\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  } ],\n  \"gender\" : \"Male\",\n  \"toDate\" : \"\",\n  \"dateOfBirth\" : \"1979-01-13\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"placeOfBirth\" : \"Tamworth\",\n  \"names\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  } ],\n  \"gender\" : \"Female\",\n  \"toDate\" : \"\",\n  \"dateOfBirth\" : \"1979-01-13\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Residence\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Residence\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"placeOfBirth\" : \"Tamworth\",\n  \"names\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  } ],\n  \"gender\" : \"Male\",\n  \"toDate\" : \"\",\n  \"dateOfBirth\" : \"1979-01-13\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Residence\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"placeOfBirth\" : \"Tamworth\",\n  \"names\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  } ],\n  \"gender\" : \"Male\",\n  \"toDate\" : \"\",\n  \"dateOfBirth\" : \"1979-01-13\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"id\" : { }\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ddb8d361-df9f-3fca-8093-99ff84cdf20e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/individual"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 196
  }, {
    "id" : "b223f1a8-2202-3664-ad7a-984a68386b92",
    "name" : "Retrieve a list of roles",
    "request" : {
      "urlPath" : "/classifications/roles",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b223f1a8-2202-3664-ad7a-984a68386b92",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 197
  }, {
    "id" : "86a0c3d6-58cf-35b4-8090-e7b231978152",
    "name" : "Retrieve a list of roles",
    "request" : {
      "urlPath" : "/classifications/roles",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "86a0c3d6-58cf-35b4-8090-e7b231978152",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 198
  }, {
    "id" : "508f6abc-8d03-3495-8a38-da74c60769fb",
    "name" : "Retrieve a list of roles",
    "request" : {
      "urlPath" : "/classifications/roles",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440001\",\n  \"reciprocalRole\" : \"Company\",\n  \"reciprocalRoleDescription\" : \"An incorporated legal entity.\",\n  \"relationship\" : \"Directorship\",\n  \"role\" : \"Director\",\n  \"roleDescription\" : \"An individual responsible for managing a company's business activities.\"\n}, {\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440002\",\n  \"reciprocalRole\" : \"Employer\",\n  \"reciprocalRoleDescription\" : \"An individual or organisation that employs people.\",\n  \"relationship\" : \"Employment\",\n  \"role\" : \"Employee\",\n  \"roleDescription\" : \"An individual employed for wages or salary.\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "508f6abc-8d03-3495-8a38-da74c60769fb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : [ {
              "id" : "123e4567-e89b-12d3-a456-426655440001",
              "reciprocalRole" : "Company",
              "reciprocalRoleDescription" : "An incorporated legal entity.",
              "relationship" : "Directorship",
              "role" : "Director",
              "roleDescription" : "An individual responsible for managing a company's business activities."
            }, {
              "id" : "123e4567-e89b-12d3-a456-426655440002",
              "reciprocalRole" : "Employer",
              "reciprocalRoleDescription" : "An individual or organisation that employs people.",
              "relationship" : "Employment",
              "role" : "Employee",
              "roleDescription" : "An individual employed for wages or salary."
            } ],
            "items" : {
              "$ref" : "#/components/schemas/role"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 199
  }, {
    "id" : "6a4c868a-bd46-37e8-9b37-73500deb4913",
    "name" : "Retrieve a list of registered identifier types",
    "request" : {
      "urlPath" : "/classifications/registered-identifier-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6a4c868a-bd46-37e8-9b37-73500deb4913",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 200
  }, {
    "id" : "9a56cde1-958b-30c1-9946-68584e4952ea",
    "name" : "Retrieve a list of registered identifier types",
    "request" : {
      "urlPath" : "/classifications/registered-identifier-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9a56cde1-958b-30c1-9946-68584e4952ea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 201
  }, {
    "id" : "68e68a4c-06c6-3b7c-a8ab-8a77c841ae22",
    "name" : "Retrieve a list of registered identifier types",
    "request" : {
      "urlPath" : "/classifications/registered-identifier-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"description\" : \"An Australian Business Number (ABN) is a unique eleven-character number issued by the Australian Business Register (ABR).\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440001\",\n  \"name\" : \"ABN\"\n}, {\n  \"description\" : \"An Australian Company Number (ACN) is a unique nine-character number issued by the Australian Securities and Investments Commission (ASIC).\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440002\",\n  \"name\" : \"ACN\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "68e68a4c-06c6-3b7c-a8ab-8a77c841ae22",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : [ {
              "description" : "An Australian Business Number (ABN) is a unique eleven-character number issued by the Australian Business Register (ABR).",
              "id" : "123e4567-e89b-12d3-a456-426655440001",
              "name" : "ABN"
            }, {
              "description" : "An Australian Company Number (ACN) is a unique nine-character number issued by the Australian Securities and Investments Commission (ASIC).",
              "id" : "123e4567-e89b-12d3-a456-426655440002",
              "name" : "ACN"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/registered-identifier-type"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 202
  }, {
    "id" : "18704547-75c5-389a-a87f-4c4751ad4e8a",
    "name" : "Retrieve a list of name types",
    "request" : {
      "urlPath" : "/classifications/name-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "18704547-75c5-389a-a87f-4c4751ad4e8a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 203
  }, {
    "id" : "5406ab96-d3d8-341d-b582-89c31cfc3409",
    "name" : "Retrieve a list of name types",
    "request" : {
      "urlPath" : "/classifications/name-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5406ab96-d3d8-341d-b582-89c31cfc3409",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 204
  }, {
    "id" : "1a35023f-d70d-352c-8ac4-9f9be3084e6b",
    "name" : "Retrieve a list of name types",
    "request" : {
      "urlPath" : "/classifications/name-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"description\" : \"An alternate name used by a party.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440001\",\n  \"name\" : \"Alias\"\n}, {\n  \"description\" : \"The primary name used by a party.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440002\",\n  \"name\" : \"Principal Name\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1a35023f-d70d-352c-8ac4-9f9be3084e6b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : [ {
              "description" : "An alternate name used by a party.",
              "id" : "123e4567-e89b-12d3-a456-426655440001",
              "name" : "Alias"
            }, {
              "description" : "The primary name used by a party.",
              "id" : "123e4567-e89b-12d3-a456-426655440002",
              "name" : "Principal Name"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/name-type"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 205
  }, {
    "id" : "d65d4046-f730-3b37-8157-c6b8d50af501",
    "name" : "Retrieve a list of name prefixes",
    "request" : {
      "urlPath" : "/classifications/name-prefixes",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d65d4046-f730-3b37-8157-c6b8d50af501",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 206
  }, {
    "id" : "73194b5f-814c-3ca0-9278-6ccba2045502",
    "name" : "Retrieve a list of name prefixes",
    "request" : {
      "urlPath" : "/classifications/name-prefixes",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "73194b5f-814c-3ca0-9278-6ccba2045502",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 207
  }, {
    "id" : "0d6bf925-6e4a-3c22-8308-1801b41f3a04",
    "name" : "Retrieve a list of name prefixes",
    "request" : {
      "urlPath" : "/classifications/name-prefixes",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"description\" : \"A title used before a family name or formal salutation to address a man.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440001\",\n  \"name\" : \"Mr\"\n}, {\n  \"description\" : \"A title used before a family name or formal salutation to address a woman.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440002\",\n  \"name\" : \"Ms\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0d6bf925-6e4a-3c22-8308-1801b41f3a04",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : [ {
              "description" : "A title used before a family name or formal salutation to address a man.",
              "id" : "123e4567-e89b-12d3-a456-426655440001",
              "name" : "Mr"
            }, {
              "description" : "A title used before a family name or formal salutation to address a woman.",
              "id" : "123e4567-e89b-12d3-a456-426655440002",
              "name" : "Ms"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/name-prefix"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 208
  }, {
    "id" : "c79b4f13-e635-3168-b507-52f62e12f318",
    "name" : "Retrieve a list of name directions",
    "request" : {
      "urlPath" : "/classifications/name-directions",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c79b4f13-e635-3168-b507-52f62e12f318",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 209
  }, {
    "id" : "a748036a-5d0a-374d-b37d-2ae46e153a7d",
    "name" : "Retrieve a list of name directions",
    "request" : {
      "urlPath" : "/classifications/name-directions",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a748036a-5d0a-374d-b37d-2ae46e153a7d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 210
  }, {
    "id" : "aa5a49cf-687c-3cec-bd49-02d57eeacd9d",
    "name" : "Retrieve a list of name directions",
    "request" : {
      "urlPath" : "/classifications/name-directions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"description\" : \"The full name or formal salutation is rendered left to right.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440001\",\n  \"name\" : \"left-to-right\"\n}, {\n  \"description\" : \"The full name or formal salutation is rendered right to left.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440002\",\n  \"name\" : \"right-to-left\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aa5a49cf-687c-3cec-bd49-02d57eeacd9d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : [ {
              "description" : "The full name or formal salutation is rendered left to right.",
              "id" : "123e4567-e89b-12d3-a456-426655440001",
              "name" : "left-to-right"
            }, {
              "description" : "The full name or formal salutation is rendered right to left.",
              "id" : "123e4567-e89b-12d3-a456-426655440002",
              "name" : "right-to-left"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/name-direction"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 211
  }, {
    "id" : "04cad719-7727-3dc6-afe8-7bf92580b23f",
    "name" : "Retrieve a list of license types",
    "request" : {
      "urlPath" : "/classifications/license-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "04cad719-7727-3dc6-afe8-7bf92580b23f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 212
  }, {
    "id" : "96842181-f4aa-33af-8f54-c23718aa8037",
    "name" : "Retrieve a list of license types",
    "request" : {
      "urlPath" : "/classifications/license-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "96842181-f4aa-33af-8f54-c23718aa8037",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 213
  }, {
    "id" : "5ef861f0-04cf-39e0-a4f3-a45c39d8101c",
    "name" : "Retrieve a list of license types",
    "request" : {
      "urlPath" : "/classifications/license-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"description\" : \"To conduct a financial services business in Australia, you must have an Australian Financial Services (AFS) licence.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440001\",\n  \"name\" : \"Australian Financial Services License\"\n}, {\n  \"description\" : \"To conduct a <insert-name-here> business you must have a 2B licence.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440002\",\n  \"name\" : \"2B License\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5ef861f0-04cf-39e0-a4f3-a45c39d8101c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : [ {
              "description" : "To conduct a financial services business in Australia, you must have an Australian Financial Services (AFS) licence.",
              "id" : "123e4567-e89b-12d3-a456-426655440001",
              "name" : "Australian Financial Services License"
            }, {
              "description" : "To conduct a <insert-name-here> business you must have a 2B licence.",
              "id" : "123e4567-e89b-12d3-a456-426655440002",
              "name" : "2B License"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/license-type"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 214
  }, {
    "id" : "85570c30-27fd-3021-9633-75959f1f36d9",
    "name" : "Retrieve a list of license lifecycle states",
    "request" : {
      "urlPath" : "/classifications/license-lifecycle-states",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "85570c30-27fd-3021-9633-75959f1f36d9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 215
  }, {
    "id" : "dd74dab1-8962-360e-afef-162575e105ae",
    "name" : "Retrieve a list of license lifecycle states",
    "request" : {
      "urlPath" : "/classifications/license-lifecycle-states",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dd74dab1-8962-360e-afef-162575e105ae",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 216
  }, {
    "id" : "3f67c22e-a8ef-341d-bc32-b5898f0cc839",
    "name" : "Retrieve a list of license lifecycle states",
    "request" : {
      "urlPath" : "/classifications/license-lifecycle-states",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"description\" : \"The License has been approved.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440001\",\n  \"name\" : \"Approved\"\n}, {\n  \"description\" : \"The License has expired.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440002\",\n  \"name\" : \"Expired\"\n}, {\n  \"description\" : \"The License has been issued.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440003\",\n  \"name\" : \"Issued\"\n}, {\n  \"description\" : \"The License is pending approval.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440004\",\n  \"name\" : \"Pending Approval\"\n}, {\n  \"description\" : \"The License has been suspended.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440005\",\n  \"name\" : \"Suspended\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3f67c22e-a8ef-341d-bc32-b5898f0cc839",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : [ {
              "description" : "The License has been approved.",
              "id" : "123e4567-e89b-12d3-a456-426655440001",
              "name" : "Approved"
            }, {
              "description" : "The License has expired.",
              "id" : "123e4567-e89b-12d3-a456-426655440002",
              "name" : "Expired"
            }, {
              "description" : "The License has been issued.",
              "id" : "123e4567-e89b-12d3-a456-426655440003",
              "name" : "Issued"
            }, {
              "description" : "The License is pending approval.",
              "id" : "123e4567-e89b-12d3-a456-426655440004",
              "name" : "Pending Approval"
            }, {
              "description" : "The License has been suspended.",
              "id" : "123e4567-e89b-12d3-a456-426655440005",
              "name" : "Suspended"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/license-lifecycle-state"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 217
  }, {
    "id" : "1a8adf56-c356-3258-b285-04e4ffb7e131",
    "name" : "Retrieve a list of legal entity types",
    "request" : {
      "urlPath" : "/classifications/legal-entity-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1a8adf56-c356-3258-b285-04e4ffb7e131",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 218
  }, {
    "id" : "8be513e3-7ee3-3e17-9835-1b869952acd5",
    "name" : "Retrieve a list of legal entity types",
    "request" : {
      "urlPath" : "/classifications/legal-entity-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8be513e3-7ee3-3e17-9835-1b869952acd5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 219
  }, {
    "id" : "e2574e33-aabe-374a-ad75-a300caa8cd05",
    "name" : "Retrieve a list of legal entity types",
    "request" : {
      "urlPath" : "/classifications/legal-entity-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"description\" : \"If you operate as a sole trader, you're responsible for all aspects of the business, including any debts the business incurs.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440001\",\n  \"name\" : \"Sole Trader\"\n}, {\n  \"description\" : \"A partnership is two or more individuals or organisations who do business as partners or receive income jointly.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440002\",\n  \"name\" : \"Partnership\"\n}, {\n  \"description\" : \"A joint venture is two or more people or entities who join to do business together for a particular purpose, usually a single project, rather than as an ongoing business.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440003\",\n  \"name\" : \"Joint Venture\"\n}, {\n  \"description\" : \"A company is a separate legal entity. This means it has the same rights as a natural person and can incur debt, sue and be sued.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440004\",\n  \"name\" : \"Company\"\n}, {\n  \"description\" : \"A trust is an obligation imposed on a person – the trustee – to hold property or assets (e.g. business assets) for the benefit of others (known as beneficiaries).\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440005\",\n  \"name\" : \"Trust\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e2574e33-aabe-374a-ad75-a300caa8cd05",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : [ {
              "description" : "If you operate as a sole trader, you're responsible for all aspects of the business, including any debts the business incurs.",
              "id" : "123e4567-e89b-12d3-a456-426655440001",
              "name" : "Sole Trader"
            }, {
              "description" : "A partnership is two or more individuals or organisations who do business as partners or receive income jointly.",
              "id" : "123e4567-e89b-12d3-a456-426655440002",
              "name" : "Partnership"
            }, {
              "description" : "A joint venture is two or more people or entities who join to do business together for a particular purpose, usually a single project, rather than as an ongoing business.",
              "id" : "123e4567-e89b-12d3-a456-426655440003",
              "name" : "Joint Venture"
            }, {
              "description" : "A company is a separate legal entity. This means it has the same rights as a natural person and can incur debt, sue and be sued.",
              "id" : "123e4567-e89b-12d3-a456-426655440004",
              "name" : "Company"
            }, {
              "description" : "A trust is an obligation imposed on a person – the trustee – to hold property or assets (e.g. business assets) for the benefit of others (known as beneficiaries).",
              "id" : "123e4567-e89b-12d3-a456-426655440005",
              "name" : "Trust"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/legal-entity-type"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 220
  }, {
    "id" : "8772a6bd-a42f-34d2-af04-486e36c645a9",
    "name" : "Retrieve a list of genders",
    "request" : {
      "urlPath" : "/classifications/genders",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8772a6bd-a42f-34d2-af04-486e36c645a9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 221
  }, {
    "id" : "3d8d9450-d0c2-34cd-b555-05bfc2276a10",
    "name" : "Retrieve a list of genders",
    "request" : {
      "urlPath" : "/classifications/genders",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3d8d9450-d0c2-34cd-b555-05bfc2276a10",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 222
  }, {
    "id" : "2e020065-1e85-3d9b-a109-5b3e6a16de91",
    "name" : "Retrieve a list of genders",
    "request" : {
      "urlPath" : "/classifications/genders",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"gender\" : \"Not Known\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440001\"\n}, {\n  \"gender\" : \"Male\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440002\"\n}, {\n  \"gender\" : \"Female\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440003\"\n}, {\n  \"gender\" : \"Not Applicable\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440004\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2e020065-1e85-3d9b-a109-5b3e6a16de91",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : [ {
              "gender" : "Not Known",
              "id" : "123e4567-e89b-12d3-a456-426655440001"
            }, {
              "gender" : "Male",
              "id" : "123e4567-e89b-12d3-a456-426655440002"
            }, {
              "gender" : "Female",
              "id" : "123e4567-e89b-12d3-a456-426655440003"
            }, {
              "gender" : "Not Applicable",
              "id" : "123e4567-e89b-12d3-a456-426655440004"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/gender"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 223
  }, {
    "id" : "0d7c0b97-bf05-31ee-9e76-b710a18d9518",
    "name" : "Retrieve a list of electronic address types",
    "request" : {
      "urlPath" : "/classifications/electronic-address-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0d7c0b97-bf05-31ee-9e76-b710a18d9518",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 224
  }, {
    "id" : "74b5cb82-8845-37d4-a02c-c6046b29fd24",
    "name" : "Retrieve a list of electronic address types",
    "request" : {
      "urlPath" : "/classifications/electronic-address-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "74b5cb82-8845-37d4-a02c-c6046b29fd24",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 225
  }, {
    "id" : "7c677bbb-045b-38dd-a305-524570573f28",
    "name" : "Retrieve a list of electronic address types",
    "request" : {
      "urlPath" : "/classifications/electronic-address-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"description\" : \"An address used to send and receive emails.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440001\",\n  \"name\" : \"Email\"\n}, {\n  \"description\" : \"A number used to send and receive faxes.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440002\",\n  \"name\" : \"Fax\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7c677bbb-045b-38dd-a305-524570573f28",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : [ {
              "description" : "An address used to send and receive emails.",
              "id" : "123e4567-e89b-12d3-a456-426655440001",
              "name" : "Email"
            }, {
              "description" : "A number used to send and receive faxes.",
              "id" : "123e4567-e89b-12d3-a456-426655440002",
              "name" : "Fax"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/electronic-address-type"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 226
  }, {
    "id" : "3d09daa2-405f-3e18-8ff7-60ff7fe780b6",
    "name" : "Retrieve a list of business name lifecycle states",
    "request" : {
      "urlPath" : "/classifications/business-name-lifecycle-states",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3d09daa2-405f-3e18-8ff7-60ff7fe780b6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 227
  }, {
    "id" : "85210ccf-2806-34b3-a1ab-aa7f81e1866d",
    "name" : "Retrieve a list of business name lifecycle states",
    "request" : {
      "urlPath" : "/classifications/business-name-lifecycle-states",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "85210ccf-2806-34b3-a1ab-aa7f81e1866d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 228
  }, {
    "id" : "614a6264-24ad-3a8a-99a5-0536f70a9c86",
    "name" : "Retrieve a list of business name lifecycle states",
    "request" : {
      "urlPath" : "/classifications/business-name-lifecycle-states",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"description\" : \"The Business Name has been approved.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440001\",\n  \"name\" : \"Approved\"\n}, {\n  \"description\" : \"The Business Name has expired.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440002\",\n  \"name\" : \"Expired\"\n}, {\n  \"description\" : \"The Business Name has been issued.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440003\",\n  \"name\" : \"Issued\"\n}, {\n  \"description\" : \"The Business Name is pending approval.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440004\",\n  \"name\" : \"Pending Approval\"\n}, {\n  \"description\" : \"The Business Name has been suspended.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440005\",\n  \"name\" : \"Suspended\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "614a6264-24ad-3a8a-99a5-0536f70a9c86",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : [ {
              "description" : "The Business Name has been approved.",
              "id" : "123e4567-e89b-12d3-a456-426655440001",
              "name" : "Approved"
            }, {
              "description" : "The Business Name has expired.",
              "id" : "123e4567-e89b-12d3-a456-426655440002",
              "name" : "Expired"
            }, {
              "description" : "The Business Name has been issued.",
              "id" : "123e4567-e89b-12d3-a456-426655440003",
              "name" : "Issued"
            }, {
              "description" : "The Business Name is pending approval.",
              "id" : "123e4567-e89b-12d3-a456-426655440004",
              "name" : "Pending Approval"
            }, {
              "description" : "The Business Name has been suspended.",
              "id" : "123e4567-e89b-12d3-a456-426655440005",
              "name" : "Suspended"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/business-name-lifecycle-state"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 229
  }, {
    "id" : "0b1fe86a-25a3-31fa-bcd4-6b22c40954a3",
    "name" : "Retrieve a list of address types",
    "request" : {
      "urlPath" : "/classifications/address-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0b1fe86a-25a3-31fa-bcd4-6b22c40954a3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 230
  }, {
    "id" : "09d5106c-fc65-3f06-8a81-d30e929bd608",
    "name" : "Retrieve a list of address types",
    "request" : {
      "urlPath" : "/classifications/address-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "09d5106c-fc65-3f06-8a81-d30e929bd608",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 231
  }, {
    "id" : "6d2b4954-6d53-3bac-9a8f-7e3d93408c63",
    "name" : "Retrieve a list of address types",
    "request" : {
      "urlPath" : "/classifications/address-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"description\" : \"The address at which an individual or organisation receives letters or packages.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440001\",\n  \"name\" : \"Mailing\"\n}, {\n  \"description\" : \"The main location where work is conducted.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440002\",\n  \"name\" : \"Principal Place of Business\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6d2b4954-6d53-3bac-9a8f-7e3d93408c63",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : [ {
              "description" : "The address at which an individual or organisation receives letters or packages.",
              "id" : "123e4567-e89b-12d3-a456-426655440001",
              "name" : "Mailing"
            }, {
              "description" : "The main location where work is conducted.",
              "id" : "123e4567-e89b-12d3-a456-426655440002",
              "name" : "Principal Place of Business"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/address-type"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 232
  }, {
    "id" : "e4832389-37fd-3ed2-bb2d-399bb47fb630",
    "name" : "Retrieve a list of business names",
    "request" : {
      "urlPath" : "/business-names",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e4832389-37fd-3ed2-bb2d-399bb47fb630",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 233
  }, {
    "id" : "a34fc42c-173e-31ac-b0a3-9264227d3b74",
    "name" : "Retrieve a list of business names",
    "request" : {
      "urlPath" : "/business-names",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a34fc42c-173e-31ac-b0a3-9264227d3b74",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 234
  }, {
    "id" : "4deecf03-1b5e-37a7-9bca-bd5933fce414",
    "name" : "Retrieve a list of business names",
    "request" : {
      "urlPath" : "/business-names",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Pending Approval\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Expired\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Issued\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Suspended\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Expired\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Suspended\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4deecf03-1b5e-37a7-9bca-bd5933fce414",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/business-name"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 235
  } ]
}