{
  "mappings" : [ {
    "id" : "5c25458e-9499-4c77-8522-530dbe120546",
    "name" : "Update a role",
    "request" : {
      "urlPath" : "/organisations/4752/roles/gf1w",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5c25458e-9499-4c77-8522-530dbe120546",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.404282Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a5401dc8-93d1-4e49-a68a-eae5d36fcbc4",
    "name" : "Update a role",
    "request" : {
      "urlPath" : "/organisations/1yh2/roles/04m9",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a5401dc8-93d1-4e49-a68a-eae5d36fcbc4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.404058Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "89f8af12-34d1-4e9e-8713-f9a550ba6992",
    "name" : "Update a role",
    "request" : {
      "urlPath" : "/organisations/94xs/roles/2l13",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "89f8af12-34d1-4e9e-8713-f9a550ba6992",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.403876Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c398414d-84ad-44e1-a966-f0439164e818",
    "name" : "Update a role",
    "request" : {
      "urlPath" : "/organisations/ayg0/roles/q03o",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Trusteeship\",\n  \"relatedPartyRoleType\" : \"Association\",\n  \"partyRoleType\" : \"Partner\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c398414d-84ad-44e1-a966-f0439164e818",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.403662Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Party Role resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "2016-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/roleId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "partyRoleType" : {
                "default" : "Employee",
                "description" : "The party's role type.",
                "enum" : [ "Director", "Employee", "Member", "Partner", "Trustee" ],
                "type" : "string"
              },
              "relatedPartyId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/partyId"
                } ],
                "description" : "The related party's unique identifier."
              },
              "relatedPartyRoleType" : {
                "default" : "Employer",
                "description" : "The related party's role type.",
                "enum" : [ "Association", "Company", "Employer", "Organisation", "Partnership", "Trust" ],
                "type" : "string"
              },
              "relationshipType" : {
                "default" : "Employment",
                "description" : "The relationship type.",
                "enum" : [ "Directorship", "Employment", "Membership", "Partnership", "Trusteeship" ],
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "required" : [ "relatedPartyId", "relationshipType" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "11d868a6-82dd-47b9-9f44-59f4ffffbf99",
    "name" : "Retrieve a role",
    "request" : {
      "urlPath" : "/organisations/8n2a/roles/0sz1",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "11d868a6-82dd-47b9-9f44-59f4ffffbf99",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.40339Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a2c71a8c-e2cf-40a7-9ceb-250537c8826d",
    "name" : "Retrieve a role",
    "request" : {
      "urlPath" : "/organisations/y977/roles/0t3h",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a2c71a8c-e2cf-40a7-9ceb-250537c8826d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.403159Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c417b1f0-7497-42ae-9a3c-5fbe9139d00d",
    "name" : "Retrieve a role",
    "request" : {
      "urlPath" : "/organisations/ni4m/roles/q12a",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Directorship\",\n  \"relatedPartyRoleType\" : \"Employer\",\n  \"partyRoleType\" : \"Director\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c417b1f0-7497-42ae-9a3c-5fbe9139d00d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.402898Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Party Role resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "2016-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/roleId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "partyRoleType" : {
                "default" : "Employee",
                "description" : "The party's role type.",
                "enum" : [ "Director", "Employee", "Member", "Partner", "Trustee" ],
                "type" : "string"
              },
              "relatedPartyId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/partyId"
                } ],
                "description" : "The related party's unique identifier."
              },
              "relatedPartyRoleType" : {
                "default" : "Employer",
                "description" : "The related party's role type.",
                "enum" : [ "Association", "Company", "Employer", "Organisation", "Partnership", "Trust" ],
                "type" : "string"
              },
              "relationshipType" : {
                "default" : "Employment",
                "description" : "The relationship type.",
                "enum" : [ "Directorship", "Employment", "Membership", "Partnership", "Trusteeship" ],
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "required" : [ "relatedPartyId", "relationshipType" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b449a50f-9cae-4bf0-95e5-fda75c8ed046",
    "name" : "Delete a role (application/json)",
    "request" : {
      "urlPath" : "/organisations/si05/roles/0b8n",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b449a50f-9cae-4bf0-95e5-fda75c8ed046",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.402564Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "34b3780d-df68-49da-92b2-d7b4442bdd26",
    "name" : "Delete a role (application/json)",
    "request" : {
      "urlPath" : "/organisations/90bf/roles/5836",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "34b3780d-df68-49da-92b2-d7b4442bdd26",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.402367Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "292a7078-5f72-46cc-9ce0-d6875a57ba90",
    "name" : "Delete a role - 204",
    "request" : {
      "urlPath" : "/organisations/9vro/roles/16p0",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "292a7078-5f72-46cc-9ce0-d6875a57ba90",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.40218Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "e3d217f3-fa68-4593-bc4d-417898594b00",
    "name" : "Create a role",
    "request" : {
      "urlPath" : "/organisations/4b8e/roles",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e3d217f3-fa68-4593-bc4d-417898594b00",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.402036Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c932bf06-d8f0-44f3-8a52-d6b4ea6f1f52",
    "name" : "Create a role",
    "request" : {
      "urlPath" : "/organisations/d7x8/roles",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c932bf06-d8f0-44f3-8a52-d6b4ea6f1f52",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.401924Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c6f5ed62-e683-46cf-ad65-f32d1fdf9d08",
    "name" : "Create a role",
    "request" : {
      "urlPath" : "/organisations/s95a/roles",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Membership\",\n  \"relatedPartyRoleType\" : \"Organisation\",\n  \"partyRoleType\" : \"Member\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c6f5ed62-e683-46cf-ad65-f32d1fdf9d08",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.401773Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Party Role resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "2016-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/roleId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "partyRoleType" : {
                "default" : "Employee",
                "description" : "The party's role type.",
                "enum" : [ "Director", "Employee", "Member", "Partner", "Trustee" ],
                "type" : "string"
              },
              "relatedPartyId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/partyId"
                } ],
                "description" : "The related party's unique identifier."
              },
              "relatedPartyRoleType" : {
                "default" : "Employer",
                "description" : "The related party's role type.",
                "enum" : [ "Association", "Company", "Employer", "Organisation", "Partnership", "Trust" ],
                "type" : "string"
              },
              "relationshipType" : {
                "default" : "Employment",
                "description" : "The relationship type.",
                "enum" : [ "Directorship", "Employment", "Membership", "Partnership", "Trusteeship" ],
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "required" : [ "relatedPartyId", "relationshipType" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f3e8313a-2b9c-434b-9dc7-5270f0784f73",
    "name" : "Retrieve a list of roles",
    "request" : {
      "urlPath" : "/organisations/v0k8/roles",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f3e8313a-2b9c-434b-9dc7-5270f0784f73",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.401581Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "abd42504-bf6a-481d-95b8-18f67161978e",
    "name" : "Retrieve a list of roles",
    "request" : {
      "urlPath" : "/organisations/0bot/roles",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "abd42504-bf6a-481d-95b8-18f67161978e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.401433Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c0bedf3f-e5e9-4738-92f7-07cfaf499853",
    "name" : "Retrieve a list of roles",
    "request" : {
      "urlPath" : "/organisations/6p01/roles",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Membership\",\n  \"relatedPartyRoleType\" : \"Trust\",\n  \"partyRoleType\" : \"Trustee\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Employment\",\n  \"relatedPartyRoleType\" : \"Employer\",\n  \"partyRoleType\" : \"Employee\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Directorship\",\n  \"relatedPartyRoleType\" : \"Organisation\",\n  \"partyRoleType\" : \"Director\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Trusteeship\",\n  \"relatedPartyRoleType\" : \"Company\",\n  \"partyRoleType\" : \"Employee\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Employment\",\n  \"relatedPartyRoleType\" : \"Company\",\n  \"partyRoleType\" : \"Employee\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Trusteeship\",\n  \"relatedPartyRoleType\" : \"Association\",\n  \"partyRoleType\" : \"Member\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Membership\",\n  \"relatedPartyRoleType\" : \"Trust\",\n  \"partyRoleType\" : \"Director\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Trusteeship\",\n  \"relatedPartyRoleType\" : \"Trust\",\n  \"partyRoleType\" : \"Partner\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c0bedf3f-e5e9-4738-92f7-07cfaf499853",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.401323Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/party-role"
            },
            "type" : "array"
          }
        }
      }
    }
  }, {
    "id" : "b98640c5-ed14-421b-823a-e742630aa46f",
    "name" : "Update a license",
    "request" : {
      "urlPath" : "/organisations/1nck/licenses/ova7",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b98640c5-ed14-421b-823a-e742630aa46f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.40094Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e1e1523d-10da-45d1-9ee0-6ca339a1ac98",
    "name" : "Update a license",
    "request" : {
      "urlPath" : "/organisations/66vu/licenses/z4ig",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e1e1523d-10da-45d1-9ee0-6ca339a1ac98",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.400737Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2cd67a3d-1b93-4bf8-8a6f-2aacc6f1a2a0",
    "name" : "Update a license",
    "request" : {
      "urlPath" : "/organisations/6fmk/licenses/uwq8",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2cd67a3d-1b93-4bf8-8a6f-2aacc6f1a2a0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.400573Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9ed3123a-acb6-4845-a476-d742544146cd",
    "name" : "Update a license",
    "request" : {
      "urlPath" : "/organisations/i71l/licenses/6z03",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"License 2B\",\n  \"lifecycleState\" : \"Approved\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9ed3123a-acb6-4845-a476-d742544146cd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.400368Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The License resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/resourceId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "licenseType" : {
                "default" : "Australian Financial Services License",
                "description" : "The license type.",
                "enum" : [ "Australian Financial Services License", "License 2B" ],
                "type" : "string"
              },
              "lifecycleState" : {
                "default" : "Pending Approval",
                "description" : "The business name's lifecycle state.",
                "enum" : [ "Approved", "Expired", "Issued", "Pending Approval", "Suspended" ],
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e388f850-b9fa-47cf-b7f2-f6d94781aed7",
    "name" : "Retrieve a license",
    "request" : {
      "urlPath" : "/organisations/lzw9/licenses/2419",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e388f850-b9fa-47cf-b7f2-f6d94781aed7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.400172Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a30c2f43-f5c1-4c61-84ca-8ce44feffa97",
    "name" : "Retrieve a license",
    "request" : {
      "urlPath" : "/organisations/9l8y/licenses/6857",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a30c2f43-f5c1-4c61-84ca-8ce44feffa97",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.399992Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6d70a956-45e2-4adb-8164-1ecc8599f415",
    "name" : "Retrieve a license",
    "request" : {
      "urlPath" : "/organisations/n3e9/licenses/30sa",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"License 2B\",\n  \"lifecycleState\" : \"Pending Approval\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6d70a956-45e2-4adb-8164-1ecc8599f415",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.399824Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The License resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/resourceId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "licenseType" : {
                "default" : "Australian Financial Services License",
                "description" : "The license type.",
                "enum" : [ "Australian Financial Services License", "License 2B" ],
                "type" : "string"
              },
              "lifecycleState" : {
                "default" : "Pending Approval",
                "description" : "The business name's lifecycle state.",
                "enum" : [ "Approved", "Expired", "Issued", "Pending Approval", "Suspended" ],
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6934ceec-f55a-4d69-a959-2562cb9c9b5e",
    "name" : "Delete a license (application/json)",
    "request" : {
      "urlPath" : "/organisations/015g/licenses/i2ul",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6934ceec-f55a-4d69-a959-2562cb9c9b5e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.399626Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ac6f3352-51ad-4e3e-b3be-f40797446ebe",
    "name" : "Delete a license (application/json)",
    "request" : {
      "urlPath" : "/organisations/69k9/licenses/586o",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ac6f3352-51ad-4e3e-b3be-f40797446ebe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.399448Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "fd10a514-5094-463d-827b-4f3007c309ad",
    "name" : "Delete a license - 204",
    "request" : {
      "urlPath" : "/organisations/ur71/licenses/1016",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "fd10a514-5094-463d-827b-4f3007c309ad",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.399275Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "879447d2-d617-4dbd-8210-01298afc801b",
    "name" : "Create a license",
    "request" : {
      "urlPath" : "/organisations/j26s/licenses",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "879447d2-d617-4dbd-8210-01298afc801b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.399135Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b0aad165-5faf-4d50-9e70-15f2a4056da1",
    "name" : "Create a license",
    "request" : {
      "urlPath" : "/organisations/8rus/licenses",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b0aad165-5faf-4d50-9e70-15f2a4056da1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.399025Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "00389202-a11c-42eb-acbd-34b83a556cd0",
    "name" : "Create a license",
    "request" : {
      "urlPath" : "/organisations/78v3/licenses",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"Australian Financial Services License\",\n  \"lifecycleState\" : \"Pending Approval\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "00389202-a11c-42eb-acbd-34b83a556cd0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.398891Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The License resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/resourceId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "licenseType" : {
                "default" : "Australian Financial Services License",
                "description" : "The license type.",
                "enum" : [ "Australian Financial Services License", "License 2B" ],
                "type" : "string"
              },
              "lifecycleState" : {
                "default" : "Pending Approval",
                "description" : "The business name's lifecycle state.",
                "enum" : [ "Approved", "Expired", "Issued", "Pending Approval", "Suspended" ],
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9fdd635a-c24b-4d69-a1d4-8b5bf6963820",
    "name" : "Retrieve a list of licenses",
    "request" : {
      "urlPath" : "/organisations/7fya/licenses",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9fdd635a-c24b-4d69-a1d4-8b5bf6963820",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.398743Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0dedb8cd-c12e-4bb0-9771-8c8331f8d9ed",
    "name" : "Retrieve a list of licenses",
    "request" : {
      "urlPath" : "/organisations/e5mg/licenses",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0dedb8cd-c12e-4bb0-9771-8c8331f8d9ed",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.398596Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "caf18565-6950-4dc5-bc3a-a3def2267f67",
    "name" : "Retrieve a list of licenses",
    "request" : {
      "urlPath" : "/organisations/0u75/licenses",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"Australian Financial Services License\",\n  \"lifecycleState\" : \"Issued\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"Australian Financial Services License\",\n  \"lifecycleState\" : \"Approved\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"Australian Financial Services License\",\n  \"lifecycleState\" : \"Expired\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "caf18565-6950-4dc5-bc3a-a3def2267f67",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.398486Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/license"
            },
            "type" : "array"
          }
        }
      }
    }
  }, {
    "id" : "ed2d56a6-4a3f-400e-bc1b-bd84b7510636",
    "name" : "Update an electronic address",
    "request" : {
      "urlPath" : "/organisations/a807/electronic-addresses/aj5k",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ed2d56a6-4a3f-400e-bc1b-bd84b7510636",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.398324Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f3ab4d68-ce2d-41b0-975f-f6ef0b59589e",
    "name" : "Update an electronic address",
    "request" : {
      "urlPath" : "/organisations/5498/electronic-addresses/597v",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f3ab4d68-ce2d-41b0-975f-f6ef0b59589e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.398127Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8db7be74-817e-46d4-bc6b-5d53225e1b61",
    "name" : "Update an electronic address",
    "request" : {
      "urlPath" : "/organisations/r090/electronic-addresses/f59p",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8db7be74-817e-46d4-bc6b-5d53225e1b61",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.397964Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e0380a5d-e565-48d2-940c-3c6844a954c4",
    "name" : "Update an electronic address",
    "request" : {
      "urlPath" : "/organisations/s1p1/electronic-addresses/dn42",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"electronicAddressType\" : \"Landline\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e0380a5d-e565-48d2-940c-3c6844a954c4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.397781Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Electronic Address resource.",
            "properties" : {
              "areaCode" : {
                "description" : "The area code, for example, \"02\".",
                "example" : "02",
                "type" : "string"
              },
              "countryPrefix" : {
                "description" : "The country prefix, for example, \"61\".",
                "example" : "61",
                "type" : "string"
              },
              "electronicAddressType" : {
                "default" : "Landline",
                "description" : "The electronic address type.",
                "enum" : [ "Email", "Fax", "Landline", "Mobile", "Website" ],
                "type" : "string"
              },
              "email" : {
                "description" : "The email address, for example, \"robert.ferguson@ato.gov.au\".",
                "example" : "",
                "type" : "string"
              },
              "extension" : {
                "description" : "The extension number, for example, \"4453\".",
                "example" : "",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/addressId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "number" : {
                "description" : "The number, for example, \"62164453\".",
                "example" : "62164453",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The website address, for example, \"https://ato.gov.au\".",
                "example" : "",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1a078986-245d-4e69-9538-1ed92c1c59e6",
    "name" : "Retrieve an electronic address",
    "request" : {
      "urlPath" : "/organisations/hna1/electronic-addresses/f2u7",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1a078986-245d-4e69-9538-1ed92c1c59e6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.397562Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "17bb54df-2a09-430e-b3b2-11fbd9d67c94",
    "name" : "Retrieve an electronic address",
    "request" : {
      "urlPath" : "/organisations/xbzk/electronic-addresses/jk7l",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "17bb54df-2a09-430e-b3b2-11fbd9d67c94",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.397379Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7728126f-c2de-493d-b88e-da6a5669bd5d",
    "name" : "Retrieve an electronic address",
    "request" : {
      "urlPath" : "/organisations/51uu/electronic-addresses/bl63",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"electronicAddressType\" : \"Mobile\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7728126f-c2de-493d-b88e-da6a5669bd5d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.397209Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Electronic Address resource.",
            "properties" : {
              "areaCode" : {
                "description" : "The area code, for example, \"02\".",
                "example" : "02",
                "type" : "string"
              },
              "countryPrefix" : {
                "description" : "The country prefix, for example, \"61\".",
                "example" : "61",
                "type" : "string"
              },
              "electronicAddressType" : {
                "default" : "Landline",
                "description" : "The electronic address type.",
                "enum" : [ "Email", "Fax", "Landline", "Mobile", "Website" ],
                "type" : "string"
              },
              "email" : {
                "description" : "The email address, for example, \"robert.ferguson@ato.gov.au\".",
                "example" : "",
                "type" : "string"
              },
              "extension" : {
                "description" : "The extension number, for example, \"4453\".",
                "example" : "",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/addressId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "number" : {
                "description" : "The number, for example, \"62164453\".",
                "example" : "62164453",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The website address, for example, \"https://ato.gov.au\".",
                "example" : "",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "195fa07c-c9c7-482a-9fa4-ed4256f92e2a",
    "name" : "Delete an electronic address (application/json)",
    "request" : {
      "urlPath" : "/organisations/klxt/electronic-addresses/d3zu",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "195fa07c-c9c7-482a-9fa4-ed4256f92e2a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.396983Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9346f1d5-03ab-4059-bc6f-7ee8d4e86d68",
    "name" : "Delete an electronic address (application/json)",
    "request" : {
      "urlPath" : "/organisations/ndta/electronic-addresses/08o6",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9346f1d5-03ab-4059-bc6f-7ee8d4e86d68",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.396798Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0dc9f43e-5992-44d1-b508-845e884ced4d",
    "name" : "Delete an electronic address - 204",
    "request" : {
      "urlPath" : "/organisations/3uks/electronic-addresses/le0r",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "0dc9f43e-5992-44d1-b508-845e884ced4d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.396639Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "f0035b06-bbf7-42ef-a7f1-c09d2b29fb29",
    "name" : "Create an electronic address",
    "request" : {
      "urlPath" : "/organisations/0ciq/electronic-addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f0035b06-bbf7-42ef-a7f1-c09d2b29fb29",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.396499Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b4ea8796-2e6d-4d50-ae33-859446865bf3",
    "name" : "Create an electronic address",
    "request" : {
      "urlPath" : "/organisations/pqrm/electronic-addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b4ea8796-2e6d-4d50-ae33-859446865bf3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.396393Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "fdb519d2-403d-48c6-9922-de8b4124bb45",
    "name" : "Create an electronic address",
    "request" : {
      "urlPath" : "/organisations/s8eh/electronic-addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"electronicAddressType\" : \"Landline\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fdb519d2-403d-48c6-9922-de8b4124bb45",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.396255Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Electronic Address resource.",
            "properties" : {
              "areaCode" : {
                "description" : "The area code, for example, \"02\".",
                "example" : "02",
                "type" : "string"
              },
              "countryPrefix" : {
                "description" : "The country prefix, for example, \"61\".",
                "example" : "61",
                "type" : "string"
              },
              "electronicAddressType" : {
                "default" : "Landline",
                "description" : "The electronic address type.",
                "enum" : [ "Email", "Fax", "Landline", "Mobile", "Website" ],
                "type" : "string"
              },
              "email" : {
                "description" : "The email address, for example, \"robert.ferguson@ato.gov.au\".",
                "example" : "",
                "type" : "string"
              },
              "extension" : {
                "description" : "The extension number, for example, \"4453\".",
                "example" : "",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/addressId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "number" : {
                "description" : "The number, for example, \"62164453\".",
                "example" : "62164453",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The website address, for example, \"https://ato.gov.au\".",
                "example" : "",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "eeb8fe00-4b1b-475d-a7a4-7de4b77062b3",
    "name" : "Retrieve a list of electronic addresses",
    "request" : {
      "urlPath" : "/organisations/3d98/electronic-addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eeb8fe00-4b1b-475d-a7a4-7de4b77062b3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.396071Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "61fd788f-c444-41cd-be9a-b36892466e21",
    "name" : "Retrieve a list of electronic addresses",
    "request" : {
      "urlPath" : "/organisations/edm7/electronic-addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "61fd788f-c444-41cd-be9a-b36892466e21",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.395945Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "be6fd108-610b-4721-a249-a813876cb7fa",
    "name" : "Retrieve a list of electronic addresses",
    "request" : {
      "urlPath" : "/organisations/5k0q/electronic-addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"electronicAddressType\" : \"Website\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "be6fd108-610b-4721-a249-a813876cb7fa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.395834Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/electronic-address"
            },
            "type" : "array"
          }
        }
      }
    }
  }, {
    "id" : "c6599b33-e808-45d6-8ab8-d275697caf66",
    "name" : "Update a business name",
    "request" : {
      "urlPath" : "/organisations/k60y/business-names/787w",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c6599b33-e808-45d6-8ab8-d275697caf66",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.395704Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ec9dc3de-52bc-4f27-a423-76378bef7c90",
    "name" : "Update a business name",
    "request" : {
      "urlPath" : "/organisations/71t9/business-names/6747",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ec9dc3de-52bc-4f27-a423-76378bef7c90",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.395508Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5e8dc821-cda3-48cf-8a23-12d22e0a11c7",
    "name" : "Update a business name",
    "request" : {
      "urlPath" : "/organisations/1mdl/business-names/cf9k",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5e8dc821-cda3-48cf-8a23-12d22e0a11c7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.395328Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f9c53725-2aab-458e-8265-fcc8ad51c114",
    "name" : "Update a business name",
    "request" : {
      "urlPath" : "/organisations/549p/business-names/o4n0",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Expired\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f9c53725-2aab-458e-8265-fcc8ad51c114",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.395139Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Business Name resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/resourceId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "lifecycleState" : {
                "default" : "Pending Approval",
                "description" : "The business name's lifecycle state.",
                "enum" : [ "Approved", "Expired", "Issued", "Pending Approval", "Suspended" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The business name.",
                "example" : "XYZ Technology Ventures",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1a57cdb0-e264-4d09-be85-da9a5ec60985",
    "name" : "Retrieve a business name",
    "request" : {
      "urlPath" : "/organisations/88sv/business-names/enxc",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1a57cdb0-e264-4d09-be85-da9a5ec60985",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.394947Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0766abe3-244a-451d-b02c-f553ee8c1f7b",
    "name" : "Retrieve a business name",
    "request" : {
      "urlPath" : "/organisations/w3q8/business-names/6552",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0766abe3-244a-451d-b02c-f553ee8c1f7b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.394761Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "09a052b6-7d76-44e5-8b1c-2ae096668f13",
    "name" : "Retrieve a business name",
    "request" : {
      "urlPath" : "/organisations/0gc1/business-names/3tbv",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Suspended\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "09a052b6-7d76-44e5-8b1c-2ae096668f13",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.394594Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Business Name resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/resourceId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "lifecycleState" : {
                "default" : "Pending Approval",
                "description" : "The business name's lifecycle state.",
                "enum" : [ "Approved", "Expired", "Issued", "Pending Approval", "Suspended" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The business name.",
                "example" : "XYZ Technology Ventures",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "06a4eae2-0260-4bc4-8165-e2a665be7c31",
    "name" : "Delete a business name (application/json)",
    "request" : {
      "urlPath" : "/organisations/yfei/business-names/5vty",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "06a4eae2-0260-4bc4-8165-e2a665be7c31",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.394388Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d13ce0b3-2b8a-46c7-acdf-eadd31188713",
    "name" : "Delete a business name (application/json)",
    "request" : {
      "urlPath" : "/organisations/9074/business-names/6z7d",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d13ce0b3-2b8a-46c7-acdf-eadd31188713",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.394194Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "98a607d0-4f65-454e-86cc-793dd1e13c4b",
    "name" : "Delete a business name - 204",
    "request" : {
      "urlPath" : "/organisations/z661/business-names/5p9x",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "98a607d0-4f65-454e-86cc-793dd1e13c4b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.394016Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "68b46af4-ec55-4bd9-ac0b-6537c230c4f6",
    "name" : "Create a business name",
    "request" : {
      "urlPath" : "/organisations/hsso/business-names",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "68b46af4-ec55-4bd9-ac0b-6537c230c4f6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.393874Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3c3e214e-0894-4e22-a32f-47f397715c74",
    "name" : "Create a business name",
    "request" : {
      "urlPath" : "/organisations/r4g0/business-names",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3c3e214e-0894-4e22-a32f-47f397715c74",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.39376Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d84aaa94-c07b-431c-a064-6ade885abf68",
    "name" : "Create a business name",
    "request" : {
      "urlPath" : "/organisations/7mon/business-names",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Pending Approval\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d84aaa94-c07b-431c-a064-6ade885abf68",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.393623Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Business Name resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/resourceId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "lifecycleState" : {
                "default" : "Pending Approval",
                "description" : "The business name's lifecycle state.",
                "enum" : [ "Approved", "Expired", "Issued", "Pending Approval", "Suspended" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The business name.",
                "example" : "XYZ Technology Ventures",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "663099ec-6541-4f02-9979-75caa3bf33a3",
    "name" : "Retrieve a list of business names",
    "request" : {
      "urlPath" : "/organisations/d25e/business-names",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "663099ec-6541-4f02-9979-75caa3bf33a3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.393476Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "990328e4-6747-428c-abca-827e9b8995b6",
    "name" : "Retrieve a list of business names",
    "request" : {
      "urlPath" : "/organisations/vqlq/business-names",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "990328e4-6747-428c-abca-827e9b8995b6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.393331Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1c04b06f-7d5d-4f0a-9cb9-84081705b23d",
    "name" : "Retrieve a list of business names",
    "request" : {
      "urlPath" : "/organisations/bggd/business-names",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Pending Approval\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Issued\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Expired\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Pending Approval\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Expired\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1c04b06f-7d5d-4f0a-9cb9-84081705b23d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.393219Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/business-name"
            },
            "type" : "array"
          }
        }
      }
    }
  }, {
    "id" : "1d2dda31-3d67-44ff-b04a-26c4b4521809",
    "name" : "Update an address",
    "request" : {
      "urlPath" : "/organisations/c1v1/addresses/3e70",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1d2dda31-3d67-44ff-b04a-26c4b4521809",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.393052Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4354dc39-49af-4fcb-bb6b-c331be50a3fa",
    "name" : "Update an address",
    "request" : {
      "urlPath" : "/organisations/00un/addresses/ui9e",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4354dc39-49af-4fcb-bb6b-c331be50a3fa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.392837Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "53268271-8524-4a25-9e94-73acf4da4df5",
    "name" : "Update an address",
    "request" : {
      "urlPath" : "/organisations/2u38/addresses/u05o",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "53268271-8524-4a25-9e94-73acf4da4df5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.392619Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "401e2451-b7eb-4551-b540-1a8dba1d9110",
    "name" : "Update an address",
    "request" : {
      "urlPath" : "/organisations/627n/addresses/7b7h",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "401e2451-b7eb-4551-b540-1a8dba1d9110",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.392417Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Address resource.",
            "properties" : {
              "city" : {
                "description" : "The city.",
                "example" : "Canberra",
                "type" : "string"
              },
              "country" : {
                "description" : "The country.",
                "example" : "Australia",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/addressId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "line1" : {
                "description" : "The address line 1.",
                "example" : "Level 7",
                "type" : "string"
              },
              "line2" : {
                "description" : "The address line 2.",
                "example" : "21 Genge Street",
                "type" : "string"
              },
              "line3" : {
                "description" : "The address line 3.",
                "example" : "",
                "type" : "string"
              },
              "name" : {
                "description" : "The address name.",
                "example" : "Kembery Building",
                "type" : "string"
              },
              "postalCode" : {
                "description" : "The postal code.",
                "example" : "2601",
                "type" : "string"
              },
              "suburb" : {
                "description" : "The suburb.",
                "example" : "Civic",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "21d06da7-2a46-4ec7-a932-5bff14b02330",
    "name" : "Retrieve an address",
    "request" : {
      "urlPath" : "/organisations/5o79/addresses/8wc6",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "21d06da7-2a46-4ec7-a932-5bff14b02330",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.392194Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9e03bcc3-8edd-40a1-9619-4f841e987055",
    "name" : "Retrieve an address",
    "request" : {
      "urlPath" : "/organisations/8680/addresses/n00y",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9e03bcc3-8edd-40a1-9619-4f841e987055",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.391994Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "289270d7-3354-43ac-b814-7f5e33c77259",
    "name" : "Retrieve an address",
    "request" : {
      "urlPath" : "/organisations/17k5/addresses/3269",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "289270d7-3354-43ac-b814-7f5e33c77259",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.391815Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Address resource.",
            "properties" : {
              "city" : {
                "description" : "The city.",
                "example" : "Canberra",
                "type" : "string"
              },
              "country" : {
                "description" : "The country.",
                "example" : "Australia",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/addressId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "line1" : {
                "description" : "The address line 1.",
                "example" : "Level 7",
                "type" : "string"
              },
              "line2" : {
                "description" : "The address line 2.",
                "example" : "21 Genge Street",
                "type" : "string"
              },
              "line3" : {
                "description" : "The address line 3.",
                "example" : "",
                "type" : "string"
              },
              "name" : {
                "description" : "The address name.",
                "example" : "Kembery Building",
                "type" : "string"
              },
              "postalCode" : {
                "description" : "The postal code.",
                "example" : "2601",
                "type" : "string"
              },
              "suburb" : {
                "description" : "The suburb.",
                "example" : "Civic",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "03f303e6-948b-4def-850a-f00fb158bfc9",
    "name" : "Delete an address (application/json)",
    "request" : {
      "urlPath" : "/organisations/5747/addresses/8703",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "03f303e6-948b-4def-850a-f00fb158bfc9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.391577Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "619d40ea-45b0-4404-86dd-5008866e846b",
    "name" : "Delete an address (application/json)",
    "request" : {
      "urlPath" : "/organisations/7031/addresses/kg09",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "619d40ea-45b0-4404-86dd-5008866e846b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.391377Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c0c34262-1a9b-4b48-90a3-380f55d494e5",
    "name" : "Delete an address - 204",
    "request" : {
      "urlPath" : "/organisations/b524/addresses/89el",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "c0c34262-1a9b-4b48-90a3-380f55d494e5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.391197Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "a230a73d-74e1-4678-aee7-b1edbffea069",
    "name" : "Create an address",
    "request" : {
      "urlPath" : "/organisations/2e99/addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a230a73d-74e1-4678-aee7-b1edbffea069",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.391046Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "36eabd50-4b35-405e-9fb3-642d6f0f30c1",
    "name" : "Create an address",
    "request" : {
      "urlPath" : "/organisations/524v/addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "36eabd50-4b35-405e-9fb3-642d6f0f30c1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.390924Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4b1f42bb-036c-4cae-a369-f35921ca804b",
    "name" : "Create an address",
    "request" : {
      "urlPath" : "/organisations/9387/addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4b1f42bb-036c-4cae-a369-f35921ca804b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.390756Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Address resource.",
            "properties" : {
              "city" : {
                "description" : "The city.",
                "example" : "Canberra",
                "type" : "string"
              },
              "country" : {
                "description" : "The country.",
                "example" : "Australia",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/addressId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "line1" : {
                "description" : "The address line 1.",
                "example" : "Level 7",
                "type" : "string"
              },
              "line2" : {
                "description" : "The address line 2.",
                "example" : "21 Genge Street",
                "type" : "string"
              },
              "line3" : {
                "description" : "The address line 3.",
                "example" : "",
                "type" : "string"
              },
              "name" : {
                "description" : "The address name.",
                "example" : "Kembery Building",
                "type" : "string"
              },
              "postalCode" : {
                "description" : "The postal code.",
                "example" : "2601",
                "type" : "string"
              },
              "suburb" : {
                "description" : "The suburb.",
                "example" : "Civic",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f25fdd43-0852-4cd7-9578-a9f892c210e9",
    "name" : "Retrieve a list of addresses",
    "request" : {
      "urlPath" : "/organisations/071g/addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f25fdd43-0852-4cd7-9578-a9f892c210e9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.390577Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "661c89b5-7fba-42e6-b598-b212cf56f075",
    "name" : "Retrieve a list of addresses",
    "request" : {
      "urlPath" : "/organisations/499o/addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "661c89b5-7fba-42e6-b598-b212cf56f075",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.390443Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8388eebc-e8c2-4e94-82ee-992d53339d84",
    "name" : "Retrieve a list of addresses",
    "request" : {
      "urlPath" : "/organisations/r5om/addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8388eebc-e8c2-4e94-82ee-992d53339d84",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.390331Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/address"
            },
            "type" : "array"
          }
        }
      }
    }
  }, {
    "id" : "d68e08e7-9928-49ea-a509-f54737871431",
    "name" : "Update an organisation",
    "request" : {
      "urlPath" : "/organisations/3y9n",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d68e08e7-9928-49ea-a509-f54737871431",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.390191Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "fbe19eaa-3943-4f93-a8bd-957752656f66",
    "name" : "Update an organisation",
    "request" : {
      "urlPath" : "/organisations/xa76",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fbe19eaa-3943-4f93-a8bd-957752656f66",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.390056Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b0d5abbf-305d-4c88-abd6-313b0a6f5028",
    "name" : "Update an organisation",
    "request" : {
      "urlPath" : "/organisations/2qkj",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b0d5abbf-305d-4c88-abd6-313b0a6f5028",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.389934Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "bd1c2f85-0923-4e72-a4a4-598b296f7f1a",
    "name" : "Update an organisation",
    "request" : {
      "urlPath" : "/organisations/5u1h",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"names\" : [ {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  } ],\n  \"establishmentDate\" : \"1928-03-03\",\n  \"legalEntityType\" : \"Trust\",\n  \"toDate\" : \"\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"registeredIdentifiers\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  } ],\n  \"id\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bd1c2f85-0923-4e72-a4a4-598b296f7f1a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.389792Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Organisation resource.",
            "properties" : {
              "addresses" : {
                "items" : {
                  "$ref" : "#/components/schemas/organisation-address"
                },
                "type" : "array"
              },
              "electronicAddresses" : {
                "items" : {
                  "$ref" : "#/components/schemas/electronic-address"
                },
                "type" : "array"
              },
              "establishmentDate" : {
                "description" : "The organisation's establishment date, for example, `1928-03-03` (in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format).",
                "example" : "1928-03-03",
                "format" : "date",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/partyId"
                } ],
                "description" : "The party's unique identifier.",
                "readOnly" : true
              },
              "legalEntityType" : {
                "default" : "Company",
                "description" : "The organisation's legal entity type.",
                "enum" : [ "Company", "Partnership", "Trust", "Joint Venture" ],
                "type" : "string"
              },
              "names" : {
                "items" : {
                  "$ref" : "#/components/schemas/organisation-name"
                },
                "type" : "array"
              },
              "registeredIdentifiers" : {
                "items" : {
                  "$ref" : "#/components/schemas/registered-identifier"
                },
                "type" : "array"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "required" : [ "legalEntityType", "establishmentDate" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "354fe138-eaa3-4b24-908e-6125ddaaa6e3",
    "name" : "Retrieve an organisation",
    "request" : {
      "urlPath" : "/organisations/3frf",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "354fe138-eaa3-4b24-908e-6125ddaaa6e3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.389264Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "77fa5976-c778-476e-bcf3-3fd56ebe5fc2",
    "name" : "Retrieve an organisation",
    "request" : {
      "urlPath" : "/organisations/788e",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "77fa5976-c778-476e-bcf3-3fd56ebe5fc2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.389133Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4a357fd8-09e3-4ff9-a76b-6dc81ced945f",
    "name" : "Retrieve an organisation",
    "request" : {
      "urlPath" : "/organisations/5010",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"names\" : [ {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  } ],\n  \"establishmentDate\" : \"1928-03-03\",\n  \"legalEntityType\" : \"Partnership\",\n  \"toDate\" : \"\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"registeredIdentifiers\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  } ],\n  \"id\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4a357fd8-09e3-4ff9-a76b-6dc81ced945f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.389005Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Organisation resource.",
            "properties" : {
              "addresses" : {
                "items" : {
                  "$ref" : "#/components/schemas/organisation-address"
                },
                "type" : "array"
              },
              "electronicAddresses" : {
                "items" : {
                  "$ref" : "#/components/schemas/electronic-address"
                },
                "type" : "array"
              },
              "establishmentDate" : {
                "description" : "The organisation's establishment date, for example, `1928-03-03` (in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format).",
                "example" : "1928-03-03",
                "format" : "date",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/partyId"
                } ],
                "description" : "The party's unique identifier.",
                "readOnly" : true
              },
              "legalEntityType" : {
                "default" : "Company",
                "description" : "The organisation's legal entity type.",
                "enum" : [ "Company", "Partnership", "Trust", "Joint Venture" ],
                "type" : "string"
              },
              "names" : {
                "items" : {
                  "$ref" : "#/components/schemas/organisation-name"
                },
                "type" : "array"
              },
              "registeredIdentifiers" : {
                "items" : {
                  "$ref" : "#/components/schemas/registered-identifier"
                },
                "type" : "array"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "required" : [ "legalEntityType", "establishmentDate" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4246becb-4eda-4484-8e8e-f925b487df4b",
    "name" : "Delete an organisation (application/json)",
    "request" : {
      "urlPath" : "/organisations/8z9m",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4246becb-4eda-4484-8e8e-f925b487df4b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.388485Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d79a1ec8-a71d-4183-ae6d-be85147603eb",
    "name" : "Delete an organisation (application/json)",
    "request" : {
      "urlPath" : "/organisations/6wm9",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d79a1ec8-a71d-4183-ae6d-be85147603eb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.388339Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2713e1ce-d6ad-49d9-b5f2-175194a9ddb0",
    "name" : "Delete an organisation (application/json)",
    "request" : {
      "urlPath" : "/organisations/3clk",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"Request can not be executed in the current system state\",\n  \"status\" : \"FAILED_PRECONDITION\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2713e1ce-d6ad-49d9-b5f2-175194a9ddb0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.388214Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request can not be executed in the current system state",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "FAILED_PRECONDITION",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d3595bae-ba2f-4452-a560-4a7a460be639",
    "name" : "Delete an organisation - 204",
    "request" : {
      "urlPath" : "/organisations/b4sq",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "d3595bae-ba2f-4452-a560-4a7a460be639",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.388045Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "f57b5968-0f36-4a58-80b5-2419b79a30d1",
    "name" : "Create an organisation",
    "request" : {
      "urlPath" : "/organisations",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f57b5968-0f36-4a58-80b5-2419b79a30d1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.38795Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d44d2dc6-9ddb-43b6-9460-ab71723c4dd8",
    "name" : "Create an organisation",
    "request" : {
      "urlPath" : "/organisations",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d44d2dc6-9ddb-43b6-9460-ab71723c4dd8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.387898Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "10098eff-8731-4c01-b3fb-c6f9cfd25497",
    "name" : "Create an organisation",
    "request" : {
      "urlPath" : "/organisations",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"names\" : [ {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  } ],\n  \"establishmentDate\" : \"1928-03-03\",\n  \"legalEntityType\" : \"Company\",\n  \"toDate\" : \"\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"registeredIdentifiers\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  } ],\n  \"id\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "10098eff-8731-4c01-b3fb-c6f9cfd25497",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.38781Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Organisation resource.",
            "properties" : {
              "addresses" : {
                "items" : {
                  "$ref" : "#/components/schemas/organisation-address"
                },
                "type" : "array"
              },
              "electronicAddresses" : {
                "items" : {
                  "$ref" : "#/components/schemas/electronic-address"
                },
                "type" : "array"
              },
              "establishmentDate" : {
                "description" : "The organisation's establishment date, for example, `1928-03-03` (in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format).",
                "example" : "1928-03-03",
                "format" : "date",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/partyId"
                } ],
                "description" : "The party's unique identifier.",
                "readOnly" : true
              },
              "legalEntityType" : {
                "default" : "Company",
                "description" : "The organisation's legal entity type.",
                "enum" : [ "Company", "Partnership", "Trust", "Joint Venture" ],
                "type" : "string"
              },
              "names" : {
                "items" : {
                  "$ref" : "#/components/schemas/organisation-name"
                },
                "type" : "array"
              },
              "registeredIdentifiers" : {
                "items" : {
                  "$ref" : "#/components/schemas/registered-identifier"
                },
                "type" : "array"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "required" : [ "legalEntityType", "establishmentDate" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e7117b30-1515-43b9-9b02-4eba1653beff",
    "name" : "Retrieve a list of organisations",
    "request" : {
      "urlPath" : "/organisations",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e7117b30-1515-43b9-9b02-4eba1653beff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.387466Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "447cb230-025a-42c9-ad01-6bd5db396cad",
    "name" : "Retrieve a list of organisations",
    "request" : {
      "urlPath" : "/organisations",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "447cb230-025a-42c9-ad01-6bd5db396cad",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.387359Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "98db8ebf-cf1c-43c9-a9cb-d486ed6ade0b",
    "name" : "Retrieve a list of organisations",
    "request" : {
      "urlPath" : "/organisations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"names\" : [ {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  } ],\n  \"establishmentDate\" : \"1928-03-03\",\n  \"legalEntityType\" : \"Joint Venture\",\n  \"toDate\" : \"\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"registeredIdentifiers\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  } ],\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"names\" : [ {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  } ],\n  \"establishmentDate\" : \"1928-03-03\",\n  \"legalEntityType\" : \"Company\",\n  \"toDate\" : \"\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"registeredIdentifiers\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  } ],\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"names\" : [ {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  } ],\n  \"establishmentDate\" : \"1928-03-03\",\n  \"legalEntityType\" : \"Partnership\",\n  \"toDate\" : \"\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"registeredIdentifiers\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  } ],\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"names\" : [ {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  } ],\n  \"establishmentDate\" : \"1928-03-03\",\n  \"legalEntityType\" : \"Partnership\",\n  \"toDate\" : \"\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"registeredIdentifiers\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  } ],\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"names\" : [ {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  } ],\n  \"establishmentDate\" : \"1928-03-03\",\n  \"legalEntityType\" : \"Partnership\",\n  \"toDate\" : \"\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"registeredIdentifiers\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  } ],\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"names\" : [ {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  } ],\n  \"establishmentDate\" : \"1928-03-03\",\n  \"legalEntityType\" : \"Joint Venture\",\n  \"toDate\" : \"\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"registeredIdentifiers\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  } ],\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"names\" : [ {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  } ],\n  \"establishmentDate\" : \"1928-03-03\",\n  \"legalEntityType\" : \"Partnership\",\n  \"toDate\" : \"\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"registeredIdentifiers\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  } ],\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"names\" : [ {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  } ],\n  \"establishmentDate\" : \"1928-03-03\",\n  \"legalEntityType\" : \"Trust\",\n  \"toDate\" : \"\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"registeredIdentifiers\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  } ],\n  \"id\" : { }\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "98db8ebf-cf1c-43c9-a9cb-d486ed6ade0b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.387288Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/organisation"
            },
            "type" : "array"
          }
        }
      }
    }
  }, {
    "id" : "4483d428-667e-4c8b-ba8b-143feab6e12a",
    "name" : "Retrieve a list of licenses",
    "request" : {
      "urlPath" : "/licenses",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4483d428-667e-4c8b-ba8b-143feab6e12a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.38411Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d297f738-b2d0-4b97-b515-ac526b76006e",
    "name" : "Retrieve a list of licenses",
    "request" : {
      "urlPath" : "/licenses",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d297f738-b2d0-4b97-b515-ac526b76006e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.38405Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6f702827-50a0-43aa-ac28-d362a592c9a7",
    "name" : "Retrieve a list of licenses",
    "request" : {
      "urlPath" : "/licenses",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"License 2B\",\n  \"lifecycleState\" : \"Suspended\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"Australian Financial Services License\",\n  \"lifecycleState\" : \"Issued\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6f702827-50a0-43aa-ac28-d362a592c9a7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.383999Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/license"
            },
            "type" : "array"
          }
        }
      }
    }
  }, {
    "id" : "cec7d2e7-58c4-440c-824d-71f429db789b",
    "name" : "Update a role",
    "request" : {
      "urlPath" : "/individuals/hb33/roles/t5h5",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cec7d2e7-58c4-440c-824d-71f429db789b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.383916Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "459b5f21-b0a5-4fa8-bd77-1c5a80ab2a74",
    "name" : "Update a role",
    "request" : {
      "urlPath" : "/individuals/7zh3/roles/151v",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "459b5f21-b0a5-4fa8-bd77-1c5a80ab2a74",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.38373Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "250f793e-d539-4555-841f-855391a9659e",
    "name" : "Update a role",
    "request" : {
      "urlPath" : "/individuals/3tza/roles/tj4o",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "250f793e-d539-4555-841f-855391a9659e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.383555Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3644e267-bace-4c64-8aeb-bc51a3963a50",
    "name" : "Update a role",
    "request" : {
      "urlPath" : "/individuals/7xui/roles/c0hm",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Employment\",\n  \"relatedPartyRoleType\" : \"Association\",\n  \"partyRoleType\" : \"Employee\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3644e267-bace-4c64-8aeb-bc51a3963a50",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.383373Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Party Role resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "2016-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/roleId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "partyRoleType" : {
                "default" : "Employee",
                "description" : "The party's role type.",
                "enum" : [ "Director", "Employee", "Member", "Partner", "Trustee" ],
                "type" : "string"
              },
              "relatedPartyId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/partyId"
                } ],
                "description" : "The related party's unique identifier."
              },
              "relatedPartyRoleType" : {
                "default" : "Employer",
                "description" : "The related party's role type.",
                "enum" : [ "Association", "Company", "Employer", "Organisation", "Partnership", "Trust" ],
                "type" : "string"
              },
              "relationshipType" : {
                "default" : "Employment",
                "description" : "The relationship type.",
                "enum" : [ "Directorship", "Employment", "Membership", "Partnership", "Trusteeship" ],
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "required" : [ "relatedPartyId", "relationshipType" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "382bcd69-8845-4f59-98ce-63760de10945",
    "name" : "Retrieve a role",
    "request" : {
      "urlPath" : "/individuals/jqfz/roles/1h87",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "382bcd69-8845-4f59-98ce-63760de10945",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.383136Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "595ba14c-17f2-4024-8cac-4c581fc38d3d",
    "name" : "Retrieve a role",
    "request" : {
      "urlPath" : "/individuals/pm03/roles/3p4v",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "595ba14c-17f2-4024-8cac-4c581fc38d3d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.382921Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "86f742e6-62fe-4e48-95e4-40e93c3b9a23",
    "name" : "Retrieve a role",
    "request" : {
      "urlPath" : "/individuals/j1ox/roles/7t5l",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Employment\",\n  \"relatedPartyRoleType\" : \"Employer\",\n  \"partyRoleType\" : \"Employee\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "86f742e6-62fe-4e48-95e4-40e93c3b9a23",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.382734Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Party Role resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "2016-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/roleId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "partyRoleType" : {
                "default" : "Employee",
                "description" : "The party's role type.",
                "enum" : [ "Director", "Employee", "Member", "Partner", "Trustee" ],
                "type" : "string"
              },
              "relatedPartyId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/partyId"
                } ],
                "description" : "The related party's unique identifier."
              },
              "relatedPartyRoleType" : {
                "default" : "Employer",
                "description" : "The related party's role type.",
                "enum" : [ "Association", "Company", "Employer", "Organisation", "Partnership", "Trust" ],
                "type" : "string"
              },
              "relationshipType" : {
                "default" : "Employment",
                "description" : "The relationship type.",
                "enum" : [ "Directorship", "Employment", "Membership", "Partnership", "Trusteeship" ],
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "required" : [ "relatedPartyId", "relationshipType" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "593af1e8-eecd-45f4-b2fc-7bd6d10bce9b",
    "name" : "Delete a role (application/json)",
    "request" : {
      "urlPath" : "/individuals/pu3l/roles/b6p4",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "593af1e8-eecd-45f4-b2fc-7bd6d10bce9b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.382484Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "36216fda-8ce2-48ab-af14-708ba2469969",
    "name" : "Delete a role (application/json)",
    "request" : {
      "urlPath" : "/individuals/b5bf/roles/zbny",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "36216fda-8ce2-48ab-af14-708ba2469969",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.382261Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4a0f35a3-06fb-4f25-8f1c-dbf3a87e4d77",
    "name" : "Delete a role - 204",
    "request" : {
      "urlPath" : "/individuals/8s06/roles/fzw4",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "4a0f35a3-06fb-4f25-8f1c-dbf3a87e4d77",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.382087Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "0ee8924f-5e3c-4ac4-9a5e-4e3dfffb1107",
    "name" : "Create a role",
    "request" : {
      "urlPath" : "/individuals/jl5s/roles",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0ee8924f-5e3c-4ac4-9a5e-4e3dfffb1107",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.381946Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0805305a-ef45-42ae-bfdc-3305291a9595",
    "name" : "Create a role",
    "request" : {
      "urlPath" : "/individuals/8t11/roles",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0805305a-ef45-42ae-bfdc-3305291a9595",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.381834Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "635f0f7a-b1a3-496c-9b83-d46a283be6af",
    "name" : "Create a role",
    "request" : {
      "urlPath" : "/individuals/ig98/roles",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Partnership\",\n  \"relatedPartyRoleType\" : \"Employer\",\n  \"partyRoleType\" : \"Partner\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "635f0f7a-b1a3-496c-9b83-d46a283be6af",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.381713Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Party Role resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "2016-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/roleId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "partyRoleType" : {
                "default" : "Employee",
                "description" : "The party's role type.",
                "enum" : [ "Director", "Employee", "Member", "Partner", "Trustee" ],
                "type" : "string"
              },
              "relatedPartyId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/partyId"
                } ],
                "description" : "The related party's unique identifier."
              },
              "relatedPartyRoleType" : {
                "default" : "Employer",
                "description" : "The related party's role type.",
                "enum" : [ "Association", "Company", "Employer", "Organisation", "Partnership", "Trust" ],
                "type" : "string"
              },
              "relationshipType" : {
                "default" : "Employment",
                "description" : "The relationship type.",
                "enum" : [ "Directorship", "Employment", "Membership", "Partnership", "Trusteeship" ],
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "required" : [ "relatedPartyId", "relationshipType" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "50e67af8-f857-438f-83eb-58d5bdb8898d",
    "name" : "Retrieve a list of roles",
    "request" : {
      "urlPath" : "/individuals/xvy7/roles",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "50e67af8-f857-438f-83eb-58d5bdb8898d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.381517Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e1b0500a-87a4-4e38-bf98-3a510238971c",
    "name" : "Retrieve a list of roles",
    "request" : {
      "urlPath" : "/individuals/f9w6/roles",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e1b0500a-87a4-4e38-bf98-3a510238971c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.381397Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b251d66c-7c27-4859-ac02-1fa15430fde6",
    "name" : "Retrieve a list of roles",
    "request" : {
      "urlPath" : "/individuals/95q9/roles",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Membership\",\n  \"relatedPartyRoleType\" : \"Employer\",\n  \"partyRoleType\" : \"Member\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b251d66c-7c27-4859-ac02-1fa15430fde6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.381283Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/party-role"
            },
            "type" : "array"
          }
        }
      }
    }
  }, {
    "id" : "e40b150c-c2d1-44a5-9ea9-9f0a21652a80",
    "name" : "Update a license",
    "request" : {
      "urlPath" : "/individuals/xv4p/licenses/1o64",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e40b150c-c2d1-44a5-9ea9-9f0a21652a80",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.381132Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b4e89384-90b3-43f0-83c5-f2879d9e4550",
    "name" : "Update a license",
    "request" : {
      "urlPath" : "/individuals/nsn4/licenses/9334",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b4e89384-90b3-43f0-83c5-f2879d9e4550",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.380943Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "86bcab2c-446d-4f7a-ba80-51a6f1eb4fd9",
    "name" : "Update a license",
    "request" : {
      "urlPath" : "/individuals/72zr/licenses/z4pq",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "86bcab2c-446d-4f7a-ba80-51a6f1eb4fd9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.380769Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d66cdf5d-d691-4525-aee6-996d8230e73c",
    "name" : "Update a license",
    "request" : {
      "urlPath" : "/individuals/3600/licenses/4fuj",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"License 2B\",\n  \"lifecycleState\" : \"Issued\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d66cdf5d-d691-4525-aee6-996d8230e73c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.380574Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The License resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/resourceId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "licenseType" : {
                "default" : "Australian Financial Services License",
                "description" : "The license type.",
                "enum" : [ "Australian Financial Services License", "License 2B" ],
                "type" : "string"
              },
              "lifecycleState" : {
                "default" : "Pending Approval",
                "description" : "The business name's lifecycle state.",
                "enum" : [ "Approved", "Expired", "Issued", "Pending Approval", "Suspended" ],
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a656a0de-9a83-46a9-a723-66b11a2c9abb",
    "name" : "Retrieve a license",
    "request" : {
      "urlPath" : "/individuals/1og7/licenses/m9j7",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a656a0de-9a83-46a9-a723-66b11a2c9abb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.380372Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0939dbd0-302c-40de-8280-a16ebccaa203",
    "name" : "Retrieve a license",
    "request" : {
      "urlPath" : "/individuals/vl0u/licenses/4q5k",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0939dbd0-302c-40de-8280-a16ebccaa203",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.380183Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ee536dee-331c-4130-b28a-c0ff387a2066",
    "name" : "Retrieve a license",
    "request" : {
      "urlPath" : "/individuals/e5sw/licenses/26ek",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"Australian Financial Services License\",\n  \"lifecycleState\" : \"Issued\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ee536dee-331c-4130-b28a-c0ff387a2066",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.38001Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The License resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/resourceId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "licenseType" : {
                "default" : "Australian Financial Services License",
                "description" : "The license type.",
                "enum" : [ "Australian Financial Services License", "License 2B" ],
                "type" : "string"
              },
              "lifecycleState" : {
                "default" : "Pending Approval",
                "description" : "The business name's lifecycle state.",
                "enum" : [ "Approved", "Expired", "Issued", "Pending Approval", "Suspended" ],
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "323e6699-9222-422e-b7f9-cd663d82fc2b",
    "name" : "Delete a license (application/json)",
    "request" : {
      "urlPath" : "/individuals/518p/licenses/xfms",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "323e6699-9222-422e-b7f9-cd663d82fc2b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.379797Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1e3f3877-e58d-4548-8838-9eff2953c67d",
    "name" : "Delete a license (application/json)",
    "request" : {
      "urlPath" : "/individuals/i8o0/licenses/9yh6",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1e3f3877-e58d-4548-8838-9eff2953c67d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.379606Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "dd678a0a-b3ed-43b9-8868-7014d373142c",
    "name" : "Delete a license - 204",
    "request" : {
      "urlPath" : "/individuals/1780/licenses/nm1z",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "dd678a0a-b3ed-43b9-8868-7014d373142c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.379421Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "e5f50a74-a730-44b0-9e8c-b056bfbc0196",
    "name" : "Create a license",
    "request" : {
      "urlPath" : "/individuals/8997/licenses",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e5f50a74-a730-44b0-9e8c-b056bfbc0196",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.379275Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5636dfd5-e3b2-4333-b47d-d935a52d5095",
    "name" : "Create a license",
    "request" : {
      "urlPath" : "/individuals/wr9o/licenses",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5636dfd5-e3b2-4333-b47d-d935a52d5095",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.379159Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4fac5e92-3f47-4140-b663-22bea7c72748",
    "name" : "Create a license",
    "request" : {
      "urlPath" : "/individuals/5wwi/licenses",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"License 2B\",\n  \"lifecycleState\" : \"Pending Approval\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4fac5e92-3f47-4140-b663-22bea7c72748",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.379013Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The License resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/resourceId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "licenseType" : {
                "default" : "Australian Financial Services License",
                "description" : "The license type.",
                "enum" : [ "Australian Financial Services License", "License 2B" ],
                "type" : "string"
              },
              "lifecycleState" : {
                "default" : "Pending Approval",
                "description" : "The business name's lifecycle state.",
                "enum" : [ "Approved", "Expired", "Issued", "Pending Approval", "Suspended" ],
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "01fd2a70-3a90-4501-b235-39357fc6ef99",
    "name" : "Retrieve a list of licenses",
    "request" : {
      "urlPath" : "/individuals/z4dw/licenses",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "01fd2a70-3a90-4501-b235-39357fc6ef99",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.378859Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c8766cdc-f238-4605-b966-0cd5e083e1be",
    "name" : "Retrieve a list of licenses",
    "request" : {
      "urlPath" : "/individuals/ezyi/licenses",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c8766cdc-f238-4605-b966-0cd5e083e1be",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.378737Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "cf361321-5eb8-4432-aeee-9f1df0a4d17b",
    "name" : "Retrieve a list of licenses",
    "request" : {
      "urlPath" : "/individuals/01ia/licenses",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"Australian Financial Services License\",\n  \"lifecycleState\" : \"Issued\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"License 2B\",\n  \"lifecycleState\" : \"Expired\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"Australian Financial Services License\",\n  \"lifecycleState\" : \"Approved\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"Australian Financial Services License\",\n  \"lifecycleState\" : \"Pending Approval\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"License 2B\",\n  \"lifecycleState\" : \"Pending Approval\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"Australian Financial Services License\",\n  \"lifecycleState\" : \"Expired\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cf361321-5eb8-4432-aeee-9f1df0a4d17b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.378621Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/license"
            },
            "type" : "array"
          }
        }
      }
    }
  }, {
    "id" : "c0c15248-59b8-459d-ad50-cba5acee9353",
    "name" : "Update an electronic address",
    "request" : {
      "urlPath" : "/individuals/13i4/electronic-addresses/z49v",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c0c15248-59b8-459d-ad50-cba5acee9353",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.378404Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "bc7cd0ab-3f3c-4e88-8a2f-def9a9c89e0c",
    "name" : "Update an electronic address",
    "request" : {
      "urlPath" : "/individuals/gxht/electronic-addresses/6432",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bc7cd0ab-3f3c-4e88-8a2f-def9a9c89e0c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.378193Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "598a2a2a-e10b-4318-a03b-5dbc57081183",
    "name" : "Update an electronic address",
    "request" : {
      "urlPath" : "/individuals/sqv2/electronic-addresses/l06i",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "598a2a2a-e10b-4318-a03b-5dbc57081183",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.378021Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "aade68a3-3918-477b-b10d-f329e9589379",
    "name" : "Update an electronic address",
    "request" : {
      "urlPath" : "/individuals/925z/electronic-addresses/h8r6",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"electronicAddressType\" : \"Mobile\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aade68a3-3918-477b-b10d-f329e9589379",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.377807Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Electronic Address resource.",
            "properties" : {
              "areaCode" : {
                "description" : "The area code, for example, \"02\".",
                "example" : "02",
                "type" : "string"
              },
              "countryPrefix" : {
                "description" : "The country prefix, for example, \"61\".",
                "example" : "61",
                "type" : "string"
              },
              "electronicAddressType" : {
                "default" : "Landline",
                "description" : "The electronic address type.",
                "enum" : [ "Email", "Fax", "Landline", "Mobile", "Website" ],
                "type" : "string"
              },
              "email" : {
                "description" : "The email address, for example, \"robert.ferguson@ato.gov.au\".",
                "example" : "",
                "type" : "string"
              },
              "extension" : {
                "description" : "The extension number, for example, \"4453\".",
                "example" : "",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/addressId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "number" : {
                "description" : "The number, for example, \"62164453\".",
                "example" : "62164453",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The website address, for example, \"https://ato.gov.au\".",
                "example" : "",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "49c1a8b9-1033-48a4-9301-a3da77eb979a",
    "name" : "Retrieve an electronic address",
    "request" : {
      "urlPath" : "/individuals/qax2/electronic-addresses/j8zd",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "49c1a8b9-1033-48a4-9301-a3da77eb979a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.37758Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "563697dd-8be5-41e0-b5ef-68774f1bb644",
    "name" : "Retrieve an electronic address",
    "request" : {
      "urlPath" : "/individuals/8za3/electronic-addresses/o752",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "563697dd-8be5-41e0-b5ef-68774f1bb644",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.377371Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "39449671-0b1c-40f7-ba10-234f30994e9a",
    "name" : "Retrieve an electronic address",
    "request" : {
      "urlPath" : "/individuals/5zoo/electronic-addresses/224k",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"electronicAddressType\" : \"Landline\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "39449671-0b1c-40f7-ba10-234f30994e9a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.377197Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Electronic Address resource.",
            "properties" : {
              "areaCode" : {
                "description" : "The area code, for example, \"02\".",
                "example" : "02",
                "type" : "string"
              },
              "countryPrefix" : {
                "description" : "The country prefix, for example, \"61\".",
                "example" : "61",
                "type" : "string"
              },
              "electronicAddressType" : {
                "default" : "Landline",
                "description" : "The electronic address type.",
                "enum" : [ "Email", "Fax", "Landline", "Mobile", "Website" ],
                "type" : "string"
              },
              "email" : {
                "description" : "The email address, for example, \"robert.ferguson@ato.gov.au\".",
                "example" : "",
                "type" : "string"
              },
              "extension" : {
                "description" : "The extension number, for example, \"4453\".",
                "example" : "",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/addressId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "number" : {
                "description" : "The number, for example, \"62164453\".",
                "example" : "62164453",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The website address, for example, \"https://ato.gov.au\".",
                "example" : "",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "35b56ea1-dbb5-44c1-9f7c-80a843f37cd3",
    "name" : "Delete an electronic address (application/json)",
    "request" : {
      "urlPath" : "/individuals/dz28/electronic-addresses/5hqo",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "35b56ea1-dbb5-44c1-9f7c-80a843f37cd3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.376952Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5314b695-9f0c-45f5-b7c8-ee40b751bf3f",
    "name" : "Delete an electronic address (application/json)",
    "request" : {
      "urlPath" : "/individuals/640v/electronic-addresses/3q4u",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5314b695-9f0c-45f5-b7c8-ee40b751bf3f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.376753Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "bff058b3-fc36-4500-8c70-78e4b88e3e36",
    "name" : "Delete an electronic address - 204",
    "request" : {
      "urlPath" : "/individuals/3z4s/electronic-addresses/111h",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "bff058b3-fc36-4500-8c70-78e4b88e3e36",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.37658Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "4472f921-0e8f-48d9-821a-3f454f99331f",
    "name" : "Create an electronic address",
    "request" : {
      "urlPath" : "/individuals/6o8p/electronic-addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4472f921-0e8f-48d9-821a-3f454f99331f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.376434Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "33709251-a969-4efe-b6fd-339735b376ad",
    "name" : "Create an electronic address",
    "request" : {
      "urlPath" : "/individuals/hnsb/electronic-addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "33709251-a969-4efe-b6fd-339735b376ad",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.376323Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b546de59-3b03-44d1-9347-f049fa8a2a27",
    "name" : "Create an electronic address",
    "request" : {
      "urlPath" : "/individuals/00iy/electronic-addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"electronicAddressType\" : \"Fax\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b546de59-3b03-44d1-9347-f049fa8a2a27",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.376176Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Electronic Address resource.",
            "properties" : {
              "areaCode" : {
                "description" : "The area code, for example, \"02\".",
                "example" : "02",
                "type" : "string"
              },
              "countryPrefix" : {
                "description" : "The country prefix, for example, \"61\".",
                "example" : "61",
                "type" : "string"
              },
              "electronicAddressType" : {
                "default" : "Landline",
                "description" : "The electronic address type.",
                "enum" : [ "Email", "Fax", "Landline", "Mobile", "Website" ],
                "type" : "string"
              },
              "email" : {
                "description" : "The email address, for example, \"robert.ferguson@ato.gov.au\".",
                "example" : "",
                "type" : "string"
              },
              "extension" : {
                "description" : "The extension number, for example, \"4453\".",
                "example" : "",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/addressId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "number" : {
                "description" : "The number, for example, \"62164453\".",
                "example" : "62164453",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The website address, for example, \"https://ato.gov.au\".",
                "example" : "",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e9b7dce4-7b5f-4135-918a-95ba0f008a98",
    "name" : "Retrieve a list of electronic addresses",
    "request" : {
      "urlPath" : "/individuals/75qo/electronic-addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e9b7dce4-7b5f-4135-918a-95ba0f008a98",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.375985Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "073c72e7-7ae1-4df7-be6c-366b2434212b",
    "name" : "Retrieve a list of electronic addresses",
    "request" : {
      "urlPath" : "/individuals/6943/electronic-addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "073c72e7-7ae1-4df7-be6c-366b2434212b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.375857Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "214d3cac-8c64-4fbd-9c49-7794fefdc1ef",
    "name" : "Retrieve a list of electronic addresses",
    "request" : {
      "urlPath" : "/individuals/a79q/electronic-addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"electronicAddressType\" : \"Mobile\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n}, {\n  \"electronicAddressType\" : \"Fax\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n}, {\n  \"electronicAddressType\" : \"Email\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "214d3cac-8c64-4fbd-9c49-7794fefdc1ef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.375745Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/electronic-address"
            },
            "type" : "array"
          }
        }
      }
    }
  }, {
    "id" : "de68170b-0a10-4b37-a848-623039424210",
    "name" : "Update a business name",
    "request" : {
      "urlPath" : "/individuals/h24f/business-names/9e62",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "de68170b-0a10-4b37-a848-623039424210",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.375567Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3ea4f821-c503-44de-b825-55f8377f661b",
    "name" : "Update a business name",
    "request" : {
      "urlPath" : "/individuals/pcuu/business-names/87a7",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3ea4f821-c503-44de-b825-55f8377f661b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.375354Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d8d56b8c-f01d-47f4-b80b-773f9eb3fcba",
    "name" : "Update a business name",
    "request" : {
      "urlPath" : "/individuals/li4w/business-names/1379",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d8d56b8c-f01d-47f4-b80b-773f9eb3fcba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.37518Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e62a57ae-3530-46e7-8e12-1f2dcc3cb5bb",
    "name" : "Update a business name",
    "request" : {
      "urlPath" : "/individuals/ih2i/business-names/07oa",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Issued\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e62a57ae-3530-46e7-8e12-1f2dcc3cb5bb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.374974Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Business Name resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/resourceId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "lifecycleState" : {
                "default" : "Pending Approval",
                "description" : "The business name's lifecycle state.",
                "enum" : [ "Approved", "Expired", "Issued", "Pending Approval", "Suspended" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The business name.",
                "example" : "XYZ Technology Ventures",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "90a1d4a9-b703-49d1-a295-f54867ad2129",
    "name" : "Retrieve a business name",
    "request" : {
      "urlPath" : "/individuals/3bfv/business-names/5200",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "90a1d4a9-b703-49d1-a295-f54867ad2129",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.374785Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6a91e567-32b3-4bad-b13d-5c6eb93cb059",
    "name" : "Retrieve a business name",
    "request" : {
      "urlPath" : "/individuals/qt53/business-names/2ej4",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6a91e567-32b3-4bad-b13d-5c6eb93cb059",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.374612Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6f358775-e5d8-4a3f-9884-bff5794e8fd2",
    "name" : "Retrieve a business name",
    "request" : {
      "urlPath" : "/individuals/c87l/business-names/y6xx",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Approved\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6f358775-e5d8-4a3f-9884-bff5794e8fd2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.374436Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Business Name resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/resourceId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "lifecycleState" : {
                "default" : "Pending Approval",
                "description" : "The business name's lifecycle state.",
                "enum" : [ "Approved", "Expired", "Issued", "Pending Approval", "Suspended" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The business name.",
                "example" : "XYZ Technology Ventures",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9a6567de-2b34-4618-8a11-768114747795",
    "name" : "Delete a business name (application/json)",
    "request" : {
      "urlPath" : "/individuals/nxwk/business-names/yg6v",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9a6567de-2b34-4618-8a11-768114747795",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.374239Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e41cc9d6-038f-4a21-a931-925ba0224b57",
    "name" : "Delete a business name (application/json)",
    "request" : {
      "urlPath" : "/individuals/u534/business-names/fd7c",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e41cc9d6-038f-4a21-a931-925ba0224b57",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.374004Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0dc3d50e-aa45-400c-9704-6f63729206d7",
    "name" : "Delete a business name - 204",
    "request" : {
      "urlPath" : "/individuals/3g44/business-names/fnxo",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "0dc3d50e-aa45-400c-9704-6f63729206d7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.373834Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "8d82c050-87e7-48d4-a643-826661df232a",
    "name" : "Create a business name",
    "request" : {
      "urlPath" : "/individuals/1661/business-names",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8d82c050-87e7-48d4-a643-826661df232a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.373684Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6e010fd8-e8d9-4967-afcb-674a536edbef",
    "name" : "Create a business name",
    "request" : {
      "urlPath" : "/individuals/q6mo/business-names",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6e010fd8-e8d9-4967-afcb-674a536edbef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.37357Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d3acbab8-bff6-45f8-86e1-d7b32271807e",
    "name" : "Create a business name",
    "request" : {
      "urlPath" : "/individuals/244n/business-names",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Issued\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d3acbab8-bff6-45f8-86e1-d7b32271807e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.373423Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Business Name resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/resourceId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "lifecycleState" : {
                "default" : "Pending Approval",
                "description" : "The business name's lifecycle state.",
                "enum" : [ "Approved", "Expired", "Issued", "Pending Approval", "Suspended" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The business name.",
                "example" : "XYZ Technology Ventures",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "477a2d90-6ce0-440c-bc4b-ad447b36f367",
    "name" : "Retrieve a list of business names",
    "request" : {
      "urlPath" : "/individuals/3cjz/business-names",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "477a2d90-6ce0-440c-bc4b-ad447b36f367",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.373276Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "62ab75e0-ddeb-412c-843a-8f3bb9d5b9b1",
    "name" : "Retrieve a list of business names",
    "request" : {
      "urlPath" : "/individuals/42e5/business-names",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "62ab75e0-ddeb-412c-843a-8f3bb9d5b9b1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.37315Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0e4298bd-cdcb-47b2-80b7-2370f14953f6",
    "name" : "Retrieve a list of business names",
    "request" : {
      "urlPath" : "/individuals/g408/business-names",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Suspended\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Approved\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Expired\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Approved\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Approved\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0e4298bd-cdcb-47b2-80b7-2370f14953f6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.373037Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/business-name"
            },
            "type" : "array"
          }
        }
      }
    }
  }, {
    "id" : "d5d0ddcf-ee10-4553-88ab-3dae27e906f1",
    "name" : "Update an address",
    "request" : {
      "urlPath" : "/individuals/q5mq/addresses/6n4m",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d5d0ddcf-ee10-4553-88ab-3dae27e906f1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.372877Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1e13bdf1-6e8f-4feb-8549-34136e1fe28f",
    "name" : "Update an address",
    "request" : {
      "urlPath" : "/individuals/s07l/addresses/w13d",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1e13bdf1-6e8f-4feb-8549-34136e1fe28f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.372687Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "54c5e336-957f-4498-a6db-632fb91471fb",
    "name" : "Update an address",
    "request" : {
      "urlPath" : "/individuals/5534/addresses/vc4e",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "54c5e336-957f-4498-a6db-632fb91471fb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.372519Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "797a6d46-4ecb-41ce-bbe0-fd95708ba0cd",
    "name" : "Update an address",
    "request" : {
      "urlPath" : "/individuals/8lk2/addresses/ki60",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "797a6d46-4ecb-41ce-bbe0-fd95708ba0cd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.372321Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Address resource.",
            "properties" : {
              "city" : {
                "description" : "The city.",
                "example" : "Canberra",
                "type" : "string"
              },
              "country" : {
                "description" : "The country.",
                "example" : "Australia",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/addressId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "line1" : {
                "description" : "The address line 1.",
                "example" : "Level 7",
                "type" : "string"
              },
              "line2" : {
                "description" : "The address line 2.",
                "example" : "21 Genge Street",
                "type" : "string"
              },
              "line3" : {
                "description" : "The address line 3.",
                "example" : "",
                "type" : "string"
              },
              "name" : {
                "description" : "The address name.",
                "example" : "Kembery Building",
                "type" : "string"
              },
              "postalCode" : {
                "description" : "The postal code.",
                "example" : "2601",
                "type" : "string"
              },
              "suburb" : {
                "description" : "The suburb.",
                "example" : "Civic",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8e5203a8-4b47-4617-b76f-0cc01e66948b",
    "name" : "Retrieve an address",
    "request" : {
      "urlPath" : "/individuals/nvmo/addresses/j9jn",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8e5203a8-4b47-4617-b76f-0cc01e66948b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.372105Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "969c0e77-2d18-4f47-b24e-43b3a3286aca",
    "name" : "Retrieve an address",
    "request" : {
      "urlPath" : "/individuals/13xq/addresses/0h63",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "969c0e77-2d18-4f47-b24e-43b3a3286aca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.371918Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "aa41e527-726c-4d27-b44d-acf3780a2b15",
    "name" : "Retrieve an address",
    "request" : {
      "urlPath" : "/individuals/xs65/addresses/oem9",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aa41e527-726c-4d27-b44d-acf3780a2b15",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.371735Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Address resource.",
            "properties" : {
              "city" : {
                "description" : "The city.",
                "example" : "Canberra",
                "type" : "string"
              },
              "country" : {
                "description" : "The country.",
                "example" : "Australia",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/addressId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "line1" : {
                "description" : "The address line 1.",
                "example" : "Level 7",
                "type" : "string"
              },
              "line2" : {
                "description" : "The address line 2.",
                "example" : "21 Genge Street",
                "type" : "string"
              },
              "line3" : {
                "description" : "The address line 3.",
                "example" : "",
                "type" : "string"
              },
              "name" : {
                "description" : "The address name.",
                "example" : "Kembery Building",
                "type" : "string"
              },
              "postalCode" : {
                "description" : "The postal code.",
                "example" : "2601",
                "type" : "string"
              },
              "suburb" : {
                "description" : "The suburb.",
                "example" : "Civic",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d831978c-b172-479d-a422-d104985fbef8",
    "name" : "Delete an address (application/json)",
    "request" : {
      "urlPath" : "/individuals/3nb2/addresses/7388",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d831978c-b172-479d-a422-d104985fbef8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.371497Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b1ee747d-233c-4590-a093-3500e7e33119",
    "name" : "Delete an address (application/json)",
    "request" : {
      "urlPath" : "/individuals/xh49/addresses/6s6c",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b1ee747d-233c-4590-a093-3500e7e33119",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.371305Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5936b54f-93d3-4bed-b4ff-d924d9f1b0f8",
    "name" : "Delete an address - 204",
    "request" : {
      "urlPath" : "/individuals/7f0h/addresses/6l31",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "5936b54f-93d3-4bed-b4ff-d924d9f1b0f8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.371127Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "81c65c43-ef5c-490b-9e28-eaa18b538840",
    "name" : "Create an address",
    "request" : {
      "urlPath" : "/individuals/a8u2/addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "81c65c43-ef5c-490b-9e28-eaa18b538840",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.370976Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e1c0c18f-00a3-45cb-9ae6-5b6df7eb51a8",
    "name" : "Create an address",
    "request" : {
      "urlPath" : "/individuals/1fz3/addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e1c0c18f-00a3-45cb-9ae6-5b6df7eb51a8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.370859Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2f37cb8a-11b4-446f-ad78-7554e053408f",
    "name" : "Create an address",
    "request" : {
      "urlPath" : "/individuals/ggzh/addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2f37cb8a-11b4-446f-ad78-7554e053408f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.370715Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Address resource.",
            "properties" : {
              "city" : {
                "description" : "The city.",
                "example" : "Canberra",
                "type" : "string"
              },
              "country" : {
                "description" : "The country.",
                "example" : "Australia",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/addressId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "line1" : {
                "description" : "The address line 1.",
                "example" : "Level 7",
                "type" : "string"
              },
              "line2" : {
                "description" : "The address line 2.",
                "example" : "21 Genge Street",
                "type" : "string"
              },
              "line3" : {
                "description" : "The address line 3.",
                "example" : "",
                "type" : "string"
              },
              "name" : {
                "description" : "The address name.",
                "example" : "Kembery Building",
                "type" : "string"
              },
              "postalCode" : {
                "description" : "The postal code.",
                "example" : "2601",
                "type" : "string"
              },
              "suburb" : {
                "description" : "The suburb.",
                "example" : "Civic",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "61c28324-c57a-4778-99fe-a172a5869bf4",
    "name" : "Retrieve a list of addresses",
    "request" : {
      "urlPath" : "/individuals/2r0c/addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "61c28324-c57a-4778-99fe-a172a5869bf4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.370526Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "cea4e607-77ff-408e-af5f-65ad12de6cc4",
    "name" : "Retrieve a list of addresses",
    "request" : {
      "urlPath" : "/individuals/d19i/addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cea4e607-77ff-408e-af5f-65ad12de6cc4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.370402Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "37b31461-1c95-4ec9-8009-ea2ef8aa9027",
    "name" : "Retrieve a list of addresses",
    "request" : {
      "urlPath" : "/individuals/4309/addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "37b31461-1c95-4ec9-8009-ea2ef8aa9027",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.370284Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/address"
            },
            "type" : "array"
          }
        }
      }
    }
  }, {
    "id" : "99eafbc0-649e-4f61-bcc9-94560a4198b6",
    "name" : "Update an individual",
    "request" : {
      "urlPath" : "/individuals/25pq",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "99eafbc0-649e-4f61-bcc9-94560a4198b6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.370156Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d70b6d44-981f-46df-b2ed-531f55af988a",
    "name" : "Update an individual",
    "request" : {
      "urlPath" : "/individuals/957a",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d70b6d44-981f-46df-b2ed-531f55af988a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.370002Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2cf31300-9192-4482-97a8-986c221268c1",
    "name" : "Update an individual",
    "request" : {
      "urlPath" : "/individuals/4f85",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2cf31300-9192-4482-97a8-986c221268c1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.369882Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "09c3d82b-32ac-43b5-85f1-e96220837f80",
    "name" : "Update an individual",
    "request" : {
      "urlPath" : "/individuals/pfh6",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Residence\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"placeOfBirth\" : \"Tamworth\",\n  \"names\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  } ],\n  \"gender\" : \"Male\",\n  \"toDate\" : \"\",\n  \"dateOfBirth\" : \"1979-01-13\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"id\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "09c3d82b-32ac-43b5-85f1-e96220837f80",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.369744Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Individual resource.",
            "properties" : {
              "addresses" : {
                "items" : {
                  "$ref" : "#/components/schemas/individual-address"
                },
                "type" : "array"
              },
              "dateOfBirth" : {
                "description" : "The individual's date of birth, for example, `1979-01-13` (in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format).",
                "example" : "1979-01-13",
                "format" : "date",
                "type" : "string"
              },
              "electronicAddresses" : {
                "items" : {
                  "$ref" : "#/components/schemas/electronic-address"
                },
                "type" : "array"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "gender" : {
                "default" : "Male",
                "description" : "The individual's gender.",
                "enum" : [ "Female", "Male", "Not Applicable", "Not Known" ],
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/partyId"
                } ],
                "description" : "The party's unique identifier.",
                "readOnly" : true
              },
              "names" : {
                "items" : {
                  "$ref" : "#/components/schemas/individual-name"
                },
                "type" : "array"
              },
              "placeOfBirth" : {
                "description" : "The individual's place of birth, for example, `Tamworth`.",
                "example" : "Tamworth",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "required" : [ "dateOfBirth", "placeOfBirth" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b21eb562-3059-493d-a919-00539895c5b3",
    "name" : "Retrieve an individual",
    "request" : {
      "urlPath" : "/individuals/m33l",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b21eb562-3059-493d-a919-00539895c5b3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.36917Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8a07e078-330f-4237-a0b3-8ece9c44a819",
    "name" : "Retrieve an individual",
    "request" : {
      "urlPath" : "/individuals/0907",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8a07e078-330f-4237-a0b3-8ece9c44a819",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.369027Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "50e5bb44-f38f-473a-86f8-6f14e64fcb02",
    "name" : "Retrieve an individual",
    "request" : {
      "urlPath" : "/individuals/l567",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"placeOfBirth\" : \"Tamworth\",\n  \"names\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  } ],\n  \"gender\" : \"Not Applicable\",\n  \"toDate\" : \"\",\n  \"dateOfBirth\" : \"1979-01-13\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"id\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "50e5bb44-f38f-473a-86f8-6f14e64fcb02",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.368897Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Individual resource.",
            "properties" : {
              "addresses" : {
                "items" : {
                  "$ref" : "#/components/schemas/individual-address"
                },
                "type" : "array"
              },
              "dateOfBirth" : {
                "description" : "The individual's date of birth, for example, `1979-01-13` (in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format).",
                "example" : "1979-01-13",
                "format" : "date",
                "type" : "string"
              },
              "electronicAddresses" : {
                "items" : {
                  "$ref" : "#/components/schemas/electronic-address"
                },
                "type" : "array"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "gender" : {
                "default" : "Male",
                "description" : "The individual's gender.",
                "enum" : [ "Female", "Male", "Not Applicable", "Not Known" ],
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/partyId"
                } ],
                "description" : "The party's unique identifier.",
                "readOnly" : true
              },
              "names" : {
                "items" : {
                  "$ref" : "#/components/schemas/individual-name"
                },
                "type" : "array"
              },
              "placeOfBirth" : {
                "description" : "The individual's place of birth, for example, `Tamworth`.",
                "example" : "Tamworth",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "required" : [ "dateOfBirth", "placeOfBirth" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3965727f-65e1-45f8-8153-0a506dbea532",
    "name" : "Delete an individual (application/json)",
    "request" : {
      "urlPath" : "/individuals/33am",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3965727f-65e1-45f8-8153-0a506dbea532",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.368313Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f24686ad-d8e1-4d09-95a0-0965ccdbc9c5",
    "name" : "Delete an individual (application/json)",
    "request" : {
      "urlPath" : "/individuals/e12o",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f24686ad-d8e1-4d09-95a0-0965ccdbc9c5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.368165Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "24745ef0-6f18-4f7d-a70b-0493c6e03165",
    "name" : "Delete an individual (application/json)",
    "request" : {
      "urlPath" : "/individuals/144v",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"Request can not be executed in the current system state\",\n  \"status\" : \"FAILED_PRECONDITION\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "24745ef0-6f18-4f7d-a70b-0493c6e03165",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.368034Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request can not be executed in the current system state",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "FAILED_PRECONDITION",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "79c3ea0a-e472-42f0-b246-78e2c0c430cf",
    "name" : "Delete an individual - 204",
    "request" : {
      "urlPath" : "/individuals/85m4",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "79c3ea0a-e472-42f0-b246-78e2c0c430cf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.367867Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "ea430205-4a7e-41e6-aed3-bf3f66b9001b",
    "name" : "Create an individual",
    "request" : {
      "urlPath" : "/individuals",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ea430205-4a7e-41e6-aed3-bf3f66b9001b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.367742Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "09b51940-46f6-4607-9c42-71af70cc3baf",
    "name" : "Create an individual",
    "request" : {
      "urlPath" : "/individuals",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "09b51940-46f6-4607-9c42-71af70cc3baf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.367689Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7f48a3d7-e227-4dea-a98b-8607c11fe2a5",
    "name" : "Create an individual",
    "request" : {
      "urlPath" : "/individuals",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Residence\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"placeOfBirth\" : \"Tamworth\",\n  \"names\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  } ],\n  \"gender\" : \"Not Known\",\n  \"toDate\" : \"\",\n  \"dateOfBirth\" : \"1979-01-13\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"id\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7f48a3d7-e227-4dea-a98b-8607c11fe2a5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.367588Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Individual resource.",
            "properties" : {
              "addresses" : {
                "items" : {
                  "$ref" : "#/components/schemas/individual-address"
                },
                "type" : "array"
              },
              "dateOfBirth" : {
                "description" : "The individual's date of birth, for example, `1979-01-13` (in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format).",
                "example" : "1979-01-13",
                "format" : "date",
                "type" : "string"
              },
              "electronicAddresses" : {
                "items" : {
                  "$ref" : "#/components/schemas/electronic-address"
                },
                "type" : "array"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "gender" : {
                "default" : "Male",
                "description" : "The individual's gender.",
                "enum" : [ "Female", "Male", "Not Applicable", "Not Known" ],
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/partyId"
                } ],
                "description" : "The party's unique identifier.",
                "readOnly" : true
              },
              "names" : {
                "items" : {
                  "$ref" : "#/components/schemas/individual-name"
                },
                "type" : "array"
              },
              "placeOfBirth" : {
                "description" : "The individual's place of birth, for example, `Tamworth`.",
                "example" : "Tamworth",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "required" : [ "dateOfBirth", "placeOfBirth" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "fdc0d66f-ab27-46f8-801a-f4920d1cb5fb",
    "name" : "Retrieve a list of individuals",
    "request" : {
      "urlPath" : "/individuals",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fdc0d66f-ab27-46f8-801a-f4920d1cb5fb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.367294Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3f362cf0-8480-4371-be9a-cff2db8861cc",
    "name" : "Retrieve a list of individuals",
    "request" : {
      "urlPath" : "/individuals",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3f362cf0-8480-4371-be9a-cff2db8861cc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.367223Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "cf4954d4-913d-4386-8931-db4f9807beb5",
    "name" : "Retrieve a list of individuals",
    "request" : {
      "urlPath" : "/individuals",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Residence\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"placeOfBirth\" : \"Tamworth\",\n  \"names\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  } ],\n  \"gender\" : \"Not Applicable\",\n  \"toDate\" : \"\",\n  \"dateOfBirth\" : \"1979-01-13\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Residence\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Residence\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Residence\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Residence\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Residence\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"placeOfBirth\" : \"Tamworth\",\n  \"names\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  } ],\n  \"gender\" : \"Male\",\n  \"toDate\" : \"\",\n  \"dateOfBirth\" : \"1979-01-13\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Residence\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Residence\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Residence\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"placeOfBirth\" : \"Tamworth\",\n  \"names\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  } ],\n  \"gender\" : \"Not Known\",\n  \"toDate\" : \"\",\n  \"dateOfBirth\" : \"1979-01-13\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Residence\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Residence\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Residence\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"placeOfBirth\" : \"Tamworth\",\n  \"names\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  } ],\n  \"gender\" : \"Not Applicable\",\n  \"toDate\" : \"\",\n  \"dateOfBirth\" : \"1979-01-13\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"placeOfBirth\" : \"Tamworth\",\n  \"names\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  } ],\n  \"gender\" : \"Not Known\",\n  \"toDate\" : \"\",\n  \"dateOfBirth\" : \"1979-01-13\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"id\" : { }\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cf4954d4-913d-4386-8931-db4f9807beb5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.36716Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/individual"
            },
            "type" : "array"
          }
        }
      }
    }
  }, {
    "id" : "48b21f75-5b60-4ed0-bf32-2991c4104162",
    "name" : "Retrieve a list of roles",
    "request" : {
      "urlPath" : "/classifications/roles",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "48b21f75-5b60-4ed0-bf32-2991c4104162",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.365144Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e7f22eac-b0ac-48af-a79f-226e6dde29ce",
    "name" : "Retrieve a list of roles",
    "request" : {
      "urlPath" : "/classifications/roles",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e7f22eac-b0ac-48af-a79f-226e6dde29ce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.365066Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6dc6ee8e-8c25-4a5b-9920-039389954b91",
    "name" : "Retrieve a list of roles",
    "request" : {
      "urlPath" : "/classifications/roles",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440001\",\n  \"reciprocalRole\" : \"Company\",\n  \"reciprocalRoleDescription\" : \"An incorporated legal entity.\",\n  \"relationship\" : \"Directorship\",\n  \"role\" : \"Director\",\n  \"roleDescription\" : \"An individual responsible for managing a company's business activities.\"\n}, {\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440002\",\n  \"reciprocalRole\" : \"Employer\",\n  \"reciprocalRoleDescription\" : \"An individual or organisation that employs people.\",\n  \"relationship\" : \"Employment\",\n  \"role\" : \"Employee\",\n  \"roleDescription\" : \"An individual employed for wages or salary.\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6dc6ee8e-8c25-4a5b-9920-039389954b91",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.365012Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : [ {
              "id" : "123e4567-e89b-12d3-a456-426655440001",
              "reciprocalRole" : "Company",
              "reciprocalRoleDescription" : "An incorporated legal entity.",
              "relationship" : "Directorship",
              "role" : "Director",
              "roleDescription" : "An individual responsible for managing a company's business activities."
            }, {
              "id" : "123e4567-e89b-12d3-a456-426655440002",
              "reciprocalRole" : "Employer",
              "reciprocalRoleDescription" : "An individual or organisation that employs people.",
              "relationship" : "Employment",
              "role" : "Employee",
              "roleDescription" : "An individual employed for wages or salary."
            } ],
            "items" : {
              "$ref" : "#/components/schemas/role"
            },
            "type" : "array"
          }
        }
      }
    }
  }, {
    "id" : "31fed2f9-a230-4859-9e7e-a1c1a96fc556",
    "name" : "Retrieve a list of registered identifier types",
    "request" : {
      "urlPath" : "/classifications/registered-identifier-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "31fed2f9-a230-4859-9e7e-a1c1a96fc556",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.36496Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3b4a041e-bf5d-4dc8-86ff-d12dcfb4ad1a",
    "name" : "Retrieve a list of registered identifier types",
    "request" : {
      "urlPath" : "/classifications/registered-identifier-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3b4a041e-bf5d-4dc8-86ff-d12dcfb4ad1a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.364883Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "463cb256-df8c-4669-8718-6acc2c15a63f",
    "name" : "Retrieve a list of registered identifier types",
    "request" : {
      "urlPath" : "/classifications/registered-identifier-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"description\" : \"An Australian Business Number (ABN) is a unique eleven-character number issued by the Australian Business Register (ABR).\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440001\",\n  \"name\" : \"ABN\"\n}, {\n  \"description\" : \"An Australian Company Number (ACN) is a unique nine-character number issued by the Australian Securities and Investments Commission (ASIC).\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440002\",\n  \"name\" : \"ACN\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "463cb256-df8c-4669-8718-6acc2c15a63f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.364832Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : [ {
              "description" : "An Australian Business Number (ABN) is a unique eleven-character number issued by the Australian Business Register (ABR).",
              "id" : "123e4567-e89b-12d3-a456-426655440001",
              "name" : "ABN"
            }, {
              "description" : "An Australian Company Number (ACN) is a unique nine-character number issued by the Australian Securities and Investments Commission (ASIC).",
              "id" : "123e4567-e89b-12d3-a456-426655440002",
              "name" : "ACN"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/registered-identifier-type"
            },
            "type" : "array"
          }
        }
      }
    }
  }, {
    "id" : "f904953c-67bc-48ad-a27d-5ec61d778bbe",
    "name" : "Retrieve a list of name types",
    "request" : {
      "urlPath" : "/classifications/name-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f904953c-67bc-48ad-a27d-5ec61d778bbe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.364796Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f6504f54-ca77-4cce-b3e1-1025d2de8024",
    "name" : "Retrieve a list of name types",
    "request" : {
      "urlPath" : "/classifications/name-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f6504f54-ca77-4cce-b3e1-1025d2de8024",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.364714Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7e02441c-b396-4dec-96e5-b2bad59e57b8",
    "name" : "Retrieve a list of name types",
    "request" : {
      "urlPath" : "/classifications/name-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"description\" : \"An alternate name used by a party.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440001\",\n  \"name\" : \"Alias\"\n}, {\n  \"description\" : \"The primary name used by a party.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440002\",\n  \"name\" : \"Principal Name\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7e02441c-b396-4dec-96e5-b2bad59e57b8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.364663Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : [ {
              "description" : "An alternate name used by a party.",
              "id" : "123e4567-e89b-12d3-a456-426655440001",
              "name" : "Alias"
            }, {
              "description" : "The primary name used by a party.",
              "id" : "123e4567-e89b-12d3-a456-426655440002",
              "name" : "Principal Name"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/name-type"
            },
            "type" : "array"
          }
        }
      }
    }
  }, {
    "id" : "325dbb76-47d4-476a-9aa7-3ad1cfaa586c",
    "name" : "Retrieve a list of name prefixes",
    "request" : {
      "urlPath" : "/classifications/name-prefixes",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "325dbb76-47d4-476a-9aa7-3ad1cfaa586c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.364628Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8cd20a3a-36e7-4c0e-b653-982fcfb58eb0",
    "name" : "Retrieve a list of name prefixes",
    "request" : {
      "urlPath" : "/classifications/name-prefixes",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8cd20a3a-36e7-4c0e-b653-982fcfb58eb0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.364562Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9af16666-6551-4d72-8b02-3cebc29d8185",
    "name" : "Retrieve a list of name prefixes",
    "request" : {
      "urlPath" : "/classifications/name-prefixes",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"description\" : \"A title used before a family name or formal salutation to address a man.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440001\",\n  \"name\" : \"Mr\"\n}, {\n  \"description\" : \"A title used before a family name or formal salutation to address a woman.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440002\",\n  \"name\" : \"Ms\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9af16666-6551-4d72-8b02-3cebc29d8185",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.364509Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : [ {
              "description" : "A title used before a family name or formal salutation to address a man.",
              "id" : "123e4567-e89b-12d3-a456-426655440001",
              "name" : "Mr"
            }, {
              "description" : "A title used before a family name or formal salutation to address a woman.",
              "id" : "123e4567-e89b-12d3-a456-426655440002",
              "name" : "Ms"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/name-prefix"
            },
            "type" : "array"
          }
        }
      }
    }
  }, {
    "id" : "37afb26d-74da-4cd8-a39f-6c101c91c86a",
    "name" : "Retrieve a list of name directions",
    "request" : {
      "urlPath" : "/classifications/name-directions",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "37afb26d-74da-4cd8-a39f-6c101c91c86a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.364475Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8a7e3ce9-cbe1-4085-a656-24c0ea1f61fb",
    "name" : "Retrieve a list of name directions",
    "request" : {
      "urlPath" : "/classifications/name-directions",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8a7e3ce9-cbe1-4085-a656-24c0ea1f61fb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.364409Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4be492b0-f4bf-4852-916d-3e546028afc5",
    "name" : "Retrieve a list of name directions",
    "request" : {
      "urlPath" : "/classifications/name-directions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"description\" : \"The full name or formal salutation is rendered left to right.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440001\",\n  \"name\" : \"left-to-right\"\n}, {\n  \"description\" : \"The full name or formal salutation is rendered right to left.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440002\",\n  \"name\" : \"right-to-left\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4be492b0-f4bf-4852-916d-3e546028afc5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.364359Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : [ {
              "description" : "The full name or formal salutation is rendered left to right.",
              "id" : "123e4567-e89b-12d3-a456-426655440001",
              "name" : "left-to-right"
            }, {
              "description" : "The full name or formal salutation is rendered right to left.",
              "id" : "123e4567-e89b-12d3-a456-426655440002",
              "name" : "right-to-left"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/name-direction"
            },
            "type" : "array"
          }
        }
      }
    }
  }, {
    "id" : "9b6ecb19-34a1-49e9-9440-96933fe9416e",
    "name" : "Retrieve a list of license types",
    "request" : {
      "urlPath" : "/classifications/license-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9b6ecb19-34a1-49e9-9440-96933fe9416e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.36432Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6622d52a-19ed-45b5-9ed8-09bd5df92c0f",
    "name" : "Retrieve a list of license types",
    "request" : {
      "urlPath" : "/classifications/license-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6622d52a-19ed-45b5-9ed8-09bd5df92c0f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.364255Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "94ae8e33-8bc6-4e1b-aaeb-7a3a4ed15342",
    "name" : "Retrieve a list of license types",
    "request" : {
      "urlPath" : "/classifications/license-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"description\" : \"To conduct a financial services business in Australia, you must have an Australian Financial Services (AFS) licence.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440001\",\n  \"name\" : \"Australian Financial Services License\"\n}, {\n  \"description\" : \"To conduct a <insert-name-here> business you must have a 2B licence.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440002\",\n  \"name\" : \"2B License\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "94ae8e33-8bc6-4e1b-aaeb-7a3a4ed15342",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.364204Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : [ {
              "description" : "To conduct a financial services business in Australia, you must have an Australian Financial Services (AFS) licence.",
              "id" : "123e4567-e89b-12d3-a456-426655440001",
              "name" : "Australian Financial Services License"
            }, {
              "description" : "To conduct a <insert-name-here> business you must have a 2B licence.",
              "id" : "123e4567-e89b-12d3-a456-426655440002",
              "name" : "2B License"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/license-type"
            },
            "type" : "array"
          }
        }
      }
    }
  }, {
    "id" : "b24dcbe8-6a7b-4ae6-aab7-f1336d2dc467",
    "name" : "Retrieve a list of license lifecycle states",
    "request" : {
      "urlPath" : "/classifications/license-lifecycle-states",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b24dcbe8-6a7b-4ae6-aab7-f1336d2dc467",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.364169Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2dcf8bf8-0e7e-481e-856c-f95f38c4cde9",
    "name" : "Retrieve a list of license lifecycle states",
    "request" : {
      "urlPath" : "/classifications/license-lifecycle-states",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2dcf8bf8-0e7e-481e-856c-f95f38c4cde9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.364095Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "774b1846-08ff-4803-bf8a-9df5280417de",
    "name" : "Retrieve a list of license lifecycle states",
    "request" : {
      "urlPath" : "/classifications/license-lifecycle-states",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"description\" : \"The License has been approved.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440001\",\n  \"name\" : \"Approved\"\n}, {\n  \"description\" : \"The License has expired.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440002\",\n  \"name\" : \"Expired\"\n}, {\n  \"description\" : \"The License has been issued.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440003\",\n  \"name\" : \"Issued\"\n}, {\n  \"description\" : \"The License is pending approval.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440004\",\n  \"name\" : \"Pending Approval\"\n}, {\n  \"description\" : \"The License has been suspended.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440005\",\n  \"name\" : \"Suspended\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "774b1846-08ff-4803-bf8a-9df5280417de",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.364042Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : [ {
              "description" : "The License has been approved.",
              "id" : "123e4567-e89b-12d3-a456-426655440001",
              "name" : "Approved"
            }, {
              "description" : "The License has expired.",
              "id" : "123e4567-e89b-12d3-a456-426655440002",
              "name" : "Expired"
            }, {
              "description" : "The License has been issued.",
              "id" : "123e4567-e89b-12d3-a456-426655440003",
              "name" : "Issued"
            }, {
              "description" : "The License is pending approval.",
              "id" : "123e4567-e89b-12d3-a456-426655440004",
              "name" : "Pending Approval"
            }, {
              "description" : "The License has been suspended.",
              "id" : "123e4567-e89b-12d3-a456-426655440005",
              "name" : "Suspended"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/license-lifecycle-state"
            },
            "type" : "array"
          }
        }
      }
    }
  }, {
    "id" : "398f28a4-213a-49d1-b8a6-a274a661538a",
    "name" : "Retrieve a list of legal entity types",
    "request" : {
      "urlPath" : "/classifications/legal-entity-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "398f28a4-213a-49d1-b8a6-a274a661538a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.364001Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "eebc3df8-f5a2-4385-978d-b3893c79084f",
    "name" : "Retrieve a list of legal entity types",
    "request" : {
      "urlPath" : "/classifications/legal-entity-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eebc3df8-f5a2-4385-978d-b3893c79084f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.363939Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "55cac73a-6f96-4a99-8472-d7edf90051e9",
    "name" : "Retrieve a list of legal entity types",
    "request" : {
      "urlPath" : "/classifications/legal-entity-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"description\" : \"If you operate as a sole trader, you're responsible for all aspects of the business, including any debts the business incurs.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440001\",\n  \"name\" : \"Sole Trader\"\n}, {\n  \"description\" : \"A partnership is two or more individuals or organisations who do business as partners or receive income jointly.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440002\",\n  \"name\" : \"Partnership\"\n}, {\n  \"description\" : \"A joint venture is two or more people or entities who join to do business together for a particular purpose, usually a single project, rather than as an ongoing business.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440003\",\n  \"name\" : \"Joint Venture\"\n}, {\n  \"description\" : \"A company is a separate legal entity. This means it has the same rights as a natural person and can incur debt, sue and be sued.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440004\",\n  \"name\" : \"Company\"\n}, {\n  \"description\" : \"A trust is an obligation imposed on a person – the trustee – to hold property or assets (e.g. business assets) for the benefit of others (known as beneficiaries).\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440005\",\n  \"name\" : \"Trust\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "55cac73a-6f96-4a99-8472-d7edf90051e9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.363884Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : [ {
              "description" : "If you operate as a sole trader, you're responsible for all aspects of the business, including any debts the business incurs.",
              "id" : "123e4567-e89b-12d3-a456-426655440001",
              "name" : "Sole Trader"
            }, {
              "description" : "A partnership is two or more individuals or organisations who do business as partners or receive income jointly.",
              "id" : "123e4567-e89b-12d3-a456-426655440002",
              "name" : "Partnership"
            }, {
              "description" : "A joint venture is two or more people or entities who join to do business together for a particular purpose, usually a single project, rather than as an ongoing business.",
              "id" : "123e4567-e89b-12d3-a456-426655440003",
              "name" : "Joint Venture"
            }, {
              "description" : "A company is a separate legal entity. This means it has the same rights as a natural person and can incur debt, sue and be sued.",
              "id" : "123e4567-e89b-12d3-a456-426655440004",
              "name" : "Company"
            }, {
              "description" : "A trust is an obligation imposed on a person – the trustee – to hold property or assets (e.g. business assets) for the benefit of others (known as beneficiaries).",
              "id" : "123e4567-e89b-12d3-a456-426655440005",
              "name" : "Trust"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/legal-entity-type"
            },
            "type" : "array"
          }
        }
      }
    }
  }, {
    "id" : "2a52ef6d-df0b-4c2b-9c86-72173f12fd0a",
    "name" : "Retrieve a list of genders",
    "request" : {
      "urlPath" : "/classifications/genders",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2a52ef6d-df0b-4c2b-9c86-72173f12fd0a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.363841Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1957b5fe-1877-4d35-a351-79f16083a79d",
    "name" : "Retrieve a list of genders",
    "request" : {
      "urlPath" : "/classifications/genders",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1957b5fe-1877-4d35-a351-79f16083a79d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.363765Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "217855f7-7252-4fb9-ba85-836b2fffe53c",
    "name" : "Retrieve a list of genders",
    "request" : {
      "urlPath" : "/classifications/genders",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"gender\" : \"Not Known\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440001\"\n}, {\n  \"gender\" : \"Male\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440002\"\n}, {\n  \"gender\" : \"Female\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440003\"\n}, {\n  \"gender\" : \"Not Applicable\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440004\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "217855f7-7252-4fb9-ba85-836b2fffe53c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.363712Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : [ {
              "gender" : "Not Known",
              "id" : "123e4567-e89b-12d3-a456-426655440001"
            }, {
              "gender" : "Male",
              "id" : "123e4567-e89b-12d3-a456-426655440002"
            }, {
              "gender" : "Female",
              "id" : "123e4567-e89b-12d3-a456-426655440003"
            }, {
              "gender" : "Not Applicable",
              "id" : "123e4567-e89b-12d3-a456-426655440004"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/gender"
            },
            "type" : "array"
          }
        }
      }
    }
  }, {
    "id" : "cf16f25e-dc3c-44d4-b855-68c76c51e9a0",
    "name" : "Retrieve a list of electronic address types",
    "request" : {
      "urlPath" : "/classifications/electronic-address-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cf16f25e-dc3c-44d4-b855-68c76c51e9a0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.363675Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6cd2789a-d361-46bc-bbcf-7cc10d2732a5",
    "name" : "Retrieve a list of electronic address types",
    "request" : {
      "urlPath" : "/classifications/electronic-address-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6cd2789a-d361-46bc-bbcf-7cc10d2732a5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.363607Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "db9443ec-e20e-48e8-837b-0fd341dee420",
    "name" : "Retrieve a list of electronic address types",
    "request" : {
      "urlPath" : "/classifications/electronic-address-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"description\" : \"An address used to send and receive emails.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440001\",\n  \"name\" : \"Email\"\n}, {\n  \"description\" : \"A number used to send and receive faxes.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440002\",\n  \"name\" : \"Fax\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "db9443ec-e20e-48e8-837b-0fd341dee420",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.363549Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : [ {
              "description" : "An address used to send and receive emails.",
              "id" : "123e4567-e89b-12d3-a456-426655440001",
              "name" : "Email"
            }, {
              "description" : "A number used to send and receive faxes.",
              "id" : "123e4567-e89b-12d3-a456-426655440002",
              "name" : "Fax"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/electronic-address-type"
            },
            "type" : "array"
          }
        }
      }
    }
  }, {
    "id" : "1f5a007d-cbcc-43c8-b9c5-e0ba464590aa",
    "name" : "Retrieve a list of business name lifecycle states",
    "request" : {
      "urlPath" : "/classifications/business-name-lifecycle-states",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1f5a007d-cbcc-43c8-b9c5-e0ba464590aa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.363511Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c51423c4-13be-40ee-b34f-33d3f6ea22f4",
    "name" : "Retrieve a list of business name lifecycle states",
    "request" : {
      "urlPath" : "/classifications/business-name-lifecycle-states",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c51423c4-13be-40ee-b34f-33d3f6ea22f4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.363432Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5def141b-8dc1-4af9-b835-4c6bab634cf5",
    "name" : "Retrieve a list of business name lifecycle states",
    "request" : {
      "urlPath" : "/classifications/business-name-lifecycle-states",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"description\" : \"The Business Name has been approved.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440001\",\n  \"name\" : \"Approved\"\n}, {\n  \"description\" : \"The Business Name has expired.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440002\",\n  \"name\" : \"Expired\"\n}, {\n  \"description\" : \"The Business Name has been issued.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440003\",\n  \"name\" : \"Issued\"\n}, {\n  \"description\" : \"The Business Name is pending approval.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440004\",\n  \"name\" : \"Pending Approval\"\n}, {\n  \"description\" : \"The Business Name has been suspended.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440005\",\n  \"name\" : \"Suspended\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5def141b-8dc1-4af9-b835-4c6bab634cf5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.363375Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : [ {
              "description" : "The Business Name has been approved.",
              "id" : "123e4567-e89b-12d3-a456-426655440001",
              "name" : "Approved"
            }, {
              "description" : "The Business Name has expired.",
              "id" : "123e4567-e89b-12d3-a456-426655440002",
              "name" : "Expired"
            }, {
              "description" : "The Business Name has been issued.",
              "id" : "123e4567-e89b-12d3-a456-426655440003",
              "name" : "Issued"
            }, {
              "description" : "The Business Name is pending approval.",
              "id" : "123e4567-e89b-12d3-a456-426655440004",
              "name" : "Pending Approval"
            }, {
              "description" : "The Business Name has been suspended.",
              "id" : "123e4567-e89b-12d3-a456-426655440005",
              "name" : "Suspended"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/business-name-lifecycle-state"
            },
            "type" : "array"
          }
        }
      }
    }
  }, {
    "id" : "7b19acf9-5f1f-4981-8b41-e9f75593a986",
    "name" : "Retrieve a list of address types",
    "request" : {
      "urlPath" : "/classifications/address-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7b19acf9-5f1f-4981-8b41-e9f75593a986",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.363253Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6452dc6b-e7ea-4be8-a7bf-95c5336398e1",
    "name" : "Retrieve a list of address types",
    "request" : {
      "urlPath" : "/classifications/address-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6452dc6b-e7ea-4be8-a7bf-95c5336398e1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.36318Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "12dcaf1f-7b43-4cc7-b59e-f6fd53bd74b2",
    "name" : "Retrieve a list of address types",
    "request" : {
      "urlPath" : "/classifications/address-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"description\" : \"The address at which an individual or organisation receives letters or packages.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440001\",\n  \"name\" : \"Mailing\"\n}, {\n  \"description\" : \"The main location where work is conducted.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440002\",\n  \"name\" : \"Principal Place of Business\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "12dcaf1f-7b43-4cc7-b59e-f6fd53bd74b2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.363123Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : [ {
              "description" : "The address at which an individual or organisation receives letters or packages.",
              "id" : "123e4567-e89b-12d3-a456-426655440001",
              "name" : "Mailing"
            }, {
              "description" : "The main location where work is conducted.",
              "id" : "123e4567-e89b-12d3-a456-426655440002",
              "name" : "Principal Place of Business"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/address-type"
            },
            "type" : "array"
          }
        }
      }
    }
  }, {
    "id" : "0bbe0236-ba85-4f60-ba2e-16d5f45c9ab9",
    "name" : "Retrieve a list of business names",
    "request" : {
      "urlPath" : "/business-names",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0bbe0236-ba85-4f60-ba2e-16d5f45c9ab9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.363076Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "80cd1d6a-9d47-472e-9344-bb5284698c88",
    "name" : "Retrieve a list of business names",
    "request" : {
      "urlPath" : "/business-names",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "80cd1d6a-9d47-472e-9344-bb5284698c88",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.363001Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "67b44049-b705-4b11-9c90-549968911d61",
    "name" : "Retrieve a list of business names",
    "request" : {
      "urlPath" : "/business-names",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Issued\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Issued\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "67b44049-b705-4b11-9c90-549968911d61",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.362922Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/business-name"
            },
            "type" : "array"
          }
        }
      }
    }
  } ]
}