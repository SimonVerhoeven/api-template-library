{
  "mappings" : [ {
    "id" : "9ab514da-4f68-386a-8578-a5f3c9b05da2",
    "name" : "Lists the linked storage buckets for a project.",
    "request" : {
      "urlPath" : "/v1beta/7gpyxcux3628wlw8o0bgrm2pl/buckets",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"dfcnto42sxjx5vtv49aywgnx2r87e8hgybw8l1xs492ew38dpia5k85h1th634khkql6t9lcnuqslkv2egcvyab5dp5xk4135d6lhyrl543luj6df5pkquicehklgevpz4jhqnsg6itcmqp67b4\",\n  \"buckets\" : [ {\n    \"name\" : \"Sonya Gibson PhD\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9ab514da-4f68-386a-8578-a5f3c9b05da2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "firebasestorage.projects.buckets.list",
          "schema" : {
            "description" : "The response returned by `ListBuckets`.",
            "properties" : {
              "buckets" : {
                "description" : "The list of linked buckets.",
                "items" : {
                  "$ref" : "#/components/schemas/Bucket"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "3a0d20e0-5251-37c0-b7ad-774e4e040eda",
    "name" : "Gets a single linked storage bucket.",
    "request" : {
      "urlPath" : "/v1beta/Miss+Keenan+Hudson",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Chet Bartoletti\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3a0d20e0-5251-37c0-b7ad-774e4e040eda",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "firebasestorage.projects.buckets.get",
          "schema" : {
            "description" : "A storage bucket and its relation to a parent Firebase project.",
            "properties" : {
              "name" : {
                "description" : "Resource name of the bucket.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "dfcbc23c-d12f-3eed-b32b-29514a37d1fc",
    "name" : "Unlinks a linked Google Cloud Storage bucket from a Firebase project.",
    "request" : {
      "urlPath" : "/v1beta/zyva59lwkn:removeFirebase",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dfcbc23c-d12f-3eed-b32b-29514a37d1fc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "firebasestorage.projects.buckets.removeFirebase",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "7842bc98-df98-38b4-99b8-594c45054309",
    "name" : "Links a Google Cloud Storage bucket to a Firebase project.",
    "request" : {
      "urlPath" : "/v1beta/32ofe3nb4d2wv915idgbtobjeefmuhav90a62teh1m6:addFirebase",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Stanley DuBuque\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7842bc98-df98-38b4-99b8-594c45054309",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "firebasestorage.projects.buckets.addFirebase",
          "schema" : {
            "description" : "A storage bucket and its relation to a parent Firebase project.",
            "properties" : {
              "name" : {
                "description" : "Resource name of the bucket.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  } ]
}