{
  "mappings" : [ {
    "id" : "da173d74-f7f1-464b-8e84-5d397559febb",
    "name" : "Lists the linked storage buckets for a project.",
    "request" : {
      "urlPath" : "/v1beta/brjucqqtaurb2ne2q8tpl1p9kfgxx2qwcpce5lnnw8ey15u5wyfv68nyvnkvo6jpxjk9r9aaz6r0i8lztssduj0cesk/buckets",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"5mtamvvsin5iv9ggek0z2xq8mj943jbz4ihbxx3twstgqmvu714zhxvfn474bqkqoenkqhex7hirkrmbn4duwm9vzzrb767\",\n  \"buckets\" : [ {\n    \"name\" : \"Wendie Kuhn\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "da173d74-f7f1-464b-8e84-5d397559febb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:02.288001Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firebasestorage.projects.buckets.list",
          "schema" : {
            "description" : "The response returned by `ListBuckets`.",
            "properties" : {
              "buckets" : {
                "description" : "The list of linked buckets.",
                "items" : {
                  "$ref" : "#/components/schemas/Bucket"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "912878c7-8fb2-4484-bb23-eb54868fc44a",
    "name" : "Gets a single linked storage bucket.",
    "request" : {
      "urlPath" : "/v1beta/Guillermo+Harvey",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Chance Toy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "912878c7-8fb2-4484-bb23-eb54868fc44a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:02.287834Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firebasestorage.projects.buckets.get",
          "schema" : {
            "description" : "A storage bucket and its relation to a parent Firebase project.",
            "properties" : {
              "name" : {
                "description" : "Resource name of the bucket.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "4bfe7570-6af6-42bc-9585-dde77a250884",
    "name" : "Unlinks a linked Google Cloud Storage bucket from a Firebase project.",
    "request" : {
      "urlPath" : "/v1beta/v3re8kjt0s8mgbse7ohks5mh8e33bx4yw2do1cj6uk9ktc2o7tqlpnofhzibisd03ld4o65aiy4uhursd:removeFirebase",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4bfe7570-6af6-42bc-9585-dde77a250884",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:02.287686Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firebasestorage.projects.buckets.removeFirebase",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "d99cec0b-4e92-4068-a570-c867d77df572",
    "name" : "Links a Google Cloud Storage bucket to a Firebase project.",
    "request" : {
      "urlPath" : "/v1beta/582c9guk0gprwzqmhx1tcpx4f495sdfleuiabra5010i7szqiryt7nf0:addFirebase",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Romeo Hansen\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d99cec0b-4e92-4068-a570-c867d77df572",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:02.287615Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firebasestorage.projects.buckets.addFirebase",
          "schema" : {
            "description" : "A storage bucket and its relation to a parent Firebase project.",
            "properties" : {
              "name" : {
                "description" : "Resource name of the bucket.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  } ]
}