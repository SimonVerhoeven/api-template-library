{
  "mappings" : [ {
    "id" : "0c8a640e-4b7e-4c30-ae78-09017126b6a6",
    "name" : "Get Connector Resource",
    "request" : {
      "urlPath" : "/connector/connectors/g10m/resources/36m4",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0c8a640e-4b7e-4c30-ae78-09017126b6a6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:40.497419Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectorResourcesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "6d03a84e-c55b-4217-846b-cec5d2a72ca5",
    "name" : "Get Connector Resource",
    "request" : {
      "urlPath" : "/connector/connectors/4177/resources/u5s3",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6d03a84e-c55b-4217-846b-cec5d2a72ca5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:40.497186Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectorResourcesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "c8531a99-a140-48f4-82b9-ca0ae7f2cfd6",
    "name" : "Get Connector Resource",
    "request" : {
      "urlPath" : "/connector/connectors/el67/resources/h4u5",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c8531a99-a140-48f4-82b9-ca0ae7f2cfd6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:40.496976Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectorResourcesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "7d42d37e-d6fc-452c-9e73-7503286379d2",
    "name" : "Get Connector Resource",
    "request" : {
      "urlPath" : "/connector/connectors/qw83/resources/2b80",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"custom_fields_supported\" : true,\n    \"pagination\" : {\n      \"mode\" : \"native\",\n      \"paging_support\" : true,\n      \"limit_support\" : false\n    },\n    \"supported_operations\" : [ \"all\", \"one\", \"add\", \"update\", \"delete\" ],\n    \"supported_sort_by\" : [ \"updated_at\", \"created_at\", \"name\" ],\n    \"supported_filters\" : [ \"name\", \"email\" ],\n    \"downstream_unsupported_operations\" : [ \"upload\" ],\n    \"supported_list_fields\" : [ {\n      \"unified_property\" : \"owner_id\",\n      \"child_properties\" : [ {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      } ]\n    }, {\n      \"unified_property\" : \"owner_id\",\n      \"child_properties\" : [ {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      } ]\n    }, {\n      \"unified_property\" : \"owner_id\",\n      \"child_properties\" : [ {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      } ]\n    } ],\n    \"pagination_supported\" : true,\n    \"downstream_name\" : \"Accounts\",\n    \"supported_fields\" : [ {\n      \"unified_property\" : \"owner_id\",\n      \"child_properties\" : [ {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      } ]\n    }, {\n      \"unified_property\" : \"owner_id\",\n      \"child_properties\" : [ {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      } ]\n    }, {\n      \"unified_property\" : \"owner_id\",\n      \"child_properties\" : [ {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      } ]\n    }, {\n      \"unified_property\" : \"owner_id\",\n      \"child_properties\" : [ {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      } ]\n    } ],\n    \"name\" : \"Companies\",\n    \"downstream_id\" : \"accounts\",\n    \"id\" : \"companies\",\n    \"status\" : \"upcoming\"\n  },\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7d42d37e-d6fc-452c-9e73-7503286379d2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:40.496761Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectorResourcesOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/ConnectorResource"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetConnectorResourceResponse"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "093ac6ee-ab92-47e1-8d47-b78688fabbef",
    "name" : "Get Connector Doc content (application/json)",
    "request" : {
      "urlPath" : "/connector/connectors/9a50/docs/a88j",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "093ac6ee-ab92-47e1-8d47-b78688fabbef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:40.496248Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectorDocsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "73a19049-ef93-4ad5-9a4d-c8d386339694",
    "name" : "Get Connector Doc content (application/json)",
    "request" : {
      "urlPath" : "/connector/connectors/6f10/docs/9je7",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "73a19049-ef93-4ad5-9a4d-c8d386339694",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:40.496015Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectorDocsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "19f69188-b44c-47ed-9a46-ae228edfacba",
    "name" : "Get Connector Doc content (application/json)",
    "request" : {
      "urlPath" : "/connector/connectors/ive8/docs/jn58",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "19f69188-b44c-47ed-9a46-ae228edfacba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:40.495799Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectorDocsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "9618fb7e-8076-496a-a529-81fd7a6486d7",
    "name" : "Get Connector Doc content (text/markdown)",
    "request" : {
      "urlPath" : "/connector/connectors/io03/docs/7apv",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/markdown"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"sxv7r5h5y6d2gk2vavcz4rpvhui7drzz0cs63wfz3b7lr0o9l6is26oe5tufp664er4f31lw3eyzazf3gj68g3uqbwwrbzx4bro0tagdr25ndbre77bzj5es\"",
      "headers" : {
        "Content-Type" : "text/markdown"
      }
    },
    "uuid" : "9618fb7e-8076-496a-a529-81fd7a6486d7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:40.495595Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectorDocsOne",
          "schema" : {
            "format" : "markdown",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "0682eef5-f306-464e-a9cb-98e224524d20",
    "name" : "Get Connector",
    "request" : {
      "urlPath" : "/connector/connectors/2gfb",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0682eef5-f306-464e-a9cb-98e224524d20",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:40.495404Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectorsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "51fe2e00-0eec-4871-a540-f7135df0c0c7",
    "name" : "Get Connector",
    "request" : {
      "urlPath" : "/connector/connectors/9126",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "51fe2e00-0eec-4871-a540-f7135df0c0c7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:40.495182Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectorsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "683fa071-6e69-4ca3-968a-a0c0a4cd8d23",
    "name" : "Get Connector",
    "request" : {
      "urlPath" : "/connector/connectors/xv2n",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "683fa071-6e69-4ca3-968a-a0c0a4cd8d23",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:40.495021Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectorsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "f1930d3d-9fde-4ef3-8b10-a9621a0758de",
    "name" : "Get Connector",
    "request" : {
      "urlPath" : "/connector/connectors/hl48",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"oauth_credentials_source\" : \"integration\",\n    \"logo_url\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"has_sandbox_credentials\" : true,\n    \"free_trial_available\" : true,\n    \"description\" : \"A description\",\n    \"supported_resources\" : [ {\n      \"downstream_name\" : \"Accounts\",\n      \"name\" : \"Companies\",\n      \"downstream_id\" : \"accounts\",\n      \"id\" : \"companies\",\n      \"status\" : \"considering\"\n    }, {\n      \"downstream_name\" : \"Accounts\",\n      \"name\" : \"Companies\",\n      \"downstream_id\" : \"accounts\",\n      \"id\" : \"companies\",\n      \"status\" : \"beta\"\n    }, {\n      \"downstream_name\" : \"Accounts\",\n      \"name\" : \"Companies\",\n      \"downstream_id\" : \"accounts\",\n      \"id\" : \"companies\",\n      \"status\" : \"upcoming\"\n    }, {\n      \"downstream_name\" : \"Accounts\",\n      \"name\" : \"Companies\",\n      \"downstream_id\" : \"accounts\",\n      \"id\" : \"companies\",\n      \"status\" : \"live\"\n    }, {\n      \"downstream_name\" : \"Accounts\",\n      \"name\" : \"Companies\",\n      \"downstream_id\" : \"accounts\",\n      \"id\" : \"companies\",\n      \"status\" : \"beta\"\n    } ],\n    \"docs\" : [ {\n      \"audience\" : \"consumer\",\n      \"format\" : \"markdown\",\n      \"name\" : \"connection\",\n      \"id\" : \"12345\",\n      \"url\" : \"https://unify.apideck.com/connector/connectors/workday/docs/consumer+connection\"\n    }, {\n      \"audience\" : \"application_owner\",\n      \"format\" : \"markdown\",\n      \"name\" : \"connection\",\n      \"id\" : \"12345\",\n      \"url\" : \"https://unify.apideck.com/connector/connectors/workday/docs/consumer+connection\"\n    } ],\n    \"oauth_scopes\" : [ {\n      \"default_apis\" : [ \"crm\", \"crm\", \"crm\" ],\n      \"id\" : \"contacts:all\",\n      \"label\" : \"Read/write on the Contacts resource\"\n    } ],\n    \"service_id\" : \"close\",\n    \"tls_support\" : {\n      \"description\" : \"A dolorem ad qui laboriosam. Voluptatem dolor fugiat aperiam ducimus inventore quam. Quaerat facilis omnis saepe molestiae. Accusamus ipsum minus harum rerum inventore voluptatum et. In ut aperiam des\",\n      \"type\" : \"aofx6rz4icnl5zuys0c9f99s5u8q7nm7uccui8gfscvwhtq91r\"\n    },\n    \"id\" : \"crm+salesforce\",\n    \"signup_url\" : \"https://www.salesforce.com/signup\",\n    \"icon_url\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"settings\" : [ {\n      \"id\" : \"pipeline_id\",\n      \"label\" : \"Pipeline\",\n      \"type\" : \"select\"\n    }, {\n      \"id\" : \"pipeline_id\",\n      \"label\" : \"Pipeline\",\n      \"type\" : \"select\"\n    }, {\n      \"id\" : \"pipeline_id\",\n      \"label\" : \"Pipeline\",\n      \"type\" : \"select\"\n    }, {\n      \"id\" : \"pipeline_id\",\n      \"label\" : \"Pipeline\",\n      \"type\" : \"select\"\n    }, {\n      \"id\" : \"pipeline_id\",\n      \"label\" : \"Pipeline\",\n      \"type\" : \"select\"\n    } ],\n    \"auth_type\" : \"oauth2\",\n    \"blind_mapped\" : true,\n    \"custom_scopes\" : true,\n    \"configurable_resources\" : [ \"leads\", \"companies\" ],\n    \"unified_apis\" : [ {\n      \"supported_events\" : [ {\n        \"downstream_event_type\" : \"person_created\",\n        \"entity_type\" : \"employee\",\n        \"event_type\" : \"employee.created\",\n        \"resources\" : [ \"companies\", \"companies\", \"companies\", \"companies\", \"companies\", \"companies\", \"companies\" ],\n        \"event_source\" : \"native\"\n      } ],\n      \"oauth_scopes\" : [ {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      } ],\n      \"name\" : \"File Storage API\",\n      \"downstream_unsupported_resources\" : [ \"companies\", \"companies\", \"companies\", \"companies\", \"companies\", \"companies\", \"companies\", \"companies\" ],\n      \"id\" : \"crm\",\n      \"supported_resources\" : [ {\n        \"downstream_name\" : \"Accounts\",\n        \"name\" : \"Companies\",\n        \"downstream_id\" : \"accounts\",\n        \"id\" : \"companies\",\n        \"status\" : \"beta\"\n      } ]\n    }, {\n      \"supported_events\" : [ {\n        \"downstream_event_type\" : \"person_created\",\n        \"entity_type\" : \"employee\",\n        \"event_type\" : \"employee.created\",\n        \"resources\" : [ \"companies\", \"companies\", \"companies\", \"companies\", \"companies\" ],\n        \"event_source\" : \"native\"\n      }, {\n        \"downstream_event_type\" : \"person_created\",\n        \"entity_type\" : \"employee\",\n        \"event_type\" : \"employee.created\",\n        \"resources\" : [ \"companies\", \"companies\", \"companies\", \"companies\", \"companies\", \"companies\" ],\n        \"event_source\" : \"native\"\n      }, {\n        \"downstream_event_type\" : \"person_created\",\n        \"entity_type\" : \"employee\",\n        \"event_type\" : \"employee.created\",\n        \"resources\" : [ \"companies\", \"companies\", \"companies\", \"companies\", \"companies\", \"companies\" ],\n        \"event_source\" : \"native\"\n      }, {\n        \"downstream_event_type\" : \"person_created\",\n        \"entity_type\" : \"employee\",\n        \"event_type\" : \"employee.created\",\n        \"resources\" : [ \"companies\", \"companies\", \"companies\", \"companies\", \"companies\", \"companies\", \"companies\" ],\n        \"event_source\" : \"native\"\n      } ],\n      \"oauth_scopes\" : [ {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      } ],\n      \"name\" : \"File Storage API\",\n      \"downstream_unsupported_resources\" : [ \"companies\", \"companies\", \"companies\", \"companies\", \"companies\" ],\n      \"id\" : \"crm\",\n      \"supported_resources\" : [ {\n        \"downstream_name\" : \"Accounts\",\n        \"name\" : \"Companies\",\n        \"downstream_id\" : \"accounts\",\n        \"id\" : \"companies\",\n        \"status\" : \"beta\"\n      }, {\n        \"downstream_name\" : \"Accounts\",\n        \"name\" : \"Companies\",\n        \"downstream_id\" : \"accounts\",\n        \"id\" : \"companies\",\n        \"status\" : \"live\"\n      }, {\n        \"downstream_name\" : \"Accounts\",\n        \"name\" : \"Companies\",\n        \"downstream_id\" : \"accounts\",\n        \"id\" : \"companies\",\n        \"status\" : \"considering\"\n      }, {\n        \"downstream_name\" : \"Accounts\",\n        \"name\" : \"Companies\",\n        \"downstream_id\" : \"accounts\",\n        \"id\" : \"companies\",\n        \"status\" : \"upcoming\"\n      }, {\n        \"downstream_name\" : \"Accounts\",\n        \"name\" : \"Companies\",\n        \"downstream_id\" : \"accounts\",\n        \"id\" : \"companies\",\n        \"status\" : \"live\"\n      }, {\n        \"downstream_name\" : \"Accounts\",\n        \"name\" : \"Companies\",\n        \"downstream_id\" : \"accounts\",\n        \"id\" : \"companies\",\n        \"status\" : \"live\"\n      }, {\n        \"downstream_name\" : \"Accounts\",\n        \"name\" : \"Companies\",\n        \"downstream_id\" : \"accounts\",\n        \"id\" : \"companies\",\n        \"status\" : \"beta\"\n      }, {\n        \"downstream_name\" : \"Accounts\",\n        \"name\" : \"Companies\",\n        \"downstream_id\" : \"accounts\",\n        \"id\" : \"companies\",\n        \"status\" : \"live\"\n      } ]\n    } ],\n    \"auth_only\" : true,\n    \"website_url\" : \"https://www.salesforce.com\",\n    \"oauth_grant_type\" : \"authorization_code\",\n    \"supported_events\" : [ {\n      \"downstream_event_type\" : \"person_created\",\n      \"entity_type\" : \"employee\",\n      \"event_type\" : \"employee.created\",\n      \"resources\" : [ \"companies\", \"companies\", \"companies\", \"companies\", \"companies\", \"companies\" ],\n      \"event_source\" : \"native\"\n    } ],\n    \"webhook_support\" : {\n      \"mode\" : \"native\",\n      \"subscription_level\" : \"integration\",\n      \"virtual_webhooks\" : {\n        \"resources\" : { },\n        \"request_rate\" : {\n          \"unit\" : \"hour\",\n          \"size\" : 3566202243622420396,\n          \"rate\" : 1225239753949696353\n        }\n      },\n      \"managed_via\" : \"api\"\n    },\n    \"name\" : \"Salesforce\",\n    \"status\" : \"live\"\n  },\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f1930d3d-9fde-4ef3-8b10-a9621a0758de",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:40.494845Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectorsOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Connector"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetConnectorResponse"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "ef06dd7f-3192-44d4-82a0-0d80822c4e31",
    "name" : "List Connectors",
    "request" : {
      "urlPath" : "/connector/connectors",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ef06dd7f-3192-44d4-82a0-0d80822c4e31",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:40.493941Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectorsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "1acebaf4-d5f9-4c18-915d-31223441618f",
    "name" : "List Connectors",
    "request" : {
      "urlPath" : "/connector/connectors",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1acebaf4-d5f9-4c18-915d-31223441618f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:40.493831Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectorsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "f53e5c3f-3dc2-4506-86e0-dab53abe128d",
    "name" : "List Connectors",
    "request" : {
      "urlPath" : "/connector/connectors",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f53e5c3f-3dc2-4506-86e0-dab53abe128d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:40.493717Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectorsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "794a0dd0-9b3f-48a8-9b4d-aa9633e98d06",
    "name" : "List Connectors",
    "request" : {
      "urlPath" : "/connector/connectors",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"oauth_credentials_source\" : \"integration\",\n    \"logo_url\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"has_sandbox_credentials\" : true,\n    \"free_trial_available\" : false,\n    \"description\" : \"A description\",\n    \"supported_resources\" : [ {\n      \"downstream_name\" : \"Accounts\",\n      \"name\" : \"Companies\",\n      \"downstream_id\" : \"accounts\",\n      \"id\" : \"companies\",\n      \"status\" : \"upcoming\"\n    } ],\n    \"docs\" : [ {\n      \"audience\" : \"consumer\",\n      \"format\" : \"markdown\",\n      \"name\" : \"connection\",\n      \"id\" : \"12345\",\n      \"url\" : \"https://unify.apideck.com/connector/connectors/workday/docs/consumer+connection\"\n    }, {\n      \"audience\" : \"application_owner\",\n      \"format\" : \"markdown\",\n      \"name\" : \"connection\",\n      \"id\" : \"12345\",\n      \"url\" : \"https://unify.apideck.com/connector/connectors/workday/docs/consumer+connection\"\n    }, {\n      \"audience\" : \"consumer\",\n      \"format\" : \"markdown\",\n      \"name\" : \"connection\",\n      \"id\" : \"12345\",\n      \"url\" : \"https://unify.apideck.com/connector/connectors/workday/docs/consumer+connection\"\n    }, {\n      \"audience\" : \"application_owner\",\n      \"format\" : \"markdown\",\n      \"name\" : \"connection\",\n      \"id\" : \"12345\",\n      \"url\" : \"https://unify.apideck.com/connector/connectors/workday/docs/consumer+connection\"\n    }, {\n      \"audience\" : \"consumer\",\n      \"format\" : \"markdown\",\n      \"name\" : \"connection\",\n      \"id\" : \"12345\",\n      \"url\" : \"https://unify.apideck.com/connector/connectors/workday/docs/consumer+connection\"\n    }, {\n      \"audience\" : \"consumer\",\n      \"format\" : \"markdown\",\n      \"name\" : \"connection\",\n      \"id\" : \"12345\",\n      \"url\" : \"https://unify.apideck.com/connector/connectors/workday/docs/consumer+connection\"\n    }, {\n      \"audience\" : \"consumer\",\n      \"format\" : \"markdown\",\n      \"name\" : \"connection\",\n      \"id\" : \"12345\",\n      \"url\" : \"https://unify.apideck.com/connector/connectors/workday/docs/consumer+connection\"\n    }, {\n      \"audience\" : \"consumer\",\n      \"format\" : \"markdown\",\n      \"name\" : \"connection\",\n      \"id\" : \"12345\",\n      \"url\" : \"https://unify.apideck.com/connector/connectors/workday/docs/consumer+connection\"\n    } ],\n    \"oauth_scopes\" : [ {\n      \"default_apis\" : [ \"crm\", \"crm\", \"crm\", \"crm\" ],\n      \"id\" : \"contacts:all\",\n      \"label\" : \"Read/write on the Contacts resource\"\n    }, {\n      \"default_apis\" : [ \"crm\", \"crm\", \"crm\", \"crm\", \"crm\", \"crm\", \"crm\" ],\n      \"id\" : \"contacts:all\",\n      \"label\" : \"Read/write on the Contacts resource\"\n    }, {\n      \"default_apis\" : [ \"crm\", \"crm\", \"crm\", \"crm\", \"crm\", \"crm\", \"crm\" ],\n      \"id\" : \"contacts:all\",\n      \"label\" : \"Read/write on the Contacts resource\"\n    }, {\n      \"default_apis\" : [ \"crm\", \"crm\", \"crm\", \"crm\", \"crm\", \"crm\", \"crm\", \"crm\" ],\n      \"id\" : \"contacts:all\",\n      \"label\" : \"Read/write on the Contacts resource\"\n    }, {\n      \"default_apis\" : [ \"crm\", \"crm\", \"crm\" ],\n      \"id\" : \"contacts:all\",\n      \"label\" : \"Read/write on the Contacts resource\"\n    }, {\n      \"default_apis\" : [ \"crm\", \"crm\", \"crm\", \"crm\", \"crm\", \"crm\", \"crm\", \"crm\" ],\n      \"id\" : \"contacts:all\",\n      \"label\" : \"Read/write on the Contacts resource\"\n    }, {\n      \"default_apis\" : [ \"crm\", \"crm\" ],\n      \"id\" : \"contacts:all\",\n      \"label\" : \"Read/write on the Contacts resource\"\n    } ],\n    \"service_id\" : \"close\",\n    \"tls_support\" : {\n      \"description\" : \"Pariatur sunt quis quos consequatur necessitatibus voluptatem error. Numquam ipsam libero. Dolores saepe omnis laboriosam sint. Itaque at animi molestiae nostrum.\",\n      \"type\" : \"mbktznqteohwapls5tzx949uq3s1wpkedk8s1rkqq2oc7w26xib7ioekmlqlvojdc9l1u35m40hshgnw8giuoalsq9k6xmw2oqv2aoe2jndondpeu3wdnulcqfup8n8q1yylesrd0myviv34a1lic82y5tjair\"\n    },\n    \"id\" : \"crm+salesforce\",\n    \"signup_url\" : \"https://www.salesforce.com/signup\",\n    \"icon_url\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"settings\" : [ {\n      \"id\" : \"pipeline_id\",\n      \"label\" : \"Pipeline\",\n      \"type\" : \"select\"\n    }, {\n      \"id\" : \"pipeline_id\",\n      \"label\" : \"Pipeline\",\n      \"type\" : \"select\"\n    }, {\n      \"id\" : \"pipeline_id\",\n      \"label\" : \"Pipeline\",\n      \"type\" : \"select\"\n    }, {\n      \"id\" : \"pipeline_id\",\n      \"label\" : \"Pipeline\",\n      \"type\" : \"select\"\n    }, {\n      \"id\" : \"pipeline_id\",\n      \"label\" : \"Pipeline\",\n      \"type\" : \"select\"\n    }, {\n      \"id\" : \"pipeline_id\",\n      \"label\" : \"Pipeline\",\n      \"type\" : \"select\"\n    }, {\n      \"id\" : \"pipeline_id\",\n      \"label\" : \"Pipeline\",\n      \"type\" : \"select\"\n    } ],\n    \"auth_type\" : \"oauth2\",\n    \"blind_mapped\" : true,\n    \"custom_scopes\" : true,\n    \"configurable_resources\" : [ \"leads\", \"companies\" ],\n    \"unified_apis\" : [ {\n      \"supported_events\" : [ { }, { } ],\n      \"oauth_scopes\" : [ {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      } ],\n      \"name\" : \"File Storage API\",\n      \"downstream_unsupported_resources\" : [ \"companies\", \"companies\", \"companies\", \"companies\", \"companies\" ],\n      \"id\" : \"crm\",\n      \"supported_resources\" : [ { }, { }, { }, { } ]\n    }, {\n      \"supported_events\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"oauth_scopes\" : [ {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      } ],\n      \"name\" : \"File Storage API\",\n      \"downstream_unsupported_resources\" : [ \"companies\", \"companies\", \"companies\", \"companies\" ],\n      \"id\" : \"crm\",\n      \"supported_resources\" : [ { }, { }, { } ]\n    }, {\n      \"supported_events\" : [ { }, { }, { }, { }, { } ],\n      \"oauth_scopes\" : [ {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      } ],\n      \"name\" : \"File Storage API\",\n      \"downstream_unsupported_resources\" : [ \"companies\" ],\n      \"id\" : \"crm\",\n      \"supported_resources\" : [ { } ]\n    }, {\n      \"supported_events\" : [ { }, { }, { }, { }, { } ],\n      \"oauth_scopes\" : [ {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      } ],\n      \"name\" : \"File Storage API\",\n      \"downstream_unsupported_resources\" : [ \"companies\", \"companies\", \"companies\", \"companies\", \"companies\" ],\n      \"id\" : \"crm\",\n      \"supported_resources\" : [ { }, { }, { }, { }, { } ]\n    } ],\n    \"auth_only\" : true,\n    \"website_url\" : \"https://www.salesforce.com\",\n    \"oauth_grant_type\" : \"authorization_code\",\n    \"supported_events\" : [ {\n      \"downstream_event_type\" : \"person_created\",\n      \"entity_type\" : \"employee\",\n      \"event_type\" : \"employee.created\",\n      \"resources\" : [ \"companies\", \"companies\", \"companies\" ],\n      \"event_source\" : \"native\"\n    }, {\n      \"downstream_event_type\" : \"person_created\",\n      \"entity_type\" : \"employee\",\n      \"event_type\" : \"employee.created\",\n      \"resources\" : [ \"companies\", \"companies\", \"companies\" ],\n      \"event_source\" : \"native\"\n    } ],\n    \"webhook_support\" : {\n      \"mode\" : \"native\",\n      \"subscription_level\" : \"integration\",\n      \"virtual_webhooks\" : {\n        \"resources\" : { },\n        \"request_rate\" : {\n          \"unit\" : \"day\",\n          \"size\" : 819378232278557400,\n          \"rate\" : 6677224694557326104\n        }\n      },\n      \"managed_via\" : \"api\"\n    },\n    \"name\" : \"Salesforce\",\n    \"status\" : \"considering\"\n  }, {\n    \"oauth_credentials_source\" : \"integration\",\n    \"logo_url\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"has_sandbox_credentials\" : true,\n    \"free_trial_available\" : true,\n    \"description\" : \"A description\",\n    \"supported_resources\" : [ {\n      \"downstream_name\" : \"Accounts\",\n      \"name\" : \"Companies\",\n      \"downstream_id\" : \"accounts\",\n      \"id\" : \"companies\",\n      \"status\" : \"beta\"\n    }, {\n      \"downstream_name\" : \"Accounts\",\n      \"name\" : \"Companies\",\n      \"downstream_id\" : \"accounts\",\n      \"id\" : \"companies\",\n      \"status\" : \"upcoming\"\n    }, {\n      \"downstream_name\" : \"Accounts\",\n      \"name\" : \"Companies\",\n      \"downstream_id\" : \"accounts\",\n      \"id\" : \"companies\",\n      \"status\" : \"beta\"\n    }, {\n      \"downstream_name\" : \"Accounts\",\n      \"name\" : \"Companies\",\n      \"downstream_id\" : \"accounts\",\n      \"id\" : \"companies\",\n      \"status\" : \"upcoming\"\n    }, {\n      \"downstream_name\" : \"Accounts\",\n      \"name\" : \"Companies\",\n      \"downstream_id\" : \"accounts\",\n      \"id\" : \"companies\",\n      \"status\" : \"live\"\n    }, {\n      \"downstream_name\" : \"Accounts\",\n      \"name\" : \"Companies\",\n      \"downstream_id\" : \"accounts\",\n      \"id\" : \"companies\",\n      \"status\" : \"beta\"\n    }, {\n      \"downstream_name\" : \"Accounts\",\n      \"name\" : \"Companies\",\n      \"downstream_id\" : \"accounts\",\n      \"id\" : \"companies\",\n      \"status\" : \"development\"\n    } ],\n    \"docs\" : [ {\n      \"audience\" : \"consumer\",\n      \"format\" : \"markdown\",\n      \"name\" : \"connection\",\n      \"id\" : \"12345\",\n      \"url\" : \"https://unify.apideck.com/connector/connectors/workday/docs/consumer+connection\"\n    }, {\n      \"audience\" : \"consumer\",\n      \"format\" : \"markdown\",\n      \"name\" : \"connection\",\n      \"id\" : \"12345\",\n      \"url\" : \"https://unify.apideck.com/connector/connectors/workday/docs/consumer+connection\"\n    } ],\n    \"oauth_scopes\" : [ {\n      \"default_apis\" : [ \"crm\", \"crm\", \"crm\", \"crm\" ],\n      \"id\" : \"contacts:all\",\n      \"label\" : \"Read/write on the Contacts resource\"\n    }, {\n      \"default_apis\" : [ \"crm\", \"crm\" ],\n      \"id\" : \"contacts:all\",\n      \"label\" : \"Read/write on the Contacts resource\"\n    }, {\n      \"default_apis\" : [ \"crm\", \"crm\", \"crm\", \"crm\", \"crm\", \"crm\" ],\n      \"id\" : \"contacts:all\",\n      \"label\" : \"Read/write on the Contacts resource\"\n    }, {\n      \"default_apis\" : [ \"crm\", \"crm\", \"crm\", \"crm\" ],\n      \"id\" : \"contacts:all\",\n      \"label\" : \"Read/write on the Contacts resource\"\n    }, {\n      \"default_apis\" : [ \"crm\", \"crm\", \"crm\", \"crm\", \"crm\", \"crm\" ],\n      \"id\" : \"contacts:all\",\n      \"label\" : \"Read/write on the Contacts resource\"\n    }, {\n      \"default_apis\" : [ \"crm\", \"crm\", \"crm\", \"crm\", \"crm\" ],\n      \"id\" : \"contacts:all\",\n      \"label\" : \"Read/write on the Contacts resource\"\n    } ],\n    \"service_id\" : \"close\",\n    \"tls_support\" : {\n      \"description\" : \"Natus eaque occaecati maxime ut minima ipsum. Facere quaerat excepturi illum excepturi possimus ea voluptas. Placeat sapiente nulla. Praesentium eum numquam ad.\",\n      \"type\" : \"fzmynvv48v4xpt4mtf1n6ngqm1pu0h5j1c95tv0tcoyzdex4u0qcri0ax54d4kgc5j4wiw4hck\"\n    },\n    \"id\" : \"crm+salesforce\",\n    \"signup_url\" : \"https://www.salesforce.com/signup\",\n    \"icon_url\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"settings\" : [ {\n      \"id\" : \"pipeline_id\",\n      \"label\" : \"Pipeline\",\n      \"type\" : \"select\"\n    }, {\n      \"id\" : \"pipeline_id\",\n      \"label\" : \"Pipeline\",\n      \"type\" : \"select\"\n    }, {\n      \"id\" : \"pipeline_id\",\n      \"label\" : \"Pipeline\",\n      \"type\" : \"select\"\n    }, {\n      \"id\" : \"pipeline_id\",\n      \"label\" : \"Pipeline\",\n      \"type\" : \"select\"\n    }, {\n      \"id\" : \"pipeline_id\",\n      \"label\" : \"Pipeline\",\n      \"type\" : \"select\"\n    }, {\n      \"id\" : \"pipeline_id\",\n      \"label\" : \"Pipeline\",\n      \"type\" : \"select\"\n    }, {\n      \"id\" : \"pipeline_id\",\n      \"label\" : \"Pipeline\",\n      \"type\" : \"select\"\n    }, {\n      \"id\" : \"pipeline_id\",\n      \"label\" : \"Pipeline\",\n      \"type\" : \"select\"\n    } ],\n    \"auth_type\" : \"oauth2\",\n    \"blind_mapped\" : true,\n    \"custom_scopes\" : true,\n    \"configurable_resources\" : [ \"leads\", \"companies\" ],\n    \"unified_apis\" : [ {\n      \"supported_events\" : [ { }, { } ],\n      \"oauth_scopes\" : [ {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      } ],\n      \"name\" : \"File Storage API\",\n      \"downstream_unsupported_resources\" : [ \"companies\", \"companies\", \"companies\", \"companies\", \"companies\", \"companies\", \"companies\" ],\n      \"id\" : \"crm\",\n      \"supported_resources\" : [ { } ]\n    } ],\n    \"auth_only\" : true,\n    \"website_url\" : \"https://www.salesforce.com\",\n    \"oauth_grant_type\" : \"authorization_code\",\n    \"supported_events\" : [ {\n      \"downstream_event_type\" : \"person_created\",\n      \"entity_type\" : \"employee\",\n      \"event_type\" : \"employee.created\",\n      \"resources\" : [ \"companies\", \"companies\", \"companies\", \"companies\" ],\n      \"event_source\" : \"native\"\n    } ],\n    \"webhook_support\" : {\n      \"mode\" : \"native\",\n      \"subscription_level\" : \"integration\",\n      \"virtual_webhooks\" : {\n        \"resources\" : { },\n        \"request_rate\" : {\n          \"unit\" : \"hour\",\n          \"size\" : 7798450982337262941,\n          \"rate\" : 5367192658446827006\n        }\n      },\n      \"managed_via\" : \"api\"\n    },\n    \"name\" : \"Salesforce\",\n    \"status\" : \"development\"\n  }, {\n    \"oauth_credentials_source\" : \"integration\",\n    \"logo_url\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"has_sandbox_credentials\" : true,\n    \"free_trial_available\" : false,\n    \"description\" : \"A description\",\n    \"supported_resources\" : [ {\n      \"downstream_name\" : \"Accounts\",\n      \"name\" : \"Companies\",\n      \"downstream_id\" : \"accounts\",\n      \"id\" : \"companies\",\n      \"status\" : \"development\"\n    }, {\n      \"downstream_name\" : \"Accounts\",\n      \"name\" : \"Companies\",\n      \"downstream_id\" : \"accounts\",\n      \"id\" : \"companies\",\n      \"status\" : \"considering\"\n    }, {\n      \"downstream_name\" : \"Accounts\",\n      \"name\" : \"Companies\",\n      \"downstream_id\" : \"accounts\",\n      \"id\" : \"companies\",\n      \"status\" : \"considering\"\n    }, {\n      \"downstream_name\" : \"Accounts\",\n      \"name\" : \"Companies\",\n      \"downstream_id\" : \"accounts\",\n      \"id\" : \"companies\",\n      \"status\" : \"beta\"\n    }, {\n      \"downstream_name\" : \"Accounts\",\n      \"name\" : \"Companies\",\n      \"downstream_id\" : \"accounts\",\n      \"id\" : \"companies\",\n      \"status\" : \"beta\"\n    }, {\n      \"downstream_name\" : \"Accounts\",\n      \"name\" : \"Companies\",\n      \"downstream_id\" : \"accounts\",\n      \"id\" : \"companies\",\n      \"status\" : \"considering\"\n    }, {\n      \"downstream_name\" : \"Accounts\",\n      \"name\" : \"Companies\",\n      \"downstream_id\" : \"accounts\",\n      \"id\" : \"companies\",\n      \"status\" : \"beta\"\n    } ],\n    \"docs\" : [ {\n      \"audience\" : \"consumer\",\n      \"format\" : \"markdown\",\n      \"name\" : \"connection\",\n      \"id\" : \"12345\",\n      \"url\" : \"https://unify.apideck.com/connector/connectors/workday/docs/consumer+connection\"\n    }, {\n      \"audience\" : \"consumer\",\n      \"format\" : \"markdown\",\n      \"name\" : \"connection\",\n      \"id\" : \"12345\",\n      \"url\" : \"https://unify.apideck.com/connector/connectors/workday/docs/consumer+connection\"\n    }, {\n      \"audience\" : \"consumer\",\n      \"format\" : \"markdown\",\n      \"name\" : \"connection\",\n      \"id\" : \"12345\",\n      \"url\" : \"https://unify.apideck.com/connector/connectors/workday/docs/consumer+connection\"\n    } ],\n    \"oauth_scopes\" : [ {\n      \"default_apis\" : [ \"crm\", \"crm\", \"crm\", \"crm\", \"crm\", \"crm\", \"crm\", \"crm\" ],\n      \"id\" : \"contacts:all\",\n      \"label\" : \"Read/write on the Contacts resource\"\n    }, {\n      \"default_apis\" : [ \"crm\", \"crm\", \"crm\" ],\n      \"id\" : \"contacts:all\",\n      \"label\" : \"Read/write on the Contacts resource\"\n    }, {\n      \"default_apis\" : [ \"crm\", \"crm\", \"crm\", \"crm\", \"crm\", \"crm\", \"crm\", \"crm\" ],\n      \"id\" : \"contacts:all\",\n      \"label\" : \"Read/write on the Contacts resource\"\n    }, {\n      \"default_apis\" : [ \"crm\", \"crm\", \"crm\" ],\n      \"id\" : \"contacts:all\",\n      \"label\" : \"Read/write on the Contacts resource\"\n    } ],\n    \"service_id\" : \"close\",\n    \"tls_support\" : {\n      \"description\" : \"Veritatis vel at alias et. Reprehenderit fuga est vel aliquam aliquam corrupti delectus. Aut tempore corrupti.\",\n      \"type\" : \"4f0dx5e1hkx5dheaec7a78u5d9vdsu6rc9grp3wkly6op9yhgmnkvfbpp8y57ihc3smbjqj5tuxezoj9mzbn82khqq6ue98fl05x7ett58jbslgg1fehr5oht42wh9xbipxsn7779\"\n    },\n    \"id\" : \"crm+salesforce\",\n    \"signup_url\" : \"https://www.salesforce.com/signup\",\n    \"icon_url\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"settings\" : [ {\n      \"id\" : \"pipeline_id\",\n      \"label\" : \"Pipeline\",\n      \"type\" : \"select\"\n    }, {\n      \"id\" : \"pipeline_id\",\n      \"label\" : \"Pipeline\",\n      \"type\" : \"select\"\n    }, {\n      \"id\" : \"pipeline_id\",\n      \"label\" : \"Pipeline\",\n      \"type\" : \"select\"\n    }, {\n      \"id\" : \"pipeline_id\",\n      \"label\" : \"Pipeline\",\n      \"type\" : \"select\"\n    }, {\n      \"id\" : \"pipeline_id\",\n      \"label\" : \"Pipeline\",\n      \"type\" : \"select\"\n    }, {\n      \"id\" : \"pipeline_id\",\n      \"label\" : \"Pipeline\",\n      \"type\" : \"select\"\n    }, {\n      \"id\" : \"pipeline_id\",\n      \"label\" : \"Pipeline\",\n      \"type\" : \"select\"\n    } ],\n    \"auth_type\" : \"oauth2\",\n    \"blind_mapped\" : true,\n    \"custom_scopes\" : true,\n    \"configurable_resources\" : [ \"leads\", \"companies\" ],\n    \"unified_apis\" : [ {\n      \"supported_events\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"oauth_scopes\" : [ {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      } ],\n      \"name\" : \"File Storage API\",\n      \"downstream_unsupported_resources\" : [ \"companies\", \"companies\", \"companies\", \"companies\", \"companies\", \"companies\", \"companies\" ],\n      \"id\" : \"crm\",\n      \"supported_resources\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"supported_events\" : [ { }, { }, { } ],\n      \"oauth_scopes\" : [ {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      } ],\n      \"name\" : \"File Storage API\",\n      \"downstream_unsupported_resources\" : [ \"companies\", \"companies\" ],\n      \"id\" : \"crm\",\n      \"supported_resources\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"supported_events\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"oauth_scopes\" : [ {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      } ],\n      \"name\" : \"File Storage API\",\n      \"downstream_unsupported_resources\" : [ \"companies\", \"companies\" ],\n      \"id\" : \"crm\",\n      \"supported_resources\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    } ],\n    \"auth_only\" : true,\n    \"website_url\" : \"https://www.salesforce.com\",\n    \"oauth_grant_type\" : \"authorization_code\",\n    \"supported_events\" : [ {\n      \"downstream_event_type\" : \"person_created\",\n      \"entity_type\" : \"employee\",\n      \"event_type\" : \"employee.created\",\n      \"resources\" : [ \"companies\", \"companies\", \"companies\", \"companies\", \"companies\", \"companies\" ],\n      \"event_source\" : \"native\"\n    }, {\n      \"downstream_event_type\" : \"person_created\",\n      \"entity_type\" : \"employee\",\n      \"event_type\" : \"employee.created\",\n      \"resources\" : [ \"companies\", \"companies\", \"companies\", \"companies\", \"companies\" ],\n      \"event_source\" : \"native\"\n    }, {\n      \"downstream_event_type\" : \"person_created\",\n      \"entity_type\" : \"employee\",\n      \"event_type\" : \"employee.created\",\n      \"resources\" : [ \"companies\", \"companies\", \"companies\", \"companies\", \"companies\", \"companies\", \"companies\" ],\n      \"event_source\" : \"native\"\n    }, {\n      \"downstream_event_type\" : \"person_created\",\n      \"entity_type\" : \"employee\",\n      \"event_type\" : \"employee.created\",\n      \"resources\" : [ \"companies\", \"companies\", \"companies\", \"companies\", \"companies\" ],\n      \"event_source\" : \"native\"\n    }, {\n      \"downstream_event_type\" : \"person_created\",\n      \"entity_type\" : \"employee\",\n      \"event_type\" : \"employee.created\",\n      \"resources\" : [ \"companies\", \"companies\", \"companies\", \"companies\", \"companies\", \"companies\" ],\n      \"event_source\" : \"native\"\n    }, {\n      \"downstream_event_type\" : \"person_created\",\n      \"entity_type\" : \"employee\",\n      \"event_type\" : \"employee.created\",\n      \"resources\" : [ \"companies\", \"companies\", \"companies\", \"companies\" ],\n      \"event_source\" : \"native\"\n    } ],\n    \"webhook_support\" : {\n      \"mode\" : \"native\",\n      \"subscription_level\" : \"integration\",\n      \"virtual_webhooks\" : {\n        \"resources\" : { },\n        \"request_rate\" : {\n          \"unit\" : \"minute\",\n          \"size\" : 4947667915523672535,\n          \"rate\" : 5846947947562721370\n        }\n      },\n      \"managed_via\" : \"api\"\n    },\n    \"name\" : \"Salesforce\",\n    \"status\" : \"development\"\n  }, {\n    \"oauth_credentials_source\" : \"integration\",\n    \"logo_url\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"has_sandbox_credentials\" : true,\n    \"free_trial_available\" : false,\n    \"description\" : \"A description\",\n    \"supported_resources\" : [ {\n      \"downstream_name\" : \"Accounts\",\n      \"name\" : \"Companies\",\n      \"downstream_id\" : \"accounts\",\n      \"id\" : \"companies\",\n      \"status\" : \"live\"\n    }, {\n      \"downstream_name\" : \"Accounts\",\n      \"name\" : \"Companies\",\n      \"downstream_id\" : \"accounts\",\n      \"id\" : \"companies\",\n      \"status\" : \"development\"\n    }, {\n      \"downstream_name\" : \"Accounts\",\n      \"name\" : \"Companies\",\n      \"downstream_id\" : \"accounts\",\n      \"id\" : \"companies\",\n      \"status\" : \"beta\"\n    } ],\n    \"docs\" : [ {\n      \"audience\" : \"application_owner\",\n      \"format\" : \"markdown\",\n      \"name\" : \"connection\",\n      \"id\" : \"12345\",\n      \"url\" : \"https://unify.apideck.com/connector/connectors/workday/docs/consumer+connection\"\n    }, {\n      \"audience\" : \"application_owner\",\n      \"format\" : \"markdown\",\n      \"name\" : \"connection\",\n      \"id\" : \"12345\",\n      \"url\" : \"https://unify.apideck.com/connector/connectors/workday/docs/consumer+connection\"\n    }, {\n      \"audience\" : \"application_owner\",\n      \"format\" : \"markdown\",\n      \"name\" : \"connection\",\n      \"id\" : \"12345\",\n      \"url\" : \"https://unify.apideck.com/connector/connectors/workday/docs/consumer+connection\"\n    }, {\n      \"audience\" : \"consumer\",\n      \"format\" : \"markdown\",\n      \"name\" : \"connection\",\n      \"id\" : \"12345\",\n      \"url\" : \"https://unify.apideck.com/connector/connectors/workday/docs/consumer+connection\"\n    }, {\n      \"audience\" : \"consumer\",\n      \"format\" : \"markdown\",\n      \"name\" : \"connection\",\n      \"id\" : \"12345\",\n      \"url\" : \"https://unify.apideck.com/connector/connectors/workday/docs/consumer+connection\"\n    }, {\n      \"audience\" : \"application_owner\",\n      \"format\" : \"markdown\",\n      \"name\" : \"connection\",\n      \"id\" : \"12345\",\n      \"url\" : \"https://unify.apideck.com/connector/connectors/workday/docs/consumer+connection\"\n    } ],\n    \"oauth_scopes\" : [ {\n      \"default_apis\" : [ \"crm\", \"crm\", \"crm\", \"crm\", \"crm\", \"crm\" ],\n      \"id\" : \"contacts:all\",\n      \"label\" : \"Read/write on the Contacts resource\"\n    }, {\n      \"default_apis\" : [ \"crm\", \"crm\", \"crm\", \"crm\", \"crm\" ],\n      \"id\" : \"contacts:all\",\n      \"label\" : \"Read/write on the Contacts resource\"\n    }, {\n      \"default_apis\" : [ \"crm\", \"crm\", \"crm\", \"crm\", \"crm\", \"crm\" ],\n      \"id\" : \"contacts:all\",\n      \"label\" : \"Read/write on the Contacts resource\"\n    }, {\n      \"default_apis\" : [ \"crm\", \"crm\", \"crm\", \"crm\", \"crm\", \"crm\", \"crm\", \"crm\" ],\n      \"id\" : \"contacts:all\",\n      \"label\" : \"Read/write on the Contacts resource\"\n    }, {\n      \"default_apis\" : [ \"crm\", \"crm\", \"crm\", \"crm\", \"crm\", \"crm\", \"crm\" ],\n      \"id\" : \"contacts:all\",\n      \"label\" : \"Read/write on the Contacts resource\"\n    } ],\n    \"service_id\" : \"close\",\n    \"tls_support\" : {\n      \"description\" : \"Et et ipsum id. Eos cumque blanditiis. Et perspiciatis sed amet id quia.\",\n      \"type\" : \"d8bcbh04gg5h7oifccs5pb1vtsophog1gtjior20oa8r9zs7a0pn426refrg2hr2du6dqxv43icgrreewedsl972wohrbtkgwamsf8uzgmtb3kbcpqezo1ugy0ianhiihfu95bcn5vrfkjg\"\n    },\n    \"id\" : \"crm+salesforce\",\n    \"signup_url\" : \"https://www.salesforce.com/signup\",\n    \"icon_url\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"settings\" : [ {\n      \"id\" : \"pipeline_id\",\n      \"label\" : \"Pipeline\",\n      \"type\" : \"select\"\n    }, {\n      \"id\" : \"pipeline_id\",\n      \"label\" : \"Pipeline\",\n      \"type\" : \"select\"\n    }, {\n      \"id\" : \"pipeline_id\",\n      \"label\" : \"Pipeline\",\n      \"type\" : \"select\"\n    }, {\n      \"id\" : \"pipeline_id\",\n      \"label\" : \"Pipeline\",\n      \"type\" : \"select\"\n    }, {\n      \"id\" : \"pipeline_id\",\n      \"label\" : \"Pipeline\",\n      \"type\" : \"select\"\n    } ],\n    \"auth_type\" : \"oauth2\",\n    \"blind_mapped\" : true,\n    \"custom_scopes\" : true,\n    \"configurable_resources\" : [ \"leads\", \"companies\" ],\n    \"unified_apis\" : [ {\n      \"supported_events\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"oauth_scopes\" : [ {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      } ],\n      \"name\" : \"File Storage API\",\n      \"downstream_unsupported_resources\" : [ \"companies\", \"companies\", \"companies\", \"companies\" ],\n      \"id\" : \"crm\",\n      \"supported_resources\" : [ { }, { }, { } ]\n    }, {\n      \"supported_events\" : [ { }, { } ],\n      \"oauth_scopes\" : [ {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      } ],\n      \"name\" : \"File Storage API\",\n      \"downstream_unsupported_resources\" : [ \"companies\", \"companies\", \"companies\", \"companies\", \"companies\", \"companies\", \"companies\", \"companies\" ],\n      \"id\" : \"crm\",\n      \"supported_resources\" : [ { }, { }, { }, { } ]\n    } ],\n    \"auth_only\" : true,\n    \"website_url\" : \"https://www.salesforce.com\",\n    \"oauth_grant_type\" : \"authorization_code\",\n    \"supported_events\" : [ {\n      \"downstream_event_type\" : \"person_created\",\n      \"entity_type\" : \"employee\",\n      \"event_type\" : \"employee.created\",\n      \"resources\" : [ \"companies\", \"companies\" ],\n      \"event_source\" : \"native\"\n    }, {\n      \"downstream_event_type\" : \"person_created\",\n      \"entity_type\" : \"employee\",\n      \"event_type\" : \"employee.created\",\n      \"resources\" : [ \"companies\" ],\n      \"event_source\" : \"native\"\n    }, {\n      \"downstream_event_type\" : \"person_created\",\n      \"entity_type\" : \"employee\",\n      \"event_type\" : \"employee.created\",\n      \"resources\" : [ \"companies\", \"companies\", \"companies\", \"companies\", \"companies\" ],\n      \"event_source\" : \"native\"\n    }, {\n      \"downstream_event_type\" : \"person_created\",\n      \"entity_type\" : \"employee\",\n      \"event_type\" : \"employee.created\",\n      \"resources\" : [ \"companies\" ],\n      \"event_source\" : \"native\"\n    }, {\n      \"downstream_event_type\" : \"person_created\",\n      \"entity_type\" : \"employee\",\n      \"event_type\" : \"employee.created\",\n      \"resources\" : [ \"companies\", \"companies\", \"companies\", \"companies\", \"companies\", \"companies\", \"companies\", \"companies\" ],\n      \"event_source\" : \"native\"\n    }, {\n      \"downstream_event_type\" : \"person_created\",\n      \"entity_type\" : \"employee\",\n      \"event_type\" : \"employee.created\",\n      \"resources\" : [ \"companies\", \"companies\", \"companies\", \"companies\", \"companies\", \"companies\" ],\n      \"event_source\" : \"native\"\n    } ],\n    \"webhook_support\" : {\n      \"mode\" : \"native\",\n      \"subscription_level\" : \"integration\",\n      \"virtual_webhooks\" : {\n        \"resources\" : { },\n        \"request_rate\" : {\n          \"unit\" : \"second\",\n          \"size\" : 4140370530311543334,\n          \"rate\" : 6370219053320648055\n        }\n      },\n      \"managed_via\" : \"api\"\n    },\n    \"name\" : \"Salesforce\",\n    \"status\" : \"considering\"\n  } ],\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "794a0dd0-9b3f-48a8-9b4d-aa9633e98d06",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:40.493539Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectorsAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/Connector"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetConnectorsResponse",
            "x-graphql-type-name" : "ConnectorList"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "5b08c51f-b609-4444-b394-3b8b6db0d842",
    "name" : "Get API Resource Coverage",
    "request" : {
      "urlPath" : "/connector/apis/pjuh/resources/fu1h/coverage",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5b08c51f-b609-4444-b394-3b8b6db0d842",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:40.490938Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiResourceCoverageOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "537efca8-0e13-40ed-9741-8e8e682d10a4",
    "name" : "Get API Resource Coverage",
    "request" : {
      "urlPath" : "/connector/apis/i10j/resources/5t71/coverage",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "537efca8-0e13-40ed-9741-8e8e682d10a4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:40.490691Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiResourceCoverageOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "cae375b5-bf94-4bfe-9307-03c2248ca8a2",
    "name" : "Get API Resource Coverage",
    "request" : {
      "urlPath" : "/connector/apis/2266/resources/zt25/coverage",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cae375b5-bf94-4bfe-9307-03c2248ca8a2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:40.490472Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiResourceCoverageOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "e473dc51-198e-43cd-8480-4d2f25fb842f",
    "name" : "Get API Resource Coverage",
    "request" : {
      "urlPath" : "/connector/apis/b0p7/resources/3k7b/coverage",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"coverage\" : [ {\n      \"downstream_name\" : \"Accounts\",\n      \"pagination\" : {\n        \"mode\" : \"native\",\n        \"paging_support\" : false,\n        \"limit_support\" : true\n      },\n      \"supported_fields\" : [ {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { }, { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { } ]\n      } ],\n      \"supported_operations\" : [ \"all\", \"one\", \"add\", \"update\", \"delete\" ],\n      \"supported_sort_by\" : [ \"updated_at\", \"created_at\", \"name\" ],\n      \"downstream_id\" : \"accounts\",\n      \"supported_filters\" : [ \"name\", \"email\" ],\n      \"supported_list_fields\" : [ {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { }, { }, { }, { }, { } ]\n      } ],\n      \"pagination_supported\" : false\n    }, {\n      \"downstream_name\" : \"Accounts\",\n      \"pagination\" : {\n        \"mode\" : \"native\",\n        \"paging_support\" : false,\n        \"limit_support\" : true\n      },\n      \"supported_fields\" : [ {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { }, { }, { }, { }, { } ]\n      } ],\n      \"supported_operations\" : [ \"all\", \"one\", \"add\", \"update\", \"delete\" ],\n      \"supported_sort_by\" : [ \"updated_at\", \"created_at\", \"name\" ],\n      \"downstream_id\" : \"accounts\",\n      \"supported_filters\" : [ \"name\", \"email\" ],\n      \"supported_list_fields\" : [ {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n      } ],\n      \"pagination_supported\" : false\n    }, {\n      \"downstream_name\" : \"Accounts\",\n      \"pagination\" : {\n        \"mode\" : \"native\",\n        \"paging_support\" : true,\n        \"limit_support\" : false\n      },\n      \"supported_fields\" : [ {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { }, { }, { }, { } ]\n      } ],\n      \"supported_operations\" : [ \"all\", \"one\", \"add\", \"update\", \"delete\" ],\n      \"supported_sort_by\" : [ \"updated_at\", \"created_at\", \"name\" ],\n      \"downstream_id\" : \"accounts\",\n      \"supported_filters\" : [ \"name\", \"email\" ],\n      \"supported_list_fields\" : [ {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { }, { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { }, { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { } ]\n      } ],\n      \"pagination_supported\" : false\n    }, {\n      \"downstream_name\" : \"Accounts\",\n      \"pagination\" : {\n        \"mode\" : \"native\",\n        \"paging_support\" : false,\n        \"limit_support\" : false\n      },\n      \"supported_fields\" : [ {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { }, { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { }, { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { }, { }, { } ]\n      } ],\n      \"supported_operations\" : [ \"all\", \"one\", \"add\", \"update\", \"delete\" ],\n      \"supported_sort_by\" : [ \"updated_at\", \"created_at\", \"name\" ],\n      \"downstream_id\" : \"accounts\",\n      \"supported_filters\" : [ \"name\", \"email\" ],\n      \"supported_list_fields\" : [ {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { } ]\n      } ],\n      \"pagination_supported\" : false\n    } ],\n    \"name\" : \"Companies\",\n    \"id\" : \"companies\",\n    \"status\" : \"upcoming\"\n  },\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e473dc51-198e-43cd-8480-4d2f25fb842f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:40.490237Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiResourceCoverageOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/ApiResourceCoverage"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetApiResourceCoverageResponse"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "d3f253f2-2816-4c3d-a104-494d90f5a060",
    "name" : "Get API Resource",
    "request" : {
      "urlPath" : "/connector/apis/u43n/resources/n0u9",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d3f253f2-2816-4c3d-a104-494d90f5a060",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:40.489246Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiResourcesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "4e51f460-e70e-4c7e-a093-de1a66857a7c",
    "name" : "Get API Resource",
    "request" : {
      "urlPath" : "/connector/apis/c62r/resources/725i",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4e51f460-e70e-4c7e-a093-de1a66857a7c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:40.489005Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiResourcesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "1e1f9e3c-2c9c-4785-b1e4-70650399eec2",
    "name" : "Get API Resource",
    "request" : {
      "urlPath" : "/connector/apis/1i28/resources/lv8t",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1e1f9e3c-2c9c-4785-b1e4-70650399eec2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:40.488789Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiResourcesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "72095b27-6690-4400-9735-e8086a98c6f1",
    "name" : "Get API Resource",
    "request" : {
      "urlPath" : "/connector/apis/2uj7/resources/45c3",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"schema\" : {\n      \"additionalProperties\" : false,\n      \"properties\" : {\n        \"created_at\" : {\n          \"example\" : \"2020-09-30T07:43:32.000Z\",\n          \"readOnly\" : true,\n          \"type\" : \"string\"\n        },\n        \"id\" : {\n          \"example\" : \"12345\",\n          \"readOnly\" : true,\n          \"type\" : \"string\"\n        },\n        \"name\" : {\n          \"example\" : \"Elon Musk\",\n          \"minLength\" : 1,\n          \"type\" : \"string\"\n        },\n        \"updated_at\" : {\n          \"example\" : \"2020-09-30T07:43:32.000Z\",\n          \"readOnly\" : true,\n          \"type\" : \"string\"\n        }\n      },\n      \"required\" : [ \"name\", \"company_name\" ],\n      \"x-pii\" : [ \"name\", \"email\", \"first_name\", \"last_name\" ]\n    },\n    \"name\" : \"Companies\",\n    \"id\" : \"companies\",\n    \"linked_resources\" : [ {\n      \"unified_property\" : \"owner_id\",\n      \"id\" : \"companies\"\n    }, {\n      \"unified_property\" : \"owner_id\",\n      \"id\" : \"companies\"\n    }, {\n      \"unified_property\" : \"owner_id\",\n      \"id\" : \"companies\"\n    }, {\n      \"unified_property\" : \"owner_id\",\n      \"id\" : \"companies\"\n    } ],\n    \"status\" : \"beta\"\n  },\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "72095b27-6690-4400-9735-e8086a98c6f1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:40.48856Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiResourcesOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/ApiResource"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetApiResourceResponse"
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "91de0131-b24d-4507-b821-e7660b909560",
    "name" : "Get API",
    "request" : {
      "urlPath" : "/connector/apis/4b1q",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "91de0131-b24d-4507-b821-e7660b909560",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:40.488226Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apisOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "88920539-679f-4820-bbb6-fa8f204347c7",
    "name" : "Get API",
    "request" : {
      "urlPath" : "/connector/apis/8255",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "88920539-679f-4820-bbb6-fa8f204347c7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:40.488004Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apisOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "30f0a843-4682-4362-a04c-7c93390c13ca",
    "name" : "Get API",
    "request" : {
      "urlPath" : "/connector/apis/847l",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "30f0a843-4682-4362-a04c-7c93390c13ca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:40.487856Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apisOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "e78981ba-510a-4e27-904d-10c0eb622fe7",
    "name" : "Get API",
    "request" : {
      "urlPath" : "/connector/apis/9q4s",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"postman_collection_id\" : \"1311564-00e7266b-a3d6-4f40-b172-baaa66a3ed6f\",\n    \"spec_url\" : \"https://specs.apideck.com/file-storage.yml\",\n    \"name\" : \"File Storage API\",\n    \"description\" : \"Manage API keys, access tokens, OAuth flows and integrations.\",\n    \"resources\" : [ {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"live\"\n    } ],\n    \"api_reference_url\" : \"https://developers.apideck.com/apis/file-storage/reference\",\n    \"categories\" : [ \"files\", \"file-storage\", \"cloud-storage\", \"object-storage\" ],\n    \"id\" : \"file-storage\",\n    \"type\" : \"unified\",\n    \"events\" : [ \"crm.contact.updated\", \"accounting.invoice.created\" ],\n    \"status\" : \"beta\"\n  },\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e78981ba-510a-4e27-904d-10c0eb622fe7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:40.487697Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apisOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Api"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetApiResponse"
          }
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "f84feadc-310d-4bb2-8c4f-2230b0e74640",
    "name" : "List APIs",
    "request" : {
      "urlPath" : "/connector/apis",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f84feadc-310d-4bb2-8c4f-2230b0e74640",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:40.487388Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apisAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "0130355d-d133-4249-befd-dbf6655a423d",
    "name" : "List APIs",
    "request" : {
      "urlPath" : "/connector/apis",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0130355d-d133-4249-befd-dbf6655a423d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:40.487277Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apisAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "5b7ea0f7-f02b-408a-84d9-18ff094c1655",
    "name" : "List APIs",
    "request" : {
      "urlPath" : "/connector/apis",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5b7ea0f7-f02b-408a-84d9-18ff094c1655",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:40.487161Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apisAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "31a05fa0-f424-4aac-b2db-9c800b7eb92e",
    "name" : "List APIs",
    "request" : {
      "urlPath" : "/connector/apis",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"postman_collection_id\" : \"1311564-00e7266b-a3d6-4f40-b172-baaa66a3ed6f\",\n    \"spec_url\" : \"https://specs.apideck.com/file-storage.yml\",\n    \"name\" : \"File Storage API\",\n    \"description\" : \"Manage API keys, access tokens, OAuth flows and integrations.\",\n    \"resources\" : [ {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"development\"\n    }, {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"live\"\n    }, {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"considering\"\n    }, {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"considering\"\n    }, {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"considering\"\n    } ],\n    \"api_reference_url\" : \"https://developers.apideck.com/apis/file-storage/reference\",\n    \"categories\" : [ \"files\", \"file-storage\", \"cloud-storage\", \"object-storage\" ],\n    \"id\" : \"file-storage\",\n    \"type\" : \"unified\",\n    \"events\" : [ \"crm.contact.updated\", \"accounting.invoice.created\" ],\n    \"status\" : \"live\"\n  }, {\n    \"postman_collection_id\" : \"1311564-00e7266b-a3d6-4f40-b172-baaa66a3ed6f\",\n    \"spec_url\" : \"https://specs.apideck.com/file-storage.yml\",\n    \"name\" : \"File Storage API\",\n    \"description\" : \"Manage API keys, access tokens, OAuth flows and integrations.\",\n    \"resources\" : [ {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"beta\"\n    }, {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"upcoming\"\n    }, {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"development\"\n    }, {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"development\"\n    } ],\n    \"api_reference_url\" : \"https://developers.apideck.com/apis/file-storage/reference\",\n    \"categories\" : [ \"files\", \"file-storage\", \"cloud-storage\", \"object-storage\" ],\n    \"id\" : \"file-storage\",\n    \"type\" : \"unified\",\n    \"events\" : [ \"crm.contact.updated\", \"accounting.invoice.created\" ],\n    \"status\" : \"live\"\n  }, {\n    \"postman_collection_id\" : \"1311564-00e7266b-a3d6-4f40-b172-baaa66a3ed6f\",\n    \"spec_url\" : \"https://specs.apideck.com/file-storage.yml\",\n    \"name\" : \"File Storage API\",\n    \"description\" : \"Manage API keys, access tokens, OAuth flows and integrations.\",\n    \"resources\" : [ {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"development\"\n    }, {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"development\"\n    }, {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"beta\"\n    } ],\n    \"api_reference_url\" : \"https://developers.apideck.com/apis/file-storage/reference\",\n    \"categories\" : [ \"files\", \"file-storage\", \"cloud-storage\", \"object-storage\" ],\n    \"id\" : \"file-storage\",\n    \"type\" : \"unified\",\n    \"events\" : [ \"crm.contact.updated\", \"accounting.invoice.created\" ],\n    \"status\" : \"beta\"\n  }, {\n    \"postman_collection_id\" : \"1311564-00e7266b-a3d6-4f40-b172-baaa66a3ed6f\",\n    \"spec_url\" : \"https://specs.apideck.com/file-storage.yml\",\n    \"name\" : \"File Storage API\",\n    \"description\" : \"Manage API keys, access tokens, OAuth flows and integrations.\",\n    \"resources\" : [ {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"development\"\n    }, {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"upcoming\"\n    }, {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"beta\"\n    } ],\n    \"api_reference_url\" : \"https://developers.apideck.com/apis/file-storage/reference\",\n    \"categories\" : [ \"files\", \"file-storage\", \"cloud-storage\", \"object-storage\" ],\n    \"id\" : \"file-storage\",\n    \"type\" : \"platform\",\n    \"events\" : [ \"crm.contact.updated\", \"accounting.invoice.created\" ],\n    \"status\" : \"beta\"\n  }, {\n    \"postman_collection_id\" : \"1311564-00e7266b-a3d6-4f40-b172-baaa66a3ed6f\",\n    \"spec_url\" : \"https://specs.apideck.com/file-storage.yml\",\n    \"name\" : \"File Storage API\",\n    \"description\" : \"Manage API keys, access tokens, OAuth flows and integrations.\",\n    \"resources\" : [ {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"considering\"\n    }, {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"beta\"\n    }, {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"considering\"\n    }, {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"development\"\n    }, {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"upcoming\"\n    }, {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"live\"\n    } ],\n    \"api_reference_url\" : \"https://developers.apideck.com/apis/file-storage/reference\",\n    \"categories\" : [ \"files\", \"file-storage\", \"cloud-storage\", \"object-storage\" ],\n    \"id\" : \"file-storage\",\n    \"type\" : \"platform\",\n    \"events\" : [ \"crm.contact.updated\", \"accounting.invoice.created\" ],\n    \"status\" : \"development\"\n  }, {\n    \"postman_collection_id\" : \"1311564-00e7266b-a3d6-4f40-b172-baaa66a3ed6f\",\n    \"spec_url\" : \"https://specs.apideck.com/file-storage.yml\",\n    \"name\" : \"File Storage API\",\n    \"description\" : \"Manage API keys, access tokens, OAuth flows and integrations.\",\n    \"resources\" : [ {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"upcoming\"\n    }, {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"considering\"\n    }, {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"beta\"\n    }, {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"upcoming\"\n    }, {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"upcoming\"\n    }, {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"development\"\n    } ],\n    \"api_reference_url\" : \"https://developers.apideck.com/apis/file-storage/reference\",\n    \"categories\" : [ \"files\", \"file-storage\", \"cloud-storage\", \"object-storage\" ],\n    \"id\" : \"file-storage\",\n    \"type\" : \"platform\",\n    \"events\" : [ \"crm.contact.updated\", \"accounting.invoice.created\" ],\n    \"status\" : \"considering\"\n  } ],\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "31a05fa0-f424-4aac-b2db-9c800b7eb92e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:40.486994Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apisAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/Api"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetApisResponse",
            "x-graphql-type-name" : "ApiList"
          }
        }
      }
    },
    "insertionIndex" : 31
  } ]
}