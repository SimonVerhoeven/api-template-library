{
  "mappings" : [ {
    "id" : "b0a0631d-055f-4401-81c1-17afe4e0b1c9",
    "name" : "Get Connector Resource",
    "request" : {
      "urlPath" : "/connector/connectors/7o4r/resources/l7xp",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b0a0631d-055f-4401-81c1-17afe4e0b1c9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.619169Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectorResourcesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "f031bd8a-6548-46db-810b-4ddd976a33d3",
    "name" : "Get Connector Resource",
    "request" : {
      "urlPath" : "/connector/connectors/vdq4/resources/2izz",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f031bd8a-6548-46db-810b-4ddd976a33d3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.618907Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectorResourcesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "3497b7d7-7088-4303-b7c9-7120f740986b",
    "name" : "Get Connector Resource",
    "request" : {
      "urlPath" : "/connector/connectors/o2yi/resources/lpo7",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3497b7d7-7088-4303-b7c9-7120f740986b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.618638Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectorResourcesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "8d7a166d-d045-4ca0-af55-459f652fddab",
    "name" : "Get Connector Resource",
    "request" : {
      "urlPath" : "/connector/connectors/k403/resources/pr0t",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"custom_fields_supported\" : true,\n    \"pagination\" : {\n      \"mode\" : \"native\",\n      \"paging_support\" : true,\n      \"limit_support\" : false\n    },\n    \"supported_operations\" : [ \"all\", \"one\", \"add\", \"update\", \"delete\" ],\n    \"supported_sort_by\" : [ \"updated_at\", \"created_at\", \"name\" ],\n    \"supported_filters\" : [ \"name\", \"email\" ],\n    \"downstream_unsupported_operations\" : [ \"upload\" ],\n    \"supported_list_fields\" : [ {\n      \"unified_property\" : \"owner_id\",\n      \"child_properties\" : [ {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      } ]\n    }, {\n      \"unified_property\" : \"owner_id\",\n      \"child_properties\" : [ {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      } ]\n    }, {\n      \"unified_property\" : \"owner_id\",\n      \"child_properties\" : [ {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      } ]\n    }, {\n      \"unified_property\" : \"owner_id\",\n      \"child_properties\" : [ {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      } ]\n    }, {\n      \"unified_property\" : \"owner_id\",\n      \"child_properties\" : [ {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      } ]\n    }, {\n      \"unified_property\" : \"owner_id\",\n      \"child_properties\" : [ {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      } ]\n    }, {\n      \"unified_property\" : \"owner_id\",\n      \"child_properties\" : [ {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      } ]\n    } ],\n    \"pagination_supported\" : false,\n    \"downstream_name\" : \"Accounts\",\n    \"supported_fields\" : [ {\n      \"unified_property\" : \"owner_id\",\n      \"child_properties\" : [ {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      } ]\n    }, {\n      \"unified_property\" : \"owner_id\",\n      \"child_properties\" : [ {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      } ]\n    }, {\n      \"unified_property\" : \"owner_id\",\n      \"child_properties\" : [ {\n        \"unified_property\" : { }\n      }, {\n        \"unified_property\" : { }\n      } ]\n    } ],\n    \"name\" : \"Companies\",\n    \"downstream_id\" : \"accounts\",\n    \"id\" : \"companies\",\n    \"status\" : \"beta\"\n  },\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8d7a166d-d045-4ca0-af55-459f652fddab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.618303Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectorResourcesOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/ConnectorResource"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetConnectorResourceResponse"
          }
        }
      }
    }
  }, {
    "id" : "c743ca88-24a8-408a-b6ad-912c37e67003",
    "name" : "Get Connector Doc content (application/json)",
    "request" : {
      "urlPath" : "/connector/connectors/ud7d/docs/4n6s",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c743ca88-24a8-408a-b6ad-912c37e67003",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.617742Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectorDocsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "992060d7-7f91-42b3-b3d2-e876339a366d",
    "name" : "Get Connector Doc content (application/json)",
    "request" : {
      "urlPath" : "/connector/connectors/4yns/docs/9p78",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "992060d7-7f91-42b3-b3d2-e876339a366d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.617515Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectorDocsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "e538e958-3cab-4a77-8ad8-08b9c5c2bce4",
    "name" : "Get Connector Doc content (application/json)",
    "request" : {
      "urlPath" : "/connector/connectors/ffnd/docs/j5ff",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e538e958-3cab-4a77-8ad8-08b9c5c2bce4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.617314Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectorDocsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "289fdc55-c911-4d62-a378-55cc5e8ead27",
    "name" : "Get Connector Doc content (text/markdown)",
    "request" : {
      "urlPath" : "/connector/connectors/j8zb/docs/s9vb",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/markdown"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"sxzyyzpqyd82vjvcj0hsmwagfbgoyl858jpdm0mp56hnfbos311ur1b73sr3j4xz52f7pnddmkfguvf52rf5oo7iuwa7kqztfy6w9hwz13vlq341pgo5ov6v\"",
      "headers" : {
        "Content-Type" : "text/markdown"
      }
    },
    "uuid" : "289fdc55-c911-4d62-a378-55cc5e8ead27",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.617111Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectorDocsOne",
          "schema" : {
            "format" : "markdown",
            "type" : "string"
          }
        }
      }
    }
  }, {
    "id" : "62ef78a4-5eb1-4e2f-8039-b88e0c52cab2",
    "name" : "Get Connector",
    "request" : {
      "urlPath" : "/connector/connectors/af97",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "62ef78a4-5eb1-4e2f-8039-b88e0c52cab2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.616924Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectorsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "63a73e78-5420-42c3-8edb-cf6e25699e4c",
    "name" : "Get Connector",
    "request" : {
      "urlPath" : "/connector/connectors/5u4u",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "63a73e78-5420-42c3-8edb-cf6e25699e4c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.616717Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectorsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "29d4cdcc-43cb-4030-8dfe-14285f3631ed",
    "name" : "Get Connector",
    "request" : {
      "urlPath" : "/connector/connectors/9582",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "29d4cdcc-43cb-4030-8dfe-14285f3631ed",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.616558Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectorsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "93160ba4-c91c-44fa-b85c-b435b2cbc2f1",
    "name" : "Get Connector",
    "request" : {
      "urlPath" : "/connector/connectors/1z38",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"oauth_credentials_source\" : \"integration\",\n    \"logo_url\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"has_sandbox_credentials\" : true,\n    \"free_trial_available\" : false,\n    \"description\" : \"A description\",\n    \"supported_resources\" : [ {\n      \"downstream_name\" : \"Accounts\",\n      \"name\" : \"Companies\",\n      \"downstream_id\" : \"accounts\",\n      \"id\" : \"companies\",\n      \"status\" : \"upcoming\"\n    }, {\n      \"downstream_name\" : \"Accounts\",\n      \"name\" : \"Companies\",\n      \"downstream_id\" : \"accounts\",\n      \"id\" : \"companies\",\n      \"status\" : \"upcoming\"\n    } ],\n    \"docs\" : [ {\n      \"audience\" : \"application_owner\",\n      \"format\" : \"markdown\",\n      \"name\" : \"connection\",\n      \"id\" : \"12345\",\n      \"url\" : \"https://unify.apideck.com/connector/connectors/workday/docs/consumer+connection\"\n    }, {\n      \"audience\" : \"consumer\",\n      \"format\" : \"markdown\",\n      \"name\" : \"connection\",\n      \"id\" : \"12345\",\n      \"url\" : \"https://unify.apideck.com/connector/connectors/workday/docs/consumer+connection\"\n    } ],\n    \"oauth_scopes\" : [ {\n      \"default_apis\" : [ \"crm\", \"crm\", \"crm\", \"crm\" ],\n      \"id\" : \"contacts:all\",\n      \"label\" : \"Read/write on the Contacts resource\"\n    }, {\n      \"default_apis\" : [ \"crm\" ],\n      \"id\" : \"contacts:all\",\n      \"label\" : \"Read/write on the Contacts resource\"\n    }, {\n      \"default_apis\" : [ \"crm\" ],\n      \"id\" : \"contacts:all\",\n      \"label\" : \"Read/write on the Contacts resource\"\n    }, {\n      \"default_apis\" : [ \"crm\", \"crm\", \"crm\", \"crm\", \"crm\", \"crm\", \"crm\", \"crm\" ],\n      \"id\" : \"contacts:all\",\n      \"label\" : \"Read/write on the Contacts resource\"\n    }, {\n      \"default_apis\" : [ \"crm\", \"crm\", \"crm\", \"crm\", \"crm\", \"crm\", \"crm\", \"crm\" ],\n      \"id\" : \"contacts:all\",\n      \"label\" : \"Read/write on the Contacts resource\"\n    } ],\n    \"service_id\" : \"close\",\n    \"tls_support\" : {\n      \"description\" : \"Occaecati sapiente veniam dolorem. Voluptas laudantium quia. Consequatur earum inventore aut. Minus ut dolores blanditiis. Eveniet sapiente est inventore autem dolores earum.\",\n      \"type\" : \"hj5348lwahii4dj4k0xyw1uc9wwxpturh354bgek8ipq53998qjb25ht1kyycka6j5tf995b7mwqcrbnssmh69pbhw0xrbvrl4shjxb52bcpfbo8m5aww1p6ickl0vpah8fu522a6gtr0xw25dwvvwl6cpbfwkg7ftdg0pom9e3p9ybrjdkrh0l39io\"\n    },\n    \"id\" : \"crm+salesforce\",\n    \"signup_url\" : \"https://www.salesforce.com/signup\",\n    \"icon_url\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"settings\" : [ {\n      \"id\" : \"pipeline_id\",\n      \"label\" : \"Pipeline\",\n      \"type\" : \"select\"\n    }, {\n      \"id\" : \"pipeline_id\",\n      \"label\" : \"Pipeline\",\n      \"type\" : \"select\"\n    }, {\n      \"id\" : \"pipeline_id\",\n      \"label\" : \"Pipeline\",\n      \"type\" : \"select\"\n    } ],\n    \"auth_type\" : \"oauth2\",\n    \"blind_mapped\" : true,\n    \"custom_scopes\" : true,\n    \"configurable_resources\" : [ \"leads\", \"companies\" ],\n    \"unified_apis\" : [ {\n      \"supported_events\" : [ {\n        \"downstream_event_type\" : \"person_created\",\n        \"entity_type\" : \"employee\",\n        \"event_type\" : \"employee.created\",\n        \"resources\" : [ \"companies\", \"companies\", \"companies\", \"companies\", \"companies\", \"companies\", \"companies\", \"companies\" ],\n        \"event_source\" : \"native\"\n      } ],\n      \"oauth_scopes\" : [ {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      } ],\n      \"name\" : \"File Storage API\",\n      \"downstream_unsupported_resources\" : [ \"companies\", \"companies\", \"companies\" ],\n      \"id\" : \"crm\",\n      \"supported_resources\" : [ {\n        \"downstream_name\" : \"Accounts\",\n        \"name\" : \"Companies\",\n        \"downstream_id\" : \"accounts\",\n        \"id\" : \"companies\",\n        \"status\" : \"considering\"\n      }, {\n        \"downstream_name\" : \"Accounts\",\n        \"name\" : \"Companies\",\n        \"downstream_id\" : \"accounts\",\n        \"id\" : \"companies\",\n        \"status\" : \"live\"\n      }, {\n        \"downstream_name\" : \"Accounts\",\n        \"name\" : \"Companies\",\n        \"downstream_id\" : \"accounts\",\n        \"id\" : \"companies\",\n        \"status\" : \"beta\"\n      }, {\n        \"downstream_name\" : \"Accounts\",\n        \"name\" : \"Companies\",\n        \"downstream_id\" : \"accounts\",\n        \"id\" : \"companies\",\n        \"status\" : \"upcoming\"\n      }, {\n        \"downstream_name\" : \"Accounts\",\n        \"name\" : \"Companies\",\n        \"downstream_id\" : \"accounts\",\n        \"id\" : \"companies\",\n        \"status\" : \"upcoming\"\n      }, {\n        \"downstream_name\" : \"Accounts\",\n        \"name\" : \"Companies\",\n        \"downstream_id\" : \"accounts\",\n        \"id\" : \"companies\",\n        \"status\" : \"upcoming\"\n      }, {\n        \"downstream_name\" : \"Accounts\",\n        \"name\" : \"Companies\",\n        \"downstream_id\" : \"accounts\",\n        \"id\" : \"companies\",\n        \"status\" : \"development\"\n      } ]\n    }, {\n      \"supported_events\" : [ {\n        \"downstream_event_type\" : \"person_created\",\n        \"entity_type\" : \"employee\",\n        \"event_type\" : \"employee.created\",\n        \"resources\" : [ \"companies\" ],\n        \"event_source\" : \"native\"\n      }, {\n        \"downstream_event_type\" : \"person_created\",\n        \"entity_type\" : \"employee\",\n        \"event_type\" : \"employee.created\",\n        \"resources\" : [ \"companies\", \"companies\", \"companies\", \"companies\" ],\n        \"event_source\" : \"native\"\n      } ],\n      \"oauth_scopes\" : [ {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      } ],\n      \"name\" : \"File Storage API\",\n      \"downstream_unsupported_resources\" : [ \"companies\", \"companies\" ],\n      \"id\" : \"crm\",\n      \"supported_resources\" : [ {\n        \"downstream_name\" : \"Accounts\",\n        \"name\" : \"Companies\",\n        \"downstream_id\" : \"accounts\",\n        \"id\" : \"companies\",\n        \"status\" : \"live\"\n      }, {\n        \"downstream_name\" : \"Accounts\",\n        \"name\" : \"Companies\",\n        \"downstream_id\" : \"accounts\",\n        \"id\" : \"companies\",\n        \"status\" : \"considering\"\n      }, {\n        \"downstream_name\" : \"Accounts\",\n        \"name\" : \"Companies\",\n        \"downstream_id\" : \"accounts\",\n        \"id\" : \"companies\",\n        \"status\" : \"beta\"\n      }, {\n        \"downstream_name\" : \"Accounts\",\n        \"name\" : \"Companies\",\n        \"downstream_id\" : \"accounts\",\n        \"id\" : \"companies\",\n        \"status\" : \"upcoming\"\n      }, {\n        \"downstream_name\" : \"Accounts\",\n        \"name\" : \"Companies\",\n        \"downstream_id\" : \"accounts\",\n        \"id\" : \"companies\",\n        \"status\" : \"upcoming\"\n      } ]\n    }, {\n      \"supported_events\" : [ {\n        \"downstream_event_type\" : \"person_created\",\n        \"entity_type\" : \"employee\",\n        \"event_type\" : \"employee.created\",\n        \"resources\" : [ \"companies\", \"companies\", \"companies\", \"companies\", \"companies\", \"companies\", \"companies\" ],\n        \"event_source\" : \"native\"\n      } ],\n      \"oauth_scopes\" : [ {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      } ],\n      \"name\" : \"File Storage API\",\n      \"downstream_unsupported_resources\" : [ \"companies\", \"companies\", \"companies\", \"companies\", \"companies\" ],\n      \"id\" : \"crm\",\n      \"supported_resources\" : [ {\n        \"downstream_name\" : \"Accounts\",\n        \"name\" : \"Companies\",\n        \"downstream_id\" : \"accounts\",\n        \"id\" : \"companies\",\n        \"status\" : \"upcoming\"\n      }, {\n        \"downstream_name\" : \"Accounts\",\n        \"name\" : \"Companies\",\n        \"downstream_id\" : \"accounts\",\n        \"id\" : \"companies\",\n        \"status\" : \"upcoming\"\n      }, {\n        \"downstream_name\" : \"Accounts\",\n        \"name\" : \"Companies\",\n        \"downstream_id\" : \"accounts\",\n        \"id\" : \"companies\",\n        \"status\" : \"live\"\n      } ]\n    } ],\n    \"auth_only\" : true,\n    \"website_url\" : \"https://www.salesforce.com\",\n    \"oauth_grant_type\" : \"authorization_code\",\n    \"supported_events\" : [ {\n      \"downstream_event_type\" : \"person_created\",\n      \"entity_type\" : \"employee\",\n      \"event_type\" : \"employee.created\",\n      \"resources\" : [ \"companies\", \"companies\", \"companies\", \"companies\" ],\n      \"event_source\" : \"native\"\n    }, {\n      \"downstream_event_type\" : \"person_created\",\n      \"entity_type\" : \"employee\",\n      \"event_type\" : \"employee.created\",\n      \"resources\" : [ \"companies\", \"companies\", \"companies\", \"companies\", \"companies\" ],\n      \"event_source\" : \"native\"\n    } ],\n    \"webhook_support\" : {\n      \"mode\" : \"native\",\n      \"subscription_level\" : \"integration\",\n      \"virtual_webhooks\" : {\n        \"resources\" : { },\n        \"request_rate\" : {\n          \"unit\" : \"hour\",\n          \"size\" : 7378872955109411145,\n          \"rate\" : 8896016704960312858\n        }\n      },\n      \"managed_via\" : \"api\"\n    },\n    \"name\" : \"Salesforce\",\n    \"status\" : \"development\"\n  },\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "93160ba4-c91c-44fa-b85c-b435b2cbc2f1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.616383Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectorsOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Connector"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetConnectorResponse"
          }
        }
      }
    }
  }, {
    "id" : "ea6434b7-ad04-488e-98fc-dc97d4a908a1",
    "name" : "List Connectors",
    "request" : {
      "urlPath" : "/connector/connectors",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ea6434b7-ad04-488e-98fc-dc97d4a908a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.615292Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectorsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "12ccca2f-ff3e-42ad-ac2b-99f2a4777bce",
    "name" : "List Connectors",
    "request" : {
      "urlPath" : "/connector/connectors",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "12ccca2f-ff3e-42ad-ac2b-99f2a4777bce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.615204Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectorsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "feea8660-30b4-45d2-b059-19b442791fe9",
    "name" : "List Connectors",
    "request" : {
      "urlPath" : "/connector/connectors",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "feea8660-30b4-45d2-b059-19b442791fe9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.615118Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectorsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "eb92440a-5afd-405a-a9ce-61915b5c5936",
    "name" : "List Connectors",
    "request" : {
      "urlPath" : "/connector/connectors",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"oauth_credentials_source\" : \"integration\",\n    \"logo_url\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"has_sandbox_credentials\" : true,\n    \"free_trial_available\" : false,\n    \"description\" : \"A description\",\n    \"supported_resources\" : [ {\n      \"downstream_name\" : \"Accounts\",\n      \"name\" : \"Companies\",\n      \"downstream_id\" : \"accounts\",\n      \"id\" : \"companies\",\n      \"status\" : \"upcoming\"\n    } ],\n    \"docs\" : [ {\n      \"audience\" : \"consumer\",\n      \"format\" : \"markdown\",\n      \"name\" : \"connection\",\n      \"id\" : \"12345\",\n      \"url\" : \"https://unify.apideck.com/connector/connectors/workday/docs/consumer+connection\"\n    } ],\n    \"oauth_scopes\" : [ {\n      \"default_apis\" : [ \"crm\", \"crm\" ],\n      \"id\" : \"contacts:all\",\n      \"label\" : \"Read/write on the Contacts resource\"\n    }, {\n      \"default_apis\" : [ \"crm\", \"crm\", \"crm\", \"crm\", \"crm\", \"crm\", \"crm\" ],\n      \"id\" : \"contacts:all\",\n      \"label\" : \"Read/write on the Contacts resource\"\n    } ],\n    \"service_id\" : \"close\",\n    \"tls_support\" : {\n      \"description\" : \"Fugit adipisci sequi ipsum at quae. Minus dicta debitis optio sed culpa accusamus nam. Repellendus voluptas iure tenetur voluptas.\",\n      \"type\" : \"ybl147fzutltesoxyblgpbqsh8z5d5222m\"\n    },\n    \"id\" : \"crm+salesforce\",\n    \"signup_url\" : \"https://www.salesforce.com/signup\",\n    \"icon_url\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"settings\" : [ {\n      \"id\" : \"pipeline_id\",\n      \"label\" : \"Pipeline\",\n      \"type\" : \"select\"\n    }, {\n      \"id\" : \"pipeline_id\",\n      \"label\" : \"Pipeline\",\n      \"type\" : \"select\"\n    }, {\n      \"id\" : \"pipeline_id\",\n      \"label\" : \"Pipeline\",\n      \"type\" : \"select\"\n    }, {\n      \"id\" : \"pipeline_id\",\n      \"label\" : \"Pipeline\",\n      \"type\" : \"select\"\n    }, {\n      \"id\" : \"pipeline_id\",\n      \"label\" : \"Pipeline\",\n      \"type\" : \"select\"\n    }, {\n      \"id\" : \"pipeline_id\",\n      \"label\" : \"Pipeline\",\n      \"type\" : \"select\"\n    } ],\n    \"auth_type\" : \"oauth2\",\n    \"blind_mapped\" : true,\n    \"custom_scopes\" : true,\n    \"configurable_resources\" : [ \"leads\", \"companies\" ],\n    \"unified_apis\" : [ {\n      \"supported_events\" : [ { }, { }, { } ],\n      \"oauth_scopes\" : [ {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      } ],\n      \"name\" : \"File Storage API\",\n      \"downstream_unsupported_resources\" : [ \"companies\", \"companies\", \"companies\", \"companies\" ],\n      \"id\" : \"crm\",\n      \"supported_resources\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"supported_events\" : [ { }, { }, { }, { }, { }, { } ],\n      \"oauth_scopes\" : [ {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      } ],\n      \"name\" : \"File Storage API\",\n      \"downstream_unsupported_resources\" : [ \"companies\", \"companies\" ],\n      \"id\" : \"crm\",\n      \"supported_resources\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"supported_events\" : [ { } ],\n      \"oauth_scopes\" : [ {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      } ],\n      \"name\" : \"File Storage API\",\n      \"downstream_unsupported_resources\" : [ \"companies\", \"companies\", \"companies\", \"companies\" ],\n      \"id\" : \"crm\",\n      \"supported_resources\" : [ { }, { } ]\n    } ],\n    \"auth_only\" : true,\n    \"website_url\" : \"https://www.salesforce.com\",\n    \"oauth_grant_type\" : \"authorization_code\",\n    \"supported_events\" : [ {\n      \"downstream_event_type\" : \"person_created\",\n      \"entity_type\" : \"employee\",\n      \"event_type\" : \"employee.created\",\n      \"resources\" : [ \"companies\", \"companies\", \"companies\", \"companies\", \"companies\" ],\n      \"event_source\" : \"native\"\n    }, {\n      \"downstream_event_type\" : \"person_created\",\n      \"entity_type\" : \"employee\",\n      \"event_type\" : \"employee.created\",\n      \"resources\" : [ \"companies\", \"companies\", \"companies\", \"companies\", \"companies\" ],\n      \"event_source\" : \"native\"\n    } ],\n    \"webhook_support\" : {\n      \"mode\" : \"native\",\n      \"subscription_level\" : \"integration\",\n      \"virtual_webhooks\" : {\n        \"resources\" : { },\n        \"request_rate\" : {\n          \"unit\" : \"minute\",\n          \"size\" : 4072711440330870426,\n          \"rate\" : 8763307793620387334\n        }\n      },\n      \"managed_via\" : \"api\"\n    },\n    \"name\" : \"Salesforce\",\n    \"status\" : \"considering\"\n  }, {\n    \"oauth_credentials_source\" : \"integration\",\n    \"logo_url\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"has_sandbox_credentials\" : true,\n    \"free_trial_available\" : true,\n    \"description\" : \"A description\",\n    \"supported_resources\" : [ {\n      \"downstream_name\" : \"Accounts\",\n      \"name\" : \"Companies\",\n      \"downstream_id\" : \"accounts\",\n      \"id\" : \"companies\",\n      \"status\" : \"considering\"\n    }, {\n      \"downstream_name\" : \"Accounts\",\n      \"name\" : \"Companies\",\n      \"downstream_id\" : \"accounts\",\n      \"id\" : \"companies\",\n      \"status\" : \"live\"\n    }, {\n      \"downstream_name\" : \"Accounts\",\n      \"name\" : \"Companies\",\n      \"downstream_id\" : \"accounts\",\n      \"id\" : \"companies\",\n      \"status\" : \"considering\"\n    }, {\n      \"downstream_name\" : \"Accounts\",\n      \"name\" : \"Companies\",\n      \"downstream_id\" : \"accounts\",\n      \"id\" : \"companies\",\n      \"status\" : \"considering\"\n    } ],\n    \"docs\" : [ {\n      \"audience\" : \"application_owner\",\n      \"format\" : \"markdown\",\n      \"name\" : \"connection\",\n      \"id\" : \"12345\",\n      \"url\" : \"https://unify.apideck.com/connector/connectors/workday/docs/consumer+connection\"\n    }, {\n      \"audience\" : \"application_owner\",\n      \"format\" : \"markdown\",\n      \"name\" : \"connection\",\n      \"id\" : \"12345\",\n      \"url\" : \"https://unify.apideck.com/connector/connectors/workday/docs/consumer+connection\"\n    }, {\n      \"audience\" : \"consumer\",\n      \"format\" : \"markdown\",\n      \"name\" : \"connection\",\n      \"id\" : \"12345\",\n      \"url\" : \"https://unify.apideck.com/connector/connectors/workday/docs/consumer+connection\"\n    }, {\n      \"audience\" : \"consumer\",\n      \"format\" : \"markdown\",\n      \"name\" : \"connection\",\n      \"id\" : \"12345\",\n      \"url\" : \"https://unify.apideck.com/connector/connectors/workday/docs/consumer+connection\"\n    } ],\n    \"oauth_scopes\" : [ {\n      \"default_apis\" : [ \"crm\", \"crm\", \"crm\", \"crm\", \"crm\", \"crm\" ],\n      \"id\" : \"contacts:all\",\n      \"label\" : \"Read/write on the Contacts resource\"\n    }, {\n      \"default_apis\" : [ \"crm\", \"crm\", \"crm\", \"crm\", \"crm\" ],\n      \"id\" : \"contacts:all\",\n      \"label\" : \"Read/write on the Contacts resource\"\n    }, {\n      \"default_apis\" : [ \"crm\", \"crm\", \"crm\", \"crm\", \"crm\", \"crm\", \"crm\", \"crm\" ],\n      \"id\" : \"contacts:all\",\n      \"label\" : \"Read/write on the Contacts resource\"\n    }, {\n      \"default_apis\" : [ \"crm\", \"crm\", \"crm\", \"crm\" ],\n      \"id\" : \"contacts:all\",\n      \"label\" : \"Read/write on the Contacts resource\"\n    }, {\n      \"default_apis\" : [ \"crm\", \"crm\", \"crm\" ],\n      \"id\" : \"contacts:all\",\n      \"label\" : \"Read/write on the Contacts resource\"\n    }, {\n      \"default_apis\" : [ \"crm\", \"crm\", \"crm\" ],\n      \"id\" : \"contacts:all\",\n      \"label\" : \"Read/write on the Contacts resource\"\n    }, {\n      \"default_apis\" : [ \"crm\" ],\n      \"id\" : \"contacts:all\",\n      \"label\" : \"Read/write on the Contacts resource\"\n    }, {\n      \"default_apis\" : [ \"crm\", \"crm\", \"crm\", \"crm\" ],\n      \"id\" : \"contacts:all\",\n      \"label\" : \"Read/write on the Contacts resource\"\n    } ],\n    \"service_id\" : \"close\",\n    \"tls_support\" : {\n      \"description\" : \"Ad et quae ea consequuntur. Vel quis ipsum qui qui sint. Temporibus tenetur possimus nemo vero ab autem. Nesciunt qui quia.\",\n      \"type\" : \"4iy70xyzxniw2nlq3sai7r9p0jqbokedf6qoixz8bmvp499qsj471e0t572mgchncouvv8w8mg7ha38ffthxevlwp0m7vywce778z4necx0kmv4doyn78yylzmxlgwspuw5vo8jrz9m1u03114ls0keco0gzsd3perrkwk4l2jm\"\n    },\n    \"id\" : \"crm+salesforce\",\n    \"signup_url\" : \"https://www.salesforce.com/signup\",\n    \"icon_url\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"settings\" : [ {\n      \"id\" : \"pipeline_id\",\n      \"label\" : \"Pipeline\",\n      \"type\" : \"select\"\n    }, {\n      \"id\" : \"pipeline_id\",\n      \"label\" : \"Pipeline\",\n      \"type\" : \"select\"\n    }, {\n      \"id\" : \"pipeline_id\",\n      \"label\" : \"Pipeline\",\n      \"type\" : \"select\"\n    }, {\n      \"id\" : \"pipeline_id\",\n      \"label\" : \"Pipeline\",\n      \"type\" : \"select\"\n    } ],\n    \"auth_type\" : \"oauth2\",\n    \"blind_mapped\" : true,\n    \"custom_scopes\" : true,\n    \"configurable_resources\" : [ \"leads\", \"companies\" ],\n    \"unified_apis\" : [ {\n      \"supported_events\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"oauth_scopes\" : [ {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      } ],\n      \"name\" : \"File Storage API\",\n      \"downstream_unsupported_resources\" : [ \"companies\", \"companies\", \"companies\", \"companies\", \"companies\" ],\n      \"id\" : \"crm\",\n      \"supported_resources\" : [ { }, { }, { } ]\n    }, {\n      \"supported_events\" : [ { }, { }, { }, { }, { }, { } ],\n      \"oauth_scopes\" : [ {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      } ],\n      \"name\" : \"File Storage API\",\n      \"downstream_unsupported_resources\" : [ \"companies\", \"companies\", \"companies\" ],\n      \"id\" : \"crm\",\n      \"supported_resources\" : [ { }, { }, { }, { } ]\n    }, {\n      \"supported_events\" : [ { }, { }, { }, { }, { }, { } ],\n      \"oauth_scopes\" : [ {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      } ],\n      \"name\" : \"File Storage API\",\n      \"downstream_unsupported_resources\" : [ \"companies\", \"companies\", \"companies\", \"companies\", \"companies\", \"companies\", \"companies\", \"companies\" ],\n      \"id\" : \"crm\",\n      \"supported_resources\" : [ { }, { } ]\n    } ],\n    \"auth_only\" : true,\n    \"website_url\" : \"https://www.salesforce.com\",\n    \"oauth_grant_type\" : \"authorization_code\",\n    \"supported_events\" : [ {\n      \"downstream_event_type\" : \"person_created\",\n      \"entity_type\" : \"employee\",\n      \"event_type\" : \"employee.created\",\n      \"resources\" : [ \"companies\", \"companies\", \"companies\" ],\n      \"event_source\" : \"native\"\n    }, {\n      \"downstream_event_type\" : \"person_created\",\n      \"entity_type\" : \"employee\",\n      \"event_type\" : \"employee.created\",\n      \"resources\" : [ \"companies\", \"companies\", \"companies\", \"companies\" ],\n      \"event_source\" : \"native\"\n    }, {\n      \"downstream_event_type\" : \"person_created\",\n      \"entity_type\" : \"employee\",\n      \"event_type\" : \"employee.created\",\n      \"resources\" : [ \"companies\", \"companies\", \"companies\" ],\n      \"event_source\" : \"native\"\n    }, {\n      \"downstream_event_type\" : \"person_created\",\n      \"entity_type\" : \"employee\",\n      \"event_type\" : \"employee.created\",\n      \"resources\" : [ \"companies\", \"companies\", \"companies\", \"companies\", \"companies\", \"companies\" ],\n      \"event_source\" : \"native\"\n    }, {\n      \"downstream_event_type\" : \"person_created\",\n      \"entity_type\" : \"employee\",\n      \"event_type\" : \"employee.created\",\n      \"resources\" : [ \"companies\", \"companies\" ],\n      \"event_source\" : \"native\"\n    }, {\n      \"downstream_event_type\" : \"person_created\",\n      \"entity_type\" : \"employee\",\n      \"event_type\" : \"employee.created\",\n      \"resources\" : [ \"companies\", \"companies\", \"companies\", \"companies\", \"companies\", \"companies\" ],\n      \"event_source\" : \"native\"\n    } ],\n    \"webhook_support\" : {\n      \"mode\" : \"native\",\n      \"subscription_level\" : \"integration\",\n      \"virtual_webhooks\" : {\n        \"resources\" : { },\n        \"request_rate\" : {\n          \"unit\" : \"minute\",\n          \"size\" : 4002885396975263764,\n          \"rate\" : 7350031737061484119\n        }\n      },\n      \"managed_via\" : \"api\"\n    },\n    \"name\" : \"Salesforce\",\n    \"status\" : \"beta\"\n  }, {\n    \"oauth_credentials_source\" : \"integration\",\n    \"logo_url\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"has_sandbox_credentials\" : true,\n    \"free_trial_available\" : true,\n    \"description\" : \"A description\",\n    \"supported_resources\" : [ {\n      \"downstream_name\" : \"Accounts\",\n      \"name\" : \"Companies\",\n      \"downstream_id\" : \"accounts\",\n      \"id\" : \"companies\",\n      \"status\" : \"considering\"\n    } ],\n    \"docs\" : [ {\n      \"audience\" : \"application_owner\",\n      \"format\" : \"markdown\",\n      \"name\" : \"connection\",\n      \"id\" : \"12345\",\n      \"url\" : \"https://unify.apideck.com/connector/connectors/workday/docs/consumer+connection\"\n    }, {\n      \"audience\" : \"consumer\",\n      \"format\" : \"markdown\",\n      \"name\" : \"connection\",\n      \"id\" : \"12345\",\n      \"url\" : \"https://unify.apideck.com/connector/connectors/workday/docs/consumer+connection\"\n    }, {\n      \"audience\" : \"consumer\",\n      \"format\" : \"markdown\",\n      \"name\" : \"connection\",\n      \"id\" : \"12345\",\n      \"url\" : \"https://unify.apideck.com/connector/connectors/workday/docs/consumer+connection\"\n    }, {\n      \"audience\" : \"application_owner\",\n      \"format\" : \"markdown\",\n      \"name\" : \"connection\",\n      \"id\" : \"12345\",\n      \"url\" : \"https://unify.apideck.com/connector/connectors/workday/docs/consumer+connection\"\n    }, {\n      \"audience\" : \"consumer\",\n      \"format\" : \"markdown\",\n      \"name\" : \"connection\",\n      \"id\" : \"12345\",\n      \"url\" : \"https://unify.apideck.com/connector/connectors/workday/docs/consumer+connection\"\n    }, {\n      \"audience\" : \"consumer\",\n      \"format\" : \"markdown\",\n      \"name\" : \"connection\",\n      \"id\" : \"12345\",\n      \"url\" : \"https://unify.apideck.com/connector/connectors/workday/docs/consumer+connection\"\n    } ],\n    \"oauth_scopes\" : [ {\n      \"default_apis\" : [ \"crm\" ],\n      \"id\" : \"contacts:all\",\n      \"label\" : \"Read/write on the Contacts resource\"\n    }, {\n      \"default_apis\" : [ \"crm\" ],\n      \"id\" : \"contacts:all\",\n      \"label\" : \"Read/write on the Contacts resource\"\n    }, {\n      \"default_apis\" : [ \"crm\", \"crm\", \"crm\", \"crm\" ],\n      \"id\" : \"contacts:all\",\n      \"label\" : \"Read/write on the Contacts resource\"\n    }, {\n      \"default_apis\" : [ \"crm\", \"crm\", \"crm\", \"crm\", \"crm\", \"crm\" ],\n      \"id\" : \"contacts:all\",\n      \"label\" : \"Read/write on the Contacts resource\"\n    } ],\n    \"service_id\" : \"close\",\n    \"tls_support\" : {\n      \"description\" : \"Rem ad maxime optio voluptas id ipsam. Expedita esse dignissimos sit ut minus quisquam quisquam. Deleniti accusamus laboriosam assumenda sit atque itaque. Ut qui qui amet nam quas omnis. Id atque ut b\",\n      \"type\" : \"qk8v1ljjyyprwci926si4j1i6o821bn0ip72tnrxmqoswgysijhg4lbwo2dahaxxpvqttj0zzi8b948g92s9uo4vc2qy4og8zwrc26zgo4nsj0hg1kjc6c9unijszf8xqitf6wkk6vsirflvz7h58caf1h8y4384g8sn48m2p32doiv6nhitdxmc642kleltb6cgpbd\"\n    },\n    \"id\" : \"crm+salesforce\",\n    \"signup_url\" : \"https://www.salesforce.com/signup\",\n    \"icon_url\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"settings\" : [ {\n      \"id\" : \"pipeline_id\",\n      \"label\" : \"Pipeline\",\n      \"type\" : \"select\"\n    }, {\n      \"id\" : \"pipeline_id\",\n      \"label\" : \"Pipeline\",\n      \"type\" : \"select\"\n    }, {\n      \"id\" : \"pipeline_id\",\n      \"label\" : \"Pipeline\",\n      \"type\" : \"select\"\n    }, {\n      \"id\" : \"pipeline_id\",\n      \"label\" : \"Pipeline\",\n      \"type\" : \"select\"\n    }, {\n      \"id\" : \"pipeline_id\",\n      \"label\" : \"Pipeline\",\n      \"type\" : \"select\"\n    }, {\n      \"id\" : \"pipeline_id\",\n      \"label\" : \"Pipeline\",\n      \"type\" : \"select\"\n    }, {\n      \"id\" : \"pipeline_id\",\n      \"label\" : \"Pipeline\",\n      \"type\" : \"select\"\n    } ],\n    \"auth_type\" : \"oauth2\",\n    \"blind_mapped\" : true,\n    \"custom_scopes\" : true,\n    \"configurable_resources\" : [ \"leads\", \"companies\" ],\n    \"unified_apis\" : [ {\n      \"supported_events\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"oauth_scopes\" : [ {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      } ],\n      \"name\" : \"File Storage API\",\n      \"downstream_unsupported_resources\" : [ \"companies\", \"companies\", \"companies\", \"companies\", \"companies\", \"companies\" ],\n      \"id\" : \"crm\",\n      \"supported_resources\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"supported_events\" : [ { }, { }, { }, { }, { }, { } ],\n      \"oauth_scopes\" : [ {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      } ],\n      \"name\" : \"File Storage API\",\n      \"downstream_unsupported_resources\" : [ \"companies\", \"companies\", \"companies\", \"companies\" ],\n      \"id\" : \"crm\",\n      \"supported_resources\" : [ { }, { }, { } ]\n    }, {\n      \"supported_events\" : [ { }, { }, { }, { }, { }, { } ],\n      \"oauth_scopes\" : [ {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      } ],\n      \"name\" : \"File Storage API\",\n      \"downstream_unsupported_resources\" : [ \"companies\", \"companies\", \"companies\", \"companies\", \"companies\", \"companies\" ],\n      \"id\" : \"crm\",\n      \"supported_resources\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"supported_events\" : [ { }, { }, { }, { }, { } ],\n      \"oauth_scopes\" : [ {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      } ],\n      \"name\" : \"File Storage API\",\n      \"downstream_unsupported_resources\" : [ \"companies\", \"companies\", \"companies\", \"companies\" ],\n      \"id\" : \"crm\",\n      \"supported_resources\" : [ { } ]\n    }, {\n      \"supported_events\" : [ { } ],\n      \"oauth_scopes\" : [ {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      } ],\n      \"name\" : \"File Storage API\",\n      \"downstream_unsupported_resources\" : [ \"companies\", \"companies\", \"companies\", \"companies\" ],\n      \"id\" : \"crm\",\n      \"supported_resources\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"supported_events\" : [ { } ],\n      \"oauth_scopes\" : [ {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      }, {\n        \"id\" : \"contacts:all\",\n        \"label\" : \"Read/write on the Contacts resource\"\n      } ],\n      \"name\" : \"File Storage API\",\n      \"downstream_unsupported_resources\" : [ \"companies\", \"companies\" ],\n      \"id\" : \"crm\",\n      \"supported_resources\" : [ { } ]\n    } ],\n    \"auth_only\" : true,\n    \"website_url\" : \"https://www.salesforce.com\",\n    \"oauth_grant_type\" : \"authorization_code\",\n    \"supported_events\" : [ {\n      \"downstream_event_type\" : \"person_created\",\n      \"entity_type\" : \"employee\",\n      \"event_type\" : \"employee.created\",\n      \"resources\" : [ \"companies\", \"companies\", \"companies\", \"companies\", \"companies\", \"companies\", \"companies\" ],\n      \"event_source\" : \"native\"\n    }, {\n      \"downstream_event_type\" : \"person_created\",\n      \"entity_type\" : \"employee\",\n      \"event_type\" : \"employee.created\",\n      \"resources\" : [ \"companies\", \"companies\", \"companies\", \"companies\" ],\n      \"event_source\" : \"native\"\n    }, {\n      \"downstream_event_type\" : \"person_created\",\n      \"entity_type\" : \"employee\",\n      \"event_type\" : \"employee.created\",\n      \"resources\" : [ \"companies\", \"companies\", \"companies\", \"companies\", \"companies\", \"companies\" ],\n      \"event_source\" : \"native\"\n    }, {\n      \"downstream_event_type\" : \"person_created\",\n      \"entity_type\" : \"employee\",\n      \"event_type\" : \"employee.created\",\n      \"resources\" : [ \"companies\", \"companies\", \"companies\", \"companies\", \"companies\", \"companies\", \"companies\", \"companies\" ],\n      \"event_source\" : \"native\"\n    } ],\n    \"webhook_support\" : {\n      \"mode\" : \"native\",\n      \"subscription_level\" : \"integration\",\n      \"virtual_webhooks\" : {\n        \"resources\" : { },\n        \"request_rate\" : {\n          \"unit\" : \"day\",\n          \"size\" : 3042605556069577453,\n          \"rate\" : 2388677378239707807\n        }\n      },\n      \"managed_via\" : \"api\"\n    },\n    \"name\" : \"Salesforce\",\n    \"status\" : \"beta\"\n  } ],\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eb92440a-5afd-405a-a9ce-61915b5c5936",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.614995Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectorsAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/Connector"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetConnectorsResponse",
            "x-graphql-type-name" : "ConnectorList"
          }
        }
      }
    }
  }, {
    "id" : "cb0291a4-3409-4f6c-b3cb-6cdf158816cc",
    "name" : "Get API Resource Coverage",
    "request" : {
      "urlPath" : "/connector/apis/c9ab/resources/07rz/coverage",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cb0291a4-3409-4f6c-b3cb-6cdf158816cc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.612989Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiResourceCoverageOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "d40abcf0-69ba-4be2-8d38-00ddbdb84b05",
    "name" : "Get API Resource Coverage",
    "request" : {
      "urlPath" : "/connector/apis/pf8b/resources/flke/coverage",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d40abcf0-69ba-4be2-8d38-00ddbdb84b05",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.612771Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiResourceCoverageOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "d49d60bf-58c5-4782-b2ab-8a45795ad929",
    "name" : "Get API Resource Coverage",
    "request" : {
      "urlPath" : "/connector/apis/86hq/resources/nx3r/coverage",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d49d60bf-58c5-4782-b2ab-8a45795ad929",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.612581Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiResourceCoverageOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "dec2836e-699c-458f-af52-88a3cd445106",
    "name" : "Get API Resource Coverage",
    "request" : {
      "urlPath" : "/connector/apis/h19a/resources/62sb/coverage",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"coverage\" : [ {\n      \"downstream_name\" : \"Accounts\",\n      \"pagination\" : {\n        \"mode\" : \"native\",\n        \"paging_support\" : true,\n        \"limit_support\" : false\n      },\n      \"supported_fields\" : [ {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { }, { }, { }, { } ]\n      } ],\n      \"supported_operations\" : [ \"all\", \"one\", \"add\", \"update\", \"delete\" ],\n      \"supported_sort_by\" : [ \"updated_at\", \"created_at\", \"name\" ],\n      \"downstream_id\" : \"accounts\",\n      \"supported_filters\" : [ \"name\", \"email\" ],\n      \"supported_list_fields\" : [ {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { }, { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { }, { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { } ]\n      } ],\n      \"pagination_supported\" : false\n    }, {\n      \"downstream_name\" : \"Accounts\",\n      \"pagination\" : {\n        \"mode\" : \"native\",\n        \"paging_support\" : false,\n        \"limit_support\" : false\n      },\n      \"supported_fields\" : [ {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { }, { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { }, { }, { } ]\n      } ],\n      \"supported_operations\" : [ \"all\", \"one\", \"add\", \"update\", \"delete\" ],\n      \"supported_sort_by\" : [ \"updated_at\", \"created_at\", \"name\" ],\n      \"downstream_id\" : \"accounts\",\n      \"supported_filters\" : [ \"name\", \"email\" ],\n      \"supported_list_fields\" : [ {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { } ]\n      } ],\n      \"pagination_supported\" : false\n    }, {\n      \"downstream_name\" : \"Accounts\",\n      \"pagination\" : {\n        \"mode\" : \"native\",\n        \"paging_support\" : true,\n        \"limit_support\" : true\n      },\n      \"supported_fields\" : [ {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { }, { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { } ]\n      } ],\n      \"supported_operations\" : [ \"all\", \"one\", \"add\", \"update\", \"delete\" ],\n      \"supported_sort_by\" : [ \"updated_at\", \"created_at\", \"name\" ],\n      \"downstream_id\" : \"accounts\",\n      \"supported_filters\" : [ \"name\", \"email\" ],\n      \"supported_list_fields\" : [ {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { }, { }, { }, { } ]\n      } ],\n      \"pagination_supported\" : true\n    }, {\n      \"downstream_name\" : \"Accounts\",\n      \"pagination\" : {\n        \"mode\" : \"native\",\n        \"paging_support\" : false,\n        \"limit_support\" : false\n      },\n      \"supported_fields\" : [ {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { } ]\n      } ],\n      \"supported_operations\" : [ \"all\", \"one\", \"add\", \"update\", \"delete\" ],\n      \"supported_sort_by\" : [ \"updated_at\", \"created_at\", \"name\" ],\n      \"downstream_id\" : \"accounts\",\n      \"supported_filters\" : [ \"name\", \"email\" ],\n      \"supported_list_fields\" : [ {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { } ]\n      } ],\n      \"pagination_supported\" : true\n    }, {\n      \"downstream_name\" : \"Accounts\",\n      \"pagination\" : {\n        \"mode\" : \"native\",\n        \"paging_support\" : true,\n        \"limit_support\" : true\n      },\n      \"supported_fields\" : [ {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { }, { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { } ]\n      } ],\n      \"supported_operations\" : [ \"all\", \"one\", \"add\", \"update\", \"delete\" ],\n      \"supported_sort_by\" : [ \"updated_at\", \"created_at\", \"name\" ],\n      \"downstream_id\" : \"accounts\",\n      \"supported_filters\" : [ \"name\", \"email\" ],\n      \"supported_list_fields\" : [ {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { }, { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { }, { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { }, { }, { } ]\n      }, {\n        \"unified_property\" : \"owner_id\",\n        \"child_properties\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n      } ],\n      \"pagination_supported\" : true\n    } ],\n    \"name\" : \"Companies\",\n    \"id\" : \"companies\",\n    \"status\" : \"considering\"\n  },\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dec2836e-699c-458f-af52-88a3cd445106",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.61239Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiResourceCoverageOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/ApiResourceCoverage"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetApiResourceCoverageResponse"
          }
        }
      }
    }
  }, {
    "id" : "ce229fdf-aefb-49c4-80da-7e4b1d71ca7e",
    "name" : "Get API Resource",
    "request" : {
      "urlPath" : "/connector/apis/y56c/resources/i487",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ce229fdf-aefb-49c4-80da-7e4b1d71ca7e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.611488Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiResourcesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "a1e0eb69-01e2-4f00-84e2-60dfcc1b7292",
    "name" : "Get API Resource",
    "request" : {
      "urlPath" : "/connector/apis/mugy/resources/1ci9",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a1e0eb69-01e2-4f00-84e2-60dfcc1b7292",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.611282Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiResourcesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "fed3bf87-91d4-4519-b4e8-536d0af9e426",
    "name" : "Get API Resource",
    "request" : {
      "urlPath" : "/connector/apis/tldt/resources/z3ly",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fed3bf87-91d4-4519-b4e8-536d0af9e426",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.61109Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiResourcesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "dade744b-b260-433d-a72b-21b3aa1d3444",
    "name" : "Get API Resource",
    "request" : {
      "urlPath" : "/connector/apis/79h3/resources/9l2a",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"schema\" : {\n      \"additionalProperties\" : false,\n      \"properties\" : {\n        \"created_at\" : {\n          \"example\" : \"2020-09-30T07:43:32.000Z\",\n          \"readOnly\" : true,\n          \"type\" : \"string\"\n        },\n        \"id\" : {\n          \"example\" : \"12345\",\n          \"readOnly\" : true,\n          \"type\" : \"string\"\n        },\n        \"name\" : {\n          \"example\" : \"Elon Musk\",\n          \"minLength\" : 1,\n          \"type\" : \"string\"\n        },\n        \"updated_at\" : {\n          \"example\" : \"2020-09-30T07:43:32.000Z\",\n          \"readOnly\" : true,\n          \"type\" : \"string\"\n        }\n      },\n      \"required\" : [ \"name\", \"company_name\" ],\n      \"x-pii\" : [ \"name\", \"email\", \"first_name\", \"last_name\" ]\n    },\n    \"name\" : \"Companies\",\n    \"id\" : \"companies\",\n    \"linked_resources\" : [ {\n      \"unified_property\" : \"owner_id\",\n      \"id\" : \"companies\"\n    }, {\n      \"unified_property\" : \"owner_id\",\n      \"id\" : \"companies\"\n    }, {\n      \"unified_property\" : \"owner_id\",\n      \"id\" : \"companies\"\n    } ],\n    \"status\" : \"upcoming\"\n  },\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dade744b-b260-433d-a72b-21b3aa1d3444",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.610901Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiResourcesOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/ApiResource"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetApiResourceResponse"
          }
        }
      }
    }
  }, {
    "id" : "c614a792-029c-49af-8c7d-06cbe7af1933",
    "name" : "Get API",
    "request" : {
      "urlPath" : "/connector/apis/n2xf",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c614a792-029c-49af-8c7d-06cbe7af1933",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.610623Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apisOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "b878badf-dfd4-4786-a700-c9af7bb699d7",
    "name" : "Get API",
    "request" : {
      "urlPath" : "/connector/apis/23fm",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b878badf-dfd4-4786-a700-c9af7bb699d7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.610422Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apisOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "18e15796-a1d6-40ac-9036-652d730b8a7c",
    "name" : "Get API",
    "request" : {
      "urlPath" : "/connector/apis/62p2",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "18e15796-a1d6-40ac-9036-652d730b8a7c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.610292Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apisOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "c6f4e572-cb8b-4faf-bf84-7023b98da1d9",
    "name" : "Get API",
    "request" : {
      "urlPath" : "/connector/apis/r7y2",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"postman_collection_id\" : \"1311564-00e7266b-a3d6-4f40-b172-baaa66a3ed6f\",\n    \"spec_url\" : \"https://specs.apideck.com/file-storage.yml\",\n    \"name\" : \"File Storage API\",\n    \"description\" : \"Manage API keys, access tokens, OAuth flows and integrations.\",\n    \"resources\" : [ {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"considering\"\n    }, {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"live\"\n    }, {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"development\"\n    }, {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"upcoming\"\n    }, {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"live\"\n    }, {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"beta\"\n    } ],\n    \"api_reference_url\" : \"https://developers.apideck.com/apis/file-storage/reference\",\n    \"categories\" : [ \"files\", \"file-storage\", \"cloud-storage\", \"object-storage\" ],\n    \"id\" : \"file-storage\",\n    \"type\" : \"unified\",\n    \"events\" : [ \"crm.contact.updated\", \"accounting.invoice.created\" ],\n    \"status\" : \"considering\"\n  },\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c6f4e572-cb8b-4faf-bf84-7023b98da1d9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.610142Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apisOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Api"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetApiResponse"
          }
        }
      }
    }
  }, {
    "id" : "052aac02-a678-4627-9bf7-b6e1acdeb040",
    "name" : "List APIs",
    "request" : {
      "urlPath" : "/connector/apis",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "052aac02-a678-4627-9bf7-b6e1acdeb040",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.609832Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apisAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "87b8d1f1-255f-46b4-b485-663fba7f7e6c",
    "name" : "List APIs",
    "request" : {
      "urlPath" : "/connector/apis",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "87b8d1f1-255f-46b4-b485-663fba7f7e6c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.609722Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apisAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "38469a99-bdcf-4edc-b21d-c42f7cf6a615",
    "name" : "List APIs",
    "request" : {
      "urlPath" : "/connector/apis",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "38469a99-bdcf-4edc-b21d-c42f7cf6a615",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.609617Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apisAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "8b2b956f-c73b-47db-8721-f2c803414f4d",
    "name" : "List APIs",
    "request" : {
      "urlPath" : "/connector/apis",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"postman_collection_id\" : \"1311564-00e7266b-a3d6-4f40-b172-baaa66a3ed6f\",\n    \"spec_url\" : \"https://specs.apideck.com/file-storage.yml\",\n    \"name\" : \"File Storage API\",\n    \"description\" : \"Manage API keys, access tokens, OAuth flows and integrations.\",\n    \"resources\" : [ {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"upcoming\"\n    }, {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"live\"\n    }, {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"development\"\n    }, {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"beta\"\n    } ],\n    \"api_reference_url\" : \"https://developers.apideck.com/apis/file-storage/reference\",\n    \"categories\" : [ \"files\", \"file-storage\", \"cloud-storage\", \"object-storage\" ],\n    \"id\" : \"file-storage\",\n    \"type\" : \"platform\",\n    \"events\" : [ \"crm.contact.updated\", \"accounting.invoice.created\" ],\n    \"status\" : \"live\"\n  }, {\n    \"postman_collection_id\" : \"1311564-00e7266b-a3d6-4f40-b172-baaa66a3ed6f\",\n    \"spec_url\" : \"https://specs.apideck.com/file-storage.yml\",\n    \"name\" : \"File Storage API\",\n    \"description\" : \"Manage API keys, access tokens, OAuth flows and integrations.\",\n    \"resources\" : [ {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"live\"\n    }, {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"considering\"\n    }, {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"development\"\n    }, {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"upcoming\"\n    }, {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"upcoming\"\n    } ],\n    \"api_reference_url\" : \"https://developers.apideck.com/apis/file-storage/reference\",\n    \"categories\" : [ \"files\", \"file-storage\", \"cloud-storage\", \"object-storage\" ],\n    \"id\" : \"file-storage\",\n    \"type\" : \"platform\",\n    \"events\" : [ \"crm.contact.updated\", \"accounting.invoice.created\" ],\n    \"status\" : \"development\"\n  }, {\n    \"postman_collection_id\" : \"1311564-00e7266b-a3d6-4f40-b172-baaa66a3ed6f\",\n    \"spec_url\" : \"https://specs.apideck.com/file-storage.yml\",\n    \"name\" : \"File Storage API\",\n    \"description\" : \"Manage API keys, access tokens, OAuth flows and integrations.\",\n    \"resources\" : [ {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"considering\"\n    }, {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"upcoming\"\n    }, {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"beta\"\n    } ],\n    \"api_reference_url\" : \"https://developers.apideck.com/apis/file-storage/reference\",\n    \"categories\" : [ \"files\", \"file-storage\", \"cloud-storage\", \"object-storage\" ],\n    \"id\" : \"file-storage\",\n    \"type\" : \"unified\",\n    \"events\" : [ \"crm.contact.updated\", \"accounting.invoice.created\" ],\n    \"status\" : \"considering\"\n  }, {\n    \"postman_collection_id\" : \"1311564-00e7266b-a3d6-4f40-b172-baaa66a3ed6f\",\n    \"spec_url\" : \"https://specs.apideck.com/file-storage.yml\",\n    \"name\" : \"File Storage API\",\n    \"description\" : \"Manage API keys, access tokens, OAuth flows and integrations.\",\n    \"resources\" : [ {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"upcoming\"\n    }, {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"considering\"\n    }, {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"beta\"\n    }, {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"development\"\n    }, {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"development\"\n    }, {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"beta\"\n    }, {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"beta\"\n    }, {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"live\"\n    } ],\n    \"api_reference_url\" : \"https://developers.apideck.com/apis/file-storage/reference\",\n    \"categories\" : [ \"files\", \"file-storage\", \"cloud-storage\", \"object-storage\" ],\n    \"id\" : \"file-storage\",\n    \"type\" : \"platform\",\n    \"events\" : [ \"crm.contact.updated\", \"accounting.invoice.created\" ],\n    \"status\" : \"considering\"\n  }, {\n    \"postman_collection_id\" : \"1311564-00e7266b-a3d6-4f40-b172-baaa66a3ed6f\",\n    \"spec_url\" : \"https://specs.apideck.com/file-storage.yml\",\n    \"name\" : \"File Storage API\",\n    \"description\" : \"Manage API keys, access tokens, OAuth flows and integrations.\",\n    \"resources\" : [ {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"upcoming\"\n    }, {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"considering\"\n    }, {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"upcoming\"\n    }, {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"live\"\n    }, {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"development\"\n    }, {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"development\"\n    }, {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"live\"\n    } ],\n    \"api_reference_url\" : \"https://developers.apideck.com/apis/file-storage/reference\",\n    \"categories\" : [ \"files\", \"file-storage\", \"cloud-storage\", \"object-storage\" ],\n    \"id\" : \"file-storage\",\n    \"type\" : \"unified\",\n    \"events\" : [ \"crm.contact.updated\", \"accounting.invoice.created\" ],\n    \"status\" : \"live\"\n  }, {\n    \"postman_collection_id\" : \"1311564-00e7266b-a3d6-4f40-b172-baaa66a3ed6f\",\n    \"spec_url\" : \"https://specs.apideck.com/file-storage.yml\",\n    \"name\" : \"File Storage API\",\n    \"description\" : \"Manage API keys, access tokens, OAuth flows and integrations.\",\n    \"resources\" : [ {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"live\"\n    }, {\n      \"excluded_from_coverage\" : false,\n      \"name\" : \"Companies\",\n      \"id\" : \"companies\",\n      \"status\" : \"development\"\n    } ],\n    \"api_reference_url\" : \"https://developers.apideck.com/apis/file-storage/reference\",\n    \"categories\" : [ \"files\", \"file-storage\", \"cloud-storage\", \"object-storage\" ],\n    \"id\" : \"file-storage\",\n    \"type\" : \"unified\",\n    \"events\" : [ \"crm.contact.updated\", \"accounting.invoice.created\" ],\n    \"status\" : \"live\"\n  } ],\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8b2b956f-c73b-47db-8721-f2c803414f4d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.609472Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apisAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/Api"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetApisResponse",
            "x-graphql-type-name" : "ApiList"
          }
        }
      }
    }
  } ]
}