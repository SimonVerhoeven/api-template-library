{
  "mappings" : [ {
    "id" : "7e1f1627-08b7-48c2-91b1-2fb102fc70e7",
    "name" : "Download zip of \"what the server sees\" (application/json)",
    "request" : {
      "urlPath" : "/uploads/3470b27b-607f-4892-9443-b9d12675d51d/download",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"code\" : 500,\n  \"detail\" : \"Internal server error\",\n  \"title\" : \"Internal server error\",\n  \"status\" : 500\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7e1f1627-08b7-48c2-91b1-2fb102fc70e7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:25.520935Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getBenefitsDocumentUploadDownload",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "Unambiguous status code. Only present if status = \"error\"\n\n* `DOC101` - Invalid multipart payload provided - not a multipart, or missing one or more required parts.\n* `DOC102` - Invalid metadata - not parseable as JSON, incorrect fields, etc.\n* `DOC103` - Invalid content - not parseable as PDF. Detail field will indicate which document or attachment part was affected.\n* `DOC104` - Upload rejected by upstream system. Processing failed and upload must be resubmitted. Detail field will indicate nature of rejection.\n* `DOC105` - Invalid or unknown id\n* `DOC106` - File size limit exceeded. Each document may be a maximum of 100MB.\n* `DOC107` - Empty payload.\n* `DOC108` - Maximum dimensions exceeded. Height and width must be less than 21 in x 21 in.\n* `DOC201` - Upload server error.\n* `DOC202` - Error during processing by upstream system. Processing failed and upload must be resubmitted. Detail field will provide additional details where available.\n",
                "example" : 500,
                "type" : "string"
              },
              "detail" : {
                "description" : "Human readable error detail. Only present if status = \"error\"",
                "example" : "Internal server error",
                "type" : "string"
              },
              "status" : {
                "description" : "Unambiguous status code. Only present if status = \"error\"\n\n* `DOC101` - Invalid multipart payload provided - not a multipart, or missing one or more required parts.\n* `DOC102` - Invalid metadata - not parseable as JSON, incorrect fields, etc.\n* `DOC103` - Invalid content - not parseable as PDF. Detail field will indicate which document or attachment part was affected.\n* `DOC104` - Upload rejected by upstream system. Processing failed and upload must be resubmitted. Detail field will indicate nature of rejection.\n* `DOC105` - Invalid or unknown id\n* `DOC106` - File size limit exceeded. Each document may be a maximum of 100MB.\n* `DOC107` - Empty payload.\n* `DOC108` - Maximum dimensions exceeded. Height and width must be less than 21 in x 21 in.\n* `DOC201` - Upload server error.\n* `DOC202` - Error during processing by upstream system. Processing failed and upload must be resubmitted. Detail field will provide additional details where available.\n",
                "example" : 500,
                "type" : "string"
              },
              "title" : {
                "description" : "Human readable title description.",
                "example" : "Internal server error",
                "type" : "string"
              }
            },
            "required" : [ "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "4116e906-55c0-467f-acbe-2dafe24721a1",
    "name" : "Download zip of \"what the server sees\" (application/json)",
    "request" : {
      "urlPath" : "/uploads/18f8f47a-1ebd-4117-9318-a67db3aa283a/download",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 429,
      "body" : "{\n  \"Message\" : \"API rate limit exceeded\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4116e906-55c0-467f-acbe-2dafe24721a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:25.520702Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getBenefitsDocumentUploadDownload",
          "schema" : {
            "properties" : {
              "Message" : {
                "description" : "message",
                "example" : "API rate limit exceeded",
                "type" : "string"
              }
            },
            "required" : [ "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "8b0a5bba-fbce-4ce3-8d9a-4ec7694da4e7",
    "name" : "Download zip of \"what the server sees\" (application/json)",
    "request" : {
      "urlPath" : "/uploads/d662f1f5-e0bf-4f34-8c6f-686f8398ecee/download",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : 404,\n  \"detail\" : \"The record identified by {{id}} could not be found\",\n  \"title\" : \"Record not found\",\n  \"status\" : 404\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8b0a5bba-fbce-4ce3-8d9a-4ec7694da4e7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:25.520565Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getBenefitsDocumentUploadDownload",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "Unambiguous status code. Only present if status = \"error\"\n\n* `DOC101` - Invalid multipart payload provided - not a multipart, or missing one or more required parts.\n* `DOC102` - Invalid metadata - not parseable as JSON, incorrect fields, etc.\n* `DOC103` - Invalid content - not parseable as PDF. Detail field will indicate which document or attachment part was affected.\n* `DOC104` - Upload rejected by upstream system. Processing failed and upload must be resubmitted. Detail field will indicate nature of rejection.\n* `DOC105` - Invalid or unknown id\n* `DOC106` - File size limit exceeded. Each document may be a maximum of 100MB.\n* `DOC107` - Empty payload.\n* `DOC108` - Maximum dimensions exceeded. Height and width must be less than 21 in x 21 in.\n* `DOC201` - Upload server error.\n* `DOC202` - Error during processing by upstream system. Processing failed and upload must be resubmitted. Detail field will provide additional details where available.\n",
                "example" : 404,
                "type" : "string"
              },
              "detail" : {
                "description" : "Human readable error detail. Only present if status = \"error\"",
                "example" : "The record identified by {{id}} could not be found",
                "type" : "string"
              },
              "status" : {
                "description" : "Unambiguous status code. Only present if status = \"error\"\n\n* `DOC101` - Invalid multipart payload provided - not a multipart, or missing one or more required parts.\n* `DOC102` - Invalid metadata - not parseable as JSON, incorrect fields, etc.\n* `DOC103` - Invalid content - not parseable as PDF. Detail field will indicate which document or attachment part was affected.\n* `DOC104` - Upload rejected by upstream system. Processing failed and upload must be resubmitted. Detail field will indicate nature of rejection.\n* `DOC105` - Invalid or unknown id\n* `DOC106` - File size limit exceeded. Each document may be a maximum of 100MB.\n* `DOC107` - Empty payload.\n* `DOC108` - Maximum dimensions exceeded. Height and width must be less than 21 in x 21 in.\n* `DOC201` - Upload server error.\n* `DOC202` - Error during processing by upstream system. Processing failed and upload must be resubmitted. Detail field will provide additional details where available.\n",
                "example" : 404,
                "type" : "string"
              },
              "title" : {
                "description" : "Human readable title description.",
                "example" : "Record not found",
                "type" : "string"
              }
            },
            "required" : [ "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "4ede2b59-eef4-478e-bec1-a7e9d0edaf7f",
    "name" : "Download zip of \"what the server sees\" (application/json)",
    "request" : {
      "urlPath" : "/uploads/ca5ac4d6-eb56-4473-89ac-28a4bcd5ed4f/download",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"Message\" : \"Invalid authentication credentials\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4ede2b59-eef4-478e-bec1-a7e9d0edaf7f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:25.520247Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getBenefitsDocumentUploadDownload",
          "schema" : {
            "properties" : {
              "Message" : {
                "description" : "Error detail",
                "example" : "Invalid authentication credentials",
                "type" : "string"
              }
            },
            "required" : [ "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "351c203e-3423-4832-b213-86ab2865d674",
    "name" : "Download zip of \"what the server sees\" (application/json)",
    "request" : {
      "urlPath" : "/uploads/7e80a422-6d27-4d34-b1bb-10dc18c5eec6/download",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"Message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "351c203e-3423-4832-b213-86ab2865d674",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:25.520114Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getBenefitsDocumentUploadDownload",
          "schema" : {
            "properties" : {
              "Message" : {
                "description" : "Error detail",
                "example" : "Unauthorized Request",
                "type" : "string"
              }
            },
            "required" : [ "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "4e806f05-b5e4-4e21-871e-e637371f3468",
    "name" : "Download zip of \"what the server sees\" (application/zip)",
    "request" : {
      "urlPath" : "/uploads/76b6f5cb-1d6f-4819-87da-eb30196cbbc6/download",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/zip"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"Binary File\"",
      "headers" : {
        "Content-Type" : "application/zip"
      }
    },
    "uuid" : "4e806f05-b5e4-4e21-871e-e637371f3468",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:25.519874Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getBenefitsDocumentUploadDownload",
          "schema" : {
            "example" : "Binary File",
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "7e9595ce-50cc-4e38-b418-45457008db1b",
    "name" : "Get status for a previous benefits document upload",
    "request" : {
      "urlPath" : "/uploads/1b283b1f-f406-4fff-b48f-69181870372b",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"code\" : 500,\n  \"detail\" : \"Internal server error\",\n  \"title\" : \"Internal server error\",\n  \"status\" : 500\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7e9595ce-50cc-4e38-b418-45457008db1b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:25.519744Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getBenefitsDocumentUploadStatus",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "Unambiguous status code. Only present if status = \"error\"\n\n* `DOC101` - Invalid multipart payload provided - not a multipart, or missing one or more required parts.\n* `DOC102` - Invalid metadata - not parseable as JSON, incorrect fields, etc.\n* `DOC103` - Invalid content - not parseable as PDF. Detail field will indicate which document or attachment part was affected.\n* `DOC104` - Upload rejected by upstream system. Processing failed and upload must be resubmitted. Detail field will indicate nature of rejection.\n* `DOC105` - Invalid or unknown id\n* `DOC106` - File size limit exceeded. Each document may be a maximum of 100MB.\n* `DOC107` - Empty payload.\n* `DOC108` - Maximum dimensions exceeded. Height and width must be less than 21 in x 21 in.\n* `DOC201` - Upload server error.\n* `DOC202` - Error during processing by upstream system. Processing failed and upload must be resubmitted. Detail field will provide additional details where available.\n",
                "example" : 500,
                "type" : "string"
              },
              "detail" : {
                "description" : "Human readable error detail. Only present if status = \"error\"",
                "example" : "Internal server error",
                "type" : "string"
              },
              "status" : {
                "description" : "Unambiguous status code. Only present if status = \"error\"\n\n* `DOC101` - Invalid multipart payload provided - not a multipart, or missing one or more required parts.\n* `DOC102` - Invalid metadata - not parseable as JSON, incorrect fields, etc.\n* `DOC103` - Invalid content - not parseable as PDF. Detail field will indicate which document or attachment part was affected.\n* `DOC104` - Upload rejected by upstream system. Processing failed and upload must be resubmitted. Detail field will indicate nature of rejection.\n* `DOC105` - Invalid or unknown id\n* `DOC106` - File size limit exceeded. Each document may be a maximum of 100MB.\n* `DOC107` - Empty payload.\n* `DOC108` - Maximum dimensions exceeded. Height and width must be less than 21 in x 21 in.\n* `DOC201` - Upload server error.\n* `DOC202` - Error during processing by upstream system. Processing failed and upload must be resubmitted. Detail field will provide additional details where available.\n",
                "example" : 500,
                "type" : "string"
              },
              "title" : {
                "description" : "Human readable title description.",
                "example" : "Internal server error",
                "type" : "string"
              }
            },
            "required" : [ "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "9dbc40f9-51a6-4bf6-9fb8-8a6647dfefff",
    "name" : "Get status for a previous benefits document upload",
    "request" : {
      "urlPath" : "/uploads/66534359-328d-466e-9487-ba22347edec0",
      "method" : "GET"
    },
    "response" : {
      "status" : 429,
      "body" : "{\n  \"Message\" : \"API rate limit exceeded\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9dbc40f9-51a6-4bf6-9fb8-8a6647dfefff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:25.519359Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getBenefitsDocumentUploadStatus",
          "schema" : {
            "properties" : {
              "Message" : {
                "description" : "message",
                "example" : "API rate limit exceeded",
                "type" : "string"
              }
            },
            "required" : [ "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "962da916-11d2-48a6-99c5-dcf6b6db0827",
    "name" : "Get status for a previous benefits document upload",
    "request" : {
      "urlPath" : "/uploads/0b95588e-dad5-48cb-97ab-0b2697b27d65",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : 404,\n  \"detail\" : \"The record identified by {{id}} could not be found\",\n  \"title\" : \"Record not found\",\n  \"status\" : 404\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "962da916-11d2-48a6-99c5-dcf6b6db0827",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:25.519231Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getBenefitsDocumentUploadStatus",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "Unambiguous status code. Only present if status = \"error\"\n\n* `DOC101` - Invalid multipart payload provided - not a multipart, or missing one or more required parts.\n* `DOC102` - Invalid metadata - not parseable as JSON, incorrect fields, etc.\n* `DOC103` - Invalid content - not parseable as PDF. Detail field will indicate which document or attachment part was affected.\n* `DOC104` - Upload rejected by upstream system. Processing failed and upload must be resubmitted. Detail field will indicate nature of rejection.\n* `DOC105` - Invalid or unknown id\n* `DOC106` - File size limit exceeded. Each document may be a maximum of 100MB.\n* `DOC107` - Empty payload.\n* `DOC108` - Maximum dimensions exceeded. Height and width must be less than 21 in x 21 in.\n* `DOC201` - Upload server error.\n* `DOC202` - Error during processing by upstream system. Processing failed and upload must be resubmitted. Detail field will provide additional details where available.\n",
                "example" : 404,
                "type" : "string"
              },
              "detail" : {
                "description" : "Human readable error detail. Only present if status = \"error\"",
                "example" : "The record identified by {{id}} could not be found",
                "type" : "string"
              },
              "status" : {
                "description" : "Unambiguous status code. Only present if status = \"error\"\n\n* `DOC101` - Invalid multipart payload provided - not a multipart, or missing one or more required parts.\n* `DOC102` - Invalid metadata - not parseable as JSON, incorrect fields, etc.\n* `DOC103` - Invalid content - not parseable as PDF. Detail field will indicate which document or attachment part was affected.\n* `DOC104` - Upload rejected by upstream system. Processing failed and upload must be resubmitted. Detail field will indicate nature of rejection.\n* `DOC105` - Invalid or unknown id\n* `DOC106` - File size limit exceeded. Each document may be a maximum of 100MB.\n* `DOC107` - Empty payload.\n* `DOC108` - Maximum dimensions exceeded. Height and width must be less than 21 in x 21 in.\n* `DOC201` - Upload server error.\n* `DOC202` - Error during processing by upstream system. Processing failed and upload must be resubmitted. Detail field will provide additional details where available.\n",
                "example" : 404,
                "type" : "string"
              },
              "title" : {
                "description" : "Human readable title description.",
                "example" : "Record not found",
                "type" : "string"
              }
            },
            "required" : [ "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "f23f5adf-7caf-4358-bd9b-1327938379c8",
    "name" : "Get status for a previous benefits document upload",
    "request" : {
      "urlPath" : "/uploads/a6e89be8-1817-4680-b9a7-8dcba4c5418f",
      "method" : "GET"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"Message\" : \"Invalid authentication credentials\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f23f5adf-7caf-4358-bd9b-1327938379c8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:25.518883Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getBenefitsDocumentUploadStatus",
          "schema" : {
            "properties" : {
              "Message" : {
                "description" : "Error detail",
                "example" : "Invalid authentication credentials",
                "type" : "string"
              }
            },
            "required" : [ "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "df5d9e91-fec6-4dc8-8858-5d0b19d95b8c",
    "name" : "Get status for a previous benefits document upload",
    "request" : {
      "urlPath" : "/uploads/c97f0ec0-17be-4b43-8a0c-3b93f46f165f",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"Message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "df5d9e91-fec6-4dc8-8858-5d0b19d95b8c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:25.518276Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getBenefitsDocumentUploadStatus",
          "schema" : {
            "properties" : {
              "Message" : {
                "description" : "Error detail",
                "example" : "Unauthorized Request",
                "type" : "string"
              }
            },
            "required" : [ "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "40c85583-78c0-4ad2-8019-67c3c5564de2",
    "name" : "Get status for a previous benefits document upload",
    "request" : {
      "urlPath" : "/uploads/dc7f34ce-1770-4d49-a994-45eb7264b79b",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"data\" : {\n    \"attributes\" : {\n      \"code\" : \"w2h637rg17ch8ddptk368cvc8q2ilktbnqfi0lse7uvekkwykfratoofvjzl17\",\n      \"updated_at\" : \"2018-07-30T17:31:15.958Z\",\n      \"guid\" : \"6d8433c1-cd55-4c24-affd-f592287a7572\",\n      \"detail\" : \"dkbkj1ms7tiyyj38gomubek1ceqjtwc54w8n7gyk5c3vnoi\",\n      \"message\" : \"Quia perferendis ut aperiam similique quia. Et consectetur tempora porro id veritatis doloremque dolores. Temporibus dolorem est occaecati quo.\",\n      \"uploaded_pdf\" : {\n        \"total_documents\" : \"2\",\n        \"total_pages\" : \"3\",\n        \"content\" : {\n          \"attachments\" : [ { }, { }, { }, { }, { }, { }, { } ],\n          \"page_count\" : \"1\",\n          \"dimensions\" : {\n            \"width\" : \"8.5\",\n            \"oversized_pdf\" : \"false\",\n            \"height\" : \"11.0\"\n          }\n        }\n      },\n      \"status\" : \"received\"\n    },\n    \"id\" : \"6d8433c1-cd55-4c24-affd-f592287a7572\",\n    \"type\" : \"document_upload\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "40c85583-78c0-4ad2-8019-67c3c5564de2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:25.518059Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getBenefitsDocumentUploadStatus",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/DocumentUploadStatus"
              }
            },
            "required" : [ "data" ]
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "e1a3bdd4-dda4-4eda-9c30-ee52d59ad868",
    "name" : "Validate an individual document against system file requirements",
    "request" : {
      "urlPath" : "/uploads/validate_document",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"code\" : 500,\n  \"detail\" : \"Internal server error\",\n  \"title\" : \"Internal server error\",\n  \"status\" : 500\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e1a3bdd4-dda4-4eda-9c30-ee52d59ad868",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:25.517872Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "postBenefitsDocumentUploadValidateDocument",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "Unambiguous status code. Only present if status = \"error\"\n\n* `DOC101` - Invalid multipart payload provided - not a multipart, or missing one or more required parts.\n* `DOC102` - Invalid metadata - not parseable as JSON, incorrect fields, etc.\n* `DOC103` - Invalid content - not parseable as PDF. Detail field will indicate which document or attachment part was affected.\n* `DOC104` - Upload rejected by upstream system. Processing failed and upload must be resubmitted. Detail field will indicate nature of rejection.\n* `DOC105` - Invalid or unknown id\n* `DOC106` - File size limit exceeded. Each document may be a maximum of 100MB.\n* `DOC107` - Empty payload.\n* `DOC108` - Maximum dimensions exceeded. Height and width must be less than 21 in x 21 in.\n* `DOC201` - Upload server error.\n* `DOC202` - Error during processing by upstream system. Processing failed and upload must be resubmitted. Detail field will provide additional details where available.\n",
                "example" : 500,
                "type" : "string"
              },
              "detail" : {
                "description" : "Human readable error detail. Only present if status = \"error\"",
                "example" : "Internal server error",
                "type" : "string"
              },
              "status" : {
                "description" : "Unambiguous status code. Only present if status = \"error\"\n\n* `DOC101` - Invalid multipart payload provided - not a multipart, or missing one or more required parts.\n* `DOC102` - Invalid metadata - not parseable as JSON, incorrect fields, etc.\n* `DOC103` - Invalid content - not parseable as PDF. Detail field will indicate which document or attachment part was affected.\n* `DOC104` - Upload rejected by upstream system. Processing failed and upload must be resubmitted. Detail field will indicate nature of rejection.\n* `DOC105` - Invalid or unknown id\n* `DOC106` - File size limit exceeded. Each document may be a maximum of 100MB.\n* `DOC107` - Empty payload.\n* `DOC108` - Maximum dimensions exceeded. Height and width must be less than 21 in x 21 in.\n* `DOC201` - Upload server error.\n* `DOC202` - Error during processing by upstream system. Processing failed and upload must be resubmitted. Detail field will provide additional details where available.\n",
                "example" : 500,
                "type" : "string"
              },
              "title" : {
                "description" : "Human readable title description.",
                "example" : "Internal server error",
                "type" : "string"
              }
            },
            "required" : [ "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "a887198d-2d39-4da0-8e1e-79bb930f6f51",
    "name" : "Validate an individual document against system file requirements",
    "request" : {
      "urlPath" : "/uploads/validate_document",
      "method" : "POST"
    },
    "response" : {
      "status" : 429,
      "body" : "{\n  \"Message\" : \"API rate limit exceeded\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a887198d-2d39-4da0-8e1e-79bb930f6f51",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:25.517773Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "postBenefitsDocumentUploadValidateDocument",
          "schema" : {
            "properties" : {
              "Message" : {
                "description" : "message",
                "example" : "API rate limit exceeded",
                "type" : "string"
              }
            },
            "required" : [ "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "812bec38-7fd2-4e03-8c01-45fe674b80c7",
    "name" : "Validate an individual document against system file requirements",
    "request" : {
      "urlPath" : "/uploads/validate_document",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"errors\" : [ {\n    \"detail\" : \"Document is locked with a user password\",\n    \"title\" : \"Document failed validation\",\n    \"status\" : \"422\"\n  }, {\n    \"detail\" : \"Document is locked with a user password\",\n    \"title\" : \"Document failed validation\",\n    \"status\" : \"422\"\n  }, {\n    \"detail\" : \"Document is locked with a user password\",\n    \"title\" : \"Document failed validation\",\n    \"status\" : \"422\"\n  }, {\n    \"detail\" : \"Document is locked with a user password\",\n    \"title\" : \"Document failed validation\",\n    \"status\" : \"422\"\n  }, {\n    \"detail\" : \"Document is locked with a user password\",\n    \"title\" : \"Document failed validation\",\n    \"status\" : \"422\"\n  }, {\n    \"detail\" : \"Document is locked with a user password\",\n    \"title\" : \"Document failed validation\",\n    \"status\" : \"422\"\n  }, {\n    \"detail\" : \"Document is locked with a user password\",\n    \"title\" : \"Document failed validation\",\n    \"status\" : \"422\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "812bec38-7fd2-4e03-8c01-45fe674b80c7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:25.517141Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "postBenefitsDocumentUploadValidateDocument",
          "schema" : {
            "properties" : {
              "errors" : {
                "items" : {
                  "$ref" : "#/components/schemas/DocumentValidationErrorModel"
                },
                "type" : "array"
              }
            },
            "required" : [ "errors" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "fda43e31-6fb8-4702-b0cc-8bba76e786ce",
    "name" : "Validate an individual document against system file requirements",
    "request" : {
      "urlPath" : "/uploads/validate_document",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"Message\" : \"Invalid authentication credentials\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fda43e31-6fb8-4702-b0cc-8bba76e786ce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:25.516855Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "postBenefitsDocumentUploadValidateDocument",
          "schema" : {
            "properties" : {
              "Message" : {
                "description" : "Error detail",
                "example" : "Invalid authentication credentials",
                "type" : "string"
              }
            },
            "required" : [ "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "ff1264cf-6134-4261-9286-6cc3b1220a82",
    "name" : "Validate an individual document against system file requirements",
    "request" : {
      "urlPath" : "/uploads/validate_document",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"Message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ff1264cf-6134-4261-9286-6cc3b1220a82",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:25.516744Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "postBenefitsDocumentUploadValidateDocument",
          "schema" : {
            "properties" : {
              "Message" : {
                "description" : "Error detail",
                "example" : "Unauthorized Request",
                "type" : "string"
              }
            },
            "required" : [ "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "13ce0af6-e65b-4600-acd7-5caaad2ad9d5",
    "name" : "Validate an individual document against system file requirements",
    "request" : {
      "urlPath" : "/uploads/validate_document",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"data\" : {\n    \"attributes\" : {\n      \"status\" : \"valid\"\n    },\n    \"type\" : \"documentValidation\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "13ce0af6-e65b-4600-acd7-5caaad2ad9d5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:25.516609Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "postBenefitsDocumentUploadValidateDocument",
          "schema" : {
            "properties" : {
              "data" : {
                "properties" : {
                  "attributes" : {
                    "properties" : {
                      "status" : {
                        "example" : "valid",
                        "type" : "string"
                      }
                    },
                    "type" : "object"
                  },
                  "type" : {
                    "description" : "schema type",
                    "example" : "documentValidation",
                    "type" : "string"
                  }
                }
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "def0ac55-ae4f-4a5f-a417-6cd0f9da9ab6",
    "name" : "Get a bulk status report for a list of previous uploads (application/json)",
    "request" : {
      "urlPath" : "/uploads/report",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"code\" : 500,\n  \"detail\" : \"Internal server error\",\n  \"title\" : \"Internal server error\",\n  \"status\" : 500\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "def0ac55-ae4f-4a5f-a417-6cd0f9da9ab6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:25.516319Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getBenefitsDocumentUploadStatusReport",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "Unambiguous status code. Only present if status = \"error\"\n\n* `DOC101` - Invalid multipart payload provided - not a multipart, or missing one or more required parts.\n* `DOC102` - Invalid metadata - not parseable as JSON, incorrect fields, etc.\n* `DOC103` - Invalid content - not parseable as PDF. Detail field will indicate which document or attachment part was affected.\n* `DOC104` - Upload rejected by upstream system. Processing failed and upload must be resubmitted. Detail field will indicate nature of rejection.\n* `DOC105` - Invalid or unknown id\n* `DOC106` - File size limit exceeded. Each document may be a maximum of 100MB.\n* `DOC107` - Empty payload.\n* `DOC108` - Maximum dimensions exceeded. Height and width must be less than 21 in x 21 in.\n* `DOC201` - Upload server error.\n* `DOC202` - Error during processing by upstream system. Processing failed and upload must be resubmitted. Detail field will provide additional details where available.\n",
                "example" : 500,
                "type" : "string"
              },
              "detail" : {
                "description" : "Human readable error detail. Only present if status = \"error\"",
                "example" : "Internal server error",
                "type" : "string"
              },
              "status" : {
                "description" : "Unambiguous status code. Only present if status = \"error\"\n\n* `DOC101` - Invalid multipart payload provided - not a multipart, or missing one or more required parts.\n* `DOC102` - Invalid metadata - not parseable as JSON, incorrect fields, etc.\n* `DOC103` - Invalid content - not parseable as PDF. Detail field will indicate which document or attachment part was affected.\n* `DOC104` - Upload rejected by upstream system. Processing failed and upload must be resubmitted. Detail field will indicate nature of rejection.\n* `DOC105` - Invalid or unknown id\n* `DOC106` - File size limit exceeded. Each document may be a maximum of 100MB.\n* `DOC107` - Empty payload.\n* `DOC108` - Maximum dimensions exceeded. Height and width must be less than 21 in x 21 in.\n* `DOC201` - Upload server error.\n* `DOC202` - Error during processing by upstream system. Processing failed and upload must be resubmitted. Detail field will provide additional details where available.\n",
                "example" : 500,
                "type" : "string"
              },
              "title" : {
                "description" : "Human readable title description.",
                "example" : "Internal server error",
                "type" : "string"
              }
            },
            "required" : [ "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "d73f3a22-39fc-42e5-beee-55b7fea609c0",
    "name" : "Get a bulk status report for a list of previous uploads (application/json)",
    "request" : {
      "urlPath" : "/uploads/report",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 429,
      "body" : "{\n  \"Message\" : \"API rate limit exceeded\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d73f3a22-39fc-42e5-beee-55b7fea609c0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:25.515994Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getBenefitsDocumentUploadStatusReport",
          "schema" : {
            "properties" : {
              "Message" : {
                "description" : "message",
                "example" : "API rate limit exceeded",
                "type" : "string"
              }
            },
            "required" : [ "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "322710d2-2ae2-4784-8fcb-6c8b55756bdf",
    "name" : "Get a bulk status report for a list of previous uploads (application/json)",
    "request" : {
      "urlPath" : "/uploads/report",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"errors\" : [ {\n    \"detail\" : \"DOC104 - Upload rejected by upstream system. Processing failed and upload must be resubmitted\",\n    \"status\" : \"422\"\n  }, {\n    \"detail\" : \"DOC104 - Upload rejected by upstream system. Processing failed and upload must be resubmitted\",\n    \"status\" : \"422\"\n  }, {\n    \"detail\" : \"DOC104 - Upload rejected by upstream system. Processing failed and upload must be resubmitted\",\n    \"status\" : \"422\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "322710d2-2ae2-4784-8fcb-6c8b55756bdf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:25.515133Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getBenefitsDocumentUploadStatusReport",
          "schema" : {
            "properties" : {
              "errors" : {
                "items" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "type" : "array"
              }
            },
            "required" : [ "errors" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "3cf15df4-afa3-463d-b346-c7aa1b2c64bd",
    "name" : "Get a bulk status report for a list of previous uploads (application/json)",
    "request" : {
      "urlPath" : "/uploads/report",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"Message\" : \"Invalid authentication credentials\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3cf15df4-afa3-463d-b346-c7aa1b2c64bd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:25.51507Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getBenefitsDocumentUploadStatusReport",
          "schema" : {
            "properties" : {
              "Message" : {
                "description" : "Error detail",
                "example" : "Invalid authentication credentials",
                "type" : "string"
              }
            },
            "required" : [ "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "c47baeff-be6d-4e46-916d-ef2493a62adb",
    "name" : "Get a bulk status report for a list of previous uploads (application/json)",
    "request" : {
      "urlPath" : "/uploads/report",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"Message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c47baeff-be6d-4e46-916d-ef2493a62adb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:25.515026Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getBenefitsDocumentUploadStatusReport",
          "schema" : {
            "properties" : {
              "Message" : {
                "description" : "Error detail",
                "example" : "Unauthorized Request",
                "type" : "string"
              }
            },
            "required" : [ "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "ba4659a5-2a79-4b62-accc-299c30b71380",
    "name" : "Get a bulk status report for a list of previous uploads - 400",
    "request" : {
      "urlPath" : "/uploads/report",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "ba4659a5-2a79-4b62-accc-299c30b71380",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:25.514986Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getBenefitsDocumentUploadStatusReport"
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "0358f6ab-be28-4064-949f-d5a9005b4167",
    "name" : "Get a bulk status report for a list of previous uploads (application/json)",
    "request" : {
      "urlPath" : "/uploads/report",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"data\" : [ {\n    \"attributes\" : {\n      \"code\" : \"njvtvai7p7pzjjfva1bautqa1fyislk7xqddtkp5qlj9lbxgtt8w4qa2vkghilzgy0banr6\",\n      \"updated_at\" : \"2018-07-30T17:31:15.958Z\",\n      \"guid\" : \"6d8433c1-cd55-4c24-affd-f592287a7572\",\n      \"detail\" : \"p70psce3h4vikecew0rj4chki2fvcvo5yn0xu3l3h2siamvwgmu7xf8vhwr9ejobhvqqfjutchod8pdggtsrv688h1ji6r25oj1dbv6rmxy77gr9hu2zu2wwrlhbo2k3k6efqs45c23wtao42x7om39au0btgtpc42lvc4k0pon1c4wxk2t833hj3p65u6q\",\n      \"message\" : \"Reiciendis officia facere sunt non magni nihil harum. Velit et minus deleniti. A quisquam enim dolorem veniam aut. Reiciendis quasi suscipit minima temporibus eum. Voluptates rerum aut amet.\",\n      \"uploaded_pdf\" : {\n        \"total_documents\" : \"2\",\n        \"total_pages\" : \"3\",\n        \"content\" : {\n          \"attachments\" : [ { }, { }, { } ],\n          \"page_count\" : \"1\",\n          \"dimensions\" : {\n            \"width\" : \"8.5\",\n            \"oversized_pdf\" : \"false\",\n            \"height\" : \"11.0\"\n          }\n        }\n      },\n      \"status\" : \"received\"\n    },\n    \"id\" : \"6d8433c1-cd55-4c24-affd-f592287a7572\",\n    \"type\" : \"document_upload\"\n  }, {\n    \"attributes\" : {\n      \"code\" : \"elo64wp1p4ugaon5janmsf85u28obvp0cdhjg0nvptyv6qoxwyiirbnbmto1cu87hpwj79s7egafgc9h75j7x039pxdnv484237e74xkj5qi2y6rrawion1bag5gy0f0n50dzvtjtgm9u5779nqlpj0sarpv\",\n      \"updated_at\" : \"2018-07-30T17:31:15.958Z\",\n      \"guid\" : \"6d8433c1-cd55-4c24-affd-f592287a7572\",\n      \"detail\" : \"zf582mm0epg6ppgo31uuot27x6i1dgrzxir88nz8jsh3h5p2vlgrz1yhunb8kctbko03xf2txfatd\",\n      \"message\" : \"Repudiandae voluptates atque tempore iste commodi. Excepturi deserunt laudantium itaque mollitia. Atque porro velit nihil.\",\n      \"uploaded_pdf\" : {\n        \"total_documents\" : \"2\",\n        \"total_pages\" : \"3\",\n        \"content\" : {\n          \"attachments\" : [ { }, { } ],\n          \"page_count\" : \"1\",\n          \"dimensions\" : {\n            \"width\" : \"8.5\",\n            \"oversized_pdf\" : \"false\",\n            \"height\" : \"11.0\"\n          }\n        }\n      },\n      \"status\" : \"received\"\n    },\n    \"id\" : \"6d8433c1-cd55-4c24-affd-f592287a7572\",\n    \"type\" : \"document_upload\"\n  }, {\n    \"attributes\" : {\n      \"code\" : \"gnaa4ej4bveatxki96kzr1p1j3id51bb6c97jlazyp3qe0i60j4w8z46xduvegcfq\",\n      \"updated_at\" : \"2018-07-30T17:31:15.958Z\",\n      \"guid\" : \"6d8433c1-cd55-4c24-affd-f592287a7572\",\n      \"detail\" : \"bd62z3nxpe0tbqaunbni4qgkgtwnvgbvqb4k3xx\",\n      \"message\" : \"Eveniet laboriosam ducimus dicta amet. Quidem quis esse et. Nihil suscipit sequi. Hic et soluta dignissimos odio ullam.\",\n      \"uploaded_pdf\" : {\n        \"total_documents\" : \"2\",\n        \"total_pages\" : \"3\",\n        \"content\" : {\n          \"attachments\" : [ { }, { }, { }, { } ],\n          \"page_count\" : \"1\",\n          \"dimensions\" : {\n            \"width\" : \"8.5\",\n            \"oversized_pdf\" : \"false\",\n            \"height\" : \"11.0\"\n          }\n        }\n      },\n      \"status\" : \"received\"\n    },\n    \"id\" : \"6d8433c1-cd55-4c24-affd-f592287a7572\",\n    \"type\" : \"document_upload\"\n  }, {\n    \"attributes\" : {\n      \"code\" : \"r0ye57d861cok3d0hozepstj8es1rsskghp3ebhqma7s16i4wlc1zhazv9xoty303icdt5h8q9epq40tcwurprho4g0gxqtf0wywj3cd9xqkybf7kulg8iyzxjx0zpvg430kgwsm3zqxza8wt3bg4imjhhdkylnfe7l10dw2sj7hadxbta5agrjgh\",\n      \"updated_at\" : \"2018-07-30T17:31:15.958Z\",\n      \"guid\" : \"6d8433c1-cd55-4c24-affd-f592287a7572\",\n      \"detail\" : \"m1ap8b2sltm4zchrr6uh3c72fpt3x85exfv11qylej0xzccizotr7ntat0f6nc7or5xxhju297zbs6yml4brbub1mv58ve7qyhwmzp4kpq42k0cnpozpsgvzdu2hpcgdcp3ekttiimqnobinfmtu\",\n      \"message\" : \"Quaerat laudantium assumenda quisquam omnis repellendus asperiores voluptates. Possimus quo aut qui veniam et. Repudiandae pariatur inventore.\",\n      \"uploaded_pdf\" : {\n        \"total_documents\" : \"2\",\n        \"total_pages\" : \"3\",\n        \"content\" : {\n          \"attachments\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n          \"page_count\" : \"1\",\n          \"dimensions\" : {\n            \"width\" : \"8.5\",\n            \"oversized_pdf\" : \"false\",\n            \"height\" : \"11.0\"\n          }\n        }\n      },\n      \"status\" : \"received\"\n    },\n    \"id\" : \"6d8433c1-cd55-4c24-affd-f592287a7572\",\n    \"type\" : \"document_upload\"\n  }, {\n    \"attributes\" : {\n      \"code\" : \"uzrmdnk67ij3ezzrnmfcn9dx2e361kqkd6rwsnlyrpuo9hpdwj806zh8n71xeteu6t62gsu7q57eu9okhex5nsgm9zre7qebo56ozrrfsuf4svd49rhwmxq3o3mn3mlws9luvu5ko1y76vnu5vu5jwpt3ile9n7\",\n      \"updated_at\" : \"2018-07-30T17:31:15.958Z\",\n      \"guid\" : \"6d8433c1-cd55-4c24-affd-f592287a7572\",\n      \"detail\" : \"1ixoa8mn9rrf0byhjvhlyvj37x2j8v0zmterx17wjn5rxq22yd2tvzun005az4nh\",\n      \"message\" : \"Iste expedita est et maiores deserunt sunt consequatur. Reprehenderit qui placeat exercitationem recusandae dolorem commodi sunt. Modi nisi eos sunt. Repellendus similique voluptatem vero provident at\",\n      \"uploaded_pdf\" : {\n        \"total_documents\" : \"2\",\n        \"total_pages\" : \"3\",\n        \"content\" : {\n          \"attachments\" : [ { }, { }, { }, { }, { }, { }, { } ],\n          \"page_count\" : \"1\",\n          \"dimensions\" : {\n            \"width\" : \"8.5\",\n            \"oversized_pdf\" : \"false\",\n            \"height\" : \"11.0\"\n          }\n        }\n      },\n      \"status\" : \"received\"\n    },\n    \"id\" : \"6d8433c1-cd55-4c24-affd-f592287a7572\",\n    \"type\" : \"document_upload\"\n  }, {\n    \"attributes\" : {\n      \"code\" : \"0ofo9rb7thvxh0lq07kvrjv4tk5lm642sre19ijechdbjsb65f05tyvcvos9fpipfgxjneg3hh7q8qf9weusr4a0bc6w1b4l7vr9aql0v0ua6dj8e61ycb7p46v720h4049j6yzqe1e47u2faxrds1ir7svojxls1vfyvjkc75yiikxdd8izr6b5jv1d0x1\",\n      \"updated_at\" : \"2018-07-30T17:31:15.958Z\",\n      \"guid\" : \"6d8433c1-cd55-4c24-affd-f592287a7572\",\n      \"detail\" : \"lpkeq552eh48as0h4yyotokymwglwlnq0n2cw2xaz9351makglglsqclxsvz6ou5ej847r6s8931o5jc9305wzf2qsdlz5i4r4fad9ghqrpbsayqo1j25yddd5r1zmpa37nuo2f4cg0l9kn2z2kyhrbryuxum618vwbk2o4ye3d9ee2qkg4n23nbq\",\n      \"message\" : \"Qui perferendis enim qui ut. Exercitationem qui quaerat soluta reprehenderit. Cupiditate atque aut sed voluptatum corrupti dolor nostrum. Harum laboriosam non dolores minus quia voluptatibus. Non dolo\",\n      \"uploaded_pdf\" : {\n        \"total_documents\" : \"2\",\n        \"total_pages\" : \"3\",\n        \"content\" : {\n          \"attachments\" : [ { } ],\n          \"page_count\" : \"1\",\n          \"dimensions\" : {\n            \"width\" : \"8.5\",\n            \"oversized_pdf\" : \"false\",\n            \"height\" : \"11.0\"\n          }\n        }\n      },\n      \"status\" : \"received\"\n    },\n    \"id\" : \"6d8433c1-cd55-4c24-affd-f592287a7572\",\n    \"type\" : \"document_upload\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0358f6ab-be28-4064-949f-d5a9005b4167",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:25.514957Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getBenefitsDocumentUploadStatusReport",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/DocumentUploadStatusReport"
              }
            },
            "required" : [ "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "eaad7b83-0e27-4c5a-9b0b-aebaf90aa819",
    "name" : "Get a location for subsequent document upload PUT request",
    "request" : {
      "urlPath" : "/uploads",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"code\" : 500,\n  \"detail\" : \"Internal server error\",\n  \"title\" : \"Internal server error\",\n  \"status\" : 500\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eaad7b83-0e27-4c5a-9b0b-aebaf90aa819",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:25.514207Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "postBenefitsDocumentUpload",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "Unambiguous status code. Only present if status = \"error\"\n\n* `DOC101` - Invalid multipart payload provided - not a multipart, or missing one or more required parts.\n* `DOC102` - Invalid metadata - not parseable as JSON, incorrect fields, etc.\n* `DOC103` - Invalid content - not parseable as PDF. Detail field will indicate which document or attachment part was affected.\n* `DOC104` - Upload rejected by upstream system. Processing failed and upload must be resubmitted. Detail field will indicate nature of rejection.\n* `DOC105` - Invalid or unknown id\n* `DOC106` - File size limit exceeded. Each document may be a maximum of 100MB.\n* `DOC107` - Empty payload.\n* `DOC108` - Maximum dimensions exceeded. Height and width must be less than 21 in x 21 in.\n* `DOC201` - Upload server error.\n* `DOC202` - Error during processing by upstream system. Processing failed and upload must be resubmitted. Detail field will provide additional details where available.\n",
                "example" : 500,
                "type" : "string"
              },
              "detail" : {
                "description" : "Human readable error detail. Only present if status = \"error\"",
                "example" : "Internal server error",
                "type" : "string"
              },
              "status" : {
                "description" : "Unambiguous status code. Only present if status = \"error\"\n\n* `DOC101` - Invalid multipart payload provided - not a multipart, or missing one or more required parts.\n* `DOC102` - Invalid metadata - not parseable as JSON, incorrect fields, etc.\n* `DOC103` - Invalid content - not parseable as PDF. Detail field will indicate which document or attachment part was affected.\n* `DOC104` - Upload rejected by upstream system. Processing failed and upload must be resubmitted. Detail field will indicate nature of rejection.\n* `DOC105` - Invalid or unknown id\n* `DOC106` - File size limit exceeded. Each document may be a maximum of 100MB.\n* `DOC107` - Empty payload.\n* `DOC108` - Maximum dimensions exceeded. Height and width must be less than 21 in x 21 in.\n* `DOC201` - Upload server error.\n* `DOC202` - Error during processing by upstream system. Processing failed and upload must be resubmitted. Detail field will provide additional details where available.\n",
                "example" : 500,
                "type" : "string"
              },
              "title" : {
                "description" : "Human readable title description.",
                "example" : "Internal server error",
                "type" : "string"
              }
            },
            "required" : [ "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "e95bd62f-b713-49a6-994b-c52184f20c6b",
    "name" : "Get a location for subsequent document upload PUT request",
    "request" : {
      "urlPath" : "/uploads",
      "method" : "POST"
    },
    "response" : {
      "status" : 429,
      "body" : "{\n  \"Message\" : \"API rate limit exceeded\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e95bd62f-b713-49a6-994b-c52184f20c6b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:25.514138Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "postBenefitsDocumentUpload",
          "schema" : {
            "properties" : {
              "Message" : {
                "description" : "message",
                "example" : "API rate limit exceeded",
                "type" : "string"
              }
            },
            "required" : [ "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "7e838080-ed42-4f81-b256-48c96616aca6",
    "name" : "Get a location for subsequent document upload PUT request",
    "request" : {
      "urlPath" : "/uploads",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"errors\" : [ {\n    \"detail\" : \"DOC104 - Upload rejected by upstream system. Processing failed and upload must be resubmitted\",\n    \"status\" : \"422\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7e838080-ed42-4f81-b256-48c96616aca6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:25.514102Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "postBenefitsDocumentUpload",
          "schema" : {
            "properties" : {
              "errors" : {
                "items" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "type" : "array"
              }
            },
            "required" : [ "errors" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "96b9d6d2-c732-4e70-8aa4-1638db58170a",
    "name" : "Get a location for subsequent document upload PUT request",
    "request" : {
      "urlPath" : "/uploads",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"Message\" : \"Invalid authentication credentials\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "96b9d6d2-c732-4e70-8aa4-1638db58170a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:25.514052Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "postBenefitsDocumentUpload",
          "schema" : {
            "properties" : {
              "Message" : {
                "description" : "Error detail",
                "example" : "Invalid authentication credentials",
                "type" : "string"
              }
            },
            "required" : [ "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "94663933-9917-4c67-bef0-30d8aad265b5",
    "name" : "Get a location for subsequent document upload PUT request",
    "request" : {
      "urlPath" : "/uploads",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"Message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "94663933-9917-4c67-bef0-30d8aad265b5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:25.514014Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "postBenefitsDocumentUpload",
          "schema" : {
            "properties" : {
              "Message" : {
                "description" : "Error detail",
                "example" : "Unauthorized Request",
                "type" : "string"
              }
            },
            "required" : [ "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "e53cf295-e464-4d3a-92af-254a9693d45c",
    "name" : "Get a location for subsequent document upload PUT request",
    "request" : {
      "urlPath" : "/uploads",
      "method" : "POST"
    },
    "response" : {
      "status" : 202,
      "body" : "{\n  \"data\" : {\n    \"attributes\" : {\n      \"code\" : \"g8ruxg3adxyjeigl2widbufhx3\",\n      \"updated_at\" : \"2018-07-30T17:31:15.958Z\",\n      \"guid\" : \"6d8433c1-cd55-4c24-affd-f592287a7572\",\n      \"location\" : \"https://sandbox-api.va.gov/services_user_content/vba_documents/{idpath}\",\n      \"detail\" : \"obrne8r0qabnlmjl620viylbkv9ttwzv9bv9evgoovfl3oabex716znnv474lp6w7w1c5k8bh07du8x8w7gabmyem6pmvrzenwk8dgor88scph1jq5yzxksoicvthajsbmwez7g1dj4w9gvdefmamgwblcmhozevp629qgodwx6jmcxumq7hjw1hhxl\",\n      \"uploaded_pdf\" : \"null\",\n      \"status\" : \"pending\"\n    },\n    \"id\" : \"6d8433c1-cd55-4c24-affd-f592287a7572\",\n    \"type\" : \"document_upload\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e53cf295-e464-4d3a-92af-254a9693d45c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:25.513965Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "postBenefitsDocumentUpload",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/DocumentUploadPath"
              }
            },
            "required" : [ "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "8a1e0b2b-7d22-496c-a84e-742c9400b7b4",
    "name" : "Accepts document upload. (application/json)",
    "request" : {
      "urlPath" : "/path",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"code\" : 500,\n  \"detail\" : \"Internal server error\",\n  \"title\" : \"Internal server error\",\n  \"status\" : 500\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8a1e0b2b-7d22-496c-a84e-742c9400b7b4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:25.513849Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "putBenefitsDocumentUpload",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "Unambiguous status code. Only present if status = \"error\"\n\n* `DOC101` - Invalid multipart payload provided - not a multipart, or missing one or more required parts.\n* `DOC102` - Invalid metadata - not parseable as JSON, incorrect fields, etc.\n* `DOC103` - Invalid content - not parseable as PDF. Detail field will indicate which document or attachment part was affected.\n* `DOC104` - Upload rejected by upstream system. Processing failed and upload must be resubmitted. Detail field will indicate nature of rejection.\n* `DOC105` - Invalid or unknown id\n* `DOC106` - File size limit exceeded. Each document may be a maximum of 100MB.\n* `DOC107` - Empty payload.\n* `DOC108` - Maximum dimensions exceeded. Height and width must be less than 21 in x 21 in.\n* `DOC201` - Upload server error.\n* `DOC202` - Error during processing by upstream system. Processing failed and upload must be resubmitted. Detail field will provide additional details where available.\n",
                "example" : 500,
                "type" : "string"
              },
              "detail" : {
                "description" : "Human readable error detail. Only present if status = \"error\"",
                "example" : "Internal server error",
                "type" : "string"
              },
              "status" : {
                "description" : "Unambiguous status code. Only present if status = \"error\"\n\n* `DOC101` - Invalid multipart payload provided - not a multipart, or missing one or more required parts.\n* `DOC102` - Invalid metadata - not parseable as JSON, incorrect fields, etc.\n* `DOC103` - Invalid content - not parseable as PDF. Detail field will indicate which document or attachment part was affected.\n* `DOC104` - Upload rejected by upstream system. Processing failed and upload must be resubmitted. Detail field will indicate nature of rejection.\n* `DOC105` - Invalid or unknown id\n* `DOC106` - File size limit exceeded. Each document may be a maximum of 100MB.\n* `DOC107` - Empty payload.\n* `DOC108` - Maximum dimensions exceeded. Height and width must be less than 21 in x 21 in.\n* `DOC201` - Upload server error.\n* `DOC202` - Error during processing by upstream system. Processing failed and upload must be resubmitted. Detail field will provide additional details where available.\n",
                "example" : 500,
                "type" : "string"
              },
              "title" : {
                "description" : "Human readable title description.",
                "example" : "Internal server error",
                "type" : "string"
              }
            },
            "required" : [ "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "55c13e70-38c3-451a-946a-327f2d74062f",
    "name" : "Accepts document upload. (application/json)",
    "request" : {
      "urlPath" : "/path",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 429,
      "body" : "{\n  \"Message\" : \"API rate limit exceeded\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "55c13e70-38c3-451a-946a-327f2d74062f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:25.513759Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "putBenefitsDocumentUpload",
          "schema" : {
            "properties" : {
              "Message" : {
                "description" : "message",
                "example" : "API rate limit exceeded",
                "type" : "string"
              }
            },
            "required" : [ "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "0c3cdf01-8e9f-472b-b938-e5496f4cf320",
    "name" : "Accepts document upload. (application/json)",
    "request" : {
      "urlPath" : "/path",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"errors\" : [ {\n    \"detail\" : \"DOC104 - Upload rejected by upstream system. Processing failed and upload must be resubmitted\",\n    \"status\" : \"422\"\n  }, {\n    \"detail\" : \"DOC104 - Upload rejected by upstream system. Processing failed and upload must be resubmitted\",\n    \"status\" : \"422\"\n  }, {\n    \"detail\" : \"DOC104 - Upload rejected by upstream system. Processing failed and upload must be resubmitted\",\n    \"status\" : \"422\"\n  }, {\n    \"detail\" : \"DOC104 - Upload rejected by upstream system. Processing failed and upload must be resubmitted\",\n    \"status\" : \"422\"\n  }, {\n    \"detail\" : \"DOC104 - Upload rejected by upstream system. Processing failed and upload must be resubmitted\",\n    \"status\" : \"422\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0c3cdf01-8e9f-472b-b938-e5496f4cf320",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:25.513682Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "putBenefitsDocumentUpload",
          "schema" : {
            "properties" : {
              "errors" : {
                "items" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "type" : "array"
              }
            },
            "required" : [ "errors" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "a6597641-5b06-41e4-9e09-d504051e58a8",
    "name" : "Accepts document upload. (application/xml)",
    "request" : {
      "urlPath" : "/path",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/xml"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"Message\" : \"The request signature we calculated does not match the signature you provided. Check your key and signing method.\",\n  \"Code\" : \"SignatureDoesNotMatch\"\n}",
      "headers" : {
        "Content-Type" : "application/xml"
      }
    },
    "uuid" : "a6597641-5b06-41e4-9e09-d504051e58a8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:25.513195Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "putBenefitsDocumentUpload",
          "schema" : {
            "description" : "Document upload failed",
            "properties" : {
              "Code" : {
                "description" : "Error code",
                "example" : "SignatureDoesNotMatch",
                "type" : "string"
              },
              "Message" : {
                "description" : "Error detail",
                "example" : "The request signature we calculated does not match the signature you provided. Check your key and signing method.",
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "Error"
            }
          }
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "0cc54f7b-5a75-4eed-b89a-fcf83cb462b9",
    "name" : "Accepts document upload. (application/json)",
    "request" : {
      "urlPath" : "/path",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"Message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0cc54f7b-5a75-4eed-b89a-fcf83cb462b9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:25.512931Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "putBenefitsDocumentUpload",
          "schema" : {
            "properties" : {
              "Message" : {
                "description" : "Error detail",
                "example" : "Unauthorized Request",
                "type" : "string"
              }
            },
            "required" : [ "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "0e92d25b-3675-41d7-b56f-e3718e9d8b55",
    "name" : "Accepts document upload. - 200",
    "request" : {
      "urlPath" : "/path",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "0e92d25b-3675-41d7-b56f-e3718e9d8b55",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:25.512522Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "putBenefitsDocumentUpload"
        }
      }
    },
    "insertionIndex" : 36
  } ]
}