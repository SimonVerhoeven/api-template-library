{
  "mappings" : [ {
    "id" : "1ab9bee5-ccef-3875-aefe-4ff9a03284f6",
    "name" : "Download zip of \"what the server sees\" (application/json)",
    "request" : {
      "urlPath" : "/uploads/cf2f366c-0e09-4076-afe2-96832ecabcb6/download",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"code\" : 500,\n  \"detail\" : \"Internal server error\",\n  \"title\" : \"Internal server error\",\n  \"status\" : 500\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1ab9bee5-ccef-3875-aefe-4ff9a03284f6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getBenefitsDocumentUploadDownload",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "Unambiguous status code. Only present if status = \"error\"\n\n* `DOC101` - Invalid multipart payload provided - not a multipart, or missing one or more required parts.\n* `DOC102` - Invalid metadata - not parseable as JSON, incorrect fields, etc.\n* `DOC103` - Invalid content - not parseable as PDF. Detail field will indicate which document or attachment part was affected.\n* `DOC104` - Upload rejected by upstream system. Processing failed and upload must be resubmitted. Detail field will indicate nature of rejection.\n* `DOC105` - Invalid or unknown id\n* `DOC106` - File size limit exceeded. Each document may be a maximum of 100MB.\n* `DOC107` - Empty payload.\n* `DOC108` - Maximum dimensions exceeded. Height and width must be less than 21 in x 21 in.\n* `DOC201` - Upload server error.\n* `DOC202` - Error during processing by upstream system. Processing failed and upload must be resubmitted. Detail field will provide additional details where available.\n",
                "example" : 500,
                "type" : "string"
              },
              "detail" : {
                "description" : "Human readable error detail. Only present if status = \"error\"",
                "example" : "Internal server error",
                "type" : "string"
              },
              "status" : {
                "description" : "Unambiguous status code. Only present if status = \"error\"\n\n* `DOC101` - Invalid multipart payload provided - not a multipart, or missing one or more required parts.\n* `DOC102` - Invalid metadata - not parseable as JSON, incorrect fields, etc.\n* `DOC103` - Invalid content - not parseable as PDF. Detail field will indicate which document or attachment part was affected.\n* `DOC104` - Upload rejected by upstream system. Processing failed and upload must be resubmitted. Detail field will indicate nature of rejection.\n* `DOC105` - Invalid or unknown id\n* `DOC106` - File size limit exceeded. Each document may be a maximum of 100MB.\n* `DOC107` - Empty payload.\n* `DOC108` - Maximum dimensions exceeded. Height and width must be less than 21 in x 21 in.\n* `DOC201` - Upload server error.\n* `DOC202` - Error during processing by upstream system. Processing failed and upload must be resubmitted. Detail field will provide additional details where available.\n",
                "example" : 500,
                "type" : "string"
              },
              "title" : {
                "description" : "Human readable title description.",
                "example" : "Internal server error",
                "type" : "string"
              }
            },
            "required" : [ "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "52858c1e-974e-3574-b3c7-1aa514647ec9",
    "name" : "Download zip of \"what the server sees\" (application/json)",
    "request" : {
      "urlPath" : "/uploads/5c480afa-7bcf-4053-b637-e5f724d8f616/download",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 429,
      "body" : "{\n  \"Message\" : \"API rate limit exceeded\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "52858c1e-974e-3574-b3c7-1aa514647ec9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getBenefitsDocumentUploadDownload",
          "schema" : {
            "properties" : {
              "Message" : {
                "description" : "message",
                "example" : "API rate limit exceeded",
                "type" : "string"
              }
            },
            "required" : [ "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "85c32f8f-941e-3d0b-9ab4-3d37e28565c9",
    "name" : "Download zip of \"what the server sees\" (application/json)",
    "request" : {
      "urlPath" : "/uploads/8bf28faa-5de5-453a-a476-9fc0b3c30b82/download",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : 404,\n  \"detail\" : \"The record identified by {{id}} could not be found\",\n  \"title\" : \"Record not found\",\n  \"status\" : 404\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "85c32f8f-941e-3d0b-9ab4-3d37e28565c9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getBenefitsDocumentUploadDownload",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "Unambiguous status code. Only present if status = \"error\"\n\n* `DOC101` - Invalid multipart payload provided - not a multipart, or missing one or more required parts.\n* `DOC102` - Invalid metadata - not parseable as JSON, incorrect fields, etc.\n* `DOC103` - Invalid content - not parseable as PDF. Detail field will indicate which document or attachment part was affected.\n* `DOC104` - Upload rejected by upstream system. Processing failed and upload must be resubmitted. Detail field will indicate nature of rejection.\n* `DOC105` - Invalid or unknown id\n* `DOC106` - File size limit exceeded. Each document may be a maximum of 100MB.\n* `DOC107` - Empty payload.\n* `DOC108` - Maximum dimensions exceeded. Height and width must be less than 21 in x 21 in.\n* `DOC201` - Upload server error.\n* `DOC202` - Error during processing by upstream system. Processing failed and upload must be resubmitted. Detail field will provide additional details where available.\n",
                "example" : 404,
                "type" : "string"
              },
              "detail" : {
                "description" : "Human readable error detail. Only present if status = \"error\"",
                "example" : "The record identified by {{id}} could not be found",
                "type" : "string"
              },
              "status" : {
                "description" : "Unambiguous status code. Only present if status = \"error\"\n\n* `DOC101` - Invalid multipart payload provided - not a multipart, or missing one or more required parts.\n* `DOC102` - Invalid metadata - not parseable as JSON, incorrect fields, etc.\n* `DOC103` - Invalid content - not parseable as PDF. Detail field will indicate which document or attachment part was affected.\n* `DOC104` - Upload rejected by upstream system. Processing failed and upload must be resubmitted. Detail field will indicate nature of rejection.\n* `DOC105` - Invalid or unknown id\n* `DOC106` - File size limit exceeded. Each document may be a maximum of 100MB.\n* `DOC107` - Empty payload.\n* `DOC108` - Maximum dimensions exceeded. Height and width must be less than 21 in x 21 in.\n* `DOC201` - Upload server error.\n* `DOC202` - Error during processing by upstream system. Processing failed and upload must be resubmitted. Detail field will provide additional details where available.\n",
                "example" : 404,
                "type" : "string"
              },
              "title" : {
                "description" : "Human readable title description.",
                "example" : "Record not found",
                "type" : "string"
              }
            },
            "required" : [ "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "7e5aa580-59da-3684-8817-f539407beecc",
    "name" : "Download zip of \"what the server sees\" (application/json)",
    "request" : {
      "urlPath" : "/uploads/b5dee108-1bbf-4a6e-9177-7ef3fe4c2cac/download",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"Message\" : \"Invalid authentication credentials\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7e5aa580-59da-3684-8817-f539407beecc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getBenefitsDocumentUploadDownload",
          "schema" : {
            "properties" : {
              "Message" : {
                "description" : "Error detail",
                "example" : "Invalid authentication credentials",
                "type" : "string"
              }
            },
            "required" : [ "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "ebec17ba-f43b-3e7a-b0fa-fcea0e288325",
    "name" : "Download zip of \"what the server sees\" (application/json)",
    "request" : {
      "urlPath" : "/uploads/4226c2cb-d8df-4243-a20a-686ab2d022bf/download",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"Message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ebec17ba-f43b-3e7a-b0fa-fcea0e288325",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getBenefitsDocumentUploadDownload",
          "schema" : {
            "properties" : {
              "Message" : {
                "description" : "Error detail",
                "example" : "Unauthorized Request",
                "type" : "string"
              }
            },
            "required" : [ "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "57b36dfa-a57e-374b-9757-85945babf270",
    "name" : "Download zip of \"what the server sees\" (application/zip)",
    "request" : {
      "urlPath" : "/uploads/83b56cb8-2087-4039-b688-72ef51df063d/download",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/zip"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"Binary File\"",
      "headers" : {
        "Content-Type" : "application/zip"
      }
    },
    "uuid" : "57b36dfa-a57e-374b-9757-85945babf270",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getBenefitsDocumentUploadDownload",
          "schema" : {
            "example" : "Binary File",
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "82246ee2-629e-3b0b-ad05-b846acaf9882",
    "name" : "Get status for a previous benefits document upload",
    "request" : {
      "urlPath" : "/uploads/4a24fc31-19f6-4619-90b5-19ea55780411",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"code\" : 500,\n  \"detail\" : \"Internal server error\",\n  \"title\" : \"Internal server error\",\n  \"status\" : 500\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "82246ee2-629e-3b0b-ad05-b846acaf9882",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getBenefitsDocumentUploadStatus",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "Unambiguous status code. Only present if status = \"error\"\n\n* `DOC101` - Invalid multipart payload provided - not a multipart, or missing one or more required parts.\n* `DOC102` - Invalid metadata - not parseable as JSON, incorrect fields, etc.\n* `DOC103` - Invalid content - not parseable as PDF. Detail field will indicate which document or attachment part was affected.\n* `DOC104` - Upload rejected by upstream system. Processing failed and upload must be resubmitted. Detail field will indicate nature of rejection.\n* `DOC105` - Invalid or unknown id\n* `DOC106` - File size limit exceeded. Each document may be a maximum of 100MB.\n* `DOC107` - Empty payload.\n* `DOC108` - Maximum dimensions exceeded. Height and width must be less than 21 in x 21 in.\n* `DOC201` - Upload server error.\n* `DOC202` - Error during processing by upstream system. Processing failed and upload must be resubmitted. Detail field will provide additional details where available.\n",
                "example" : 500,
                "type" : "string"
              },
              "detail" : {
                "description" : "Human readable error detail. Only present if status = \"error\"",
                "example" : "Internal server error",
                "type" : "string"
              },
              "status" : {
                "description" : "Unambiguous status code. Only present if status = \"error\"\n\n* `DOC101` - Invalid multipart payload provided - not a multipart, or missing one or more required parts.\n* `DOC102` - Invalid metadata - not parseable as JSON, incorrect fields, etc.\n* `DOC103` - Invalid content - not parseable as PDF. Detail field will indicate which document or attachment part was affected.\n* `DOC104` - Upload rejected by upstream system. Processing failed and upload must be resubmitted. Detail field will indicate nature of rejection.\n* `DOC105` - Invalid or unknown id\n* `DOC106` - File size limit exceeded. Each document may be a maximum of 100MB.\n* `DOC107` - Empty payload.\n* `DOC108` - Maximum dimensions exceeded. Height and width must be less than 21 in x 21 in.\n* `DOC201` - Upload server error.\n* `DOC202` - Error during processing by upstream system. Processing failed and upload must be resubmitted. Detail field will provide additional details where available.\n",
                "example" : 500,
                "type" : "string"
              },
              "title" : {
                "description" : "Human readable title description.",
                "example" : "Internal server error",
                "type" : "string"
              }
            },
            "required" : [ "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "4fb97433-5ebe-3135-be69-282fa8882db9",
    "name" : "Get status for a previous benefits document upload",
    "request" : {
      "urlPath" : "/uploads/3b2f65c9-5ff0-4441-92dc-806df883d2b9",
      "method" : "GET"
    },
    "response" : {
      "status" : 429,
      "body" : "{\n  \"Message\" : \"API rate limit exceeded\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4fb97433-5ebe-3135-be69-282fa8882db9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getBenefitsDocumentUploadStatus",
          "schema" : {
            "properties" : {
              "Message" : {
                "description" : "message",
                "example" : "API rate limit exceeded",
                "type" : "string"
              }
            },
            "required" : [ "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "6431b199-d366-3271-8427-7f8dea1f2352",
    "name" : "Get status for a previous benefits document upload",
    "request" : {
      "urlPath" : "/uploads/f7adffcf-7bd5-4041-aaf7-6fbded1580a8",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : 404,\n  \"detail\" : \"The record identified by {{id}} could not be found\",\n  \"title\" : \"Record not found\",\n  \"status\" : 404\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6431b199-d366-3271-8427-7f8dea1f2352",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getBenefitsDocumentUploadStatus",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "Unambiguous status code. Only present if status = \"error\"\n\n* `DOC101` - Invalid multipart payload provided - not a multipart, or missing one or more required parts.\n* `DOC102` - Invalid metadata - not parseable as JSON, incorrect fields, etc.\n* `DOC103` - Invalid content - not parseable as PDF. Detail field will indicate which document or attachment part was affected.\n* `DOC104` - Upload rejected by upstream system. Processing failed and upload must be resubmitted. Detail field will indicate nature of rejection.\n* `DOC105` - Invalid or unknown id\n* `DOC106` - File size limit exceeded. Each document may be a maximum of 100MB.\n* `DOC107` - Empty payload.\n* `DOC108` - Maximum dimensions exceeded. Height and width must be less than 21 in x 21 in.\n* `DOC201` - Upload server error.\n* `DOC202` - Error during processing by upstream system. Processing failed and upload must be resubmitted. Detail field will provide additional details where available.\n",
                "example" : 404,
                "type" : "string"
              },
              "detail" : {
                "description" : "Human readable error detail. Only present if status = \"error\"",
                "example" : "The record identified by {{id}} could not be found",
                "type" : "string"
              },
              "status" : {
                "description" : "Unambiguous status code. Only present if status = \"error\"\n\n* `DOC101` - Invalid multipart payload provided - not a multipart, or missing one or more required parts.\n* `DOC102` - Invalid metadata - not parseable as JSON, incorrect fields, etc.\n* `DOC103` - Invalid content - not parseable as PDF. Detail field will indicate which document or attachment part was affected.\n* `DOC104` - Upload rejected by upstream system. Processing failed and upload must be resubmitted. Detail field will indicate nature of rejection.\n* `DOC105` - Invalid or unknown id\n* `DOC106` - File size limit exceeded. Each document may be a maximum of 100MB.\n* `DOC107` - Empty payload.\n* `DOC108` - Maximum dimensions exceeded. Height and width must be less than 21 in x 21 in.\n* `DOC201` - Upload server error.\n* `DOC202` - Error during processing by upstream system. Processing failed and upload must be resubmitted. Detail field will provide additional details where available.\n",
                "example" : 404,
                "type" : "string"
              },
              "title" : {
                "description" : "Human readable title description.",
                "example" : "Record not found",
                "type" : "string"
              }
            },
            "required" : [ "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "34d47b5a-ff70-3cad-a9d3-75c02b934a17",
    "name" : "Get status for a previous benefits document upload",
    "request" : {
      "urlPath" : "/uploads/37e0f267-c105-4b3b-ad69-34e956bd45b5",
      "method" : "GET"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"Message\" : \"Invalid authentication credentials\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "34d47b5a-ff70-3cad-a9d3-75c02b934a17",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getBenefitsDocumentUploadStatus",
          "schema" : {
            "properties" : {
              "Message" : {
                "description" : "Error detail",
                "example" : "Invalid authentication credentials",
                "type" : "string"
              }
            },
            "required" : [ "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "e61ac46f-70b9-3dee-85d1-37bfe8fba6f9",
    "name" : "Get status for a previous benefits document upload",
    "request" : {
      "urlPath" : "/uploads/40ed76e5-f9bc-4627-ae1d-76b7850e7406",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"Message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e61ac46f-70b9-3dee-85d1-37bfe8fba6f9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getBenefitsDocumentUploadStatus",
          "schema" : {
            "properties" : {
              "Message" : {
                "description" : "Error detail",
                "example" : "Unauthorized Request",
                "type" : "string"
              }
            },
            "required" : [ "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "e9cfff8d-f4a6-3075-98b2-1d8b204d9c43",
    "name" : "Get status for a previous benefits document upload",
    "request" : {
      "urlPath" : "/uploads/e6d915dc-cd88-43c1-9e65-ab40bc013107",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"data\" : {\n    \"attributes\" : {\n      \"code\" : \"uqlejdua5melgevybnfloilm83sme7i1e1wx0k1y6trufwp0lqfh16wrwcqedg5d3r1jh6y8p0ai7lislgf2td0vii04gll6ccggo8hr1ykn9vqbcwmsz8zm0ietnaajlr\",\n      \"updated_at\" : \"2018-07-30T17:31:15.958Z\",\n      \"guid\" : \"6d8433c1-cd55-4c24-affd-f592287a7572\",\n      \"detail\" : \"q7mfgadafcmnk5xj1nqfgbnwjdnvwww9hwt0epm1ghc0azsixbo21yv0sqbgkula90svnhya9jk6sukpx42anfgggd7ymsskdsc88c5bptt7vv8073qz3ya3nbbnmom1erlx3c7bi0lg9clwgc\",\n      \"message\" : \"Culpa ab atque. Error inventore id vero. Excepturi unde non beatae reprehenderit asperiores modi quibusdam. Deleniti assumenda qui est vero consequatur.\",\n      \"uploaded_pdf\" : {\n        \"total_documents\" : \"2\",\n        \"total_pages\" : \"3\",\n        \"content\" : {\n          \"attachments\" : [ { }, { } ],\n          \"page_count\" : \"1\",\n          \"dimensions\" : {\n            \"width\" : \"8.5\",\n            \"oversized_pdf\" : \"false\",\n            \"height\" : \"11.0\"\n          }\n        }\n      },\n      \"status\" : \"received\"\n    },\n    \"id\" : \"6d8433c1-cd55-4c24-affd-f592287a7572\",\n    \"type\" : \"document_upload\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e9cfff8d-f4a6-3075-98b2-1d8b204d9c43",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getBenefitsDocumentUploadStatus",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/DocumentUploadStatus"
              }
            },
            "required" : [ "data" ]
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "98c27799-4548-3228-bee2-924c29e88f18",
    "name" : "Validate an individual document against system file requirements",
    "request" : {
      "urlPath" : "/uploads/validate_document",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"code\" : 500,\n  \"detail\" : \"Internal server error\",\n  \"title\" : \"Internal server error\",\n  \"status\" : 500\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "98c27799-4548-3228-bee2-924c29e88f18",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "postBenefitsDocumentUploadValidateDocument",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "Unambiguous status code. Only present if status = \"error\"\n\n* `DOC101` - Invalid multipart payload provided - not a multipart, or missing one or more required parts.\n* `DOC102` - Invalid metadata - not parseable as JSON, incorrect fields, etc.\n* `DOC103` - Invalid content - not parseable as PDF. Detail field will indicate which document or attachment part was affected.\n* `DOC104` - Upload rejected by upstream system. Processing failed and upload must be resubmitted. Detail field will indicate nature of rejection.\n* `DOC105` - Invalid or unknown id\n* `DOC106` - File size limit exceeded. Each document may be a maximum of 100MB.\n* `DOC107` - Empty payload.\n* `DOC108` - Maximum dimensions exceeded. Height and width must be less than 21 in x 21 in.\n* `DOC201` - Upload server error.\n* `DOC202` - Error during processing by upstream system. Processing failed and upload must be resubmitted. Detail field will provide additional details where available.\n",
                "example" : 500,
                "type" : "string"
              },
              "detail" : {
                "description" : "Human readable error detail. Only present if status = \"error\"",
                "example" : "Internal server error",
                "type" : "string"
              },
              "status" : {
                "description" : "Unambiguous status code. Only present if status = \"error\"\n\n* `DOC101` - Invalid multipart payload provided - not a multipart, or missing one or more required parts.\n* `DOC102` - Invalid metadata - not parseable as JSON, incorrect fields, etc.\n* `DOC103` - Invalid content - not parseable as PDF. Detail field will indicate which document or attachment part was affected.\n* `DOC104` - Upload rejected by upstream system. Processing failed and upload must be resubmitted. Detail field will indicate nature of rejection.\n* `DOC105` - Invalid or unknown id\n* `DOC106` - File size limit exceeded. Each document may be a maximum of 100MB.\n* `DOC107` - Empty payload.\n* `DOC108` - Maximum dimensions exceeded. Height and width must be less than 21 in x 21 in.\n* `DOC201` - Upload server error.\n* `DOC202` - Error during processing by upstream system. Processing failed and upload must be resubmitted. Detail field will provide additional details where available.\n",
                "example" : 500,
                "type" : "string"
              },
              "title" : {
                "description" : "Human readable title description.",
                "example" : "Internal server error",
                "type" : "string"
              }
            },
            "required" : [ "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "6d6fcce6-a29e-368f-889e-ccde8c087364",
    "name" : "Validate an individual document against system file requirements",
    "request" : {
      "urlPath" : "/uploads/validate_document",
      "method" : "POST"
    },
    "response" : {
      "status" : 429,
      "body" : "{\n  \"Message\" : \"API rate limit exceeded\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6d6fcce6-a29e-368f-889e-ccde8c087364",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "postBenefitsDocumentUploadValidateDocument",
          "schema" : {
            "properties" : {
              "Message" : {
                "description" : "message",
                "example" : "API rate limit exceeded",
                "type" : "string"
              }
            },
            "required" : [ "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "7b025f0e-bc04-3747-80ad-173ab9caa590",
    "name" : "Validate an individual document against system file requirements",
    "request" : {
      "urlPath" : "/uploads/validate_document",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"errors\" : [ {\n    \"detail\" : \"Document is locked with a user password\",\n    \"title\" : \"Document failed validation\",\n    \"status\" : \"422\"\n  }, {\n    \"detail\" : \"Document is locked with a user password\",\n    \"title\" : \"Document failed validation\",\n    \"status\" : \"422\"\n  }, {\n    \"detail\" : \"Document is locked with a user password\",\n    \"title\" : \"Document failed validation\",\n    \"status\" : \"422\"\n  }, {\n    \"detail\" : \"Document is locked with a user password\",\n    \"title\" : \"Document failed validation\",\n    \"status\" : \"422\"\n  }, {\n    \"detail\" : \"Document is locked with a user password\",\n    \"title\" : \"Document failed validation\",\n    \"status\" : \"422\"\n  }, {\n    \"detail\" : \"Document is locked with a user password\",\n    \"title\" : \"Document failed validation\",\n    \"status\" : \"422\"\n  }, {\n    \"detail\" : \"Document is locked with a user password\",\n    \"title\" : \"Document failed validation\",\n    \"status\" : \"422\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7b025f0e-bc04-3747-80ad-173ab9caa590",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "postBenefitsDocumentUploadValidateDocument",
          "schema" : {
            "properties" : {
              "errors" : {
                "items" : {
                  "$ref" : "#/components/schemas/DocumentValidationErrorModel"
                },
                "type" : "array"
              }
            },
            "required" : [ "errors" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "c8c30ce8-fafd-31e7-a534-d7409e5e79df",
    "name" : "Validate an individual document against system file requirements",
    "request" : {
      "urlPath" : "/uploads/validate_document",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"Message\" : \"Invalid authentication credentials\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c8c30ce8-fafd-31e7-a534-d7409e5e79df",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "postBenefitsDocumentUploadValidateDocument",
          "schema" : {
            "properties" : {
              "Message" : {
                "description" : "Error detail",
                "example" : "Invalid authentication credentials",
                "type" : "string"
              }
            },
            "required" : [ "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "2326b09e-2973-3441-98e5-f83876ecf112",
    "name" : "Validate an individual document against system file requirements",
    "request" : {
      "urlPath" : "/uploads/validate_document",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"Message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2326b09e-2973-3441-98e5-f83876ecf112",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "postBenefitsDocumentUploadValidateDocument",
          "schema" : {
            "properties" : {
              "Message" : {
                "description" : "Error detail",
                "example" : "Unauthorized Request",
                "type" : "string"
              }
            },
            "required" : [ "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "74d12861-084d-3514-b216-4580289f413b",
    "name" : "Validate an individual document against system file requirements",
    "request" : {
      "urlPath" : "/uploads/validate_document",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"data\" : {\n    \"attributes\" : {\n      \"status\" : \"valid\"\n    },\n    \"type\" : \"documentValidation\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "74d12861-084d-3514-b216-4580289f413b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "postBenefitsDocumentUploadValidateDocument",
          "schema" : {
            "properties" : {
              "data" : {
                "properties" : {
                  "attributes" : {
                    "properties" : {
                      "status" : {
                        "example" : "valid",
                        "type" : "string"
                      }
                    },
                    "type" : "object"
                  },
                  "type" : {
                    "description" : "schema type",
                    "example" : "documentValidation",
                    "type" : "string"
                  }
                }
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "848eb30a-84df-3532-b67c-55d5b858b57b",
    "name" : "Get a bulk status report for a list of previous uploads (application/json)",
    "request" : {
      "urlPath" : "/uploads/report",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"code\" : 500,\n  \"detail\" : \"Internal server error\",\n  \"title\" : \"Internal server error\",\n  \"status\" : 500\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "848eb30a-84df-3532-b67c-55d5b858b57b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getBenefitsDocumentUploadStatusReport",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "Unambiguous status code. Only present if status = \"error\"\n\n* `DOC101` - Invalid multipart payload provided - not a multipart, or missing one or more required parts.\n* `DOC102` - Invalid metadata - not parseable as JSON, incorrect fields, etc.\n* `DOC103` - Invalid content - not parseable as PDF. Detail field will indicate which document or attachment part was affected.\n* `DOC104` - Upload rejected by upstream system. Processing failed and upload must be resubmitted. Detail field will indicate nature of rejection.\n* `DOC105` - Invalid or unknown id\n* `DOC106` - File size limit exceeded. Each document may be a maximum of 100MB.\n* `DOC107` - Empty payload.\n* `DOC108` - Maximum dimensions exceeded. Height and width must be less than 21 in x 21 in.\n* `DOC201` - Upload server error.\n* `DOC202` - Error during processing by upstream system. Processing failed and upload must be resubmitted. Detail field will provide additional details where available.\n",
                "example" : 500,
                "type" : "string"
              },
              "detail" : {
                "description" : "Human readable error detail. Only present if status = \"error\"",
                "example" : "Internal server error",
                "type" : "string"
              },
              "status" : {
                "description" : "Unambiguous status code. Only present if status = \"error\"\n\n* `DOC101` - Invalid multipart payload provided - not a multipart, or missing one or more required parts.\n* `DOC102` - Invalid metadata - not parseable as JSON, incorrect fields, etc.\n* `DOC103` - Invalid content - not parseable as PDF. Detail field will indicate which document or attachment part was affected.\n* `DOC104` - Upload rejected by upstream system. Processing failed and upload must be resubmitted. Detail field will indicate nature of rejection.\n* `DOC105` - Invalid or unknown id\n* `DOC106` - File size limit exceeded. Each document may be a maximum of 100MB.\n* `DOC107` - Empty payload.\n* `DOC108` - Maximum dimensions exceeded. Height and width must be less than 21 in x 21 in.\n* `DOC201` - Upload server error.\n* `DOC202` - Error during processing by upstream system. Processing failed and upload must be resubmitted. Detail field will provide additional details where available.\n",
                "example" : 500,
                "type" : "string"
              },
              "title" : {
                "description" : "Human readable title description.",
                "example" : "Internal server error",
                "type" : "string"
              }
            },
            "required" : [ "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "4442a0ca-2605-35fd-b029-8385c306af76",
    "name" : "Get a bulk status report for a list of previous uploads (application/json)",
    "request" : {
      "urlPath" : "/uploads/report",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 429,
      "body" : "{\n  \"Message\" : \"API rate limit exceeded\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4442a0ca-2605-35fd-b029-8385c306af76",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getBenefitsDocumentUploadStatusReport",
          "schema" : {
            "properties" : {
              "Message" : {
                "description" : "message",
                "example" : "API rate limit exceeded",
                "type" : "string"
              }
            },
            "required" : [ "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "ffc94394-a518-3472-a0bd-cf90b43422c1",
    "name" : "Get a bulk status report for a list of previous uploads (application/json)",
    "request" : {
      "urlPath" : "/uploads/report",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"errors\" : [ {\n    \"detail\" : \"DOC104 - Upload rejected by upstream system. Processing failed and upload must be resubmitted\",\n    \"status\" : \"422\"\n  }, {\n    \"detail\" : \"DOC104 - Upload rejected by upstream system. Processing failed and upload must be resubmitted\",\n    \"status\" : \"422\"\n  }, {\n    \"detail\" : \"DOC104 - Upload rejected by upstream system. Processing failed and upload must be resubmitted\",\n    \"status\" : \"422\"\n  }, {\n    \"detail\" : \"DOC104 - Upload rejected by upstream system. Processing failed and upload must be resubmitted\",\n    \"status\" : \"422\"\n  }, {\n    \"detail\" : \"DOC104 - Upload rejected by upstream system. Processing failed and upload must be resubmitted\",\n    \"status\" : \"422\"\n  }, {\n    \"detail\" : \"DOC104 - Upload rejected by upstream system. Processing failed and upload must be resubmitted\",\n    \"status\" : \"422\"\n  }, {\n    \"detail\" : \"DOC104 - Upload rejected by upstream system. Processing failed and upload must be resubmitted\",\n    \"status\" : \"422\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ffc94394-a518-3472-a0bd-cf90b43422c1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getBenefitsDocumentUploadStatusReport",
          "schema" : {
            "properties" : {
              "errors" : {
                "items" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "type" : "array"
              }
            },
            "required" : [ "errors" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "6650b374-22a6-30f7-a508-31138bdfb704",
    "name" : "Get a bulk status report for a list of previous uploads (application/json)",
    "request" : {
      "urlPath" : "/uploads/report",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"Message\" : \"Invalid authentication credentials\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6650b374-22a6-30f7-a508-31138bdfb704",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getBenefitsDocumentUploadStatusReport",
          "schema" : {
            "properties" : {
              "Message" : {
                "description" : "Error detail",
                "example" : "Invalid authentication credentials",
                "type" : "string"
              }
            },
            "required" : [ "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "ee9d5979-6e37-344b-abc3-b46e028185f6",
    "name" : "Get a bulk status report for a list of previous uploads (application/json)",
    "request" : {
      "urlPath" : "/uploads/report",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"Message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ee9d5979-6e37-344b-abc3-b46e028185f6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getBenefitsDocumentUploadStatusReport",
          "schema" : {
            "properties" : {
              "Message" : {
                "description" : "Error detail",
                "example" : "Unauthorized Request",
                "type" : "string"
              }
            },
            "required" : [ "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "4ea71f0a-518d-3c53-964e-5edc8a923b53",
    "name" : "Get a bulk status report for a list of previous uploads - 400",
    "request" : {
      "urlPath" : "/uploads/report",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "4ea71f0a-518d-3c53-964e-5edc8a923b53",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getBenefitsDocumentUploadStatusReport"
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "d1a9348f-dc2c-3a35-9677-87d28d7fab9a",
    "name" : "Get a bulk status report for a list of previous uploads (application/json)",
    "request" : {
      "urlPath" : "/uploads/report",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"data\" : [ {\n    \"attributes\" : {\n      \"code\" : \"3kr44x2ywf1avhypwkl0oystpvi5tu90kha1wuukwocx86unfnb7cuecrskdwskeqvsnh7ohemr307ticlhtg3tpdd49ju46sr3awr8n1zkev5k19mzzurkw3mg26uy23vcnz64wumwtc0j60z4ok4cxk8uvpk6ck9wp86ph530ti8\",\n      \"updated_at\" : \"2018-07-30T17:31:15.958Z\",\n      \"guid\" : \"6d8433c1-cd55-4c24-affd-f592287a7572\",\n      \"detail\" : \"6g4uqgcskng8w9xwy6a0izr0veah4cm7psj34e8rwdbr8uevgn6jsh52ubbsj8zvnidd\",\n      \"message\" : \"Vitae rerum provident officiis quam nobis est. Est doloribus aperiam voluptas debitis molestiae. Deserunt ut voluptate nisi animi facere.\",\n      \"uploaded_pdf\" : {\n        \"total_documents\" : \"2\",\n        \"total_pages\" : \"3\",\n        \"content\" : {\n          \"attachments\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n          \"page_count\" : \"1\",\n          \"dimensions\" : {\n            \"width\" : \"8.5\",\n            \"oversized_pdf\" : \"false\",\n            \"height\" : \"11.0\"\n          }\n        }\n      },\n      \"status\" : \"received\"\n    },\n    \"id\" : \"6d8433c1-cd55-4c24-affd-f592287a7572\",\n    \"type\" : \"document_upload\"\n  }, {\n    \"attributes\" : {\n      \"code\" : \"mh2e87u62otaj0gdf7vhekewk03m0vfjyyfailprbkcughcty6ksne3xzmtmmozcqkd9vn1u8xiv4\",\n      \"updated_at\" : \"2018-07-30T17:31:15.958Z\",\n      \"guid\" : \"6d8433c1-cd55-4c24-affd-f592287a7572\",\n      \"detail\" : \"k1w11e04n29hvgahamezyuoba2pqjj6pazx7inbeu4cmgwuwjx72n5j9v539qg59n1kpzi3ghvi\",\n      \"message\" : \"Exercitationem ut nam occaecati ex aliquid. Id voluptates ea deserunt adipisci corrupti. Amet aut dicta libero iste. Recusandae eveniet at aut consequuntur.\",\n      \"uploaded_pdf\" : {\n        \"total_documents\" : \"2\",\n        \"total_pages\" : \"3\",\n        \"content\" : {\n          \"attachments\" : [ { }, { }, { }, { } ],\n          \"page_count\" : \"1\",\n          \"dimensions\" : {\n            \"width\" : \"8.5\",\n            \"oversized_pdf\" : \"false\",\n            \"height\" : \"11.0\"\n          }\n        }\n      },\n      \"status\" : \"received\"\n    },\n    \"id\" : \"6d8433c1-cd55-4c24-affd-f592287a7572\",\n    \"type\" : \"document_upload\"\n  }, {\n    \"attributes\" : {\n      \"code\" : \"5z8z52hxca6i9rt3ghn7lytkfyhp99dfouzghgaxh2c8rtdsxljp7gltgbe1jbzush6wpvkhcd2bmkwe0idxu8rp62upcf11wprhkw8lpcd7l6mjzcjr28q3vm9vb6bgm9ctjd2q0jc082m9km7j02cs5d9kc3q6kjcuh9acda7uc51shx81r9ivax\",\n      \"updated_at\" : \"2018-07-30T17:31:15.958Z\",\n      \"guid\" : \"6d8433c1-cd55-4c24-affd-f592287a7572\",\n      \"detail\" : \"7kq7g91tt4vnpqx35xnznq40vs890avn0re6lc5vgigs7i4yf3puxc14zv480y4eskhh94t16v9na4n1u5s3h0sgdgqfue67vgdhtpnt8kor9vxhmg43qff28dll3yiulvsi0r4ti4zxdhchnfrx8dq\",\n      \"message\" : \"Qui id totam cumque eum exercitationem libero voluptas. Ipsum eligendi dolorem qui. Omnis velit a temporibus.\",\n      \"uploaded_pdf\" : {\n        \"total_documents\" : \"2\",\n        \"total_pages\" : \"3\",\n        \"content\" : {\n          \"attachments\" : [ { }, { }, { }, { }, { }, { }, { } ],\n          \"page_count\" : \"1\",\n          \"dimensions\" : {\n            \"width\" : \"8.5\",\n            \"oversized_pdf\" : \"false\",\n            \"height\" : \"11.0\"\n          }\n        }\n      },\n      \"status\" : \"received\"\n    },\n    \"id\" : \"6d8433c1-cd55-4c24-affd-f592287a7572\",\n    \"type\" : \"document_upload\"\n  }, {\n    \"attributes\" : {\n      \"code\" : \"omj6ephjidyl6wmljeriu2028m6hp8cvo9z10s8k416uz0e1iu6msven59les0zem39rw032ssazci64hu1jnmqzy9iow0l9r277ikxpf2mjl52wkqy8hgn\",\n      \"updated_at\" : \"2018-07-30T17:31:15.958Z\",\n      \"guid\" : \"6d8433c1-cd55-4c24-affd-f592287a7572\",\n      \"detail\" : \"m1i91y0zjrem6bdkw9q3go69lqod3y993tqgrd1yd1afidgbiudlud27xlcjto1gko0m76k\",\n      \"message\" : \"Rerum ipsam quasi eum voluptatem inventore explicabo id. Possimus dolorum laudantium molestiae sit temporibus. Quia debitis alias.\",\n      \"uploaded_pdf\" : {\n        \"total_documents\" : \"2\",\n        \"total_pages\" : \"3\",\n        \"content\" : {\n          \"attachments\" : [ { }, { } ],\n          \"page_count\" : \"1\",\n          \"dimensions\" : {\n            \"width\" : \"8.5\",\n            \"oversized_pdf\" : \"false\",\n            \"height\" : \"11.0\"\n          }\n        }\n      },\n      \"status\" : \"received\"\n    },\n    \"id\" : \"6d8433c1-cd55-4c24-affd-f592287a7572\",\n    \"type\" : \"document_upload\"\n  }, {\n    \"attributes\" : {\n      \"code\" : \"2t7x3squwya7r000ub815oq5l93f7cqwd7q5d0hmbcbo0cpk5yli3fqtthe0cxdmioyziac4hp1iaq2ytngwx9t63ok8blvmu5xq75fgvykgkqy0hd13se2eb6ylprsvktp3nan2pk5e2mq03scghni78l2ixx9cqsg\",\n      \"updated_at\" : \"2018-07-30T17:31:15.958Z\",\n      \"guid\" : \"6d8433c1-cd55-4c24-affd-f592287a7572\",\n      \"detail\" : \"udpnc45cj080s866ev8o245pcd8lm0zfw0cr5s5vuh50wja6wu6gnwonc6n36c1nimaxn9buogrhwvq766lq33efq79nuiz2zxbw2ifk3bm\",\n      \"message\" : \"Quae voluptatem provident. Vel aut placeat cum ut minima ut laborum. Natus voluptatum tempora dignissimos dolorem officiis.\",\n      \"uploaded_pdf\" : {\n        \"total_documents\" : \"2\",\n        \"total_pages\" : \"3\",\n        \"content\" : {\n          \"attachments\" : [ { }, { }, { }, { }, { }, { }, { } ],\n          \"page_count\" : \"1\",\n          \"dimensions\" : {\n            \"width\" : \"8.5\",\n            \"oversized_pdf\" : \"false\",\n            \"height\" : \"11.0\"\n          }\n        }\n      },\n      \"status\" : \"received\"\n    },\n    \"id\" : \"6d8433c1-cd55-4c24-affd-f592287a7572\",\n    \"type\" : \"document_upload\"\n  }, {\n    \"attributes\" : {\n      \"code\" : \"otzovdwao9f8rmiazcdee2swkofzbc15ke1rov9iqp175ky19t8ogw5yblt2jfc7yki6z6fsbwu31lwqt5o5s1x8sag\",\n      \"updated_at\" : \"2018-07-30T17:31:15.958Z\",\n      \"guid\" : \"6d8433c1-cd55-4c24-affd-f592287a7572\",\n      \"detail\" : \"y2qi2kfnhzyf8k3f3zrh08dk1kegovg4rsdo0dr7vrcxwai3dcl4vw5adrzuw2p1zm6d9udddj11fp5hj5dciv9xp7gvflfvkq0msa89yo3d5hvft5ujnztbr0mnr3p6w0vbe7532w55nivs7t\",\n      \"message\" : \"Soluta voluptates alias rem totam quia. Pariatur temporibus minus sit. Officiis nam iste nesciunt est magnam saepe. Rerum atque qui doloremque autem.\",\n      \"uploaded_pdf\" : {\n        \"total_documents\" : \"2\",\n        \"total_pages\" : \"3\",\n        \"content\" : {\n          \"attachments\" : [ { }, { }, { }, { }, { } ],\n          \"page_count\" : \"1\",\n          \"dimensions\" : {\n            \"width\" : \"8.5\",\n            \"oversized_pdf\" : \"false\",\n            \"height\" : \"11.0\"\n          }\n        }\n      },\n      \"status\" : \"received\"\n    },\n    \"id\" : \"6d8433c1-cd55-4c24-affd-f592287a7572\",\n    \"type\" : \"document_upload\"\n  }, {\n    \"attributes\" : {\n      \"code\" : \"8j84xe36ou15067ixt6jibnnfxfxdonk8v2oezsouq8e8wibhcigqjwepuwd1rmh0zoegfmbxd31x52y6tmomvmsmuih9fo672p9adjhplynsxm5tsck8bzcrfj6klt1v1l68cbzryyo8k0eaoobw\",\n      \"updated_at\" : \"2018-07-30T17:31:15.958Z\",\n      \"guid\" : \"6d8433c1-cd55-4c24-affd-f592287a7572\",\n      \"detail\" : \"90lucni627ot4vwitapor4tgiixkbhsui5p3k4utkthltgajx5n0h11yqeaeoad2qmyndijeulsk3bao6qs5326wn286500p118hw9mr0qe6ppl143kx45inm2ej3614jcjhoqadeuhjk9qgr2wt\",\n      \"message\" : \"Ex suscipit et eum aut quo voluptatibus soluta. Neque minus dolore ut reprehenderit et a sed. Tenetur consequatur fugiat excepturi aut. Similique quae odio. Quos accusamus voluptas.\",\n      \"uploaded_pdf\" : {\n        \"total_documents\" : \"2\",\n        \"total_pages\" : \"3\",\n        \"content\" : {\n          \"attachments\" : [ { }, { } ],\n          \"page_count\" : \"1\",\n          \"dimensions\" : {\n            \"width\" : \"8.5\",\n            \"oversized_pdf\" : \"false\",\n            \"height\" : \"11.0\"\n          }\n        }\n      },\n      \"status\" : \"received\"\n    },\n    \"id\" : \"6d8433c1-cd55-4c24-affd-f592287a7572\",\n    \"type\" : \"document_upload\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d1a9348f-dc2c-3a35-9677-87d28d7fab9a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getBenefitsDocumentUploadStatusReport",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/DocumentUploadStatusReport"
              }
            },
            "required" : [ "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "cccd6734-4af6-3eb3-a8ff-e20a8c1e86ca",
    "name" : "Get a location for subsequent document upload PUT request",
    "request" : {
      "urlPath" : "/uploads",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"code\" : 500,\n  \"detail\" : \"Internal server error\",\n  \"title\" : \"Internal server error\",\n  \"status\" : 500\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cccd6734-4af6-3eb3-a8ff-e20a8c1e86ca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "postBenefitsDocumentUpload",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "Unambiguous status code. Only present if status = \"error\"\n\n* `DOC101` - Invalid multipart payload provided - not a multipart, or missing one or more required parts.\n* `DOC102` - Invalid metadata - not parseable as JSON, incorrect fields, etc.\n* `DOC103` - Invalid content - not parseable as PDF. Detail field will indicate which document or attachment part was affected.\n* `DOC104` - Upload rejected by upstream system. Processing failed and upload must be resubmitted. Detail field will indicate nature of rejection.\n* `DOC105` - Invalid or unknown id\n* `DOC106` - File size limit exceeded. Each document may be a maximum of 100MB.\n* `DOC107` - Empty payload.\n* `DOC108` - Maximum dimensions exceeded. Height and width must be less than 21 in x 21 in.\n* `DOC201` - Upload server error.\n* `DOC202` - Error during processing by upstream system. Processing failed and upload must be resubmitted. Detail field will provide additional details where available.\n",
                "example" : 500,
                "type" : "string"
              },
              "detail" : {
                "description" : "Human readable error detail. Only present if status = \"error\"",
                "example" : "Internal server error",
                "type" : "string"
              },
              "status" : {
                "description" : "Unambiguous status code. Only present if status = \"error\"\n\n* `DOC101` - Invalid multipart payload provided - not a multipart, or missing one or more required parts.\n* `DOC102` - Invalid metadata - not parseable as JSON, incorrect fields, etc.\n* `DOC103` - Invalid content - not parseable as PDF. Detail field will indicate which document or attachment part was affected.\n* `DOC104` - Upload rejected by upstream system. Processing failed and upload must be resubmitted. Detail field will indicate nature of rejection.\n* `DOC105` - Invalid or unknown id\n* `DOC106` - File size limit exceeded. Each document may be a maximum of 100MB.\n* `DOC107` - Empty payload.\n* `DOC108` - Maximum dimensions exceeded. Height and width must be less than 21 in x 21 in.\n* `DOC201` - Upload server error.\n* `DOC202` - Error during processing by upstream system. Processing failed and upload must be resubmitted. Detail field will provide additional details where available.\n",
                "example" : 500,
                "type" : "string"
              },
              "title" : {
                "description" : "Human readable title description.",
                "example" : "Internal server error",
                "type" : "string"
              }
            },
            "required" : [ "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "d00e8f23-e46a-323b-a4ba-087cdf29c76e",
    "name" : "Get a location for subsequent document upload PUT request",
    "request" : {
      "urlPath" : "/uploads",
      "method" : "POST"
    },
    "response" : {
      "status" : 429,
      "body" : "{\n  \"Message\" : \"API rate limit exceeded\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d00e8f23-e46a-323b-a4ba-087cdf29c76e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "postBenefitsDocumentUpload",
          "schema" : {
            "properties" : {
              "Message" : {
                "description" : "message",
                "example" : "API rate limit exceeded",
                "type" : "string"
              }
            },
            "required" : [ "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "eefca044-0b7a-3e63-a727-622c70e6132f",
    "name" : "Get a location for subsequent document upload PUT request",
    "request" : {
      "urlPath" : "/uploads",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"errors\" : [ {\n    \"detail\" : \"DOC104 - Upload rejected by upstream system. Processing failed and upload must be resubmitted\",\n    \"status\" : \"422\"\n  }, {\n    \"detail\" : \"DOC104 - Upload rejected by upstream system. Processing failed and upload must be resubmitted\",\n    \"status\" : \"422\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eefca044-0b7a-3e63-a727-622c70e6132f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "postBenefitsDocumentUpload",
          "schema" : {
            "properties" : {
              "errors" : {
                "items" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "type" : "array"
              }
            },
            "required" : [ "errors" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "e2208ff4-6388-3e52-a8aa-953ae162bc27",
    "name" : "Get a location for subsequent document upload PUT request",
    "request" : {
      "urlPath" : "/uploads",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"Message\" : \"Invalid authentication credentials\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e2208ff4-6388-3e52-a8aa-953ae162bc27",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "postBenefitsDocumentUpload",
          "schema" : {
            "properties" : {
              "Message" : {
                "description" : "Error detail",
                "example" : "Invalid authentication credentials",
                "type" : "string"
              }
            },
            "required" : [ "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "6eb0a9a6-77c6-3d6d-9668-d53493ab41ab",
    "name" : "Get a location for subsequent document upload PUT request",
    "request" : {
      "urlPath" : "/uploads",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"Message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6eb0a9a6-77c6-3d6d-9668-d53493ab41ab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "postBenefitsDocumentUpload",
          "schema" : {
            "properties" : {
              "Message" : {
                "description" : "Error detail",
                "example" : "Unauthorized Request",
                "type" : "string"
              }
            },
            "required" : [ "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "5fdf52ba-a12a-3dbe-a622-84cc755b3e31",
    "name" : "Get a location for subsequent document upload PUT request",
    "request" : {
      "urlPath" : "/uploads",
      "method" : "POST"
    },
    "response" : {
      "status" : 202,
      "body" : "{\n  \"data\" : {\n    \"attributes\" : {\n      \"code\" : \"as1djfsj45nhhmj76n1ioowscgpe2vpwedyky6uzrm5qroys4s2dwse68qvszvjzfy9dvkl12qct76g7vwdjv4zsi8bqf39vsuwmh82vsdy6yj9s2oho945oe4pboxk3vztkk51z2mp1ar3gar5g2gh4zf08qgsg9lea918449zl9lt2b\",\n      \"updated_at\" : \"2018-07-30T17:31:15.958Z\",\n      \"guid\" : \"6d8433c1-cd55-4c24-affd-f592287a7572\",\n      \"location\" : \"https://sandbox-api.va.gov/services_user_content/vba_documents/{idpath}\",\n      \"detail\" : \"qo63jdcdjp0j3ezlnbqckihezxwjddeg6vzzrltzztv8xi7bkoav42ryi6hfyhhxxvvl7hlby2rvqjqs4fxl2shi6rpmndqfxygk7mf8s38onmxzhz5\",\n      \"uploaded_pdf\" : \"null\",\n      \"status\" : \"pending\"\n    },\n    \"id\" : \"6d8433c1-cd55-4c24-affd-f592287a7572\",\n    \"type\" : \"document_upload\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5fdf52ba-a12a-3dbe-a622-84cc755b3e31",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "postBenefitsDocumentUpload",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/DocumentUploadPath"
              }
            },
            "required" : [ "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "72fc32d6-7a89-32e3-b2ee-457ab898ad07",
    "name" : "Accepts document upload. (application/json)",
    "request" : {
      "urlPath" : "/path",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"code\" : 500,\n  \"detail\" : \"Internal server error\",\n  \"title\" : \"Internal server error\",\n  \"status\" : 500\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "72fc32d6-7a89-32e3-b2ee-457ab898ad07",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "putBenefitsDocumentUpload",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "Unambiguous status code. Only present if status = \"error\"\n\n* `DOC101` - Invalid multipart payload provided - not a multipart, or missing one or more required parts.\n* `DOC102` - Invalid metadata - not parseable as JSON, incorrect fields, etc.\n* `DOC103` - Invalid content - not parseable as PDF. Detail field will indicate which document or attachment part was affected.\n* `DOC104` - Upload rejected by upstream system. Processing failed and upload must be resubmitted. Detail field will indicate nature of rejection.\n* `DOC105` - Invalid or unknown id\n* `DOC106` - File size limit exceeded. Each document may be a maximum of 100MB.\n* `DOC107` - Empty payload.\n* `DOC108` - Maximum dimensions exceeded. Height and width must be less than 21 in x 21 in.\n* `DOC201` - Upload server error.\n* `DOC202` - Error during processing by upstream system. Processing failed and upload must be resubmitted. Detail field will provide additional details where available.\n",
                "example" : 500,
                "type" : "string"
              },
              "detail" : {
                "description" : "Human readable error detail. Only present if status = \"error\"",
                "example" : "Internal server error",
                "type" : "string"
              },
              "status" : {
                "description" : "Unambiguous status code. Only present if status = \"error\"\n\n* `DOC101` - Invalid multipart payload provided - not a multipart, or missing one or more required parts.\n* `DOC102` - Invalid metadata - not parseable as JSON, incorrect fields, etc.\n* `DOC103` - Invalid content - not parseable as PDF. Detail field will indicate which document or attachment part was affected.\n* `DOC104` - Upload rejected by upstream system. Processing failed and upload must be resubmitted. Detail field will indicate nature of rejection.\n* `DOC105` - Invalid or unknown id\n* `DOC106` - File size limit exceeded. Each document may be a maximum of 100MB.\n* `DOC107` - Empty payload.\n* `DOC108` - Maximum dimensions exceeded. Height and width must be less than 21 in x 21 in.\n* `DOC201` - Upload server error.\n* `DOC202` - Error during processing by upstream system. Processing failed and upload must be resubmitted. Detail field will provide additional details where available.\n",
                "example" : 500,
                "type" : "string"
              },
              "title" : {
                "description" : "Human readable title description.",
                "example" : "Internal server error",
                "type" : "string"
              }
            },
            "required" : [ "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "8485f34e-924f-3323-9312-a6dbf06201bb",
    "name" : "Accepts document upload. (application/json)",
    "request" : {
      "urlPath" : "/path",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 429,
      "body" : "{\n  \"Message\" : \"API rate limit exceeded\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8485f34e-924f-3323-9312-a6dbf06201bb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "putBenefitsDocumentUpload",
          "schema" : {
            "properties" : {
              "Message" : {
                "description" : "message",
                "example" : "API rate limit exceeded",
                "type" : "string"
              }
            },
            "required" : [ "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "1a56bb6d-bfa7-39df-b8eb-3ef4f1350ec9",
    "name" : "Accepts document upload. (application/json)",
    "request" : {
      "urlPath" : "/path",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"errors\" : [ {\n    \"detail\" : \"DOC104 - Upload rejected by upstream system. Processing failed and upload must be resubmitted\",\n    \"status\" : \"422\"\n  }, {\n    \"detail\" : \"DOC104 - Upload rejected by upstream system. Processing failed and upload must be resubmitted\",\n    \"status\" : \"422\"\n  }, {\n    \"detail\" : \"DOC104 - Upload rejected by upstream system. Processing failed and upload must be resubmitted\",\n    \"status\" : \"422\"\n  }, {\n    \"detail\" : \"DOC104 - Upload rejected by upstream system. Processing failed and upload must be resubmitted\",\n    \"status\" : \"422\"\n  }, {\n    \"detail\" : \"DOC104 - Upload rejected by upstream system. Processing failed and upload must be resubmitted\",\n    \"status\" : \"422\"\n  }, {\n    \"detail\" : \"DOC104 - Upload rejected by upstream system. Processing failed and upload must be resubmitted\",\n    \"status\" : \"422\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1a56bb6d-bfa7-39df-b8eb-3ef4f1350ec9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "putBenefitsDocumentUpload",
          "schema" : {
            "properties" : {
              "errors" : {
                "items" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "type" : "array"
              }
            },
            "required" : [ "errors" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "cf1f8c26-9943-3f9f-a738-22bc74532758",
    "name" : "Accepts document upload. (application/xml)",
    "request" : {
      "urlPath" : "/path",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/xml"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"Message\" : \"The request signature we calculated does not match the signature you provided. Check your key and signing method.\",\n  \"Code\" : \"SignatureDoesNotMatch\"\n}",
      "headers" : {
        "Content-Type" : "application/xml"
      }
    },
    "uuid" : "cf1f8c26-9943-3f9f-a738-22bc74532758",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "putBenefitsDocumentUpload",
          "schema" : {
            "description" : "Document upload failed",
            "properties" : {
              "Code" : {
                "description" : "Error code",
                "example" : "SignatureDoesNotMatch",
                "type" : "string"
              },
              "Message" : {
                "description" : "Error detail",
                "example" : "The request signature we calculated does not match the signature you provided. Check your key and signing method.",
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "Error"
            }
          }
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "2599c65c-575e-3038-8a94-2bfda3454973",
    "name" : "Accepts document upload. (application/json)",
    "request" : {
      "urlPath" : "/path",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"Message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2599c65c-575e-3038-8a94-2bfda3454973",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "putBenefitsDocumentUpload",
          "schema" : {
            "properties" : {
              "Message" : {
                "description" : "Error detail",
                "example" : "Unauthorized Request",
                "type" : "string"
              }
            },
            "required" : [ "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "c3890d84-2fec-3297-9698-0cecd256cd91",
    "name" : "Accepts document upload. - 200",
    "request" : {
      "urlPath" : "/path",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "c3890d84-2fec-3297-9698-0cecd256cd91",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "putBenefitsDocumentUpload"
        }
      }
    },
    "insertionIndex" : 36
  } ]
}