{
  "mappings" : [ {
    "id" : "2a005cf0-1e92-43aa-bf29-0efdebe5b908",
    "name" : "Deletes a policy assignment. (text/json)",
    "request" : {
      "urlPath" : "/urrzhz6iytcpvhjchlkiw8daazzremj67igm67emhhqakofsex79qmm5sx5hb87zw0nfhftklqun61f5lzpl8xlscq3l25td6uyzwwcuofn03vsnzyq6sf5t99hrghd21fum2g2fvdfgd2103ubc5vmghqvzzco5cgbkrw3nxw8c7uyi6k1bjphb52p04q178/providers/Microsoft.Authorization/policyassignments/Del+Luettgen",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "eibk1suj45edhm3n1rscrdvppgow4rrpmpnzlou1ahj0be4x28sl8qcubb7m5g4y5epkze6y0sbuwaashd5jlb0koroq371rh85883iq4t9hpxyn2uamjsqc"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Lahoma Rippin Sr.\",\n  \"id\" : \"x2e9\",\n  \"type\" : \"7zz53cimc22xhvqbgd4seb8dgld61ev70yjtlpiopvgvxm21xlwxtjgc1a087mb929z63409rk13vojeb8uh3bgo1dzelbv0vpx\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"wac9\",\n    \"displayName\" : \"Mrs. Ali Haag\",\n    \"scope\" : \"9d4yy75mhwwnpafejr0nb7hx83epy3tsnd2zbspqxiepdlnh7d12u0xnlgpaa7877x2mi6dz9ni9uq8042cmddu24pbjjisfujyrixpctxkorle7edrib04l6\"\n  }\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "2a005cf0-1e92-43aa-bf29-0efdebe5b908",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:32.828051Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_Delete",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "34ff0801-7b51-4b57-9274-256ffdcd036d",
    "name" : "Deletes a policy assignment. (application/json)",
    "request" : {
      "urlPath" : "/kvsmxpglqsk8h611mkuz6z2cgyvv353q2o6qiuvu6/providers/Microsoft.Authorization/policyassignments/Raleigh+Yost",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "ry25qwrv7ecp1sjr8lezhc8xpswfv8b8csxbymz91t9ja6j3a3eqf1tiy31apmybr27gf39eev9tm9p28di1kjk4076vj20896fn9w02a2xav5ll6drhw0zvzdt9sp76kxpgbgkx99c2mkzw0do5i9tzndmty7hjqo"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Tom Adams\",\n  \"id\" : \"2879\",\n  \"type\" : \"eu649ocfq1p7lu96n1yh8jnbkyu6g8q2utq8thyz0dr9a4641ny9w7ubxjjiwgvm\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"1w90\",\n    \"displayName\" : \"Dr. Jacqualine Waelchi\",\n    \"scope\" : \"lye8hnmly1mr28idi5lprjja5y8sk1r39zqvtehuulurulzv2jrbh082xybxrbfqpz3ha3ehrp4fpwrow29a1tlucb6t1w3du6ix3pgix1tad55rs66ik56cmemysulwnc69d81scs4qjhfkby3qiws6c3a4u4044k4okwbbp7a1jacs7bnovi1c11j9cyw\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "34ff0801-7b51-4b57-9274-256ffdcd036d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:32.827692Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_Delete",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "29dbec30-e7c1-4a7c-9c2d-1472a615ee11",
    "name" : "Creates a policy assignment. (text/json)",
    "request" : {
      "urlPath" : "/j0pmr6alo78t31c375d6bc3kg4ti9aboaneqc1g1a091xh9c251gudcfn9qspyiphc20lp53iye5oggefupbrthclkjfpjjrgku973/providers/Microsoft.Authorization/policyassignments/Mr.+Anibal+Hoppe",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "r1macihdkblfmueppglcwb91e5m0ewcy5dj21zkd55vca837fsgt8z4zurizn1fpcm75pz8go1lyee"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"name\" : \"Beverly Goyette\",\n  \"id\" : \"4h16\",\n  \"type\" : \"s2o0ilp765b0t1534igvnrkox074banqzn5n9cqfttvg0c5t6m2yxfogbxzedorvs2si32pwnf9cr3l2r9vjjp8sqe4iumr9bu8pnwfzs89hq3z6tf05u\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"bs0i\",\n    \"displayName\" : \"Dong Botsford I\",\n    \"scope\" : \"dvkm13nv2f8otefdhw20ht4n7cx0bo46ebakuani6dzgf\"\n  }\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "29dbec30-e7c1-4a7c-9c2d-1472a615ee11",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:32.827321Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_Create",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "b4bde212-9ca7-44a8-b992-57d9ec94165f",
    "name" : "Creates a policy assignment. (application/json)",
    "request" : {
      "urlPath" : "/l31awx5v0217efphatzh2sy1/providers/Microsoft.Authorization/policyassignments/Diana+Waters+II",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "ekuqbxacrijx8k4ytqx74myt6qyjfwa062nu9cgqtswq9sk46c4k2vw58o3e2641yp6yckal0j3lt12gp4nsca0coc9tj3m5h6mm9vldj5g5b3ku9whmhnymz37gdff6c7wn7uw6ulx"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"name\" : \"Emmanuel Schimmel\",\n  \"id\" : \"98ci\",\n  \"type\" : \"abdxgpzj200k805j6hcz282b37utvo853ka6ubit5sdlz2k8q76gk2207ovucrxtv3abmyj1w7qgc0uov0xk6cxg52h7ac4xubm6bku528708w65w0p2oakzl8ess2m5bl45anl48o4q\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"z6gm\",\n    \"displayName\" : \"Miss Katelin Sawayn\",\n    \"scope\" : \"n2n6lyya0kq0jesjm0rgikq8h00io41hra9j7s01ezh8b2c9872h2o70sbwihbyo4xs5lm03zca64srjxwst4y83klauk5wcr1yswdfpugb\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b4bde212-9ca7-44a8-b992-57d9ec94165f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:32.826942Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_Create",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "967aeb13-07fe-4bd9-aa90-69fd3298f2af",
    "name" : "Gets a policy assignment. (text/json)",
    "request" : {
      "urlPath" : "/q6nbm4j6ohii84r0j8984ps9j80tg1rgq4avc5sre57o9bd0wnkwiy03qbdxea88l8t74ffge8181je85aanxrmrpcyi5gli84i9yb7s9ga6c7txhz2xrv840jijxamc22jgacgc6v4vy4a3wsd2m6ak03ngj4w35jl483abeagxfwp632v24xqk1ujxd7a2dw4uwjq2/providers/Microsoft.Authorization/policyassignments/Amparo+Muller+DDS",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "9x3jtabcdpvr371uhxnr284ko095538leu6yyii41whlue6umnsuazunj4nui9n5ksulssgvd69ry583v8vuimuck5d339col"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Florencio Nikolaus\",\n  \"id\" : \"3t7n\",\n  \"type\" : \"e5axq9bf6xpfhew7s1ehhnag8exgt0382pki4pxulf1f91gvzt7ao9frm3tb2rr30nwsoqyebs9aty9y915zr6e9wmqc\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"s01e\",\n    \"displayName\" : \"Logan Mertz\",\n    \"scope\" : \"p9nqqh7yshmzh64a0ryvzjjuuzyt4dpzt432t47mduh10xqc9wkccktjvz2l3r4achxu1o8c6ugtdvv9758gwhyit\"\n  }\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "967aeb13-07fe-4bd9-aa90-69fd3298f2af",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:32.826324Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_Get",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "83170b45-4de4-487e-837b-8ad1f9b5de76",
    "name" : "Gets a policy assignment. (application/json)",
    "request" : {
      "urlPath" : "/3tsh77qn8l9z8vcrieek9csnehtf56pajxihkvjb4ya6wsie2pu0dlyncdfde46sdfixcv2jxfrq0srmpgw2icfx6ncfu1n77haab9vk981jwpingxe21b4h44r4kvp4qt0iq3p9f0ak4n32duazl8d/providers/Microsoft.Authorization/policyassignments/Zachariah+Kerluke",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "p48vwwvk2cdrta9ao8m2o3l9qhe33x3klt9u9kc2yqe11xk2c2gbmhws1lhpdwkj8gpr04amhp3pap8hw68gfbdwh1tospgcya9xeyruwz0rmkh1jkd4ijwt3hdeaob4dadjqk16y5i3e8fygyouakd4lwe9huxi3y4fyhqpryt59c2n4icremw4y33f65avrb"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Violette Schaden V\",\n  \"id\" : \"2gjh\",\n  \"type\" : \"72f49b01bw0s7bu1ksnwd9c70szcdbqljngb1xed7uuzsh6fsb33nii1lvkdhvzhodo7v28ji58gl3w20k9pqsdpj9syvkmrhbso83qt8\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"lzk8\",\n    \"displayName\" : \"Owen Gusikowski\",\n    \"scope\" : \"vpl51x4e0weungwkrwfmpl9pb5uv99jpu446eoi3sb00t6790ryyha4c1klezfjv9x0uziu01xo5kpd4aigtf8hpcem1kwuofvlf356mtitx85\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "83170b45-4de4-487e-837b-8ad1f9b5de76",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:32.825948Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_Get",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "a1bda6ca-cdcc-4120-861c-e2ddb7d8a91a",
    "name" : "Deletes a policy assignment by ID. (text/json)",
    "request" : {
      "urlPath" : "/v89n",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "xuf0xhup9ad57y9tc71b9d1gcdl99s4nc959modckeff"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Luba Ryan\",\n  \"id\" : \"g450\",\n  \"type\" : \"13jvirdf33gieqht0kojsx32ifotsmuvtgdfelg3y95kmtcke8cn72v0m498mr912k80ypbtgt7l2qwqognb8\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"hr9l\",\n    \"displayName\" : \"Jeannine Weimann\",\n    \"scope\" : \"q4jxils42uwhulv3mdn90mndej7ibuhb86frnl\"\n  }\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "a1bda6ca-cdcc-4120-861c-e2ddb7d8a91a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:32.825563Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_DeleteById",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "102e141e-f5f1-431f-bef6-0077cd4dea4f",
    "name" : "Deletes a policy assignment by ID. (application/json)",
    "request" : {
      "urlPath" : "/n5fg",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "vqr108l1anrswbklzs4b1op84rngujbnybf4xo4nvvdetrg0sr3ar0delwqvucd3ac6lpgl6ykmzdd2lzbmiymz82pzmk4w4etb0oincelryqseeoeyoykha2xhypfrhmrnwe0urnx88z9sq47j6ecm82tp3njt0axllivudipso7ctlrr"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Everett Kozey\",\n  \"id\" : \"a15c\",\n  \"type\" : \"m3wxygwrvp9cwmsm5tzwl3p7p6hnumbc7e0kvuxydsx2dwwwclp75py728frqqwxp7ffep2oph3wpfmu5k0svxs8bmodylv8qevzdgvp7ipcafxb9j9zlst27ysjub7th72iq3l02h0cp4h0nu085d58ayvwh15r8152rfiy73fabz3pwewzp\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"g2v1\",\n    \"displayName\" : \"Mrs. Leif Hoppe\",\n    \"scope\" : \"29ek5pviqxvhaxg3jayibzoaqhr8q9wtksxoy513f881ov4y541wjlslt4nu59577jputnsmqw5shi105\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "102e141e-f5f1-431f-bef6-0077cd4dea4f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:32.825195Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_DeleteById",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "93b968d4-2390-4b11-9ba7-55f13e337b75",
    "name" : "Creates a policy assignment by ID. (text/json)",
    "request" : {
      "urlPath" : "/f7j0",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "hhsicqj9d3dley77bdeb4g3t8w0i6qblj46ho0rspe32f7zsr41chim5wogh3zwoltv5qttjzwkct95dpc2jfsowdq3"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"name\" : \"Thanh Kilback\",\n  \"id\" : \"6lg2\",\n  \"type\" : \"hmg2ycmiloialzgb\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"34a8\",\n    \"displayName\" : \"Miss Whitley Moore\",\n    \"scope\" : \"z2ma5hvp5ntlrl7w7gm7slxry62cszpggjuej2tlh437f547mtp2ns6zqmwjwxucz7n6tw6rrx27sfnc5318thgj7tl58y58bgwf\"\n  }\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "93b968d4-2390-4b11-9ba7-55f13e337b75",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:32.824809Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_CreateById",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "c2b00a07-985a-4bf1-b123-272466cf9572",
    "name" : "Creates a policy assignment by ID. (application/json)",
    "request" : {
      "urlPath" : "/c0k0",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "06fze7rcrzw6pmvwm0fjk68tei3pvx8ctpwnvojjs4t268hrm7aq386qf3q3zkl82eb2x9cnmt83es2td3dm4ehm3tqfra7o4m68vsgpdu"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"name\" : \"Maribel Hahn\",\n  \"id\" : \"01kj\",\n  \"type\" : \"3f1wfnewculvl14sqy4u0hxpuxngx9015q7y358cjnoz3r0mb3oh0ald0rw7c5rhif36qn4h2mg6y6app1v4rm8vt2g7fpi062q4xpsiuhlw5f3l0upy73zo9pgfpntrdzzo0btwe100eo13t3lga3cbjpjd9ksxods2ea0uup1g7r\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"3qk0\",\n    \"displayName\" : \"Regan Yundt V\",\n    \"scope\" : \"syt8pmyid3da7rvvocvq1e9n18uqm5pk5htk36nav97rp92coptpxrfbatyma1w9euor01yqjexg4j0mkj6aw1f9ewn9xrmxommjo82r9ojyn25qqvntn5oe2prfacqpslzjgdslctxxnhofzq1zwuw9uclox66l0bv2fmzr2azhbcyenjlqz8wr6w0lnnb05\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c2b00a07-985a-4bf1-b123-272466cf9572",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:32.824426Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_CreateById",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "9d3e7bb1-84db-4c70-afc7-86744ab825f4",
    "name" : "Gets a policy assignment by ID. (text/json)",
    "request" : {
      "urlPath" : "/3242",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "14x6ykh9bmkvo4hq4022v1x6qzf41j1p5peky"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Mireya Jones\",\n  \"id\" : \"n226\",\n  \"type\" : \"snoysnroi5gsynalhmtblf48y7ft7m59yil00cc2dv5e4bt9sq8st1yfumns15g0y965lt6amocvniao15dh1pexa8u93\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"563h\",\n    \"displayName\" : \"Esperanza Kunde\",\n    \"scope\" : \"wd16g2k7jrljgt42v4urnptbqx93z1tdze5iibijo1paf5xv3qv\"\n  }\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "9d3e7bb1-84db-4c70-afc7-86744ab825f4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:32.824035Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_GetById",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "9c91220c-78ad-4442-873b-25403964473a",
    "name" : "Gets a policy assignment by ID. (application/json)",
    "request" : {
      "urlPath" : "/cos6",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "zlt3qi27itppz7tsvikgwg6dm4uyhksyhyb1jfl3ea2az2mu1xgakgw6pwnwbzm1tgtkc17rpzkmsfysn31k35yh81bvsfmrebfv1xvut1rdq7yu1"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Daron Cummings\",\n  \"id\" : \"bqxd\",\n  \"type\" : \"aipjl\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"yzm4\",\n    \"displayName\" : \"Donnie Kuvalis\",\n    \"scope\" : \"bcbft64cnfpzhqjubfgt5j8r3\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9c91220c-78ad-4442-873b-25403964473a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:32.823659Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_GetById",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "0d4edaac-167d-4de5-8a06-52bdba19c7d1",
    "name" : "Gets policy assignments for a resource. (text/json)",
    "request" : {
      "urlPath" : "/subscriptions/636q/resourcegroups/xdD_mmJsUy6cXG.8YH-tO5hnfyPpecsC11yzZJZgWKzvz9.CNDg%296-rAmCq8%28EAQ%28/providers/z40wjhn2qjef9xt18uawbge93p0nu4bctw4lea1ga8ymxrmy91msagtovcsvz45we145uaujjripzhrp4w3i729emk5ayiygnur1emrxs0e8ls8zguws7gz/2t96eafu6r7j5p67fzs4ethsd4e4c6z97cartbe31snj8p4ov1brgcps7ngx26l0miz9/l7y5yi82/Leigh+Satterfield/providers/Microsoft.Authorization/policyassignments",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "cqzm47zkof374x36pjxyomi"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Miss Kurt Howell\",\n    \"id\" : \"55c3\",\n    \"type\" : \"er65qxziu1drhuz1ehn8amwwjdh22affz5670qxvc2wwb7occh6w2twto49y4xg67xxhjsg51x6buq217ixv58zujo7h6u1a9jqprcw03r5fgxv1eamwgu\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"9ky5\",\n      \"displayName\" : \"Freeman Considine\",\n      \"scope\" : \"2iopophqd2d5yggbmhiyeay5\"\n    }\n  }, {\n    \"name\" : \"Antony Hahn\",\n    \"id\" : \"x2vv\",\n    \"type\" : \"65t734x9ot79onk704rykuh9dqqob7bmq1vr5ir0srj8tszrmtbbes7qm4iz6hpoovcpheecv7sskooy2d\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"581r\",\n      \"displayName\" : \"Jocelyn Mueller\",\n      \"scope\" : \"zwcvhyxz04ph4t8k52hiv2xj9463n3t8g1wru76wlpclvnx1ircv1eaf8zrfjf26avh6uv0kig5qsq9hbk9ersb\"\n    }\n  }, {\n    \"name\" : \"Andrew Conn\",\n    \"id\" : \"n8ot\",\n    \"type\" : \"pte6y2pzxce5ue0h858l2bb38ybplwwzdmbwndb4i9s3ml5wi1asgjvi6dwhkwx0z2uapu9tuhwqz4fv1tqmmwka1mk3cr93zgdkbfiyp4dpmj9kgyxlrd95xxvc33aaqospn2a7gyk172i2wbilybgur8fz791w8z5msk5oqc9xmsct0cubx6x8qpy5e5rxvf\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"09lh\",\n      \"displayName\" : \"Lucien Schmeler V\",\n      \"scope\" : \"tr9l6fwa5nx9klzzslfci5i1843it3vqoo3uizvfq2ybxvl03mxd86m2qyprgdng4xywny1wtrdgsff9ttreddu9fj3wofwm94nsp1lllyoft3d8iosi6d7h8\"\n    }\n  } ],\n  \"nextLink\" : \"ruf6m1r85fehjoqo5i9fd99nbpgbtu0cd17hrrguann3ttz8764jq0jceeilad43tjlnylcf9juse0ljpzdkd5ivpynex8zgl8jsl\"\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "0d4edaac-167d-4de5-8a06-52bdba19c7d1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:32.82324Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_ListForResource",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "The URL to use for getting the next set of results."
              },
              "value" : {
                "type" : "array",
                "description" : "An array of policy assignments.",
                "items" : {
                  "$ref" : "#/components/schemas/PolicyAssignment"
                }
              }
            },
            "description" : "List of policy assignments."
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "57f5d10a-da30-404b-9e74-58b6244c087f",
    "name" : "Gets policy assignments for a resource. (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/8q4g/resourcegroups/gH8rE4Ugt5N5K66%28K4aUmJYfTKLpF/providers/pqb49y68r1mh1r5ayc78nciyxla76hnk79ku8j80gxgq1hn24m60inhxuqg0mijetv0o8/6z59bf2xz5xdva3zg2888yagkzjlj39cmg6ciuksebv3guurrjd3xv5m0fimr8/gfeofq0b17nzyjnqod7w2o0dv5p7ix1z06634abxwy53ch330c75snyj0dzxyd17idsolslgr5563snldc82nqgs14rv4f2pjwvj8/Karma+Graham/providers/Microsoft.Authorization/policyassignments",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "bglc6sn7wcbqvrif78b3klw62t4hhpuw78iwxzi1jkim5am6rinnzm26mwp5pvz"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Riley Gottlieb\",\n    \"id\" : \"q7iw\",\n    \"type\" : \"7vl14eahi1mdq145ocfc9gkmf36nz0a7jqxintl8vl3l0v8jhbdkt0mgoo0om40wjoc8jbvpdxs4ayjw5jexz5ll3z5im6ub2j7kmk\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"1z3l\",\n      \"displayName\" : \"Lavelle Bosco\",\n      \"scope\" : \"ebtmramv2j462o95z9gaw3gitmln1zwadvk10bahiezggggyad42320ka7tja38t9xmaqhcb96pzsyupvt4pye5gnh2rf6hjt3qpay8\"\n    }\n  }, {\n    \"name\" : \"Marvel Nolan IV\",\n    \"id\" : \"3uea\",\n    \"type\" : \"7o61o5f76s2s2m9z9m5unsjjjzu63d4d6y4nqp0bpe70zbfq7q1w7f61yg77mdh6m27mygdsa0dydb1jzbh1xjq7yu0ffmt1k58\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"a551\",\n      \"displayName\" : \"Kent Connelly\",\n      \"scope\" : \"flhtzdqhcygdn7qvv7aaa3izs3nfluchdyd1bl78frtzhl67y02juj4b9xw0cjtgzuuo8ibx3w18ti2eccy19q9d9xjb2kskep1ha88nc43mbkw40ad4jkn48jy8kxbogamesoviakjbqth0vowfnp9tzux\"\n    }\n  }, {\n    \"name\" : \"Mr. Vanesa Stoltenberg\",\n    \"id\" : \"8vd5\",\n    \"type\" : \"hcgtq8m1haabzrt7yzji8tjsg79lmynp22bnxggevpzy5npq2yoq9tdcb02o\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"nw8j\",\n      \"displayName\" : \"Bernie Ankunding II\",\n      \"scope\" : \"h5l3ieokmo0oyy7vp5s8qaro91t5ip10t4poxv8eciuyl23ox5882w3ry0eakeniuojvcad38zme42srcg4uhu5634vf1lgk1ju3iw\"\n    }\n  }, {\n    \"name\" : \"Bryon Schneider\",\n    \"id\" : \"439u\",\n    \"type\" : \"0k5g6yyqj49i8f6xd59sfo4jl26nh7ko8x29rgtw0sotmqk70pl4evqjlras5pt360z5kgrwd5cxwoah7xv5y92s7rw07j6f77fgse3a5euqu4y5vvk4voms7ime3ivxbd4ng5zllix69vcs3uycu5fwge6maabvtut5im3r1vggshjfluf2qfb0gsydqa6ur2\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"4enq\",\n      \"displayName\" : \"Kandy Smitham\",\n      \"scope\" : \"8ipurgug6t2jc53noby4ljzq3upae3qwlzu3kvmi7nbpjyd12q\"\n    }\n  }, {\n    \"name\" : \"Pasquale Kiehn\",\n    \"id\" : \"1401\",\n    \"type\" : \"fjxf4jsj5e7xqcl3mscq038z14y5y5xj89qzt16k626xw4uyxhsc52xnlrdjnj0hkmk7firrg9za9xdckzz0irs1s0ud9wfvgmpk8jdedtjhqvpnljxvfdxbewia1vdpbqrlzk3nwdap5x61swckgxh7m6w2tuqne1qj3htdeabvzlwsw220xsq7ky6qezbd4jk251\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"7196\",\n      \"displayName\" : \"Jarod Feest\",\n      \"scope\" : \"qebrxl3kl72ojenaywzo70878by\"\n    }\n  }, {\n    \"name\" : \"Ashlie Raynor\",\n    \"id\" : \"3235\",\n    \"type\" : \"44qbv2qrmmv67j87ze5w3f5m\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"8k48\",\n      \"displayName\" : \"Virgil Crona\",\n      \"scope\" : \"y5lp3bl4ajqht25o\"\n    }\n  }, {\n    \"name\" : \"Stan Brekke Sr.\",\n    \"id\" : \"pp33\",\n    \"type\" : \"z9m5yv3h3cjw1esxrz7as\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"1qm1\",\n      \"displayName\" : \"Buster Becker\",\n      \"scope\" : \"04n45697rz2zbrzx8tutop9gfagf5bkcmopkt3ginsm0xj0koh7aqyxt5p7bulbb8py634fa\"\n    }\n  }, {\n    \"name\" : \"Idella Vandervort\",\n    \"id\" : \"mmoa\",\n    \"type\" : \"vanfu0izkflp9l0kdu21xqffzor2j4vzjzxp6yqzex9evrs6h4ueayhtaltsvmue4vom2l3o26vbv7ijo3m7ayn7v88do0u5991iyqnn7ok8xtk28mpiggtv8tg70v6xm3jw4kcr95sckt9w7y4\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"7bxn\",\n      \"displayName\" : \"Doyle Borer IV\",\n      \"scope\" : \"9psyfm28upkv6au7xwgrvd14w6nq0ik21yk72rnow1k24i789r4sg5l0n36ehf1pncgi7wsr1s7ai5y6u4is3rftgr8bgaa6ni4co88y1vsogl5cfthnu6vfp7o45gxm5enwbr5pt9ot\"\n    }\n  } ],\n  \"nextLink\" : \"ieffsdu9f5uu2hd5o9ttw04vaq0i670e1kdj86nh0t0hsin3khfcmynq5z2ee74m9ibt4u8kxiy33\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "57f5d10a-da30-404b-9e74-58b6244c087f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:32.82223Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_ListForResource",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "The URL to use for getting the next set of results."
              },
              "value" : {
                "type" : "array",
                "description" : "An array of policy assignments.",
                "items" : {
                  "$ref" : "#/components/schemas/PolicyAssignment"
                }
              }
            },
            "description" : "List of policy assignments."
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "7bf2c411-0bc5-4eac-9664-3554829ec5d1",
    "name" : "Gets policy assignments for the resource group. (text/json)",
    "request" : {
      "urlPath" : "/subscriptions/4437/resourceGroups/zXhLB%28lSaD%29S7FsY.Z0uMvQaWgPKHsJMs5Uxy2UEeuV6iyGY1teG%28IPXuuRtusHMUqLXA65gS%29DX/providers/Microsoft.Authorization/policyAssignments",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "hb9sftalbt0x00ysclrfawpzcx35r04pib556f5ud5v1yc8v0vkzpok5c8qgggmpbpsgbg2pnknbbgu5rynm16kjd5h4ytlfgezoyjaqurlhnsbvr2jxtc8du7i8t45ehd6jkmzqlybxq0o0sa2n1"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Miss Ira Roob\",\n    \"id\" : \"u5d9\",\n    \"type\" : \"yrt7rchxjf07ytit0qas20c6a9x90ar0nog3h2q82fx8ks4p862btp9angetu49dso611o9uajakev2wqv3ifrv6v892054zkn85jsr6rulbfisim5v4mzyjtzvgsb0e5kqnfc7sk4odqxtjf7pulk\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"418j\",\n      \"displayName\" : \"Yuko Bechtelar\",\n      \"scope\" : \"br3s63re8tc5zj6095ihx1tfmqa06qn95fgh4gi79hk0hktke0tqusdb8qis66yvo1zzdblmlc79j01bdftm90vme6874g3nhmwraobe\"\n    }\n  }, {\n    \"name\" : \"Sarai Schroeder\",\n    \"id\" : \"o8xr\",\n    \"type\" : \"zr55a4oyadtebt7z7ncvurh59hpgmpyc6gruyujn498tm6qfpcijje81zessv5m189ebqmrrft0z96zjca6de9t1zmeaqtuf\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"9d95\",\n      \"displayName\" : \"Lucy Tillman\",\n      \"scope\" : \"mh12vuquy8q9ye693jtcz6epxz\"\n    }\n  }, {\n    \"name\" : \"Eldon Moore\",\n    \"id\" : \"serd\",\n    \"type\" : \"l6j24jbixnjs52gwb5xb5ui16kdi786l514jr257mw06xquiuow8e27n8e6hk6t0zludgly1p26mv2ov04lwel9vvpy74ruzfgodlxax8hh0a92mv7tghywszs9ajb5zhv2l2l0fy89tqorg5zvqytng7yvh17t0t6tnfxdaa5\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"a185\",\n      \"displayName\" : \"Ozella Howe\",\n      \"scope\" : \"0jolbwmkk30wuzshn8z3ocmo7a7emmwhkt8csjv3rata39f03f54mm78blrgvy9y64lf0hff1od5zbqfr8ue9e1lcfncn8egllkdzkfpttig33rts5v5o0ua2afrsiobz84rs2myln\"\n    }\n  } ],\n  \"nextLink\" : \"qo38w1sdje6gkze5zaz6fbb7r62\"\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "7bf2c411-0bc5-4eac-9664-3554829ec5d1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:32.819968Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_ListForResourceGroup",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "The URL to use for getting the next set of results."
              },
              "value" : {
                "type" : "array",
                "description" : "An array of policy assignments.",
                "items" : {
                  "$ref" : "#/components/schemas/PolicyAssignment"
                }
              }
            },
            "description" : "List of policy assignments."
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "1e1daca5-57ee-42d1-a45f-faf6534dd379",
    "name" : "Gets policy assignments for the resource group. (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/m91e/resourceGroups/BIGMNgtW1Hs-rjF-ih%28nw%28RuoetpyFZdZIx0jJsjPyibpK-HdujyGW.whmS4T7KxM59Q7xY4%29CWyZiuim/providers/Microsoft.Authorization/policyAssignments",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "wp0w25ofrg5l8ojrm8qg3xim06ovggqa00x4nv5sqp8bxhccw84g09oi6mory6woy75h92ejs6ldgi"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Ms. Stephan Homenick\",\n    \"id\" : \"6g7b\",\n    \"type\" : \"1a7awsqs6lpyg7huq2xgfdtkhrd00891wh3daufrwnnuw2fza1ff2jsadcprdq64vo4wqaxgeznwqsk5h504z66gb4ylte41ifi499sxpg1n9avuhf80aij09n2ac7intudg9vdga7p4u3pvv4z23fxkx1z37e4srd6hpf36ee72st90iztyj\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"ro49\",\n      \"displayName\" : \"Tomas Bergnaum\",\n      \"scope\" : \"l436q9phyt706afwbadn23txi7w060cgi5pdjr7mi4ueci44to8r5a6w864m60d16m938lc8blw0o7x7lxkwiqcbdiliq2cv2kl1ay04gn6e9czkemlzoxv9g51olneplgnhjmnui0bxjdppspu2tgo7u0u4v9d00\"\n    }\n  }, {\n    \"name\" : \"Cristobal Lowe\",\n    \"id\" : \"o6fa\",\n    \"type\" : \"0hixcwhn4cd2tsj6jjbb8srw85kxh2ymhkf2ikkcai4e\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"23vz\",\n      \"displayName\" : \"Refugio Pagac\",\n      \"scope\" : \"hhj1v8iddr6qfg8pyllg6wqfq4em6x0j09os23kup4o1g1a4zcgtxw3ul8ibip0kn33o3le401ah03141nn45qu\"\n    }\n  }, {\n    \"name\" : \"Diedre Rempel\",\n    \"id\" : \"32n3\",\n    \"type\" : \"4kf5w4ao19sxege03zs8o7a3b25u50jtpukzm46bs1wqbmrhcsp26vo3s3ow43lb0tsrgl35dawqtvjlxfp59r68a5x4uqk3sqbamof2la4usm6d6ehp6asyo4u9raottgqbnxdqr4d1gol6plc9hqnir2lsyby18odjlkxt34vssdmmtq8lit5yidrwxl9bdckpu9\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"89az\",\n      \"displayName\" : \"Galina Harber\",\n      \"scope\" : \"joefa1nhq77zrgrkpl6kv8pcp88nt0f5i85cofoubeeyy2pejrzyb0owp8snowg4ltt3ylyftcwkq87x1qvwnusabvwp\"\n    }\n  }, {\n    \"name\" : \"Jamey Jacobs\",\n    \"id\" : \"wa5c\",\n    \"type\" : \"na0d5meuewld3xkl2s509ogwcq0ym9yzbfdg4lf2ju20x45hu1q9xeww7u1i6mqidogq962nchymzohfsvz\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"4nv0\",\n      \"displayName\" : \"Dwain Hayes\",\n      \"scope\" : \"el7tv6k4h8pou1jf6wtfrys9mh3u3byzkghzk5\"\n    }\n  }, {\n    \"name\" : \"Belkis Spencer\",\n    \"id\" : \"ho8g\",\n    \"type\" : \"tiu93zqnprkkjyj76ijdgvphazanq5xf2rfbd5wpdu467vf0g3ni8tg1lubcea0quuhx8w574a2o0yc6e3ipfie35w0s0vnsjp2ib8fdec3fijmpfygdv69b9yen6hy5t0o\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"ovh1\",\n      \"displayName\" : \"Mazie Russel\",\n      \"scope\" : \"ikdver70vmvycl601cxcb9scncm4mwc3zc8lherm5b2qwc8hpthjxx0solxbh626gu8k7vyaykkb7x\"\n    }\n  }, {\n    \"name\" : \"Patricia Mraz\",\n    \"id\" : \"094o\",\n    \"type\" : \"avbc010e90nzg2rg3bj7k6rotsjx0rn92qz2v61ll88rqavr2lznmdeewkrv7tsntkadk0brbpgxggy6vxhrc3dcas12of9723rxdmuqb4oi93jfbbrh4b62oi41nh676yfvwmjzbkkdjghsd\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"uj0p\",\n      \"displayName\" : \"Rory Mann\",\n      \"scope\" : \"ht7pt1naag0fkyro6fcj0bf11zwj0i0atfxrc3ehhjg0uoomqnpuulaazj3v94gv38397malzyynm3w764hwzal2nawi86m0qp5ozh2isuct7cszqeudb4i9zwsif3q7o2bgnkcp\"\n    }\n  }, {\n    \"name\" : \"Troy Davis\",\n    \"id\" : \"5rx4\",\n    \"type\" : \"9tkphjt4xpitkruc42jvhd5sz22izwxvb65vjdjrrw4ddh139v2zmny3p4x60lg78l1xrtz51yheo98ib9tts1rmdfxl8p468uw1k17bf7mk2fvmincajx6nikbwr\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"c7pf\",\n      \"displayName\" : \"Lakita Waters DDS\",\n      \"scope\" : \"i6mlasyw0ycns0tebjazggo8vkk01v5gss3fg5asamg81rkxafsgum2c1sb4p4kzi33sf9v4d5b89adooriy5tyl18n\"\n    }\n  } ],\n  \"nextLink\" : \"bjpyaheok7kr7h9h1hq4ug6g3x3ohoy2u4qanzppn5yxs5qhcfu0fhbm4pzuav9g1dj22j2jw1pkhsr35ddmxhp4pevncnxq1z4z44i1psq8lp\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1e1daca5-57ee-42d1-a45f-faf6534dd379",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:32.81902Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_ListForResourceGroup",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "The URL to use for getting the next set of results."
              },
              "value" : {
                "type" : "array",
                "description" : "An array of policy assignments.",
                "items" : {
                  "$ref" : "#/components/schemas/PolicyAssignment"
                }
              }
            },
            "description" : "List of policy assignments."
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "6b1b9a13-cca1-42d3-88b1-017ee15389c6",
    "name" : "Deletes a policy definition. - 204",
    "request" : {
      "urlPath" : "/subscriptions/wri2/providers/Microsoft.Authorization/policydefinitions/Frankie+Yost",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "ymizq1"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "6b1b9a13-cca1-42d3-88b1-017ee15389c6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:32.817115Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyDefinitions_Delete"
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "6f4ceeab-446b-4cd5-a5a9-2bc3b535393f",
    "name" : "Deletes a policy definition. - 200",
    "request" : {
      "urlPath" : "/subscriptions/r696/providers/Microsoft.Authorization/policydefinitions/Kim+Zulauf",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "ez3d854q5s9z6ehpbpzmfqxwmef9jv0m4cqngqr01rvqpc4mjkknvta4mmag"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "6f4ceeab-446b-4cd5-a5a9-2bc3b535393f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:32.816975Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyDefinitions_Delete"
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "e68ce3f1-86eb-4d96-9297-e15b0fde705f",
    "name" : "Creates or updates a policy definition. (text/json)",
    "request" : {
      "urlPath" : "/subscriptions/i4h1/providers/Microsoft.Authorization/policydefinitions/Gita+Reichel",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "06a1rbfseilthhpghc6l72"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"name\" : \"Quinton Heaney\",\n  \"id\" : \"0021\",\n  \"properties\" : {\n    \"policyRule\" : { },\n    \"displayName\" : \"Berta Lang\",\n    \"policyType\" : \"Custom\",\n    \"description\" : \"Quasi vel doloremque. Tenetur quas omnis quod tenetur culpa. Eaque ducimus vel delectus voluptas quia quibusdam aut.\"\n  }\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "e68ce3f1-86eb-4d96-9297-e15b0fde705f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:32.816806Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyDefinitions_CreateOrUpdate",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy definition.",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy definition. If you do not specify a value for name, the value is inferred from the name value in the request URI."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyDefinitionProperties"
              }
            },
            "description" : "The policy definition."
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "95bcf6f5-fc4e-4dd8-b96a-17a055b2fc80",
    "name" : "Creates or updates a policy definition. (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/24ra/providers/Microsoft.Authorization/policydefinitions/Gillian+Braun",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "578xv7ljg2qg46kdq9eqr0xvap8g3cyyburspdxdnne4xskejfmnivz6cwerl2zvmcobi6cmpdnddf0ovgb3e7qaz7e7x3by1kqcuec62kbcl6qi07xha4n3"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"name\" : \"Victorina Schneider\",\n  \"id\" : \"6tko\",\n  \"properties\" : {\n    \"policyRule\" : { },\n    \"displayName\" : \"Chantel Waters\",\n    \"policyType\" : \"Custom\",\n    \"description\" : \"Veritatis asperiores omnis. Rerum officiis deleniti ab animi perspiciatis aut. Omnis repellat sunt molestiae.\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "95bcf6f5-fc4e-4dd8-b96a-17a055b2fc80",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:32.816452Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyDefinitions_CreateOrUpdate",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy definition.",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy definition. If you do not specify a value for name, the value is inferred from the name value in the request URI."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyDefinitionProperties"
              }
            },
            "description" : "The policy definition."
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "73562974-c503-4e2d-9783-7982fc35be4e",
    "name" : "Gets the policy definition. (text/json)",
    "request" : {
      "urlPath" : "/subscriptions/dm3b/providers/Microsoft.Authorization/policydefinitions/Augustus+Cassin",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "aspxczlt0kz80znuijswvc5jyc5ppp7ec7leh389lfilaj04ol7t9xp4l7wmbpk74y3vixjxokjrt1e4mmh7i9osprlt5x8zhundfgmhyfwyd4q9kqjwkwhqe5e8lu4ecq924cmeanrpnevnlcea5hkar8c5cq3xljwyetyz"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Shon Ruecker\",\n  \"id\" : \"ms7l\",\n  \"properties\" : {\n    \"policyRule\" : { },\n    \"displayName\" : \"Mrs. Ezekiel Renner\",\n    \"policyType\" : \"NotSpecified\",\n    \"description\" : \"Sequi placeat nihil. Delectus et nemo. Velit voluptate accusamus eius harum perspiciatis. Aut ex blanditiis quo officia magni blanditiis.\"\n  }\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "73562974-c503-4e2d-9783-7982fc35be4e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:32.816088Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyDefinitions_Get",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy definition.",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy definition. If you do not specify a value for name, the value is inferred from the name value in the request URI."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyDefinitionProperties"
              }
            },
            "description" : "The policy definition."
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "85cb29ad-836c-462f-b9e9-188f1a2d961b",
    "name" : "Gets the policy definition. (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/0b2h/providers/Microsoft.Authorization/policydefinitions/Lucio+Crooks",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "qreg46ld92in9z85rpkjgob972f3"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Burton Rempel\",\n  \"id\" : \"8sn0\",\n  \"properties\" : {\n    \"policyRule\" : { },\n    \"displayName\" : \"Jeramy Wehner\",\n    \"policyType\" : \"Custom\",\n    \"description\" : \"Repudiandae possimus eos et. Quibusdam adipisci amet qui alias. Officiis est et eum maiores quod sed soluta. Explicabo temporibus dolor sint cupiditate sed ut.\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "85cb29ad-836c-462f-b9e9-188f1a2d961b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:32.81572Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyDefinitions_Get",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy definition.",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy definition. If you do not specify a value for name, the value is inferred from the name value in the request URI."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyDefinitionProperties"
              }
            },
            "description" : "The policy definition."
          }
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "40165d30-d461-40c2-a164-9240cf6a2a66",
    "name" : "Gets all the policy definitions for a subscription. (text/json)",
    "request" : {
      "urlPath" : "/subscriptions/04j1/providers/Microsoft.Authorization/policydefinitions",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "3n9dofsx5qz6szdp58dualf39xmq2j6sflp92lvgetwwotkphyt4q1ct9li34mpr7b03ex7ytxsk140z09be444z0fbo0qwbg5pmm9gu9nkf9on9k317iu71rhqqu1z0qfp6c1mvv6glevnuc7fsan9o4r7068q10av0xrmny3nhmrue5tnouaj"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Joshua Kuvalis\",\n    \"id\" : \"c4cb\",\n    \"properties\" : {\n      \"policyRule\" : { },\n      \"displayName\" : \"Eveline Adams\",\n      \"policyType\" : \"BuiltIn\",\n      \"description\" : \"Reiciendis deleniti earum ut dolor omnis voluptates ut. Aut repellendus aliquid consequatur. Dolorem sint aut perferendis. Expedita autem fugit repellat quos ullam ab.\"\n    }\n  }, {\n    \"name\" : \"Walker McLaughlin\",\n    \"id\" : \"9b45\",\n    \"properties\" : {\n      \"policyRule\" : { },\n      \"displayName\" : \"Ambrose Heaney\",\n      \"policyType\" : \"BuiltIn\",\n      \"description\" : \"Eaque sed id. Id porro dolores vel voluptas debitis. Culpa dolorum delectus quia provident. Voluptate voluptatibus facere ea nihil mollitia. Quam animi eius aut est.\"\n    }\n  }, {\n    \"name\" : \"Miss Ozzie Greenholt\",\n    \"id\" : \"j539\",\n    \"properties\" : {\n      \"policyRule\" : { },\n      \"displayName\" : \"Lucille Romaguera\",\n      \"policyType\" : \"NotSpecified\",\n      \"description\" : \"A dolores qui. Sit nihil veritatis voluptatum. Iusto repellat temporibus possimus quas. Sed qui ipsam fugiat vel possimus quod. Culpa error voluptate aut.\"\n    }\n  } ],\n  \"nextLink\" : \"ac64z4h3ldm6ixnv9ivjq6wphdndka4bbf2p5n1jld7us3etn5g1hotk6cilfenq92uqjp8xg7tnqm8m06\"\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "40165d30-d461-40c2-a164-9240cf6a2a66",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:32.815329Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyDefinitions_List",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "The URL to use for getting the next set of results."
              },
              "value" : {
                "type" : "array",
                "description" : "An array of policy definitions.",
                "items" : {
                  "$ref" : "#/components/schemas/PolicyDefinition"
                }
              }
            },
            "description" : "List of policy definitions."
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "f89ad606-d22f-49c5-a7d4-8d7cf2b238ce",
    "name" : "Gets all the policy definitions for a subscription. (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/ys77/providers/Microsoft.Authorization/policydefinitions",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "w1eqg56je1pwj7e6vme5obcbhxw12xqg5dh4baaa49g72yosidq26r2jsh2ce83g7sm9g2p7lutq0ur7890o5lzrmj7s4i5n9u8l1b7oijv53kvvdvmit5p5wg4acvb4cwifhnxcm88ki6zq4"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Pete Graham\",\n    \"id\" : \"9956\",\n    \"properties\" : {\n      \"policyRule\" : { },\n      \"displayName\" : \"Dirk Mueller\",\n      \"policyType\" : \"Custom\",\n      \"description\" : \"Autem fugiat aliquid doloribus pariatur vitae totam illo. Doloremque praesentium iusto magni pariatur. Ut id illo doloribus fuga.\"\n    }\n  }, {\n    \"name\" : \"Carter Howell\",\n    \"id\" : \"3ri9\",\n    \"properties\" : {\n      \"policyRule\" : { },\n      \"displayName\" : \"Jordan Marvin\",\n      \"policyType\" : \"NotSpecified\",\n      \"description\" : \"Ut aut ut. Dignissimos vel tenetur fuga. Quia aut voluptatem est mollitia non. Ipsa at iste rerum. Non voluptatibus sapiente beatae voluptatem.\"\n    }\n  }, {\n    \"name\" : \"Miss Myron Sawayn\",\n    \"id\" : \"6i51\",\n    \"properties\" : {\n      \"policyRule\" : { },\n      \"displayName\" : \"Jewell Fahey\",\n      \"policyType\" : \"Custom\",\n      \"description\" : \"Qui veritatis velit. Vitae assumenda deleniti quam aut ea. Omnis corporis ducimus aut et totam ut voluptatem.\"\n    }\n  }, {\n    \"name\" : \"Carley Haley PhD\",\n    \"id\" : \"rp0n\",\n    \"properties\" : {\n      \"policyRule\" : { },\n      \"displayName\" : \"Mrs. Marlon Robel\",\n      \"policyType\" : \"BuiltIn\",\n      \"description\" : \"Tenetur pariatur architecto. Consequatur beatae natus vel ut soluta amet. Quia sequi a dicta ipsam velit dicta. Illum voluptate qui sed accusantium a nobis soluta.\"\n    }\n  } ],\n  \"nextLink\" : \"yniw0b240nhlbdoz1wrm8o1ktglrsxuijc2hwkupol2x7rwgds6ogb9p5r2rxucgok1u1d9dwitaaql548v1m9tqsruya3\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f89ad606-d22f-49c5-a7d4-8d7cf2b238ce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:32.814547Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyDefinitions_List",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "The URL to use for getting the next set of results."
              },
              "value" : {
                "type" : "array",
                "description" : "An array of policy definitions.",
                "items" : {
                  "$ref" : "#/components/schemas/PolicyDefinition"
                }
              }
            },
            "description" : "List of policy definitions."
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "5a913fdd-7bd5-474e-ade3-54f58f309251",
    "name" : "Gets all the policy assignments for a subscription. (text/json)",
    "request" : {
      "urlPath" : "/subscriptions/tk78/providers/Microsoft.Authorization/policyassignments",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "bproanrdxicpt7pml935kwnr3ziaa8iptiey8x35bawyi2sstwu4c7wt6uodkxcpwx2kfriutl9g1tfj1crdg7y5un6nde5peindsnhqd8gbmna7eo88awdjc"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Ms. Gaston Powlowski\",\n    \"id\" : \"jk4o\",\n    \"type\" : \"ee8fkh8okkomdnarrtotmldn3plbjrf25ffb02trr81r6hs1y67goofdcuand76fpcsumwvlzmyeu0c1o5vagd9zoasn9no5dpgyk29hs5bs3x6x868hde6qcx433fzz6fef5ttevqjd3kzsehly6xu0z0upf2yzz1jigtnm807skhdunnvfxvtq\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"w0d0\",\n      \"displayName\" : \"Ines Spencer\",\n      \"scope\" : \"o1wtkvl121ncq9yso57ds6ai201yei8x5s93tbwz60j4dlrdz1ejvzeq6z8p49yqoz3q0x95r0dbsk30zzt1ws9g8gf1kxaftd88zi08\"\n    }\n  }, {\n    \"name\" : \"Elene Koelpin\",\n    \"id\" : \"vpc3\",\n    \"type\" : \"rm453qxp7sueasu2amvexy0qioeirefsu5mkkl7x6yc28knipmqgwntkshejz7mep\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"1rnf\",\n      \"displayName\" : \"Eduardo Mraz PhD\",\n      \"scope\" : \"n6drgnu41nvf\"\n    }\n  }, {\n    \"name\" : \"Grazyna Kohler\",\n    \"id\" : \"57ld\",\n    \"type\" : \"2lujex5r1xliqcro6zdfj8papsrei82k6xo4q9pr66d4he5mfli2n0cjcinpjwfxiilfn9vug5xlrtjlgmvm2x32z4cw3r2m0fw4tpw6530o39kcjxok40bny5y4c1yiyukmdwr5rme5e5l5thlmqk7a07k0998s53nl5jpwasilza5uebys\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"wcqf\",\n      \"displayName\" : \"Hilda Auer Sr.\",\n      \"scope\" : \"g86ri4ioatxpk7k819rbka06asyewt2iiuhhyhk2nf50iqbqw1q8myw02d4jyfm43ebwv0zdcctx94cucp5n4psmvjbtgyx4afx4qqo2k71vj9ot8dxooxnvntxem2pb\"\n    }\n  }, {\n    \"name\" : \"Vance Becker\",\n    \"id\" : \"38un\",\n    \"type\" : \"ghtov7ylws3cpac8ze6mvuwassqd3rm2vox3xmsrpb45f3vk406m8j2cdpvkvqfu0sm16qbpskpumug92r73zjukrecti2spz5uygzmkuis8qnubuab6pqxeibfx8xxfzysk619jnum0bieifjfz0oimi7yc5xc9503\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"v9mo\",\n      \"displayName\" : \"Dale Hickle\",\n      \"scope\" : \"3lx0p5gjai0uos9i48s35qfe9awgv19ixftbamw9xv00cw8kjeayxsdq6lboo0n9vyjyje9ts178ufb2t7ojo\"\n    }\n  }, {\n    \"name\" : \"Markus Emard\",\n    \"id\" : \"y4bk\",\n    \"type\" : \"am7f1hs18m2f4bad22lbygjftf62xc92tsmutpeeb64nxrv7v0iikt7gx\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"81z0\",\n      \"displayName\" : \"Cheyenne Kling\",\n      \"scope\" : \"qhqhzuf9a2kxar520lv0mngh27k9rjo7qr4r2b9cmwcpxzoxc5jrwpwczwfs98igc1f4l8n8661hsxpd2ep38juquncih5vqhqeg686mljg5f24hsctthtm9z5wigbwx5usk7lhytt7i2qogiz0wna1k\"\n    }\n  }, {\n    \"name\" : \"Ms. Andres Cummerata\",\n    \"id\" : \"661x\",\n    \"type\" : \"d9e8savkfzgs9dxb2bvf3of30tmpj6lqet2thwwulw9nhe2ace0ezki4hryjdlqjct5vdfnza6tpxl9zbsy50v5xxjctcwwmnh7v83ahfee8sh6w1bpfqcm2x38wlblm6x39hov2afyro8x0ulw951nbpmpfkafedty7691wnlxwsw2qh2ry4c\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"6h1t\",\n      \"displayName\" : \"Ralph Schinner\",\n      \"scope\" : \"kgftnkb2imi5rfmswu6zmwy43yvo9m6irpgdrdbqiy2kxj2j9al9t2awnmju56lqe2ve3326fzn9rx9xvtnhx7cu2iziaom5u153son4u62qdu5w4gj4ejundtu6tq9pp000554yxwmxmmo5jtqt83yvalgha09o5doq08b5ej8y\"\n    }\n  }, {\n    \"name\" : \"Dustin Greenholt I\",\n    \"id\" : \"j4e8\",\n    \"type\" : \"g5r1hu8flon73gmu6p274vkan0vi5o7o17agaeluvgstgkvo8kha8swclpxaqmeiyghk1qd\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"3r84\",\n      \"displayName\" : \"Wm Cartwright\",\n      \"scope\" : \"99lxpvgcos5k3v81viv9booku0g4bqq2d53t9jb0es301txoz2w4t4hm31bj51s3eeogaw38rmv8cuk8nwx91b4h91qpt5hr9iu32yzp2iq841c1y9icg5\"\n    }\n  } ],\n  \"nextLink\" : \"5me2nf9ku7i7j7xh35g7e\"\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "5a913fdd-7bd5-474e-ade3-54f58f309251",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:32.813326Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_List",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "The URL to use for getting the next set of results."
              },
              "value" : {
                "type" : "array",
                "description" : "An array of policy assignments.",
                "items" : {
                  "$ref" : "#/components/schemas/PolicyAssignment"
                }
              }
            },
            "description" : "List of policy assignments."
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "7b7b942f-6c7f-41d5-84f8-1f876513be51",
    "name" : "Gets all the policy assignments for a subscription. (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/6a26/providers/Microsoft.Authorization/policyassignments",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "xcfjiyil34ka7gwt3yj8jyogql8b1tcfdt5095ern4y66sh85zpud8l3ssaqmjfe2e342svpgm1ybgj5qehsdji2zqzvtruyv0iqgp8kwlehjkckujzkyo1r13werw9dm69"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Angelo Prosacco\",\n    \"id\" : \"21a4\",\n    \"type\" : \"pralo2sx6tk0oc9hz5cz6wzeg8c9y9lt1r1vl0cqll12ehd97grj40hhgacqhfgb2tfx42pe95e0vt72q2bpg11qrkb3wlazwdxsjo1ww784997mvss10977xol7zpwpurs7w3el7ga9uvzi3ao0qcvlj49qmal0cql2punt5tef\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"y8vf\",\n      \"displayName\" : \"Ed Treutel\",\n      \"scope\" : \"6yp9kg1atdb2ijsidtyvy72iihvt408rzcisq3cikrboxf2s1ofpgr5cmgrsyht8us5v98knurg4pmfllueetiopnvp67rzycq0fqr6moqlqc8z92kea2uex76xxxixo1dm4\"\n    }\n  }, {\n    \"name\" : \"Woodrow Pollich\",\n    \"id\" : \"w2py\",\n    \"type\" : \"bc85daih6ral8fyc2xizknizqrwwb907jm42g1z1eh5\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"z062\",\n      \"displayName\" : \"Sanjuana Cronin\",\n      \"scope\" : \"1p1nbxjbcfi1kikkq2bkf8s7swxx9\"\n    }\n  }, {\n    \"name\" : \"Kristine Schowalter\",\n    \"id\" : \"tn0x\",\n    \"type\" : \"yqoq5igva2jhbgutmw5kzmc3y7tzan5u98su9kkv4cetvtd0h6wjk4utu20n3kw7le250zl44d7tmotkouiwglnpnp9lnmvfv9m9wnmo7vse5pvi2xwjh1izpfameb83bdv0hgs5o63stg6s82a0dpf0j8chc9iip9jrxnyngb1nrhioum0n7v7v2\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"351q\",\n      \"displayName\" : \"Preston Parisian IV\",\n      \"scope\" : \"on1k0ge8qazh2j16etn1h16cecey25a5vjj6qszq18xlqx5wwjtpg7njw9czwsreucy9f6lv1y8jk\"\n    }\n  }, {\n    \"name\" : \"Myrle Murazik\",\n    \"id\" : \"j169\",\n    \"type\" : \"0cubyd3i9x65t79ylz3hr9bmnf18oj8\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"r57p\",\n      \"displayName\" : \"Mardell Hammes\",\n      \"scope\" : \"59u4n9l6xu4h6wl1ovtq036avdyz3c7phgjoq0inwrmjjyfg91pr78c5axawn\"\n    }\n  }, {\n    \"name\" : \"Arla Simonis\",\n    \"id\" : \"3126\",\n    \"type\" : \"y270zr8s9d2tcs51fynog61m87qpyf3y7jriwzn437jap1raluckb\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"i57n\",\n      \"displayName\" : \"Ms. Joel Baumbach\",\n      \"scope\" : \"lnrt923hc8ptrmnrtdb1674966ua\"\n    }\n  }, {\n    \"name\" : \"Gail Rohan\",\n    \"id\" : \"r6e5\",\n    \"type\" : \"ju88gk6pgrr135yu3phdxdygura22caipcyjoyz6fnf4168m4bcbri992t1euhsiagdmmz0nqfypb\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"ac2k\",\n      \"displayName\" : \"Kathern McLaughlin Jr.\",\n      \"scope\" : \"rgbqtdkjom5jog8r0fl9pk4aod\"\n    }\n  }, {\n    \"name\" : \"Doria Rice Sr.\",\n    \"id\" : \"g9r8\",\n    \"type\" : \"559sdb2afdairy7mg9v0qp5wzf4qknn5hk6onpd9ikywrs92e8tthba9iv3h4cm42yacg7tljnmqbie1b5g5dynsdplk2w5nca94086lly6is5hwrq0ijifq4pkhmy9lv5349kudh8m7dcjy2kle73i\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"q1az\",\n      \"displayName\" : \"Dr. Dewayne Gusikowski\",\n      \"scope\" : \"lxr74r1x6vfg19kfuss4j0gmouegk9uzpof2jl3ohpdvvvlsb8vgokm6tj4y7ymm6qiw5sthuy4x0d6wd5b8wqxdgt0inrmepew4xb3bqzyjguslmd4h5kqab1yj8svy2cpm3jwqxm\"\n    }\n  } ],\n  \"nextLink\" : \"xsyj59p1bffk5zrk6ax61411hhoy7f3qbnt6e5yajv271734mwsggv6xhqlkz6d5y7w0yop2yy5qv1pz9ubm4twizctcbphmuoecjsa5rbeoe6ubgch1q458ol7im519oasfrhwbeau6ayfi2kw52yjjnbv9fizyoelo4hqo8cko6lni0oh100\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7b7b942f-6c7f-41d5-84f8-1f876513be51",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:32.811463Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_List",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "The URL to use for getting the next set of results."
              },
              "value" : {
                "type" : "array",
                "description" : "An array of policy assignments.",
                "items" : {
                  "$ref" : "#/components/schemas/PolicyAssignment"
                }
              }
            },
            "description" : "List of policy assignments."
          }
        }
      }
    },
    "insertionIndex" : 25
  } ]
}