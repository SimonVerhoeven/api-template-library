{
  "mappings" : [ {
    "id" : "a4fe84de-70bd-44cb-b2dc-8aeaba47f209",
    "name" : "Deletes a policy assignment. (text/json)",
    "request" : {
      "urlPath" : "/yznfbqvb8iibjoniegfqtc8oybs8jkxabukk4pxgkwym5mm37lexi5csmihvsllziwugmex4bh02uoh2l1gjm8iujq2ctwpjjoob1zt1quwu4ut9fecatv9i1k24ytubzbf7lecatlmn4zxdpnvenb5hsnmyukl910n/providers/Microsoft.Authorization/policyassignments/Chauncey+Schaden+IV",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "y0db4d2vrvxk5ts8go2bdoe5kmqr34gah5gqq5kimot3orbz8vcf13yg9ec1613i4kaih73e48d11sn4u6rz4p5ftrr7ybjedw"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Mrs. Deedee Spencer\",\n  \"id\" : \"irbn\",\n  \"type\" : \"5jl7cfwiplbe6p6g42s1a8u9hi7l88icspczlftajgu0jb996gg78x5ynwz0z675uhadx66pahhtgux71e6cnra0zty3kizlv18v88w8v30r65qm8udgbe1sbyn66tun96xtlxhm484va0wxr1iazuhdt7ft2i0si4ydxh2v3a4tj3jsuikc4cwvsbd3solzdyze8hwo\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"r0pi\",\n    \"displayName\" : \"Ms. Vivienne Thiel\",\n    \"scope\" : \"ghevfg6xgyyo6ndclwosevedwsoqz94630hbtc2a6k4fdsueom\"\n  }\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "a4fe84de-70bd-44cb-b2dc-8aeaba47f209",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:05.434686Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_Delete",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    }
  }, {
    "id" : "3fc1e8d2-91d5-4ee6-b685-5c9c2b2a8eec",
    "name" : "Deletes a policy assignment. (application/json)",
    "request" : {
      "urlPath" : "/aprhcrcmx00cflkxxd8tqx40h562rjvenz2p1elglxyofehv611zms4t7hd8ktlk0q22gbpwigif61q1709q1jmif4csx/providers/Microsoft.Authorization/policyassignments/Mr.+Loma+Senger",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "in2u4agncpvogqt3e5rtem5mo2gq7lsc15um7glfi8pbcvoq1npwjov8slo18a315fjyrjabqoz4megegvbhn57od8sroslh7a3mzbvktqvl6zdf2q98sy6r3qpozt3trqppoxtd2lqrmegy4nr1s98whoooxf0soes8krvu268x0gxm679ryv0"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Mrs. Shaun Hegmann\",\n  \"id\" : \"2za7\",\n  \"type\" : \"ztapx\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"w18c\",\n    \"displayName\" : \"Talitha Dickinson\",\n    \"scope\" : \"emdau2d39zlm8hngjyi8brgno4pww\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3fc1e8d2-91d5-4ee6-b685-5c9c2b2a8eec",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:05.434345Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_Delete",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    }
  }, {
    "id" : "6e7287d2-cdd9-48db-b094-284cc7c1d3c1",
    "name" : "Creates a policy assignment. (text/json)",
    "request" : {
      "urlPath" : "/ntp6ts3xx3l8ghveofzne76k7w5msl3kly5b2y08mvn19d4a6u1g2msdfjm2dc5hyobxrufsqofdn1x1bb8o4h6h0ezik9lx22zxaypxamiglv19mael2/providers/Microsoft.Authorization/policyassignments/Vergie+O%27Connell",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "njybcak9pyba089f8az4w2j5lqlf1dmauwoyw5umawotbzpwkadpo11v1eeqxq6qk8bwk8y5df8o0w7rmv7mquggzche1o7mnqkxe5clcpejnwo8v8oz3bvk"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"name\" : \"Owen King\",\n  \"id\" : \"1wq6\",\n  \"type\" : \"s5incm5ewiiox2rwejkhov\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"ul7r\",\n    \"displayName\" : \"Tarra Windler PhD\",\n    \"scope\" : \"jocwevoh9v5go0by8b7r5uror3yxldm971e3ot8r27cy25r6xcu2qnrvfmaly4v5f7grzrt3peb4\"\n  }\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "6e7287d2-cdd9-48db-b094-284cc7c1d3c1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:05.433973Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_Create",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    }
  }, {
    "id" : "01fed4a3-3f8a-4217-9230-202014f2383a",
    "name" : "Creates a policy assignment. (application/json)",
    "request" : {
      "urlPath" : "/1m9b5cr5qdvcx9tl602g0skljx5ulcbf2x9znfz0n6dfxuihoqcqw0n1x4mpz4/providers/Microsoft.Authorization/policyassignments/Josiah+Volkman",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "ll2iqsvqkboso05l8lvmf7f3d7ltzm2c573tkv7vbxfxt8opeshx8pcmwg8iydq7ui8y992qsdok3zl4f"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"name\" : \"Jeff Kuhn\",\n  \"id\" : \"bd79\",\n  \"type\" : \"0di4ur9aiu5p3v4enqpfxsnzbm4ykep3vxf48x42pkwzaio4a58wxj5obquwqvsgg4un416tf2mxsk3edh4oia45vk59hqhvyn7j6zkeztsxtdb2r3g9upprrsadxe975pf3yos9541q9tffwv54asadootfywicpfaqvb4ndsi3bt\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"n73u\",\n    \"displayName\" : \"Sixta Lind\",\n    \"scope\" : \"i9b407or5ub06ky34w1g3m4sy00fg3st90gske0qdu3o4nbf48y2vj0lzno9u2lmv1l20q57d5scbj286nihs63t3f8n7sj11srtw6nz9yzm2crbxyvrs35btr33elw4apuv0qe8e338jayvpdc91fycxw5j4122ef1nnmudy1dwod\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "01fed4a3-3f8a-4217-9230-202014f2383a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:05.433631Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_Create",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    }
  }, {
    "id" : "b8095164-aae1-4c10-90ae-faf3dc0d9dcd",
    "name" : "Gets a policy assignment. (text/json)",
    "request" : {
      "urlPath" : "/4ff8a8a7o3bsi1326fyoxhy4dscut109b87ciqmhf736ab9yngipwpkg2r4o4h3dfpwiwaz80hgxhhr0nbteim138osg73et4v5kzxh0j4v73z8vawplwtpymefpfax1upu4crsas0jx29rp9cskhsrbn6140c4yikkmvo78fyc69335u76bisc8xuuhh3fumreorofc/providers/Microsoft.Authorization/policyassignments/Antonia+Crooks",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "v41load7vnrcj5dj2ebxpwjx9dolzasz6qgqb0jd6b12gcmloey00ppr8vx9mnwdnpgrakxnfdnhq4w0pothkldfc9zoocm2awv4ltb6zoixdvc0e98basvtxvm92i4bi4jxk769mx5p1w1ifdv7vynq7futijlrwx1yri1lvvj2ivghvb5563a"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Mozella Koelpin\",\n  \"id\" : \"oee7\",\n  \"type\" : \"74larxv06ycjy9lm6xbrj31ke1dys423nr9lf8gt0pvqvp2lg9wacr7upn4l4imdobnglaby8dqa39x7b0locbwwdnswcgu3pm8hs54pp5d844zauyvs\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"9c95\",\n    \"displayName\" : \"Joanna Kautzer\",\n    \"scope\" : \"jca1t6ruodgynvjg5h2y7pjxz1eiy054esteq1fkxk2y6wd5re1743gemkht2dgqkgr89qy587o0kjr60s6ae4znydrqjsh6y7rx6hlcxo\"\n  }\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "b8095164-aae1-4c10-90ae-faf3dc0d9dcd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:05.433275Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_Get",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    }
  }, {
    "id" : "eb63bcd8-6eba-4af9-81ec-913c9c2b4340",
    "name" : "Gets a policy assignment. (application/json)",
    "request" : {
      "urlPath" : "/lwfcxfgkfs8592gaxay7e25gyyos2xsvt5ixof0a3tknla79qyb6fr8p0ca391k4y4qzgz84deysdk46javkz4n0ml9a9m094iv3ylitd/providers/Microsoft.Authorization/policyassignments/Darwin+Paucek",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "y09haldrxnozbdn11ynic2bijcbl5sccbtcz6yko6ntn410pqqyooilpy1lt9fjmo4omtl1q0k3gonyf0wokuhw7oj4cvig4dz00m6i80bemszjm5x8n8w"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Jeromy Lemke\",\n  \"id\" : \"5ws2\",\n  \"type\" : \"clmfmob7upd4neeppzz1a4xeamnu0n4ckv8hz0u1yuqofschibyms0pj2mv6kyuksr5pui9ufi6ksl86d3tf6t5a4zpn1a0z\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"04au\",\n    \"displayName\" : \"Jc Orn\",\n    \"scope\" : \"vvr4ocmxchi0bnrd3i049qzidrtuif8c6nfk7eoxupdlvbqkbtwru12gxdsh7f4vg96xv059h2wubgkk0cfylv6nbdkv33i5lqj2mzhsbxbqvfigmz375k37y55dxrtwllnkovrq50gz45g0xj3r\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eb63bcd8-6eba-4af9-81ec-913c9c2b4340",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:05.432931Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_Get",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    }
  }, {
    "id" : "a24166e8-9fa2-4e65-8e42-0de4864ad135",
    "name" : "Deletes a policy assignment by ID. (text/json)",
    "request" : {
      "urlPath" : "/6wmu",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "83xqjzs3i4nd9lvpn9aag5f88xxm6zifcugt68sjq0w6e427hqcvptn77z03aeurtshyevxv0ky9ik8ejto4i4mdqy7da9yeoli41wn79ny607d6spswfq9k6r1bgh7skwd7umju834iewbi"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Celesta Botsford\",\n  \"id\" : \"ys2c\",\n  \"type\" : \"rohzmtbn4r31c9g6nkz0pnfpfx3cke9uoj6ct2rhqayvj\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"3k3i\",\n    \"displayName\" : \"Teresia Wyman\",\n    \"scope\" : \"uf3nyct3omnlq7w43t2f8s7xwg9zg2158kpbdbi5j0dm8b07ggev4vn6ywpbb4bzsn8db71nyd5nismfd707ioy2j0x41thzczbg6ihil1qmpxilo25zmrscy4w\"\n  }\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "a24166e8-9fa2-4e65-8e42-0de4864ad135",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:05.432565Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_DeleteById",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    }
  }, {
    "id" : "0977a34c-8575-4ed5-8601-faa3377f9539",
    "name" : "Deletes a policy assignment by ID. (application/json)",
    "request" : {
      "urlPath" : "/o859",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "lpd8unrf6mhn1os3mtossonbteogih8a4ytrig78rkstjyyn2i0o18op6"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Raymond Herman\",\n  \"id\" : \"w76d\",\n  \"type\" : \"vezwga2h9rs434j0g0wmmi1yyfpjel6g04evosd86i69gc4xr3lqix8h3gtgradvh7n83wodce0o2qfyw23dgeu0o86lq6x3e5iu8sqf8rtxfuxibei8fyfb8w8cf7d858selxsspum11s45x99uelfu\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"o2h6\",\n    \"displayName\" : \"Mrs. Kristopher Treutel\",\n    \"scope\" : \"694aubomyz5njxu0flb6e27vryv2xfeo3l3t80rtjp09p3gd5n15e7axujla7eczuyt0793z703djw03fz06vpj9dhnbyoxpr86dm9y9j533xqgilr179k6paumzwv11fyrufoihmfoqnk1hvl3ubcvj8fh3v0kw59kdwmp2dk9cgi7wqh\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0977a34c-8575-4ed5-8601-faa3377f9539",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:05.43221Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_DeleteById",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    }
  }, {
    "id" : "939a4eb6-81bd-41ca-a98b-9db243f4306b",
    "name" : "Creates a policy assignment by ID. (text/json)",
    "request" : {
      "urlPath" : "/3rdu",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "7ca5ob61ekyi5zbm1cjnd1jywpyv2lkmeeox96syvk742fkhyzs95sefk37uzzi875orlhaccazlb32ytshx28bovlwgz7jf9pf5xbf4qt3v2lvn6cv2m5pclb8j2u66aa166w3yo6bp2e9ikn9w8olch9yk4vse6oxailblfifzj0fw4d1nsgifwnxohnj2u3wu"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"name\" : \"Norris Berge\",\n  \"id\" : \"ktq4\",\n  \"type\" : \"ynqr175h36ysrqkpyie4h35w4khdel09gjwbg86o6x7suykpttyuzjbz2gx5kqgvq1sgd7xrcju5ccitwgabk6oooi91r3hrnrkucj5iw18kd9ei3ssji4hmrxgx34yhxr5lpwrtjk6i5sw7h217vac6rffh0q33cqjmo35\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"w10a\",\n    \"displayName\" : \"Michal Parker\",\n    \"scope\" : \"fofetsl9b9wy8hxzk9oyg0zi7ocq4261bujkmtxhgoi1dyz85xk4r2fc6bsoff8nqx5szhxuydwjanlofheooxf6f6xk9mbq1qqkdx7es7eap53nrfoca2hk8twihrtmvrabq8hzvgfkl7a1xsuafk05eccn5bxu5hdtz6ftmuwfa5dd4wm1igdmv77lkt87qzuihk\"\n  }\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "939a4eb6-81bd-41ca-a98b-9db243f4306b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:05.431852Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_CreateById",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    }
  }, {
    "id" : "2f4f9bbc-77fc-4056-99ab-29bea8c39526",
    "name" : "Creates a policy assignment by ID. (application/json)",
    "request" : {
      "urlPath" : "/9973",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "dc1nqa0xygh560iw8memd1zdjd9sm6lyxk7pyfqa2f9fyxf5ygh34nkje4y8inhiytbawc6q4bv6mnzccmyaffoa6n72ab66mw7otkjgemgd9amjubv7ylkw2fkg9qz0cstt05rknw397qrlgnn9rucfw"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"name\" : \"Rosenda Blick\",\n  \"id\" : \"rj9f\",\n  \"type\" : \"4zpe8t7hx2wiqkjq6kpjf0dr4ep\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"v401\",\n    \"displayName\" : \"Jovita Dare\",\n    \"scope\" : \"i5c2zqv3cqiekh03u6q6gr8j3dydub010es2nur50o75ol89mz5eb464zf5ebwaaek3ziyp9881g0lblolmamfdphzqfh8w3c\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2f4f9bbc-77fc-4056-99ab-29bea8c39526",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:05.431507Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_CreateById",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    }
  }, {
    "id" : "15ef2f5e-053e-4525-936c-477bf53e64f9",
    "name" : "Gets a policy assignment by ID. (text/json)",
    "request" : {
      "urlPath" : "/0qz4",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "vva9c5vzdmf4f0bnlv764eyeasqfufudyd"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Lee Jenkins\",\n  \"id\" : \"059e\",\n  \"type\" : \"dcwg0oh\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"by40\",\n    \"displayName\" : \"Ms. Shirley Ryan\",\n    \"scope\" : \"4mb1zbtdxs9\"\n  }\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "15ef2f5e-053e-4525-936c-477bf53e64f9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:05.431154Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_GetById",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    }
  }, {
    "id" : "9908a86a-16f8-4048-ab57-0fb9f3a4adef",
    "name" : "Gets a policy assignment by ID. (application/json)",
    "request" : {
      "urlPath" : "/e3t1",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "cl3nr7mgsp7t16rsy7d5r72nsuy9n1oawd795mhn16tw4yddcdrultszo3bxuk529xxtpwba8paa4gezxduqjc7975yladnyjrmn1xk4ta32zxb"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Savannah Heaney\",\n  \"id\" : \"pee2\",\n  \"type\" : \"jn6g9w7yik6fvylleu\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"5hqw\",\n    \"displayName\" : \"Charlott Lesch\",\n    \"scope\" : \"957w9uxs87iytxeppovy3uw47sx0lv0og7651l70fip177l8pxlmdejk179vmfar5gz50yw5gpj9iabg3n0cyepyynzdcmklzwk6yf5a646zuiou150s84jbrtf6q\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9908a86a-16f8-4048-ab57-0fb9f3a4adef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:05.4308Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_GetById",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    }
  }, {
    "id" : "1eb5aecb-cba6-4ca3-a1a9-359bf73f6f45",
    "name" : "Gets policy assignments for a resource. (text/json)",
    "request" : {
      "urlPath" : "/subscriptions/w6z9/resourcegroups/zc%28PWZ21rpi1XAiuMLpdLLqoBFx17C1YS7cepeiOCfupHFHEhfVE%280005gtS2/providers/yewzzq2rgvqhlgypxza6pxk3zbtnj5uyr9qciphkcznxol3x3p3aoj1/ospm7rbapjf2jm680gqtqkh4xscuye16j1whtsbckydp32x7exskcqs2ba5ksnvshvuyx9y62s6nunz0kunp74pzlqtvurz58c46zs1uitggojnrafcxu4r2t2m0me6bafgs46jehma9akfrkl1adazhtw9j7us044kh76x/en03jiw7fvfctqw1mkyla1f9o8l0jvhzx26kv9gkw63dl2g123ul2fhawshhpbunbcpkh7ihs1s2727q2v9me2t8pqk444x2v7hrokk3sz3o72bgvoqd8puyg07eusvk5x1f7bt17kojkif3s4el2m4t4dqmo1mmd5eh79dih/Raymon+Lehner/providers/Microsoft.Authorization/policyassignments",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "w029jcird2u87po1hwcmtvggw8tk3188418m50375zvdmxquyh1pmh6re826a02lrnzpq5xwu3xe26qwgdm1ppere9vmwzpee7ayrdc6rxx1y704w9g8571b5ure0lzmoght3244d2u0r68p2927fojkakz04yelpvia8vdibyl"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Cinda Gleason\",\n    \"id\" : \"h9wv\",\n    \"type\" : \"wkpkh48y23bx6wwnqjs8gysj50ajfuflcs5xp9q9fbjtb27cutdz8kum7w4h0wrx14dn6p4wqhlt2px7d49b8auzowmzirfc3txd93wp33gk0bosbnvrnie4afnotlq8y12xh1s\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"92dy\",\n      \"displayName\" : \"Mr. Antonio Bauch\",\n      \"scope\" : \"r1yw3sal9wadgmhnkyamym9mzvjmnkdzvn7hrmd9p7ztzlzn8zctqzz6lk14cwry0phglqrlqvj1u3xpd7xwg7xggvfvrhygtvqhv93uhkigpsy0e4\"\n    }\n  }, {\n    \"name\" : \"Carri Mayer\",\n    \"id\" : \"dg71\",\n    \"type\" : \"dd1t4wle4lweuge0jcve938kbr2g234dh20qrc9npyoou9l7g8usm3wkj09qnkubjvcevlijxcvspbndhqhiy5fls7qic33r0qvjoska42\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"0g47\",\n      \"displayName\" : \"Chris Rolfson\",\n      \"scope\" : \"i7r1jrs3f2q9o83aq2m9svqqpruef1t78fzesdbejrjytniscn4xy559w18r6gm6kuo2fyaua32c8rlwv8xjq3pa88d2at9bvudau24ugmn69yxkruomdyl\"\n    }\n  }, {\n    \"name\" : \"Alyssa Hickle\",\n    \"id\" : \"9k5m\",\n    \"type\" : \"6r1ebkqsx0or5ffxtp170jg8o0h7k\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"84qs\",\n      \"displayName\" : \"Jamey Grant\",\n      \"scope\" : \"yqyvobyxo77j\"\n    }\n  }, {\n    \"name\" : \"Vivan Borer\",\n    \"id\" : \"5wiy\",\n    \"type\" : \"dcr9p80bmc0ha9gruzgaakvwudfqvf55d2e98jjnlz7cl7jxaoxq1o6zbbjlbn3om749bszkm2dkoqwms28wi4ke98lki6tvf3gmi\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"g7le\",\n      \"displayName\" : \"Sonny Heaney\",\n      \"scope\" : \"i6zcadkvot5abzne8zhxyga\"\n    }\n  }, {\n    \"name\" : \"Steve Gusikowski\",\n    \"id\" : \"g012\",\n    \"type\" : \"7el2z7k76jns01qj20pvryv47uws100d15hcf67uwz9ly5z0sbq90q3bp8r8ilmvwh0zw5di8gdxrmz9dyzudwz4sajgvbqdwftoybqxhglvmwnk1v87\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"wkab\",\n      \"displayName\" : \"Leticia Hoeger\",\n      \"scope\" : \"r4rzu200ev1yw3tvlsam0fh3y2zpnzxwcztin5wnfiz6hg68gn8uigjjfyzur7mecrfnuxkhozvl00vtjhxtnkxch5cwnotdvsn9eqzaxt1biq1gzu9w3bedas5b8172l2lqs025uquwqro8k18szakbofib9motuwzl\"\n    }\n  }, {\n    \"name\" : \"Odell Sauer\",\n    \"id\" : \"94uo\",\n    \"type\" : \"ht1evnvg26peapu58u4yefjxc6bbda64xhe7oqzxroqo86vk4v5dwmc4sim42rn1ag7xqman3b9tdt8lou8un7hj5l4hf05oxbl7decbin8fm8wx4yhv5n0lyqqjm7g2f6ab4msosvl8l10vkhgz2hrah3bsaf6lyd4kvv7799fam0\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"al72\",\n      \"displayName\" : \"Lashunda Bogan\",\n      \"scope\" : \"h4d75tz4yyoii0wsggxow5lv773yjsv2khpr9kmla25scodm4k8zhel5o04iasm4x0czhcgee5ijqxu5k0c1saedzfua\"\n    }\n  } ],\n  \"nextLink\" : \"so0n1lo556h7sg9wbni96kh7hto3lv0k2nm5ydk8p9pzlj1xq2692mzoesvp8ubelg2dth2974vrz0wlmyies2xhhs68ue3htc340j5qemgjbfmcxn98hurtkqmmlqg80u16fizuql0vs1bwiwsj0picb5yh3aeb0nhngezbbbyv84f46uijzrg78rfqoelbkrr7p\"\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "1eb5aecb-cba6-4ca3-a1a9-359bf73f6f45",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:05.430408Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_ListForResource",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "The URL to use for getting the next set of results."
              },
              "value" : {
                "type" : "array",
                "description" : "An array of policy assignments.",
                "items" : {
                  "$ref" : "#/components/schemas/PolicyAssignment"
                }
              }
            },
            "description" : "List of policy assignments."
          }
        }
      }
    }
  }, {
    "id" : "fbfbdf31-77b4-449b-9ab0-25d3370cd66e",
    "name" : "Gets policy assignments for a resource. (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/5zg2/resourcegroups/tk8W4qQDGa%28b3h_HWnHeH2BmPMLXOZz1Me.RaqmZdnWqjOi9DRE/providers/59dd97daarbooeo8isbb4x78cqk5e113faxcgtkhdx258e2x0cp6appdryppiq306z54jpnhlcpdt95bwuol795g55s2t8sgkrcurax0yvdzvntu6ao73hvxu5x3on8z263271nsw65ozo56qe1d512t2to5e3uhl1c7or1tnqpgpwbjk146u/wuy65j3t6vrl98vxrwyyz65aq3rz1ap0eor0iwhaorgew4hev8gdaofhmkav9hbl0qa4j1vozlh6zzzdw2usykmnsga112qf6awc498cyhdu4nlm6ohl0pyu4wo53x01mi5ytok2lqej1jsz245el4fg0hv7hcdd3oxgxbjd12e/immx2zwoxz168szga7r90nb77vesb9dn20w3zg522b1uus93p332znv4pwpc1ipq9n3f9h1ar0q29ygr/Ms.+Owen+Hartmann/providers/Microsoft.Authorization/policyassignments",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "cocrz671g6wgxk0wasyjspwoyzm2gsionz7"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Caron Vandervort Sr.\",\n    \"id\" : \"ehs0\",\n    \"type\" : \"mr80uc16oa957gd6r8j\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"tz2e\",\n      \"displayName\" : \"Hugh Ullrich I\",\n      \"scope\" : \"np2axyvg37xd2gf0soox20fygjc795acbelpcrmp\"\n    }\n  }, {\n    \"name\" : \"Curt Stiedemann\",\n    \"id\" : \"318d\",\n    \"type\" : \"642985h115xh1mymj882461e4qlowhovfyu33ddpj4p9iq4s7oudwqqunib3br0vol78hley2yq8w3v01gu02rfxbvlrltorv2wmsmj05atmrqp8v3\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"50mn\",\n      \"displayName\" : \"Matthew Schuster\",\n      \"scope\" : \"feiewlg4ccvy2ay28bq2zlq30up0e2l08mhboxorqfh6fsopfazt1ju2yqd9plv96poiqyh6r649i5c5xa2s8dlyzoxuihy8x7t9q1rcfhi28429fbw5by8gaho47d5n\"\n    }\n  } ],\n  \"nextLink\" : \"h5u0q6gdun42aoj91g3buh3vp4uttba9zzp9s56p6kexqtbr9rrnofudqtpz2pn0vkitfevr31c25takdknhe42sho2s44qlw1ielpj7zj5r2g65wrvlcm7j7uw3mwr7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fbfbdf31-77b4-449b-9ab0-25d3370cd66e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:05.428729Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_ListForResource",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "The URL to use for getting the next set of results."
              },
              "value" : {
                "type" : "array",
                "description" : "An array of policy assignments.",
                "items" : {
                  "$ref" : "#/components/schemas/PolicyAssignment"
                }
              }
            },
            "description" : "List of policy assignments."
          }
        }
      }
    }
  }, {
    "id" : "2dd13a4e-3696-4cfd-85a3-0c9b295f3407",
    "name" : "Gets policy assignments for the resource group. (text/json)",
    "request" : {
      "urlPath" : "/subscriptions/uec3/resourceGroups/W0lHl5S/providers/Microsoft.Authorization/policyAssignments",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "0d72yn40ay73mgv1cqav3u2zh0irflnelgutooboigqv2ddt1nmipnfh8om0dyigr74ybnvs97ai296xqnf6x8h0khfqtpfozs55tfavy5j10ouhuaa2udmjnmkywhshwr7zryj1ee43"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Lavern Ruecker IV\",\n    \"id\" : \"tqop\",\n    \"type\" : \"8dgmispb0nsh2uefl3o1ualmf9prhj93mxm2db61l1qbruy6sv16vdx\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"91e4\",\n      \"displayName\" : \"Ms. Emanuel Hyatt\",\n      \"scope\" : \"t393m2sqvt7ogrrjxbf5zhxonzllop4ljmbnwy35op669h56jkncrh5a5dbbrbqd4dcqrny4p5wem4crdqtuyvn3uh6pro3t976j4nlwv557ussmtdk6ujwc2jd6zcrcpk2o3v06p6si9lusriykxg3rofhr5ea0\"\n    }\n  }, {\n    \"name\" : \"Keena Denesik\",\n    \"id\" : \"1ao3\",\n    \"type\" : \"2ciack6nhuk9heq6ckpnwqp992muh317nbgryyv2iherry4s3jy436m4i98foryjpjx6ms713rgh4imni6ku1oslzgkygq6bmilco0oy2pbm0ddxpirhgxb119y\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"d6rc\",\n      \"displayName\" : \"Ms. Cathrine Emard\",\n      \"scope\" : \"p4gnfov3fsq37kpcqptcvozo9rh2rbuuboxy64e26a5ddjcv6or5es731ywmm2oddca6ttw5brhw2dmn\"\n    }\n  }, {\n    \"name\" : \"Isidro Bruen PhD\",\n    \"id\" : \"fjwr\",\n    \"type\" : \"gm9m5n0knsnxe3weki70oh4nywwqgsjg7klpskcwecadqjkkr7jo46u7v49nbgx26l6rplq86lvlt80zbqk6rud06zx3f83vo3ltgb5kmf71ufiu8f7h2bnsjxftfz3y5gsmx27ouygmjvkbiuzdh4h1zq\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"f18y\",\n      \"displayName\" : \"Izetta Koelpin PhD\",\n      \"scope\" : \"9q812keibx0gze15rcg3rgqjurpg6tglssc0rt\"\n    }\n  }, {\n    \"name\" : \"Josue Rice DVM\",\n    \"id\" : \"2589\",\n    \"type\" : \"c5rwzgtp4wqqrocfism28y7vhndqex1fjmkhaf2jzivbierpkasgltfokhgc9t2e5\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"c1br\",\n      \"displayName\" : \"Jeffry Friesen\",\n      \"scope\" : \"3ptpj1unm0z8m7nxbgyuu5hilgy7elnpum6qjnbztteuqu7jawst8z6tz5g7b3maeumjn95mrfgfdpacphuwoialeg03kclkc141cygrd8ystpyssntrqvp5i5d1s0zl579\"\n    }\n  }, {\n    \"name\" : \"Santiago Wuckert\",\n    \"id\" : \"hnm4\",\n    \"type\" : \"zq538vd9hiiunaacxv6zqmtaprph1xk9vew848jg481y5xbtat69r1b7ybupox14ibhww6xo7hwhfuy6oamcap6w5y0mnv9bcty74autz73qze8lgbwk0nikz5guorjfms1e4umhwsx20z3f5qqisub3bva41un84cjvsuyudyn6xh288b08hnabmy\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"yo2p\",\n      \"displayName\" : \"Dr. Del Williamson\",\n      \"scope\" : \"8wev4aq5waijbqva5mrnhd8ssiofik288nbzsfjwqd37zcsowlxj8vp6nd8vg\"\n    }\n  }, {\n    \"name\" : \"Jewell Conn\",\n    \"id\" : \"99p3\",\n    \"type\" : \"wmryix0td831avkx268l28k7m47sdimmolordt5akic\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"9zqy\",\n      \"displayName\" : \"Dalene Schultz\",\n      \"scope\" : \"6965ivipk1dntkqh031q82ac36njg6ekrc3zmi2bwp2hqxhhyvghzwba81nsocf6b7p4pg2vrhhnjd2z4dpdz9fsend03jph6cnxvjvgiuka9scwc4xzwjy6yfea1fhdf9gts0w70e01bpkco3mi7k3vwi3zwjqirdy85aesfbic1lay98hjnl\"\n    }\n  }, {\n    \"name\" : \"Spencer Pouros II\",\n    \"id\" : \"wjhg\",\n    \"type\" : \"095fhtnf1ptosn1o29kgy6p0znnp2qagharuu120ufdck0f5wget82m5ac2a27u\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"6jmn\",\n      \"displayName\" : \"Fermin Kuvalis II\",\n      \"scope\" : \"4m9xt4q7j56hbnibydq2jx65su64hg\"\n    }\n  } ],\n  \"nextLink\" : \"8cahp045ylk7ni0b7pgkb7ad1tvhtncsd7si4n3um5tvqbdntbpgapbfks19k\"\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "2dd13a4e-3696-4cfd-85a3-0c9b295f3407",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:05.427771Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_ListForResourceGroup",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "The URL to use for getting the next set of results."
              },
              "value" : {
                "type" : "array",
                "description" : "An array of policy assignments.",
                "items" : {
                  "$ref" : "#/components/schemas/PolicyAssignment"
                }
              }
            },
            "description" : "List of policy assignments."
          }
        }
      }
    }
  }, {
    "id" : "30569441-b4db-4e9e-a279-b97ef21b7ac7",
    "name" : "Gets policy assignments for the resource group. (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/smk4/resourceGroups/3Cf4XLqgUf9CmVtm1FBmqVgOcJopJ1nyGRVR7eK9jJXMShyPfBosqMrZvFrztyr9wVcKjx.Be25I2dH7AOP2Sq/providers/Microsoft.Authorization/policyAssignments",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "ntcdrev0wcvz7h4ijq9wrb9kiyptgvog5aibd11c8gn"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Dorris Von\",\n    \"id\" : \"z1bq\",\n    \"type\" : \"yzbr9jd5l26hyzplsx9is8ic6o8uo5feauqu17a8ue0i6pgu8299opupyny1aw3xzmsmtxq7q8zb2yrnw2ydl5raqtq1qoxdhn6t21ho00iwgm9o21ylx1jpnk5j5hwfh28ziv1l5i5kis6l54v93dop0fa2fykgrh1fea3cbfaft26eeypmq19\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"783u\",\n      \"displayName\" : \"Ms. Flora Stehr\",\n      \"scope\" : \"ukd3li5r1pp3bg7zj9nsoummop7y77dhlhy2czexlexgim6951bmvkqqvofd0jdo2d7j62ngwntdeirezai4t5t648hbnlwwac8szq42c97jphpqihm1nhya7bve8yzh1vp5ogb9fya2h7h56g5yj6im88kck9djvk6g8ghaiv\"\n    }\n  }, {\n    \"name\" : \"Elena Marks\",\n    \"id\" : \"y8fz\",\n    \"type\" : \"6ne8upkb54rm4igtw7latiad9ep2ewd9qzbecdc708s4vdbews1c3eca14yraeqij9spwqlbpby5x3ocstklmahxl1vkw1symyyu60wvtm236rc637mllwm21sbt67acvb1je0nabhjgvhd62yvxnyehbc3f931hxildo6hdoozvuy9u\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"wy2i\",\n      \"displayName\" : \"Senaida Kunde\",\n      \"scope\" : \"gfx5fxdqln\"\n    }\n  }, {\n    \"name\" : \"Marline Legros\",\n    \"id\" : \"ekb0\",\n    \"type\" : \"ovspqx6afs089g0a2f9kpemxnabnynz3ljfezuh23x62xeqvfcew7sw1k8f24kemof2xnjo3ep605vah3kpnwol49xi7uqktj7qaomwxi5emb8gqzm6s94l6ly1icrrorwez2sd9474zrlkoxuitylwzeiry3lhs8duem9jh0mnwued9edo7mfmsqmkhzimnnq\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"hn9z\",\n      \"displayName\" : \"Georgina Simonis\",\n      \"scope\" : \"o2u2y5bfyp6tjyhxxbu5dgdlgjir9649wwr9b80rvw6fuwrr1fhitcg34xmni4jlyvfzzi\"\n    }\n  }, {\n    \"name\" : \"Lilly Kub\",\n    \"id\" : \"2g39\",\n    \"type\" : \"0of724jzlw2t5zpu9kef9j1851o3d5qe38zzbdi0mnk7hz81m2\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"fsz8\",\n      \"displayName\" : \"Latrina Kassulke\",\n      \"scope\" : \"bs2mc9tx7kmbrzu80h5knwt781pur7s5zekk9w41t6ik4lhdr1bj3ujua6wwe39y55062hetyxctupys9bmsab8c69bt4rrrx0uz7311l2e7tq\"\n    }\n  }, {\n    \"name\" : \"Latrisha Deckow\",\n    \"id\" : \"5106\",\n    \"type\" : \"rypgqehdgyjrqmdf\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"2o6u\",\n      \"displayName\" : \"Ramon Terry I\",\n      \"scope\" : \"cxtezitil9sjp7rglslaxyo79ckhu0pxp9cnfg73fvpifn1zrfqnod5gvf1f2a7jk1p3ahwynqihkt7t9ghzr8fqamz5ca7e5k1zq4rvl5bl7v1yx3\"\n    }\n  }, {\n    \"name\" : \"Erwin Lakin Jr.\",\n    \"id\" : \"44yd\",\n    \"type\" : \"wlej47v9yq41fmrxovvnowmkjbz0zllxwoelzeql42c4wrria1fbqhbgg3z9o7z8mh3ypurn9dycpuqqpquapstpyl45uvjx6zi66t9bhpv9yx88jzhdgh1ymmezafcfgzauw5y28tpeua0mujbvbwmqe8v439pio0nuqgoq6q702\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"5mf3\",\n      \"displayName\" : \"Miss Darin Kris\",\n      \"scope\" : \"diwqr9skkm1grolq8hmh1lrjeydjwaira0iz3wumfii4x\"\n    }\n  }, {\n    \"name\" : \"Ernesto Gottlieb\",\n    \"id\" : \"4y2r\",\n    \"type\" : \"y9yib95xg58vgy4oufuoip48kkpyil6v0sok4d8m72bvz80zd3ktwhcjf3x47zasv2jc3qbcqsbic74gf1kcor6mq9dr4k7218lwiygg7foqak8wd4evasj8mm8yghi15egi1sfd7qi9pxji7q3dzvm17\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"276i\",\n      \"displayName\" : \"Mrs. Blaine Barrows\",\n      \"scope\" : \"szov0s5jumriu80p4wt2xl7uq6rusec4nir8dgubip7btcnpyurs4aj7v7m7a4mjn\"\n    }\n  } ],\n  \"nextLink\" : \"ilwyulw82k0znzl8e7d3ywq13i94hhdrfysxqmat6p1vjs6e6llp3wpl3sraiewaa6qnglrwxw6k6ngfxsi53bt8ac77kt1ubufecu717imdwi5r0m03jvu9aa4yj44vc2uwx1ypuexgwg369o67bi4tq\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "30569441-b4db-4e9e-a279-b97ef21b7ac7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:05.425777Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_ListForResourceGroup",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "The URL to use for getting the next set of results."
              },
              "value" : {
                "type" : "array",
                "description" : "An array of policy assignments.",
                "items" : {
                  "$ref" : "#/components/schemas/PolicyAssignment"
                }
              }
            },
            "description" : "List of policy assignments."
          }
        }
      }
    }
  }, {
    "id" : "e526bfe0-822f-4d3d-86b7-31d5a897381a",
    "name" : "Deletes a policy definition. - 204",
    "request" : {
      "urlPath" : "/subscriptions/3x06/providers/Microsoft.Authorization/policydefinitions/Duane+Douglas",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "tqijbcziuf7pctuu0bwuxwr09lopdh0651yhh14vv5kn4iixvdkhpuxqsnbppg3as3cb8gg04z7qmfaoyvbvs4gvf2ybm8"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "e526bfe0-822f-4d3d-86b7-31d5a897381a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:05.423815Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyDefinitions_Delete"
        }
      }
    }
  }, {
    "id" : "b30b62dc-8e5a-4a11-b73a-8568b6ba043d",
    "name" : "Deletes a policy definition. - 200",
    "request" : {
      "urlPath" : "/subscriptions/0icq/providers/Microsoft.Authorization/policydefinitions/Chong+Collier",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "v0811mio2ucutly3tmy0az0zbxdsjair"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "b30b62dc-8e5a-4a11-b73a-8568b6ba043d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:05.423654Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyDefinitions_Delete"
        }
      }
    }
  }, {
    "id" : "2f349be5-c84d-4693-91c0-a687824a8687",
    "name" : "Creates or updates a policy definition. (text/json)",
    "request" : {
      "urlPath" : "/subscriptions/c9zy/providers/Microsoft.Authorization/policydefinitions/Hilton+Conroy",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "qjp9m6jydm8qeb52djl18vbaf0njo42ren0fxh"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"name\" : \"Lizbeth Christiansen DDS\",\n  \"id\" : \"1xo3\",\n  \"properties\" : {\n    \"policyRule\" : { },\n    \"displayName\" : \"Edward Schroeder\",\n    \"policyType\" : \"BuiltIn\",\n    \"description\" : \"Autem fugiat sit animi in. Velit totam voluptas voluptatem non. Id unde eum reprehenderit earum omnis placeat. Sit delectus placeat sint fugiat alias et. Minima distinctio iusto animi neque.\"\n  }\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "2f349be5-c84d-4693-91c0-a687824a8687",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:05.423492Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyDefinitions_CreateOrUpdate",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy definition.",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy definition. If you do not specify a value for name, the value is inferred from the name value in the request URI."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyDefinitionProperties"
              }
            },
            "description" : "The policy definition."
          }
        }
      }
    }
  }, {
    "id" : "c321ff87-9b21-439c-973c-6208e879bc3e",
    "name" : "Creates or updates a policy definition. (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/z206/providers/Microsoft.Authorization/policydefinitions/Stuart+Abbott",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "rvea023i8w2d6f1zftcrej55xt8sjljxvul6w996i2y2y1hlq9bd4fxppsagugh3rmxcx6ur2fopqiadlctfkywhu76os57qh9auo5bikn17"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"name\" : \"Harris Nikolaus\",\n  \"id\" : \"tppp\",\n  \"properties\" : {\n    \"policyRule\" : { },\n    \"displayName\" : \"Stepanie Kunde\",\n    \"policyType\" : \"BuiltIn\",\n    \"description\" : \"Labore ad aut sed quis aliquid. Quis iste nihil consequatur recusandae architecto qui soluta. Similique cupiditate est rerum impedit. Perferendis sunt in. Pariatur doloribus nisi consequuntur.\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c321ff87-9b21-439c-973c-6208e879bc3e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:05.423132Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyDefinitions_CreateOrUpdate",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy definition.",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy definition. If you do not specify a value for name, the value is inferred from the name value in the request URI."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyDefinitionProperties"
              }
            },
            "description" : "The policy definition."
          }
        }
      }
    }
  }, {
    "id" : "8297f502-d696-4c7e-befb-7f18611fe7b0",
    "name" : "Gets the policy definition. (text/json)",
    "request" : {
      "urlPath" : "/subscriptions/v455/providers/Microsoft.Authorization/policydefinitions/Waylon+McGlynn",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "r3mqb9cvaduyuhs5ytjzbhdi9wfb1zpgkt7ytgyg4ab3vmw07hgwgakn4i7k50odupkabnj5468elgtgvuio1w5c243hm9pj0nxbqnq8"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Rex Kuhlman\",\n  \"id\" : \"494z\",\n  \"properties\" : {\n    \"policyRule\" : { },\n    \"displayName\" : \"Adolph Cormier\",\n    \"policyType\" : \"BuiltIn\",\n    \"description\" : \"Non voluptatem doloribus quia quasi optio enim. Eum quaerat dolore et enim enim sit expedita. Ea cupiditate earum maiores. Et dolores ipsam commodi. Doloribus vel vero ea ea iste quasi.\"\n  }\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "8297f502-d696-4c7e-befb-7f18611fe7b0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:05.422755Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyDefinitions_Get",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy definition.",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy definition. If you do not specify a value for name, the value is inferred from the name value in the request URI."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyDefinitionProperties"
              }
            },
            "description" : "The policy definition."
          }
        }
      }
    }
  }, {
    "id" : "016ac8aa-2ad3-4b95-8328-b4ef876bfa2f",
    "name" : "Gets the policy definition. (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/i34d/providers/Microsoft.Authorization/policydefinitions/Jimmy+Kuhlman",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "y1m2kplmk5fjpe51l3er7sydromh1ggw9daq2dyze7x8uef6w9selwry5qbg2n69ht6x90416f9h9pqyqxgtaqj7w4jkcczpuy7qt2rtcojird6cbr2"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Dr. Dara Gutkowski\",\n  \"id\" : \"r86p\",\n  \"properties\" : {\n    \"policyRule\" : { },\n    \"displayName\" : \"Augustine Leffler Jr.\",\n    \"policyType\" : \"BuiltIn\",\n    \"description\" : \"Quisquam excepturi et officia soluta rem similique quia. Dolores eveniet necessitatibus quod ut. Iste temporibus enim consequatur.\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "016ac8aa-2ad3-4b95-8328-b4ef876bfa2f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:05.422382Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyDefinitions_Get",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy definition.",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy definition. If you do not specify a value for name, the value is inferred from the name value in the request URI."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyDefinitionProperties"
              }
            },
            "description" : "The policy definition."
          }
        }
      }
    }
  }, {
    "id" : "f7e9d430-4790-4f56-ba65-19d164ae0a30",
    "name" : "Gets all the policy definitions for a subscription. (text/json)",
    "request" : {
      "urlPath" : "/subscriptions/y4qp/providers/Microsoft.Authorization/policydefinitions",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "7mzhycdbkr8f7hytdtws0ch0hg40f1jn2mmk0v86s813i4opy4ovd4ff6tupey3nvp0w3i6uapghyojjopiyfr9t7hf54vx9m0ntvp"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Celsa Smitham\",\n    \"id\" : \"np12\",\n    \"properties\" : {\n      \"policyRule\" : { },\n      \"displayName\" : \"Miss Carroll Rosenbaum\",\n      \"policyType\" : \"BuiltIn\",\n      \"description\" : \"Quod officiis possimus voluptates praesentium. Quis totam quos non. Vel architecto rerum molestiae voluptates. Corrupti quis deleniti nemo.\"\n    }\n  }, {\n    \"name\" : \"Keli Terry\",\n    \"id\" : \"az31\",\n    \"properties\" : {\n      \"policyRule\" : { },\n      \"displayName\" : \"Wilbert Jacobs\",\n      \"policyType\" : \"BuiltIn\",\n      \"description\" : \"Tempora corporis ipsa iusto. Est quibusdam rerum et. Laudantium rerum aut enim a est doloremque ea. Qui corrupti et eveniet totam necessitatibus voluptas. Eos qui voluptatem doloribus possimus distinc\"\n    }\n  } ],\n  \"nextLink\" : \"vo5k9euo540lnnbx6s2hed2j2kf5s1nm8v1bkazk3grod58zxqhoq7swkxtm94qwl\"\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "f7e9d430-4790-4f56-ba65-19d164ae0a30",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:05.421972Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyDefinitions_List",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "The URL to use for getting the next set of results."
              },
              "value" : {
                "type" : "array",
                "description" : "An array of policy definitions.",
                "items" : {
                  "$ref" : "#/components/schemas/PolicyDefinition"
                }
              }
            },
            "description" : "List of policy definitions."
          }
        }
      }
    }
  }, {
    "id" : "2e68dd64-0e3c-4b61-a122-fc71525fbe08",
    "name" : "Gets all the policy definitions for a subscription. (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/6f6u/providers/Microsoft.Authorization/policydefinitions",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "2d7ygepy5fmqz2z457j3k9zbdw5ghkj50uly3ddt1psmqk63n5s8et66lcvfu6lza0aedb0efcqjf5gywze7g5i726m2cckmb5lacjaq73ow7q2748cs1mzv2nr4fo2ns6vxhx39pfhry1dwjei32mh"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Merilyn Kuhn\",\n    \"id\" : \"4383\",\n    \"properties\" : {\n      \"policyRule\" : { },\n      \"displayName\" : \"Jane Beahan\",\n      \"policyType\" : \"Custom\",\n      \"description\" : \"Aspernatur sed illo voluptas numquam vitae deserunt. Enim sed itaque at debitis. Aspernatur soluta ut non nulla aut. Consequatur amet repellat iure quo. Ullam reprehenderit a.\"\n    }\n  }, {\n    \"name\" : \"Eli Cummerata II\",\n    \"id\" : \"ncx5\",\n    \"properties\" : {\n      \"policyRule\" : { },\n      \"displayName\" : \"Dione Reilly\",\n      \"policyType\" : \"NotSpecified\",\n      \"description\" : \"Quaerat eaque qui deserunt et consequatur. Necessitatibus quis dolorem at error atque possimus voluptatem. Corporis quidem quas a veritatis ea.\"\n    }\n  }, {\n    \"name\" : \"Boris Cummings\",\n    \"id\" : \"x5hr\",\n    \"properties\" : {\n      \"policyRule\" : { },\n      \"displayName\" : \"Lizeth Boyer\",\n      \"policyType\" : \"Custom\",\n      \"description\" : \"Quis nisi voluptatem quaerat eos autem blanditiis. Rerum cum voluptas quos atque facere. Impedit sapiente cum saepe.\"\n    }\n  }, {\n    \"name\" : \"Nguyet Osinski\",\n    \"id\" : \"vbe3\",\n    \"properties\" : {\n      \"policyRule\" : { },\n      \"displayName\" : \"Fidel Barrows\",\n      \"policyType\" : \"Custom\",\n      \"description\" : \"Voluptates quasi quidem eum autem illo aut. Alias quis consequatur et. Voluptatem error enim minus. Id et et pariatur nisi autem non non. Commodi optio est.\"\n    }\n  }, {\n    \"name\" : \"Cyril Gutmann\",\n    \"id\" : \"3vsi\",\n    \"properties\" : {\n      \"policyRule\" : { },\n      \"displayName\" : \"Ms. Lucien Lemke\",\n      \"policyType\" : \"Custom\",\n      \"description\" : \"Sint neque labore est. Quo nesciunt a repellat nam iste. Vitae at est similique autem. Sint dolor dolorum voluptatem occaecati. Aliquid quidem ut itaque.\"\n    }\n  } ],\n  \"nextLink\" : \"ylt95nqrp4zusheqnal3ew4cqsqs99fkmvf0gpp2de7xvg17r6lnrd5vxqwdjaog\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2e68dd64-0e3c-4b61-a122-fc71525fbe08",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:05.421394Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyDefinitions_List",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "The URL to use for getting the next set of results."
              },
              "value" : {
                "type" : "array",
                "description" : "An array of policy definitions.",
                "items" : {
                  "$ref" : "#/components/schemas/PolicyDefinition"
                }
              }
            },
            "description" : "List of policy definitions."
          }
        }
      }
    }
  }, {
    "id" : "e4021676-4922-456f-93c6-236f10029766",
    "name" : "Gets all the policy assignments for a subscription. (text/json)",
    "request" : {
      "urlPath" : "/subscriptions/o7c4/providers/Microsoft.Authorization/policyassignments",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "651gnelc7i3c9z4dgge54b6arp4zguqdm"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Krystina Schmidt DDS\",\n    \"id\" : \"1v1p\",\n    \"type\" : \"9bzq4fh4tbo47vwu2fgqw36ae5237fnl6a6899lp43hyhphvypmqq6zi5eys2xarzws2zbhk17es68nz13ekugri44td5e8q0831jx62nt4gs1mzyd0cagtbfkz90fyc669k0073v\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"8b06\",\n      \"displayName\" : \"Mr. Aleisha Lehner\",\n      \"scope\" : \"tz4t9wtuh3ex7lbptfgfs7980xgpy5vydghky9o4ojpyfp7i5xfjpaiq5k1u6q1u3snaynb84n1fo8hjes4c20dgw2m1tokn4rowirf1nznd9lpmggwvxi2a9p56xmh5oa2hs4fdentvq9qsfidc5c2s8bva8xa\"\n    }\n  }, {\n    \"name\" : \"Dr. Lawrence Bernhard\",\n    \"id\" : \"oi2v\",\n    \"type\" : \"geifmp5vr6uhkxbsh4tke12gtpl3yn4772f9ilsq41j6pryy6wfp7ei57kp5hltvpfz7so5ulfcxkrnn9saur3levgvb9tbk9uyur4fo9rhumy7xgzu9if7q8djshhd1kjo6b2v3c52x595a46nrg0dtrne\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"16z0\",\n      \"displayName\" : \"Katherine Zboncak DVM\",\n      \"scope\" : \"nyvtsg4k6qdumpsrq4asg56wicppwj8i1frnbcuvbg5iu3ofjue1ed1v1fg65l9e3oohtk47x9h1p6vtuliu36fpqk86zq53wfb4gsioqbuon1uoyaekthfyt4pa\"\n    }\n  } ],\n  \"nextLink\" : \"qcuzdo62gkatjht3e8bzn76kh8dqoyepz9y2s0svc26k5t4o4wjh3r1f0pdgcf5mkg0oym6vw2m71x0l0jcs0wb9aq6limsx1kld\"\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "e4021676-4922-456f-93c6-236f10029766",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:05.420164Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_List",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "The URL to use for getting the next set of results."
              },
              "value" : {
                "type" : "array",
                "description" : "An array of policy assignments.",
                "items" : {
                  "$ref" : "#/components/schemas/PolicyAssignment"
                }
              }
            },
            "description" : "List of policy assignments."
          }
        }
      }
    }
  }, {
    "id" : "9fcc68fb-6b91-4b3b-8eaf-5c0ba59394fd",
    "name" : "Gets all the policy assignments for a subscription. (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/xrj5/providers/Microsoft.Authorization/policyassignments",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "qbw8kz9hum3u7k2vnpoo31ik1ma10xha48opetlokoe2k84imfy3wd51yyst2jf4itsc20u31okadxefbklokzhfxahbxttc3m7kbb9ur5wnvcvo5n2vbwwj65s3tmlcjbue2fe8h7vo"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Hector Johnson\",\n    \"id\" : \"turj\",\n    \"type\" : \"h4kdlh019tgpaowdid45x6ewihfye976r9b9q1psn3hgahytsbsclnn6s5h7512cpg5t5sgy6rt5xrbi8bwf7eozmmg500q91rtbdrx9o5blupkjov0x\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"qlx7\",\n      \"displayName\" : \"Chelsey Rutherford DVM\",\n      \"scope\" : \"gxeskmnx5ost8v03sr205k2edda6s5qregflk933exdl8ff30a2fc9zq31savi1n3vc4gwthek8k04clg80fy76kk1hkq9tnv5txwwjo32c19nko6dxa9g58iyduvcx6nkn0orfv5nx2cet05\"\n    }\n  }, {\n    \"name\" : \"Mrs. Janina Pfeffer\",\n    \"id\" : \"6uqg\",\n    \"type\" : \"uo4zmdo9893aktzey\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"y969\",\n      \"displayName\" : \"Sergio McCullough\",\n      \"scope\" : \"kqjezkeff39zwz32ymxp7pnziklw9bmiro0nkm9quhzazpggt2gxy9jjk0efo7ih8z2wntfsa81oktkmeo0v\"\n    }\n  }, {\n    \"name\" : \"Leonia Nikolaus\",\n    \"id\" : \"o523\",\n    \"type\" : \"ipetsrm8dxiwjcp77uixvovi7dxv141u5fb9pyy1mj89v08a349bn39yxkjyrcjwzd5ttzmq9b3n4eqit0zvnmj1a3p076vquxwy3hck56cik4cjd8b1k4nv92ux5c8t0tr68ddy2u6n8ferv696m2znwpeugyourbe8gaxmoppwzxkgog\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"layc\",\n      \"displayName\" : \"Ashton Champlin\",\n      \"scope\" : \"mokyly\"\n    }\n  }, {\n    \"name\" : \"Houston Wiza\",\n    \"id\" : \"pmc9\",\n    \"type\" : \"6bzn8xi6mmfev6iqlbxub23gob8l76er6jeg5d9dznvds3lwolf85sd3c4jr54svoeco0av53wuf1bks6qqqfhkl9asux\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"8tcp\",\n      \"displayName\" : \"Miss Bret Bartoletti\",\n      \"scope\" : \"m7jynfl0rgu2tp3jbo65l7pz9yxqla0vldxrkbo029lwxcrv4uuq6mqjvirhpa6maza86yjlxsk9yjkqrfg4cicb06860xqa7n10rl\"\n    }\n  } ],\n  \"nextLink\" : \"in7m3dxdkmxbdu5en1mpq\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9fcc68fb-6b91-4b3b-8eaf-5c0ba59394fd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:05.418948Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_List",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "The URL to use for getting the next set of results."
              },
              "value" : {
                "type" : "array",
                "description" : "An array of policy assignments.",
                "items" : {
                  "$ref" : "#/components/schemas/PolicyAssignment"
                }
              }
            },
            "description" : "List of policy assignments."
          }
        }
      }
    }
  } ]
}