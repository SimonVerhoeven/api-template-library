{
  "mappings" : [ {
    "id" : "74a0f71c-6fbe-4a42-8f58-b3027a6e9723",
    "name" : "Deletes a policy assignment. (text/json)",
    "request" : {
      "urlPath" : "/be0cf213f2685r0k11eoh6s6jj5lp3883zskff8typzins7t6xtbwrxpyuprwg9f749a2omfumm1d3nifn0moelehogjll1jko67tloskmjfrncvtyhxeytcglk5pl3aanoaamd8s4hp6/providers/Microsoft.Authorization/policyassignments/Marcellus+Toy+I",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "ty2vxcfkrjbyfvr49ozekcwc48pnulpue7tm7q13nxazt8egk14jerjv3ka1x6zygl4er7n8l52ezxb1n5mq6w9cmsdueh3k1w2qichdnil3kjc6qo9xaxo"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Jane Cummerata\",\n  \"id\" : \"03y6\",\n  \"type\" : \"673ca7wb8ebq2l3by7h71acwv16o7ypkyajzlvoe07jkxqwyue9sdnr02b852gb9f8xrvyfzvehstnapey5pylgsldjysc5ul78t57brc9pzmgoeo2c55e3gdtqbhedkx0ko2ve4vqcwzw3yq6m0mhbbo5558ddnekh4vlpa0bp3qvctfywmo4am8vpvaynns9g2\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"x854\",\n    \"displayName\" : \"Jc Leffler II\",\n    \"scope\" : \"fwayyzqprd7mix8m4i961cf703dhga6gn7sx0cb8yjfrfbqnbqq6vk0kh1273c7b70dwuj43irqs8cvl0ljkhr2i5khczqow230iqcaizi9p95xfgttmzv0mw4szd6scer16kkg818iqx1w9p0y6aw8smh9nkzgjmuoi46r\"\n  }\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "74a0f71c-6fbe-4a42-8f58-b3027a6e9723",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:03.48908Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_Delete",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    }
  }, {
    "id" : "4e054505-9759-411a-81e0-0352a612b6e8",
    "name" : "Deletes a policy assignment. (application/json)",
    "request" : {
      "urlPath" : "/ygh2c0zt48oueu951f09iwow7qwvf231sfphhg94ezih1cp7vwat0pv2k77ob9q7neq3h4qimbzg5i5tvucq74wo8e2a4owfa51vskv7o/providers/Microsoft.Authorization/policyassignments/Edwin+Fahey",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "n1dr9nkkcbc"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Winston Gulgowski IV\",\n  \"id\" : \"i6f6\",\n  \"type\" : \"0ftdh4lvewjuawm3wj1af1ag4ulse2sgx13sfltqjw5b90j6w5br17dec4894x5w9xjoxvcscm\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"b56o\",\n    \"displayName\" : \"Kristina Waters\",\n    \"scope\" : \"xk2xbx6r5wvjxf38ld84svbloc5lvjwrumr791jmcn28wdhza6ipd\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4e054505-9759-411a-81e0-0352a612b6e8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:03.488729Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_Delete",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    }
  }, {
    "id" : "cb8b4007-5143-4bad-9b85-c55716381192",
    "name" : "Creates a policy assignment. (text/json)",
    "request" : {
      "urlPath" : "/8ehcehfe3qiq2tnoljldfdcl7ixpesqfhg9z0/providers/Microsoft.Authorization/policyassignments/Garret+Wisozk",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "a3uc9opvfi3wgb3brrgno460v97kui9w80trd9g3u43b5iklyit9p"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"name\" : \"Ms. Kandice Streich\",\n  \"id\" : \"7so7\",\n  \"type\" : \"er6p3xlqd35g95zzphmf580ca49kv4uj8mb2g6x4bryvovrkmu03hcdx05hj1ffl5s000l3us2lw6jew29y95rltaosfxi0520u8h1y3kayjg2fiqwe7d1ohkhoqpdq9hf9p1ne4a5lktnuw98copvqgbwrizdoq6693iqs9fwtf0zbnoyikt40wvsaq5pirwz5ida\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"2482\",\n    \"displayName\" : \"Lavenia Grady I\",\n    \"scope\" : \"31o0a593c1506l5p9fcxbcz\"\n  }\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "cb8b4007-5143-4bad-9b85-c55716381192",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:03.488378Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_Create",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    }
  }, {
    "id" : "28698abb-59e5-4853-b2cc-6e9b3faeb837",
    "name" : "Creates a policy assignment. (application/json)",
    "request" : {
      "urlPath" : "/6piofph2cymivyhczfqj6coawbnevk1p4iy9dq5i2x7m3otnn4inswq3i60i9mf6fm0hvjjhx53qw6maix5zfn6xbjcvayc47aan88m82ehalirhsxvh33stdk8zoenhn1lx4lnedzo226ts8l9vgefeiqgoh0skhd5tsugz10p1rk7gvclm2mr5qg0fnmgpyn/providers/Microsoft.Authorization/policyassignments/Robert+O%27Conner",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "9jcdlgl11jquimucznlt468dqk2lqg3qg4m4oh4ago40j9q7pzxbje4f"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"name\" : \"Dr. Hung Funk\",\n  \"id\" : \"3fqe\",\n  \"type\" : \"2sc3qpv4rc8hu8p1pwvgfxmlyzc0bh414hvxsobndqwg4nco9bryys6yl15xm55xcytcte5s0ushmirudjf2pegbxa82vrn3knxyfaafe9nuivm0z1c0fwapeid5spjmaws0vw792myd14dme5lji\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"dzu0\",\n    \"displayName\" : \"Lucia Klocko\",\n    \"scope\" : \"nj0xl9fypm138oe3aouxbvabmhm6ic6clsrqz9yifqwy5e5k45zdzoeh3mecjipbxib6hfkfk82hv9sai90f4jwd52np4kn9uhen3pfzwo3x3z610ncr82dz8e99fisbdgqzilbofcbqzysu54l0qgkwr908qgt8ijob4m2ag\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "28698abb-59e5-4853-b2cc-6e9b3faeb837",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:03.488026Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_Create",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    }
  }, {
    "id" : "929526e3-a378-431e-ae76-bac1025e3b92",
    "name" : "Gets a policy assignment. (text/json)",
    "request" : {
      "urlPath" : "/4ju8zs5t4zorum3a4fehkvxlns6gd0wyh6q48oofnkydkk4k09uavwqsb0b46o1a0o30y7gxecqkbfxew4x5ct45ptbqwxro1ws71ky64zsqkdexo2i2tontdzryhd86t/providers/Microsoft.Authorization/policyassignments/Nadine+Bayer",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "cgx6rzdf47n32u0sfgc1n5b6felxceqqc99js6q5lhv0owgl4mza2bn2lpm5q2m4v781jvfuplh6mndmi4sfvpmgd3lwd8p8l5olyo5a9bev0prf8wb2sdrk19u"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Shaun Goyette V\",\n  \"id\" : \"lklx\",\n  \"type\" : \"q8bwq4oozymolfnb5djpjav5mebg9wo4aojlqjtlccgtmv3za5zzub2ysgcm5i890x4wi2e1u7xo5tobckqxxz6t3698kcycq3md0cfjwpzyyhhieigy7yv3k0a7djk1jli9bu7vxs84y7slaq5swgjfr6jw1y47u1iiwiiivqj0c8qraxaed\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"6ujh\",\n    \"displayName\" : \"Brain Gibson\",\n    \"scope\" : \"bbvucgza0ly2logq1ffj4ofg9wwadfy7gf4bu8tjlgwrpne7tn7n6v19uq2gpvm7sk8f08xhrxzomm5b6q8kp8\"\n  }\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "929526e3-a378-431e-ae76-bac1025e3b92",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:03.487675Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_Get",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    }
  }, {
    "id" : "fe2941c6-7f42-47f3-a18e-75ad714d9cb9",
    "name" : "Gets a policy assignment. (application/json)",
    "request" : {
      "urlPath" : "/dzrtstqdfyf31hu205y7wfv8ibbniopl1kc8mfztf7m/providers/Microsoft.Authorization/policyassignments/Delisa+Haag",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "r3gbump5y26wrm54q1mvxj0uwqxbzp5zuti9o5ql5d2s7985cn9hzy2kge486tav4wr0zz9vwnamh2hh31hiomyua61kdxo44leszu9eq3d6"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Louie Murphy\",\n  \"id\" : \"4283\",\n  \"type\" : \"1iigcnl7vwomdd0lsf1tnz2j54muubqwsitsk5hnndbyuef8wlfxif6mn69wvqkpniwuq1176gwjrc\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"8817\",\n    \"displayName\" : \"Mr. Morton Jast\",\n    \"scope\" : \"cjb7lawaqpyrgg1q4u0b7bx7g1e4yph74tknqj04ffjt1mmr6pck4m9xb62g0remy84d1oci6os9yaj6s7192c6l0spqzi99pivx23rdppp2lw1ee1b2wc\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fe2941c6-7f42-47f3-a18e-75ad714d9cb9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:03.487326Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_Get",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    }
  }, {
    "id" : "27c962ca-deb4-4436-acd5-9c35a0ddb219",
    "name" : "Deletes a policy assignment by ID. (text/json)",
    "request" : {
      "urlPath" : "/o528",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "9285o7uiau5l2i5svi7skhmi1m9rwovc5rchlc3jlkls74t29o37bp84d90jq"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Brendan Donnelly\",\n  \"id\" : \"e93v\",\n  \"type\" : \"k6t4fd1jkpssvh8js6b\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"34i5\",\n    \"displayName\" : \"Mrs. Glynda Langworth\",\n    \"scope\" : \"3qqix1wcmucrb0xa9slekr0id3jzxg6heojbn3h14td8fmp7d3f8l79nksnevhcyaamb5mizwhhmj6ultc9oki46398c8la7vw8v3akows8hqgh8d96x205j3pqd8e76ibvr93t2h3ywx31d5vcoyd87k1w07\"\n  }\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "27c962ca-deb4-4436-acd5-9c35a0ddb219",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:03.486981Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_DeleteById",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    }
  }, {
    "id" : "066cfa2e-f741-4b06-9f97-9e11d551ae9d",
    "name" : "Deletes a policy assignment by ID. (application/json)",
    "request" : {
      "urlPath" : "/l084",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "lrbe60wmelci1y67e88vksrqxpbljnkdj3ji89udopfnqk8pg64ql1bk4i7333bvixt5wr0ptwyznjqom5udyt08n863diipwan67pmicmt3vb9aw499kb3v0f678lar34w9kk38akg6me9lx4gd94nltvt6l4us4xv7k8477cnchip3zvd9jn1qf9e"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Mrs. Clement Wolf\",\n  \"id\" : \"6145\",\n  \"type\" : \"smfhpzh3lqeracl56zgzmhr73qnwrvb5dnawnwdiqzsgcydgqjem7hd59qduzgvr4unpsc1gy4o8m7rl4iv1dah33vk0te7dc71b1eq3ffvupjtmn6j0l7qot2bzpidgyyczlnygblkfc4sdclb57gaan13y1guc0jho1f6f8\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"47wr\",\n    \"displayName\" : \"Yuriko Stehr\",\n    \"scope\" : \"f6p0s6kzbzlmv22ho8rwpptsjdemq62qjeshkdu23j2z6uav8aw2ze1ling11di372nsg0wfpntkaobyah4xiouo4kxpyvsjkakzrv1go521tz443qroypp4dbnbdgph29ak1iq9xq5t9yenr4ok78ga7g037nge8o8wm5it8\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "066cfa2e-f741-4b06-9f97-9e11d551ae9d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:03.486609Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_DeleteById",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    }
  }, {
    "id" : "749d52b6-d626-4fb5-999a-5595a3ca5078",
    "name" : "Creates a policy assignment by ID. (text/json)",
    "request" : {
      "urlPath" : "/m5hj",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "dw4brkvxrogu5fby6dslg7u8ezkdyjo34puctgj92exsw1gqdh26sj2p582chap9"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"name\" : \"Bill Leannon IV\",\n  \"id\" : \"yp0w\",\n  \"type\" : \"dhvbziju8m0sj9rdeckuk8dlcyg2zltemmlgu2a8nyifbx61c4h9uzrnw5xtpk6wubfng9fwcfnnkuuhcipdl8ibzf2y1z5sgr61k4ogvntq4kyl86oypna03w7cc1vm63aqw8h0gxap97iu6rm4ao0furolk6j29vzl\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"ae61\",\n    \"displayName\" : \"Dr. Eli Robel\",\n    \"scope\" : \"92rwfcdhh7htj0ju\"\n  }\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "749d52b6-d626-4fb5-999a-5595a3ca5078",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:03.486245Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_CreateById",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    }
  }, {
    "id" : "cb036a3e-d1f3-48f9-b1ad-fbe88fc875fc",
    "name" : "Creates a policy assignment by ID. (application/json)",
    "request" : {
      "urlPath" : "/5cz8",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "kw2f27zjb8qjmzs7x3g2w5hysteeb1x5kfnf629yi9bz2k1zgorujhbv6yb5jec10m1cok1qkb0yapeh8uyeaemii6gx87s9ttdcy8b2ym39y1v4168qv7gsvhyj07ax6wbu63niwu1mecq9axqu14fw6z955n905fzaeo6shjufujhov98vvqzju"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"name\" : \"Kam Schumm\",\n  \"id\" : \"9617\",\n  \"type\" : \"r6h1a7j82d7vkzge382v7a9vgulc8l74px61n7u5m8qs9utwtho1yfbj1tqqb4rcylt1k9hg\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"ym47\",\n    \"displayName\" : \"Irish Gerhold\",\n    \"scope\" : \"174jqgbjd0rnxy9ltr10xx5hm199rzz4ju706d19bqwgxpjwaez8qk480xtjzc7mc9ejnhihu2sg5dhldjeds2cbxmrn\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cb036a3e-d1f3-48f9-b1ad-fbe88fc875fc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:03.48588Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_CreateById",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    }
  }, {
    "id" : "18c27442-4c74-4f4d-914b-74cb6e0ad3bd",
    "name" : "Gets a policy assignment by ID. (text/json)",
    "request" : {
      "urlPath" : "/aah7",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "ws8ailt0kinzfzvzkz0i479waugy6arm7gsrbmfzzok4yue7vncoutsqty62kg7writqsbc63jbvs0x4onklkhsrwu0yixx5vlxzf3vdqkqlnocqcvwy"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Genia McGlynn\",\n  \"id\" : \"957f\",\n  \"type\" : \"788tn1en5va1yyh7tkxd8g5z9nv9o6phk8cd\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"391n\",\n    \"displayName\" : \"Eric Wunsch\",\n    \"scope\" : \"ltlytwi6q4mogp8n3h3ui48llxwuzmov638ylafl7u13ihv8w4bdrww04jtr9ij3bpy4f3ok75tvu2vzgau4fsw12taxkjqqurlyjbfd9hny4ul8fyew7xymsxdibv4qum1xsz6j57mwd29r5sph6n7ebxp4j4zprhosad2qiyee1dukmdi2p2udhtfbz4l\"\n  }\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "18c27442-4c74-4f4d-914b-74cb6e0ad3bd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:03.485501Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_GetById",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    }
  }, {
    "id" : "adf51301-b9dc-441e-9cb6-f9aa42078a9c",
    "name" : "Gets a policy assignment by ID. (application/json)",
    "request" : {
      "urlPath" : "/qg3u",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "trwp6gazpdjyiklhvxbktlkhyv45rogs5rgmr4u5sh2gkayziv3y8it4jzdkckxn4glthfp37t6az8ftaee1547dhs1eip316t7pvhrslpgt4ik8q1jluvaxgr1jjl07"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Keith Smitham\",\n  \"id\" : \"8387\",\n  \"type\" : \"gzit52vkkze6ofzbvcdq4goixe5w84znwyqbl17u0k8u0lqbzmtd0qndf2x874rqt7vyy3ecew3k86tdk2g11ofr9u50kh9wxg99n5gm0x4an8\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"8e16\",\n    \"displayName\" : \"Chan Kassulke\",\n    \"scope\" : \"z35575ryyop46fbvl8xoz6pqc4toivhx18e3\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "adf51301-b9dc-441e-9cb6-f9aa42078a9c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:03.485136Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_GetById",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    }
  }, {
    "id" : "bf69ea8b-a6c5-4719-be6b-f8264ce8c7e8",
    "name" : "Gets policy assignments for a resource. (text/json)",
    "request" : {
      "urlPath" : "/subscriptions/1c5n/resourcegroups/V7TKr%2950Dz_TERnA_1H.7BXruUkZf56ylvgBjPuzO851OL420EchWa5RkDjm2%29JlEmP%29tF%28mFVZLFxkMos/providers/kp6vzteda4lipoy0w8jm4z5ffuxs9kxofhd47qy1m5sq6hwn9u9qnf12go4a5ioapmo1lry520do7ucbp2h2j86fr921srul6ne/syp1qwv0y8bjsytkomri9x6dnhjwkaz79/6blbphvszmv44imivmoql02yvc141ktmflbqq556k3jnia73yzecx1nd7ihwisdqipi4at83cjxmzr3rezngikbt9kq0padbjn3up4u109pj/Leia+Wolf/providers/Microsoft.Authorization/policyassignments",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "qhrzj527p2qgma2w8zbxqcw3x327jjbjifrhd8a1sjdex2od80cpj9z5jg5cce9njs60a"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Dr. Retta Lakin\",\n    \"id\" : \"4evr\",\n    \"type\" : \"0fd725va10izvy0pd0hcb\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"21s0\",\n      \"displayName\" : \"Ben Olson I\",\n      \"scope\" : \"69ow5gii2rzkse1go0u7n4iflt8d7kafzgfklgim21l7ascirs0oehhad8goirlcw1hn0zkd7qodbhquzgwttf3lvwnpvc6a054bpt1\"\n    }\n  }, {\n    \"name\" : \"Terry Watsica\",\n    \"id\" : \"e4yg\",\n    \"type\" : \"7utjh43j544jfszeq918jgpae1qt06ypea5puoxcea2s6jl7v5jj\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"uar5\",\n      \"displayName\" : \"Tommie Hermiston\",\n      \"scope\" : \"dkjaffmh0nzzfdk7ejw6pw3z7wcuuddmcu5s6tu21bxsdnfyyehbbjza9s7sgrc5ea0w0arrj36ow37vn8dbbgmbeki69\"\n    }\n  } ],\n  \"nextLink\" : \"d0gfnjqj0c2kangaqh1cqub12hssbdavijrs7bfpd8z2huvdsnxmjbc1mpuid1hbtblty60t79w166fkf35e6amdbxrudyycckqseltm6cp3vrm4jezm7\"\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "bf69ea8b-a6c5-4719-be6b-f8264ce8c7e8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:03.484757Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_ListForResource",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "The URL to use for getting the next set of results."
              },
              "value" : {
                "type" : "array",
                "description" : "An array of policy assignments.",
                "items" : {
                  "$ref" : "#/components/schemas/PolicyAssignment"
                }
              }
            },
            "description" : "List of policy assignments."
          }
        }
      }
    }
  }, {
    "id" : "f235a7a7-9e9d-4bfd-a229-d30cb709860b",
    "name" : "Gets policy assignments for a resource. (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/1zx3/resourcegroups/jYmUeKC%28KFt02RB7CAkOipVQt%28BIYS846XfL2lWWd7c44xDZ-2%28_XdyGnc%28_JBj-r/providers/2raqt64431kjou4a60ts6v8wz2nqxjjq81pozw1b8cu2/1sj965gvvntgqxe35o9efwx1f1vpqoemtlmuwn2eqfvcpqlbt6yap19st9x4sg7i2caafk294tfkm31g54xwanbc1rg6m36pfiymz0ahy3d028c9mm735uhzaqqbwnfat2b206gofcg6b1o07pkg0xhnp2j/9b607ols1gbdm0q5d468vwuswczsuezvv9y8rkll/Rosaline+Lynch+PhD/providers/Microsoft.Authorization/policyassignments",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "vbegzibrp1fclwi6oj6bo7ntsvs811t98wu5u1l3eqtl6nnqmxxaq2ivvqs"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Louis Denesik\",\n    \"id\" : \"kzat\",\n    \"type\" : \"0lufk2gw9d3h9fa2sff6f\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"8kxn\",\n      \"displayName\" : \"Isis Bauch IV\",\n      \"scope\" : \"g7ufbip1jxnmp64vp6dztn5ovdj7ehj840rsjqewtbo7jslr9xcds60zir2kgbyjq5tcmsg5rma090gza0pg9cyqjzcvf6pc7xa4p3qzw4pqvb4xglcl35ylap9kppkdzkn3f49wiztcy8t6znpzy7p4rtlw16xveelxdjhqzay60o8qr\"\n    }\n  } ],\n  \"nextLink\" : \"cgtbyvl6cchcl361bku1ahn1ba5qzt5l6deuvo3omupztef5oggbc5ifr2tkqoymvtakygnok33os2g42d8ldmwqhlsqi1c4wv2rwbtib41pihgqu6pibgc5xd7pr84nssv8vi6y6ccgrxc4gvxkygckxi0pid9c14rihval3b094pnt0e69gw8zbx8qdkjagunj5j0i\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f235a7a7-9e9d-4bfd-a229-d30cb709860b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:03.484028Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_ListForResource",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "The URL to use for getting the next set of results."
              },
              "value" : {
                "type" : "array",
                "description" : "An array of policy assignments.",
                "items" : {
                  "$ref" : "#/components/schemas/PolicyAssignment"
                }
              }
            },
            "description" : "List of policy assignments."
          }
        }
      }
    }
  }, {
    "id" : "b4995651-eab0-487e-bcda-8509e97cf26f",
    "name" : "Gets policy assignments for the resource group. (text/json)",
    "request" : {
      "urlPath" : "/subscriptions/4enk/resourceGroups/iXKBH9YgRzDi3hsjV6mGC-Z67tcTogjY8iG40Hq49PgyYsqqRg_pKsCGN/providers/Microsoft.Authorization/policyAssignments",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "2zy74vqo3eougbt2tuqlaiihdgvd7efhwzfuwxn5sth4lltotf242lnfw28gb1436usk9mt5xr85e9nc6npy0vvzg1asyf8ijei3x0geu3dxw2bu0j3n0mqe8ov5nk4b0rhh5u408r"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Veta Crooks MD\",\n    \"id\" : \"hyln\",\n    \"type\" : \"5dgg4ysaueivwm7bpb3afk2eoi7iou7h0fyoc95mua9eroks4kmt2h19q2yrp2c8far2rcs0jvgqinrbloyj6c08o1ip7aa8rgvd1p0g61m2d5ohcrelzbay9vjz3tfqb3pqa24nyhkkg47i6z3a94nhp5badx14b7mteom70dewjx4vam1fvz389ug5y4v3866l0n\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"cixh\",\n      \"displayName\" : \"Marlon Auer DDS\",\n      \"scope\" : \"vdx2fne5sij7zrt94l84oh0t18tga1ckh5akksjmsqnt1732me4vo4xbr5ez9wcf03xtrv5mx1fqt363e2zz7o6z4rtcx0ovnzedk4w22zic2xz0sm7kfgogrekz2ajj91xdsrci1kvlxbae0ya6o8qb6pt4xxn8\"\n    }\n  }, {\n    \"name\" : \"Nickole Langworth\",\n    \"id\" : \"j74k\",\n    \"type\" : \"iclefnxmtm456d0i0k4bykvtf72p4dgh0rhhsvi6xy50uy9gbhutq3n56ckg6d6sq1ew91r6tqc9s3i4v1ahafgqjfpuhkfe9u3uzvaigcldfgg1jed7073au2ivr86nn0lwu35rjqv3t09z0wrax4b42362xqbrk9fhb6zblbnto0\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"pj0q\",\n      \"displayName\" : \"Madalyn White\",\n      \"scope\" : \"7ecszai7eoa3dpj68ghlvt5daf0sun6iql9ubivyoh9mhkoab2e1h2ime7a1zzjbkfzbzwme2x2qvumulc1ml3hxforp3cqz4bxgx6p1n8grvngvcr3cgph7124c33gen5sh7arxr6koglqxbpswfgq20pg5ococo1vdu5tlzce246ogz94\"\n    }\n  }, {\n    \"name\" : \"Ms. Benito Douglas\",\n    \"id\" : \"14s2\",\n    \"type\" : \"45kmg6mxm3qxduc51mji5c3wk8s9t01l2tiiz3jax0vfthlbzxjfo7riozn6h05bp1tbjmnft6ggyfuafzgmdehqyd0olhdknk6mbvw0mtioxxsaepze1591j1vjwcvgmr6\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"okkd\",\n      \"displayName\" : \"Jackie Sporer\",\n      \"scope\" : \"e73m7h2ku6n068klewxcnu1oeiagsfjm2hto6rsqx4f79df3n4duub7cqfeeiptatker9dq2ovn5c9mmtb8zteu6fxw0bhixa47f2ajidklkruq9j803dirxa6p25vzdysnwqdxa222px3kw5s\"\n    }\n  } ],\n  \"nextLink\" : \"m62sbwpoznt7v6jz3lj9uqefq6tbzjaj4bbipog8xw6e1t\"\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "b4995651-eab0-487e-bcda-8509e97cf26f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:03.483543Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_ListForResourceGroup",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "The URL to use for getting the next set of results."
              },
              "value" : {
                "type" : "array",
                "description" : "An array of policy assignments.",
                "items" : {
                  "$ref" : "#/components/schemas/PolicyAssignment"
                }
              }
            },
            "description" : "List of policy assignments."
          }
        }
      }
    }
  }, {
    "id" : "088f4ca4-3e20-4b3f-9aae-262f9a23d735",
    "name" : "Gets policy assignments for the resource group. (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/2863/resourceGroups/PfqW/providers/Microsoft.Authorization/policyAssignments",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "herxfn8vtrftx4f2d"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Shameka Langosh\",\n    \"id\" : \"1n0q\",\n    \"type\" : \"9o1brgk4d0igr2s6s4tkubzq9wghzl36px3ty7c314g\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"fqw4\",\n      \"displayName\" : \"Rolando Treutel\",\n      \"scope\" : \"78dvohj0s5aeaoli8hzamajsdmrai8691vokw5mh46os8hsmpy82jy4ymk9r7v6iyuuvlouacz9uheaxe4252l0l8tadkwigss5xv6\"\n    }\n  }, {\n    \"name\" : \"Nola Buckridge II\",\n    \"id\" : \"4977\",\n    \"type\" : \"a7w54eu068bb46pj80k7ypfbenl36uqb3mjlzs8plul1km45ts3d9kpa8v6bp7wg2duuqkw3ykhpm4em3rri2hooehu0fvkyfwh8irr6bbyjxnop4bpm60w5uf9gsq1wl38vq35vqst3acdv\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"231j\",\n      \"displayName\" : \"Lyn Kessler DDS\",\n      \"scope\" : \"ewknfuixdlo1p7buzt4m14jzs2qjpng8vu87rtwls88r7axg09mjvpqblz2e2oe10bs2zlypp4adpnvfjd28i4ro3zuw5ka5joubqgz44derycal5s2ju1pi72rbfvx7dd4vscv6k\"\n    }\n  } ],\n  \"nextLink\" : \"ovy4i69l1t5pcs1cvddtbi1k6vpqovhyx7uuzr8g4ibd5p9xub6918u1fwg86wlby81c7fp9ncxoual4eo31ac96etytwizhmyig0f7j75vz4seubg6fcweq7u5ssor4e1qgtmvbr7xj4lryunt2cybqbviyrz5v9dizi03wonybss0lq99e6aaqur55admfkqv\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "088f4ca4-3e20-4b3f-9aae-262f9a23d735",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:03.482658Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_ListForResourceGroup",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "The URL to use for getting the next set of results."
              },
              "value" : {
                "type" : "array",
                "description" : "An array of policy assignments.",
                "items" : {
                  "$ref" : "#/components/schemas/PolicyAssignment"
                }
              }
            },
            "description" : "List of policy assignments."
          }
        }
      }
    }
  }, {
    "id" : "4138a9fa-1b3f-491a-a420-1b1371d0d954",
    "name" : "Deletes a policy definition. - 204",
    "request" : {
      "urlPath" : "/subscriptions/dc37/providers/Microsoft.Authorization/policydefinitions/Jermaine+Bashirian",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "m3rnehk40hoyixwjir36laj9vtta73o5mmp3anqa9yt10j0rjk00jzvvnog0yddphert27lt2lqvlwrxxsa2zkng5kkyxre6b7nwodmpzy72wtwtz4hq3w68hwe0xug73uxn39szjusja4"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "4138a9fa-1b3f-491a-a420-1b1371d0d954",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:03.481989Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyDefinitions_Delete"
        }
      }
    }
  }, {
    "id" : "361760a1-336b-4545-acda-8ee796cbac72",
    "name" : "Deletes a policy definition. - 200",
    "request" : {
      "urlPath" : "/subscriptions/d972/providers/Microsoft.Authorization/policydefinitions/Maricela+Pouros",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "x2fww3nyxkmyy7bewrzda1q225s282vn483zo15os999vx37b8grwxfjyz7s2qk28aqkaj1gs08kv98iwci8obu4yszzq3gjwds3cih3d82477cl"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "361760a1-336b-4545-acda-8ee796cbac72",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:03.481853Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyDefinitions_Delete"
        }
      }
    }
  }, {
    "id" : "d8e703ce-e102-449e-a56f-0c8682538a7d",
    "name" : "Creates or updates a policy definition. (text/json)",
    "request" : {
      "urlPath" : "/subscriptions/9021/providers/Microsoft.Authorization/policydefinitions/Mrs.+Jimmy+Schoen",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "4ir2g89qu3ifgc2hm4ordceptq1mb1wwfh1oyaqyddjpm6qfr9zcxrhq3o6mk3z5splu2ohgjxu4ni81dlhslo0q6ebxfgeobrfz8m1sl73ngp5erlvg3cvzfl1ejsuwout1h83ytgn74ie18xfbg"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"name\" : \"Sherill Anderson\",\n  \"id\" : \"g3xy\",\n  \"properties\" : {\n    \"policyRule\" : { },\n    \"displayName\" : \"Marita Jones Jr.\",\n    \"policyType\" : \"BuiltIn\",\n    \"description\" : \"Qui possimus sit qui eveniet. Iure dolor asperiores. Dolore provident magnam ea pariatur dicta delectus. Odit occaecati ratione. Velit sint sed odit quia qui.\"\n  }\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "d8e703ce-e102-449e-a56f-0c8682538a7d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:03.481702Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyDefinitions_CreateOrUpdate",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy definition.",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy definition. If you do not specify a value for name, the value is inferred from the name value in the request URI."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyDefinitionProperties"
              }
            },
            "description" : "The policy definition."
          }
        }
      }
    }
  }, {
    "id" : "a2a296e1-d2f9-40f5-96c8-16e967b8e9f6",
    "name" : "Creates or updates a policy definition. (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/6bq7/providers/Microsoft.Authorization/policydefinitions/Meagan+Monahan",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "oob3ztt6sffk5zl6o3bbxonqvklzcdkss26xpoun1haln9eaz9xatxb4mjmt7ivejuoic8zruak3sqwq8j4mly2grjfq4ohv3jw2a7kb8yhodyocitme2o0l4n55ir8m2ad5bp3qcki999i6bzsoz6gnrw9aaw6fhktq60qhsxya"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"name\" : \"Bobby McCullough\",\n  \"id\" : \"vup4\",\n  \"properties\" : {\n    \"policyRule\" : { },\n    \"displayName\" : \"Loren Daniel\",\n    \"policyType\" : \"Custom\",\n    \"description\" : \"Pariatur quia in et saepe. A non sint. Doloremque dolorem et nam magni at ut. Dolor sed atque incidunt qui ut voluptatum laudantium.\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a2a296e1-d2f9-40f5-96c8-16e967b8e9f6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:03.481351Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyDefinitions_CreateOrUpdate",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy definition.",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy definition. If you do not specify a value for name, the value is inferred from the name value in the request URI."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyDefinitionProperties"
              }
            },
            "description" : "The policy definition."
          }
        }
      }
    }
  }, {
    "id" : "a7ae2380-6441-4fe1-a004-5e4995710145",
    "name" : "Gets the policy definition. (text/json)",
    "request" : {
      "urlPath" : "/subscriptions/y805/providers/Microsoft.Authorization/policydefinitions/Chadwick+Becker",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "ihv7h4gfa5lfmdc96krth5sm9ke4ps2ro4oseowwadyjwy2atcggf90bjp5nj2iyt9mirep4vggtrb8mjz0as2tdx7hyjy4ti8d"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Melinda Mills\",\n  \"id\" : \"jk75\",\n  \"properties\" : {\n    \"policyRule\" : { },\n    \"displayName\" : \"Deandre Legros\",\n    \"policyType\" : \"NotSpecified\",\n    \"description\" : \"Quae animi sed fugit animi ea facilis. Praesentium accusamus delectus non impedit rerum. Beatae sed ut tenetur sint accusantium soluta qui. Id eius quo quas. Minima repudiandae voluptas autem culpa te\"\n  }\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "a7ae2380-6441-4fe1-a004-5e4995710145",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:03.480999Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyDefinitions_Get",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy definition.",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy definition. If you do not specify a value for name, the value is inferred from the name value in the request URI."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyDefinitionProperties"
              }
            },
            "description" : "The policy definition."
          }
        }
      }
    }
  }, {
    "id" : "41b542c9-8b7a-44d4-a3cc-1be871836355",
    "name" : "Gets the policy definition. (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/dcb0/providers/Microsoft.Authorization/policydefinitions/Eartha+Johnston",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "llcq0i3duodrd8iqdvwl5tqvm2j4b9y9jls1osxhlyspbsdtxch32usioogoma69b0yomtt"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Marline Vandervort\",\n  \"id\" : \"07y7\",\n  \"properties\" : {\n    \"policyRule\" : { },\n    \"displayName\" : \"Mr. Agueda Gulgowski\",\n    \"policyType\" : \"BuiltIn\",\n    \"description\" : \"Mollitia in quos. Distinctio eos qui. Voluptas excepturi voluptates aut ipsum.\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "41b542c9-8b7a-44d4-a3cc-1be871836355",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:03.480646Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyDefinitions_Get",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy definition.",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy definition. If you do not specify a value for name, the value is inferred from the name value in the request URI."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyDefinitionProperties"
              }
            },
            "description" : "The policy definition."
          }
        }
      }
    }
  }, {
    "id" : "b3dc995e-6d8c-4539-b3a5-8c9cb49483e6",
    "name" : "Gets all the policy definitions for a subscription. (text/json)",
    "request" : {
      "urlPath" : "/subscriptions/o751/providers/Microsoft.Authorization/policydefinitions",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "6pk2tkc2q9u9eo48h0t30f8pp8ndde7bbc9hrr3qws5cn5nmio5xqlqly0us42v2hejjt5t61jh83p5yr0b4fctaoedx0s5riey59yed6x3cwa8y90757spdw9fl4"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Yuette Bailey\",\n    \"id\" : \"2asz\",\n    \"properties\" : {\n      \"policyRule\" : { },\n      \"displayName\" : \"Ms. Ebony Cummerata\",\n      \"policyType\" : \"NotSpecified\",\n      \"description\" : \"Consequatur est porro. Vitae quia placeat voluptas velit molestiae maiores. Eum voluptatum enim aspernatur distinctio dolore voluptatum possimus.\"\n    }\n  }, {\n    \"name\" : \"Dovie Effertz\",\n    \"id\" : \"f430\",\n    \"properties\" : {\n      \"policyRule\" : { },\n      \"displayName\" : \"Lester Stark Jr.\",\n      \"policyType\" : \"BuiltIn\",\n      \"description\" : \"Aut quis at qui. Accusamus dolores nostrum beatae sunt temporibus sit qui. Laudantium aut dolor omnis nam. In quidem dolore sunt atque nobis quod vel. Sapiente dignissimos magni dolores libero volupta\"\n    }\n  }, {\n    \"name\" : \"Krysten Koch\",\n    \"id\" : \"6143\",\n    \"properties\" : {\n      \"policyRule\" : { },\n      \"displayName\" : \"Forrest Wolff\",\n      \"policyType\" : \"Custom\",\n      \"description\" : \"Distinctio minima accusamus quo et iure. Assumenda est quisquam omnis a qui error. Facere numquam vero voluptas sunt doloribus mollitia. Facilis quod ut et vero. Laboriosam architecto enim sequi ullam\"\n    }\n  }, {\n    \"name\" : \"Roma Moore\",\n    \"id\" : \"40b0\",\n    \"properties\" : {\n      \"policyRule\" : { },\n      \"displayName\" : \"Antonietta McKenzie\",\n      \"policyType\" : \"NotSpecified\",\n      \"description\" : \"Similique error sed. Vel rerum voluptatum nesciunt voluptatibus nihil sapiente sequi. Et eum et quis laborum alias. Earum aliquid enim velit corrupti animi ut.\"\n    }\n  } ],\n  \"nextLink\" : \"7iwjmxzpnoze8t8p98cdkl1fcch2uhv4jevn77ecqlvfknu5vlw7ti9lhdu8f4fxwuw6t8cerr30bol1w0kce3f8bd599t17ne4tdetyv1eedkw3x5czuslydbqu06pfupu4irecc5xlu8ehx4afaecusg4tsonpksbr6m1\"\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "b3dc995e-6d8c-4539-b3a5-8c9cb49483e6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:03.480277Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyDefinitions_List",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "The URL to use for getting the next set of results."
              },
              "value" : {
                "type" : "array",
                "description" : "An array of policy definitions.",
                "items" : {
                  "$ref" : "#/components/schemas/PolicyDefinition"
                }
              }
            },
            "description" : "List of policy definitions."
          }
        }
      }
    }
  }, {
    "id" : "0e6c3edb-18f3-4b3b-bd8f-a07275db880d",
    "name" : "Gets all the policy definitions for a subscription. (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/v702/providers/Microsoft.Authorization/policydefinitions",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "q2b4e1bd1lgqqv64t6slxv7pc42bkxlqjdcdavmj6tfn4agmvk2f35qd5rsam020ifj4rt62fk5432cgo3ghskc2qo3topqnjo9hxf6xf4v3c"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Mrs. Helena Schiller\",\n    \"id\" : \"635z\",\n    \"properties\" : {\n      \"policyRule\" : { },\n      \"displayName\" : \"Marilynn Koss\",\n      \"policyType\" : \"NotSpecified\",\n      \"description\" : \"Et officiis non aut eligendi. Totam eos et dolorem tempora magni iste. Quibusdam voluptatibus hic quaerat aspernatur consequatur et ea. Officiis ut laborum totam minus id qui unde. Sed quia occaecati \"\n    }\n  }, {\n    \"name\" : \"Madeline Davis\",\n    \"id\" : \"9kgo\",\n    \"properties\" : {\n      \"policyRule\" : { },\n      \"displayName\" : \"Dave Waters\",\n      \"policyType\" : \"Custom\",\n      \"description\" : \"Aut optio voluptate assumenda impedit commodi. Voluptatem minima qui similique voluptatum consequatur a. Beatae rem nisi molestiae pariatur ducimus cumque. Pariatur in rerum. Ipsa provident saepe nost\"\n    }\n  }, {\n    \"name\" : \"Danielle Fahey\",\n    \"id\" : \"lekx\",\n    \"properties\" : {\n      \"policyRule\" : { },\n      \"displayName\" : \"Royce Turner DDS\",\n      \"policyType\" : \"NotSpecified\",\n      \"description\" : \"Totam incidunt dolor a quidem minima itaque. Reprehenderit maxime dolorum dignissimos quia autem inventore. Qui velit occaecati. Aut necessitatibus tempora.\"\n    }\n  }, {\n    \"name\" : \"Lakeesha Terry\",\n    \"id\" : \"09w6\",\n    \"properties\" : {\n      \"policyRule\" : { },\n      \"displayName\" : \"Bryce Zieme\",\n      \"policyType\" : \"NotSpecified\",\n      \"description\" : \"Reiciendis adipisci natus facere. Rerum tempora modi praesentium incidunt nobis veniam. Suscipit ad dicta deserunt fuga. Voluptatibus vitae consectetur reprehenderit quia. Adipisci sit officia asperio\"\n    }\n  }, {\n    \"name\" : \"Kathie Ziemann\",\n    \"id\" : \"akzo\",\n    \"properties\" : {\n      \"policyRule\" : { },\n      \"displayName\" : \"Mr. Lesley Fritsch\",\n      \"policyType\" : \"BuiltIn\",\n      \"description\" : \"Possimus omnis est ut sint possimus dolore. Omnis laborum libero et eveniet eaque aut. Quis qui et adipisci aperiam corrupti maiores debitis. Vitae perferendis est cumque dolores.\"\n    }\n  }, {\n    \"name\" : \"Dr. Daniela Mann\",\n    \"id\" : \"s03q\",\n    \"properties\" : {\n      \"policyRule\" : { },\n      \"displayName\" : \"Tyler Rempel\",\n      \"policyType\" : \"BuiltIn\",\n      \"description\" : \"Fuga aperiam eligendi reprehenderit aut enim quia. Exercitationem quas nemo sed nemo. Est vero id est animi possimus ut similique. Neque quibusdam architecto quia quia.\"\n    }\n  } ],\n  \"nextLink\" : \"cwxvqbhr14ko4yvxspzsfrrgo6lw9s7cj8g8tkhhw81dd7l7f31zt3r5qosclkc64r0b7leqpycgcwb4j66\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0e6c3edb-18f3-4b3b-bd8f-a07275db880d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:03.479297Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyDefinitions_List",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "The URL to use for getting the next set of results."
              },
              "value" : {
                "type" : "array",
                "description" : "An array of policy definitions.",
                "items" : {
                  "$ref" : "#/components/schemas/PolicyDefinition"
                }
              }
            },
            "description" : "List of policy definitions."
          }
        }
      }
    }
  }, {
    "id" : "4892bebc-3898-4404-8d5c-2d9be60c0d20",
    "name" : "Gets all the policy assignments for a subscription. (text/json)",
    "request" : {
      "urlPath" : "/subscriptions/c2jp/providers/Microsoft.Authorization/policyassignments",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "3jihqi5xsidsxiezp5wi9v6h1h04vuy77cp14fbckjjz9xnuwwzbe5rm5z5gcm85clxwgfko17bojjvdzjowvs0z3n8o280togocnubruzzxhyzj"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Eduardo Sipes\",\n    \"id\" : \"ymr6\",\n    \"type\" : \"m535png9056x0up06k21f8vs4zgcgrjmlfl0lnehd4i3\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"l5dj\",\n      \"displayName\" : \"Roger Cremin I\",\n      \"scope\" : \"itj9maealvlrk599v8y9timpr31okx9e0cypeavs30r61cswhzclt937fx4iovmdg061n0gm7n899a0w8rnepwdrhc6r0nln67vk1xgxrfi9mhzxziiofsg044wnzgmkfs0j4cr\"\n    }\n  }, {\n    \"name\" : \"Stuart Parisian\",\n    \"id\" : \"dzox\",\n    \"type\" : \"50jbxkjuwcummtw98s862s362e0xxx3dxrgwns1cgpcwq43h7uc241pm5hipbf6ucqxgj67rn2rq2he0i6no0xdhmenbi14g2s24byqsu0exiqk57q\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"39x8\",\n      \"displayName\" : \"Chung Hegmann\",\n      \"scope\" : \"sg7vkna4\"\n    }\n  }, {\n    \"name\" : \"Harley Daugherty I\",\n    \"id\" : \"wk28\",\n    \"type\" : \"gdwtusr2kkjv8adi4d7j86hgq14czn8rw2g300l9hw4vrhhjgx9svo00wjk3cnmba22654ag2nsdqjyviujh7cwqwxhtzgty08mp9tqev28pqr684vuoozdpj14v9cfykop010p3k1yij82xwoad\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"6y6y\",\n      \"displayName\" : \"Barney Parisian\",\n      \"scope\" : \"1vx8f5gn801oxs5g6m9ccmkt7qz81gkypnntwz8zqztc71vgg9syk6w8v664qtfgiq5ew2tq2abuz37p9tifwtcdchog46q51cfhh3wy1dquzhi6emuscsacaxe5qk9g6lnk1ts5j7wkyg7gfcu0s3d8k7c2i25ugxnl3kl7q67os6mj3i4bhw\"\n    }\n  }, {\n    \"name\" : \"Hung Schneider\",\n    \"id\" : \"0qsi\",\n    \"type\" : \"th5v85w7q2etejvplk2eyja1k5zue6gvax66lc4akpxejjeeqolbxjp9qtpv2lnc9axpbmqs8oogkqijzhpxor5y1w9n0dxlxefor5o8icuzrwyn09m2yfl7v2u2aio1bprjd\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"cyq7\",\n      \"displayName\" : \"Hai Jerde\",\n      \"scope\" : \"gogu5sjcn0oz28853oo22q0sb2u4bn6pp4z0gfjdxp7i5biyzdnmg2s0d\"\n    }\n  } ],\n  \"nextLink\" : \"exstu0n6h597yhvl6f8ml3pjjeer77ksvkx\"\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "4892bebc-3898-4404-8d5c-2d9be60c0d20",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:03.47787Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_List",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "The URL to use for getting the next set of results."
              },
              "value" : {
                "type" : "array",
                "description" : "An array of policy assignments.",
                "items" : {
                  "$ref" : "#/components/schemas/PolicyAssignment"
                }
              }
            },
            "description" : "List of policy assignments."
          }
        }
      }
    }
  }, {
    "id" : "9a245232-dde5-4439-8700-6b530cd7b637",
    "name" : "Gets all the policy assignments for a subscription. (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/w390/providers/Microsoft.Authorization/policyassignments",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "z04xr4zv3q63utb8yajjhwoedun76o1ga7v38m95gqny3dosz3ora5e1g3rekl506b06fnunisc6b501fe2n7bjiqwlhq9ufjcrz7oatak7lpq46edsp7zelsd3d"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Eleanor Rogahn\",\n    \"id\" : \"yrvp\",\n    \"type\" : \"inz5jgn200jgdm5f1hhmdpemz9ulsykfqudnm363al8ljvuupbowg885jcv8cw6r8j77hkrvm46em7uthg9wozeokwjc2eh2zp1ar3n7s55ip2lj8o0nqak4dv9tsq1ab1yc67d554oeif7aj0skilzevnm8xaygtxigc9p7s6k9nntx1aut\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"48h4\",\n      \"displayName\" : \"Carl VonRueden\",\n      \"scope\" : \"mw1hyytejhrwdltmq48ay626zwvlstdmhd72mkks609ion9uw5e7k8cyduil9tp3ge1vuxbv8sthn6ipznypr35u0p8\"\n    }\n  }, {\n    \"name\" : \"Jeremiah Quigley\",\n    \"id\" : \"eei7\",\n    \"type\" : \"g8vm8xfeh9ykpe2nyck7irh31ur2p2e1if80kuejz01cpj6y61m6hmuq3ovevb1nd3io35q5eeii1r6s1icb2mpglnzwf18up2hdi3to0rab6sol8jis4zt6v2z92khdvr2zp8k276oy8zy8tx7tcw\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"z169\",\n      \"displayName\" : \"Clotilde Rutherford\",\n      \"scope\" : \"wglxfwffobq31eumv93mfczb5yjq87x31j3h4o41d6cj1r7rw2u8v86re5mr0hzcg51yo9p414qyl505t8funfuutbolxchxgkxy2beorlopgsmu1mdlocodolzdj6dam2do6\"\n    }\n  } ],\n  \"nextLink\" : \"koi2p4aijm56\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9a245232-dde5-4439-8700-6b530cd7b637",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:03.476662Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_List",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "The URL to use for getting the next set of results."
              },
              "value" : {
                "type" : "array",
                "description" : "An array of policy assignments.",
                "items" : {
                  "$ref" : "#/components/schemas/PolicyAssignment"
                }
              }
            },
            "description" : "List of policy assignments."
          }
        }
      }
    }
  } ]
}