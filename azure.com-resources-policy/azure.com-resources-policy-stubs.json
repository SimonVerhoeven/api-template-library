{
  "mappings" : [ {
    "id" : "89e9e42b-e55a-44f3-a0a7-93a5a4a0ef57",
    "name" : "Deletes a policy assignment. (text/json)",
    "request" : {
      "urlPath" : "/mjivzdmzyd3bu0n102xshzrk25uswfd/providers/Microsoft.Authorization/policyassignments/Britt+Hilll",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "7eifdutql59mtgi9r853wtvw4t6mekxe4djqiijclen6mgq9xf4w45m98iso094alasur2omy0drvjeq6aibxoqaw7ty96ahe4y1qpkp41mdgw6kw05tbev9aoqerolcvi9x39jh0fnhs0qhx4jkd01mwxpuvn6z5qcq32odxomeg25jogs"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Kenisha Nader\",\n  \"id\" : \"7qfi\",\n  \"type\" : \"x7ycixt49a2o2nldqpzbuieqfcqpvekswsmx7cwunc2djaesia0iasqwpm61x2pz75qjvg2gq7j5w4fd8ycbryicugy19vf3pwa5l5yv6del8gzoll7r0skvm21bbcue40k\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"6072\",\n    \"displayName\" : \"Kay Skiles\",\n    \"scope\" : \"myz0gjf3eg6hqr22rde1tuuizdmxupz5rp75i78m6brhcfflnuh0rs153puxxae6shidhzpgjhxi5ty8jfuk0s1r6eugtalwanxrxcydiyfkks5qkw8jw3w39kkyghnwhbn42qf0i2ysp0u454k8vkhnwyhk8go20lahcv9arsms8ipa7xqjxz\"\n  }\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "89e9e42b-e55a-44f3-a0a7-93a5a4a0ef57",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:17.29628Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_Delete",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "2c2261ad-de38-42f0-abf2-2479136e8c69",
    "name" : "Deletes a policy assignment. (application/json)",
    "request" : {
      "urlPath" : "/2dku9qmkqvhsv709jzhkp22ht43t5i9sqm0uurxkyxj8xrrxg5syic927dyf4fhs/providers/Microsoft.Authorization/policyassignments/Marcus+Gutmann",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "7qmoxwq7vrpo903u5i48xcu79l1civs854o6zrdrto9k1w63vkwvefc0fb0wl9upc6pj4wrlxxlsnqllk3d4v7rdiwhr89rkw0z5mrkmjicutwopww37gn634f"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Jeremiah Ratke\",\n  \"id\" : \"7551\",\n  \"type\" : \"03mg075uhl30ze3m0zznj4kqvhmr7zsg28e\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"173s\",\n    \"displayName\" : \"Talitha Kautzer\",\n    \"scope\" : \"pj1jfdk9vjohmjg1cg7giqy0kkfcn8qfndt2va35qr6tq39ns5ptm78ahkcgop6c61rn83ddzlzsgmixns4ya9es2p7up919murdrbp4tp7k9nv51r2npda9vp67uz8k3c1lb4w3ykyook71ht1nnet08qupbcav0f9mgv160kpdxeqnkejiktxlxbr394d\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2c2261ad-de38-42f0-abf2-2479136e8c69",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:17.295896Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_Delete",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "60ba8535-1f3b-4622-97a9-675b4ac06380",
    "name" : "Creates a policy assignment. (text/json)",
    "request" : {
      "urlPath" : "/ddyy3v5e535dovo87r7xgbhwztwlih24q4yxruujv88oxe1nyz2fp3b4rqz9azllf68634ujjhn20hyn64i/providers/Microsoft.Authorization/policyassignments/Yon+Turcotte+V",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "eobqke7xayhe4zxcog5cxlaww3kua45ey9n9jinnngjoc9pfkcafoztkp7n2qjcuu2emnf3axup0x9tgq"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"name\" : \"Taylor Waters\",\n  \"id\" : \"vhjl\",\n  \"type\" : \"zird0pugmry7f1r81q14g6gfi2r3wl2hjyp6t1zjxa5zpalunu33sxggd9ciomipnqcdge8muum7ns75\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"o7q8\",\n    \"displayName\" : \"Darin Beatty III\",\n    \"scope\" : \"lq3jy6whjh5hz2micj3ue0mthf0ewj64mv6wfgbdnfb4ieth052l9xye5tn6etqir02ut5xrwmvqwyq9yypja3dv56ld38ev39zojxocfep46aikqo2nqxcdfmg0cpfm\"\n  }\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "60ba8535-1f3b-4622-97a9-675b4ac06380",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:17.29552Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_Create",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "d50a1076-0871-4ed3-8b2a-834aa217cd6a",
    "name" : "Creates a policy assignment. (application/json)",
    "request" : {
      "urlPath" : "/5bdc1jin0bfbsghy6q7f0w34rozcvctf6lpbk6xt21odjqsawt5q97aj75mwd1xqr5a71a59ai6j0ica58lrl5fybeouuhng03iae29v/providers/Microsoft.Authorization/policyassignments/Ken+Heidenreich",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "ln6pli6wd3ms31jzrcwqv7r93"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"name\" : \"Lonny Prohaska\",\n  \"id\" : \"4hv5\",\n  \"type\" : \"qh0lsh5tvf9kjj9381o0b3emdrm7p44q\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"n678\",\n    \"displayName\" : \"Erika Rippin\",\n    \"scope\" : \"l8ogifbysza94iy09bdeji1419kuyzekyzaapzckcqouvtoskew23zbvtfrgu6urlfk9eyga3sade0kgso9uvtjj5o5hkyh16f5eikl26ql94r09g83sgtaljdxarhwu2hp3t5iaonowmf9mwzbtlhy5ya871epg4qtx6qii5xrocqvgd5xhcrs5aeaws1x\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d50a1076-0871-4ed3-8b2a-834aa217cd6a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:17.29515Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_Create",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "a5762d4c-8528-483f-9b5f-c549632c6ed6",
    "name" : "Gets a policy assignment. (text/json)",
    "request" : {
      "urlPath" : "/a285mfebb83g1hy8xnjvsuntq1joo3rvyrjx2a38uihgpj0nxc52uz1in1tet4de079puu3rxcz9hipbv938pvzd9qs0ie6vui12u7xy0p4t3jlz6iupipzt6gseto8bjvbotxng/providers/Microsoft.Authorization/policyassignments/Tenisha+Stroman",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "6i64i5bg96f2pahkbnvok8ei"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Araceli Friesen\",\n  \"id\" : \"7cgy\",\n  \"type\" : \"vim6i949axafgj7700natoh4qh7juzf201qv1s7hy157r53q3fi7f8ux4ndugcw8w3kwdw9bz97e3smoel4qlwf60iwpb2ic7scm40itfkx24htfes7omr4p6m50ernyx2n9a62mky2opco1f0603of16cbym0tvz8nglocmsw6o\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"5ust\",\n    \"displayName\" : \"Jospeh Turcotte\",\n    \"scope\" : \"j237jg4uz\"\n  }\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "a5762d4c-8528-483f-9b5f-c549632c6ed6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:17.294768Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_Get",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "6c07d121-2b21-4d07-8891-3607c5563a9e",
    "name" : "Gets a policy assignment. (application/json)",
    "request" : {
      "urlPath" : "/ql4387oec6s1g/providers/Microsoft.Authorization/policyassignments/Jarrod+Cruickshank",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "sibeza3i6hohs3gygoidhii70i9vg4l0t7lzey5tca1bgesi8c0yccxu823pfwwcm67o1a81jeedtw3s8p3skiu4"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Hans Frami\",\n  \"id\" : \"te7d\",\n  \"type\" : \"65599tl2l1a7y06qnbnvkc1j0bcck97kaohqqydkql9zxfbtqxtpotvic27plxhp\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"b107\",\n    \"displayName\" : \"Flora Lang\",\n    \"scope\" : \"btzaxjq26qgqcarpxjji1ag65m6vn1zrmxxbuhiji5kx6xr60bj0ffw2ewx1n1o17ubgeyk\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6c07d121-2b21-4d07-8891-3607c5563a9e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:17.29439Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_Get",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "9bf2eb27-e712-4d80-af31-6f99a9584a03",
    "name" : "Deletes a policy assignment by ID. (text/json)",
    "request" : {
      "urlPath" : "/q2qj",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "m59z5vowjq7m3uxpujjjqansbhr9h6eu74eqxf28awgfo6b2wb3vrfibzunnt9mt3fi5darn"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Cheri Osinski\",\n  \"id\" : \"87v9\",\n  \"type\" : \"99so8yspg0wdr0rxvlcpr9jvofdbx9eyn9shdrzxf7olavvc6btedpwdxud9xps5udnu3bub8nfmsx49daqsa1dc7bjiy7g66sgywsz7bs9sdepbczg4vh8n8n7yw9jd37z76kgegpvm8umzthqqw13fyqswmc34uuhzv6bf07wamuvf\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"gb62\",\n    \"displayName\" : \"Jerald Considine\",\n    \"scope\" : \"wfma3bc749mfb8vpahe8m7sp64lo7utlgwaky1k3c781elyxfctk1oxag3egobbseli8p7rkm5ki5gc3z0voicjw4t5xg4bjd9nkd9gjcccwv0fgnybee6ed86wqvwlinmveuz9zcoq0pl9rsxu4gup55\"\n  }\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "9bf2eb27-e712-4d80-af31-6f99a9584a03",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:17.293997Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_DeleteById",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "fa9f2355-c6f6-4f37-9b4f-6c7536405a63",
    "name" : "Deletes a policy assignment by ID. (application/json)",
    "request" : {
      "urlPath" : "/7x26",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "wfbmapuungt4yzet59c22fyrx4wu7bi2pbswnzln19bccpzdg3antd1zkofd6qlxp4p86igbac3vcupwd8c7xvp8t399p9y57qk6j3epch51jk8eq4kobjv1sisnpw3v1l0us55e5zh6k1fsxm4cdr6ud931t8uap8tokoypibgm"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Ms. Tameka Beier\",\n  \"id\" : \"cma0\",\n  \"type\" : \"conogpbcyy4v9r83obw6pqvyy0ucsdlugukfvtk3o5x19cmxmjjigoc923ac87brej7lx1qzzb953f\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"5z0j\",\n    \"displayName\" : \"Teodoro Schaefer\",\n    \"scope\" : \"1yzkdcfc6qe1q1nufin0ffs2dq435fa3uh9yb98j34hsha6qdr8tuyyilxr26pa213qo9vwu51sqpam2nqdlvc5cqhrza7dg7j9rqe2jjdapmf8jisro69om9js11x584hivziw4c54u7frreb19mx9e2qvyuvvflxa33j8ki5hg5sak\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fa9f2355-c6f6-4f37-9b4f-6c7536405a63",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:17.29361Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_DeleteById",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "3738e76c-12d4-4080-b3d5-88d816c77ec9",
    "name" : "Creates a policy assignment by ID. (text/json)",
    "request" : {
      "urlPath" : "/mvjj",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "1tsmqpzuuyoixm0pe7u6n0vao5xxvuwqkf6nyp4oyfanioy1voj3ly1jt0x4yfidjvqyor88siwf8dm7ix3ohlg4xhd6jm4o4ar2bs8q8t"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"name\" : \"Daniele Deckow III\",\n  \"id\" : \"2pre\",\n  \"type\" : \"0290t2dutqurq5q4hzfqhzlgg8evwytm7lqxcndk3qaizha9qw9ltswk7hh81myhsr2jajozy5i2cixjid86ft3j54fg0x3ndgh8wvnf4levu3yayrohicdsn92s5558zgka96\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"8x9o\",\n    \"displayName\" : \"Adella Batz PhD\",\n    \"scope\" : \"mfb6x5b5iqf4kfjz9ygq06ezimojykhejmykfn\"\n  }\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "3738e76c-12d4-4080-b3d5-88d816c77ec9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:17.293213Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_CreateById",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "21f21256-e72f-4b66-8f2e-0dd8e719c977",
    "name" : "Creates a policy assignment by ID. (application/json)",
    "request" : {
      "urlPath" : "/7ams",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "awsb9rfcgt312pdnyxajpe8j2nitsclhhaoq00hd95w7hppw2l3s6wcmjo1kf6ib1qsk4f239va4gqd0x6afzsx0adi8bw254cazzxkq7h7wnpu1o2pdxqv9icqa4pdr0kj205su1dpwsinxm358fof1ewj9f6etuazug1"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"name\" : \"Victoria Macejkovic\",\n  \"id\" : \"7q21\",\n  \"type\" : \"jtup77ka06lmidkg3p3uxrv9qtmktperinproua3uzymo64gqy6ej4cnps4lhgh1glyzfg3hw514dk316ylf1eyf2mi2qslbr\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"6pc7\",\n    \"displayName\" : \"Donnie Thompson I\",\n    \"scope\" : \"hsgug7qqk0q1x5gm4facazw5s5shgjhf26igq4m4anzavjx4y9hll8jrg181uvk15u9srnu3xmfe2oa024queeg4ca1ifb6w4862o\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "21f21256-e72f-4b66-8f2e-0dd8e719c977",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:17.292831Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_CreateById",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "a5cb6f60-f03d-4711-9337-366490027b60",
    "name" : "Gets a policy assignment by ID. (text/json)",
    "request" : {
      "urlPath" : "/39p7",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "6aufb7hmrx2pblhab02drd181brwlboux65ksbipjb2sgfuenvj6iyjhrt4b65xg2iyuutzk5bkk5mgf2pkt7p0877l5xfed1y5fz3w8r0a54vodlx95qszxnt8iowmax7dgxbasjve3srt4c"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Mayme Rice\",\n  \"id\" : \"21rm\",\n  \"type\" : \"9c1ccflzqlqobee69fizrre7kbi6fvcsxx90pl4rrw76rn0ixo3l4vrd4a275bfqirf6qc0oyd3q0mops38f5ufkb5w496ayjdp19g2w2mjtwjr78xq8cwmu6\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"fjxx\",\n    \"displayName\" : \"Waylon Kunde\",\n    \"scope\" : \"pzsrz0n3x28h5p3tuq8gknk9uojuq55i53eq5luzrxn72b87gmmh2hae6qqx7vbow5lnbidzimfflj3niq3j9qsy4k1doglivkkadfi7l6hngzhvymucelogdv0xjtrbsxszixn0gp1do182z57lleslku6np9h7yc4abyamgmq7pnqhhcwzu1m4la\"\n  }\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "a5cb6f60-f03d-4711-9337-366490027b60",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:17.292435Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_GetById",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "75e99827-dd17-4e76-bfc7-1d86df5b16e1",
    "name" : "Gets a policy assignment by ID. (application/json)",
    "request" : {
      "urlPath" : "/ccl4",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "d59ttbag0ts61dbmpwyrx65cxr8d5p1a5dpeyf7ake6u50i1ktr826ug22l"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Ms. Chantay Price\",\n  \"id\" : \"q05z\",\n  \"type\" : \"rpxwme1f2ovx5ggbrdly3ioiwqpd8rhz28uft9h5xqhoes9wzfag2hj6b86bmroe1fwdw1c3h1pmnprxjvujxm7zdki3bexjy5qidwrkyz75h7cr9107i9dpvvr964oazf6i6ophlv3fue2tykeczm5p0g3cztmc8lz9ijrpyjt94atv51\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"k83d\",\n    \"displayName\" : \"Jolanda Gislason DDS\",\n    \"scope\" : \"d2xj4bx3ewg12dwhz2p5gmynynrlq3oaah5btgbfycr0urrwao569ww78x67jsd002e9m\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "75e99827-dd17-4e76-bfc7-1d86df5b16e1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:17.29205Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_GetById",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "116006a1-c909-43e5-af62-2d7b4b8d8d82",
    "name" : "Gets policy assignments for a resource. (text/json)",
    "request" : {
      "urlPath" : "/subscriptions/z419/resourcegroups/.KGTlsGIBbUeow31Pe9aRTrHLAPi9K4ILnbC%28Rs1Go7XrMYcmfuO47/providers/hfv5mmp6udmt78p7jgbv14k50enavg2l73ocyesjx4redv9qu19popz7zw42662usjx2si1fcpx6y0xeqx1sidnn7g8wqn22hjhzwro77uj79ng2r2noo43gebuwiwgssfhkewpnfd6wn394qpxmel2jvymbn42y2248l6gam4d1ntaepr/4z5dt8tnp7bdr6z3g1uyt2jf772nnz0m8nrnayb4pbxd77wm3odmn39txbwnyb037yp6i3uw6bwoaf0dwzn25l84tg4fidilj76rgfkqzbne1o4ga36lgg6ygb00k1gtajgak2l692kj64jprg3syo9t6vm2rz/0kxvh5n2c71xf0/Dr.+Arnulfo+Jacobi/providers/Microsoft.Authorization/policyassignments",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "avb739a3w7xebtwmnaiq1cip7hz2zack7wb1gl9btgweyxjrmruj76aht5kheprk9hntc662tq3xike"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Sherie Konopelski\",\n    \"id\" : \"6t44\",\n    \"type\" : \"wc6cyiq8cyghpo8jct37qkrawv59gxuxqfgdklxbvombfe98q2xd8lrgnanjivh3182i4yrg4sgiq6\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"2lhe\",\n      \"displayName\" : \"Wyatt Daugherty\",\n      \"scope\" : \"7itmstu3v4612w4m5919sc48qc98rht5kdm5rgtg7oshhfj8gxyz0xpw1bgqk85cqn6kx9nrto6mf8a9j\"\n    }\n  } ],\n  \"nextLink\" : \"fekfnh5lsaa9tlfcdbqfjuad5zb015ukvvx6g663dvwv9aovolqxoa4ctmojx7ddr6lz97qjameiumaxxlmzicsug1rpg37rq1rwfohl8eo8k40dcgknfog8qsx12qyu1lg7sjs86xm3rhab022c6hmyanjzzo46s28e\"\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "116006a1-c909-43e5-af62-2d7b4b8d8d82",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:17.291632Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_ListForResource",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "The URL to use for getting the next set of results."
              },
              "value" : {
                "type" : "array",
                "description" : "An array of policy assignments.",
                "items" : {
                  "$ref" : "#/components/schemas/PolicyAssignment"
                }
              }
            },
            "description" : "List of policy assignments."
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "041d4bdf-67fc-426f-8cb3-4a734f3c7502",
    "name" : "Gets policy assignments for a resource. (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/043e/resourcegroups/qD4qCoj_mhpu-eWdQsU0IQk_K6Pndq0o9CMxEp612BKagbfI/providers/6uzk0uc1mw2xxzsxajwb7bql6od5h6rgdg3cupht8eljpckiu24sjc64gj3sipto3xw2e89f7z1wz9jm31ewohvq8zv4kl79t0oaol3razngxuyqfdpkl8gtzgbszrzwrq0bh2nlmv566z0koqrk/lv8ajmtnabuv2gew83zmuo7sa4ucvcatmmcf3naogt3fvgi6bcnsatcduss2xuqm0kpwjxpeb4qie9tbtniw8qlx5i67vkg7ag3nox6ukyzh8xeew2tg/a26qoeltu3cvzd8wlg4h1n42x5vrs145n061chps5oxa485dmrtpjpoe7exy3d2hrqorpa32w6pu6ulucxxb7bwb42345i1cc43/Ms.+Katelin+Wuckert/providers/Microsoft.Authorization/policyassignments",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "d0zdod5kfax9tb3nlu1v46y0p0lal8hypmf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Ms. Emilio Terry\",\n    \"id\" : \"4xk1\",\n    \"type\" : \"l1j0dxfidx1skoaqm7ot2aumupisl5wvpdkxk4tyxtx9b1o11doua03m\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"v9d6\",\n      \"displayName\" : \"Kristan Halvorson\",\n      \"scope\" : \"p6o88i9k2gjkeb55ugfp4cxdysmatlfdmgsr4o563rzgaydyp1u8p4tkk0pkrpo6r0yr4qbr4hp1js1fgelt12fw\"\n    }\n  }, {\n    \"name\" : \"Dominic Frami\",\n    \"id\" : \"he25\",\n    \"type\" : \"wjo98ijlwc6tve536tj74h59jqnox7ezakk1a3ju3rh0pjqwu28nfzzxofl5k3ddftcqdf51iwyth65xfl9xn6e\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"dlac\",\n      \"displayName\" : \"Mr. Renda Steuber\",\n      \"scope\" : \"4egizmurzkgxilu23spjh3hs5vd9r6om2ugp90ir1qg58qfj0p20al0kr0y2h98kbw6di6t3cvooi9kreuac0m48za1mxxng75zey6quykmfdehkpsw2sdwmx2xq04zuq0ufyaj\"\n    }\n  }, {\n    \"name\" : \"Kasha Williamson\",\n    \"id\" : \"0296\",\n    \"type\" : \"k6p5f1zfqlas5r2ubgggyxrds9ct2fv0ne5le8vz1nhgivsio9dwzgq51iocdahofhtqyrn565kqlp2y72w\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"1jx4\",\n      \"displayName\" : \"Laure Gerlach\",\n      \"scope\" : \"0hwnada6jemv5xyf6ixwetbycykng6l1u6umdxtdq2u0nwa5h7d3yt2l6ppi8b5q45xpgehyn9ie0x2b7wf3hbjqzd5lxgztj13gwe93tn3x6rk835umkvvjrq0664huyotvt4eqt4c6yejxy2cjty5pko5z6cu8qwf7c52vbgz\"\n    }\n  }, {\n    \"name\" : \"Shannon Koss\",\n    \"id\" : \"82j0\",\n    \"type\" : \"w69lmzwl00pgysqmwt9by8is70flq9261lzpopbi5m9h141dknnulkxaq01qz0usymmooo6fvh6o32zq6\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"3337\",\n      \"displayName\" : \"Mr. Gale Gulgowski\",\n      \"scope\" : \"dove73dwq0h5j6tsvo1vrgwvuo7eftcx30ugzdn0z7w01c9bh0d9n01wb51weo0kl8sk7wtoxmcpex2jpwjv5olo7c4mwwvicrmts97goq8lflf4zimdm4ae6ui4mwcwax3wqxxw\"\n    }\n  }, {\n    \"name\" : \"Danny Rodriguez\",\n    \"id\" : \"4lhq\",\n    \"type\" : \"zgvdukz9iqi7jokcmmvug1sqyrxo814c43z0ygx4fjbs6ldgzex67waedp46g2m6ab1a5frzs288hebt2xw7arf8nrsyyzw3rqxjyovtn989nuu3j73aeuyvfjlgdrau8y0be3qreef10e3dyyq9jmj\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"fgi2\",\n      \"displayName\" : \"Lila Roberts\",\n      \"scope\" : \"jehc90necf42xx1d4tdap2ekshd8unoa5hidd9rz5y2omdii3a9lvq41z3414epk1l2zmpk9pb4b2gdh6vavsrehptppeiji4op6ovrlt4y5b2226zc3w3ntostccnho6zf5fnf1daworrl2r3fnfbvc53a46t\"\n    }\n  } ],\n  \"nextLink\" : \"oum5ka2ebqe23vmh9kt2tshq079z3soqd3amqoeno5ucgjblhkc6s2tlrsx35\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "041d4bdf-67fc-426f-8cb3-4a734f3c7502",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:17.291097Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_ListForResource",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "The URL to use for getting the next set of results."
              },
              "value" : {
                "type" : "array",
                "description" : "An array of policy assignments.",
                "items" : {
                  "$ref" : "#/components/schemas/PolicyAssignment"
                }
              }
            },
            "description" : "List of policy assignments."
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "f49aceb1-ec2a-4a3d-8992-7c7f9519a378",
    "name" : "Gets policy assignments for the resource group. (text/json)",
    "request" : {
      "urlPath" : "/subscriptions/d9h9/resourceGroups/Omzjpn3P%28p6AAnLGEl9C.%28%29OBIkK1h.rv0%286obandoM_WDFfOq/providers/Microsoft.Authorization/policyAssignments",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "6lpsg5zzu2n5dl9dxe2ld9my2bihkm8bher7ike77ptgv2vkaezvcqqekamr5ax5cbk9rcvbitjz9ysjeadttim3exobinz6a2hhctb2s8ydt1ge2t688euxkhhwttm9sqez6p9kstan9nsawngbh6a"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Meta Rolfson\",\n    \"id\" : \"z555\",\n    \"type\" : \"873qewgqp0dzzcgol064fasqwk14arvipskhr1nud9vlijgf148sqdqmolr36x\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"7l02\",\n      \"displayName\" : \"Dr. Tressa Conn\",\n      \"scope\" : \"1d1iiao9y8toeggtyr1w6wg7suuvkefp0lcz36lc6ul37u152eytt1mk20ny18cjplpp502vsazn8dra58nsikrzuaws4uhww14qiy\"\n    }\n  }, {\n    \"name\" : \"Kelly Denesik II\",\n    \"id\" : \"p56n\",\n    \"type\" : \"0qg5574xazisixrm2ufrzfo9c3ks5spgm1fohyotjk05xnnbcycl8fhm90k2hu\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"zr4f\",\n      \"displayName\" : \"Phebe Murray\",\n      \"scope\" : \"at7ktre3qb6s86x4gnrl5tji4ug08zftf68t34on3f4063lj2593fwreb2ge140guedi82ux47cvcp2ugkarpz9jbwksx2un5\"\n    }\n  }, {\n    \"name\" : \"Asa Leffler PhD\",\n    \"id\" : \"37y7\",\n    \"type\" : \"d64p0m2ka4fn7duh15x8cjdmt3z9ch76qcwtmcipcl84wimeunkgani3r2wztbl6j2fhoxp33ghgqbjak0o8qipfj6a3x8amgqpwjp8zy9q9lscg4r5q4q4gu1ado3kn06l2e1ic9cvyuqydpuu1gfefw0pu2xyt70cnot3c99wjbx8pkzctyh8\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"9o7s\",\n      \"displayName\" : \"Juan Boehm DDS\",\n      \"scope\" : \"ml2yrqiug0xe93huzskx1u5z8yn7b653j7zm79sqgmlp0ape5bp6w1jmfvct54laqdkas8kg019q150m2w0a3yu9gq5\"\n    }\n  }, {\n    \"name\" : \"Elene Tillman Jr.\",\n    \"id\" : \"n7jb\",\n    \"type\" : \"2cppi555b5mg1d6vlire3o4jeij4dq506d7mugklwo48n0reqdten2ee8yhaabu5dsxz6vrlg5ftwrme0831fd3zvxe899nsmf2dosusrzb56byuxgwrk99t\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"3i74\",\n      \"displayName\" : \"Oren Haag\",\n      \"scope\" : \"51cc11zg5ch1p283mfdxw146ozkec2okc4pxq76zd02ky2sdz7ofl6z9\"\n    }\n  } ],\n  \"nextLink\" : \"s66sh1ioapc7waia05p8y77yaylmtbn1475cw5z2ti91cew2xa8yea2v24nhv4wbm9a660dh3rpx5w042t35gu9gwqu9vt6e7uoenlq4dyj1hmwnfi6smu5rnix2xd1j6b4l75xg7tsd2nws1hkrh689091cp\"\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "f49aceb1-ec2a-4a3d-8992-7c7f9519a378",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:17.289491Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_ListForResourceGroup",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "The URL to use for getting the next set of results."
              },
              "value" : {
                "type" : "array",
                "description" : "An array of policy assignments.",
                "items" : {
                  "$ref" : "#/components/schemas/PolicyAssignment"
                }
              }
            },
            "description" : "List of policy assignments."
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "7381a55a-25fe-4e7c-b914-459b8a88f9b8",
    "name" : "Gets policy assignments for the resource group. (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/tkpr/resourceGroups/u-ZEYQm8ZyRYhQQQGHKRs5AnS93exJJjHo5-hfwpgORf7iPClbIjdrd5CXtV5v1t0GbYeKwsc4-V%28of2MbPSQOZWu9/providers/Microsoft.Authorization/policyAssignments",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "x0t98q938y3hsc3h0tpxqp806z4ftkaapakj66cut1lym418hyzi9ziblsj9c6n4g4ofr8xuixnbn4vduyyulm08xc0llp6d5yq6o4py2q7b5g474n5rf5u0qnd6gqt2cve6f8rnawmmzbgbamjsx1k71tawuonqetf02lzct7vg953px7t5phvwqxpg5j5q7jntrhhi"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Boyd Heller II\",\n    \"id\" : \"pz97\",\n    \"type\" : \"awmky40ga40w98ccvgeeqctmwvweo8w93q93jyd6gjxajf1skxqpo5ybxtoiqefkm0vvsfjjppl0bp7fmvi45oyxf1uqo6yxv0bim067pop50hzqo7j8l05wy311t1wwn7hnckpys7ghag1d6jssr9ycmohs2bfo1yqqr8u7q6jdz514l1mkcsnkviz\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"f440\",\n      \"displayName\" : \"Bernardina Predovic\",\n      \"scope\" : \"uul747jrl7319hlntl8j0alxwgkq1bp55towjkvv58lgonc6dwv7vq2qsa4zjc8yfxoe6fuui30fjkshxihcgd5j238ge5i4jipyvnaj3ne4bvcjrbetxzedq8gblj63jkf\"\n    }\n  }, {\n    \"name\" : \"Karyl Sipes I\",\n    \"id\" : \"k0v4\",\n    \"type\" : \"hgebmugis1a0bozrsyh5pfweeg4n\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"1810\",\n      \"displayName\" : \"Mr. Taneka Hayes\",\n      \"scope\" : \"uxkj1p30unevu1n1nk0rr838slseiyw9eogj62cmesicda0u6vt9qng5rj6vosqb4rgv5zfol4krzd338fx9edxc3fg9jyo879w1yfyl25c44z5c53jhx7kdn5imjcuf0lio90nu69tzwn8iblpgl8gsnh\"\n    }\n  }, {\n    \"name\" : \"Leonel Herzog\",\n    \"id\" : \"300h\",\n    \"type\" : \"lssw0lpkkpaw3gw9dqgd54uyk5nsqqos1j3i8atg6bpbkb5vl7n5p5z1cx8qlh0sbvi99kbxyu95rgt46qfnzocymwko0seevqpp22cce6ydoqpj2rmloa2zgm7u72dfxtoejxclsv5yhppo6u2mfqxosidx936mdo3f9nbjpl86gd88f2xqx88gk6nvmrlgenjmzq8\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"xmaw\",\n      \"displayName\" : \"Mr. Fernando Goodwin\",\n      \"scope\" : \"n0dw8h9hcp1hmpg1mdzu70zy9benjw4tvdy70m0qn45uvwpavce7tpgg0r21nhv6ptrk2konw28r8t3hzky0kp3a4cd59b4cp6vrfu6qk7rr38pewcr7frf6d6eekgstbqa1eds5bbaui8k1sgcp2owqf5otswvqfvztv1ialrxxh67twhjkif\"\n    }\n  }, {\n    \"name\" : \"Faustino Auer\",\n    \"id\" : \"33gy\",\n    \"type\" : \"ewxmtt8utxh8a0ay9xbb90qfav7fh0vxqyjfttt0f7ax0tnjq05u8a56y1uk7ui9oi8vs7jtousaq65izzi5d4f97946i1\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"d582\",\n      \"displayName\" : \"Buford Lubowitz DDS\",\n      \"scope\" : \"442q3zjbwdcr98wpcuhbs6fjl55y2i1xzarqoemrte7ak2fh18b9hy7v2v0byd7xv106sir7jdvqvahq5x0tagvljp2r5gns39trr0c4ni8v2xj5ypfov2gq2ewrgnwnby30cfj2r1zasblpihg594q6k0xeyokfk91xsk9986oy\"\n    }\n  }, {\n    \"name\" : \"Miss Thanh Kshlerin\",\n    \"id\" : \"89h4\",\n    \"type\" : \"1gitbnd330p39iexd0phzbecfzfl5q8qm3vqsb48vy9nwqr64w8nyk6v3924z56g9xdyzy5j46brzpn9oubt3tduhbmh72uhb0qb6bouov15xnfahuif42dv0kymmk6yj6wn7myy7cxzcliwlfcuboeutj7p6noitwo58s\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"gn29\",\n      \"displayName\" : \"Karey Waelchi\",\n      \"scope\" : \"9eqjq46sx03n42cmarzw5fzsivy7l1w0zfgu0djmukqch5e51psvibkxjz119a2o4kde0id7yazu94tkxjm1j034q3ocj9jz7396bhugl20qmzdc07i1pbkgn7sary35g25clscc431oiriks6jtcrjxk\"\n    }\n  }, {\n    \"name\" : \"Dr. Allie O'Reilly\",\n    \"id\" : \"jv8o\",\n    \"type\" : \"xyvotcsrx32y9c8fv3rqt9nh7vs5yerl93ciq\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"i688\",\n      \"displayName\" : \"Jaymie Quitzon\",\n      \"scope\" : \"1sy8bo1xcvq012u58isa9c15bgsc98ajrneurzn0psqufzjrnsdmbg61mq2qllr1lvlko9kkfsyb68pvsw37zps10s1xbry8dwjdc70t9171uxr7ejl14wc14irr9krsy2fhs78kg4yzbbt068\"\n    }\n  } ],\n  \"nextLink\" : \"mkk7yw23gk6s47qggc988k9h0rfa7sje7gmpnx5euc39swsyodij4maxd73iic20bfxq7lnpnsrdkw9ipg26lcro7yzs7u6uuvjtj7khwqhhkgmzzh\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7381a55a-25fe-4e7c-b914-459b8a88f9b8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:17.288191Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_ListForResourceGroup",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "The URL to use for getting the next set of results."
              },
              "value" : {
                "type" : "array",
                "description" : "An array of policy assignments.",
                "items" : {
                  "$ref" : "#/components/schemas/PolicyAssignment"
                }
              }
            },
            "description" : "List of policy assignments."
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "39af1d8f-ac2f-48da-bfa1-4e6b91211123",
    "name" : "Deletes a policy definition. - 204",
    "request" : {
      "urlPath" : "/subscriptions/c596/providers/Microsoft.Authorization/policydefinitions/Dr.+Phillip+Rippin",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "feg2flcbyg09lee2lur8k00"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "39af1d8f-ac2f-48da-bfa1-4e6b91211123",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:17.286215Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyDefinitions_Delete"
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "df72c0c9-47ca-4b97-9319-fce38374ff05",
    "name" : "Deletes a policy definition. - 200",
    "request" : {
      "urlPath" : "/subscriptions/aptc/providers/Microsoft.Authorization/policydefinitions/Gilbert+Schroeder",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "quyhq8ju2d8n832yl4zgf83764xug9ed50rht5uudaziqw2maavrvz7t6q90tlm4i77pcrcdz260clparzdbuljxbhpgxv22rrziznv2n8q6nobe3n0we4nt8ovl0tbtnsbfe593ek743qdeqjl54mfjd73g2767zzee"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "df72c0c9-47ca-4b97-9319-fce38374ff05",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:17.286007Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyDefinitions_Delete"
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "188e0f77-e9c2-4e6f-8361-f7d0c5ac3c46",
    "name" : "Creates or updates a policy definition. (text/json)",
    "request" : {
      "urlPath" : "/subscriptions/j224/providers/Microsoft.Authorization/policydefinitions/Cheree+Kertzmann",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "jc0q74s1fmi5pn1ac3720rahflnb7ze626a2tjbo5xmm0ikpcxfe6s3f2bxxzpenhveyvcm11fpx69sysuzopnlske2bx9ch"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"name\" : \"Donnie Gibson IV\",\n  \"id\" : \"v2c8\",\n  \"properties\" : {\n    \"policyRule\" : { },\n    \"displayName\" : \"Vaughn Feeney\",\n    \"policyType\" : \"NotSpecified\",\n    \"description\" : \"Amet maiores quisquam. Minus qui quia aut enim doloremque. Nisi totam alias neque nihil. Nihil vero eligendi cum cum ducimus enim est.\"\n  }\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "188e0f77-e9c2-4e6f-8361-f7d0c5ac3c46",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:17.285765Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyDefinitions_CreateOrUpdate",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy definition.",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy definition. If you do not specify a value for name, the value is inferred from the name value in the request URI."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyDefinitionProperties"
              }
            },
            "description" : "The policy definition."
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "5a3dbab0-d9b4-4544-b83c-2cbed2effce2",
    "name" : "Creates or updates a policy definition. (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/95yp/providers/Microsoft.Authorization/policydefinitions/Garrett+Walsh",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "xg4sijvopdns2zptugxbbx1osqo64fdo9tkqtd78ozpu49w5yb10q3mivx8nwdbmbm869zi9fpwy847jj3ff7us37v4s4qsl32sy5poswclptst"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"name\" : \"Nelson Willms DDS\",\n  \"id\" : \"bleo\",\n  \"properties\" : {\n    \"policyRule\" : { },\n    \"displayName\" : \"Donnie Dooley\",\n    \"policyType\" : \"Custom\",\n    \"description\" : \"Omnis repellat ut officia et velit maiores. Amet laudantium et eaque sapiente voluptatem consectetur voluptas. Assumenda quia fugit ut rerum repellendus aliquid aut. Deserunt eligendi in ut dolores it\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5a3dbab0-d9b4-4544-b83c-2cbed2effce2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:17.28531Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyDefinitions_CreateOrUpdate",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy definition.",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy definition. If you do not specify a value for name, the value is inferred from the name value in the request URI."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyDefinitionProperties"
              }
            },
            "description" : "The policy definition."
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "dc9bc57e-88a9-46a2-a784-81096c947ef3",
    "name" : "Gets the policy definition. (text/json)",
    "request" : {
      "urlPath" : "/subscriptions/7nxt/providers/Microsoft.Authorization/policydefinitions/Mrs.+Fausto+Greenholt",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "s80b1j09ktim9mvps094dsqnj7n99d3i"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Lavelle Vandervort\",\n  \"id\" : \"ga7d\",\n  \"properties\" : {\n    \"policyRule\" : { },\n    \"displayName\" : \"Shantae Emmerich MD\",\n    \"policyType\" : \"NotSpecified\",\n    \"description\" : \"Voluptatum veniam aut. Sit odio error iusto. Quia ut atque. Voluptate eaque hic earum. Tempora repudiandae et id.\"\n  }\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "dc9bc57e-88a9-46a2-a784-81096c947ef3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:17.284893Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyDefinitions_Get",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy definition.",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy definition. If you do not specify a value for name, the value is inferred from the name value in the request URI."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyDefinitionProperties"
              }
            },
            "description" : "The policy definition."
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "14df5c1c-17e4-4c79-a5ab-f20120378f3d",
    "name" : "Gets the policy definition. (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/666a/providers/Microsoft.Authorization/policydefinitions/Isidro+Stehr+IV",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "i1npe9y7xipqrz67puol1ui22kcafysjzzg08c6rpxg793cbdrt1xt8bje9s50wd37p6q16rsc18gkpstssb3xebmae9jkk2li7ktyc4zmz5uh7ied2a0i25mf3o1m1"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Wilda Hintz\",\n  \"id\" : \"35n0\",\n  \"properties\" : {\n    \"policyRule\" : { },\n    \"displayName\" : \"Thao Stehr\",\n    \"policyType\" : \"Custom\",\n    \"description\" : \"Facere adipisci dolorem. Consequatur esse aut. Est a animi totam expedita error deserunt.\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "14df5c1c-17e4-4c79-a5ab-f20120378f3d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:17.284481Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyDefinitions_Get",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy definition.",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy definition. If you do not specify a value for name, the value is inferred from the name value in the request URI."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyDefinitionProperties"
              }
            },
            "description" : "The policy definition."
          }
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "d11a5f54-ffd4-42e7-901c-0441f0dff715",
    "name" : "Gets all the policy definitions for a subscription. (text/json)",
    "request" : {
      "urlPath" : "/subscriptions/f5c8/providers/Microsoft.Authorization/policydefinitions",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "kngd38xda3fslrqkklogpd6ao455hbxjnnifei6wgyfhipdkq6xa5uho92l60tbac27g829b5krzbp0uzb751pimrdaxwrswfqaa0m0gpd7332kukkylp712xeqsht0qo950aa7xwavjmlk4l5uxa7lahfsdvqys2q"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Dr. Jonah Toy\",\n    \"id\" : \"tte9\",\n    \"properties\" : {\n      \"policyRule\" : { },\n      \"displayName\" : \"Lanny Thiel\",\n      \"policyType\" : \"Custom\",\n      \"description\" : \"Est qui porro consequatur. Error et sapiente. Nam dolorem assumenda. Error incidunt nemo culpa nam a.\"\n    }\n  }, {\n    \"name\" : \"Fritz Cremin\",\n    \"id\" : \"c073\",\n    \"properties\" : {\n      \"policyRule\" : { },\n      \"displayName\" : \"Israel Marvin Sr.\",\n      \"policyType\" : \"NotSpecified\",\n      \"description\" : \"Quos consequatur tempore at. Voluptatem recusandae ipsam. Perferendis ipsam maiores libero sunt perspiciatis nemo omnis. Laudantium tempora vitae aut quam ullam fugiat. Nam quo officia repellendus vel\"\n    }\n  }, {\n    \"name\" : \"Sigrid Barton Sr.\",\n    \"id\" : \"z3e3\",\n    \"properties\" : {\n      \"policyRule\" : { },\n      \"displayName\" : \"Lane Vandervort\",\n      \"policyType\" : \"NotSpecified\",\n      \"description\" : \"Aut blanditiis sunt error molestias similique. Aut consequatur qui in sapiente non aut est. Beatae aut omnis et voluptas. Aut quaerat architecto a dolorem quas. Necessitatibus voluptas recusandae assu\"\n    }\n  }, {\n    \"name\" : \"Cyrus Veum\",\n    \"id\" : \"9i9d\",\n    \"properties\" : {\n      \"policyRule\" : { },\n      \"displayName\" : \"Ira Wuckert\",\n      \"policyType\" : \"BuiltIn\",\n      \"description\" : \"Quasi alias nobis est. Mollitia expedita libero explicabo enim amet porro. Ut quis repellendus ea amet. Molestiae cupiditate debitis magni qui.\"\n    }\n  }, {\n    \"name\" : \"Anton Koepp\",\n    \"id\" : \"d168\",\n    \"properties\" : {\n      \"policyRule\" : { },\n      \"displayName\" : \"Mrs. Elin Herman\",\n      \"policyType\" : \"Custom\",\n      \"description\" : \"A deleniti et sit ducimus. Nihil rerum odio soluta impedit dolores ex expedita. Perspiciatis delectus ut ut. Perferendis adipisci tempora fugiat ad esse aut.\"\n    }\n  }, {\n    \"name\" : \"Elvia Cummings\",\n    \"id\" : \"m0z5\",\n    \"properties\" : {\n      \"policyRule\" : { },\n      \"displayName\" : \"Booker Bahringer V\",\n      \"policyType\" : \"BuiltIn\",\n      \"description\" : \"Alias et a ipsam quibusdam et. Animi quia qui esse quia quibusdam itaque quia. Minus reprehenderit incidunt commodi inventore. Doloribus aliquid repellendus molestiae quas. Sed exercitationem minus se\"\n    }\n  } ],\n  \"nextLink\" : \"plhnh5ewi6898wvj5x6lmiwnk02v8tr2lwfbev3go2i955npjrkbsbeynpyu9lu3irdyj2nipp9g3hm\"\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "d11a5f54-ffd4-42e7-901c-0441f0dff715",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:17.283977Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyDefinitions_List",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "The URL to use for getting the next set of results."
              },
              "value" : {
                "type" : "array",
                "description" : "An array of policy definitions.",
                "items" : {
                  "$ref" : "#/components/schemas/PolicyDefinition"
                }
              }
            },
            "description" : "List of policy definitions."
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "8ea32312-4022-4c88-bada-c3a6a63a328d",
    "name" : "Gets all the policy definitions for a subscription. (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/e16q/providers/Microsoft.Authorization/policydefinitions",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "q87dxprwgbjdwh1mvssgvtwc00c0vmilwq1key9wzo6fzdj7q3jhjbjlfhckjnqmq2e0at5230zf9k0xok51vcidlvz85c9fcmtwp1g1wlick9py"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Isiah Reichel PhD\",\n    \"id\" : \"6830\",\n    \"properties\" : {\n      \"policyRule\" : { },\n      \"displayName\" : \"Elden Schaefer\",\n      \"policyType\" : \"Custom\",\n      \"description\" : \"Quaerat est est eum. Totam et voluptatem quia odio. Velit inventore et natus voluptate non dignissimos aut. Ut porro doloremque quidem. Est rem incidunt repellat aliquam consequuntur.\"\n    }\n  }, {\n    \"name\" : \"Miss Florine Brown\",\n    \"id\" : \"5wvr\",\n    \"properties\" : {\n      \"policyRule\" : { },\n      \"displayName\" : \"Stuart Howell\",\n      \"policyType\" : \"Custom\",\n      \"description\" : \"Necessitatibus voluptates aliquid voluptatem. Quasi possimus ut deserunt necessitatibus nostrum dicta. Aperiam quis est est accusantium ut commodi omnis. Neque est similique voluptas nam vel autem exp\"\n    }\n  }, {\n    \"name\" : \"Mr. Jack McCullough\",\n    \"id\" : \"5txx\",\n    \"properties\" : {\n      \"policyRule\" : { },\n      \"displayName\" : \"Nickie McDermott\",\n      \"policyType\" : \"Custom\",\n      \"description\" : \"Ab maiores autem neque ut fugiat odit aut. Eaque labore inventore dignissimos nobis molestiae ut. Nobis quia accusantium voluptatibus dolor exercitationem enim. Reiciendis quidem voluptatum blanditiis\"\n    }\n  }, {\n    \"name\" : \"Miss Wilburn Spencer\",\n    \"id\" : \"8eg8\",\n    \"properties\" : {\n      \"policyRule\" : { },\n      \"displayName\" : \"Jim Welch\",\n      \"policyType\" : \"BuiltIn\",\n      \"description\" : \"Earum qui dolorum nisi ullam in. Sint illum tempore dolore repellendus fugit aut. Et amet ad et debitis eligendi repudiandae. Autem sed non provident.\"\n    }\n  }, {\n    \"name\" : \"Dennis Muller I\",\n    \"id\" : \"n1yl\",\n    \"properties\" : {\n      \"policyRule\" : { },\n      \"displayName\" : \"Tommy O'Hara\",\n      \"policyType\" : \"NotSpecified\",\n      \"description\" : \"Rem quo occaecati voluptatum est. Autem cum quaerat ea quisquam deserunt totam. Autem voluptas dolores molestiae magnam consectetur aut eos. Reiciendis recusandae magni ab fugit debitis aliquid.\"\n    }\n  }, {\n    \"name\" : \"Patrick Conroy\",\n    \"id\" : \"p8w9\",\n    \"properties\" : {\n      \"policyRule\" : { },\n      \"displayName\" : \"Bryan Abshire\",\n      \"policyType\" : \"Custom\",\n      \"description\" : \"Inventore maiores odio sit et. Libero hic aspernatur. Facere nisi voluptas officia. Alias rerum esse eveniet ex. Aliquid quas necessitatibus aut minus.\"\n    }\n  } ],\n  \"nextLink\" : \"0ofyriuuwgid8ggujrvdfnp2y1yv2ufiq4m\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8ea32312-4022-4c88-bada-c3a6a63a328d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:17.282421Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyDefinitions_List",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "The URL to use for getting the next set of results."
              },
              "value" : {
                "type" : "array",
                "description" : "An array of policy definitions.",
                "items" : {
                  "$ref" : "#/components/schemas/PolicyDefinition"
                }
              }
            },
            "description" : "List of policy definitions."
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "f671274f-36d3-4890-b490-2eadd54fd6d1",
    "name" : "Gets all the policy assignments for a subscription. (text/json)",
    "request" : {
      "urlPath" : "/subscriptions/3r25/providers/Microsoft.Authorization/policyassignments",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "k0r0z9gt69cwki2p3ar5ss2o1ykpmoq78pd9u4kqqxacz"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Gonzalo Schroeder\",\n    \"id\" : \"l7t8\",\n    \"type\" : \"jj2jyfy8djuj9xtvxgvu3un\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"yy6w\",\n      \"displayName\" : \"Preston Beier\",\n      \"scope\" : \"o26e2r1lpcy3fzqienubym97bm9pcyz4q0ny7lgv2xqd7lhg8z9yn17cdzc5pve9d7dh1yzmx\"\n    }\n  }, {\n    \"name\" : \"Gerda Kertzmann II\",\n    \"id\" : \"7yf8\",\n    \"type\" : \"53rqt913rlgmdkfjgge19hgcoe5szzlhz40knloixikhr7j3bd3kkn885zktz5wz421dq3uk3p3knh37b0qz6dlw4wgbkg7a7w8nci45pphmepsrcjpyf6x56toyiyrf6s4s2yevuzo7b76yt47df7ufldbd3d3p8\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"m05t\",\n      \"displayName\" : \"Jeanelle Homenick\",\n      \"scope\" : \"aqs0s8qjwjis11btyqras91c351r33z3yr8c0byw4n2quo14z0cma2e6zzl1eons0cfdabvwp1j9r0lolofww96mpljdlox4qpecyafsy7342y8twjvq2ragxx7g04zmrm4f7n18fndnvhbi0fguzjm30921pw6kj325hg8o47y6\"\n    }\n  }, {\n    \"name\" : \"Dominic Nitzsche Jr.\",\n    \"id\" : \"xk73\",\n    \"type\" : \"3cd7s7imqneehtuvs2qm63n\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"vt28\",\n      \"displayName\" : \"Marx Hills PhD\",\n      \"scope\" : \"4crk340d4pk2ilw053dhbptjaldcqaiahu75ryh3oqa0hopb2japvh2pm2x8t8ozep7kwc3uiweypmv7iiqp6hi6y31hdg9tl5fq24ijd47bxoky1fwp134f3f8gldu21ts26o947dxtvay7jzg33pyaf6r0qp2fa\"\n    }\n  }, {\n    \"name\" : \"Leroy Schroeder\",\n    \"id\" : \"bzwo\",\n    \"type\" : \"nbkd8907cvszwoul74n1nv42d3l6dgjnowdlx2w1o3y86zhubu2qtxefkglpsihm4ya464g38enjow7o7trkpo7ba2u5fz7ort0cr6iecfcd8fuserfgk26y68a2kfdmxvrjbt8dl3gu\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"knr6\",\n      \"displayName\" : \"Dirk Witting\",\n      \"scope\" : \"dszs9o6fdl22g2y3r310bzip32tc551bhygqk9c0rls41uipxv9iinxc9toi908c3ibdzt1fv4csfliifs00ik68otvhm4ji\"\n    }\n  }, {\n    \"name\" : \"Dr. Caridad Kerluke\",\n    \"id\" : \"54h5\",\n    \"type\" : \"ow9ivm2iz1lq8iw1dn5pb4vraipcjudtpp4o63kerzt04f6699wji6g4ii1ccuphn1gmrm4l1vpo3nifuoag538fv5wp26plnkxu2n2hhggihpohigq0po3w8d3ut2ujwyz3a0\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"9669\",\n      \"displayName\" : \"Lydia Rosenbaum\",\n      \"scope\" : \"fjf0noj7q8kru65bc57t470mlcbyfacy6ld4qv82ctyodq2gv624e2ezozqcose061yec692xmboua78izu\"\n    }\n  }, {\n    \"name\" : \"Mr. Guy Monahan\",\n    \"id\" : \"1bny\",\n    \"type\" : \"ebuqpc3gzfyg5q4j6w1f9ejqgqm6wce586v9hu60yggx3f40ouqkt0jtwb10lzfjevmtgicakbmxwmoj1ztasq4\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"nn3o\",\n      \"displayName\" : \"Mrs. Inge Parisian\",\n      \"scope\" : \"4is7g16xbpu57jm09j7ihw2n8rcqqaqrow3rwhqc3cs95x3rh9bdz126fn5hnpt3t4klgsjl2p9q7em1kwhn6joli86fr58cf590g6boiyo29rt1q\"\n    }\n  }, {\n    \"name\" : \"Werner Thiel\",\n    \"id\" : \"440v\",\n    \"type\" : \"ca69yaqow75jldh7nzvyxpf4sne01yd1g2yqf4gk3n5mg60f5591ayoxazhgxxvhabwou25vohokalq0az3vrtlwjbtkh82owuscmjcjz0yca4zqm36dv17ahza5ipb13lqpz8irsm36s4s1pr4erk6h2swin15e7aaji8iiji3zxx9kj\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"hn12\",\n      \"displayName\" : \"Emilee Abshire Sr.\",\n      \"scope\" : \"1v2ddga04ktk3vef2e5kimmhe8wjgdrbstpthyfzwjwn5miy18smanlrbmo3wlz4qoxnrzyeow1pklymikj5s9xsib4oar3sum3jhy86nd1v7bo4fdanybmwraljvuxhxk319s8iy84ni4jc\"\n    }\n  } ],\n  \"nextLink\" : \"wechf4bazconc6t2mij3vjct6l965o4hj\"\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "f671274f-36d3-4890-b490-2eadd54fd6d1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:17.280893Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_List",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "The URL to use for getting the next set of results."
              },
              "value" : {
                "type" : "array",
                "description" : "An array of policy assignments.",
                "items" : {
                  "$ref" : "#/components/schemas/PolicyAssignment"
                }
              }
            },
            "description" : "List of policy assignments."
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "2379cb6e-3838-4812-8732-e2349c3288ce",
    "name" : "Gets all the policy assignments for a subscription. (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/7ys4/providers/Microsoft.Authorization/policyassignments",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "4mbr34z3ags8zk9wk321xtihrveizpb3lxl9bco0t5s6ju6a9gyb37ss2qy0wx33skrnl1k1lbhwplx10i729buwzswkd8shbncc4epqkduvumokwvaqvy3yfgl"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Donn Kertzmann\",\n    \"id\" : \"z782\",\n    \"type\" : \"n4gfy8ps3ltqz6he6llqtv69zjwgqdhp9vczv4eevxz53u7y8hnlg2m9brg98qy2spli9qitdpz4xozhxiohmvqtr85v7igwny888kr2ngm3hrfif7haf0eb6ibfpbalyhphz8vg3jvq666xwxawyjiu0z1tmry0676xsphjcejomewr\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"7r7m\",\n      \"displayName\" : \"Maragret Reinger\",\n      \"scope\" : \"mxrh437vkjg6wt7nzxq0p9v5zz7c27pmups2udjoj49wfclmc55u6v89ukt3uq29eiq\"\n    }\n  }, {\n    \"name\" : \"Delphia Altenwerth\",\n    \"id\" : \"9r54\",\n    \"type\" : \"15nk9x0mjf0rjv8ltoxxdz26y\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"99bn\",\n      \"displayName\" : \"Shayne Schaden\",\n      \"scope\" : \"pbtkua6pvxzq30trcwot9i8laptexqr1p7wc2s7pr6nx0p0ygi31si34ret41tmzr3j19kb5m53n5ecahevsc8l51gf20hoeb9poysb455knqo5q2t42gidgxlvwo41giznn2qrvngtgay\"\n    }\n  }, {\n    \"name\" : \"Agnus Beier\",\n    \"id\" : \"7v5j\",\n    \"type\" : \"7ebtvqyo3s3kxhr987fy1req2dksvwuzc5hc84z89bmnc4n34p1z7bk393t5qwei7rgfx6n4q1i2o3yekjeh8rrvi1xw17ndx7f2z2e0jm3qvxilhe9dk4rc4tmuknjbt13s2al43y3zr8vuu8nm7it0nndyj99bo\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"f347\",\n      \"displayName\" : \"Almeta Purdy\",\n      \"scope\" : \"3ymvn10m70yl0z98\"\n    }\n  }, {\n    \"name\" : \"Marty Olson Jr.\",\n    \"id\" : \"5jc8\",\n    \"type\" : \"igyc3cdfq9a2m0b6ky4cp3j83obq1hve69thsrsee1vv1on8fwh6e02ql615ofj3eh5pbmtwsy2sxusytvpxl37cnq2ddptb7kp3apb1rfjt0xlgeg4gh72pp94k5e669zzg0\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"t97z\",\n      \"displayName\" : \"Dick Bechtelar\",\n      \"scope\" : \"c47k82k3icdwej0f8d45uan825vs0zkr2gz466at2qshw1cy8bawe0cykl5txmgneu926vccdpljdhthkrzyi5\"\n    }\n  }, {\n    \"name\" : \"Josphine Ziemann I\",\n    \"id\" : \"32q9\",\n    \"type\" : \"t1y59pxrz20wsyx9ly0g7swjmjscc0m9kngbosb2w0tjc0iae803yi0bjip5w3owvz5p1n217iaztvuoys8hr6krxnk2yjz3s2ire9f10fwd2r94cc2shrfk2qxlryi09w2pvym9yt17zi2xdlk1hx283bcoqv66jpc7iqnynyjbd6q46ekdu5dz0\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"jp06\",\n      \"displayName\" : \"Pilar Sauer\",\n      \"scope\" : \"j4n6youpmwzwt88sxlqr3jc0t50h0xk5k168jue01biiny1mwrx7tiija0bkgejl22izcm3cqnqqffjs5v57ul6kmisjorhrzy\"\n    }\n  }, {\n    \"name\" : \"Patrick Raynor\",\n    \"id\" : \"q93i\",\n    \"type\" : \"d1q9t7439iaki8600xjmmzlnd08s3yqpjd53fh9g8kwkygv4sq1vw2405jn71zg92wac5nzkrhlvzgj384z58zufvw4bf\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"8z17\",\n      \"displayName\" : \"Minda Schumm\",\n      \"scope\" : \"g5xozh359dcyi6e807exp3be4pbw1oifl42j116eq77whfkzdaa2yko46pi5zgs28wqb1cjuxq6mngz6urzgi1mvgzu9ih12375ua8fdbhh9wzugiyc92vaqz8ckykzn0ai1mniyb\"\n    }\n  }, {\n    \"name\" : \"Ryan Watsica II\",\n    \"id\" : \"9ijj\",\n    \"type\" : \"juj9yivnpqo10nsk7j4xtdfj84l054wg3prmux7mx0mv2igejeyvivz1qx6ucht8hdwzuzdbpcfyjmfc4svfoi4b5mv2oxfpke2jv4k6svyt0fhlgekxvc0kdjt1mwaz2x53fyqoeoglw1pq4u342jbrmtz36qxjq5yj2sdr7scqkkdxlridho7dwbmzv\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"2wxt\",\n      \"displayName\" : \"Rosanna Ritchie\",\n      \"scope\" : \"g93y1a4zujlxhpaxaeqrdp4jjh7h21qv8kz1gd\"\n    }\n  }, {\n    \"name\" : \"Mr. Omer Walter\",\n    \"id\" : \"93mf\",\n    \"type\" : \"6naqn4m5wtqkmpngax33lazflrfs88mszgyvmg4bggtbxhg1vivkqslgpxb9ufcbyucyxw41hij4354r4jv113o7trwbo9sd9yj6uf7qom0crpoqne4m4wcg9tmlfxpuy6l3s2cc174yxjn1powtq6wf8ftw94guv\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"949j\",\n      \"displayName\" : \"Lee Grant\",\n      \"scope\" : \"ffc1xpvehi5nscavuwatjner69iq2wuk5o7u7t2u324m9u1w0t3930qxreu4fylrdmv65r0vc4a9j9o6ahcn0b0xpevhowf52luf7ljbgcvhvfapc\"\n    }\n  } ],\n  \"nextLink\" : \"mdfkmys16lwu9p3thn6nn\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2379cb6e-3838-4812-8732-e2349c3288ce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:17.278854Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_List",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "The URL to use for getting the next set of results."
              },
              "value" : {
                "type" : "array",
                "description" : "An array of policy assignments.",
                "items" : {
                  "$ref" : "#/components/schemas/PolicyAssignment"
                }
              }
            },
            "description" : "List of policy assignments."
          }
        }
      }
    },
    "insertionIndex" : 25
  } ]
}