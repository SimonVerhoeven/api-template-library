{
  "mappings" : [ {
    "id" : "6fd0154b-89b3-4243-ade0-4289c6419906",
    "name" : "Deletes a policy assignment. (text/json)",
    "request" : {
      "urlPath" : "/whv611xg0s8639djq43bo47tqastmuftccrjhv0e5d4ipwndndp51k4kc44vltqjrks68yz6vd8smhholbz9fcdfxoc9mwzrhv3gfuc2cd2f9ze2wohb7ar8g9yzqz6dag5glcwl/providers/Microsoft.Authorization/policyassignments/Natacha+Koch",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "geye9esgj1n1phyke7l9cwgznpf22z72kmg2aqgnalau90t9uovfrt0iclsdm0w0u8anftj16fwhqn525ps4fzlupnahxesr8pfasnv35lj"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Mrs. Fidela Huel\",\n  \"id\" : \"v71f\",\n  \"type\" : \"bz4wlji1difnln5snl2ugtkmoqd5yya0dmi4b9j4jyj7y0nm27uefxyyr30kh30qjr9tk46ml1r5ganf7hm8b0k3pl1eq4h9jfn6cg9rznaxmr86t0nu1a01shjg2dvrfyjkwtez1hs6s1xwbz898nwcaifukuajqmdz83qv\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"l581\",\n    \"displayName\" : \"Quinton Pagac\",\n    \"scope\" : \"a7gh6fioxyu9xj61k3\"\n  }\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "6fd0154b-89b3-4243-ade0-4289c6419906",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:29.963217Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_Delete",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    }
  }, {
    "id" : "06eadb82-d371-4370-846b-18082bccc0bd",
    "name" : "Deletes a policy assignment. (application/json)",
    "request" : {
      "urlPath" : "/xmi7pspz8bsxc265py0owqiy3s5xr4bs4k74oo4b7blar23xo0z3ts4w1bw0dinszopvrce32b0ck1of8u9c04el7gkx6blla6o2b2l2nm/providers/Microsoft.Authorization/policyassignments/Kaila+Hintz",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "3ljp102rgepb4vzg"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Sabrina Beahan\",\n  \"id\" : \"ru69\",\n  \"type\" : \"qrsfx9s9nncsyutm9jnwxsb6rbq43pgoisbraha7exz3ambrcnhwq0cko1fzdq8le49cfzg2vou43armq0kuoyl5xp25taui3frc31l9l\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"ka48\",\n    \"displayName\" : \"Carlo Kessler I\",\n    \"scope\" : \"x0jfuppz\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "06eadb82-d371-4370-846b-18082bccc0bd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:29.962861Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_Delete",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    }
  }, {
    "id" : "a4ca1ba6-da7f-4dcb-8dbc-06f8cf6f1de2",
    "name" : "Creates a policy assignment. (text/json)",
    "request" : {
      "urlPath" : "/pwy9oiher2/providers/Microsoft.Authorization/policyassignments/Clarence+Sanford",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "m6br11hi4x6ig069gsppny0gk6uepvidl"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"name\" : \"Brenton Schoen\",\n  \"id\" : \"ye2t\",\n  \"type\" : \"gp1wuvxx1szxefubllv10bpa8jhep6sc0usc73gisgcjnt4ki3twwvav9nydcnjbv\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"j25j\",\n    \"displayName\" : \"Damian Kassulke\",\n    \"scope\" : \"gq09hmpqezpdsrmawpzif37gvnto7zaz8gvm7cygzwkvfhpzd93p8is3gqgecakmjxqa42pek38h2sfp76d74g6tqd1a92rkxfc15xi49i4kfxzz2dlttdfwjqps75qci9ygdw526y8rbbvnn7i1wk\"\n  }\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "a4ca1ba6-da7f-4dcb-8dbc-06f8cf6f1de2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:29.962507Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_Create",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    }
  }, {
    "id" : "4256f9f0-9c0e-4962-9099-7d612f5cb503",
    "name" : "Creates a policy assignment. (application/json)",
    "request" : {
      "urlPath" : "/k1bwctgvz4efhm7vxo4fxu6vjide8sy7a93r3bhqprd1sejlpudplgt2l0nje1e9oz6lhvmujdzz2t54mkys936uy6v3lr2ity2nk9g5311okchb5e89mmmhpmfs63qd2nxbvij/providers/Microsoft.Authorization/policyassignments/Mrs.+Garret+Cummerata",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "thbk5ur22ixqb9jqr5r24jyztzgvoqszop6hd5oca1x518je6g5mmss7y7z435l2tozrhws2yrg2j5etz3qldjvgik7pu9br21qx18r"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"name\" : \"Mrs. Loria Wunsch\",\n  \"id\" : \"2d40\",\n  \"type\" : \"ua5ytlbg3jjj3e3e8ydwdrs62jqer62fjkl0uaebnd8qyg1g62givbre2s8am1uejvwkq7ip1qc4dw5aqcs0m2xaegnn6j6zkim1t1bkgbjwsu2b9she2ojiezk8sivpedjk3ouihivrm\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"yk7v\",\n    \"displayName\" : \"Nohemi Roob\",\n    \"scope\" : \"0ollh4nkt1uiz7ijrvqwhhmd412s7f6p2shjuyt0iw5px8hxuurdfyz8fpihnl4mq7k7ej14rvmws1ch1fw12g8fz9raxxc6xawplq8mb0n6id6ng9tqja60cz46x\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4256f9f0-9c0e-4962-9099-7d612f5cb503",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:29.962163Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_Create",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    }
  }, {
    "id" : "615f0315-8c58-472e-9b86-a8979ca55339",
    "name" : "Gets a policy assignment. (text/json)",
    "request" : {
      "urlPath" : "/enouc8doiky2khqf8qe0tq4h3nrsyboqhyxl0cqrdqkesdx12kvqsw7k6lytufyqnqmcqcwogiw2cfsx1g7qj3d/providers/Microsoft.Authorization/policyassignments/Leon+Stark",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "1xin3bwfsdo9dcd1pa2x4f2qdf1prs29l0p3y8qex11xaapipfw8gp0l3bw2pd3dy4hqks1y8a2s98j94r7gjr1vcvp5fl7hw5x3yml61xhrjzeev5xkmjgki62qd3ykvaazzj94oxpyz1rqciltdj3cz0bwgruwszju9oqsdzz1y"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Zachary Moen\",\n  \"id\" : \"z4a4\",\n  \"type\" : \"0on1n99j2ak6jezzduqxf5uuxf7\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"4mst\",\n    \"displayName\" : \"Slyvia Gleason\",\n    \"scope\" : \"u9kkl7q03lk4dbpgs9flcsmsxp7sbbrm24wckgi63esxxri1ftgj6lsocdclu94t1paw31x282c099rev4w3qk0e6ejfkce5mh3ilz\"\n  }\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "615f0315-8c58-472e-9b86-a8979ca55339",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:29.961805Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_Get",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    }
  }, {
    "id" : "62b0e5f7-9c28-484c-a4ab-592ca7feb8ff",
    "name" : "Gets a policy assignment. (application/json)",
    "request" : {
      "urlPath" : "/tptez2u5gh29fxfzijvda4rzqcnvvwc2k96hshtihfocgml2r0wqpp7fsrv1dc9xr7kmm1quwoqr7iapnr3otlz8eqhx5lrm9udizqm5qq91ad3w7abvwdnycdu/providers/Microsoft.Authorization/policyassignments/Alissa+Kiehn",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "dzclmokfm3clzw3o5ddgvb7yw6h3bc2qwmdb8scjdip86v2hxptudv5kg9h43ifb2lee"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Mr. Catarina Sawayn\",\n  \"id\" : \"5586\",\n  \"type\" : \"dgnmchvh5h75emjgdso4drj4ywav3tj3dytts4fmhgjzrbaycpeox9bey944vvm5gs2ygkziqwnz9zuw54anrtrip1olcm8afd6p5r6v00zzpujg4pw7zaacbv\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"byea\",\n    \"displayName\" : \"Stanley Kertzmann\",\n    \"scope\" : \"h6oz11jpu\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "62b0e5f7-9c28-484c-a4ab-592ca7feb8ff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:29.961456Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_Get",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    }
  }, {
    "id" : "4fc44187-11ee-4c54-a8a9-02b61efa2330",
    "name" : "Deletes a policy assignment by ID. (text/json)",
    "request" : {
      "urlPath" : "/lk54",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "oogmfxmsxawl5p4aj0lfwr1feptmd9skxw3cdw4devjxiqif714r0qoiye4el0i5140ut2kea1bapvaxtp3cvlixw7sm04xgt0i84ry9wxmlxowisz110ost6izxie85hw1vk3xgzt3d3wd3t3eb3lt36hi7kpkbh1tn495luv1e945809q85y2x"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Lashawna Strosin\",\n  \"id\" : \"9464\",\n  \"type\" : \"im4o5advo38ge1yfw77k97yp1edbp0j8p5fg6klt3hlxqj01rn3pcccz1w03drj96jyq5l6p9oujykvxj0qm1l8mfkl3qf2enlco83j\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"06k1\",\n    \"displayName\" : \"Danial Fadel\",\n    \"scope\" : \"olok0jh5xmvtpqp0jx74m\"\n  }\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "4fc44187-11ee-4c54-a8a9-02b61efa2330",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:29.961098Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_DeleteById",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    }
  }, {
    "id" : "46894222-ef84-4b51-b89f-c5360f21f432",
    "name" : "Deletes a policy assignment by ID. (application/json)",
    "request" : {
      "urlPath" : "/61w2",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "20987j7knfekyn3o80f7rl2gw0e4pa1v2vp6y427d1p8otczdutwe45hhxiaii0w1h15a6pbb4n2tcaczaee5ldxlais85y2ne081z4s9fv590pzfif7sjr"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Leonila Jerde\",\n  \"id\" : \"c4sk\",\n  \"type\" : \"2ct55vowzp1b17gbtm6b6wwjf82uxszbog7x2opm5fumrkuygn6frw0t0no82sruhr65os80zcphso99j8do69opf49lv5dwwfh0r3zebxu5ekbyjxe29uyqjuiwrhlcuqdanc84s1w9e4ikz3uanl1ektz60ir0qcmp0gxb790\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"6r8y\",\n    \"displayName\" : \"Amos Crist\",\n    \"scope\" : \"5kosegs69qxzouzw0fyxjiake180rn6z1gtq0qgl5acuu0qyix5b4nz2bg80n1u92y\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "46894222-ef84-4b51-b89f-c5360f21f432",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:29.960732Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_DeleteById",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    }
  }, {
    "id" : "74d6ba96-c495-421d-9ec6-7f65d648d630",
    "name" : "Creates a policy assignment by ID. (text/json)",
    "request" : {
      "urlPath" : "/79v4",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "g2td2kcol91w9rua5cdr0r1t5e3qiqrlxthv4ushg0871kzq31y7oq10jbfgfavni58w0sxuiwx6bv3vftc1ocxob8tlzlkjtdbch7xvoq5a3wq8kys54953tfph5giboc1s4yq8jwu2vyknp11hzwt71hvava11u8u2wm5k2r7mtdxiw"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"name\" : \"Marcelino Beier\",\n  \"id\" : \"q24j\",\n  \"type\" : \"v7ohy6gngx2sm89pjqadbed1oajtjvztr8rh10wnjdr04f\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"37e6\",\n    \"displayName\" : \"Alda Stanton\",\n    \"scope\" : \"kfo9j8bh4bm0b8qvl8zwf9j8023olyl4oiho7fcvfz6ilvfg0yvu99cvxhdtxjsugzon2iq707alk733nsnn2u04e3xak39j9gaicv5fy6b9j3x8kvhezd4rzqvatkqgorwiakvr3\"\n  }\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "74d6ba96-c495-421d-9ec6-7f65d648d630",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:29.960364Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_CreateById",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    }
  }, {
    "id" : "69dff28e-747f-498e-b9bd-09756b49adfa",
    "name" : "Creates a policy assignment by ID. (application/json)",
    "request" : {
      "urlPath" : "/e0m1",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "fgjco6v6kt4lt3eqtmasjbdacq6gkcfcch4auhwxtjs97ce9vzzdsp1iqshzr115lztb2woyl2aoliac4tjbq5nnc53sgh1zffofie0bupqnb2bz8tpmh7ax502fk1z49wo2mpzg9hge5a47i3fyao64mlkbpvoc80t7s06rx50lzg6jjmn6vm8tjqzx5lvdg"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"name\" : \"Andrea Sporer\",\n  \"id\" : \"4961\",\n  \"type\" : \"yf26ok7daxxqhkw7p7gozthkw1dgufkyejkw7p0jzijvoybd9z6wunqzqjloh6pl7trrwklbtzuy0zergs4w75c1iypjrf05ep7ni62hyyoogxaey8\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"zdur\",\n    \"displayName\" : \"Savannah King Sr.\",\n    \"scope\" : \"ao4wj8m4i4br9w89q5mc6jsdnayqtzfq10vzdevpt1j96ez9mwprnuy15icsr3oueaquyfryaiff3cby9n98ijkwnlzcse694z4hnrso9vfn1bjcm3m6dkh6094gzys4anl83jyyqbjkfi1o3oovr3aady87x9vuqadznezltrziteehuerexjvkn26hl\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "69dff28e-747f-498e-b9bd-09756b49adfa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:29.959995Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_CreateById",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    }
  }, {
    "id" : "c2c1ce33-546c-4965-87e1-d4242bfe5243",
    "name" : "Gets a policy assignment by ID. (text/json)",
    "request" : {
      "urlPath" : "/w352",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "cg39ec0kjqot2da4oecb245jygdcdnr7tfryujdfzryiw3n9eonrm1awu9gzyeiidqh0tm2z8of589polot8fr515cbu"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Cleo Keebler\",\n  \"id\" : \"7w9h\",\n  \"type\" : \"dikg0337dgm7elf05umevm80e3pr15gua6awz7rumwz3svty9j7if0tm58fgb5ecnh2yuz7swc62fic14aiv9wgto00f7sesl4vz3g611k76923c2uddwi8eqa2b12lvvf4esg5abh6xor2j3on3gimn0nzm1fik7hjpktbuinr\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"2136\",\n    \"displayName\" : \"Cary Kris\",\n    \"scope\" : \"0cxtlc5i77nkji7rn7ycv2fsfl1s9saperg3crihknqcp322x85z7bcvf17afdbnucl0fx9og0gcg1n9wil7e7dq0ji1lk4ftwxzvyctr0p4ib1j35u2484uy3j926p9a73lffwl11ius56dm6ia8\"\n  }\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "c2c1ce33-546c-4965-87e1-d4242bfe5243",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:29.959624Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_GetById",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    }
  }, {
    "id" : "0cdf7d14-898e-40ff-9294-29d3ba5401e0",
    "name" : "Gets a policy assignment by ID. (application/json)",
    "request" : {
      "urlPath" : "/61e3",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "l9c2yk88z"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Lyda Gulgowski\",\n  \"id\" : \"g8r3\",\n  \"type\" : \"55kr7r0ctftmrsrh60r39qis4g139ffqk9bl8viww95bhskgxrud5h4v8atjjw4j5zaw8ixrjty37o2ol0eymd88u43y28w69tlw6wfe\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"56w5\",\n    \"displayName\" : \"Cyndy Stark I\",\n    \"scope\" : \"wbovk3ixukszrectxh95ygds5d57sdksgitgknpvnf8vuutaltkj1xpotr3yr0qivww00du6nizakxh5c3jtxu42i5f678eflncqeml9zzs0v8hpxj2s7w4bhev3deyjdxa6sh3t28ceamzj2k5epidna5kamp804fyosj3lpnb\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0cdf7d14-898e-40ff-9294-29d3ba5401e0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:29.959248Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_GetById",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    }
  }, {
    "id" : "8ee817a5-0e7d-4555-b99c-774d8f18aeb5",
    "name" : "Gets policy assignments for a resource. (text/json)",
    "request" : {
      "urlPath" : "/subscriptions/47d5/resourcegroups/5EKaxJB58i6A0yiAwbY%29wceWBcoK5TLm9AfNU3xZvcP8edjICQYu8mI9uIDZBPUl8OnMZob0ThRQtj_e8Q9/providers/nqjl9m2dbbt8l6quu3rxlv5rl3zgc2vrj96q9n1q1h8lt8li96rjlk52t9163xxem154tqucbt3w3xfs9tgjgl4028pzt53c82qrfbgzkcm9gx7ktiyp2by9kg40/j7v835aqdi6h8mmtuffwosy8cog7gf3fqynwz3jtpfpfm7g6ey53x5yv6ispwjj3w70bw32l7r2q5wa722ucgb74epvpcm1icqhqu7td5mdhj9hlv1ty6pk3ramgsapxjo0gllfga9u9yx095e3t6o7hiwtqfcwekg/wkrr5uucqbps9cj265yfoicxvb7tu876z2aeuo24fqzkkgb9jwpt9t2m5szs7xnao08r76b3zi5ol453pl7zom67fbrhlps3kws7ujw4qt2fg4dgfy2lucmlg0ej53oy9rbtgryso9yuglb69ktsvgw9trt728snx9sugn27td67an/Dr.+Jenelle+Beer/providers/Microsoft.Authorization/policyassignments",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "c7jkce6nmzl8fhf82yunqifggor4k890ez5e76fhpmqpctk5p2er97c6bccvfxde0ok9xlqnlrgblwccmqhlskzat8opf6jribzs2l022a7atc85iculz8ipmv4fd4ap4afjdy9y0ngf188c4xp8b8avjjnkwis"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Mrs. Anton Vandervort\",\n    \"id\" : \"52d9\",\n    \"type\" : \"91s4j4dc6o4hw5oeee1w74li6ykwvpo1b1p3xnvd8m3je5wu1n4xy66d1yi49dsvd4uiipf6wdtbwxm00dfj75a6boeclrtiwuqtbyt4lfonfqvcp8srtlaqtvxewcfo4358fbwbptjtijvhxf\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"n5ys\",\n      \"displayName\" : \"Cathrine Grant\",\n      \"scope\" : \"bp0p5grf955461wz04fvuy5xru1ydfwg78qtxjqezqgvn2tu0mpy4su9afpih6m3d0ar6mlp0xapjlyesfk1qecg2ab42dju0vxcm2f5cstau13x08ds5pfaa5sn0f3hxcn7pqpqup0rw76t4i643wof4qur09\"\n    }\n  }, {\n    \"name\" : \"Harvey Willms\",\n    \"id\" : \"a5ko\",\n    \"type\" : \"ap5yoxdoxdqlncbgzxb29k1bhclvyqj78ftsp8ql5j6q43xyop37sx2ij40067ivii2tygyjtbk5wwy6g46uze7r8lxk4mg7omcnpyxu4p68k8k7tuvcfu4ssd2on53vajy9farxr5qdn\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"9kq4\",\n      \"displayName\" : \"Phillip Lehner\",\n      \"scope\" : \"3urcjzd2jz7d8qfuta1pv37ng129120rt0kkf9yi4hsaqhip4ttiklsrltzcb6u3qtfeqjw4z94ij\"\n    }\n  }, {\n    \"name\" : \"Jerry Ankunding\",\n    \"id\" : \"0874\",\n    \"type\" : \"iv8m8gi0hdz3th3s0shq9ca49g0ivszc972vu96tvux4ls2ug1lcizcdsxj327hh3vkv3c34cwvtc5n0lkq0tuwbh1uycbmgkmtvfhs8pibvcduw3s6d8laoz2bnf8vvb8zmvn9764btwfuv11njprw1st8zl6wjm5p9\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"eivh\",\n      \"displayName\" : \"Harvey Donnelly\",\n      \"scope\" : \"mof725fjks0z3pb22rvhrxx27csubnncuk1vtuliowmcth23g6gqyps6jcx9wlxult0pxpmk49fl6cmzmth3cg9qlwqg5pnlwioe2xw00s5clcr6ti6cdikbcbrpr4n6ltlw121nc92jq\"\n    }\n  }, {\n    \"name\" : \"Mr. Elmo Paucek\",\n    \"id\" : \"2e3h\",\n    \"type\" : \"q212axdumkqswe93akh5cizb9pu7w1tcktq1tw1\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"183i\",\n      \"displayName\" : \"Terence Cruickshank DVM\",\n      \"scope\" : \"nfeeps7vwxplh8ry36jex8b78531ob7qktr3se92bkcc63jxkk08ofvphcn1k390tooyo6d43sasi0ukaouzqwj1wa18hjv956suapa\"\n    }\n  }, {\n    \"name\" : \"Irving Kreiger\",\n    \"id\" : \"y264\",\n    \"type\" : \"dfjuyl6xwob4o7ptjfajj9lonp3lcn0si9qeapzzh9nnnxqj3kzxz0ntkwuuq3r5ebf86k36nsz3aobko12tgsqrj735c20i673am36n1peqzcprog4ar22o6y16onjoevqvicsdwr1\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"0m8x\",\n      \"displayName\" : \"Tiara Ernser\",\n      \"scope\" : \"d54sheor4usw0hi2zqdl8ltxgnw1n1al5aqyt\"\n    }\n  } ],\n  \"nextLink\" : \"r4xvo50fh6pgpadsw635n6nsh8xlvgax1q4omsr12dlb57ohja3yu7p0gkq7tpvz2w6v8edkgvoe5pmdcs0k4483d14gy0cer0rhfsixyzz9vipn6qpc4v8j5dwba\"\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "8ee817a5-0e7d-4555-b99c-774d8f18aeb5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:29.958876Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_ListForResource",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "The URL to use for getting the next set of results."
              },
              "value" : {
                "type" : "array",
                "description" : "An array of policy assignments.",
                "items" : {
                  "$ref" : "#/components/schemas/PolicyAssignment"
                }
              }
            },
            "description" : "List of policy assignments."
          }
        }
      }
    }
  }, {
    "id" : "3cb04b8f-0198-40be-be97-e05334728914",
    "name" : "Gets policy assignments for a resource. (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/3y1u/resourcegroups/bMzTGHRxbJDnwhaehNt4%29/providers/hkr7fhczpy10r0trao5mwv929vfkdw8cg3e86dq21jfz8mar4ymt2ppj8/knj99td4ux5xakneuxkkks45d8vmhj3brhkpmlkhss6bmwi95y4jwljdeqhcb9hff6wwb9sq17ruydpjrc9kuwyorn6tft060tzrnbrcrmc/mer9ju05ouho4k5ew3sa6lyx422my62qmicx/Keva+Kuhic/providers/Microsoft.Authorization/policyassignments",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "uwwcs7n7jqc2hcmij09otpoouglsoeefy5x9m0o9tbztb536k49dw6sjs6x5l3xzfrxuyx5mpk9ndfiwl56lgu8a60ipssp9o2buugolqjv7n0fejtbp0kbt3l26adcglwgrtfkp4r5aoiers70kqm5ssuvkt6wgrf7p"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Phil Little\",\n    \"id\" : \"58l2\",\n    \"type\" : \"sie5sprtcyluz3aalscupuanpeyvu64iau1c6hq0qbow47t0re6dei5u9quxdbyslwj0off8x3efxbz70916xwwb4g0zezoe8hw4xddkijlwzss8k4l6tfnzcb5325grdk0gxvh1dfh1hkvrzpib2g9ufxrj3eo4j7fk472ae3oo01xbomd2h2fj7gwdwc1s5c\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"ejn4\",\n      \"displayName\" : \"Lanette Dicki\",\n      \"scope\" : \"jk9mst3cevk6293v52n4upwotwoi2an0nff47z7jge3ucb19wgs4ejjmx7k4zwmivy0lpxhxz79jhnz49tisy6tdge6d1mueexgeg3ofug5o1cnnvj1upc7qwrvnrwjq4w76ci2whjoyvji3j4mpo51lfgi8jlt0prfhnyxywfossfw0rusiv5ei\"\n    }\n  }, {\n    \"name\" : \"Hank Stark\",\n    \"id\" : \"6v83\",\n    \"type\" : \"op95nxaal5ehdtbw7psjk1flawkp5b2xom0k1ik13xfwivk16qkg9qwcs4z8po6caxdkewk4hd8s7kt7dcfsc7a43pijrdxtoy0xffk6n9na8nu92qse46ght3f5xm1xwyu60wmztneqy7bfwt4oeszrsrdzsjneocecs\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"24gq\",\n      \"displayName\" : \"Calvin Auer II\",\n      \"scope\" : \"4rxtwhsdge1td9g0vaid8jlw4en1g0gwu5titi7fqhtpnhwiw8h3sqknxpk38r\"\n    }\n  } ],\n  \"nextLink\" : \"y8x0s09ktcnkveb5ubvjb7l3nmr9ojrymi5biyldm6lc4bsnuobyk10sm4y8998efyd2vppur20ymcyy6ncfykmqa2eysi31rm0nvqxjrfgebxpaahac5sqezwy1ktmitmbg1mlnaqgs4nhyfl6jpqk7hd47nusa9cp236yi1n57h0d6kscdh\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3cb04b8f-0198-40be-be97-e05334728914",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:29.957445Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_ListForResource",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "The URL to use for getting the next set of results."
              },
              "value" : {
                "type" : "array",
                "description" : "An array of policy assignments.",
                "items" : {
                  "$ref" : "#/components/schemas/PolicyAssignment"
                }
              }
            },
            "description" : "List of policy assignments."
          }
        }
      }
    }
  }, {
    "id" : "88370ce1-8aa7-496e-bb8e-126242858d32",
    "name" : "Gets policy assignments for the resource group. (text/json)",
    "request" : {
      "urlPath" : "/subscriptions/2l5o/resourceGroups/o_xC1NnYrz7TMN9JEiSppZ_.iv-sD%28-sL_PvJMKAZYdyJ_idiTEDWjsyHXk%29kyix0L3VnorLbVjRaeWU/providers/Microsoft.Authorization/policyAssignments",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "4ji5twkl8u3ptcroluavavocxaetx7uzgkjq86mfczxxgtjrgc6edqp7z0tgfez3qcb9w4u0nn61azaxrf223vwn10ewo0wl33law9q0lgz3w67gi0juzqyc8awmph15ahp6iujfn47ph9xmx10b6u7uprvduc"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Thomas Runolfsson\",\n    \"id\" : \"u13l\",\n    \"type\" : \"j5hp6ekfqfzfqsr2\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"l3uy\",\n      \"displayName\" : \"Dr. Sylvie Pollich\",\n      \"scope\" : \"42gy0stqidcmkxmap0jou70bhho5pc4o6u2iwzltk9gy3o86cp8f594xy3mgyemz2yvfg27m9nhcffmcv0fwruhis8fjyglxdx5yo94lp9nc9gwomt8wr5rnrgjqexaldsjlpdw13fqrcuyvcs8k9e67qvag5lpcrrtdqciatbm7synxzouiedhrzkkno9x1ry0zkkb5\"\n    }\n  }, {\n    \"name\" : \"Philomena Hauck III\",\n    \"id\" : \"ts2x\",\n    \"type\" : \"7cy8d5zwn3rd1wfhql8494ngktwbudyqcyhz3345y0y9c8ox23k3n29zg67jrpqhzpvwfjrzx05yhab7yhxa95a22hfmpa28y28pk1v73uo\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"546y\",\n      \"displayName\" : \"Rachael Fahey\",\n      \"scope\" : \"vtmxk1n9l4\"\n    }\n  }, {\n    \"name\" : \"Contessa Hoppe\",\n    \"id\" : \"rdk7\",\n    \"type\" : \"8vjc4k2g1flzqz5y7n5veh5t39djeulkkc9muqpc7ab7agze3womis9p52h1ofglk22pena9bb00nhx6dwcbid93ngdgiulaqceyb56torwdn8mvjrw8d0t2h26690vlw034h9gdzgbfx26qj9jgjczgfog2clnwjm6kwe9xokpklueti63oty\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"95pz\",\n      \"displayName\" : \"Wally Harris\",\n      \"scope\" : \"u5yy2r5gfntlt9p1hfpc4tpi20h5ca91ardizeqtqxv1xayhivrg66vcj03nmkoo4rvbvxxwpvh\"\n    }\n  }, {\n    \"name\" : \"Eloisa Jacobi\",\n    \"id\" : \"90tt\",\n    \"type\" : \"tmzof6i8u9bv5or4l47hxfivnnwb3be9wp033d13p1bmpiirqtn0as5z3g0\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"64h9\",\n      \"displayName\" : \"Barrett McKenzie\",\n      \"scope\" : \"36sbh1a4v3gtxg68r3krsw21tove7y2wczyewl4llo3yfqpcn95z2zvirp5yvscrf70ssy17ixdv59r22rbwm3y6hv53weshoccgz8252p0muub35tvk5z68fub66gfcvko3\"\n    }\n  }, {\n    \"name\" : \"Vonnie Goyette\",\n    \"id\" : \"kpch\",\n    \"type\" : \"p2g3cku3i56mgsuwn53fxv7ecjzevfl3sna537p28lopkbtjtyq1hu9umj2oc02bgau5ssew8qk6zwycodz3gperdh052y45ml25vd\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"cds3\",\n      \"displayName\" : \"Mrs. Gabriel Jones\",\n      \"scope\" : \"y1dk70cbqw9eb099r8dnjm5zyb499tbcris8shb9znnw7na8kz6kfxasofubxg7dcgydiqyiisuuonhwvi283yo5x8f89vu4hw4logl5m9iqwqpn0p\"\n    }\n  }, {\n    \"name\" : \"Ms. Eloy Adams\",\n    \"id\" : \"7kiu\",\n    \"type\" : \"owelm07685ibt6iebn87pewmc0b6wvd17seytea1zd75muwoboks\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"p997\",\n      \"displayName\" : \"Rodrigo Langosh\",\n      \"scope\" : \"fn8tfmpq67ns43f84re98flre0nvny0x8p8jm21vtr3gtrc24no8oe2ksghayg0p1gl75a2sbw8jnk8tmz0npsnzs1fm41c945u\"\n    }\n  }, {\n    \"name\" : \"Wade Hauck\",\n    \"id\" : \"23m7\",\n    \"type\" : \"v4n3f7x8w1oxjynvqjlux3wlw09b5exsp1q768al3n2o3lr9o35ik2wvg4vx5iqicxk99zfqv9z5845kg8iud9mr6hleogpsac2k5wrvg3l0b\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"u1k4\",\n      \"displayName\" : \"Mrs. Regena Wiza\",\n      \"scope\" : \"8pc59qppoze1d38zbph9airlr9nwryqh8dej904fd0ffo577qaj7tjrrqp2jzjaacgdhsuiiz3183r06fc5fkl9sjnu9k3xwzyqksv1axpr1shmrene53e5o3narm2npqro7j08v8ovok512hbn7m1ozx1f95jwywgljnxrdzry\"\n    }\n  }, {\n    \"name\" : \"Pei Ruecker\",\n    \"id\" : \"ghvf\",\n    \"type\" : \"k9oi6qzasm3g576fxj7le7vlbqst9aq310ysyusgshdhq4jepvhn9bmft69n3n3aqdmfo1629o2reydi\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"74r3\",\n      \"displayName\" : \"Danette Funk\",\n      \"scope\" : \"hpt201snfq2a2liy54hq6hqsi33rzwsfm9a5v8tkvn8r6s80xdkue248shwd611t4sjix755k9zjhb9j\"\n    }\n  } ],\n  \"nextLink\" : \"58ypdzbke81fk3l14chavdub3vhnrllkslvsec40xl\"\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "88370ce1-8aa7-496e-bb8e-126242858d32",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:29.956707Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_ListForResourceGroup",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "The URL to use for getting the next set of results."
              },
              "value" : {
                "type" : "array",
                "description" : "An array of policy assignments.",
                "items" : {
                  "$ref" : "#/components/schemas/PolicyAssignment"
                }
              }
            },
            "description" : "List of policy assignments."
          }
        }
      }
    }
  }, {
    "id" : "f97a96a9-f40c-4ce8-aef6-09a41b92024f",
    "name" : "Gets policy assignments for the resource group. (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/12t6/resourceGroups/rOWn9.XO4MUZ016-fKvpajt2ltyZWVvxXROe4_KItXP97qc8X4dAeM..a7lI/providers/Microsoft.Authorization/policyAssignments",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "t86c89z4xwfkiqlxc5tpqulro7quiboydhrahqesece217c1vmwpkkltlxetf186sj89py4g7t5e9tni2yw4u3g4nqtk6ogslx45c9zbcchcc0nna"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Josh Bauch\",\n    \"id\" : \"g3yk\",\n    \"type\" : \"2rvbuj7slvt0yx30byhremi3a85ww4d5af7bjhbmmupn17zkyitwxpkmr3jlc44rlikqxqzkydb7fa35p9zuv0347japshas9nt9k1ij542bmcrr010a4p7440cj0h50pnbnk005c9ws31zywxo0sekiyz1kn6jz20atpdawiqv\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"3si5\",\n      \"displayName\" : \"Janette Stoltenberg\",\n      \"scope\" : \"rovmh4i1o6evti9g1sv\"\n    }\n  }, {\n    \"name\" : \"Mirta Strosin II\",\n    \"id\" : \"b80w\",\n    \"type\" : \"cx23onq4teix1emmn8fll17ozcd9rlqc2zrbt2nzx4hrpzfq99fppm3bomsuvzva6yjo5o065zt7ljejsnhwl9ij7vm2on8vd27zfptcrsuot8y8v1cuft6c\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"7545\",\n      \"displayName\" : \"Tiffany Dickens\",\n      \"scope\" : \"hj5guwta22h7xry6x2g9wmvipjx2inrv5uh0k4g0bcn46eefs7gqc98tri23fmb5w5f\"\n    }\n  }, {\n    \"name\" : \"Cameron Bayer\",\n    \"id\" : \"0u06\",\n    \"type\" : \"ueh70abp9g63k061v9qa4d3fsoqqoqlycyukuqnswhfyy1raqqhrbb61tongkwderhh6vqjbt5kno4cua\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"adca\",\n      \"displayName\" : \"Ariana Parker MD\",\n      \"scope\" : \"sdf26lz48epgsvgjj59xj87fo1a4mibegeidvl97771onxi6zcjymfz6ytkyin29alk96vgjxrle9m77ob\"\n    }\n  }, {\n    \"name\" : \"Richard Kris\",\n    \"id\" : \"9343\",\n    \"type\" : \"0tpz459c02d8xrw8c5ug4kbfywmamx0unhbcrl6ckr3lfr4s4gs0sf67br10tjitg9j3pv\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"6gr1\",\n      \"displayName\" : \"Sumiko Brekke\",\n      \"scope\" : \"z8m2uqqhiynanp1n5g528yg7ewruxkakajts8qp2u4yicj16f8633dc6dushyvwo3ykxlgnk5boo8gyg0iramjtq0m9iljc6hwwentpe5efa2ca6cqgqlqne4th684mxk60k7fdd16s5jj3wj7b5v9yagjp2caypxbu5t4sn62luztg4yily60er4vw056snqoe6\"\n    }\n  }, {\n    \"name\" : \"Sol Bauch\",\n    \"id\" : \"5400\",\n    \"type\" : \"z4eveg5efn4nwlprcnb1umbvbyga0qyrtmguhrohah73sjqzu0fr42m29vp2apiggng\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"oh6c\",\n      \"displayName\" : \"Alexis Kutch\",\n      \"scope\" : \"f5p8rsftgl4tmz9g49srem5y83qnytdoum5fksqj9lmb67svpfrfcqo46clqah8c5f48kdqucp7kr0ql44qejxryu1ieslmhd0x2zmocw3g48cupa32huy10jp0asth3h6tm8tzctf1aktp5acjf36ai6o4ba\"\n    }\n  } ],\n  \"nextLink\" : \"xvt23l1jjnq11q5reh9jf0pm0u6xcuw57z6bnvr906otbtg0i1un6qia2w7d0ptrq3cjvlhjntt5103lhp2grt92rx8fy78g1e6y1vqkcx7ls9ze2c4adr9skw82mre79wm7jpeoulfhuz7z2sec3fanxyhbwviki330c46zqdddxx8dolnr74dgdntm\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f97a96a9-f40c-4ce8-aef6-09a41b92024f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:29.954632Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_ListForResourceGroup",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "The URL to use for getting the next set of results."
              },
              "value" : {
                "type" : "array",
                "description" : "An array of policy assignments.",
                "items" : {
                  "$ref" : "#/components/schemas/PolicyAssignment"
                }
              }
            },
            "description" : "List of policy assignments."
          }
        }
      }
    }
  }, {
    "id" : "b7196ae0-a9cc-464c-ab82-4f6485a47c19",
    "name" : "Deletes a policy definition. - 204",
    "request" : {
      "urlPath" : "/subscriptions/jggd/providers/Microsoft.Authorization/policydefinitions/Theodora+Maggio+MD",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "4i3s1f1l3q7wq3wm01trn2p8b22cql8w20sgrwnmv1dq66xnejj8wh9z19z4sz54h6o9z1y9ruqdzrkfim511as3e811gxvtggunnwmmq878fvunlhoq"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "b7196ae0-a9cc-464c-ab82-4f6485a47c19",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:29.953269Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyDefinitions_Delete"
        }
      }
    }
  }, {
    "id" : "73095564-bc86-431a-b47d-f275423dbbf3",
    "name" : "Deletes a policy definition. - 200",
    "request" : {
      "urlPath" : "/subscriptions/sf8a/providers/Microsoft.Authorization/policydefinitions/Jacalyn+Koelpin",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "cl8nlg75q15rpnlaqx3wj6ncymf4bp"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "73095564-bc86-431a-b47d-f275423dbbf3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:29.953133Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyDefinitions_Delete"
        }
      }
    }
  }, {
    "id" : "4acdcc98-c2c9-4804-898f-f33799ca3836",
    "name" : "Creates or updates a policy definition. (text/json)",
    "request" : {
      "urlPath" : "/subscriptions/6278/providers/Microsoft.Authorization/policydefinitions/Lillia+Hilll",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "vqp0takne45iyb45cp58gs6o6ssddn8y4zkh5ejmyo9l5pk64mtclhz3f5rtgw9"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"name\" : \"Carly Schimmel\",\n  \"id\" : \"8v6w\",\n  \"properties\" : {\n    \"policyRule\" : { },\n    \"displayName\" : \"Karoline Spinka\",\n    \"policyType\" : \"Custom\",\n    \"description\" : \"Quae culpa harum sit qui. Repudiandae veritatis labore dolorem voluptas. Quisquam facere explicabo eius.\"\n  }\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "4acdcc98-c2c9-4804-898f-f33799ca3836",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:29.952986Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyDefinitions_CreateOrUpdate",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy definition.",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy definition. If you do not specify a value for name, the value is inferred from the name value in the request URI."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyDefinitionProperties"
              }
            },
            "description" : "The policy definition."
          }
        }
      }
    }
  }, {
    "id" : "286604bc-8775-4066-a6fa-ff14d194922a",
    "name" : "Creates or updates a policy definition. (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/cn84/providers/Microsoft.Authorization/policydefinitions/Conrad+Gusikowski+DVM",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "25xnyx877tjq5y4xi8i4f1ykj0chgv4nt6fd29e9om9hw17hjpl8c1ta6jkbqsjzx9tq22eweq5x5220y3j71vxd4wbnjp9swebvc3t3tcp3987804mkco8xqlqfxme7x4whmgsgbdy2q06z8xugfbapcbuu3hqfett72ekshqjq15tyf6hxowx1xnyohle9j82xaw0"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"name\" : \"Terrance Reichert\",\n  \"id\" : \"59h2\",\n  \"properties\" : {\n    \"policyRule\" : { },\n    \"displayName\" : \"Parker Will\",\n    \"policyType\" : \"BuiltIn\",\n    \"description\" : \"Placeat laboriosam quidem non minima aut sed. Eum et reiciendis delectus odio aut. Nihil qui quo et. In deserunt repellat soluta quidem porro.\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "286604bc-8775-4066-a6fa-ff14d194922a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:29.952639Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyDefinitions_CreateOrUpdate",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy definition.",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy definition. If you do not specify a value for name, the value is inferred from the name value in the request URI."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyDefinitionProperties"
              }
            },
            "description" : "The policy definition."
          }
        }
      }
    }
  }, {
    "id" : "11f9ee37-b419-412c-9081-21674394c946",
    "name" : "Gets the policy definition. (text/json)",
    "request" : {
      "urlPath" : "/subscriptions/vnzb/providers/Microsoft.Authorization/policydefinitions/Cecily+Vandervort",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "6a4qpmylexa19zyhechf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Gennie Nikolaus\",\n  \"id\" : \"0186\",\n  \"properties\" : {\n    \"policyRule\" : { },\n    \"displayName\" : \"Loriann Durgan IV\",\n    \"policyType\" : \"NotSpecified\",\n    \"description\" : \"Et delectus ea et nisi. Facere doloribus consequuntur dolorum et. Ea error dolore ad aperiam.\"\n  }\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "11f9ee37-b419-412c-9081-21674394c946",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:29.952279Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyDefinitions_Get",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy definition.",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy definition. If you do not specify a value for name, the value is inferred from the name value in the request URI."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyDefinitionProperties"
              }
            },
            "description" : "The policy definition."
          }
        }
      }
    }
  }, {
    "id" : "24db299b-5bd7-40f4-a016-d5f1ecb39de0",
    "name" : "Gets the policy definition. (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/snrd/providers/Microsoft.Authorization/policydefinitions/Ms.+Steffanie+Powlowski",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "nzh48ym2v57f6nsu"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Rheba Senger\",\n  \"id\" : \"3x8r\",\n  \"properties\" : {\n    \"policyRule\" : { },\n    \"displayName\" : \"Michael Smitham\",\n    \"policyType\" : \"NotSpecified\",\n    \"description\" : \"Vitae aliquid ut iure et est rerum autem. Consequuntur harum delectus eos eum. Voluptatum omnis accusantium ut enim impedit doloribus harum. Iure qui labore. Adipisci autem omnis officiis neque ea rep\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "24db299b-5bd7-40f4-a016-d5f1ecb39de0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:29.951912Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyDefinitions_Get",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy definition.",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy definition. If you do not specify a value for name, the value is inferred from the name value in the request URI."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyDefinitionProperties"
              }
            },
            "description" : "The policy definition."
          }
        }
      }
    }
  }, {
    "id" : "ec4d5705-b088-4ad9-abd7-799fd9d33282",
    "name" : "Gets all the policy definitions for a subscription. (text/json)",
    "request" : {
      "urlPath" : "/subscriptions/04xj/providers/Microsoft.Authorization/policydefinitions",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "40rttommnnpuujplzy12gpzx4frhmpznniexumv298pne1pnb18cm08tomidesul4jqbqrozcd0aa2vjl062u0e982ld4gzxey8hard6ahlsj3duzc8734fkd7ph5y3l4rfhitmzjo0sxf0ccrxriph3ud9p8e"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Emmett O'Connell\",\n    \"id\" : \"31d6\",\n    \"properties\" : {\n      \"policyRule\" : { },\n      \"displayName\" : \"Terrell Gutmann\",\n      \"policyType\" : \"Custom\",\n      \"description\" : \"Delectus voluptas suscipit a voluptatem. Impedit odit magni quaerat. Ea consequatur sint.\"\n    }\n  }, {\n    \"name\" : \"Mrs. Wyatt Conroy\",\n    \"id\" : \"r23g\",\n    \"properties\" : {\n      \"policyRule\" : { },\n      \"displayName\" : \"Ignacio Boyle\",\n      \"policyType\" : \"NotSpecified\",\n      \"description\" : \"Ab officia cum aut eligendi. Omnis cum voluptatem delectus minus sequi sit. Corporis est et alias molestiae enim aut.\"\n    }\n  }, {\n    \"name\" : \"Dr. Dalila Stehr\",\n    \"id\" : \"1206\",\n    \"properties\" : {\n      \"policyRule\" : { },\n      \"displayName\" : \"Porfirio Schowalter\",\n      \"policyType\" : \"BuiltIn\",\n      \"description\" : \"Dignissimos minima sunt. Consequatur provident illo autem doloremque molestias sint. Molestiae aut maiores eos. In sequi labore ut.\"\n    }\n  }, {\n    \"name\" : \"Antione Shields III\",\n    \"id\" : \"8iap\",\n    \"properties\" : {\n      \"policyRule\" : { },\n      \"displayName\" : \"Bruno Kub V\",\n      \"policyType\" : \"BuiltIn\",\n      \"description\" : \"Est voluptates nam est iusto. Quia omnis voluptatem eos. Nostrum accusantium vitae.\"\n    }\n  }, {\n    \"name\" : \"Brant Kuvalis\",\n    \"id\" : \"03jk\",\n    \"properties\" : {\n      \"policyRule\" : { },\n      \"displayName\" : \"Clifford Parisian\",\n      \"policyType\" : \"BuiltIn\",\n      \"description\" : \"Vel quaerat ea corporis quam qui. Facilis aut vero dolor cumque deleniti voluptates. Incidunt recusandae accusantium quo tenetur nemo. Fuga velit repellendus pariatur eius adipisci qui quibusdam. Nost\"\n    }\n  }, {\n    \"name\" : \"Sage Green\",\n    \"id\" : \"e441\",\n    \"properties\" : {\n      \"policyRule\" : { },\n      \"displayName\" : \"Ola Reinger I\",\n      \"policyType\" : \"BuiltIn\",\n      \"description\" : \"Reprehenderit excepturi natus accusamus magni quis fugit repellat. Numquam blanditiis iusto tempore aut. Ipsam quam illum. Recusandae facilis est fugit et fuga modi eos.\"\n    }\n  } ],\n  \"nextLink\" : \"qm3nu4k9e738zcd7cart2fossdnmy32q22ukc1fgdcekr62xgqxb84tzgqgel1slij8k063u0mibapmxdggu2wb7r6gy9fbq2nhfdgmtve37s2i1zopr7twdjlmz24ouswaek73ny2vj4twa62v8hmpp\"\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "ec4d5705-b088-4ad9-abd7-799fd9d33282",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:29.951546Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyDefinitions_List",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "The URL to use for getting the next set of results."
              },
              "value" : {
                "type" : "array",
                "description" : "An array of policy definitions.",
                "items" : {
                  "$ref" : "#/components/schemas/PolicyDefinition"
                }
              }
            },
            "description" : "List of policy definitions."
          }
        }
      }
    }
  }, {
    "id" : "2830997f-cc18-4c4c-af38-399b0c8d26a0",
    "name" : "Gets all the policy definitions for a subscription. (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/x4f0/providers/Microsoft.Authorization/policydefinitions",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "4mwcleq2zjx2jaj7zbxfz8fiqowbbudagdm529rin5qu60jc5kwns6zypjliobysnznxcecff20xeuqe2g2o4sdhqf68d2pwkka1bv8wuj0xosu2wh6z7jgp49mwm"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Sherice Streich\",\n    \"id\" : \"40n0\",\n    \"properties\" : {\n      \"policyRule\" : { },\n      \"displayName\" : \"Cleo Adams\",\n      \"policyType\" : \"Custom\",\n      \"description\" : \"Quia architecto ab voluptates et possimus dolores. Ut culpa voluptatum qui deleniti veritatis. Cupiditate itaque earum iste accusamus itaque fugiat necessitatibus.\"\n    }\n  }, {\n    \"name\" : \"Joan Reilly\",\n    \"id\" : \"2z61\",\n    \"properties\" : {\n      \"policyRule\" : { },\n      \"displayName\" : \"Kathyrn Lesch\",\n      \"policyType\" : \"BuiltIn\",\n      \"description\" : \"Enim facilis incidunt nisi laborum. Voluptas quos voluptas et aut. Sed illo magnam. Quod sit autem et sed pariatur.\"\n    }\n  }, {\n    \"name\" : \"Herta Lakin PhD\",\n    \"id\" : \"2821\",\n    \"properties\" : {\n      \"policyRule\" : { },\n      \"displayName\" : \"Ms. Julian Schinner\",\n      \"policyType\" : \"NotSpecified\",\n      \"description\" : \"Sequi sunt eum iure reprehenderit dolores quam non. Quos dignissimos maiores molestiae quasi. Quas delectus accusantium et omnis esse nobis. Amet non eum. Qui illo necessitatibus et nihil illum et et.\"\n    }\n  }, {\n    \"name\" : \"Saran Walsh Jr.\",\n    \"id\" : \"fetu\",\n    \"properties\" : {\n      \"policyRule\" : { },\n      \"displayName\" : \"Elicia Hodkiewicz\",\n      \"policyType\" : \"BuiltIn\",\n      \"description\" : \"Unde saepe omnis molestiae omnis veritatis eveniet velit. Atque quaerat nulla ad eos. Sed at esse atque unde. Et quas laudantium temporibus exercitationem aut et id.\"\n    }\n  }, {\n    \"name\" : \"Rogelio Goyette\",\n    \"id\" : \"tomf\",\n    \"properties\" : {\n      \"policyRule\" : { },\n      \"displayName\" : \"Percy Nader\",\n      \"policyType\" : \"NotSpecified\",\n      \"description\" : \"Molestiae ut temporibus. Consequatur praesentium recusandae enim accusantium saepe. Hic quos voluptatem eveniet. Qui qui occaecati cumque voluptas.\"\n    }\n  } ],\n  \"nextLink\" : \"8ct8vsnx0odzrrikyfbef15wlmsrxuczswpeey0fyt1lpho3dhv8fhhnp56h2ngcbiqgwir5sriov5qzun9c49uq3kbq2othb1vrhr658k1sdwft90miu4nj13c666odnx5hxtcdhjkl6md9zcq2wei7j30a18tq7l7d7p4unbekjayvien\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2830997f-cc18-4c4c-af38-399b0c8d26a0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:29.950228Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyDefinitions_List",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "The URL to use for getting the next set of results."
              },
              "value" : {
                "type" : "array",
                "description" : "An array of policy definitions.",
                "items" : {
                  "$ref" : "#/components/schemas/PolicyDefinition"
                }
              }
            },
            "description" : "List of policy definitions."
          }
        }
      }
    }
  }, {
    "id" : "1d990568-caeb-42cf-8113-f1cb28fbf6e7",
    "name" : "Gets all the policy assignments for a subscription. (text/json)",
    "request" : {
      "urlPath" : "/subscriptions/1u2v/providers/Microsoft.Authorization/policyassignments",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "iyv07bladi8i5ahi93b1kzmrcd96k3uw6k5"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Margurite Grady\",\n    \"id\" : \"6qsi\",\n    \"type\" : \"0hfomi46t3vy81pg69clfal79mt3ct0x3o6y71ztbgv09z7tog3ydfhcczzxpixl4siszip6znjfbgwylig8lwpjrlztdbs8ve5bo8lea1dpdnlbpgr2vxaavzyubhnwn4oh00zyzceq9yggxgvh\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"4v52\",\n      \"displayName\" : \"Mr. Berry Langworth\",\n      \"scope\" : \"6aof34t3s\"\n    }\n  } ],\n  \"nextLink\" : \"xndsiyyl44019bo4vul6ywabfhumj9ruq9c1exs90w9dtfl91dx6l5w8zef6s3fk22b1cw8xsczykxiu0irjfrev0u6x25kpd4t9c05g81gbh5l8glyittk88toh8vyx8la4qsdz07i4t17uma2i7l2qmrz07kdg93auxo2u93tyss068tof9bw629mam59xix\"\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "1d990568-caeb-42cf-8113-f1cb28fbf6e7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:29.949062Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_List",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "The URL to use for getting the next set of results."
              },
              "value" : {
                "type" : "array",
                "description" : "An array of policy assignments.",
                "items" : {
                  "$ref" : "#/components/schemas/PolicyAssignment"
                }
              }
            },
            "description" : "List of policy assignments."
          }
        }
      }
    }
  }, {
    "id" : "e27f79f9-a49e-4a68-95e6-45bb2a19f9a0",
    "name" : "Gets all the policy assignments for a subscription. (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/2y98/providers/Microsoft.Authorization/policyassignments",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "8lmmhue0scrg80i6id9dfxai13m2xle53c6rprep5mn5njisk6vw6a6i4bn2kx4io3kpvmiw6x9psp7wexljf77ywbnrc2tg0vieua277udcz51dlv2r0zujmyk9wygn30ipifdn4ozipf3lt0eu9zyozx5cov7dl27mw6ka9t0fd3ewmn51ldxmh0q0p8fbiwm53ej"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Dr. Deshawn Kozey\",\n    \"id\" : \"3i4f\",\n    \"type\" : \"v1f107vvmgi5q58bj2yakezmsmthg3ur3n0uwffvejm68mbs58tnpmw8zlecc38cs75jtj8ubt6ho0id1exyynum4wmjspamdodhzwasm6fphc7dgg3vu478i059o7vyjg1fi1fhzelqhlqm6ie7p7iof5rytdfvap99yz1s1x7g3k592\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"gc66\",\n      \"displayName\" : \"Patricia Armstrong\",\n      \"scope\" : \"jpywkjszktf24tmz90mey0oj6hykr031tkq5m3w\"\n    }\n  } ],\n  \"nextLink\" : \"sdnk0xlnr18kvbk5kzuql3qecrrqm5k8ceos63bcm7xnuahtscq5yoy0q4jhc6qnbssfc41jpohha6yoccv2a6elv10v6h7ynejq6pyokux7iqr9jm87zf4muxggjumupuo84tump25ycm4938vuj\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e27f79f9-a49e-4a68-95e6-45bb2a19f9a0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:29.948621Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyAssignments_List",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "The URL to use for getting the next set of results."
              },
              "value" : {
                "type" : "array",
                "description" : "An array of policy assignments.",
                "items" : {
                  "$ref" : "#/components/schemas/PolicyAssignment"
                }
              }
            },
            "description" : "List of policy assignments."
          }
        }
      }
    }
  } ]
}