{
  "mappings" : [ {
    "id" : "8e36f9da-5f70-3b8a-be24-fca25d29b555",
    "name" : "Deletes a policy assignment. (text/json)",
    "request" : {
      "urlPath" : "/offiufugwqnx4a7w8t7rb0xikx32aau8pjucxqrcz1d5pk971tjk4qcbxap34p3tnn/providers/Microsoft.Authorization/policyassignments/Todd+Maggio",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "ryhxbtj4"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Marcelle Predovic V\",\n  \"id\" : \"kbgj\",\n  \"type\" : \"shcwk2it3cp8n0wqg7hc7lumdyikjoo7lrje4jn8q9gyatwuwc0kynsmsmgvyn45tve7ykz6rtg0z3lnpgxcbe0cpzdliwm6opqcpqfx10zqawliaddvgegk8ipxlbya1dbh8cefpj61bxmhr2baw62urtpwojohgc4tl0wmxp41hav\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"mv4a\",\n    \"displayName\" : \"Tommye Johnson\",\n    \"scope\" : \"aboi79u56pzixj4b0vd6h1ehq88l8dkbg7bi5t06d8qa9o9icuwf0e5nyi2vcvlckujafspf3jvrn7uem9ebffd0fmv34yf7vrfuitxcthmouvv2bc274yieqj1qcroq86ola941ayytvbokdohmcxtb62xjgmf\"\n  }\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "8e36f9da-5f70-3b8a-be24-fca25d29b555",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PolicyAssignments_Delete",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "c324a318-bf16-3ea6-8c81-78214240305f",
    "name" : "Deletes a policy assignment. (application/json)",
    "request" : {
      "urlPath" : "/yej77grv1aa72vkyt2v251d02uv3gxyc8uyjhj5d425n5x70j7hgiiznzv7pk263uwfnpkr2o5zs7u7xufjrjoz7jkwl5ge8c4ne4ny7p6w4kewczbhz0mb5qju6gk2wex/providers/Microsoft.Authorization/policyassignments/Carey+Durgan",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "8l7tzw4d8xqr7l5xyt756c6bl3bf0wmuj47juco6tn5zgmi88dnyxmyfwovyijkecuxkjaqk7t85k3e24j4dwdr6b5lfdvk0qk"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Trenton Connelly\",\n  \"id\" : \"07e4\",\n  \"type\" : \"rjvaoy4elnn1nwodcet8sria4ce5sctf9srq64mjc48wirs5a5v221ocz6pxo86agl7sdh9e1nu737qzwyzd4p5lnurn89ex1vb4qlp6xrlxzru0sxd0ly9pnz435ge4i9801rm8qkx3um3v0b5gqrn57ix4ixyn1319l\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"p3w1\",\n    \"displayName\" : \"Julieann Macejkovic\",\n    \"scope\" : \"xc1odircyect3570xci87usk25w1gxk7dq8r0lfdoa5s2d0rggwzc1hv\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c324a318-bf16-3ea6-8c81-78214240305f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PolicyAssignments_Delete",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "1dd3ca59-392f-3391-9a9f-34105bebef7a",
    "name" : "Creates a policy assignment. (text/json)",
    "request" : {
      "urlPath" : "/zr501e1u0nc6q0aopdblf3qrs7p23ofss1trzq8tqzgdtoltncej2kqqw2ch47438flod5mwyz8mukh37silsxkirwiqusgm97n3nuszqg0voqmyh2ka0m45adlvaxzj6ohsb8vir9wiobwjaenvnbxu7cr9mn50mveyahouxrd32jqgwvsbl0hxf54gie1/providers/Microsoft.Authorization/policyassignments/Marlene+Jast",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "lxbbhs9eyteiozy4r4za5sigh2kzyvuz81rt0pw"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"name\" : \"Grover Ondricka DVM\",\n  \"id\" : \"3d2b\",\n  \"type\" : \"oq0gug096vxjytdjdafw35qvmp0n5mqocc7brzya4s6kct2byhiwpq1d3u8au0bhmsrnao8tpyuddoku3asr1y6qyubmkz674o0u6l5m7y\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"48bp\",\n    \"displayName\" : \"Blondell Streich II\",\n    \"scope\" : \"licu4r1cix\"\n  }\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "1dd3ca59-392f-3391-9a9f-34105bebef7a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PolicyAssignments_Create",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "a45f1fc7-48dd-346b-bc96-3c65d829dc81",
    "name" : "Creates a policy assignment. (application/json)",
    "request" : {
      "urlPath" : "/d3jzivyfiorzljgq74eajdh6n1ttf039b0jrjuf02jlkvrvn53kd436cxan1vbh0he052gqb3dlwnaxgge8viykaui1ydk1n70kcb5ol5mubfd3v1eel7irgyfdvkvdokzxpehoo73r8u1o27fyz5/providers/Microsoft.Authorization/policyassignments/Corey+Adams",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "b73xmmuqie5cliujfttexbaik0pt3jqqzmlbggjp43oc5k970mu4h24qf30fghjhykih9qzo1l3p9b0ju0n4yg2osbclcy9b8vdoz961vxp1adnktrl3o9e7f1hefclr2ii3b9fyh9b1js6giezs85q240rgwqoamu6rge7ma14o5l8lj"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"name\" : \"Lane Doyle\",\n  \"id\" : \"x71u\",\n  \"type\" : \"q9cncj3vruz0h75xl01gdpcj4lr1av3odovzt5dw8daf11jz45kv76pujzcclwfcohfe9peafelkpmmvl564mqm82w4nuxlkkanaw6lhvpzp0lodgcacyq9x0mowd3doogkq69s9wue48fao5agy6xg8dzbpuevwc3xj2dddqh\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"kv1c\",\n    \"displayName\" : \"Dannie Bogan PhD\",\n    \"scope\" : \"shqkdssh2v4tqpshsjc6frs4rt400jonh5d8biv9hbo9idixp71\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a45f1fc7-48dd-346b-bc96-3c65d829dc81",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PolicyAssignments_Create",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "09328b00-bf61-33f8-991d-2f5e088b39c0",
    "name" : "Gets a policy assignment. (text/json)",
    "request" : {
      "urlPath" : "/9bhdmn131iy9/providers/Microsoft.Authorization/policyassignments/Leonardo+O%27Keefe+DDS",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "20rbdkg4kn5h2790femk40nsnflrabzu7ifimk3qbda8200ol83dpf1xdy7md3gezqbjgn5fxmlc4tz9vnc41a04pf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Dr. Jacque Osinski\",\n  \"id\" : \"gx80\",\n  \"type\" : \"mo1h0jhsieq9ryktl7c92os5nr7hu67gi4pzx6oqap3ehs534jb6b4148zlxuedjpacofo8f50njcn9lvdmfvlhrem4nlgfox0sydlierjb3gqy2igy5t4cbm6le49x\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"6s36\",\n    \"displayName\" : \"Errol Pfeffer\",\n    \"scope\" : \"yxjp2z7q76pqrjko03xwlscx1zrrptdubzd2wvage0vp8qkyk77c66mj3zq794sry75il3fro5gg05v7rfles2naqalruxodr8h2wjut1py5chpc7m6uqvokmbkdltll3mn6yjm5u\"\n  }\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "09328b00-bf61-33f8-991d-2f5e088b39c0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PolicyAssignments_Get",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "d7268499-ce62-33e3-a3d0-a1dd9b12a1ca",
    "name" : "Gets a policy assignment. (application/json)",
    "request" : {
      "urlPath" : "/l3itah0zfwcwd3d734k0sjq8ccj1c6r5fnp2joji1de4dzvjyl2029vf1gzgptu67oj1gdbab5knvluqkb5q0yru89kfp80k92wpzddrg4yfz6xr43pws033l2sdqcrazughf24epxg9hutbgc6k0e384khgjiy4f4nuw/providers/Microsoft.Authorization/policyassignments/Kiyoko+West+PhD",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "lerkd6knxcij8jy7sm224ndot3or2yntmbemvc0gs5izwyxmiy6gam3oeb362po5uhxq55qzz0od592d916lyulcxlp35paw2ildg529ojcrnnxo76wkcq7hvf80kvw4hcitffr2hoawrxn326xmtfkehwfhi6na9el1acdhfiy5o"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Barrett Tremblay IV\",\n  \"id\" : \"p9w9\",\n  \"type\" : \"sv1wo5koaxugpevyzcljhll5d5swxocd15k9x4si8uy1llbtxzb9i0x78oh5d7b8izx88w9h9oaouqmni9hqpxc12qt7jiihnadxj1gzqbi9ice4l\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"t2rm\",\n    \"displayName\" : \"Landon VonRueden IV\",\n    \"scope\" : \"r85e7sduz4inll48o3mlfxv6hpnw28gzcacjc5jpv468853y0g5597s09mjbf6eq07f33wp2k8jvzvryhaqqcgkdnuy16h8dvrmmec41g8ch20gavt4xw8j2jfr9j5mepv59h675o1roufbklq5d9xgo0z8gq\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d7268499-ce62-33e3-a3d0-a1dd9b12a1ca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PolicyAssignments_Get",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "e2f06355-51c6-3ac8-ba69-c75b333e3f61",
    "name" : "Deletes a policy assignment by ID. (text/json)",
    "request" : {
      "urlPath" : "/xp09",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "m5i46n20supjfdinjdpqgy88z2dsoy9cupls88xd1cwrqwek3e9xrhu2etf2va4uj026xg8snhpcl2w0xo0rgsjf1hl9cwp9hd4a2rr83xx1usm3vlq07j9g8abowz108s8u7oez2onzf94tdmkpnrdljgujvn7pwlp4gghvqmj80mc55s"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Mariela Johnston Sr.\",\n  \"id\" : \"l43j\",\n  \"type\" : \"puefl31qtzhantrwr1pqkbep14rmjzy6w5i47xcno49yeahbim8rbc8znb2l13unfwemg2y8cqg6plbgvdee6on8n6dwhbrgf1yookbpa3rgzvh2yo2k7ov0jhuevn65qfbiu7r0olkbxgyjfmck8s3y14k7ygzm2ysdnwufw\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"ttg2\",\n    \"displayName\" : \"Remona Hansen PhD\",\n    \"scope\" : \"bzontj556wmavjsblu3cqtaucb6i0vepofjriphk9fvdlzfibqawj6r6ftqlte1xc8n44huykb73d5vky2hsf6rbf4vqe4jm7i5grjxyn1xj0dsla7q8ql8kdu7vz74dtxrpjex5hwx3lol6v4r01seuicsi1n352x7hlisy\"\n  }\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "e2f06355-51c6-3ac8-ba69-c75b333e3f61",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PolicyAssignments_DeleteById",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "4624d22f-ec0e-3d5d-b66c-98c7b2035d6b",
    "name" : "Deletes a policy assignment by ID. (application/json)",
    "request" : {
      "urlPath" : "/472f",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "jsglhfvs4g2siya9m19lj7hqgp0gfplg5gx8vwdkp74a1rde"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Ciara Volkman\",\n  \"id\" : \"6ikv\",\n  \"type\" : \"2rwaph4o4nbwxawcefahh38nt71l7x645omfn6l7k3a4w5y5k1h8spse1426brtcog0evqq39tiga0uladns6kj5l42mbkft1xvcshslp8csivovig413wpiho23cyahnr21zf7fihazlm4ai9iqwpqn1e55aa82po9s8cu7ejy\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"p2bo\",\n    \"displayName\" : \"Myles Reinger\",\n    \"scope\" : \"p4m2rbcjx37i044qta4d3jzbw1o0ssjl4ld10cv72c1wo5z6xx56h00koapukfmxzkh5i9s2x7rzlr9n0sizlyi73oo9sdiwqrg225kq68sisdzcux7vh\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4624d22f-ec0e-3d5d-b66c-98c7b2035d6b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PolicyAssignments_DeleteById",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "b3fb67da-c069-3a4d-868f-16563b3a8e38",
    "name" : "Creates a policy assignment by ID. (text/json)",
    "request" : {
      "urlPath" : "/78wz",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "x6slrrw4p2ll9twio9xdyromxo8itagsu0ojq1duqe95oyfnvw5abl5flf5ubpjzdwpm7ouvn5sezpx1gjpkehmporb6stnk0b2a4wtf4c79jis3qbmuelgg1drxg85ves06tkfml6our5qdp7fmsbj43k08u81tbch35i"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"name\" : \"Laree Bailey\",\n  \"id\" : \"11z4\",\n  \"type\" : \"1f9a1pwz9clvsw7ynwy8sx0z9g7eab9gt23k5l4y3r9yddfw0jh40k40rlyhs3dr4a1eyt9qn7sd97h1t5490awtvyly7tn\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"n9x8\",\n    \"displayName\" : \"Miss Janyce Hettinger\",\n    \"scope\" : \"dqrn250pdqiqgbgr9n20han0110a908usuph4g6\"\n  }\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "b3fb67da-c069-3a4d-868f-16563b3a8e38",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PolicyAssignments_CreateById",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "b78a3263-92b0-38c6-b5fe-ea69e52f2491",
    "name" : "Creates a policy assignment by ID. (application/json)",
    "request" : {
      "urlPath" : "/h739",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "iltswemwfrz20utzjmmrpztgi172fv4mudnc53rhs5r9yn68oyog2ywzzfi27bkhc2murcdqhde4ubbt95h12s4qdpqrdfr9tbfzm0tlyajt9l5xb6e5at229bxhawpepadtf8eefdudupn1mf62xpuu8xx5gl5hcp7ddpuybmjsmvio2y03zl"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"name\" : \"Tia Johnson\",\n  \"id\" : \"1508\",\n  \"type\" : \"v7epmb6gw1wnd4ui4ofocuxrm9tigkiwxfkzkr9m7b6zphoiyezq3i391s5xiv6qbdnvh8uhn7p66z0bcd158tsemzpojpujn4qlrtocnzm7geh50biv2dvd2f8hf62frie5cebf0oxsj2xspoi9nsmyg0r25aafyhq3tw7bs99z2kzyc6w\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"7024\",\n    \"displayName\" : \"Mr. Freddy Monahan\",\n    \"scope\" : \"i530qtozcxu2fzfi87ik4eg5nmn29co6hr7h9sns4ue03763c1huvlrglq1c1ig4buhq5r\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b78a3263-92b0-38c6-b5fe-ea69e52f2491",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PolicyAssignments_CreateById",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "51f45061-8d4e-3b80-b2d8-946bd00287ad",
    "name" : "Gets a policy assignment by ID. (text/json)",
    "request" : {
      "urlPath" : "/lz90",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "kgdfcgru97f6m1akpgnkg3gicqt7jhjsxxhpf7rod81tzf63v7j098ilnhg94tzjlrp1kob0pb6qqrwvq57ba"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Marlena Kozey\",\n  \"id\" : \"zm3l\",\n  \"type\" : \"g3tf4fploif7kkmbh25p9uzqo5gd21mecjk6p3wpe34uqf79p2n87msw5iiobd4qdjoixwgh7182532xs8w5jtr8jylu4g9u88blqmohv1735aav3w8w1vtuty178blitdvk3pdqdqhp2r41a0l8a4hi81a23f1knr5v8lynasqj02nlxlq6lg4xg\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"9920\",\n    \"displayName\" : \"Carylon VonRueden\",\n    \"scope\" : \"c41nbxuaoknz206bohs9kjxcsj9ujbv3ye26nefo0ftbadkvwtl92th4mql2585fsdxxjyrjx7gsqunh9gcn5gj061rgea63uh3m3tb4q1a8krutoaipnlljlzmc\"\n  }\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "51f45061-8d4e-3b80-b2d8-946bd00287ad",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PolicyAssignments_GetById",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "493b5a65-61c1-363e-8199-d4cb23dab07f",
    "name" : "Gets a policy assignment by ID. (application/json)",
    "request" : {
      "urlPath" : "/29sd",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "4ha37ig3ybuflsoj04jfg0juvsot5nug4g1e779szfnraatnyclpz"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Dr. Philip O'Conner\",\n  \"id\" : \"or9c\",\n  \"type\" : \"8jekfmxoio4ox7thl8srxebdeb7i6qc1qwpiukokyrtwuefwyd72scycs59ku5o8becberykyauteipp8wjmrco97i6czc8e3cu4kyywa2vmhcxirlxwhvactm56dm1vvpw3k1zzqj1rabo0k88y3xkphxmjjgjvx3x\",\n  \"properties\" : {\n    \"policyDefinitionId\" : \"dn15\",\n    \"displayName\" : \"Zachary Leannon\",\n    \"scope\" : \"zru2c773a4petsgum1rc4d59d2wnjmsdu1wqj5mv4chzeldb4ka73wlg1e3lrggdj9d33xfgqihvtpcneiimhmo5m7hfrn0hmf5c5fdvwblcjg6sgwqj646al9013f0hpu8i73p3h64jneak7e4fr7ky\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "493b5a65-61c1-363e-8199-d4cb23dab07f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PolicyAssignments_GetById",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy assignment."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy assignment."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyAssignmentProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy assignment."
              }
            },
            "description" : "The policy assignment."
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "2c02d571-ad3a-3a5f-818b-77556377b754",
    "name" : "Gets policy assignments for a resource. (text/json)",
    "request" : {
      "urlPath" : "/subscriptions/2v12/resourcegroups/gZiJLlwX0Rb-KxCdCRdOzshKRA5gBnJHB%283cbh4Gf1peETQmU0dwr1DiE3h87/providers/3vdiwre55o815ax17sgo2bxnwnrfxkqn3ny3gmw3ewo7qmj67qwvatvs9o20hskexcyso80/gvi31liapvcv87aded7s6bjagx1fu5ircozy4y6fhfaeha7larmuy1b7deqrsczpd857pii5g5lcsxra9n3g/gkb23mq7i3s9571hb4sbgk3c3d671dytlzy6rmwlstywj5l668smdr21s79bksf7nanxlhiakw88k6hfca0f5qz7kwen0wn7aonl11a2a85ss3trhexud5o5hzhy/Helene+Rath/providers/Microsoft.Authorization/policyassignments",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "raap3c6t70aolozkgy5cm87ti3kjk37x4wmhd051yh1boig4zifarm6gvhljxaliq0rythl"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Odell Koepp\",\n    \"id\" : \"xa2p\",\n    \"type\" : \"90gisme9xg3rvr3zojwu6r7cru2zduly6rctusicnz79r754po23tynvepkixlvdkbzy6tugn8tz13wghjthn1d9scej2y1iv\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"q123\",\n      \"displayName\" : \"Connie Welch\",\n      \"scope\" : \"whyp420wrt5pzxwj4jpicijq492fjt9gr1p05myffz49y6iyzibeyep71ebibw474h76un2jush1p9f3z5kf98oxrs9otn0k339wgn8iocoaf\"\n    }\n  }, {\n    \"name\" : \"Vanetta Kuvalis Jr.\",\n    \"id\" : \"09u2\",\n    \"type\" : \"5tcf17f7ak92hez9u52ce\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"iy6b\",\n      \"displayName\" : \"Ms. Rudy Zulauf\",\n      \"scope\" : \"fvv\"\n    }\n  }, {\n    \"name\" : \"Mrs. Helene Langosh\",\n    \"id\" : \"9tr9\",\n    \"type\" : \"qbo4nk08j9k41k84veyobm3t106cj0wpsp7qe8ozepzm3yfr7zn2m9lutj922q3jru21xe9z4hc943y1bg3b63temjlog4sm8kolb2tt\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"72qe\",\n      \"displayName\" : \"Irvin Dicki\",\n      \"scope\" : \"ib0h62lywlf1pm5n4zdyygwy9njshregc2944f91\"\n    }\n  }, {\n    \"name\" : \"Darrel Schroeder\",\n    \"id\" : \"91l8\",\n    \"type\" : \"dv50i5xk1jujz6z8o3atvzv5560lonj73can3ogzocq3uyzi3txdxp6266y98tcq87pyafesibgs77xkuyfnztqofqhfhexf234\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"6p37\",\n      \"displayName\" : \"Estrella Hilll\",\n      \"scope\" : \"9ocht4rl0f1c2ez6y21mvvxl533jk7y7iir93jw8f00rn1pls0z4g05fzoqgo4bh2kkqeqgty6h3qlxanigx66\"\n    }\n  }, {\n    \"name\" : \"Angella Becker II\",\n    \"id\" : \"lqw9\",\n    \"type\" : \"45uw1b\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"9mk0\",\n      \"displayName\" : \"Bennett Marquardt\",\n      \"scope\" : \"v43tbe6hawge7qrqia2uvd707r3tawsy8a6p3m3yav5ncy26lzs9ql70d328fcez9wfpm8q2v20euegelrgjrye9tr2ffxhjefsi5oy5k7dphig94xnzy4dz52qcun00v1679kknfp8jatjlk2dqsefun7pi9s7jzc646m0cyc9lg8tdlsnbv9pmsohfje8c7n2\"\n    }\n  }, {\n    \"name\" : \"Son Berge Sr.\",\n    \"id\" : \"xf01\",\n    \"type\" : \"k06jnbuzfegufypisyrux6mwtybm03y4f57lqci8wx5in7gxmgjns6f5use7cmrnygn6m8eybu\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"49jw\",\n      \"displayName\" : \"Mr. Billy Green\",\n      \"scope\" : \"nbedd60c280ng966bxb0rk78azcgp7g9lboafxzc66\"\n    }\n  }, {\n    \"name\" : \"Jesus Towne\",\n    \"id\" : \"u94n\",\n    \"type\" : \"zl78wlm1dqmgo7cw91vq02n1eac01nssqs9gk2czfq62epttv5swtdhnomwehvtllvfgvhjr238l1ngzkroj49beax5\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"3an0\",\n      \"displayName\" : \"Hershel Fritsch\",\n      \"scope\" : \"9c7f0gqsb7fcwdik2vwjyoj60lurebdf1wfwvrrd19tp8cecfr8k2x9s2zjwdh1gshkn47w06sdsryr0xq3mcxq25h\"\n    }\n  } ],\n  \"nextLink\" : \"mv2rzlior81ibj085amhuoi8x7t\"\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "2c02d571-ad3a-3a5f-818b-77556377b754",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PolicyAssignments_ListForResource",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "The URL to use for getting the next set of results."
              },
              "value" : {
                "type" : "array",
                "description" : "An array of policy assignments.",
                "items" : {
                  "$ref" : "#/components/schemas/PolicyAssignment"
                }
              }
            },
            "description" : "List of policy assignments."
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "d01446df-9e72-3e6a-982d-26c87d29c42d",
    "name" : "Gets policy assignments for a resource. (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/8o6o/resourcegroups/h689eSKiHl/providers/orqkd1igxjf38fqq56aw3xdrofpxfflk9or1oq6g4v4jvgaxwz1l5fxgdap7lyd2r2sjpt27gbjgx76zh8995vmx1y7hjtkut3dtr/epzfkq9u95smiq245fud/turux4f0lwfshz8f5cbpkrnnkqhltt4qchwh2u1cit2onxbn36puq4tbf20cyeij6ap5uutuvlqq4vyiv0mvclvc0023cyipw6qb7afy1e7jhtgg4ukbys28gbf7g7b8idz77s4kot5bszten5sr0oepfwr84j69/Doyle+Mitchell/providers/Microsoft.Authorization/policyassignments",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "yanv"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Laverna Barrows\",\n    \"id\" : \"i5cm\",\n    \"type\" : \"mdg7szmz1r6zia7vmu2wucv8gkuspmlgawkzemj83gl8qyg31ipjcg5unefcsomsgi\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"xpa1\",\n      \"displayName\" : \"Syreeta Heathcote\",\n      \"scope\" : \"jogiuc8nbh3v0scd4xbddaler9mcxbujvcdm0w0ma9e0kgfmwyxbs3s5oqszhw354b8ndrgvz0375ff2ojy0swuddfq7sen0qzs1pksyhpnortk9moys2ep0mqpfy2i4a26dm0wfuu9g2fyjs9moq163\"\n    }\n  }, {\n    \"name\" : \"Arlie Bartell\",\n    \"id\" : \"1550\",\n    \"type\" : \"byh3hk5yo3uaea0fmku2w3cc080mycoalqy5jak856vodcq54tvc3l9rl7a66kx4ws8fz20xsmasrwyx5fjo1nxcnsjjb5ht1ybjl61yq1figikxydqcvgcuefsjleqhf7fnl9ca29t2cv9pflo3a\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"lg0q\",\n      \"displayName\" : \"Melvin Ledner\",\n      \"scope\" : \"pt4m0pyjcmmhdw6c1u1j9uf7s5ebqe6b1rw9idga6x0unqdmnzgvl3azwf26omwfyf4wsgwlnzgnfxgutjn93h22kbirqopna1h7wyock0hlhzu68kkpof3qqr2j83n11prh0mnrtdsw\"\n    }\n  }, {\n    \"name\" : \"Ashleigh Johns\",\n    \"id\" : \"vw04\",\n    \"type\" : \"u22fuxd2dbnfhsyt9n7auj3i2msat6ze88nkqn3ba5yciw09u02009vz39m6oob0xslwboiwrxjcgd8ik0k2vs66zcmb2xjueafp7yme145nbv6lrws056cvgo31ep8zxdmcecn43m1p2ue1cjfhshlaws77q14b0yqhyr9\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"93u1\",\n      \"displayName\" : \"Kimbra Marks\",\n      \"scope\" : \"wjkirfiyprlks4w93onkanma65vm84k42uatzaqjxw9uhkrlqnk81tsoqmxmwzk6om46s3fqpjfjcj0dq5kw1xkivbn2kfa\"\n    }\n  }, {\n    \"name\" : \"Mrs. Natasha Ernser\",\n    \"id\" : \"9789\",\n    \"type\" : \"mm9g4cv1bgj6p038nirvpqxnk7rwt0t7djtoh598r9sk27atwh2ca4umtyv0s924txysnqbo6v0z5by8c66fpmqj3x\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"8452\",\n      \"displayName\" : \"Mrs. Caroline McLaughlin\",\n      \"scope\" : \"rmj8yxhzh4gkmpt5ky2dsv7xtw4bra1dmuiej1e6cmw74uzt23g6fxqu0pzza0u19kn706k2foiin\"\n    }\n  } ],\n  \"nextLink\" : \"wi9zcmzs0ca9e3cygir0pdft8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d01446df-9e72-3e6a-982d-26c87d29c42d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PolicyAssignments_ListForResource",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "The URL to use for getting the next set of results."
              },
              "value" : {
                "type" : "array",
                "description" : "An array of policy assignments.",
                "items" : {
                  "$ref" : "#/components/schemas/PolicyAssignment"
                }
              }
            },
            "description" : "List of policy assignments."
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "7fdad01c-af2c-38f0-b337-c8af6eb617bb",
    "name" : "Gets policy assignments for the resource group. (text/json)",
    "request" : {
      "urlPath" : "/subscriptions/c339/resourceGroups/m4Hxb1/providers/Microsoft.Authorization/policyAssignments",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "1nw48mhpxkebyuouh8ry66z1kobvt5kw2na46s21mw7enzsgho60evclbs4gl5wnvua5zxdjo42n"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Monroe Yundt\",\n    \"id\" : \"wx0w\",\n    \"type\" : \"u5thq8etb4d32xgp1pvsc0vq8afiu2h3psugdnbabhl1z50l4scv4atfgf1hqhsx6oghekrm0cbu2sswoqt\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"0n2p\",\n      \"displayName\" : \"Yetta Schiller\",\n      \"scope\" : \"so7ziui9ee8kboip76loolzv4a41lsnxkw6lid150obalpuv84ynsqcn7npnil4h3omfiy1bmuskko2fpf945087pyhfys9js3d4dpu3ozdzualvw7eubwjo844isie9c95cbtf4d1zbxrl9v0itn9fcp7ifleyob6xg1f1onca6o62abj7yv5vovp\"\n    }\n  }, {\n    \"name\" : \"Junior Hudson\",\n    \"id\" : \"4cx6\",\n    \"type\" : \"c1w3y9lu5m8oznkl91giw7pir5dso1wfip6tnt9n0a5hau5aamk0ydea7aeovl6ro155b2snvivrux37ztvz15wgv2z19x1a80hg2fqfhrbhipiw2qhzhg0znhjr0rnzz3y6w00aw8126fgef4ew\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"e1o0\",\n      \"displayName\" : \"Kennith Bednar\",\n      \"scope\" : \"aqk4qttghuffgxzpuvwv6fwy\"\n    }\n  } ],\n  \"nextLink\" : \"qosnkcru2oto5ayxamxuhyyj69emgx7ctte74adaziyql4697av1w47svjlj2it65yotole19tpz2if2rdgx94pbwfdanm2zdbwn27vopge43590uxrp7ylfw6sehi69r70soavqbfxlgx7lrain6yiokbbotgrroayrqsm\"\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "7fdad01c-af2c-38f0-b337-c8af6eb617bb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PolicyAssignments_ListForResourceGroup",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "The URL to use for getting the next set of results."
              },
              "value" : {
                "type" : "array",
                "description" : "An array of policy assignments.",
                "items" : {
                  "$ref" : "#/components/schemas/PolicyAssignment"
                }
              }
            },
            "description" : "List of policy assignments."
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "008b2735-2770-3e14-b3ed-a29f45e1351b",
    "name" : "Gets policy assignments for the resource group. (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/jq5f/resourceGroups/aNqpzgfXDXDDQZgClC_9Q2qav0YP_2fU%28fSp0DM-iURJukuiL_M3ejd3dTEP06EGYMRAgwJKknvjgRu2D/providers/Microsoft.Authorization/policyAssignments",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "8416adtu8a12mmrvp1mbxmq1xifmtx4m57x4i668azvfhccs7lqh13tkrepdtikf7aikszrxqxnpfp057mlayjzg7drxy3gyn3f4sviy51kag8in7dab3akbq55ox9d3tne6mwvq7ijt9pqdz7njzx0u7r700r6ko2992m86fnwvctkhmj2mk44kbwows9"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Earl Ernser DVM\",\n    \"id\" : \"v409\",\n    \"type\" : \"ch52syazcphownmpznncgzh0kmnm33f6drp3cg9ls41qedtuumg6k8s1tgliwgj4kp3zdv1z75fcy99x9do61jlpbhdwr5b1kg70pkpap4dz24qh3xsop\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"12gd\",\n      \"displayName\" : \"Dalton Farrell\",\n      \"scope\" : \"cfod1o2l8kjtjhece3uetj3vpalllrgeneqzni8e4m4y9ozkkqsc315nv023uz4tcb7ibh0d8ema2drbq9o8s3v524hd8fs4oxy9zyxgs93v5uu4lfw8994fbwivd9tn3xpt1en97zhme1\"\n    }\n  }, {\n    \"name\" : \"Jefferey Reynolds\",\n    \"id\" : \"9mbu\",\n    \"type\" : \"r2upjltn3h9gs0cgicv4kidzg6cs1n3rp38ti0ygx3jcjpdvfs3nsgvpszerzksz3jis8vivcgyuwbi1uhou141myl3ayvhh8uwcogk0r0ew1puynm7g50sgwxfr509jq\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"2ltl\",\n      \"displayName\" : \"Karlene Kozey\",\n      \"scope\" : \"pbleztysyb2dwj4vngbli8v7cfylbe7ywjy269k81k9been\"\n    }\n  }, {\n    \"name\" : \"Jessika Leannon\",\n    \"id\" : \"4q2g\",\n    \"type\" : \"fomfjqmplmw0koquv6viqcgl9foee9416myc2xby4phcp\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"w35k\",\n      \"displayName\" : \"Giovanni Beer\",\n      \"scope\" : \"1kgayt37r30amdd0\"\n    }\n  }, {\n    \"name\" : \"Echo Weber II\",\n    \"id\" : \"atvk\",\n    \"type\" : \"mxtmmn8hcn1rm2qmqk24qy84trj5kn60drsf68coq559edcr3p3mw0hrzunhhigmotwxkjsc96dohhavimyfntrdopm03a3j3twv5vlhyg4l0\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"3o6p\",\n      \"displayName\" : \"Candy Carroll MD\",\n      \"scope\" : \"6duxgx1ri\"\n    }\n  }, {\n    \"name\" : \"Ozzie Greenholt\",\n    \"id\" : \"096k\",\n    \"type\" : \"7i4e1ckcxzcn9mv0mkh1mm53g56poz4e10\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"h0bm\",\n      \"displayName\" : \"Belen Barrows PhD\",\n      \"scope\" : \"gsoo938svwnpfwub6khzgigh4z5w4qxko67yqu0qhyq6eryuac\"\n    }\n  }, {\n    \"name\" : \"Stanton Weber\",\n    \"id\" : \"bxlr\",\n    \"type\" : \"gxf0st89hepkdbvzke6sup1l3hnba35wrzcnl7p3pw6f08txxsvdqcdx5uvfg8j3\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"5176\",\n      \"displayName\" : \"Mr. Camille Wisoky\",\n      \"scope\" : \"716p78jmg2iy4fof4vrav8oj72bdri0ztde5gx5wyykw5iqokzsd9ps4lt0i02e3v8ovg00ht8qhi4tohdwcn7nnesvimjnt988k2l0idmnz25uxkc1ky18r2l7r5yk6jy64f04q222l5mkfmeq2m7octeo2h6lmgu3s6qhy01\"\n    }\n  } ],\n  \"nextLink\" : \"56kqvema6d2srgf6ookptjvxq7tkyxw5w8y9itia92hc7rn5sd3pzuplkjzt0ld2lbbbdhvcaaooc01c2snhyt73lj04oly0jgczfzr2d78f1cqfo7iu0ge53z4h8ylcaawyljpefv42ovbmm593k6sd2gufuw0jyxwf7t127x917x\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "008b2735-2770-3e14-b3ed-a29f45e1351b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PolicyAssignments_ListForResourceGroup",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "The URL to use for getting the next set of results."
              },
              "value" : {
                "type" : "array",
                "description" : "An array of policy assignments.",
                "items" : {
                  "$ref" : "#/components/schemas/PolicyAssignment"
                }
              }
            },
            "description" : "List of policy assignments."
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "adac4655-cc88-3ba8-a2c4-30e897882329",
    "name" : "Deletes a policy definition. - 204",
    "request" : {
      "urlPath" : "/subscriptions/3clv/providers/Microsoft.Authorization/policydefinitions/Waneta+Moore+IV",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "l0htoof8yr9l7yifxiyxr4p2zylrtbslgp9x5byqrhtdik0c07xh"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "adac4655-cc88-3ba8-a2c4-30e897882329",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PolicyDefinitions_Delete"
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "1165e2dc-da27-377e-a30b-a0edeb20dce0",
    "name" : "Deletes a policy definition. - 200",
    "request" : {
      "urlPath" : "/subscriptions/7zg4/providers/Microsoft.Authorization/policydefinitions/Cecil+Brekke",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "lv6q7c7o4q4hmw492rqhczkxkct1gbtwnl4a00wjown928lb9hywee4zeq8hvjktjcq9bycdq8c1pwapk7gdyoqvqyw32xpipihcee7o1gaut1vgzl5ed8slc7a0hcklyuh2muubqz6kc49sm4d63hwhztpfohh7p4qrn8chvucuok2ym"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "1165e2dc-da27-377e-a30b-a0edeb20dce0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PolicyDefinitions_Delete"
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "c5437892-0188-353f-8d3c-47a21060a656",
    "name" : "Creates or updates a policy definition. (text/json)",
    "request" : {
      "urlPath" : "/subscriptions/0qt6/providers/Microsoft.Authorization/policydefinitions/Edison+West",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "r6hl"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"name\" : \"Torie Thiel\",\n  \"id\" : \"5hg2\",\n  \"properties\" : {\n    \"policyRule\" : { },\n    \"displayName\" : \"Casey Tillman Sr.\",\n    \"policyType\" : \"NotSpecified\",\n    \"description\" : \"Alias facere magnam voluptatem molestias voluptatum. Impedit quis ea. Aut ex culpa qui et omnis velit optio. Dolore ut qui voluptas suscipit veritatis vel sed.\"\n  }\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "c5437892-0188-353f-8d3c-47a21060a656",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PolicyDefinitions_CreateOrUpdate",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy definition.",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy definition. If you do not specify a value for name, the value is inferred from the name value in the request URI."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyDefinitionProperties"
              }
            },
            "description" : "The policy definition."
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "bead90ff-8b11-3f4f-87e7-74db9f876470",
    "name" : "Creates or updates a policy definition. (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/1bw6/providers/Microsoft.Authorization/policydefinitions/Lydia+Emard",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "8dzzxpq0w79vm1nkyg5wysa886628uh2h72ytx08beah8m7jy2kpqt7b40k91vrp59td7v0fyijb9x3zfm5v2gvgv65z3gh7s"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"name\" : \"Rosalina Emard\",\n  \"id\" : \"757f\",\n  \"properties\" : {\n    \"policyRule\" : { },\n    \"displayName\" : \"Miss Wilfred Schulist\",\n    \"policyType\" : \"Custom\",\n    \"description\" : \"Deleniti non ut ipsa eveniet omnis sit laboriosam. Voluptatum natus est voluptas et. Cupiditate enim eum dolor accusantium occaecati. Architecto voluptatum molestiae non iure sed.\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bead90ff-8b11-3f4f-87e7-74db9f876470",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PolicyDefinitions_CreateOrUpdate",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy definition.",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy definition. If you do not specify a value for name, the value is inferred from the name value in the request URI."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyDefinitionProperties"
              }
            },
            "description" : "The policy definition."
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "4d34d1e1-3402-3876-bc5f-c88120fb92e7",
    "name" : "Gets the policy definition. (text/json)",
    "request" : {
      "urlPath" : "/subscriptions/9wsg/providers/Microsoft.Authorization/policydefinitions/Miss+Jazmin+Nader",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "gowih4f9mcf7uf4rw4en16fvm4hoaznowr0jr8twdy5ki0vdmqyk7jszed6xz4kfguqcs92be4px6jay2ied5tyc5lm3rdnol31c0efsl63u6e"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Emmett Bruen IV\",\n  \"id\" : \"iy5u\",\n  \"properties\" : {\n    \"policyRule\" : { },\n    \"displayName\" : \"Barney Koelpin\",\n    \"policyType\" : \"BuiltIn\",\n    \"description\" : \"Assumenda nobis dignissimos. Sunt harum ipsam ullam sed cumque qui. Perspiciatis officia et dignissimos voluptatibus ut.\"\n  }\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "4d34d1e1-3402-3876-bc5f-c88120fb92e7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PolicyDefinitions_Get",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy definition.",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy definition. If you do not specify a value for name, the value is inferred from the name value in the request URI."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyDefinitionProperties"
              }
            },
            "description" : "The policy definition."
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "7ed41b88-5c01-3a4c-93ab-261ea982d8a9",
    "name" : "Gets the policy definition. (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/53r7/providers/Microsoft.Authorization/policydefinitions/Marjory+Aufderhar",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "jaunp1s893mk509q5xaeraarnbsg3qn387sdgk4z7widwsb9wez7jqlt0ydiwllbj0mmd9kfw2kaze"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Britt Jacobi\",\n  \"id\" : \"7qji\",\n  \"properties\" : {\n    \"policyRule\" : { },\n    \"displayName\" : \"Tiffiny Lind\",\n    \"policyType\" : \"NotSpecified\",\n    \"description\" : \"Esse pariatur quos aut ipsam est. Quos et eos. Soluta non sed nesciunt autem autem autem dolorum. Iste possimus eos doloremque sit.\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7ed41b88-5c01-3a4c-93ab-261ea982d8a9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PolicyDefinitions_Get",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy definition.",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy definition. If you do not specify a value for name, the value is inferred from the name value in the request URI."
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyDefinitionProperties"
              }
            },
            "description" : "The policy definition."
          }
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "bf860273-97b4-3968-b973-2d9e72104761",
    "name" : "Gets all the policy definitions for a subscription. (text/json)",
    "request" : {
      "urlPath" : "/subscriptions/ny72/providers/Microsoft.Authorization/policydefinitions",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "4exaeazjb9iaduw0rsvzt9hp1mg6oysb9rklceaukeajjlt7xaxsl6903"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Kasey Grant DVM\",\n    \"id\" : \"z01w\",\n    \"properties\" : {\n      \"policyRule\" : { },\n      \"displayName\" : \"Gudrun Runte\",\n      \"policyType\" : \"Custom\",\n      \"description\" : \"Ad enim consequatur non et ut. Facere fugit quis recusandae ea. Corporis molestias id illo. Dolorum magni exercitationem explicabo rerum. Et qui consequatur deleniti consectetur.\"\n    }\n  }, {\n    \"name\" : \"Woodrow Spencer MD\",\n    \"id\" : \"vjsf\",\n    \"properties\" : {\n      \"policyRule\" : { },\n      \"displayName\" : \"Miss Richie Harvey\",\n      \"policyType\" : \"BuiltIn\",\n      \"description\" : \"Minima ut sunt harum perferendis facere. Est corrupti qui sint recusandae. Dolor voluptas nobis alias et ut dolorem. Voluptatem vel nulla. Sit ipsum ex saepe quas rerum dolor officiis.\"\n    }\n  } ],\n  \"nextLink\" : \"fqbz99k9ry4b6l9ekod3p2utse1dnuz2u2l5wfmen8hpfghz1swoi8n6h601fwr7eo3bhx19f86we1edlgmnigf5mchsq5m6r0p0msjvm85037s9wtxx9blffmxeedoqglmuk8\"\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "bf860273-97b4-3968-b973-2d9e72104761",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PolicyDefinitions_List",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "The URL to use for getting the next set of results."
              },
              "value" : {
                "type" : "array",
                "description" : "An array of policy definitions.",
                "items" : {
                  "$ref" : "#/components/schemas/PolicyDefinition"
                }
              }
            },
            "description" : "List of policy definitions."
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "1a387aaf-e742-32c7-b1ce-cac27f34f620",
    "name" : "Gets all the policy definitions for a subscription. (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/9ydp/providers/Microsoft.Authorization/policydefinitions",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "zqxxxdhb1fmhkdmf6gehwzovc2ci011ogs2ljbd46zkd50ppbmhplfwpirfc6q6odzdjz7adjuai51a1t806yvvhj8fs1"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Ms. Jeff Paucek\",\n    \"id\" : \"0t68\",\n    \"properties\" : {\n      \"policyRule\" : { },\n      \"displayName\" : \"Mrs. Cary Hane\",\n      \"policyType\" : \"BuiltIn\",\n      \"description\" : \"Nam libero iste quo omnis sit. Optio eum voluptate voluptatem eligendi eos esse. Sequi debitis repellat molestiae fugiat ut optio quo.\"\n    }\n  }, {\n    \"name\" : \"Armand Bechtelar MD\",\n    \"id\" : \"w03v\",\n    \"properties\" : {\n      \"policyRule\" : { },\n      \"displayName\" : \"Refugio Stamm\",\n      \"policyType\" : \"Custom\",\n      \"description\" : \"Ea et tempora. Eum repellat saepe ut. Rem aliquid quos minus ducimus non.\"\n    }\n  }, {\n    \"name\" : \"Gino Berge\",\n    \"id\" : \"938j\",\n    \"properties\" : {\n      \"policyRule\" : { },\n      \"displayName\" : \"Mikel McGlynn\",\n      \"policyType\" : \"BuiltIn\",\n      \"description\" : \"Voluptatem ipsa minus dignissimos autem sed nisi fugit. Ducimus nostrum accusamus rerum consequatur quia soluta. Sed alias eos ipsum natus tempora omnis et. Dignissimos amet inventore ea ut neque. Mol\"\n    }\n  }, {\n    \"name\" : \"Felice Feeney\",\n    \"id\" : \"56ta\",\n    \"properties\" : {\n      \"policyRule\" : { },\n      \"displayName\" : \"Ambrose Bashirian\",\n      \"policyType\" : \"NotSpecified\",\n      \"description\" : \"Iusto ut incidunt ab omnis possimus aliquid. Consequuntur tenetur sunt hic expedita incidunt. Deserunt ratione voluptas aliquid sequi. Neque ipsum ab at sint alias.\"\n    }\n  }, {\n    \"name\" : \"Filomena Tillman\",\n    \"id\" : \"5rj9\",\n    \"properties\" : {\n      \"policyRule\" : { },\n      \"displayName\" : \"Leatha O'Keefe DVM\",\n      \"policyType\" : \"Custom\",\n      \"description\" : \"Nihil iure sed magni quia sit. Dolores expedita et laboriosam libero pariatur dolorem. Magnam tempore non. Sequi amet quisquam fugit sunt dolores.\"\n    }\n  } ],\n  \"nextLink\" : \"jwwfbhhpfdzvtamidc2r33ej8unbb2htj7urxtru4vdqhu\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1a387aaf-e742-32c7-b1ce-cac27f34f620",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PolicyDefinitions_List",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "The URL to use for getting the next set of results."
              },
              "value" : {
                "type" : "array",
                "description" : "An array of policy definitions.",
                "items" : {
                  "$ref" : "#/components/schemas/PolicyDefinition"
                }
              }
            },
            "description" : "List of policy definitions."
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "3f8fbca4-3c14-32a6-aa21-e43115805625",
    "name" : "Gets all the policy assignments for a subscription. (text/json)",
    "request" : {
      "urlPath" : "/subscriptions/pxb1/providers/Microsoft.Authorization/policyassignments",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "efmfhmh6tauyx5mr1141qujuh6xmyadnzs6zkmfsiycmp1zk"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Sonny Hackett IV\",\n    \"id\" : \"9tw0\",\n    \"type\" : \"zakpet0d8eeidvqz9ebx8g3mvu90ya85ekgm8ch8vz3j3lmnz0xhacqqypj\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"mgs2\",\n      \"displayName\" : \"Mafalda Steuber\",\n      \"scope\" : \"0d91y8e5ll4towekt2jm7pbwqq1n\"\n    }\n  }, {\n    \"name\" : \"Robt Huel\",\n    \"id\" : \"v5ki\",\n    \"type\" : \"3l52njy6wdc3g7pg5cd8jm6oledl2zsr89apwnzoi2hjimoqo5\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"ou1p\",\n      \"displayName\" : \"Barney Williamson DVM\",\n      \"scope\" : \"ks934e6xx42vop06slr2xozimxber1x4sjzupm55ih0777iniubedzclsg6ebj7hd3e3xct8ykk9ix0wzvudeufky9d\"\n    }\n  }, {\n    \"name\" : \"Mrs. Kris Prosacco\",\n    \"id\" : \"pv00\",\n    \"type\" : \"tz9l85d0bj2313bl1aphlbkcy1cwjzjjktrs2x8ycx7g8hgc1yyo98ehzpgycm2uqvhkh4tvmr1sfvhvqqeg9mk6f6elhba2wnfrv3h6twseks255eraquns2onsou4rphhj74j3tl8w9a27ysq13mi5z4jszv35auqd6w87t1tsh4hfw98j3vxor5ixw7k1\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"xpo9\",\n      \"displayName\" : \"Clifford Beatty\",\n      \"scope\" : \"2cjg734afm7kuki85jpj0h1n6xv9y270ys5rsxble0rpyeh3rd16kyhdzyc0ndfdfcz7e6abj\"\n    }\n  }, {\n    \"name\" : \"Wilber Leffler\",\n    \"id\" : \"5ubl\",\n    \"type\" : \"lh75xqw3r7cz6ht1tfak7701pwslv04n045cujuvqgi9wr8qczwil9ye3ewn4j14gyl1naoljwa6rgpd2jr3hil6xdt0prhy4un8rvtpnjdxe12ef4wfzp7ejxvucpwhr45jnrjqc9qji9rrnklne0ui52582laoy0lcia\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"cqez\",\n      \"displayName\" : \"Ivonne Rolfson\",\n      \"scope\" : \"f24cm08zpgiqrirxenjxmv5z4gcuhjkgjyo9mdgkp2mmcvpx21y2gwdn5a0chyflt7iiduc04s\"\n    }\n  }, {\n    \"name\" : \"Miss Vaughn Nikolaus\",\n    \"id\" : \"p5u4\",\n    \"type\" : \"4i7aomlcuabmqaf93jtx0jh27hnfnwv1zmt5c1yjy0tmsbheqfi9sqevm\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"3o14\",\n      \"displayName\" : \"Palmer Rau\",\n      \"scope\" : \"6ndyu5u0bf1hghtl7s7k3slswcwes8fkr2cpaxqtqu5r38y803smx547368927qc1fcb751fag11g9tyvn0hmuneu2s3nfngfeuwdz528jzi70kidb59xaqw0k1a4ahhl4x4wpkj3lfsv5ydlo0i4wl\"\n    }\n  } ],\n  \"nextLink\" : \"4hkcv4tw3x4ks3qc2p4cujgida8t0tuz7sg61a1px4udlbc8sfiza2rbklxm43l4gjte7zo3yblced5euw2wsbzc4iak8syx\"\n}",
      "headers" : {
        "Content-Type" : "text/json"
      }
    },
    "uuid" : "3f8fbca4-3c14-32a6-aa21-e43115805625",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PolicyAssignments_List",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "The URL to use for getting the next set of results."
              },
              "value" : {
                "type" : "array",
                "description" : "An array of policy assignments.",
                "items" : {
                  "$ref" : "#/components/schemas/PolicyAssignment"
                }
              }
            },
            "description" : "List of policy assignments."
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "df138329-db90-3e72-a11a-8885c85adb60",
    "name" : "Gets all the policy assignments for a subscription. (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/1e8m/providers/Microsoft.Authorization/policyassignments",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "34bb3autrp19nap0lkcv2qlql16kwyst7t4b5gsut4mjixy0odwzonkwomq0biqwqj"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Renita Ondricka\",\n    \"id\" : \"s7b7\",\n    \"type\" : \"uuzfzlm8l4xpaxxm8aa1x3xww63i4672vt7hdt8tv1gmr1p56zlppy1t9tjdaishz1yw43bbkgfweosyszljgpkabhx4gup11rkfg7zutp5t0bl2zvtxng2lg99zyj2xmigkqedjq5grscc7rnjdwmckym7\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"tk5s\",\n      \"displayName\" : \"Mrs. Jewell Wyman\",\n      \"scope\" : \"qpgqkixojrt34c8nx49\"\n    }\n  }, {\n    \"name\" : \"Ezra Schmeler IV\",\n    \"id\" : \"50lr\",\n    \"type\" : \"e1ksc9zszgmfjzqyutfrmnwcz65otc9ad8n0om0fl87agtftxzu5i6nl13u76adxdmzoxklg8g5e3suf25v06nrfehmy4rcnx62c0y6c1abkosqk\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"07q2\",\n      \"displayName\" : \"Ramon Morar\",\n      \"scope\" : \"d29muado9i95zddzjozokibuhcf80isd190m6slugaah8qhrvth2vqrm8zd2w5qkwehzjq5d8i6vgr2xtwbqnnw5ihnwdyb6yfwwysdhgaoma9hxhosinew4e57y3eol8v5mn9d6lnxz4soze9\"\n    }\n  }, {\n    \"name\" : \"Trenton Herzog\",\n    \"id\" : \"29t7\",\n    \"type\" : \"1by2pc413mlpk6fum4iz0mom024w2q4r17re426w78mwxowliri2ezypd5dxi2g3bx36rrwbuz8geu6fnk48uld57vxqt7g9jv3rcgihk5n6mo4af4f5ixv2a8f3kv3ax9vdsn82qwejj38yw6klqd657uwwm10t\",\n    \"properties\" : {\n      \"policyDefinitionId\" : \"4ay5\",\n      \"displayName\" : \"Edmond O'Kon\",\n      \"scope\" : \"ek1pnh6zc2xezhooumn1z002kcmfwwri75op25uo3ofb4g47i45kq61w789fskg6qpiv9y2j8vljuit6tjbb3pmug191vbwpvgmcp9vhx91bni98xzy6fm1le9j09w0o2lkfqlpuhb92pui2h05qd5z113rc78o6jm5\"\n    }\n  } ],\n  \"nextLink\" : \"gnc8pni6rdxfnamobfkf1fqj\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "df138329-db90-3e72-a11a-8885c85adb60",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PolicyAssignments_List",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "The URL to use for getting the next set of results."
              },
              "value" : {
                "type" : "array",
                "description" : "An array of policy assignments.",
                "items" : {
                  "$ref" : "#/components/schemas/PolicyAssignment"
                }
              }
            },
            "description" : "List of policy assignments."
          }
        }
      }
    },
    "insertionIndex" : 25
  } ]
}