{
  "mappings" : [ {
    "id" : "a3c52b2c-a700-44a3-a927-ce13cb79c304",
    "name" : "Execute a webhook",
    "request" : {
      "urlPath" : "/webhook/webhooks/r26j/x/93bd",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a3c52b2c-a700-44a3-a927-ce13cb79c304",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.361767Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksShortExecute",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "a5432234-876e-4574-8b35-3cff6b1f26a7",
    "name" : "Execute a webhook",
    "request" : {
      "urlPath" : "/webhook/webhooks/74bu/x/7814",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a5432234-876e-4574-8b35-3cff6b1f26a7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.361542Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksShortExecute",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "fcf4cde4-4186-40e6-84d6-3e18c8031d31",
    "name" : "Execute a webhook",
    "request" : {
      "urlPath" : "/webhook/webhooks/8wi9/x/l96y",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fcf4cde4-4186-40e6-84d6-3e18c8031d31",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.361298Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksShortExecute",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "b5311da3-65b9-4ca0-9b14-7ce61f4be0a8",
    "name" : "Execute a webhook",
    "request" : {
      "urlPath" : "/webhook/webhooks/q53x/x/4y01",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b5311da3-65b9-4ca0-9b14-7ce61f4be0a8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.36109Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksShortExecute",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "4c19a8a9-8951-4bfa-b03a-03e9e6a7360b",
    "name" : "Execute a webhook",
    "request" : {
      "urlPath" : "/webhook/webhooks/d4za/x/5383",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4c19a8a9-8951-4bfa-b03a-03e9e6a7360b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.360883Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksShortExecute",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "9c841c18-fa5f-4a45-b786-5043952160a7",
    "name" : "Execute a webhook",
    "request" : {
      "urlPath" : "/webhook/webhooks/d670/x/lj22",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"request_id\" : \"c6af9ac6-7b61-11e6-9a41-93e8deadbeef\",\n  \"status\" : \"OK\",\n  \"timestamp\" : \"2021-10-01T08:26:28.039Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9c841c18-fa5f-4a45-b786-5043952160a7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.360634Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksShortExecute",
          "schema" : {
            "properties" : {
              "request_id" : {
                "description" : "UUID of the request received",
                "example" : "c6af9ac6-7b61-11e6-9a41-93e8deadbeef",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              },
              "timestamp" : {
                "description" : "ISO Datetime webhook event was received",
                "example" : "2021-10-01T08:26:28.039Z",
                "type" : "string"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "ExecuteWebhookResponse"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "c1ebd04f-0e0c-4513-9934-0915713f939e",
    "name" : "Execute a webhook",
    "request" : {
      "urlPath" : "/webhook/webhooks/19g2/execute/r59w",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c1ebd04f-0e0c-4513-9934-0915713f939e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.360427Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksExecute",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "1731850a-abf1-4007-aa32-048f56d05373",
    "name" : "Execute a webhook",
    "request" : {
      "urlPath" : "/webhook/webhooks/2243/execute/tp9o",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1731850a-abf1-4007-aa32-048f56d05373",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.360217Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksExecute",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "b380b870-1e9e-4e6c-911c-b7a0ffbd79f7",
    "name" : "Execute a webhook",
    "request" : {
      "urlPath" : "/webhook/webhooks/0e2x/execute/y375",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b380b870-1e9e-4e6c-911c-b7a0ffbd79f7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.359963Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksExecute",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "39883464-8376-48c5-8948-166a57888156",
    "name" : "Execute a webhook",
    "request" : {
      "urlPath" : "/webhook/webhooks/tvb5/execute/69o2",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "39883464-8376-48c5-8948-166a57888156",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.359745Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksExecute",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "dcbe1ab8-d906-4cfe-be22-90bf4b10669d",
    "name" : "Execute a webhook",
    "request" : {
      "urlPath" : "/webhook/webhooks/mul5/execute/47ys",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dcbe1ab8-d906-4cfe-be22-90bf4b10669d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.359459Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksExecute",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "4eda5a13-9988-407f-bc45-a5b1ee185b26",
    "name" : "Execute a webhook",
    "request" : {
      "urlPath" : "/webhook/webhooks/79o0/execute/65c4",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"request_id\" : \"c6af9ac6-7b61-11e6-9a41-93e8deadbeef\",\n  \"status\" : \"OK\",\n  \"timestamp\" : \"2021-10-01T08:26:28.039Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4eda5a13-9988-407f-bc45-a5b1ee185b26",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.359231Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksExecute",
          "schema" : {
            "properties" : {
              "request_id" : {
                "description" : "UUID of the request received",
                "example" : "c6af9ac6-7b61-11e6-9a41-93e8deadbeef",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              },
              "timestamp" : {
                "description" : "ISO Datetime webhook event was received",
                "example" : "2021-10-01T08:26:28.039Z",
                "type" : "string"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "ExecuteWebhookResponse"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "06fb0a11-72bd-4422-8f45-cae8b9240726",
    "name" : "Update webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks/3sy2",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "06fb0a11-72bd-4422-8f45-cae8b9240726",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.358999Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "119ffb57-783a-4700-b508-5facad3baa0e",
    "name" : "Update webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks/45iz",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "119ffb57-783a-4700-b508-5facad3baa0e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.358857Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "2d939f3f-ad9f-4b14-b988-cf6e26ed7186",
    "name" : "Update webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks/78be",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2d939f3f-ad9f-4b14-b988-cf6e26ed7186",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.358685Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "2d2ae0c0-3ad5-4204-bce6-8809e019ee6f",
    "name" : "Update webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks/4ep0",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2d2ae0c0-3ad5-4204-bce6-8809e019ee6f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.358539Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "efe79574-748c-4edc-8605-88b5dfbb3d89",
    "name" : "Update webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks/22s8",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "efe79574-748c-4edc-8605-88b5dfbb3d89",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.358394Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "8e71f8d7-f48c-4b39-ad4f-88e69cc93336",
    "name" : "Update webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks/y0t5",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"execute_base_url\" : \"https://unify.apideck.com/webhook/webhooks/1234/execute\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"A description\",\n    \"id\" : \"1234\",\n    \"disabled_reason\" : \"retry_limit\",\n    \"delivery_url\" : \"https://example.com/my/webhook/endpoint\",\n    \"events\" : [ \"vault.connection.created\", \"vault.connection.updated\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"enabled\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8e71f8d7-f48c-4b39-ad4f-88e69cc93336",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.358221Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Webhook"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateWebhookResponse"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "16daccf7-e635-4d97-a5e4-a56bea2c6184",
    "name" : "Get webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks/7yw9",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "16daccf7-e635-4d97-a5e4-a56bea2c6184",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.358052Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "d150f7a5-8b83-4760-b82b-2bd09b9c7e0b",
    "name" : "Get webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks/p58s",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d150f7a5-8b83-4760-b82b-2bd09b9c7e0b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.357906Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "cf92fda1-fa9e-42bb-a7d1-cf6b153e1c2a",
    "name" : "Get webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks/5az5",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cf92fda1-fa9e-42bb-a7d1-cf6b153e1c2a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.357734Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "5c7b70be-5992-481a-b9d5-6cfbffd3c733",
    "name" : "Get webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks/72cp",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5c7b70be-5992-481a-b9d5-6cfbffd3c733",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.357589Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "055b0d2d-8be7-4bea-9e87-5c9bb7f02074",
    "name" : "Get webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks/kzqz",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "055b0d2d-8be7-4bea-9e87-5c9bb7f02074",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.357444Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "660f5d55-6a23-4613-a92e-d61c4addee2b",
    "name" : "Get webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks/y14j",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"execute_base_url\" : \"https://unify.apideck.com/webhook/webhooks/1234/execute\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"A description\",\n    \"id\" : \"1234\",\n    \"disabled_reason\" : \"retry_limit\",\n    \"delivery_url\" : \"https://example.com/my/webhook/endpoint\",\n    \"events\" : [ \"vault.connection.created\", \"vault.connection.updated\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"enabled\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "660f5d55-6a23-4613-a92e-d61c4addee2b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.357275Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Webhook"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetWebhookResponse",
            "x-graphql-type-name" : "Webhook"
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "406702fe-c2f7-4d69-a8a3-e681b38199ea",
    "name" : "Delete webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks/5na5",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "406702fe-c2f7-4d69-a8a3-e681b38199ea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.35711Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "f35f3ccd-9ca2-410d-b20f-b62cba69f940",
    "name" : "Delete webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks/h0k1",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f35f3ccd-9ca2-410d-b20f-b62cba69f940",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.356965Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "7e9cec8b-6dee-4465-95f6-750c8f7875ef",
    "name" : "Delete webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks/1wz1",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7e9cec8b-6dee-4465-95f6-750c8f7875ef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.356795Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "a7de0239-b094-4a0b-b05a-380cca4223e1",
    "name" : "Delete webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks/tx8v",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a7de0239-b094-4a0b-b05a-380cca4223e1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.356652Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "c0b6b1bf-09c8-43da-b911-9d2220b45123",
    "name" : "Delete webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks/32lh",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c0b6b1bf-09c8-43da-b911-9d2220b45123",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.35651Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "5cb59f14-ef42-4e6c-abc2-38151394ac18",
    "name" : "Delete webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks/sxmf",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"execute_base_url\" : \"https://unify.apideck.com/webhook/webhooks/1234/execute\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"A description\",\n    \"id\" : \"1234\",\n    \"disabled_reason\" : \"retry_limit\",\n    \"delivery_url\" : \"https://example.com/my/webhook/endpoint\",\n    \"events\" : [ \"vault.connection.created\", \"vault.connection.updated\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"enabled\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5cb59f14-ef42-4e6c-abc2-38151394ac18",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.35634Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Webhook"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "DeleteWebhookResponse"
          }
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "e18723a5-458d-4d55-a9f8-9e25e903e1b7",
    "name" : "Create webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e18723a5-458d-4d55-a9f8-9e25e903e1b7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.356153Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "f276f6e9-a4cd-4237-a68a-22e8cf6d47ae",
    "name" : "Create webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f276f6e9-a4cd-4237-a68a-22e8cf6d47ae",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.356075Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "f350709e-0f77-40e4-a68e-080097e29d79",
    "name" : "Create webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f350709e-0f77-40e4-a68e-080097e29d79",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.355971Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "d2996492-38dc-4109-9fa8-3e87efe30600",
    "name" : "Create webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d2996492-38dc-4109-9fa8-3e87efe30600",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.355892Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "620ee8f1-d163-40ce-837c-8e19ca2ac752",
    "name" : "Create webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "620ee8f1-d163-40ce-837c-8e19ca2ac752",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.355815Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "20e64204-d5df-4001-9d90-61270151c55c",
    "name" : "Create webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"execute_base_url\" : \"https://unify.apideck.com/webhook/webhooks/1234/execute\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"A description\",\n    \"id\" : \"1234\",\n    \"disabled_reason\" : \"retry_limit\",\n    \"delivery_url\" : \"https://example.com/my/webhook/endpoint\",\n    \"events\" : [ \"vault.connection.created\", \"vault.connection.updated\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"enabled\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "20e64204-d5df-4001-9d90-61270151c55c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.355709Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Webhook"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateWebhookResponse"
          }
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "61d04825-9a03-45c4-b0b7-179f12057f94",
    "name" : "List webhook subscriptions",
    "request" : {
      "urlPath" : "/webhook/webhooks",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "61d04825-9a03-45c4-b0b7-179f12057f94",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.355607Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "208c291c-0440-4e41-a5ef-8d11ba2dcecf",
    "name" : "List webhook subscriptions",
    "request" : {
      "urlPath" : "/webhook/webhooks",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "208c291c-0440-4e41-a5ef-8d11ba2dcecf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.355527Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "4964cb8c-a2bc-42fb-8572-e4aed102adda",
    "name" : "List webhook subscriptions",
    "request" : {
      "urlPath" : "/webhook/webhooks",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4964cb8c-a2bc-42fb-8572-e4aed102adda",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.355419Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "3aec6547-c965-4bac-9911-b1276a9ed691",
    "name" : "List webhook subscriptions",
    "request" : {
      "urlPath" : "/webhook/webhooks",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3aec6547-c965-4bac-9911-b1276a9ed691",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.355333Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "cbd6882a-3148-4bd5-9c4b-72e5f93aa2ff",
    "name" : "List webhook subscriptions",
    "request" : {
      "urlPath" : "/webhook/webhooks",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cbd6882a-3148-4bd5-9c4b-72e5f93aa2ff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.355252Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "3b345f4c-f96c-4ae0-b679-63218d8e5493",
    "name" : "List webhook subscriptions",
    "request" : {
      "urlPath" : "/webhook/webhooks",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"execute_base_url\" : \"https://unify.apideck.com/webhook/webhooks/1234/execute\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"A description\",\n    \"id\" : \"1234\",\n    \"disabled_reason\" : \"retry_limit\",\n    \"delivery_url\" : \"https://example.com/my/webhook/endpoint\",\n    \"events\" : [ \"vault.connection.created\", \"vault.connection.updated\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"enabled\"\n  } ],\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3b345f4c-f96c-4ae0-b679-63218d8e5493",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.355135Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/Webhook"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetWebhooksResponse",
            "x-graphql-type-name" : "WebhookList"
          }
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "a8fe04db-b10f-42a2-8cb7-d3df8b8346d4",
    "name" : "Resolve and Execute a connection webhook",
    "request" : {
      "urlPath" : "/webhook/w/y806/cfqw",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a8fe04db-b10f-42a2-8cb7-d3df8b8346d4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.354964Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksResolve",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 42
  }, {
    "id" : "ab5fb409-172c-47cb-92eb-6c31ef6bbf4d",
    "name" : "Resolve and Execute a connection webhook",
    "request" : {
      "urlPath" : "/webhook/w/ed3a/e0rz",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ab5fb409-172c-47cb-92eb-6c31ef6bbf4d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.354745Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksResolve",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 43
  }, {
    "id" : "007d681f-066b-41e9-9669-9f10b19cf9cc",
    "name" : "Resolve and Execute a connection webhook",
    "request" : {
      "urlPath" : "/webhook/w/jae0/81fl",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "007d681f-066b-41e9-9669-9f10b19cf9cc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.354512Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksResolve",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 44
  }, {
    "id" : "efdb5907-2b54-4417-bc58-974743a7be37",
    "name" : "Resolve and Execute a connection webhook",
    "request" : {
      "urlPath" : "/webhook/w/j079/24e2",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "efdb5907-2b54-4417-bc58-974743a7be37",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.354303Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksResolve",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 45
  }, {
    "id" : "d161b8ac-12db-4cdb-9f48-4984acbe3aec",
    "name" : "Resolve and Execute a connection webhook",
    "request" : {
      "urlPath" : "/webhook/w/h1c6/jjjp",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d161b8ac-12db-4cdb-9f48-4984acbe3aec",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.354091Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksResolve",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 46
  }, {
    "id" : "18deb077-847a-49a0-bfe4-c9998eb26766",
    "name" : "Resolve and Execute a connection webhook",
    "request" : {
      "urlPath" : "/webhook/w/a00y/09f9",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"request_id\" : \"c6af9ac6-7b61-11e6-9a41-93e8deadbeef\",\n  \"status\" : \"OK\",\n  \"timestamp\" : \"2021-10-01T08:26:28.039Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "18deb077-847a-49a0-bfe4-c9998eb26766",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.353856Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksResolve",
          "schema" : {
            "properties" : {
              "request_id" : {
                "description" : "UUID of the request received",
                "example" : "c6af9ac6-7b61-11e6-9a41-93e8deadbeef",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              },
              "timestamp" : {
                "description" : "ISO Datetime webhook event was received",
                "example" : "2021-10-01T08:26:28.039Z",
                "type" : "string"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "ResolveWebhookResponse"
          }
        }
      }
    },
    "insertionIndex" : 47
  }, {
    "id" : "eec8bb31-c6d6-4132-86d9-cefa7a992c7c",
    "name" : "List event logs",
    "request" : {
      "urlPath" : "/webhook/logs",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eec8bb31-c6d6-4132-86d9-cefa7a992c7c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.353593Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "eventLogsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 48
  }, {
    "id" : "ab07044d-e14a-432d-aa2d-1a490a007fe4",
    "name" : "List event logs",
    "request" : {
      "urlPath" : "/webhook/logs",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ab07044d-e14a-432d-aa2d-1a490a007fe4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.353461Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "eventLogsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 49
  }, {
    "id" : "81597833-30e9-4dfb-8499-acd90548fada",
    "name" : "List event logs",
    "request" : {
      "urlPath" : "/webhook/logs",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "81597833-30e9-4dfb-8499-acd90548fada",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.353324Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "eventLogsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 50
  }, {
    "id" : "a03a9415-deab-46c5-b99b-4a49ba0323fd",
    "name" : "List event logs",
    "request" : {
      "urlPath" : "/webhook/logs",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a03a9415-deab-46c5-b99b-4a49ba0323fd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.353206Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "eventLogsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 51
  }, {
    "id" : "2e6a072d-5548-4349-8f51-657045b86b15",
    "name" : "List event logs",
    "request" : {
      "urlPath" : "/webhook/logs",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2e6a072d-5548-4349-8f51-657045b86b15",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.353096Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "eventLogsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 52
  }, {
    "id" : "d81c2e11-8c46-4346-a249-2653b19ff1f1",
    "name" : "List event logs",
    "request" : {
      "urlPath" : "/webhook/logs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"retry_scheduled\" : true,\n    \"status_code\" : 200,\n    \"response_body\" : \"{\\\"status\\\":\\\"OK\\\"}\",\n    \"application_id\" : \"dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX\",\n    \"consumer_id\" : \"test_consumer_id\",\n    \"endpoint\" : \"https://example.com/my/webhook/endpoint\",\n    \"entity_type\" : \"Connection\",\n    \"event_type\" : \"vault.connection.updated\",\n    \"http_method\" : \"GET\",\n    \"request_body\" : \"{\\\"entity\\\":{\\\"id\\\":\\\"2222+test_user_id\\\",\\\"application_id\\\":\\\"2222\\\",\\\"consumer_id\\\":\\\"test_user_id\\\",\\\"name\\\":\\\"ActiveCampaign\\\",\\\"icon\\\":\\\"https://res.cloudinary.com/apideck/image/upload/v1529455970/catalog/activecampaign/icon128x128.png\\\",\\\"logo\\\":\\\"https://www.activecampaign.com/site/assets/social-2x.png\\\",\\\"unified_api\\\":\\\"crm\\\",\\\"service_id\\\":\\\"activecampaign\\\",\\\"auth_type\\\":\\\"apiKey\\\",\\\"enabled\\\":true,\\\"tag_line\\\":\\\"Integrated email marketing, marketing automation, and small business CRM. Save time while growing your business with sales automation.\\\",\\\"website\\\":\\\"https://www.activecampaign.com/\\\",\\\"settings\\\":{\\\"instance_url\\\":\\\"https://eu28.salesforce.com\\\",\\\"base_url\\\":\\\"https://updated.api-us1.com\\\"},\\\"metadata\\\":{\\\"plan\\\":\\\"enterprise\\\",\\\"account\\\":{\\\"name\\\":\\\"My Company\\\"}},\\\"state\\\":\\\"callable\\\",\\\"created_at\\\":\\\"2021-09-10T10:39:49.628Z\\\",\\\"updated_at\\\":\\\"2021-09-10T10:39:52.715Z\\\"},\\\"entityType\\\":\\\"Connection\\\"}\",\n    \"service\" : {\n      \"name\" : \"101 Data Solution\",\n      \"id\" : \"101-data-solution\"\n    },\n    \"success\" : true,\n    \"id\" : \"1d174c4d-fe9e-4377-a76c-6da22fe9cd87\",\n    \"execution_attempt\" : 3,\n    \"unified_api\" : \"crm\",\n    \"attempts\" : [ {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    } ],\n    \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n  }, {\n    \"retry_scheduled\" : true,\n    \"status_code\" : 200,\n    \"response_body\" : \"{\\\"status\\\":\\\"OK\\\"}\",\n    \"application_id\" : \"dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX\",\n    \"consumer_id\" : \"test_consumer_id\",\n    \"endpoint\" : \"https://example.com/my/webhook/endpoint\",\n    \"entity_type\" : \"Connection\",\n    \"event_type\" : \"vault.connection.updated\",\n    \"http_method\" : \"GET\",\n    \"request_body\" : \"{\\\"entity\\\":{\\\"id\\\":\\\"2222+test_user_id\\\",\\\"application_id\\\":\\\"2222\\\",\\\"consumer_id\\\":\\\"test_user_id\\\",\\\"name\\\":\\\"ActiveCampaign\\\",\\\"icon\\\":\\\"https://res.cloudinary.com/apideck/image/upload/v1529455970/catalog/activecampaign/icon128x128.png\\\",\\\"logo\\\":\\\"https://www.activecampaign.com/site/assets/social-2x.png\\\",\\\"unified_api\\\":\\\"crm\\\",\\\"service_id\\\":\\\"activecampaign\\\",\\\"auth_type\\\":\\\"apiKey\\\",\\\"enabled\\\":true,\\\"tag_line\\\":\\\"Integrated email marketing, marketing automation, and small business CRM. Save time while growing your business with sales automation.\\\",\\\"website\\\":\\\"https://www.activecampaign.com/\\\",\\\"settings\\\":{\\\"instance_url\\\":\\\"https://eu28.salesforce.com\\\",\\\"base_url\\\":\\\"https://updated.api-us1.com\\\"},\\\"metadata\\\":{\\\"plan\\\":\\\"enterprise\\\",\\\"account\\\":{\\\"name\\\":\\\"My Company\\\"}},\\\"state\\\":\\\"callable\\\",\\\"created_at\\\":\\\"2021-09-10T10:39:49.628Z\\\",\\\"updated_at\\\":\\\"2021-09-10T10:39:52.715Z\\\"},\\\"entityType\\\":\\\"Connection\\\"}\",\n    \"service\" : {\n      \"name\" : \"101 Data Solution\",\n      \"id\" : \"101-data-solution\"\n    },\n    \"success\" : true,\n    \"id\" : \"1d174c4d-fe9e-4377-a76c-6da22fe9cd87\",\n    \"execution_attempt\" : 3,\n    \"unified_api\" : \"crm\",\n    \"attempts\" : [ {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    } ],\n    \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n  }, {\n    \"retry_scheduled\" : true,\n    \"status_code\" : 200,\n    \"response_body\" : \"{\\\"status\\\":\\\"OK\\\"}\",\n    \"application_id\" : \"dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX\",\n    \"consumer_id\" : \"test_consumer_id\",\n    \"endpoint\" : \"https://example.com/my/webhook/endpoint\",\n    \"entity_type\" : \"Connection\",\n    \"event_type\" : \"vault.connection.updated\",\n    \"http_method\" : \"GET\",\n    \"request_body\" : \"{\\\"entity\\\":{\\\"id\\\":\\\"2222+test_user_id\\\",\\\"application_id\\\":\\\"2222\\\",\\\"consumer_id\\\":\\\"test_user_id\\\",\\\"name\\\":\\\"ActiveCampaign\\\",\\\"icon\\\":\\\"https://res.cloudinary.com/apideck/image/upload/v1529455970/catalog/activecampaign/icon128x128.png\\\",\\\"logo\\\":\\\"https://www.activecampaign.com/site/assets/social-2x.png\\\",\\\"unified_api\\\":\\\"crm\\\",\\\"service_id\\\":\\\"activecampaign\\\",\\\"auth_type\\\":\\\"apiKey\\\",\\\"enabled\\\":true,\\\"tag_line\\\":\\\"Integrated email marketing, marketing automation, and small business CRM. Save time while growing your business with sales automation.\\\",\\\"website\\\":\\\"https://www.activecampaign.com/\\\",\\\"settings\\\":{\\\"instance_url\\\":\\\"https://eu28.salesforce.com\\\",\\\"base_url\\\":\\\"https://updated.api-us1.com\\\"},\\\"metadata\\\":{\\\"plan\\\":\\\"enterprise\\\",\\\"account\\\":{\\\"name\\\":\\\"My Company\\\"}},\\\"state\\\":\\\"callable\\\",\\\"created_at\\\":\\\"2021-09-10T10:39:49.628Z\\\",\\\"updated_at\\\":\\\"2021-09-10T10:39:52.715Z\\\"},\\\"entityType\\\":\\\"Connection\\\"}\",\n    \"service\" : {\n      \"name\" : \"101 Data Solution\",\n      \"id\" : \"101-data-solution\"\n    },\n    \"success\" : true,\n    \"id\" : \"1d174c4d-fe9e-4377-a76c-6da22fe9cd87\",\n    \"execution_attempt\" : 3,\n    \"unified_api\" : \"crm\",\n    \"attempts\" : [ {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    } ],\n    \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n  }, {\n    \"retry_scheduled\" : true,\n    \"status_code\" : 200,\n    \"response_body\" : \"{\\\"status\\\":\\\"OK\\\"}\",\n    \"application_id\" : \"dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX\",\n    \"consumer_id\" : \"test_consumer_id\",\n    \"endpoint\" : \"https://example.com/my/webhook/endpoint\",\n    \"entity_type\" : \"Connection\",\n    \"event_type\" : \"vault.connection.updated\",\n    \"http_method\" : \"GET\",\n    \"request_body\" : \"{\\\"entity\\\":{\\\"id\\\":\\\"2222+test_user_id\\\",\\\"application_id\\\":\\\"2222\\\",\\\"consumer_id\\\":\\\"test_user_id\\\",\\\"name\\\":\\\"ActiveCampaign\\\",\\\"icon\\\":\\\"https://res.cloudinary.com/apideck/image/upload/v1529455970/catalog/activecampaign/icon128x128.png\\\",\\\"logo\\\":\\\"https://www.activecampaign.com/site/assets/social-2x.png\\\",\\\"unified_api\\\":\\\"crm\\\",\\\"service_id\\\":\\\"activecampaign\\\",\\\"auth_type\\\":\\\"apiKey\\\",\\\"enabled\\\":true,\\\"tag_line\\\":\\\"Integrated email marketing, marketing automation, and small business CRM. Save time while growing your business with sales automation.\\\",\\\"website\\\":\\\"https://www.activecampaign.com/\\\",\\\"settings\\\":{\\\"instance_url\\\":\\\"https://eu28.salesforce.com\\\",\\\"base_url\\\":\\\"https://updated.api-us1.com\\\"},\\\"metadata\\\":{\\\"plan\\\":\\\"enterprise\\\",\\\"account\\\":{\\\"name\\\":\\\"My Company\\\"}},\\\"state\\\":\\\"callable\\\",\\\"created_at\\\":\\\"2021-09-10T10:39:49.628Z\\\",\\\"updated_at\\\":\\\"2021-09-10T10:39:52.715Z\\\"},\\\"entityType\\\":\\\"Connection\\\"}\",\n    \"service\" : {\n      \"name\" : \"101 Data Solution\",\n      \"id\" : \"101-data-solution\"\n    },\n    \"success\" : true,\n    \"id\" : \"1d174c4d-fe9e-4377-a76c-6da22fe9cd87\",\n    \"execution_attempt\" : 3,\n    \"unified_api\" : \"crm\",\n    \"attempts\" : [ {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    } ],\n    \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n  }, {\n    \"retry_scheduled\" : true,\n    \"status_code\" : 200,\n    \"response_body\" : \"{\\\"status\\\":\\\"OK\\\"}\",\n    \"application_id\" : \"dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX\",\n    \"consumer_id\" : \"test_consumer_id\",\n    \"endpoint\" : \"https://example.com/my/webhook/endpoint\",\n    \"entity_type\" : \"Connection\",\n    \"event_type\" : \"vault.connection.updated\",\n    \"http_method\" : \"GET\",\n    \"request_body\" : \"{\\\"entity\\\":{\\\"id\\\":\\\"2222+test_user_id\\\",\\\"application_id\\\":\\\"2222\\\",\\\"consumer_id\\\":\\\"test_user_id\\\",\\\"name\\\":\\\"ActiveCampaign\\\",\\\"icon\\\":\\\"https://res.cloudinary.com/apideck/image/upload/v1529455970/catalog/activecampaign/icon128x128.png\\\",\\\"logo\\\":\\\"https://www.activecampaign.com/site/assets/social-2x.png\\\",\\\"unified_api\\\":\\\"crm\\\",\\\"service_id\\\":\\\"activecampaign\\\",\\\"auth_type\\\":\\\"apiKey\\\",\\\"enabled\\\":true,\\\"tag_line\\\":\\\"Integrated email marketing, marketing automation, and small business CRM. Save time while growing your business with sales automation.\\\",\\\"website\\\":\\\"https://www.activecampaign.com/\\\",\\\"settings\\\":{\\\"instance_url\\\":\\\"https://eu28.salesforce.com\\\",\\\"base_url\\\":\\\"https://updated.api-us1.com\\\"},\\\"metadata\\\":{\\\"plan\\\":\\\"enterprise\\\",\\\"account\\\":{\\\"name\\\":\\\"My Company\\\"}},\\\"state\\\":\\\"callable\\\",\\\"created_at\\\":\\\"2021-09-10T10:39:49.628Z\\\",\\\"updated_at\\\":\\\"2021-09-10T10:39:52.715Z\\\"},\\\"entityType\\\":\\\"Connection\\\"}\",\n    \"service\" : {\n      \"name\" : \"101 Data Solution\",\n      \"id\" : \"101-data-solution\"\n    },\n    \"success\" : true,\n    \"id\" : \"1d174c4d-fe9e-4377-a76c-6da22fe9cd87\",\n    \"execution_attempt\" : 3,\n    \"unified_api\" : \"crm\",\n    \"attempts\" : [ {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    } ],\n    \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n  }, {\n    \"retry_scheduled\" : true,\n    \"status_code\" : 200,\n    \"response_body\" : \"{\\\"status\\\":\\\"OK\\\"}\",\n    \"application_id\" : \"dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX\",\n    \"consumer_id\" : \"test_consumer_id\",\n    \"endpoint\" : \"https://example.com/my/webhook/endpoint\",\n    \"entity_type\" : \"Connection\",\n    \"event_type\" : \"vault.connection.updated\",\n    \"http_method\" : \"GET\",\n    \"request_body\" : \"{\\\"entity\\\":{\\\"id\\\":\\\"2222+test_user_id\\\",\\\"application_id\\\":\\\"2222\\\",\\\"consumer_id\\\":\\\"test_user_id\\\",\\\"name\\\":\\\"ActiveCampaign\\\",\\\"icon\\\":\\\"https://res.cloudinary.com/apideck/image/upload/v1529455970/catalog/activecampaign/icon128x128.png\\\",\\\"logo\\\":\\\"https://www.activecampaign.com/site/assets/social-2x.png\\\",\\\"unified_api\\\":\\\"crm\\\",\\\"service_id\\\":\\\"activecampaign\\\",\\\"auth_type\\\":\\\"apiKey\\\",\\\"enabled\\\":true,\\\"tag_line\\\":\\\"Integrated email marketing, marketing automation, and small business CRM. Save time while growing your business with sales automation.\\\",\\\"website\\\":\\\"https://www.activecampaign.com/\\\",\\\"settings\\\":{\\\"instance_url\\\":\\\"https://eu28.salesforce.com\\\",\\\"base_url\\\":\\\"https://updated.api-us1.com\\\"},\\\"metadata\\\":{\\\"plan\\\":\\\"enterprise\\\",\\\"account\\\":{\\\"name\\\":\\\"My Company\\\"}},\\\"state\\\":\\\"callable\\\",\\\"created_at\\\":\\\"2021-09-10T10:39:49.628Z\\\",\\\"updated_at\\\":\\\"2021-09-10T10:39:52.715Z\\\"},\\\"entityType\\\":\\\"Connection\\\"}\",\n    \"service\" : {\n      \"name\" : \"101 Data Solution\",\n      \"id\" : \"101-data-solution\"\n    },\n    \"success\" : true,\n    \"id\" : \"1d174c4d-fe9e-4377-a76c-6da22fe9cd87\",\n    \"execution_attempt\" : 3,\n    \"unified_api\" : \"crm\",\n    \"attempts\" : [ {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    } ],\n    \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n  }, {\n    \"retry_scheduled\" : true,\n    \"status_code\" : 200,\n    \"response_body\" : \"{\\\"status\\\":\\\"OK\\\"}\",\n    \"application_id\" : \"dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX\",\n    \"consumer_id\" : \"test_consumer_id\",\n    \"endpoint\" : \"https://example.com/my/webhook/endpoint\",\n    \"entity_type\" : \"Connection\",\n    \"event_type\" : \"vault.connection.updated\",\n    \"http_method\" : \"GET\",\n    \"request_body\" : \"{\\\"entity\\\":{\\\"id\\\":\\\"2222+test_user_id\\\",\\\"application_id\\\":\\\"2222\\\",\\\"consumer_id\\\":\\\"test_user_id\\\",\\\"name\\\":\\\"ActiveCampaign\\\",\\\"icon\\\":\\\"https://res.cloudinary.com/apideck/image/upload/v1529455970/catalog/activecampaign/icon128x128.png\\\",\\\"logo\\\":\\\"https://www.activecampaign.com/site/assets/social-2x.png\\\",\\\"unified_api\\\":\\\"crm\\\",\\\"service_id\\\":\\\"activecampaign\\\",\\\"auth_type\\\":\\\"apiKey\\\",\\\"enabled\\\":true,\\\"tag_line\\\":\\\"Integrated email marketing, marketing automation, and small business CRM. Save time while growing your business with sales automation.\\\",\\\"website\\\":\\\"https://www.activecampaign.com/\\\",\\\"settings\\\":{\\\"instance_url\\\":\\\"https://eu28.salesforce.com\\\",\\\"base_url\\\":\\\"https://updated.api-us1.com\\\"},\\\"metadata\\\":{\\\"plan\\\":\\\"enterprise\\\",\\\"account\\\":{\\\"name\\\":\\\"My Company\\\"}},\\\"state\\\":\\\"callable\\\",\\\"created_at\\\":\\\"2021-09-10T10:39:49.628Z\\\",\\\"updated_at\\\":\\\"2021-09-10T10:39:52.715Z\\\"},\\\"entityType\\\":\\\"Connection\\\"}\",\n    \"service\" : {\n      \"name\" : \"101 Data Solution\",\n      \"id\" : \"101-data-solution\"\n    },\n    \"success\" : true,\n    \"id\" : \"1d174c4d-fe9e-4377-a76c-6da22fe9cd87\",\n    \"execution_attempt\" : 3,\n    \"unified_api\" : \"crm\",\n    \"attempts\" : [ {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    } ],\n    \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n  }, {\n    \"retry_scheduled\" : true,\n    \"status_code\" : 200,\n    \"response_body\" : \"{\\\"status\\\":\\\"OK\\\"}\",\n    \"application_id\" : \"dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX\",\n    \"consumer_id\" : \"test_consumer_id\",\n    \"endpoint\" : \"https://example.com/my/webhook/endpoint\",\n    \"entity_type\" : \"Connection\",\n    \"event_type\" : \"vault.connection.updated\",\n    \"http_method\" : \"GET\",\n    \"request_body\" : \"{\\\"entity\\\":{\\\"id\\\":\\\"2222+test_user_id\\\",\\\"application_id\\\":\\\"2222\\\",\\\"consumer_id\\\":\\\"test_user_id\\\",\\\"name\\\":\\\"ActiveCampaign\\\",\\\"icon\\\":\\\"https://res.cloudinary.com/apideck/image/upload/v1529455970/catalog/activecampaign/icon128x128.png\\\",\\\"logo\\\":\\\"https://www.activecampaign.com/site/assets/social-2x.png\\\",\\\"unified_api\\\":\\\"crm\\\",\\\"service_id\\\":\\\"activecampaign\\\",\\\"auth_type\\\":\\\"apiKey\\\",\\\"enabled\\\":true,\\\"tag_line\\\":\\\"Integrated email marketing, marketing automation, and small business CRM. Save time while growing your business with sales automation.\\\",\\\"website\\\":\\\"https://www.activecampaign.com/\\\",\\\"settings\\\":{\\\"instance_url\\\":\\\"https://eu28.salesforce.com\\\",\\\"base_url\\\":\\\"https://updated.api-us1.com\\\"},\\\"metadata\\\":{\\\"plan\\\":\\\"enterprise\\\",\\\"account\\\":{\\\"name\\\":\\\"My Company\\\"}},\\\"state\\\":\\\"callable\\\",\\\"created_at\\\":\\\"2021-09-10T10:39:49.628Z\\\",\\\"updated_at\\\":\\\"2021-09-10T10:39:52.715Z\\\"},\\\"entityType\\\":\\\"Connection\\\"}\",\n    \"service\" : {\n      \"name\" : \"101 Data Solution\",\n      \"id\" : \"101-data-solution\"\n    },\n    \"success\" : true,\n    \"id\" : \"1d174c4d-fe9e-4377-a76c-6da22fe9cd87\",\n    \"execution_attempt\" : 3,\n    \"unified_api\" : \"crm\",\n    \"attempts\" : [ {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    } ],\n    \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n  } ],\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d81c2e11-8c46-4346-a249-2653b19ff1f1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.352904Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "eventLogsAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/WebhookEventLog"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetWebhookEventLogsResponse",
            "x-graphql-type-name" : "EventLogList"
          }
        }
      }
    },
    "insertionIndex" : 53
  } ]
}