{
  "mappings" : [ {
    "id" : "787c570d-e4dc-4e91-a2df-394fa33db37d",
    "name" : "Execute a webhook",
    "request" : {
      "urlPath" : "/webhook/webhooks/we19/x/zy13",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "787c570d-e4dc-4e91-a2df-394fa33db37d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.988422Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksShortExecute",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "47313b1f-4f61-4692-a457-76fc24a5ff32",
    "name" : "Execute a webhook",
    "request" : {
      "urlPath" : "/webhook/webhooks/3h82/x/91ig",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "47313b1f-4f61-4692-a457-76fc24a5ff32",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.988223Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksShortExecute",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "e9c4ec90-5f21-480f-96b5-db5f1b314050",
    "name" : "Execute a webhook",
    "request" : {
      "urlPath" : "/webhook/webhooks/cms2/x/n93b",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e9c4ec90-5f21-480f-96b5-db5f1b314050",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.988001Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksShortExecute",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "653190a2-507e-4e30-8597-5bbe8a2eb36b",
    "name" : "Execute a webhook",
    "request" : {
      "urlPath" : "/webhook/webhooks/6z01/x/h6j6",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "653190a2-507e-4e30-8597-5bbe8a2eb36b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.987807Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksShortExecute",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "36ff79b2-eae1-4eb7-8088-8d6a3a2516f3",
    "name" : "Execute a webhook",
    "request" : {
      "urlPath" : "/webhook/webhooks/m970/x/w8xy",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "36ff79b2-eae1-4eb7-8088-8d6a3a2516f3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.987609Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksShortExecute",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "3024529a-d2e8-49e9-96a1-a1777104eeb5",
    "name" : "Execute a webhook",
    "request" : {
      "urlPath" : "/webhook/webhooks/ysb5/x/0496",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"request_id\" : \"c6af9ac6-7b61-11e6-9a41-93e8deadbeef\",\n  \"status\" : \"OK\",\n  \"timestamp\" : \"2021-10-01T08:26:28.039Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3024529a-d2e8-49e9-96a1-a1777104eeb5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.987391Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksShortExecute",
          "schema" : {
            "properties" : {
              "request_id" : {
                "description" : "UUID of the request received",
                "example" : "c6af9ac6-7b61-11e6-9a41-93e8deadbeef",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              },
              "timestamp" : {
                "description" : "ISO Datetime webhook event was received",
                "example" : "2021-10-01T08:26:28.039Z",
                "type" : "string"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "ExecuteWebhookResponse"
          }
        }
      }
    }
  }, {
    "id" : "dc20504b-fce6-4fff-bc7b-baefdc9fe7d1",
    "name" : "Execute a webhook",
    "request" : {
      "urlPath" : "/webhook/webhooks/wwib/execute/4693",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dc20504b-fce6-4fff-bc7b-baefdc9fe7d1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.987201Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksExecute",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "b06e8135-dd94-4c72-be78-3c013a2c82e7",
    "name" : "Execute a webhook",
    "request" : {
      "urlPath" : "/webhook/webhooks/r62h/execute/v1yi",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b06e8135-dd94-4c72-be78-3c013a2c82e7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.987009Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksExecute",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "51fa2a11-1158-4aec-8324-deb795915a66",
    "name" : "Execute a webhook",
    "request" : {
      "urlPath" : "/webhook/webhooks/64a0/execute/fpl9",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "51fa2a11-1158-4aec-8324-deb795915a66",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.986784Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksExecute",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "996b4d0d-d7b8-4655-983f-87473519661e",
    "name" : "Execute a webhook",
    "request" : {
      "urlPath" : "/webhook/webhooks/zt20/execute/7448",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "996b4d0d-d7b8-4655-983f-87473519661e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.98659Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksExecute",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "a8173d0a-eea8-4920-b80b-a25173cc08d2",
    "name" : "Execute a webhook",
    "request" : {
      "urlPath" : "/webhook/webhooks/zwn6/execute/9a0w",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a8173d0a-eea8-4920-b80b-a25173cc08d2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.986397Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksExecute",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "1e6eafe0-74b3-4052-be22-61086e2a4db1",
    "name" : "Execute a webhook",
    "request" : {
      "urlPath" : "/webhook/webhooks/6zk9/execute/mhqy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"request_id\" : \"c6af9ac6-7b61-11e6-9a41-93e8deadbeef\",\n  \"status\" : \"OK\",\n  \"timestamp\" : \"2021-10-01T08:26:28.039Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1e6eafe0-74b3-4052-be22-61086e2a4db1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.986178Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksExecute",
          "schema" : {
            "properties" : {
              "request_id" : {
                "description" : "UUID of the request received",
                "example" : "c6af9ac6-7b61-11e6-9a41-93e8deadbeef",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              },
              "timestamp" : {
                "description" : "ISO Datetime webhook event was received",
                "example" : "2021-10-01T08:26:28.039Z",
                "type" : "string"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "ExecuteWebhookResponse"
          }
        }
      }
    }
  }, {
    "id" : "9958bf58-6dae-4811-85a4-cb3a6788a66d",
    "name" : "Update webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks/b95h",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9958bf58-6dae-4811-85a4-cb3a6788a66d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.985967Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "fea1a6f6-7e16-4da1-9eb7-a1698e515c96",
    "name" : "Update webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks/7891",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fea1a6f6-7e16-4da1-9eb7-a1698e515c96",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.985814Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "5ecf06a4-cd84-49ff-8028-0690cd79c280",
    "name" : "Update webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks/v2k8",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5ecf06a4-cd84-49ff-8028-0690cd79c280",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.985643Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "edc8529e-59b4-4ff3-812c-861899347b2e",
    "name" : "Update webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks/f5ft",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "edc8529e-59b4-4ff3-812c-861899347b2e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.985507Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "87bdf252-4556-4318-baab-8238fefece88",
    "name" : "Update webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks/w895",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "87bdf252-4556-4318-baab-8238fefece88",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.985354Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "2ac59824-6b13-4318-8071-6aed4662e9e5",
    "name" : "Update webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks/h6yg",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"execute_base_url\" : \"https://unify.apideck.com/webhook/webhooks/1234/execute\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"A description\",\n    \"id\" : \"1234\",\n    \"disabled_reason\" : \"retry_limit\",\n    \"delivery_url\" : \"https://example.com/my/webhook/endpoint\",\n    \"events\" : [ \"vault.connection.created\", \"vault.connection.updated\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"enabled\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2ac59824-6b13-4318-8071-6aed4662e9e5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.985183Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Webhook"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateWebhookResponse"
          }
        }
      }
    }
  }, {
    "id" : "25d17652-8e21-4600-a6c3-1f62fb159658",
    "name" : "Get webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks/8k50",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "25d17652-8e21-4600-a6c3-1f62fb159658",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.985024Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "5c2b4fe7-a7a9-4e43-b9b5-ac7efb5c20cc",
    "name" : "Get webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks/4u97",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5c2b4fe7-a7a9-4e43-b9b5-ac7efb5c20cc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.984862Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "ffbff3f4-42e5-4ae3-90c2-30abdb5b3996",
    "name" : "Get webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks/q4gj",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ffbff3f4-42e5-4ae3-90c2-30abdb5b3996",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.98469Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "dcfba028-cb38-47c5-8f8d-7c7e2e78b3f5",
    "name" : "Get webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks/6nal",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dcfba028-cb38-47c5-8f8d-7c7e2e78b3f5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.984546Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "cc634033-3d92-40f9-b28a-5c90edc3adc9",
    "name" : "Get webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks/4911",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cc634033-3d92-40f9-b28a-5c90edc3adc9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.984403Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "364d39a1-35a7-480d-a212-304ca5cf0bea",
    "name" : "Get webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks/2vmk",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"execute_base_url\" : \"https://unify.apideck.com/webhook/webhooks/1234/execute\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"A description\",\n    \"id\" : \"1234\",\n    \"disabled_reason\" : \"retry_limit\",\n    \"delivery_url\" : \"https://example.com/my/webhook/endpoint\",\n    \"events\" : [ \"vault.connection.created\", \"vault.connection.updated\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"enabled\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "364d39a1-35a7-480d-a212-304ca5cf0bea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.984244Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Webhook"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetWebhookResponse",
            "x-graphql-type-name" : "Webhook"
          }
        }
      }
    }
  }, {
    "id" : "83dd103f-31c9-4cc8-b9e7-4586fd24293b",
    "name" : "Delete webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks/5vl0",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "83dd103f-31c9-4cc8-b9e7-4586fd24293b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.984094Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "8b1d75a1-dc48-4d93-bae9-b3be08c877cd",
    "name" : "Delete webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks/98od",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8b1d75a1-dc48-4d93-bae9-b3be08c877cd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.983951Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "1abb314b-1e8d-4f04-9f9d-f05decd73772",
    "name" : "Delete webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks/v4g6",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1abb314b-1e8d-4f04-9f9d-f05decd73772",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.983782Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "8472c6a5-6261-4926-8b64-fe2f39c50be1",
    "name" : "Delete webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks/2gni",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8472c6a5-6261-4926-8b64-fe2f39c50be1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.983641Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "99241fe1-64ad-4699-84a0-6d7f121de442",
    "name" : "Delete webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks/xfsk",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "99241fe1-64ad-4699-84a0-6d7f121de442",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.983502Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "812041fa-3c57-40b2-9022-4faf692604b0",
    "name" : "Delete webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks/2tjo",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"execute_base_url\" : \"https://unify.apideck.com/webhook/webhooks/1234/execute\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"A description\",\n    \"id\" : \"1234\",\n    \"disabled_reason\" : \"retry_limit\",\n    \"delivery_url\" : \"https://example.com/my/webhook/endpoint\",\n    \"events\" : [ \"vault.connection.created\", \"vault.connection.updated\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"enabled\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "812041fa-3c57-40b2-9022-4faf692604b0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.983335Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Webhook"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "DeleteWebhookResponse"
          }
        }
      }
    }
  }, {
    "id" : "da694afa-ba74-4f7f-8607-1cf89def9881",
    "name" : "Create webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "da694afa-ba74-4f7f-8607-1cf89def9881",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.983174Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "5de4c3e6-b765-43e2-b4f4-473d929ef491",
    "name" : "Create webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5de4c3e6-b765-43e2-b4f4-473d929ef491",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.9831Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "517f81eb-7e8d-4a80-b3fc-ef8a80933173",
    "name" : "Create webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "517f81eb-7e8d-4a80-b3fc-ef8a80933173",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.983001Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "46703f3f-6c4a-473b-b6e2-954fbeac9d97",
    "name" : "Create webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "46703f3f-6c4a-473b-b6e2-954fbeac9d97",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.982928Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "e2b1388a-6175-4892-93e8-7f6cb7a80576",
    "name" : "Create webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e2b1388a-6175-4892-93e8-7f6cb7a80576",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.982855Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "2a57c0e4-3fe5-42af-9751-ada3eb41ec56",
    "name" : "Create webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"execute_base_url\" : \"https://unify.apideck.com/webhook/webhooks/1234/execute\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"A description\",\n    \"id\" : \"1234\",\n    \"disabled_reason\" : \"retry_limit\",\n    \"delivery_url\" : \"https://example.com/my/webhook/endpoint\",\n    \"events\" : [ \"vault.connection.created\", \"vault.connection.updated\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"enabled\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2a57c0e4-3fe5-42af-9751-ada3eb41ec56",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.98276Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Webhook"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateWebhookResponse"
          }
        }
      }
    }
  }, {
    "id" : "0e0f5daa-5631-4162-bdb9-3cfeb162e231",
    "name" : "List webhook subscriptions",
    "request" : {
      "urlPath" : "/webhook/webhooks",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0e0f5daa-5631-4162-bdb9-3cfeb162e231",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.982665Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "2288c443-f04e-445e-92d6-b3aad4109f0f",
    "name" : "List webhook subscriptions",
    "request" : {
      "urlPath" : "/webhook/webhooks",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2288c443-f04e-445e-92d6-b3aad4109f0f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.982589Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "f1788be6-5d98-48bc-82c6-97b6995683ce",
    "name" : "List webhook subscriptions",
    "request" : {
      "urlPath" : "/webhook/webhooks",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f1788be6-5d98-48bc-82c6-97b6995683ce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.982491Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "ae92dfc1-e8e3-4a2b-9a6a-e65cc6fb6b3e",
    "name" : "List webhook subscriptions",
    "request" : {
      "urlPath" : "/webhook/webhooks",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ae92dfc1-e8e3-4a2b-9a6a-e65cc6fb6b3e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.982416Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "e845f2d3-df6d-4802-8818-d23307deccb8",
    "name" : "List webhook subscriptions",
    "request" : {
      "urlPath" : "/webhook/webhooks",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e845f2d3-df6d-4802-8818-d23307deccb8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.982317Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "7f765f8a-d4a9-4e45-9f37-f75a09a060d6",
    "name" : "List webhook subscriptions",
    "request" : {
      "urlPath" : "/webhook/webhooks",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"execute_base_url\" : \"https://unify.apideck.com/webhook/webhooks/1234/execute\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"A description\",\n    \"id\" : \"1234\",\n    \"disabled_reason\" : \"retry_limit\",\n    \"delivery_url\" : \"https://example.com/my/webhook/endpoint\",\n    \"events\" : [ \"vault.connection.created\", \"vault.connection.updated\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"enabled\"\n  }, {\n    \"execute_base_url\" : \"https://unify.apideck.com/webhook/webhooks/1234/execute\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"A description\",\n    \"id\" : \"1234\",\n    \"disabled_reason\" : \"retry_limit\",\n    \"delivery_url\" : \"https://example.com/my/webhook/endpoint\",\n    \"events\" : [ \"vault.connection.created\", \"vault.connection.updated\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"enabled\"\n  }, {\n    \"execute_base_url\" : \"https://unify.apideck.com/webhook/webhooks/1234/execute\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"A description\",\n    \"id\" : \"1234\",\n    \"disabled_reason\" : \"retry_limit\",\n    \"delivery_url\" : \"https://example.com/my/webhook/endpoint\",\n    \"events\" : [ \"vault.connection.created\", \"vault.connection.updated\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"enabled\"\n  } ],\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7f765f8a-d4a9-4e45-9f37-f75a09a060d6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.982214Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/Webhook"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetWebhooksResponse",
            "x-graphql-type-name" : "WebhookList"
          }
        }
      }
    }
  }, {
    "id" : "bc0ed906-3ce5-4e1d-99ab-d9636ddbe979",
    "name" : "Resolve and Execute a connection webhook",
    "request" : {
      "urlPath" : "/webhook/w/8b27/j31g",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bc0ed906-3ce5-4e1d-99ab-d9636ddbe979",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.982023Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksResolve",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "1ea83269-0457-467a-ae92-cd73d724cb95",
    "name" : "Resolve and Execute a connection webhook",
    "request" : {
      "urlPath" : "/webhook/w/s758/ob7d",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1ea83269-0457-467a-ae92-cd73d724cb95",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.981822Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksResolve",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "8eb0cf74-da5a-402c-bfff-f5e4bdbb0169",
    "name" : "Resolve and Execute a connection webhook",
    "request" : {
      "urlPath" : "/webhook/w/8y5k/8s6k",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8eb0cf74-da5a-402c-bfff-f5e4bdbb0169",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.981598Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksResolve",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "57a229b2-7aff-4a0f-b0d5-7c97d7abb295",
    "name" : "Resolve and Execute a connection webhook",
    "request" : {
      "urlPath" : "/webhook/w/pc6k/pvqe",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "57a229b2-7aff-4a0f-b0d5-7c97d7abb295",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.981392Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksResolve",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "79690895-ec02-406d-b606-706ad2a4f342",
    "name" : "Resolve and Execute a connection webhook",
    "request" : {
      "urlPath" : "/webhook/w/hd21/9vwe",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "79690895-ec02-406d-b606-706ad2a4f342",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.981197Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksResolve",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "ed1f0452-92fe-45b0-a0fe-70070ebd04f8",
    "name" : "Resolve and Execute a connection webhook",
    "request" : {
      "urlPath" : "/webhook/w/j6c0/0c03",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"request_id\" : \"c6af9ac6-7b61-11e6-9a41-93e8deadbeef\",\n  \"status\" : \"OK\",\n  \"timestamp\" : \"2021-10-01T08:26:28.039Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ed1f0452-92fe-45b0-a0fe-70070ebd04f8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.980968Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksResolve",
          "schema" : {
            "properties" : {
              "request_id" : {
                "description" : "UUID of the request received",
                "example" : "c6af9ac6-7b61-11e6-9a41-93e8deadbeef",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              },
              "timestamp" : {
                "description" : "ISO Datetime webhook event was received",
                "example" : "2021-10-01T08:26:28.039Z",
                "type" : "string"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "ResolveWebhookResponse"
          }
        }
      }
    }
  }, {
    "id" : "df09a72a-7142-46e2-9d39-111b283abfd2",
    "name" : "List event logs",
    "request" : {
      "urlPath" : "/webhook/logs",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "df09a72a-7142-46e2-9d39-111b283abfd2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.980718Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "eventLogsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "464262af-2277-468a-a5df-77f613bd119d",
    "name" : "List event logs",
    "request" : {
      "urlPath" : "/webhook/logs",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "464262af-2277-468a-a5df-77f613bd119d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.980612Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "eventLogsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "ebd21495-cc73-461f-8183-e06f3b51ac53",
    "name" : "List event logs",
    "request" : {
      "urlPath" : "/webhook/logs",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ebd21495-cc73-461f-8183-e06f3b51ac53",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.980477Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "eventLogsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "fe034309-1ca4-480b-a60c-975f26100e36",
    "name" : "List event logs",
    "request" : {
      "urlPath" : "/webhook/logs",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fe034309-1ca4-480b-a60c-975f26100e36",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.980372Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "eventLogsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "3e77af98-f8c5-4e70-9b35-8a0acce0c95a",
    "name" : "List event logs",
    "request" : {
      "urlPath" : "/webhook/logs",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3e77af98-f8c5-4e70-9b35-8a0acce0c95a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.980261Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "eventLogsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "79d7e918-1d4c-4ada-9e7c-f16b615be7ac",
    "name" : "List event logs",
    "request" : {
      "urlPath" : "/webhook/logs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"retry_scheduled\" : true,\n    \"status_code\" : 200,\n    \"response_body\" : \"{\\\"status\\\":\\\"OK\\\"}\",\n    \"application_id\" : \"dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX\",\n    \"consumer_id\" : \"test_consumer_id\",\n    \"endpoint\" : \"https://example.com/my/webhook/endpoint\",\n    \"entity_type\" : \"Connection\",\n    \"event_type\" : \"vault.connection.updated\",\n    \"http_method\" : \"GET\",\n    \"request_body\" : \"{\\\"entity\\\":{\\\"id\\\":\\\"2222+test_user_id\\\",\\\"application_id\\\":\\\"2222\\\",\\\"consumer_id\\\":\\\"test_user_id\\\",\\\"name\\\":\\\"ActiveCampaign\\\",\\\"icon\\\":\\\"https://res.cloudinary.com/apideck/image/upload/v1529455970/catalog/activecampaign/icon128x128.png\\\",\\\"logo\\\":\\\"https://www.activecampaign.com/site/assets/social-2x.png\\\",\\\"unified_api\\\":\\\"crm\\\",\\\"service_id\\\":\\\"activecampaign\\\",\\\"auth_type\\\":\\\"apiKey\\\",\\\"enabled\\\":true,\\\"tag_line\\\":\\\"Integrated email marketing, marketing automation, and small business CRM. Save time while growing your business with sales automation.\\\",\\\"website\\\":\\\"https://www.activecampaign.com/\\\",\\\"settings\\\":{\\\"instance_url\\\":\\\"https://eu28.salesforce.com\\\",\\\"base_url\\\":\\\"https://updated.api-us1.com\\\"},\\\"metadata\\\":{\\\"plan\\\":\\\"enterprise\\\",\\\"account\\\":{\\\"name\\\":\\\"My Company\\\"}},\\\"state\\\":\\\"callable\\\",\\\"created_at\\\":\\\"2021-09-10T10:39:49.628Z\\\",\\\"updated_at\\\":\\\"2021-09-10T10:39:52.715Z\\\"},\\\"entityType\\\":\\\"Connection\\\"}\",\n    \"service\" : {\n      \"name\" : \"101 Data Solution\",\n      \"id\" : \"101-data-solution\"\n    },\n    \"success\" : true,\n    \"id\" : \"1d174c4d-fe9e-4377-a76c-6da22fe9cd87\",\n    \"execution_attempt\" : 3,\n    \"unified_api\" : \"crm\",\n    \"attempts\" : [ {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    } ],\n    \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n  }, {\n    \"retry_scheduled\" : true,\n    \"status_code\" : 200,\n    \"response_body\" : \"{\\\"status\\\":\\\"OK\\\"}\",\n    \"application_id\" : \"dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX\",\n    \"consumer_id\" : \"test_consumer_id\",\n    \"endpoint\" : \"https://example.com/my/webhook/endpoint\",\n    \"entity_type\" : \"Connection\",\n    \"event_type\" : \"vault.connection.updated\",\n    \"http_method\" : \"GET\",\n    \"request_body\" : \"{\\\"entity\\\":{\\\"id\\\":\\\"2222+test_user_id\\\",\\\"application_id\\\":\\\"2222\\\",\\\"consumer_id\\\":\\\"test_user_id\\\",\\\"name\\\":\\\"ActiveCampaign\\\",\\\"icon\\\":\\\"https://res.cloudinary.com/apideck/image/upload/v1529455970/catalog/activecampaign/icon128x128.png\\\",\\\"logo\\\":\\\"https://www.activecampaign.com/site/assets/social-2x.png\\\",\\\"unified_api\\\":\\\"crm\\\",\\\"service_id\\\":\\\"activecampaign\\\",\\\"auth_type\\\":\\\"apiKey\\\",\\\"enabled\\\":true,\\\"tag_line\\\":\\\"Integrated email marketing, marketing automation, and small business CRM. Save time while growing your business with sales automation.\\\",\\\"website\\\":\\\"https://www.activecampaign.com/\\\",\\\"settings\\\":{\\\"instance_url\\\":\\\"https://eu28.salesforce.com\\\",\\\"base_url\\\":\\\"https://updated.api-us1.com\\\"},\\\"metadata\\\":{\\\"plan\\\":\\\"enterprise\\\",\\\"account\\\":{\\\"name\\\":\\\"My Company\\\"}},\\\"state\\\":\\\"callable\\\",\\\"created_at\\\":\\\"2021-09-10T10:39:49.628Z\\\",\\\"updated_at\\\":\\\"2021-09-10T10:39:52.715Z\\\"},\\\"entityType\\\":\\\"Connection\\\"}\",\n    \"service\" : {\n      \"name\" : \"101 Data Solution\",\n      \"id\" : \"101-data-solution\"\n    },\n    \"success\" : true,\n    \"id\" : \"1d174c4d-fe9e-4377-a76c-6da22fe9cd87\",\n    \"execution_attempt\" : 3,\n    \"unified_api\" : \"crm\",\n    \"attempts\" : [ {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    } ],\n    \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n  }, {\n    \"retry_scheduled\" : true,\n    \"status_code\" : 200,\n    \"response_body\" : \"{\\\"status\\\":\\\"OK\\\"}\",\n    \"application_id\" : \"dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX\",\n    \"consumer_id\" : \"test_consumer_id\",\n    \"endpoint\" : \"https://example.com/my/webhook/endpoint\",\n    \"entity_type\" : \"Connection\",\n    \"event_type\" : \"vault.connection.updated\",\n    \"http_method\" : \"GET\",\n    \"request_body\" : \"{\\\"entity\\\":{\\\"id\\\":\\\"2222+test_user_id\\\",\\\"application_id\\\":\\\"2222\\\",\\\"consumer_id\\\":\\\"test_user_id\\\",\\\"name\\\":\\\"ActiveCampaign\\\",\\\"icon\\\":\\\"https://res.cloudinary.com/apideck/image/upload/v1529455970/catalog/activecampaign/icon128x128.png\\\",\\\"logo\\\":\\\"https://www.activecampaign.com/site/assets/social-2x.png\\\",\\\"unified_api\\\":\\\"crm\\\",\\\"service_id\\\":\\\"activecampaign\\\",\\\"auth_type\\\":\\\"apiKey\\\",\\\"enabled\\\":true,\\\"tag_line\\\":\\\"Integrated email marketing, marketing automation, and small business CRM. Save time while growing your business with sales automation.\\\",\\\"website\\\":\\\"https://www.activecampaign.com/\\\",\\\"settings\\\":{\\\"instance_url\\\":\\\"https://eu28.salesforce.com\\\",\\\"base_url\\\":\\\"https://updated.api-us1.com\\\"},\\\"metadata\\\":{\\\"plan\\\":\\\"enterprise\\\",\\\"account\\\":{\\\"name\\\":\\\"My Company\\\"}},\\\"state\\\":\\\"callable\\\",\\\"created_at\\\":\\\"2021-09-10T10:39:49.628Z\\\",\\\"updated_at\\\":\\\"2021-09-10T10:39:52.715Z\\\"},\\\"entityType\\\":\\\"Connection\\\"}\",\n    \"service\" : {\n      \"name\" : \"101 Data Solution\",\n      \"id\" : \"101-data-solution\"\n    },\n    \"success\" : true,\n    \"id\" : \"1d174c4d-fe9e-4377-a76c-6da22fe9cd87\",\n    \"execution_attempt\" : 3,\n    \"unified_api\" : \"crm\",\n    \"attempts\" : [ {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    } ],\n    \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n  }, {\n    \"retry_scheduled\" : true,\n    \"status_code\" : 200,\n    \"response_body\" : \"{\\\"status\\\":\\\"OK\\\"}\",\n    \"application_id\" : \"dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX\",\n    \"consumer_id\" : \"test_consumer_id\",\n    \"endpoint\" : \"https://example.com/my/webhook/endpoint\",\n    \"entity_type\" : \"Connection\",\n    \"event_type\" : \"vault.connection.updated\",\n    \"http_method\" : \"GET\",\n    \"request_body\" : \"{\\\"entity\\\":{\\\"id\\\":\\\"2222+test_user_id\\\",\\\"application_id\\\":\\\"2222\\\",\\\"consumer_id\\\":\\\"test_user_id\\\",\\\"name\\\":\\\"ActiveCampaign\\\",\\\"icon\\\":\\\"https://res.cloudinary.com/apideck/image/upload/v1529455970/catalog/activecampaign/icon128x128.png\\\",\\\"logo\\\":\\\"https://www.activecampaign.com/site/assets/social-2x.png\\\",\\\"unified_api\\\":\\\"crm\\\",\\\"service_id\\\":\\\"activecampaign\\\",\\\"auth_type\\\":\\\"apiKey\\\",\\\"enabled\\\":true,\\\"tag_line\\\":\\\"Integrated email marketing, marketing automation, and small business CRM. Save time while growing your business with sales automation.\\\",\\\"website\\\":\\\"https://www.activecampaign.com/\\\",\\\"settings\\\":{\\\"instance_url\\\":\\\"https://eu28.salesforce.com\\\",\\\"base_url\\\":\\\"https://updated.api-us1.com\\\"},\\\"metadata\\\":{\\\"plan\\\":\\\"enterprise\\\",\\\"account\\\":{\\\"name\\\":\\\"My Company\\\"}},\\\"state\\\":\\\"callable\\\",\\\"created_at\\\":\\\"2021-09-10T10:39:49.628Z\\\",\\\"updated_at\\\":\\\"2021-09-10T10:39:52.715Z\\\"},\\\"entityType\\\":\\\"Connection\\\"}\",\n    \"service\" : {\n      \"name\" : \"101 Data Solution\",\n      \"id\" : \"101-data-solution\"\n    },\n    \"success\" : true,\n    \"id\" : \"1d174c4d-fe9e-4377-a76c-6da22fe9cd87\",\n    \"execution_attempt\" : 3,\n    \"unified_api\" : \"crm\",\n    \"attempts\" : [ {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    } ],\n    \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n  }, {\n    \"retry_scheduled\" : true,\n    \"status_code\" : 200,\n    \"response_body\" : \"{\\\"status\\\":\\\"OK\\\"}\",\n    \"application_id\" : \"dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX\",\n    \"consumer_id\" : \"test_consumer_id\",\n    \"endpoint\" : \"https://example.com/my/webhook/endpoint\",\n    \"entity_type\" : \"Connection\",\n    \"event_type\" : \"vault.connection.updated\",\n    \"http_method\" : \"GET\",\n    \"request_body\" : \"{\\\"entity\\\":{\\\"id\\\":\\\"2222+test_user_id\\\",\\\"application_id\\\":\\\"2222\\\",\\\"consumer_id\\\":\\\"test_user_id\\\",\\\"name\\\":\\\"ActiveCampaign\\\",\\\"icon\\\":\\\"https://res.cloudinary.com/apideck/image/upload/v1529455970/catalog/activecampaign/icon128x128.png\\\",\\\"logo\\\":\\\"https://www.activecampaign.com/site/assets/social-2x.png\\\",\\\"unified_api\\\":\\\"crm\\\",\\\"service_id\\\":\\\"activecampaign\\\",\\\"auth_type\\\":\\\"apiKey\\\",\\\"enabled\\\":true,\\\"tag_line\\\":\\\"Integrated email marketing, marketing automation, and small business CRM. Save time while growing your business with sales automation.\\\",\\\"website\\\":\\\"https://www.activecampaign.com/\\\",\\\"settings\\\":{\\\"instance_url\\\":\\\"https://eu28.salesforce.com\\\",\\\"base_url\\\":\\\"https://updated.api-us1.com\\\"},\\\"metadata\\\":{\\\"plan\\\":\\\"enterprise\\\",\\\"account\\\":{\\\"name\\\":\\\"My Company\\\"}},\\\"state\\\":\\\"callable\\\",\\\"created_at\\\":\\\"2021-09-10T10:39:49.628Z\\\",\\\"updated_at\\\":\\\"2021-09-10T10:39:52.715Z\\\"},\\\"entityType\\\":\\\"Connection\\\"}\",\n    \"service\" : {\n      \"name\" : \"101 Data Solution\",\n      \"id\" : \"101-data-solution\"\n    },\n    \"success\" : true,\n    \"id\" : \"1d174c4d-fe9e-4377-a76c-6da22fe9cd87\",\n    \"execution_attempt\" : 3,\n    \"unified_api\" : \"crm\",\n    \"attempts\" : [ {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    } ],\n    \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n  }, {\n    \"retry_scheduled\" : true,\n    \"status_code\" : 200,\n    \"response_body\" : \"{\\\"status\\\":\\\"OK\\\"}\",\n    \"application_id\" : \"dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX\",\n    \"consumer_id\" : \"test_consumer_id\",\n    \"endpoint\" : \"https://example.com/my/webhook/endpoint\",\n    \"entity_type\" : \"Connection\",\n    \"event_type\" : \"vault.connection.updated\",\n    \"http_method\" : \"GET\",\n    \"request_body\" : \"{\\\"entity\\\":{\\\"id\\\":\\\"2222+test_user_id\\\",\\\"application_id\\\":\\\"2222\\\",\\\"consumer_id\\\":\\\"test_user_id\\\",\\\"name\\\":\\\"ActiveCampaign\\\",\\\"icon\\\":\\\"https://res.cloudinary.com/apideck/image/upload/v1529455970/catalog/activecampaign/icon128x128.png\\\",\\\"logo\\\":\\\"https://www.activecampaign.com/site/assets/social-2x.png\\\",\\\"unified_api\\\":\\\"crm\\\",\\\"service_id\\\":\\\"activecampaign\\\",\\\"auth_type\\\":\\\"apiKey\\\",\\\"enabled\\\":true,\\\"tag_line\\\":\\\"Integrated email marketing, marketing automation, and small business CRM. Save time while growing your business with sales automation.\\\",\\\"website\\\":\\\"https://www.activecampaign.com/\\\",\\\"settings\\\":{\\\"instance_url\\\":\\\"https://eu28.salesforce.com\\\",\\\"base_url\\\":\\\"https://updated.api-us1.com\\\"},\\\"metadata\\\":{\\\"plan\\\":\\\"enterprise\\\",\\\"account\\\":{\\\"name\\\":\\\"My Company\\\"}},\\\"state\\\":\\\"callable\\\",\\\"created_at\\\":\\\"2021-09-10T10:39:49.628Z\\\",\\\"updated_at\\\":\\\"2021-09-10T10:39:52.715Z\\\"},\\\"entityType\\\":\\\"Connection\\\"}\",\n    \"service\" : {\n      \"name\" : \"101 Data Solution\",\n      \"id\" : \"101-data-solution\"\n    },\n    \"success\" : true,\n    \"id\" : \"1d174c4d-fe9e-4377-a76c-6da22fe9cd87\",\n    \"execution_attempt\" : 3,\n    \"unified_api\" : \"crm\",\n    \"attempts\" : [ {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    } ],\n    \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n  }, {\n    \"retry_scheduled\" : true,\n    \"status_code\" : 200,\n    \"response_body\" : \"{\\\"status\\\":\\\"OK\\\"}\",\n    \"application_id\" : \"dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX\",\n    \"consumer_id\" : \"test_consumer_id\",\n    \"endpoint\" : \"https://example.com/my/webhook/endpoint\",\n    \"entity_type\" : \"Connection\",\n    \"event_type\" : \"vault.connection.updated\",\n    \"http_method\" : \"GET\",\n    \"request_body\" : \"{\\\"entity\\\":{\\\"id\\\":\\\"2222+test_user_id\\\",\\\"application_id\\\":\\\"2222\\\",\\\"consumer_id\\\":\\\"test_user_id\\\",\\\"name\\\":\\\"ActiveCampaign\\\",\\\"icon\\\":\\\"https://res.cloudinary.com/apideck/image/upload/v1529455970/catalog/activecampaign/icon128x128.png\\\",\\\"logo\\\":\\\"https://www.activecampaign.com/site/assets/social-2x.png\\\",\\\"unified_api\\\":\\\"crm\\\",\\\"service_id\\\":\\\"activecampaign\\\",\\\"auth_type\\\":\\\"apiKey\\\",\\\"enabled\\\":true,\\\"tag_line\\\":\\\"Integrated email marketing, marketing automation, and small business CRM. Save time while growing your business with sales automation.\\\",\\\"website\\\":\\\"https://www.activecampaign.com/\\\",\\\"settings\\\":{\\\"instance_url\\\":\\\"https://eu28.salesforce.com\\\",\\\"base_url\\\":\\\"https://updated.api-us1.com\\\"},\\\"metadata\\\":{\\\"plan\\\":\\\"enterprise\\\",\\\"account\\\":{\\\"name\\\":\\\"My Company\\\"}},\\\"state\\\":\\\"callable\\\",\\\"created_at\\\":\\\"2021-09-10T10:39:49.628Z\\\",\\\"updated_at\\\":\\\"2021-09-10T10:39:52.715Z\\\"},\\\"entityType\\\":\\\"Connection\\\"}\",\n    \"service\" : {\n      \"name\" : \"101 Data Solution\",\n      \"id\" : \"101-data-solution\"\n    },\n    \"success\" : true,\n    \"id\" : \"1d174c4d-fe9e-4377-a76c-6da22fe9cd87\",\n    \"execution_attempt\" : 3,\n    \"unified_api\" : \"crm\",\n    \"attempts\" : [ {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    } ],\n    \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n  }, {\n    \"retry_scheduled\" : true,\n    \"status_code\" : 200,\n    \"response_body\" : \"{\\\"status\\\":\\\"OK\\\"}\",\n    \"application_id\" : \"dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX\",\n    \"consumer_id\" : \"test_consumer_id\",\n    \"endpoint\" : \"https://example.com/my/webhook/endpoint\",\n    \"entity_type\" : \"Connection\",\n    \"event_type\" : \"vault.connection.updated\",\n    \"http_method\" : \"GET\",\n    \"request_body\" : \"{\\\"entity\\\":{\\\"id\\\":\\\"2222+test_user_id\\\",\\\"application_id\\\":\\\"2222\\\",\\\"consumer_id\\\":\\\"test_user_id\\\",\\\"name\\\":\\\"ActiveCampaign\\\",\\\"icon\\\":\\\"https://res.cloudinary.com/apideck/image/upload/v1529455970/catalog/activecampaign/icon128x128.png\\\",\\\"logo\\\":\\\"https://www.activecampaign.com/site/assets/social-2x.png\\\",\\\"unified_api\\\":\\\"crm\\\",\\\"service_id\\\":\\\"activecampaign\\\",\\\"auth_type\\\":\\\"apiKey\\\",\\\"enabled\\\":true,\\\"tag_line\\\":\\\"Integrated email marketing, marketing automation, and small business CRM. Save time while growing your business with sales automation.\\\",\\\"website\\\":\\\"https://www.activecampaign.com/\\\",\\\"settings\\\":{\\\"instance_url\\\":\\\"https://eu28.salesforce.com\\\",\\\"base_url\\\":\\\"https://updated.api-us1.com\\\"},\\\"metadata\\\":{\\\"plan\\\":\\\"enterprise\\\",\\\"account\\\":{\\\"name\\\":\\\"My Company\\\"}},\\\"state\\\":\\\"callable\\\",\\\"created_at\\\":\\\"2021-09-10T10:39:49.628Z\\\",\\\"updated_at\\\":\\\"2021-09-10T10:39:52.715Z\\\"},\\\"entityType\\\":\\\"Connection\\\"}\",\n    \"service\" : {\n      \"name\" : \"101 Data Solution\",\n      \"id\" : \"101-data-solution\"\n    },\n    \"success\" : true,\n    \"id\" : \"1d174c4d-fe9e-4377-a76c-6da22fe9cd87\",\n    \"execution_attempt\" : 3,\n    \"unified_api\" : \"crm\",\n    \"attempts\" : [ {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    } ],\n    \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n  } ],\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "79d7e918-1d4c-4ada-9e7c-f16b615be7ac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.980107Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "eventLogsAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/WebhookEventLog"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetWebhookEventLogsResponse",
            "x-graphql-type-name" : "EventLogList"
          }
        }
      }
    }
  } ]
}