{
  "mappings" : [ {
    "id" : "484651e6-5963-45f6-8277-dc07f6a62bc8",
    "name" : "Execute a webhook",
    "request" : {
      "urlPath" : "/webhook/webhooks/pjxt/x/z2y1",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "484651e6-5963-45f6-8277-dc07f6a62bc8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:04.695581Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksShortExecute",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "1000496a-44bd-4b85-b441-5b47751f5b21",
    "name" : "Execute a webhook",
    "request" : {
      "urlPath" : "/webhook/webhooks/p864/x/176r",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1000496a-44bd-4b85-b441-5b47751f5b21",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:04.695381Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksShortExecute",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "56df397b-59ca-4764-b815-ad0ed0500bfb",
    "name" : "Execute a webhook",
    "request" : {
      "urlPath" : "/webhook/webhooks/8d7c/x/62jt",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "56df397b-59ca-4764-b815-ad0ed0500bfb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:04.695177Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksShortExecute",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "bbe1078c-bd98-46e7-8259-7dc8dc368e72",
    "name" : "Execute a webhook",
    "request" : {
      "urlPath" : "/webhook/webhooks/e3jt/x/1040",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bbe1078c-bd98-46e7-8259-7dc8dc368e72",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:04.694993Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksShortExecute",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "e811cf7c-4d56-46f8-923c-1cdbc0ce498c",
    "name" : "Execute a webhook",
    "request" : {
      "urlPath" : "/webhook/webhooks/vg2l/x/8mw8",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e811cf7c-4d56-46f8-923c-1cdbc0ce498c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:04.694808Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksShortExecute",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "79680a2b-a776-442e-998f-473ce7017007",
    "name" : "Execute a webhook",
    "request" : {
      "urlPath" : "/webhook/webhooks/71c1/x/48g7",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"request_id\" : \"c6af9ac6-7b61-11e6-9a41-93e8deadbeef\",\n  \"status\" : \"OK\",\n  \"timestamp\" : \"2021-10-01T08:26:28.039Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "79680a2b-a776-442e-998f-473ce7017007",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:04.694599Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksShortExecute",
          "schema" : {
            "properties" : {
              "request_id" : {
                "description" : "UUID of the request received",
                "example" : "c6af9ac6-7b61-11e6-9a41-93e8deadbeef",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              },
              "timestamp" : {
                "description" : "ISO Datetime webhook event was received",
                "example" : "2021-10-01T08:26:28.039Z",
                "type" : "string"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "ExecuteWebhookResponse"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "629e76d4-7df5-4d57-801e-9d4f739554cb",
    "name" : "Execute a webhook",
    "request" : {
      "urlPath" : "/webhook/webhooks/rkdz/execute/3t12",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "629e76d4-7df5-4d57-801e-9d4f739554cb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:04.694417Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksExecute",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "f756e1be-5d91-486d-b74f-5e15318c9c6b",
    "name" : "Execute a webhook",
    "request" : {
      "urlPath" : "/webhook/webhooks/tneo/execute/dpp4",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f756e1be-5d91-486d-b74f-5e15318c9c6b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:04.694223Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksExecute",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "60393bfd-46a6-4676-9902-bc12343ad9f1",
    "name" : "Execute a webhook",
    "request" : {
      "urlPath" : "/webhook/webhooks/t29u/execute/m2we",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "60393bfd-46a6-4676-9902-bc12343ad9f1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:04.694009Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksExecute",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "4950946b-1e2f-4dc9-bd94-cf04c3f993e7",
    "name" : "Execute a webhook",
    "request" : {
      "urlPath" : "/webhook/webhooks/s8i3/execute/3g4r",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4950946b-1e2f-4dc9-bd94-cf04c3f993e7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:04.693815Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksExecute",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "49a84a41-09a6-4060-b4fb-288460b0fb88",
    "name" : "Execute a webhook",
    "request" : {
      "urlPath" : "/webhook/webhooks/7r3d/execute/165i",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "49a84a41-09a6-4060-b4fb-288460b0fb88",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:04.693623Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksExecute",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "4137d2ab-fe06-422d-88f5-60d517137c8c",
    "name" : "Execute a webhook",
    "request" : {
      "urlPath" : "/webhook/webhooks/1yt7/execute/3vdt",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"request_id\" : \"c6af9ac6-7b61-11e6-9a41-93e8deadbeef\",\n  \"status\" : \"OK\",\n  \"timestamp\" : \"2021-10-01T08:26:28.039Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4137d2ab-fe06-422d-88f5-60d517137c8c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:04.693411Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksExecute",
          "schema" : {
            "properties" : {
              "request_id" : {
                "description" : "UUID of the request received",
                "example" : "c6af9ac6-7b61-11e6-9a41-93e8deadbeef",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              },
              "timestamp" : {
                "description" : "ISO Datetime webhook event was received",
                "example" : "2021-10-01T08:26:28.039Z",
                "type" : "string"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "ExecuteWebhookResponse"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "af1d214d-6842-4a87-8691-dc560af0cddb",
    "name" : "Update webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks/bw1j",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "af1d214d-6842-4a87-8691-dc560af0cddb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:04.69318Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "70f3229c-c19b-400a-b7cd-fe595a2b7e41",
    "name" : "Update webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks/l8s0",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "70f3229c-c19b-400a-b7cd-fe595a2b7e41",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:04.69305Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "ec5692ec-09ad-42b2-962f-a7871970dfa7",
    "name" : "Update webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks/06bm",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ec5692ec-09ad-42b2-962f-a7871970dfa7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:04.692901Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "34dd2b17-26d9-4445-87d6-5f2b5372dc13",
    "name" : "Update webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks/6k3b",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "34dd2b17-26d9-4445-87d6-5f2b5372dc13",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:04.692774Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "fa05dba0-6290-4051-881b-fc6bfb90307b",
    "name" : "Update webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks/59ss",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fa05dba0-6290-4051-881b-fc6bfb90307b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:04.692653Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "87f92e71-3d4f-4f2c-b71e-89e0ec578cda",
    "name" : "Update webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks/9k0e",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"execute_base_url\" : \"https://unify.apideck.com/webhook/webhooks/1234/execute\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"A description\",\n    \"id\" : \"1234\",\n    \"disabled_reason\" : \"retry_limit\",\n    \"delivery_url\" : \"https://example.com/my/webhook/endpoint\",\n    \"events\" : [ \"vault.connection.created\", \"vault.connection.updated\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"enabled\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "87f92e71-3d4f-4f2c-b71e-89e0ec578cda",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:04.692507Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Webhook"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateWebhookResponse"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "e8c8f0d1-9edc-4c7c-b5e2-b195dcbfdbeb",
    "name" : "Get webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks/40w0",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e8c8f0d1-9edc-4c7c-b5e2-b195dcbfdbeb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:04.692363Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "1b30f342-59cb-4518-a1f3-fb26ca16f659",
    "name" : "Get webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks/lw05",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1b30f342-59cb-4518-a1f3-fb26ca16f659",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:04.692236Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "32e29092-c79c-4b90-bea7-ff6deefe3bf6",
    "name" : "Get webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks/w9c4",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "32e29092-c79c-4b90-bea7-ff6deefe3bf6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:04.69209Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "68d46254-dd41-43b4-85c6-2ab7fdd71513",
    "name" : "Get webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks/i7d6",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "68d46254-dd41-43b4-85c6-2ab7fdd71513",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:04.691963Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "275737a6-673f-4ec8-a49d-6b8b46159715",
    "name" : "Get webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks/y6k5",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "275737a6-673f-4ec8-a49d-6b8b46159715",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:04.691836Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "27e915ee-bb56-4c49-a0d6-06b4f7953041",
    "name" : "Get webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks/b319",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"execute_base_url\" : \"https://unify.apideck.com/webhook/webhooks/1234/execute\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"A description\",\n    \"id\" : \"1234\",\n    \"disabled_reason\" : \"retry_limit\",\n    \"delivery_url\" : \"https://example.com/my/webhook/endpoint\",\n    \"events\" : [ \"vault.connection.created\", \"vault.connection.updated\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"enabled\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "27e915ee-bb56-4c49-a0d6-06b4f7953041",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:04.691685Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Webhook"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetWebhookResponse",
            "x-graphql-type-name" : "Webhook"
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "5291dd13-db94-4de4-9259-a781858a7ac8",
    "name" : "Delete webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks/e1q9",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5291dd13-db94-4de4-9259-a781858a7ac8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:04.691529Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "48b4ac01-65fd-40b4-ad43-dfb89595e6ce",
    "name" : "Delete webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks/e724",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "48b4ac01-65fd-40b4-ad43-dfb89595e6ce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:04.691398Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "dfdba83d-5cf0-4f89-8026-7cbb9567ea9a",
    "name" : "Delete webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks/3275",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dfdba83d-5cf0-4f89-8026-7cbb9567ea9a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:04.691239Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "16ea352e-b494-4311-8271-71fe0e79574f",
    "name" : "Delete webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks/5rf7",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "16ea352e-b494-4311-8271-71fe0e79574f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:04.691103Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "50b1fdfc-6e87-42c8-98f1-02673a2420d1",
    "name" : "Delete webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks/55w2",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "50b1fdfc-6e87-42c8-98f1-02673a2420d1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:04.690959Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "f8b11520-4090-4343-ac4e-887a143e1d35",
    "name" : "Delete webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks/f85a",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"execute_base_url\" : \"https://unify.apideck.com/webhook/webhooks/1234/execute\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"A description\",\n    \"id\" : \"1234\",\n    \"disabled_reason\" : \"retry_limit\",\n    \"delivery_url\" : \"https://example.com/my/webhook/endpoint\",\n    \"events\" : [ \"vault.connection.created\", \"vault.connection.updated\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"enabled\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f8b11520-4090-4343-ac4e-887a143e1d35",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:04.690792Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Webhook"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "DeleteWebhookResponse"
          }
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "8b7822c9-74bc-4f0c-80fd-26ffc398a8e2",
    "name" : "Create webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8b7822c9-74bc-4f0c-80fd-26ffc398a8e2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:04.690576Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "9073fb90-9430-4581-997f-ece87b6130cd",
    "name" : "Create webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9073fb90-9430-4581-997f-ece87b6130cd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:04.690505Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "eacb52ef-e4bb-4b0b-b992-b812cff05a4b",
    "name" : "Create webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eacb52ef-e4bb-4b0b-b992-b812cff05a4b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:04.690412Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "f2db6b27-d4b4-4bf2-ad3a-38c7a09d7808",
    "name" : "Create webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f2db6b27-d4b4-4bf2-ad3a-38c7a09d7808",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:04.69034Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "c5e3967a-9e99-457d-aaca-d32124a38834",
    "name" : "Create webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c5e3967a-9e99-457d-aaca-d32124a38834",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:04.690266Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "7dcfc8be-2135-44f1-acba-6fde3d483261",
    "name" : "Create webhook subscription",
    "request" : {
      "urlPath" : "/webhook/webhooks",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"execute_base_url\" : \"https://unify.apideck.com/webhook/webhooks/1234/execute\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"A description\",\n    \"id\" : \"1234\",\n    \"disabled_reason\" : \"retry_limit\",\n    \"delivery_url\" : \"https://example.com/my/webhook/endpoint\",\n    \"events\" : [ \"vault.connection.created\", \"vault.connection.updated\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"enabled\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7dcfc8be-2135-44f1-acba-6fde3d483261",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:04.690146Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Webhook"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateWebhookResponse"
          }
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "446488c6-1002-4c9e-b778-571fc22a56a8",
    "name" : "List webhook subscriptions",
    "request" : {
      "urlPath" : "/webhook/webhooks",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "446488c6-1002-4c9e-b778-571fc22a56a8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:04.690034Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "fb9409a5-7eda-4868-8f4c-c16cc4005236",
    "name" : "List webhook subscriptions",
    "request" : {
      "urlPath" : "/webhook/webhooks",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fb9409a5-7eda-4868-8f4c-c16cc4005236",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:04.68994Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "7a33198f-91a0-494b-a1eb-9cc8e85ccd10",
    "name" : "List webhook subscriptions",
    "request" : {
      "urlPath" : "/webhook/webhooks",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7a33198f-91a0-494b-a1eb-9cc8e85ccd10",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:04.689819Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "9dade6dc-cfa3-47a4-b043-a7a22d896e33",
    "name" : "List webhook subscriptions",
    "request" : {
      "urlPath" : "/webhook/webhooks",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9dade6dc-cfa3-47a4-b043-a7a22d896e33",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:04.689715Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "d884a130-fd73-468a-a463-52b040c99306",
    "name" : "List webhook subscriptions",
    "request" : {
      "urlPath" : "/webhook/webhooks",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d884a130-fd73-468a-a463-52b040c99306",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:04.689565Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "49af6cf8-b7c0-447f-a36a-2583d5ecc6f0",
    "name" : "List webhook subscriptions",
    "request" : {
      "urlPath" : "/webhook/webhooks",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"execute_base_url\" : \"https://unify.apideck.com/webhook/webhooks/1234/execute\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"A description\",\n    \"id\" : \"1234\",\n    \"disabled_reason\" : \"retry_limit\",\n    \"delivery_url\" : \"https://example.com/my/webhook/endpoint\",\n    \"events\" : [ \"vault.connection.created\", \"vault.connection.updated\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"enabled\"\n  }, {\n    \"execute_base_url\" : \"https://unify.apideck.com/webhook/webhooks/1234/execute\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"A description\",\n    \"id\" : \"1234\",\n    \"disabled_reason\" : \"retry_limit\",\n    \"delivery_url\" : \"https://example.com/my/webhook/endpoint\",\n    \"events\" : [ \"vault.connection.created\", \"vault.connection.updated\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"enabled\"\n  } ],\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "49af6cf8-b7c0-447f-a36a-2583d5ecc6f0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:04.689452Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/Webhook"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetWebhooksResponse",
            "x-graphql-type-name" : "WebhookList"
          }
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "6fe2d7ee-fed0-411a-9214-a4671f02a172",
    "name" : "Resolve and Execute a connection webhook",
    "request" : {
      "urlPath" : "/webhook/w/6634/6den",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6fe2d7ee-fed0-411a-9214-a4671f02a172",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:04.689248Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksResolve",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 42
  }, {
    "id" : "cebde041-dc4b-48d0-beac-e3d1a3095b27",
    "name" : "Resolve and Execute a connection webhook",
    "request" : {
      "urlPath" : "/webhook/w/2249/prim",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cebde041-dc4b-48d0-beac-e3d1a3095b27",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:04.689038Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksResolve",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 43
  }, {
    "id" : "771b4665-d204-4980-a28a-dc9a4eadb916",
    "name" : "Resolve and Execute a connection webhook",
    "request" : {
      "urlPath" : "/webhook/w/96ww/6h75",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "771b4665-d204-4980-a28a-dc9a4eadb916",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:04.688805Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksResolve",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 44
  }, {
    "id" : "40defd2d-b668-4cd7-9831-e05ed319e3da",
    "name" : "Resolve and Execute a connection webhook",
    "request" : {
      "urlPath" : "/webhook/w/u33n/553u",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "40defd2d-b668-4cd7-9831-e05ed319e3da",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:04.688591Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksResolve",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 45
  }, {
    "id" : "faf990fb-dcbc-4695-a9f3-f647f83d762f",
    "name" : "Resolve and Execute a connection webhook",
    "request" : {
      "urlPath" : "/webhook/w/ywu3/o05q",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "faf990fb-dcbc-4695-a9f3-f647f83d762f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:04.68838Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksResolve",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 46
  }, {
    "id" : "47f62a13-5552-4a05-8fff-de53d200401c",
    "name" : "Resolve and Execute a connection webhook",
    "request" : {
      "urlPath" : "/webhook/w/u748/64r5",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"request_id\" : \"c6af9ac6-7b61-11e6-9a41-93e8deadbeef\",\n  \"status\" : \"OK\",\n  \"timestamp\" : \"2021-10-01T08:26:28.039Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "47f62a13-5552-4a05-8fff-de53d200401c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:04.688131Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webhooksResolve",
          "schema" : {
            "properties" : {
              "request_id" : {
                "description" : "UUID of the request received",
                "example" : "c6af9ac6-7b61-11e6-9a41-93e8deadbeef",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              },
              "timestamp" : {
                "description" : "ISO Datetime webhook event was received",
                "example" : "2021-10-01T08:26:28.039Z",
                "type" : "string"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "ResolveWebhookResponse"
          }
        }
      }
    },
    "insertionIndex" : 47
  }, {
    "id" : "d757edb7-351c-46a4-8e9d-532aea24f7ea",
    "name" : "List event logs",
    "request" : {
      "urlPath" : "/webhook/logs",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d757edb7-351c-46a4-8e9d-532aea24f7ea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:04.687846Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "eventLogsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 48
  }, {
    "id" : "2bccfa07-4f05-49f1-b463-9328efeb7f8b",
    "name" : "List event logs",
    "request" : {
      "urlPath" : "/webhook/logs",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2bccfa07-4f05-49f1-b463-9328efeb7f8b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:04.687734Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "eventLogsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 49
  }, {
    "id" : "1d4a4e5a-338f-4cf5-adc8-a9fe683d42fc",
    "name" : "List event logs",
    "request" : {
      "urlPath" : "/webhook/logs",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1d4a4e5a-338f-4cf5-adc8-a9fe683d42fc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:04.687592Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "eventLogsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 50
  }, {
    "id" : "3d16012e-b10d-4ceb-9c05-0943357d946c",
    "name" : "List event logs",
    "request" : {
      "urlPath" : "/webhook/logs",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3d16012e-b10d-4ceb-9c05-0943357d946c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:04.68748Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "eventLogsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 51
  }, {
    "id" : "6f862178-ddf0-4f89-a8ea-5c43972692c6",
    "name" : "List event logs",
    "request" : {
      "urlPath" : "/webhook/logs",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6f862178-ddf0-4f89-a8ea-5c43972692c6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:04.687368Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "eventLogsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 52
  }, {
    "id" : "f480700b-a7a4-42a4-bd87-e14873a38211",
    "name" : "List event logs",
    "request" : {
      "urlPath" : "/webhook/logs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"retry_scheduled\" : true,\n    \"status_code\" : 200,\n    \"response_body\" : \"{\\\"status\\\":\\\"OK\\\"}\",\n    \"application_id\" : \"dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX\",\n    \"consumer_id\" : \"test_consumer_id\",\n    \"endpoint\" : \"https://example.com/my/webhook/endpoint\",\n    \"entity_type\" : \"Connection\",\n    \"event_type\" : \"vault.connection.updated\",\n    \"http_method\" : \"GET\",\n    \"request_body\" : \"{\\\"entity\\\":{\\\"id\\\":\\\"2222+test_user_id\\\",\\\"application_id\\\":\\\"2222\\\",\\\"consumer_id\\\":\\\"test_user_id\\\",\\\"name\\\":\\\"ActiveCampaign\\\",\\\"icon\\\":\\\"https://res.cloudinary.com/apideck/image/upload/v1529455970/catalog/activecampaign/icon128x128.png\\\",\\\"logo\\\":\\\"https://www.activecampaign.com/site/assets/social-2x.png\\\",\\\"unified_api\\\":\\\"crm\\\",\\\"service_id\\\":\\\"activecampaign\\\",\\\"auth_type\\\":\\\"apiKey\\\",\\\"enabled\\\":true,\\\"tag_line\\\":\\\"Integrated email marketing, marketing automation, and small business CRM. Save time while growing your business with sales automation.\\\",\\\"website\\\":\\\"https://www.activecampaign.com/\\\",\\\"settings\\\":{\\\"instance_url\\\":\\\"https://eu28.salesforce.com\\\",\\\"base_url\\\":\\\"https://updated.api-us1.com\\\"},\\\"metadata\\\":{\\\"plan\\\":\\\"enterprise\\\",\\\"account\\\":{\\\"name\\\":\\\"My Company\\\"}},\\\"state\\\":\\\"callable\\\",\\\"created_at\\\":\\\"2021-09-10T10:39:49.628Z\\\",\\\"updated_at\\\":\\\"2021-09-10T10:39:52.715Z\\\"},\\\"entityType\\\":\\\"Connection\\\"}\",\n    \"service\" : {\n      \"name\" : \"101 Data Solution\",\n      \"id\" : \"101-data-solution\"\n    },\n    \"success\" : true,\n    \"id\" : \"1d174c4d-fe9e-4377-a76c-6da22fe9cd87\",\n    \"execution_attempt\" : 3,\n    \"unified_api\" : \"crm\",\n    \"attempts\" : [ {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    } ],\n    \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n  }, {\n    \"retry_scheduled\" : true,\n    \"status_code\" : 200,\n    \"response_body\" : \"{\\\"status\\\":\\\"OK\\\"}\",\n    \"application_id\" : \"dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX\",\n    \"consumer_id\" : \"test_consumer_id\",\n    \"endpoint\" : \"https://example.com/my/webhook/endpoint\",\n    \"entity_type\" : \"Connection\",\n    \"event_type\" : \"vault.connection.updated\",\n    \"http_method\" : \"GET\",\n    \"request_body\" : \"{\\\"entity\\\":{\\\"id\\\":\\\"2222+test_user_id\\\",\\\"application_id\\\":\\\"2222\\\",\\\"consumer_id\\\":\\\"test_user_id\\\",\\\"name\\\":\\\"ActiveCampaign\\\",\\\"icon\\\":\\\"https://res.cloudinary.com/apideck/image/upload/v1529455970/catalog/activecampaign/icon128x128.png\\\",\\\"logo\\\":\\\"https://www.activecampaign.com/site/assets/social-2x.png\\\",\\\"unified_api\\\":\\\"crm\\\",\\\"service_id\\\":\\\"activecampaign\\\",\\\"auth_type\\\":\\\"apiKey\\\",\\\"enabled\\\":true,\\\"tag_line\\\":\\\"Integrated email marketing, marketing automation, and small business CRM. Save time while growing your business with sales automation.\\\",\\\"website\\\":\\\"https://www.activecampaign.com/\\\",\\\"settings\\\":{\\\"instance_url\\\":\\\"https://eu28.salesforce.com\\\",\\\"base_url\\\":\\\"https://updated.api-us1.com\\\"},\\\"metadata\\\":{\\\"plan\\\":\\\"enterprise\\\",\\\"account\\\":{\\\"name\\\":\\\"My Company\\\"}},\\\"state\\\":\\\"callable\\\",\\\"created_at\\\":\\\"2021-09-10T10:39:49.628Z\\\",\\\"updated_at\\\":\\\"2021-09-10T10:39:52.715Z\\\"},\\\"entityType\\\":\\\"Connection\\\"}\",\n    \"service\" : {\n      \"name\" : \"101 Data Solution\",\n      \"id\" : \"101-data-solution\"\n    },\n    \"success\" : true,\n    \"id\" : \"1d174c4d-fe9e-4377-a76c-6da22fe9cd87\",\n    \"execution_attempt\" : 3,\n    \"unified_api\" : \"crm\",\n    \"attempts\" : [ {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    } ],\n    \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n  }, {\n    \"retry_scheduled\" : true,\n    \"status_code\" : 200,\n    \"response_body\" : \"{\\\"status\\\":\\\"OK\\\"}\",\n    \"application_id\" : \"dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX\",\n    \"consumer_id\" : \"test_consumer_id\",\n    \"endpoint\" : \"https://example.com/my/webhook/endpoint\",\n    \"entity_type\" : \"Connection\",\n    \"event_type\" : \"vault.connection.updated\",\n    \"http_method\" : \"GET\",\n    \"request_body\" : \"{\\\"entity\\\":{\\\"id\\\":\\\"2222+test_user_id\\\",\\\"application_id\\\":\\\"2222\\\",\\\"consumer_id\\\":\\\"test_user_id\\\",\\\"name\\\":\\\"ActiveCampaign\\\",\\\"icon\\\":\\\"https://res.cloudinary.com/apideck/image/upload/v1529455970/catalog/activecampaign/icon128x128.png\\\",\\\"logo\\\":\\\"https://www.activecampaign.com/site/assets/social-2x.png\\\",\\\"unified_api\\\":\\\"crm\\\",\\\"service_id\\\":\\\"activecampaign\\\",\\\"auth_type\\\":\\\"apiKey\\\",\\\"enabled\\\":true,\\\"tag_line\\\":\\\"Integrated email marketing, marketing automation, and small business CRM. Save time while growing your business with sales automation.\\\",\\\"website\\\":\\\"https://www.activecampaign.com/\\\",\\\"settings\\\":{\\\"instance_url\\\":\\\"https://eu28.salesforce.com\\\",\\\"base_url\\\":\\\"https://updated.api-us1.com\\\"},\\\"metadata\\\":{\\\"plan\\\":\\\"enterprise\\\",\\\"account\\\":{\\\"name\\\":\\\"My Company\\\"}},\\\"state\\\":\\\"callable\\\",\\\"created_at\\\":\\\"2021-09-10T10:39:49.628Z\\\",\\\"updated_at\\\":\\\"2021-09-10T10:39:52.715Z\\\"},\\\"entityType\\\":\\\"Connection\\\"}\",\n    \"service\" : {\n      \"name\" : \"101 Data Solution\",\n      \"id\" : \"101-data-solution\"\n    },\n    \"success\" : true,\n    \"id\" : \"1d174c4d-fe9e-4377-a76c-6da22fe9cd87\",\n    \"execution_attempt\" : 3,\n    \"unified_api\" : \"crm\",\n    \"attempts\" : [ {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    } ],\n    \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n  }, {\n    \"retry_scheduled\" : true,\n    \"status_code\" : 200,\n    \"response_body\" : \"{\\\"status\\\":\\\"OK\\\"}\",\n    \"application_id\" : \"dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX\",\n    \"consumer_id\" : \"test_consumer_id\",\n    \"endpoint\" : \"https://example.com/my/webhook/endpoint\",\n    \"entity_type\" : \"Connection\",\n    \"event_type\" : \"vault.connection.updated\",\n    \"http_method\" : \"GET\",\n    \"request_body\" : \"{\\\"entity\\\":{\\\"id\\\":\\\"2222+test_user_id\\\",\\\"application_id\\\":\\\"2222\\\",\\\"consumer_id\\\":\\\"test_user_id\\\",\\\"name\\\":\\\"ActiveCampaign\\\",\\\"icon\\\":\\\"https://res.cloudinary.com/apideck/image/upload/v1529455970/catalog/activecampaign/icon128x128.png\\\",\\\"logo\\\":\\\"https://www.activecampaign.com/site/assets/social-2x.png\\\",\\\"unified_api\\\":\\\"crm\\\",\\\"service_id\\\":\\\"activecampaign\\\",\\\"auth_type\\\":\\\"apiKey\\\",\\\"enabled\\\":true,\\\"tag_line\\\":\\\"Integrated email marketing, marketing automation, and small business CRM. Save time while growing your business with sales automation.\\\",\\\"website\\\":\\\"https://www.activecampaign.com/\\\",\\\"settings\\\":{\\\"instance_url\\\":\\\"https://eu28.salesforce.com\\\",\\\"base_url\\\":\\\"https://updated.api-us1.com\\\"},\\\"metadata\\\":{\\\"plan\\\":\\\"enterprise\\\",\\\"account\\\":{\\\"name\\\":\\\"My Company\\\"}},\\\"state\\\":\\\"callable\\\",\\\"created_at\\\":\\\"2021-09-10T10:39:49.628Z\\\",\\\"updated_at\\\":\\\"2021-09-10T10:39:52.715Z\\\"},\\\"entityType\\\":\\\"Connection\\\"}\",\n    \"service\" : {\n      \"name\" : \"101 Data Solution\",\n      \"id\" : \"101-data-solution\"\n    },\n    \"success\" : true,\n    \"id\" : \"1d174c4d-fe9e-4377-a76c-6da22fe9cd87\",\n    \"execution_attempt\" : 3,\n    \"unified_api\" : \"crm\",\n    \"attempts\" : [ {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    } ],\n    \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n  }, {\n    \"retry_scheduled\" : true,\n    \"status_code\" : 200,\n    \"response_body\" : \"{\\\"status\\\":\\\"OK\\\"}\",\n    \"application_id\" : \"dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX\",\n    \"consumer_id\" : \"test_consumer_id\",\n    \"endpoint\" : \"https://example.com/my/webhook/endpoint\",\n    \"entity_type\" : \"Connection\",\n    \"event_type\" : \"vault.connection.updated\",\n    \"http_method\" : \"GET\",\n    \"request_body\" : \"{\\\"entity\\\":{\\\"id\\\":\\\"2222+test_user_id\\\",\\\"application_id\\\":\\\"2222\\\",\\\"consumer_id\\\":\\\"test_user_id\\\",\\\"name\\\":\\\"ActiveCampaign\\\",\\\"icon\\\":\\\"https://res.cloudinary.com/apideck/image/upload/v1529455970/catalog/activecampaign/icon128x128.png\\\",\\\"logo\\\":\\\"https://www.activecampaign.com/site/assets/social-2x.png\\\",\\\"unified_api\\\":\\\"crm\\\",\\\"service_id\\\":\\\"activecampaign\\\",\\\"auth_type\\\":\\\"apiKey\\\",\\\"enabled\\\":true,\\\"tag_line\\\":\\\"Integrated email marketing, marketing automation, and small business CRM. Save time while growing your business with sales automation.\\\",\\\"website\\\":\\\"https://www.activecampaign.com/\\\",\\\"settings\\\":{\\\"instance_url\\\":\\\"https://eu28.salesforce.com\\\",\\\"base_url\\\":\\\"https://updated.api-us1.com\\\"},\\\"metadata\\\":{\\\"plan\\\":\\\"enterprise\\\",\\\"account\\\":{\\\"name\\\":\\\"My Company\\\"}},\\\"state\\\":\\\"callable\\\",\\\"created_at\\\":\\\"2021-09-10T10:39:49.628Z\\\",\\\"updated_at\\\":\\\"2021-09-10T10:39:52.715Z\\\"},\\\"entityType\\\":\\\"Connection\\\"}\",\n    \"service\" : {\n      \"name\" : \"101 Data Solution\",\n      \"id\" : \"101-data-solution\"\n    },\n    \"success\" : true,\n    \"id\" : \"1d174c4d-fe9e-4377-a76c-6da22fe9cd87\",\n    \"execution_attempt\" : 3,\n    \"unified_api\" : \"crm\",\n    \"attempts\" : [ {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    } ],\n    \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n  }, {\n    \"retry_scheduled\" : true,\n    \"status_code\" : 200,\n    \"response_body\" : \"{\\\"status\\\":\\\"OK\\\"}\",\n    \"application_id\" : \"dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX\",\n    \"consumer_id\" : \"test_consumer_id\",\n    \"endpoint\" : \"https://example.com/my/webhook/endpoint\",\n    \"entity_type\" : \"Connection\",\n    \"event_type\" : \"vault.connection.updated\",\n    \"http_method\" : \"GET\",\n    \"request_body\" : \"{\\\"entity\\\":{\\\"id\\\":\\\"2222+test_user_id\\\",\\\"application_id\\\":\\\"2222\\\",\\\"consumer_id\\\":\\\"test_user_id\\\",\\\"name\\\":\\\"ActiveCampaign\\\",\\\"icon\\\":\\\"https://res.cloudinary.com/apideck/image/upload/v1529455970/catalog/activecampaign/icon128x128.png\\\",\\\"logo\\\":\\\"https://www.activecampaign.com/site/assets/social-2x.png\\\",\\\"unified_api\\\":\\\"crm\\\",\\\"service_id\\\":\\\"activecampaign\\\",\\\"auth_type\\\":\\\"apiKey\\\",\\\"enabled\\\":true,\\\"tag_line\\\":\\\"Integrated email marketing, marketing automation, and small business CRM. Save time while growing your business with sales automation.\\\",\\\"website\\\":\\\"https://www.activecampaign.com/\\\",\\\"settings\\\":{\\\"instance_url\\\":\\\"https://eu28.salesforce.com\\\",\\\"base_url\\\":\\\"https://updated.api-us1.com\\\"},\\\"metadata\\\":{\\\"plan\\\":\\\"enterprise\\\",\\\"account\\\":{\\\"name\\\":\\\"My Company\\\"}},\\\"state\\\":\\\"callable\\\",\\\"created_at\\\":\\\"2021-09-10T10:39:49.628Z\\\",\\\"updated_at\\\":\\\"2021-09-10T10:39:52.715Z\\\"},\\\"entityType\\\":\\\"Connection\\\"}\",\n    \"service\" : {\n      \"name\" : \"101 Data Solution\",\n      \"id\" : \"101-data-solution\"\n    },\n    \"success\" : true,\n    \"id\" : \"1d174c4d-fe9e-4377-a76c-6da22fe9cd87\",\n    \"execution_attempt\" : 3,\n    \"unified_api\" : \"crm\",\n    \"attempts\" : [ {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    } ],\n    \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n  }, {\n    \"retry_scheduled\" : true,\n    \"status_code\" : 200,\n    \"response_body\" : \"{\\\"status\\\":\\\"OK\\\"}\",\n    \"application_id\" : \"dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX\",\n    \"consumer_id\" : \"test_consumer_id\",\n    \"endpoint\" : \"https://example.com/my/webhook/endpoint\",\n    \"entity_type\" : \"Connection\",\n    \"event_type\" : \"vault.connection.updated\",\n    \"http_method\" : \"GET\",\n    \"request_body\" : \"{\\\"entity\\\":{\\\"id\\\":\\\"2222+test_user_id\\\",\\\"application_id\\\":\\\"2222\\\",\\\"consumer_id\\\":\\\"test_user_id\\\",\\\"name\\\":\\\"ActiveCampaign\\\",\\\"icon\\\":\\\"https://res.cloudinary.com/apideck/image/upload/v1529455970/catalog/activecampaign/icon128x128.png\\\",\\\"logo\\\":\\\"https://www.activecampaign.com/site/assets/social-2x.png\\\",\\\"unified_api\\\":\\\"crm\\\",\\\"service_id\\\":\\\"activecampaign\\\",\\\"auth_type\\\":\\\"apiKey\\\",\\\"enabled\\\":true,\\\"tag_line\\\":\\\"Integrated email marketing, marketing automation, and small business CRM. Save time while growing your business with sales automation.\\\",\\\"website\\\":\\\"https://www.activecampaign.com/\\\",\\\"settings\\\":{\\\"instance_url\\\":\\\"https://eu28.salesforce.com\\\",\\\"base_url\\\":\\\"https://updated.api-us1.com\\\"},\\\"metadata\\\":{\\\"plan\\\":\\\"enterprise\\\",\\\"account\\\":{\\\"name\\\":\\\"My Company\\\"}},\\\"state\\\":\\\"callable\\\",\\\"created_at\\\":\\\"2021-09-10T10:39:49.628Z\\\",\\\"updated_at\\\":\\\"2021-09-10T10:39:52.715Z\\\"},\\\"entityType\\\":\\\"Connection\\\"}\",\n    \"service\" : {\n      \"name\" : \"101 Data Solution\",\n      \"id\" : \"101-data-solution\"\n    },\n    \"success\" : true,\n    \"id\" : \"1d174c4d-fe9e-4377-a76c-6da22fe9cd87\",\n    \"execution_attempt\" : 3,\n    \"unified_api\" : \"crm\",\n    \"attempts\" : [ {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    }, {\n      \"status_code\" : 200,\n      \"success\" : true,\n      \"execution_attempt\" : 3,\n      \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n    } ],\n    \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n  } ],\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f480700b-a7a4-42a4-bd87-e14873a38211",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:04.687202Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "eventLogsAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/WebhookEventLog"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetWebhookEventLogsResponse",
            "x-graphql-type-name" : "EventLogList"
          }
        }
      }
    },
    "insertionIndex" : 53
  } ]
}