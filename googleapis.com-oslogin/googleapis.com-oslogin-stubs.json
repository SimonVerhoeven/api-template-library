{
  "mappings" : [ {
    "id" : "61697092-58b7-4dab-b593-f1d0edf664f9",
    "name" : "Adds an SSH public key and returns the profile information. Default POSIX accoun...",
    "request" : {
      "urlPath" : "/v1beta/54d2dm33ijcohrqn6svl41dj7y2449zfoahnehh9ncbhfpqi65umk2i1fnimrxi1x35d:importSshPublicKey",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"loginProfile\" : {\n    \"sshPublicKeys\" : { },\n    \"name\" : \"Tamiko Pagac\",\n    \"posixAccounts\" : [ {\n      \"accountId\" : \"xz66\",\n      \"uid\" : \"ed6g\",\n      \"systemId\" : \"40rs\",\n      \"gecos\" : \"3vg0i35q9yby6tv1v8r9r8ngg6zsvyocftwydzu16os9zurhh0uihnrv3if8n3pnt5l1m9nfsuzzjtqvjmnpuo6ivo68kdec14jqhgmqu00vraep50uzg6hwjr517rrsx6ujn4qze2ihpilsyr1hqu0\",\n      \"gid\" : \"p63y\",\n      \"homeDirectory\" : \"hajl9jpqg4u64yf0jskhev503u6x2wohk1mbrvbtt0u3iakplw\",\n      \"operatingSystemType\" : \"LINUX\",\n      \"shell\" : \"gxmwxb1\",\n      \"name\" : \"Magali Orn DDS\",\n      \"primary\" : false,\n      \"username\" : \"yasmin.weissnat\"\n    }, {\n      \"accountId\" : \"5z5v\",\n      \"uid\" : \"4326\",\n      \"systemId\" : \"5vf5\",\n      \"gecos\" : \"ufn9uy06auocwgpvjz6shx5okwpg904vdx43b28takuhs1rmdg3ojtjzy2hn89nhmf1qvf1ozrhrrjk1875lpf9nmrvhf6b2bslv78lnofb1wrclv8kcqk7xhks4vqcuzi\",\n      \"gid\" : \"n3o8\",\n      \"homeDirectory\" : \"7zs9ms7sgdhdrfddztvpyab3dxzppnd0glkgz9qt96fyiho0d3if8pigezv5koj9d0wif066c69zlxeq3k35nwpm8ut3xxztosnm3slqedl35hkwktikdnhcq9ifps83xeuwji21m19zrjhax1qbkmc09gawsb1nfx1pbedjo85q580tl4w7mks\",\n      \"operatingSystemType\" : \"LINUX\",\n      \"shell\" : \"yz7qn6zah2r6kt7vxk9e7fgfphv2l0byinvdfs6sfhkni2utqyxa40iatdbk8vab6se9p9n1rq4n79l3m7ou3y8vadjazte43mf642nfxerc5cnn\",\n      \"name\" : \"Jewel Zieme V\",\n      \"primary\" : false,\n      \"username\" : \"bryon.kreiger\"\n    }, {\n      \"accountId\" : \"spr9\",\n      \"uid\" : \"3w7x\",\n      \"systemId\" : \"m1bk\",\n      \"gecos\" : \"pce85cbbbr2o8r5tfj479zt8rwxunn7ce9m46833bf9agnoir2ey\",\n      \"gid\" : \"7z3f\",\n      \"homeDirectory\" : \"qmdig9pf0x0rkasogmq2z5aoh32vucq86lb3fofc5cxzk77ldts9n93pkca99qrmv1z4\",\n      \"operatingSystemType\" : \"WINDOWS\",\n      \"shell\" : \"tt2lq0npjkban9kvvxbecqu5xg4vrmapc362vt0zme2v4zczai0qg3wt131aqeoq1rl5bqpi8ry5c2peln5u9u34efoq4ldf823rxx8yhv11bi2y8cgntski3ox0mcwwcqonm4w78q0pikgc7t072ljveiormyyt6d46gvr1zw8ck8i\",\n      \"name\" : \"Dr. Tonie Armstrong\",\n      \"primary\" : true,\n      \"username\" : \"luciana.kreiger\"\n    }, {\n      \"accountId\" : \"z18d\",\n      \"uid\" : \"xk98\",\n      \"systemId\" : \"510e\",\n      \"gecos\" : \"904i71tbs9fl2v2w2ydvzh7xphp5nd2uh96um483l0v0nj8bvy6vez7takfdu0wqffpsu17xv416ip350y7o5f929bqulr48ll5k8j9qcb18niaf\",\n      \"gid\" : \"tzld\",\n      \"homeDirectory\" : \"blsriq148h8l3ci6kfqqacooe0z2yw3vnueuk6q9ckl2jwj\",\n      \"operatingSystemType\" : \"OPERATING_SYSTEM_TYPE_UNSPECIFIED\",\n      \"shell\" : \"ctlf3k0weo3egc94z0vw7egchd5w4g8mnbjcypngr0210a22f8w9720a3ev126r3t2w9s3k0j7o91d7bo0h8x008nhjea1v2l0qzq6gqnmi3mrbpulyqg9lk\",\n      \"name\" : \"Mr. Sherlyn Murray\",\n      \"primary\" : false,\n      \"username\" : \"trisha.jaskolski\"\n    }, {\n      \"accountId\" : \"521c\",\n      \"uid\" : \"g0d1\",\n      \"systemId\" : \"7xi1\",\n      \"gecos\" : \"icoqkk5wli3nu55rn1a4rqxvi0du1iobrkh9yfa19n\",\n      \"gid\" : \"7122\",\n      \"homeDirectory\" : \"i0ngrlzh8afglr0tz3wcxpwv119fjpwbc4wz9gv081sfk6c0xvesf454kix3441udugu5d727enokeo7my94qxhxovnenpa7conzn67c2d2jna23g8\",\n      \"operatingSystemType\" : \"OPERATING_SYSTEM_TYPE_UNSPECIFIED\",\n      \"shell\" : \"vh78xzqxdjp9qbrmaedlraenjdlm5gwthjf1gmpcyqz\",\n      \"name\" : \"Mr. Alberto Turner\",\n      \"primary\" : true,\n      \"username\" : \"kevin.bogan\"\n    }, {\n      \"accountId\" : \"1lk6\",\n      \"uid\" : \"7hfg\",\n      \"systemId\" : \"4s6q\",\n      \"gecos\" : \"rlxprb64ue2cj4kao62pgjj4bw20jol17v8gpaamwy7j5w89ets8e6cnktdmu7ztldyc36hounehcwcq1buf82x6bk9eicmsajt7byevzpkj3vcg1ub20y3z7ami9ime1hx0nr9f3w9zexi8hz4mpuxaxfc0degxrjkfu0n33glrubs\",\n      \"gid\" : \"zaat\",\n      \"homeDirectory\" : \"q7vcpnkx9rcrflmoj9cowssl2qlpy2zvqs25nm53na7ar54wmt2w1kmeb8d0s73ou8x60xcaow6q0dcvke1ueqz7o70i5v\",\n      \"operatingSystemType\" : \"WINDOWS\",\n      \"shell\" : \"bw7ozktaei75yggrz2g1y3ywirx07mxgcrhcxffeih5sjojfwzy5xpst88xoztuf6yg0x1tzvdc1vmr6siuzgbaihlc7ocx2gbrpkk28wwokqzi655pzngmp5ind38m119vi9kpqjly3iuiscvz2\",\n      \"name\" : \"Carolyn Ward\",\n      \"primary\" : false,\n      \"username\" : \"denny.west\"\n    }, {\n      \"accountId\" : \"uk93\",\n      \"uid\" : \"775a\",\n      \"systemId\" : \"2wd8\",\n      \"gecos\" : \"4wv1bkufpk37r9sc9hpz4\",\n      \"gid\" : \"9y18\",\n      \"homeDirectory\" : \"ev3dhnv4p7awfhsehn78qp5yvjqc69di1m20jvydsdcgyq50c2f63fq94lc3mxbf581l0t3zwha65xpqay8rhgfftjnxko916ghcgn9vpu4abuue6pqk3ovi\",\n      \"operatingSystemType\" : \"WINDOWS\",\n      \"shell\" : \"kpco2bnxxmyn2rdlaj6a018tr1kxghgaacbatq7owdbatzlng3vnrjz8xl1vd\",\n      \"name\" : \"Miss Fidel Schultz\",\n      \"primary\" : true,\n      \"username\" : \"kasey.swift\"\n    }, {\n      \"accountId\" : \"bwwl\",\n      \"uid\" : \"9265\",\n      \"systemId\" : \"k02l\",\n      \"gecos\" : \"30up8w0gljywq6kelpe57b8zoe9w224g4985w3xjd385jm7e4argx4fw8teftbm004g8gr\",\n      \"gid\" : \"kima\",\n      \"homeDirectory\" : \"yvn57w4q0ne5dn0i76e28i8vu0ym5aq5i83r36ybimoxf\",\n      \"operatingSystemType\" : \"LINUX\",\n      \"shell\" : \"zdybzo17wrsdv1rvmnmzghprejm1obs594otzw4p03klyw0kutryakarx563l0witfnepvkb2c5znfgrlm3q00ypjit7zikspu1ath4rurn\",\n      \"name\" : \"Eulalia Jones\",\n      \"primary\" : true,\n      \"username\" : \"temika.doyle\"\n    } ],\n    \"securityKeys\" : [ {\n      \"privateKey\" : \"98uezjkk3ikth6o71tat\",\n      \"webAuthn\" : {\n        \"rpId\" : \"w1z0\"\n      },\n      \"universalTwoFactor\" : {\n        \"appId\" : \"bb72\"\n      },\n      \"publicKey\" : \"7y7xnpzd752cpp7pgp7irc57e4i9cyvz5wd48dkpyjcejkoo1jkxnvygmulo404g2zulsneg9z9kxzc7wd1dz26qeey6twfb05hmzg5a2naqicdztbvjoldlwirx\"\n    }, {\n      \"privateKey\" : \"o3pj3vc3qu12lt4f5dtctfjm7w6er8cg89eibazyw1x587n9dqse6pv2roy7djwuimt177ownch9hj6\",\n      \"webAuthn\" : {\n        \"rpId\" : \"h8bx\"\n      },\n      \"universalTwoFactor\" : {\n        \"appId\" : \"2978\"\n      },\n      \"publicKey\" : \"cbh2uzffjgtc3ocjmz7v0stqb3571roo31lnivh2yd0qld95vq11dwohzf5u6lrmaq7y5j8yv13n3w757zg2jmxgaes\"\n    }, {\n      \"privateKey\" : \"4w70x5nxjg9vviyhfz4iruhlke3wv\",\n      \"webAuthn\" : {\n        \"rpId\" : \"0n9o\"\n      },\n      \"universalTwoFactor\" : {\n        \"appId\" : \"ri1g\"\n      },\n      \"publicKey\" : \"rsbeoqjhr4dykuajpkfc0q2tlua60894yhfxfdl3ryw2xzdnqvuamfmk7yiij2c97tdbawgs25m60c57z6tw39x0xw7zqbn1apur26wzpcb941nfx6wbrg701oyxcz6azbmxys1qzus\"\n    } ]\n  },\n  \"details\" : \"2jtx634ua20hxpd7turiz63aqflvgmw1j0d9wiqgzf9bq5mt81jx29z7p42u8pqe009jh7ba1cfnp0z9gonrfwsczzm97h3m9c0mgt5xcutitftyj15g3jf644jk1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "61697092-58b7-4dab-b593-f1d0edf664f9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:24.9868Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "oslogin.users.importSshPublicKey",
          "schema" : {
            "description" : "A response message for importing an SSH public key.",
            "properties" : {
              "details" : {
                "description" : "Detailed information about import results.",
                "type" : "string"
              },
              "loginProfile" : {
                "$ref" : "#/components/schemas/LoginProfile"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "23ba693b-2b7b-42d8-b0cb-2aebbf844e5a",
    "name" : "Create an SSH public key",
    "request" : {
      "urlPath" : "/v1beta/016hir1203vom5505lkev72e2xixuo7p1zpe4ypecvv8crnuv7mo61v5vjg15cmgc3u714g5n9udmed3452d6eo0p67car3gpg7497wldx2rym17mmiafsp3klzl0lge4r3ojm28msph3yszzn9ikcdrwxqxc1qs1jj0sw2he27sb8i1w3031m929d/sshPublicKeys",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"expirationTimeUsec\" : \"2022-08-18T09:27:24.982084Z\",\n  \"fingerprint\" : \"3rciunnh1zt3lsyuvra4y1ac3jvlblt9n0c7jwrubt\",\n  \"name\" : \"Rossana Pollich\",\n  \"key\" : \"wakptgiwhytg4hm9wwx6mmjqpkykuoe9owdbx0bsjecdupaxap3ihf8yqllg1watxyx6g26tmxkczmerf6j0pri5v67my0fpua\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "23ba693b-2b7b-42d8-b0cb-2aebbf844e5a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:24.982247Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "oslogin.users.sshPublicKeys.create",
          "schema" : {
            "description" : "The SSH public key information associated with a Google account.",
            "properties" : {
              "expirationTimeUsec" : {
                "description" : "An expiration time in microseconds since epoch.",
                "format" : "int64",
                "type" : "string"
              },
              "fingerprint" : {
                "description" : "Output only. The SHA-256 fingerprint of the SSH public key.",
                "readOnly" : true,
                "type" : "string"
              },
              "key" : {
                "description" : "Public key text in SSH format, defined by RFC4253 section 6.6.",
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The canonical resource name.",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "385fad08-8f78-4e7d-bc2b-94ffa9a599a8",
    "name" : "Retrieves the profile information used for logging in to a virtual machine on Go...",
    "request" : {
      "urlPath" : "/v1beta/Darrin+Mueller/loginProfile",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"sshPublicKeys\" : { },\n  \"name\" : \"Jacinto Schowalter\",\n  \"posixAccounts\" : [ {\n    \"accountId\" : \"j62x\",\n    \"uid\" : \"gowm\",\n    \"systemId\" : \"26h2\",\n    \"gecos\" : \"iy24\",\n    \"gid\" : \"5374\",\n    \"homeDirectory\" : \"wwmvu79p7zbvk0tnsb786ydh7y2gsxw2hzwzsb8avwkvwtn\",\n    \"operatingSystemType\" : \"WINDOWS\",\n    \"shell\" : \"b34tye8rogf1ul87yxvvpf65moqmr90syz8yrgtjx7r4i2en57413564ytlvflw2quyhg2iqx5ub8juawz13wgakftpxfkdj5sn7urho43kl7tvibgzm4sgx5fj8eqxqh16z9sslmta6gbv4eyxgfeyzhje0yqtig50x480cgnrm6q9jypjbgyypio2\",\n    \"name\" : \"Kenyetta Rippin\",\n    \"primary\" : false,\n    \"username\" : \"hobert.russel\"\n  }, {\n    \"accountId\" : \"0hja\",\n    \"uid\" : \"4jv6\",\n    \"systemId\" : \"n0d0\",\n    \"gecos\" : \"91ds3x1ljbt84sej\",\n    \"gid\" : \"1944\",\n    \"homeDirectory\" : \"i4bi8f08nh8w4vaamx5r0sryd0542u84n782yo0cd0an2g786uw6cly55i8yp07dvq2d5tnynmb9rrqx71u9w57kqgf8sx5wi31hm5yjdpl1v4d2m7g0f4h3i\",\n    \"operatingSystemType\" : \"WINDOWS\",\n    \"shell\" : \"2igzq733aufbml3utnqokhogcvc9p3b3ldd21sdsc5zlhiuxiylp3f7q6dmuav51akmiytf8y64c4qz0ojpo7b4l\",\n    \"name\" : \"Miss Wilford Ziemann\",\n    \"primary\" : false,\n    \"username\" : \"clark.berge\"\n  }, {\n    \"accountId\" : \"zw3x\",\n    \"uid\" : \"2j13\",\n    \"systemId\" : \"2gfy\",\n    \"gecos\" : \"mqio5d9b4hi9\",\n    \"gid\" : \"7n76\",\n    \"homeDirectory\" : \"dxvlqgttknzidi9ovzlqmvp8ky567x22pj6hqc4fiatq2atqofo7fiw28b4hoj3bg7jkcle75a5a8kxevljtmpks4an252a\",\n    \"operatingSystemType\" : \"WINDOWS\",\n    \"shell\" : \"tlfn86fufb60cgr7yhn4hv71\",\n    \"name\" : \"Kandis Daniel\",\n    \"primary\" : false,\n    \"username\" : \"latanya.beahan\"\n  }, {\n    \"accountId\" : \"461m\",\n    \"uid\" : \"p100\",\n    \"systemId\" : \"2z7q\",\n    \"gecos\" : \"10vsjfsd9s0p7potp12yks9ash1ss16t0w7hwi0fh1xz9qiec77zqct482oned8o45vymdlr3m2w10e8y0nk2xktt2qvm0qcdqzlumizzy51scztj3taigliytzi1c8740w64exdp7q9ulmgscp4uumaeof5u62nzu5\",\n    \"gid\" : \"qq1g\",\n    \"homeDirectory\" : \"xd7ci0qzde1y952b7tc0v0wcsetmk3hs1b35vjs5umlrge2m5yqtjpwkhpmbkvpminprjgatpkg23b706ichl4p0bdkpv6jkggnn3hoi7i90f7hkyaphkrk49aiv5dh80gvwnf5y6ksfwvcva7dgxydkgokt56esc25qqsbrwg6t9zb9wjlmc24fqj3s\",\n    \"operatingSystemType\" : \"OPERATING_SYSTEM_TYPE_UNSPECIFIED\",\n    \"shell\" : \"xoxpkrzya3xg6mrl1y8zt8crk0s0eite5p73m41c0ds73u4yvzmcovr8cbp23pl63jq8zqy9imfpuk8ut7hm1ut6ozgdgwmgm2nv8a4y5\",\n    \"name\" : \"Maryln Rath\",\n    \"primary\" : false,\n    \"username\" : \"janae.goldner\"\n  }, {\n    \"accountId\" : \"yqk9\",\n    \"uid\" : \"0qbr\",\n    \"systemId\" : \"1psi\",\n    \"gecos\" : \"tfj\",\n    \"gid\" : \"w4n5\",\n    \"homeDirectory\" : \"eyxc8lw9rdy25ygxsaa2v5gksaxaomldzzjbow5zxg41t0trfvu8jx7sz0dbgf01pch746n7s044uuwhsyldlm26icl7\",\n    \"operatingSystemType\" : \"OPERATING_SYSTEM_TYPE_UNSPECIFIED\",\n    \"shell\" : \"jh1bfmx7hh1z6zfw6kokqe4o7fpjjd4202camsgi7nrkiezvn1zh31a476ef0pl6adoy5guzyscx79ry7byx94is360ouji\",\n    \"name\" : \"Michale King\",\n    \"primary\" : false,\n    \"username\" : \"sacha.doyle\"\n  } ],\n  \"securityKeys\" : [ {\n    \"privateKey\" : \"3kcg2ibyc2sj30tqy2bui8qryaikbgafpffu5s22nfn31mdczc0pzte7h43f78kz6keycqxfrnjigtsv96zjdly1qv7ih3\",\n    \"webAuthn\" : {\n      \"rpId\" : \"7yt6\"\n    },\n    \"universalTwoFactor\" : {\n      \"appId\" : \"y90c\"\n    },\n    \"publicKey\" : \"ho3281mxisqi6jt4ohoheilb07jy0udlqx6958l6jkyk\"\n  }, {\n    \"privateKey\" : \"tgvoxbo5sq4vx9bncubr8sy90s7r\",\n    \"webAuthn\" : {\n      \"rpId\" : \"8m6r\"\n    },\n    \"universalTwoFactor\" : {\n      \"appId\" : \"5r65\"\n    },\n    \"publicKey\" : \"l2or2p5js56mtt2i1t0xxa6e0nrqypr2e7dujj7qzuuxdwt61hlsyvr3w7qtgrvwminl2gg1em4lwan3z85dsjli0nor1hhlb25k46kejrsq6qq671fg3335zzyhv0930nss\"\n  }, {\n    \"privateKey\" : \"d723tgfn2q98oq402xi2hi8p9oi7pk08z1bxoua9r29g1cor81pg5w9j5oo9wtfduwsx6hhojswefsf08lm2b4cfzdn5yl6qnymvks6nkdrzu5jm856guerpzf9hzk9eg9hee6zy9dgcl3txak8y87k\",\n    \"webAuthn\" : {\n      \"rpId\" : \"y4c5\"\n    },\n    \"universalTwoFactor\" : {\n      \"appId\" : \"b1mp\"\n    },\n    \"publicKey\" : \"9o1ip5gf26sgg8n3acvwdu7bmqdzfaqy762x1dvbuphpmzmna4830wk42qzekwwx8294b5rp6j1a4ace7kxnj8o8uiuoyqnaa3\"\n  }, {\n    \"privateKey\" : \"b0oevhrrtuoxc25am6jdbv2olsdrjam\",\n    \"webAuthn\" : {\n      \"rpId\" : \"y9h2\"\n    },\n    \"universalTwoFactor\" : {\n      \"appId\" : \"ch46\"\n    },\n    \"publicKey\" : \"7dfnypu8jncm81w5hg63oh8ht7bwtqv1qyvczi30ib08k5a5t8edh1lavoin86g78v5buazq5\"\n  }, {\n    \"privateKey\" : \"02k4fmfetj6adtikj9sxebr2sanpjdv3kzax0ml5zyxxpw4bfu3omtvjxqxrgv9lml2nzjd1fz7r4\",\n    \"webAuthn\" : {\n      \"rpId\" : \"b29g\"\n    },\n    \"universalTwoFactor\" : {\n      \"appId\" : \"6h82\"\n    },\n    \"publicKey\" : \"iofc40br4349a1kqdoshuj3o90n1s74z35yqtqjoobc6k7cvj5r0azc6onbho3ilcm6zwird6hl3s6if14x4tp5fften11183knz961snkfnbs29t6xp\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "385fad08-8f78-4e7d-bc2b-94ffa9a599a8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:24.982001Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "oslogin.users.getLoginProfile",
          "schema" : {
            "description" : "The user profile information used for logging in to a virtual machine on Google Compute Engine.",
            "properties" : {
              "name" : {
                "description" : "Required. A unique user ID.",
                "type" : "string"
              },
              "posixAccounts" : {
                "description" : "The list of POSIX accounts associated with the user.",
                "items" : {
                  "$ref" : "#/components/schemas/PosixAccount"
                },
                "type" : "array"
              },
              "securityKeys" : {
                "description" : "The registered security key credentials for a user.",
                "items" : {
                  "$ref" : "#/components/schemas/SecurityKey"
                },
                "type" : "array"
              },
              "sshPublicKeys" : {
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/SshPublicKey"
                },
                "description" : "A map from SSH public key fingerprint to the associated key object.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "0361a395-43df-407d-9b45-ccb892e0ff05",
    "name" : "Updates an SSH public key and returns the profile information. This method suppo...",
    "request" : {
      "urlPath" : "/v1beta/Ms.+Tyron+O%27Conner",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"expirationTimeUsec\" : \"2023-02-11T08:57:24.977813Z\",\n  \"fingerprint\" : \"wlyxgncwdjrdkp1vwhs9z7hhmek807m8fy5zoxul5hf2o387yklqlen\",\n  \"name\" : \"Miquel Kihn\",\n  \"key\" : \"ywq7hc7o939hyhnplrjulwnwyg9vot89nj2w5eixy8r2pgg6rzkz7dyhl8tetixqtl5x30e38katdwbb9fee95zvwxcdiu2gzowr6eut03igk2un8r73mbfxyf9ibi1fehzkl165iletctn3byayt4xso2u3k9ld\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0361a395-43df-407d-9b45-ccb892e0ff05",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:24.977981Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "oslogin.users.sshPublicKeys.patch",
          "schema" : {
            "description" : "The SSH public key information associated with a Google account.",
            "properties" : {
              "expirationTimeUsec" : {
                "description" : "An expiration time in microseconds since epoch.",
                "format" : "int64",
                "type" : "string"
              },
              "fingerprint" : {
                "description" : "Output only. The SHA-256 fingerprint of the SSH public key.",
                "readOnly" : true,
                "type" : "string"
              },
              "key" : {
                "description" : "Public key text in SSH format, defined by RFC4253 section 6.6.",
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The canonical resource name.",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "2c3ce823-84bf-4313-97db-3dc97ad53115",
    "name" : "Retrieves an SSH public key.",
    "request" : {
      "urlPath" : "/v1beta/Virgilio+Macejkovic+PhD",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"expirationTimeUsec\" : \"2022-09-18T12:12:24.977532Z\",\n  \"fingerprint\" : \"efb8af6x\",\n  \"name\" : \"Dr. Waldo Metz\",\n  \"key\" : \"c8hashe4xxro2nsxzw09k1nshmgkzr2zcjxfk0skli2p0g15esu5j43yy9wgq5im3ydjmthiwg0mujfgezbx5i6pdk82efore97s1u9j35zxtdavs9rlew6g13892dw1je64q5q2ev88f0h6apylz1s00aosr3fpfbbt3tqo17cm32lo9o0l39rdko4tg65uqlsxj2dc\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2c3ce823-84bf-4313-97db-3dc97ad53115",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:24.977767Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "oslogin.users.sshPublicKeys.get",
          "schema" : {
            "description" : "The SSH public key information associated with a Google account.",
            "properties" : {
              "expirationTimeUsec" : {
                "description" : "An expiration time in microseconds since epoch.",
                "format" : "int64",
                "type" : "string"
              },
              "fingerprint" : {
                "description" : "Output only. The SHA-256 fingerprint of the SSH public key.",
                "readOnly" : true,
                "type" : "string"
              },
              "key" : {
                "description" : "Public key text in SSH format, defined by RFC4253 section 6.6.",
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The canonical resource name.",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "f539612f-c520-429e-bf9d-55e8451c0ac2",
    "name" : "Deletes an SSH public key.",
    "request" : {
      "urlPath" : "/v1beta/Quinn+Brakus",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f539612f-c520-429e-bf9d-55e8451c0ac2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:24.977455Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "oslogin.users.sshPublicKeys.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  } ]
}