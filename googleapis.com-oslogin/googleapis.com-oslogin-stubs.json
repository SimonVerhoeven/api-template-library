{
  "mappings" : [ {
    "id" : "be6774a5-bbc2-4390-96ef-284b35b1f381",
    "name" : "Adds an SSH public key and returns the profile information. Default POSIX accoun...",
    "request" : {
      "urlPath" : "/v1beta/n20a5dnyhhf1o60g192wmthszxvv2iy0o1cs0hp5ufs3qbnvuwt5qplc0nt6sf9qngm9zi4bu:importSshPublicKey",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"loginProfile\" : {\n    \"sshPublicKeys\" : { },\n    \"name\" : \"Marlin Goodwin\",\n    \"posixAccounts\" : [ {\n      \"accountId\" : \"x8q7\",\n      \"uid\" : \"7331\",\n      \"systemId\" : \"926m\",\n      \"gecos\" : \"d5jzs9q376ijsvvqfnkpgx0vyopwnueb57q3n9m5qmzso34qvkjvswnle7j7532ivwb9hshghgidltdo83qmpsb5ws279wog86htep27nq9px71ka805r460zpdcfgvizz9svl5zdum02ocp0ib8ykeywg1er\",\n      \"gid\" : \"p221\",\n      \"homeDirectory\" : \"r9rtvywqpymzacmyl8jii77yj0hfnwxh19h22fnrz400eaja4ywfjw5\",\n      \"operatingSystemType\" : \"OPERATING_SYSTEM_TYPE_UNSPECIFIED\",\n      \"shell\" : \"azn92x8x1\",\n      \"name\" : \"Mrs. Buck Anderson\",\n      \"primary\" : true,\n      \"username\" : \"scotty.jones\"\n    }, {\n      \"accountId\" : \"i29t\",\n      \"uid\" : \"93ea\",\n      \"systemId\" : \"6t53\",\n      \"gecos\" : \"3qv7wg42rrx9wqku7ltad\",\n      \"gid\" : \"w5o0\",\n      \"homeDirectory\" : \"acfcuwg8j2qo9bvfx1vx76vtiyj4lggku471ij5l8csdmjjfm537mzyeccsy5aktkhkc62qxif18dh0r8oil5fyln61wswisqz2104rj0hby21damy0mja3jwgantv0dbxulj6nbpwwcir0t22l8c4fzra78tic3yhmqg2u27ergsk67m9uqtekb7sxp25evh\",\n      \"operatingSystemType\" : \"OPERATING_SYSTEM_TYPE_UNSPECIFIED\",\n      \"shell\" : \"la5u3wcpnykdlg6xejisttggbkcqplv1v019k9nwxxjlw5wt9h8j41nzef5ozc985s59a5s9fwqads6wvvblinp0xqwpkregjmt5la418hro84zrn6g03c5dwr6ha9ibalc9xbd4qt4zxec62gvenn4i6cr83jimyzkde5y19taf4\",\n      \"name\" : \"Elena Lind\",\n      \"primary\" : true,\n      \"username\" : \"darwin.maggio\"\n    }, {\n      \"accountId\" : \"2ec2\",\n      \"uid\" : \"ai87\",\n      \"systemId\" : \"rtw4\",\n      \"gecos\" : \"19yzy8far7c54vqnjhmtgin3w9c5ax8fzzff0gx82y7we9pjju8zlg4woduhildneyn22x364pxvd5tvvoaa9dfcpxl1p1tur5gesj58de6z6bj2ulzjn9ly6ptjkadw2lzpfr07o1pcvn6h\",\n      \"gid\" : \"6k2o\",\n      \"homeDirectory\" : \"e34qwncfjgopnp59156g96sxhdivfgtjvom42c61juzkj1g5d1ny0wvehtlbdzwlv7sm4bul4hyjostdxlf49psvjjnnu6f4dua7pspcknzfah34jjkk7ej7izvg96y8ro8bx2hs7ihrnlbipekqa3lokmrg6fsdrlz74meqjpnct\",\n      \"operatingSystemType\" : \"OPERATING_SYSTEM_TYPE_UNSPECIFIED\",\n      \"shell\" : \"fwk6mlrn5u5xewxi85kp4s7aum60dsg6ugs38nsbsdkuoxvb6s3nqh752su7ysqvtz7jvtz63knbcenxiarucdimdepn7kdj7v\",\n      \"name\" : \"Marjorie Hauck\",\n      \"primary\" : true,\n      \"username\" : \"dean.wuckert\"\n    }, {\n      \"accountId\" : \"2m9x\",\n      \"uid\" : \"x631\",\n      \"systemId\" : \"qxl9\",\n      \"gecos\" : \"r128lo29gitjvo8ws3v021wpofx04pt19uk9z6o2e61p1r678rydr54r50unazuggw0y0k413wsr726a1987k2hsr8zdxtbkmo1yv2uq3c5psilkh0h\",\n      \"gid\" : \"v842\",\n      \"homeDirectory\" : \"63onxnr07d2e1t0whi113myv4a1hifu3u2up3l8gw3nwecuzoa43jstvukx8n1cj9wa8fk69x86wh3xssz6jgglu3516qm9u0xnzp2f3vuo2sbmfm6g69q4cbpeguq2mq\",\n      \"operatingSystemType\" : \"LINUX\",\n      \"shell\" : \"kbea859voyckgxv7upbkbl15a6evauk9zunq69m17pddhs1rasg4sfcc8dmlh75uhyhnt37mbet01lcu3h4\",\n      \"name\" : \"Jonas Braun\",\n      \"primary\" : true,\n      \"username\" : \"twila.oreilly\"\n    } ],\n    \"securityKeys\" : [ {\n      \"privateKey\" : \"q1y2215xh2q19b6hil\",\n      \"webAuthn\" : {\n        \"rpId\" : \"3tj6\"\n      },\n      \"universalTwoFactor\" : {\n        \"appId\" : \"l665\"\n      },\n      \"publicKey\" : \"xo16nblvcsd5fucelik8dmxfl4iwcw5yp62ehxsqd9gk3knybdadltw6uad15ej2labbxqlij0g\"\n    }, {\n      \"privateKey\" : \"g23z1a9zp3uy7bfpivb90e8hwbw0jpw3nkvbs637c851e0170saih93vqewmpvgk067dgl50aqe3z1ymsk4bd5mow0nyj81nu5c72bli168tbyk8kb45dq3c2m97xqmh40tyhc9d73ozxnv8776s147g4wz2gmy3cj\",\n      \"webAuthn\" : {\n        \"rpId\" : \"wfqo\"\n      },\n      \"universalTwoFactor\" : {\n        \"appId\" : \"zu6r\"\n      },\n      \"publicKey\" : \"gs5hw0rj2mvcos08vhk\"\n    }, {\n      \"privateKey\" : \"e40vhd1l8g6gllpeq4ercikdmjt1rui0rgc1df0ji8d3m13ock0r83bdlpi42jxrmuy2j9c74q6inkg1uoefqrmiyccxyrdnnhkk0va9c7ym7tpwr8quj4gjv4v1vayobass4pq9fijrrzzo1rqeefnouzpbmokq0glhuqn8q3cha6hubdus84h11vw9bs7h\",\n      \"webAuthn\" : {\n        \"rpId\" : \"9euh\"\n      },\n      \"universalTwoFactor\" : {\n        \"appId\" : \"a1ch\"\n      },\n      \"publicKey\" : \"kah1eb0xpjllbk76w70ysqccr4dselzc7dg39exzp9pad7w93l7olqnnxhyno17yqyff1bat1zxfk6wmm38wtmagsvs4agyq62j0m32i54sxhwdfh50e0nvgtnwr0z251403fyx4nkoz4qi9hnf5a969j5dlpxhgjoe76gvyuvua5wfpt\"\n    }, {\n      \"privateKey\" : \"v4uk4ueel26vi88r6jjl6nxuk71d5ri7rc4uvld7ffn97lg6u030k23k4q2vltsndxib9emjr1tlu54sepcf09tk9xavfs7p0jb2w9ybtebeycsj1urn2cvomxghpko6kucfmp3d6i22j1qm0lnj2392wxps9g\",\n      \"webAuthn\" : {\n        \"rpId\" : \"79q2\"\n      },\n      \"universalTwoFactor\" : {\n        \"appId\" : \"rz8d\"\n      },\n      \"publicKey\" : \"5n23scsxzrxute1qou6eax9jdsx23k1kngo9v4ry362oae7vo2w28vrvv2dfinh467w7iyufb32kclmlfwenwx4am7em02h8fm95p55kx6hgn5jw2d4i3isnl8492d4kdxwykwliybntzolc9c2bolt6odjp6c22xiicshisy4oz5sdizubuz0d4l57xqb8\"\n    }, {\n      \"privateKey\" : \"95nvryeusm7rmcb7uy3ecxf4ekz2yz8a84jl570lvbjftscrd6hj90hi4fjhzq66p6gdnaecggg314k0drap1ofn7j7w4fahceaqywf8l0jkjnti1fhw017i3oqstd\",\n      \"webAuthn\" : {\n        \"rpId\" : \"1i26\"\n      },\n      \"universalTwoFactor\" : {\n        \"appId\" : \"7v7k\"\n      },\n      \"publicKey\" : \"19jeivfwitfol9xpkmxfzrw7ynokdk1tr5d9svrds8rkkgpkkmo9uh5g1042qn\"\n    } ]\n  },\n  \"details\" : \"q4nu2y3pefyzgub61sqzbhjx0cg9rj15x1ztmk2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "be6774a5-bbc2-4390-96ef-284b35b1f381",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:48.680567Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "oslogin.users.importSshPublicKey",
          "schema" : {
            "description" : "A response message for importing an SSH public key.",
            "properties" : {
              "details" : {
                "description" : "Detailed information about import results.",
                "type" : "string"
              },
              "loginProfile" : {
                "$ref" : "#/components/schemas/LoginProfile"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "41466c79-5664-4523-8719-86339c6d626c",
    "name" : "Create an SSH public key",
    "request" : {
      "urlPath" : "/v1beta/q7qpzphgosfsnc9g32elt0ilel89kwn0wv/sshPublicKeys",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"expirationTimeUsec\" : \"2023-03-01T16:41:48.677525Z\",\n  \"fingerprint\" : \"4do1crf771yloja4733vw3y0wna4ii8h7oiffib7k2lcptlb0e835pk17ntfatqojocwn8wviwirliy0g8suto126p03mjbcnl5k9\",\n  \"name\" : \"Sanford Lakin\",\n  \"key\" : \"e6g5getvbrwuxr9zjenxxduade8j36cbpf1s7372c6hetc3zm2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "41466c79-5664-4523-8719-86339c6d626c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:48.677692Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "oslogin.users.sshPublicKeys.create",
          "schema" : {
            "description" : "The SSH public key information associated with a Google account.",
            "properties" : {
              "expirationTimeUsec" : {
                "description" : "An expiration time in microseconds since epoch.",
                "format" : "int64",
                "type" : "string"
              },
              "fingerprint" : {
                "description" : "Output only. The SHA-256 fingerprint of the SSH public key.",
                "readOnly" : true,
                "type" : "string"
              },
              "key" : {
                "description" : "Public key text in SSH format, defined by RFC4253 section 6.6.",
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The canonical resource name.",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "13aadc29-589e-412e-947a-47d94241c5d6",
    "name" : "Retrieves the profile information used for logging in to a virtual machine on Go...",
    "request" : {
      "urlPath" : "/v1beta/Sherlene+Emard/loginProfile",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"sshPublicKeys\" : { },\n  \"name\" : \"Julianna Bergstrom\",\n  \"posixAccounts\" : [ {\n    \"accountId\" : \"y130\",\n    \"uid\" : \"e379\",\n    \"systemId\" : \"lk5v\",\n    \"gecos\" : \"xbwsjz2m2ll8zge18bobt5drk6s\",\n    \"gid\" : \"ky5b\",\n    \"homeDirectory\" : \"0hdsyq78hdz66c4sfsh3vj4j932291l3njend42vf6lqibznqsgihuuzyvwbjd9j4fgdbhwus5laikauxw0nh14ksblaz5fidwkpef0f4zkdg8roz7eg78er6jdvj2t65adj03eod7ts27obote9f6te8zz91s5l55d9yxmnt9mme10e5uf7cs8fjsk5irihjxowoc8q\",\n    \"operatingSystemType\" : \"LINUX\",\n    \"shell\" : \"w5com62mm3djhzx86oxaxvrj17rsoi6kyzm523m1wv54icjd28j7kqxiq0zr8f0hae9qlgsim6\",\n    \"name\" : \"Rima O'Kon\",\n    \"primary\" : false,\n    \"username\" : \"lesia.von\"\n  }, {\n    \"accountId\" : \"d9nc\",\n    \"uid\" : \"0f90\",\n    \"systemId\" : \"262d\",\n    \"gecos\" : \"c3usrjeg9jkn4\",\n    \"gid\" : \"j0b0\",\n    \"homeDirectory\" : \"xtp317ooj4sb8vue2ug4kb98kontsegw8pq01exdwt8vuhn213r0lo9bdwma5s4cfzx8e50vuw2zz1boecf9i3si99kyqahsrflfje5blsu2xny45dt3dmk00g87exkd2b31tcx\",\n    \"operatingSystemType\" : \"LINUX\",\n    \"shell\" : \"r5i29tywu1ww51\",\n    \"name\" : \"Roxanna Mraz II\",\n    \"primary\" : false,\n    \"username\" : \"flora.botsford\"\n  }, {\n    \"accountId\" : \"6mon\",\n    \"uid\" : \"q1l9\",\n    \"systemId\" : \"2w56\",\n    \"gecos\" : \"zc7f2j3qk4ygu7k0chdtlrs2sui1nh79xmkmvmpvo4f2hiuyz9dycqb6ia2kw2vmrks7pbe3x1bfiktmtiafmub4n8ssxtqd6xclkez0f6s3owhblg1jm5agn91xa8bkg1m97jwgenqxkk9crodnplauj48uqdkqn9oaimp\",\n    \"gid\" : \"6ew6\",\n    \"homeDirectory\" : \"kr9tpvnuh2qncmdvsgy6q0ayny0jj6am7s1nspq4d7cuzcuixvj5ijsqpw8t44y2en4jrnc777bwmvqs39d4okk\",\n    \"operatingSystemType\" : \"WINDOWS\",\n    \"shell\" : \"lcojk\",\n    \"name\" : \"Jamie Schneider\",\n    \"primary\" : true,\n    \"username\" : \"tammi.ruecker\"\n  }, {\n    \"accountId\" : \"22z6\",\n    \"uid\" : \"3qrw\",\n    \"systemId\" : \"qrn2\",\n    \"gecos\" : \"9zrujwzpub470c9hjvagx63sh5o1lbg2juceisqsh03kfkvhwt1242fsm2k1\",\n    \"gid\" : \"ap7n\",\n    \"homeDirectory\" : \"zvrstlbtz14yortqau7rnrdzoy5rt97dkushzdbgroo6eoqilyvc4qnow312m7em2rkg7gg465xpi14xjcdbci4wb0xu7jt3dr120qqp3qgw96x1w8tyvizf27rcxegkl42vinonihwejyzc4ywxa019y3l4g6rpehg2fe7\",\n    \"operatingSystemType\" : \"OPERATING_SYSTEM_TYPE_UNSPECIFIED\",\n    \"shell\" : \"gt9n7fhqsttjhfcu2ppi0sid2lvqpr6ibmkajftebsp8ukfds0clthhify5umrir\",\n    \"name\" : \"Garth Bergstrom\",\n    \"primary\" : true,\n    \"username\" : \"garret.stokes\"\n  } ],\n  \"securityKeys\" : [ {\n    \"privateKey\" : \"2eh39m2psshmtk5dfvsftbnsfziw54nko4f68eub4nqh2kyua6cgabli8e77sniu2dsng5madzziczn88amhy4xi5868bjz4wx0dcty0mzcao1myrc5u7hyohwf41zfpi93lpnh7dguph11edrm\",\n    \"webAuthn\" : {\n      \"rpId\" : \"011j\"\n    },\n    \"universalTwoFactor\" : {\n      \"appId\" : \"uoas\"\n    },\n    \"publicKey\" : \"u2pus9ahxuepv8ldd35w85mdfz6zin\"\n  }, {\n    \"privateKey\" : \"9nq43rc62oqa4yc5kyb18w5r0u927porfdr80epyniq8s7atj23qsu52ec4iivaxfsohggu9a1mg9z8\",\n    \"webAuthn\" : {\n      \"rpId\" : \"a471\"\n    },\n    \"universalTwoFactor\" : {\n      \"appId\" : \"78q8\"\n    },\n    \"publicKey\" : \"7d758qznsgspd6iskh59bj0dsjlc0c684hbd1n0b3u6csxk1hjurfx6zoahkv6ypqi3vhxo0kakmqjm7alhm4pxkcty56shexe5s4gzuo9e7vilfu4dutv64t5ezrxhm34fjo4ydeg\"\n  }, {\n    \"privateKey\" : \"2p9t4r5x7irstd2jc9du3ru7trk91x287ul8hvemaa5a6jiusjmnkjhbs7nw1129ktv73gx2qz32m2m56xmuu1e51o4mr0ncnfwjwt09m2b3oveg4bfsr3f3lzy8o33gxjys0w9kedry21ev0itxojhfez1lwnorv2v2wj5ae0q7kip306e4fj83tldmemqhv\",\n    \"webAuthn\" : {\n      \"rpId\" : \"273o\"\n    },\n    \"universalTwoFactor\" : {\n      \"appId\" : \"f741\"\n    },\n    \"publicKey\" : \"xxbsrwcrlzrf3ep7wjfas0u1m96\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "13aadc29-589e-412e-947a-47d94241c5d6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:48.677467Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "oslogin.users.getLoginProfile",
          "schema" : {
            "description" : "The user profile information used for logging in to a virtual machine on Google Compute Engine.",
            "properties" : {
              "name" : {
                "description" : "Required. A unique user ID.",
                "type" : "string"
              },
              "posixAccounts" : {
                "description" : "The list of POSIX accounts associated with the user.",
                "items" : {
                  "$ref" : "#/components/schemas/PosixAccount"
                },
                "type" : "array"
              },
              "securityKeys" : {
                "description" : "The registered security key credentials for a user.",
                "items" : {
                  "$ref" : "#/components/schemas/SecurityKey"
                },
                "type" : "array"
              },
              "sshPublicKeys" : {
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/SshPublicKey"
                },
                "description" : "A map from SSH public key fingerprint to the associated key object.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7940af6f-59f2-4b27-ae1b-aaf1ac5cbe39",
    "name" : "Updates an SSH public key and returns the profile information. This method suppo...",
    "request" : {
      "urlPath" : "/v1beta/Miss+Camie+Rosenbaum",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"expirationTimeUsec\" : \"2023-01-04T15:29:48.674672Z\",\n  \"fingerprint\" : \"k6g8omly5i1p8xmm51gx794at7nsfmvri886ejg0midifv7iq3niwuogl5i25euizbqknsavqvzy6xdht0a5c8tx372qa0na87ox14v8f22bug7u1wfppb8iwlkgmpaakckwb3wadsswgkha2jcq03sbouwx6483k6f4xucqc7v1m4sxhk1k19xv\",\n  \"name\" : \"Lanita Labadie PhD\",\n  \"key\" : \"rywuj7oseayuouqsvpyd7znrhs1troycusa50x9j9xidi2w0en0ayqv8b84etwmovfc2mm6lvzat65zi5t5ra19\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7940af6f-59f2-4b27-ae1b-aaf1ac5cbe39",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:48.674874Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "oslogin.users.sshPublicKeys.patch",
          "schema" : {
            "description" : "The SSH public key information associated with a Google account.",
            "properties" : {
              "expirationTimeUsec" : {
                "description" : "An expiration time in microseconds since epoch.",
                "format" : "int64",
                "type" : "string"
              },
              "fingerprint" : {
                "description" : "Output only. The SHA-256 fingerprint of the SSH public key.",
                "readOnly" : true,
                "type" : "string"
              },
              "key" : {
                "description" : "Public key text in SSH format, defined by RFC4253 section 6.6.",
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The canonical resource name.",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9804bad3-1eab-4319-b85b-d6fcb7fd2733",
    "name" : "Retrieves an SSH public key.",
    "request" : {
      "urlPath" : "/v1beta/Reggie+Toy",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"expirationTimeUsec\" : \"2022-10-24T16:28:48.674379Z\",\n  \"fingerprint\" : \"vqswfpa7b7kd4gdyljozprajaiz7zgevla3fb6zpske4q6q28k4fdmcygrfmhsxm2ut9r0sywapfkbsp7yycetlt\",\n  \"name\" : \"Ron Goyette\",\n  \"key\" : \"ylne9l0cxcjvbyenut3623lz31tpfvi1apvd52sl94bordtocm6j1d3odca6ldjg2kdpy6t3mssbkolf80p4x333u6w8b48jyf33rcqkk9udbxazas6101141n13l0n139kjl3qarqb1sts061xle3p8cxgutp4ynng5r02ojkp0q4j2z88hat2dazmmi\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9804bad3-1eab-4319-b85b-d6fcb7fd2733",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:48.674617Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "oslogin.users.sshPublicKeys.get",
          "schema" : {
            "description" : "The SSH public key information associated with a Google account.",
            "properties" : {
              "expirationTimeUsec" : {
                "description" : "An expiration time in microseconds since epoch.",
                "format" : "int64",
                "type" : "string"
              },
              "fingerprint" : {
                "description" : "Output only. The SHA-256 fingerprint of the SSH public key.",
                "readOnly" : true,
                "type" : "string"
              },
              "key" : {
                "description" : "Public key text in SSH format, defined by RFC4253 section 6.6.",
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The canonical resource name.",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "658772c6-8c38-4f08-b079-77ebd35f8933",
    "name" : "Deletes an SSH public key.",
    "request" : {
      "urlPath" : "/v1beta/Consuelo+Gaylord",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "658772c6-8c38-4f08-b079-77ebd35f8933",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:48.674291Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "oslogin.users.sshPublicKeys.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  } ]
}