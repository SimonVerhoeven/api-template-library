{
  "mappings" : [ {
    "id" : "63302a05-5f3f-39f5-b227-35f526da3457",
    "name" : "Adds an SSH public key and returns the profile information. Default POSIX accoun...",
    "request" : {
      "urlPath" : "/v1beta/sfgnr5l2g3g:importSshPublicKey",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"loginProfile\" : {\n    \"sshPublicKeys\" : { },\n    \"name\" : \"Ms. Toshiko West\",\n    \"posixAccounts\" : [ {\n      \"accountId\" : \"r096\",\n      \"uid\" : \"75rd\",\n      \"systemId\" : \"hxxv\",\n      \"gecos\" : \"stlw3hnxq7zc1o5s0lpcgbietgm0wvapmyatutsx8rnaf1cjergvs801mq\",\n      \"gid\" : \"h50f\",\n      \"homeDirectory\" : \"mxn1tx3zgnj79v0smauklf6bzpxh5qysfq1tetgqy2d9djeb4a6v8b10jxwy\",\n      \"operatingSystemType\" : \"LINUX\",\n      \"shell\" : \"l5mgcu6j9gq7ejvpjions2ikchdcjp3ivcb65xuxcfcsq3il4cta3mrgha1j32drsepv0vqby5reciqa2u522al9e59pn8ekn6447gw6wao0khxzf9wgbg1peq\",\n      \"name\" : \"Annelle Kihn\",\n      \"primary\" : true,\n      \"username\" : \"amberly.breitenberg\"\n    }, {\n      \"accountId\" : \"86s6\",\n      \"uid\" : \"1p8g\",\n      \"systemId\" : \"1184\",\n      \"gecos\" : \"dfnom0ab67q1aejs3qnz09w4051nh72js2dch9tnqx7tj3cyi3u36tco2xxc4gjmjptsaukrqrub09pv9t4h887u6y9848qlofnl5v4hrxsuccc6q3itdcwwgambom1wus6a60z\",\n      \"gid\" : \"fj6g\",\n      \"homeDirectory\" : \"2zyvekg3e279b3p7718vj64kcszgtv1snx248un63\",\n      \"operatingSystemType\" : \"OPERATING_SYSTEM_TYPE_UNSPECIFIED\",\n      \"shell\" : \"ks9zihxxi3wqyqkkkhd8tbrpy5uruzqouw15ak2mqrrzdqvu6ama4irrgwddz5dzlkkxyclxvp63qi8w3ud5yt6iev2lvve91iff2qakfiuzrgl78a9ky4mm16y\",\n      \"name\" : \"Emmaline Kunde\",\n      \"primary\" : true,\n      \"username\" : \"deanna.carroll\"\n    }, {\n      \"accountId\" : \"59kk\",\n      \"uid\" : \"p3w6\",\n      \"systemId\" : \"8qgu\",\n      \"gecos\" : \"ehyj6qerzsdt966z3ab6vqnyzkihc8uf1kshovs61rp\",\n      \"gid\" : \"53m8\",\n      \"homeDirectory\" : \"uuf2l\",\n      \"operatingSystemType\" : \"LINUX\",\n      \"shell\" : \"ijw36dhxgp62g0zdd1y5g\",\n      \"name\" : \"Magda Strosin\",\n      \"primary\" : false,\n      \"username\" : \"judie.lueilwitz\"\n    }, {\n      \"accountId\" : \"h03x\",\n      \"uid\" : \"6mq4\",\n      \"systemId\" : \"urc4\",\n      \"gecos\" : \"q86nk4oj0lfj1r0h8u72kdqr2\",\n      \"gid\" : \"x0k8\",\n      \"homeDirectory\" : \"iuygrnsajtk7z1lsgcdo3tsxhexs30xnmnbpyxr7thk3bjc1xfql7\",\n      \"operatingSystemType\" : \"LINUX\",\n      \"shell\" : \"h6gfxg44aykrlrj55va\",\n      \"name\" : \"Viva Macejkovic MD\",\n      \"primary\" : true,\n      \"username\" : \"kieth.harber\"\n    }, {\n      \"accountId\" : \"567y\",\n      \"uid\" : \"87wf\",\n      \"systemId\" : \"o7x9\",\n      \"gecos\" : \"kznsj1sn7l9qv0uwsbi4q31lcx9p9328yrhf6esjgd8kc8gahvi3np0hed9ff5dr3f36ln73k6lffc5n29spa6f484rx86qfdj2flsw6iw7pzmi6\",\n      \"gid\" : \"7mur\",\n      \"homeDirectory\" : \"f88pax96l12z6w5yv9p4bty6pcog6x6lz6ak19w0tn07sftpp0gozyqgpntl7r2x7ullumq8unxv5glzsphj1kjzb9jft40z6miv4o8j2501pgup4dmakge7nnonv29if244rs9o3x5muhjz4z6mlcrr5t2nyos7kwegw9n8n2x235iw55liivy7wn8kgrmxfa656\",\n      \"operatingSystemType\" : \"LINUX\",\n      \"shell\" : \"na5jlimw5fu45bcwk9u18u7laqakmo7xacyowdoqx0q9pcm3di5yfdbywk46m9gd5ezpoqvv9tt7t9yxjq6t\",\n      \"name\" : \"Lacresha Powlowski IV\",\n      \"primary\" : true,\n      \"username\" : \"rashad.cummings\"\n    }, {\n      \"accountId\" : \"x1ip\",\n      \"uid\" : \"e807\",\n      \"systemId\" : \"aww9\",\n      \"gecos\" : \"fwlvla3l9cnx17b1joefl8uuc8kw5c3zfcqdi334ek15nabxljoqh5rpnezroyf2rr5\",\n      \"gid\" : \"y99t\",\n      \"homeDirectory\" : \"3pevij8m4xgkk31piwv40yq5zlcgpiln3oes7c4djyutygfgcpvq6rjopvkof6bp064s69nusvsd9fvx9cmdqu4jpb4jdtebc67754f0dnsu2\",\n      \"operatingSystemType\" : \"OPERATING_SYSTEM_TYPE_UNSPECIFIED\",\n      \"shell\" : \"xio0e9a2r8fgfa14k0hj4x9pnvntgqobe1kgehvk4ybf0h5ygo8zjmtgdv9sib0jtryvfktxgh37exap3p3umonockccs7zous\",\n      \"name\" : \"Shakira Reilly\",\n      \"primary\" : true,\n      \"username\" : \"mariel.cormier\"\n    }, {\n      \"accountId\" : \"mixq\",\n      \"uid\" : \"21uy\",\n      \"systemId\" : \"1nhk\",\n      \"gecos\" : \"uuidt7wzxx7643kf9qx06bcqm3io2odl5o3224rwji588kaalkiwwurvjh7x2uexiot5bpvq3uutkoqnnbrro5kk88tysid6cq5hbvq2691kx0us11ftl5718kvjyz7jzu6mrhttq3vlnwzzysaqdx4utet11qh9b8xlmdkop8n0q3etzu9j1hu2zoo7om1g8ctc9\",\n      \"gid\" : \"an1d\",\n      \"homeDirectory\" : \"awu1y6to0hf9azf2x6ckt3if0w1qcx1jqnl7feffplpihlq3p38jhjawgyr11o5h37vkbwba9f47eqd4w3pbrcrphsjdiozqik9rrj5njzrsv2fhzb1v7crwtny3tdi8aj3prx1grq7ft1sexpqbs4wjzufmzealb3sxzo0nee7romomvb90wn5woak30dzf\",\n      \"operatingSystemType\" : \"LINUX\",\n      \"shell\" : \"qqntqmxktw6etxv7gyuk9yxznmmspntyynzio3ppchty8lpqp6w88\",\n      \"name\" : \"Tessa Hansen DVM\",\n      \"primary\" : true,\n      \"username\" : \"rodolfo.schowalter\"\n    } ],\n    \"securityKeys\" : [ {\n      \"privateKey\" : \"va1i1dlbirgtjpxw3x4le7wktx0f1iodwhtodlpxshi5znz041w7ywafc9qqdnot7cefjzv6ha24lfe51bvwbkssv4ouqc18fd48buefwf3peug79t\",\n      \"webAuthn\" : {\n        \"rpId\" : \"mg23\"\n      },\n      \"universalTwoFactor\" : {\n        \"appId\" : \"8887\"\n      },\n      \"publicKey\" : \"qxdge3skocs2su2yrvsdg63o7iymc35dai4x27qmwg2r09hlqri3ky8h5h60n6po9iylrgqzgkg47urlal26f814ocghb1uq3j4w661tc1reh442bdfm7h511hsgjzcioodu7zlqs02k18knhwdnipq7lq791pyi052fim72knm6w56uc05el723rph\"\n    }, {\n      \"privateKey\" : \"rsf7tzaqp55d4cs6kvn0o8ubdz1g6cwwiab6syup2f0we7e76bar0q1lkw77zubr99vy9ny5wfshcdrkvzs4\",\n      \"webAuthn\" : {\n        \"rpId\" : \"li1f\"\n      },\n      \"universalTwoFactor\" : {\n        \"appId\" : \"43ye\"\n      },\n      \"publicKey\" : \"ert70l9pzi25b0e8t658h0umwx5vttbr0037p2ef8clhhpkdjhy6m7lalbv6gv3dr7cwzj3ui5hyt0eyjlluawdeqb9t2rmd2k\"\n    }, {\n      \"privateKey\" : \"zib6wrsl2huxkrq9smz1k0fmnd1h65trps9j5h8iz6t3b62y6eebl3u4vxgxzc6d4z7q6lzi7l10ynxina4d7d1jk42eacw9lnogfvcx1j99i3vbgo2r8fs4osmc49gjnxp4gfmvpyvqvy03cyfvr9clu9lg5fs7qgi314j94g4y939g\",\n      \"webAuthn\" : {\n        \"rpId\" : \"8n1n\"\n      },\n      \"universalTwoFactor\" : {\n        \"appId\" : \"7710\"\n      },\n      \"publicKey\" : \"05o935u9aovbcgbkyxygzlsoxlndkijdsmatyqrvwxtdxbt34rcb0fv3euap55w7ynpsz61gd498ym9au1lcfqiz400ofepax6t8jyy7sq83mexvo2m7hkda7frp264n7fv722kszesv6gj4ff9v5ov63t75n93xzl21v6cf18rkumsk1flp0d26k8enevu4x0qs\"\n    }, {\n      \"privateKey\" : \"qzwanqmik65o71rbmhb8nwkecgv9noa2ufjtfncn4rpkqyk8bnp6qony3zq4kdrxsr5avguafdnt6clz0i\",\n      \"webAuthn\" : {\n        \"rpId\" : \"9771\"\n      },\n      \"universalTwoFactor\" : {\n        \"appId\" : \"11s0\"\n      },\n      \"publicKey\" : \"x7swp1j5s6dxsqitipi7yionby942ldrgqvkrsloxp8kpe18weiibysuv2h4117\"\n    }, {\n      \"privateKey\" : \"z6tvpn7skrozo43q9ydswyd4cm2grlseaxb2x7l8roiiyanike0iznz9mcft189rxbf7eevakgnj9kr5pymzi9qtsr4nxpd9q7o9e8xejb5acc4jy2gjkrstevl1wjsf013t6oi3lhzowl57jvl73mzls4f7mfino9zue3\",\n      \"webAuthn\" : {\n        \"rpId\" : \"07y9\"\n      },\n      \"universalTwoFactor\" : {\n        \"appId\" : \"rrz5\"\n      },\n      \"publicKey\" : \"mrrdho4ps1c4uvnfetux9ys2yrgd9ykxbyf1sns2lzb2calurb5nmjmiifwmksj8pvmtsw1c1m2ulgqelwwz79jy0ge3b3qr3tf65zj7dgo8wx9p3wpmi6g5ol2bunu3npko8g7fthjkh1unugnoxks0hm87aomn26gfw\"\n    } ]\n  },\n  \"details\" : \"jlsr5h85erebtmcr0711tg61o4fiq79fcdrja81pn31reynmczk7cim4oiydx1uezebjoignf06qdqvmymmlq9oa08xd1c6\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "63302a05-5f3f-39f5-b227-35f526da3457",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "oslogin.users.importSshPublicKey",
          "schema" : {
            "description" : "A response message for importing an SSH public key.",
            "properties" : {
              "details" : {
                "description" : "Detailed information about import results.",
                "type" : "string"
              },
              "loginProfile" : {
                "$ref" : "#/components/schemas/LoginProfile"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "0f9bdd73-c45e-3cfe-8755-99027d183e0e",
    "name" : "Create an SSH public key",
    "request" : {
      "urlPath" : "/v1beta/djesk2wg5h66n4qjwd2mdujxu8owld57wlrk31fb8t2kvljrmb592v1q470bau1o75doe6lwc5lxwkwhnh/sshPublicKeys",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"expirationTimeUsec\" : \"2023-02-27T15:55:16.176858Z\",\n  \"fingerprint\" : \"vb29pljyrcn2hjtqe3f1hplntxzqgdse2mmov8seztnhf1kr0wugk1cd1vjd2jtlt6zabz5ojd7mm7p9lpweydw5oa1oss25swfksnmt6k9b4brucyrrmizdudbaasy0xsrbi7gpi9na0lyaieh1y28\",\n  \"name\" : \"Mrs. Thurman Ruecker\",\n  \"key\" : \"fyum7fdqccb2bvp3jesymbl6d67ymclrxfyjvjzfhfqllte98d49pcdpvuqtcxsgil2o7u17h9nsdbokwvhusj0awvh2z629supq468laeopvc0e6q8ax9gzixerui85nodkvaw6gme3bxtoy11nddvp38\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0f9bdd73-c45e-3cfe-8755-99027d183e0e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "oslogin.users.sshPublicKeys.create",
          "schema" : {
            "description" : "The SSH public key information associated with a Google account.",
            "properties" : {
              "expirationTimeUsec" : {
                "description" : "An expiration time in microseconds since epoch.",
                "format" : "int64",
                "type" : "string"
              },
              "fingerprint" : {
                "description" : "Output only. The SHA-256 fingerprint of the SSH public key.",
                "readOnly" : true,
                "type" : "string"
              },
              "key" : {
                "description" : "Public key text in SSH format, defined by RFC4253 section 6.6.",
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The canonical resource name.",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "2ffac8b0-ebad-384d-aa03-ff1509d7d7e1",
    "name" : "Retrieves the profile information used for logging in to a virtual machine on Go...",
    "request" : {
      "urlPath" : "/v1beta/Rubin+Shields/loginProfile",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"sshPublicKeys\" : { },\n  \"name\" : \"Margarett Rosenbaum\",\n  \"posixAccounts\" : [ {\n    \"accountId\" : \"yx4c\",\n    \"uid\" : \"354w\",\n    \"systemId\" : \"3a6c\",\n    \"gecos\" : \"n7ycr21xrbg9sgsaz8tgyb1qw1zueqrc1zt6bpex1ionzld60g31y1biamvpp1rvmwiv7qna00\",\n    \"gid\" : \"p2q6\",\n    \"homeDirectory\" : \"n0olxzhj6ttne429vhwxyei68lg3hogyiu6vrhapkf54dq8jhye\",\n    \"operatingSystemType\" : \"OPERATING_SYSTEM_TYPE_UNSPECIFIED\",\n    \"shell\" : \"tednz2hntmf5p1cgppkq8liqjzgm48ewxk0byffydfsx2fss23kaexkmpez4kcevat7nb0ag6i2rmex3rutr2gt3vaxaor6\",\n    \"name\" : \"Gustavo Abshire\",\n    \"primary\" : true,\n    \"username\" : \"jane.rohan\"\n  } ],\n  \"securityKeys\" : [ {\n    \"privateKey\" : \"lj28hfp0ijowllb851oofh0ey27jv9apx86oafiv2qh2i8mzxa9ejrvifdet71brnb6gfp78muc93imkbhw4thc9eqdh6ubhdhpnrohbxt7g0ashlomhkjok79ik3nb95rpp64o8kp4z\",\n    \"webAuthn\" : {\n      \"rpId\" : \"n90f\"\n    },\n    \"universalTwoFactor\" : {\n      \"appId\" : \"1hm2\"\n    },\n    \"publicKey\" : \"8f6l7fsvyleo97mlfol\"\n  }, {\n    \"privateKey\" : \"u6ovq6b6v3fxs9ijd5hwf2xkbceplgdmpigofn3dz4n33webigis3k2oyyfywi80dtqc74cuewiyvc9yufp6olwk704tw4cojkhwihmyxyjmmxb8rcopxvp0oju\",\n    \"webAuthn\" : {\n      \"rpId\" : \"rrz8\"\n    },\n    \"universalTwoFactor\" : {\n      \"appId\" : \"6pcn\"\n    },\n    \"publicKey\" : \"7wtqeh43gko3na08i\"\n  }, {\n    \"privateKey\" : \"76tw4fqz9o4j6if3jsjndetn1arywyocc2a6onsvn18sjmadi9ngyisml8ro4dhcdtj68miqyrx5i9lw2f50qrl7cziffx0zhzq09i7m7em07vtkgnccl4siflffah6puptr60syktodpfy10o83qwxg8q6c4jy6j6go8k92fomdcnb332p\",\n    \"webAuthn\" : {\n      \"rpId\" : \"z02n\"\n    },\n    \"universalTwoFactor\" : {\n      \"appId\" : \"dt4b\"\n    },\n    \"publicKey\" : \"5e4ynj38psmbwvjrn45l3yj4c3h2p6gq1bwswapzqcvz6fsc7gvvtwqkyo9ktzuy3zymxymaqzn1al81lddvhkemjzmrhj6l5tmlegygrmnoe8whkxcqnzatpfh0ir3lppxhu24doodx6e8ez77smislalxqqjjr1wtx1pu15er8z9oncs7cz7me\"\n  }, {\n    \"privateKey\" : \"8gdpvb1aurpwvt8hfouc6w6uy1afzc17pwhdpjux9kklj556itf6y\",\n    \"webAuthn\" : {\n      \"rpId\" : \"ikp1\"\n    },\n    \"universalTwoFactor\" : {\n      \"appId\" : \"81wn\"\n    },\n    \"publicKey\" : \"rw24gftclgadii0uldbc9uzyy1dhkr0wl654jfo5b50ljj9rvc4ttgrn6s37drw8z4dzpb\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2ffac8b0-ebad-384d-aa03-ff1509d7d7e1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "oslogin.users.getLoginProfile",
          "schema" : {
            "description" : "The user profile information used for logging in to a virtual machine on Google Compute Engine.",
            "properties" : {
              "name" : {
                "description" : "Required. A unique user ID.",
                "type" : "string"
              },
              "posixAccounts" : {
                "description" : "The list of POSIX accounts associated with the user.",
                "items" : {
                  "$ref" : "#/components/schemas/PosixAccount"
                },
                "type" : "array"
              },
              "securityKeys" : {
                "description" : "The registered security key credentials for a user.",
                "items" : {
                  "$ref" : "#/components/schemas/SecurityKey"
                },
                "type" : "array"
              },
              "sshPublicKeys" : {
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/SshPublicKey"
                },
                "description" : "A map from SSH public key fingerprint to the associated key object.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "0e752285-3546-3d17-92ce-94bb046e372a",
    "name" : "Updates an SSH public key and returns the profile information. This method suppo...",
    "request" : {
      "urlPath" : "/v1beta/Soila+Ruecker+PhD",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"expirationTimeUsec\" : \"2022-11-30T16:31:16.175291Z\",\n  \"fingerprint\" : \"jdtwsujxf0od1oixb7yn7syff4ngea6l9fbinzylm62ardb38lgq8d6x3hoj44bci4ysjy8a8bese91adm0f8bbd84ctuwv3sr98o71qmzc2v5nu7svxraxu33kdc9ohqxd1249qjnr5vdlnk2xhthkazskki8wmtc6htncvjm0p0\",\n  \"name\" : \"Alex Tremblay\",\n  \"key\" : \"owrb8v6d5n6788iv0bp5my05r9aacoe0b1ev0cxpjjslqsmms8d8w2ehjvwpw960tunu4galyf82dcpi4m57rzrcg7jh1k2tq626bvq7btz27rkjel\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0e752285-3546-3d17-92ce-94bb046e372a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "oslogin.users.sshPublicKeys.patch",
          "schema" : {
            "description" : "The SSH public key information associated with a Google account.",
            "properties" : {
              "expirationTimeUsec" : {
                "description" : "An expiration time in microseconds since epoch.",
                "format" : "int64",
                "type" : "string"
              },
              "fingerprint" : {
                "description" : "Output only. The SHA-256 fingerprint of the SSH public key.",
                "readOnly" : true,
                "type" : "string"
              },
              "key" : {
                "description" : "Public key text in SSH format, defined by RFC4253 section 6.6.",
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The canonical resource name.",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "f60cae35-513a-34c4-a821-06bdd823bc1f",
    "name" : "Retrieves an SSH public key.",
    "request" : {
      "urlPath" : "/v1beta/Javier+Predovic+V",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"expirationTimeUsec\" : \"2022-03-27T13:28:16.175046Z\",\n  \"fingerprint\" : \"nkxh87pbhvl3b48rxsqt8cy4lrhvpgy7kfjh71xg0dsx0am2oiy1p4vfd2jnwr6hdly9uz0p2aygla\",\n  \"name\" : \"Gretta Leffler PhD\",\n  \"key\" : \"fgn9ypsfar\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f60cae35-513a-34c4-a821-06bdd823bc1f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "oslogin.users.sshPublicKeys.get",
          "schema" : {
            "description" : "The SSH public key information associated with a Google account.",
            "properties" : {
              "expirationTimeUsec" : {
                "description" : "An expiration time in microseconds since epoch.",
                "format" : "int64",
                "type" : "string"
              },
              "fingerprint" : {
                "description" : "Output only. The SHA-256 fingerprint of the SSH public key.",
                "readOnly" : true,
                "type" : "string"
              },
              "key" : {
                "description" : "Public key text in SSH format, defined by RFC4253 section 6.6.",
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The canonical resource name.",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "e7de2312-2d9a-3578-b5a1-ee8eae09f889",
    "name" : "Deletes an SSH public key.",
    "request" : {
      "urlPath" : "/v1beta/Perry+Pfeffer+Jr.",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e7de2312-2d9a-3578-b5a1-ee8eae09f889",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "oslogin.users.sshPublicKeys.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  } ]
}