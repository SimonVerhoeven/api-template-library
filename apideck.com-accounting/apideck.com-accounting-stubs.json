{
  "mappings" : [ {
    "id" : "d5e349b9-0885-4f0c-8349-5c9ffb1ef9e9",
    "name" : "Update Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/83iz",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d5e349b9-0885-4f0c-8349-5c9ffb1ef9e9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.085219Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "b5f93ddb-406c-45e1-ac1b-a05aba7ad366",
    "name" : "Update Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/18px",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b5f93ddb-406c-45e1-ac1b-a05aba7ad366",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.085084Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "ae238ae1-0044-4f63-852e-13d9ce1ed9f9",
    "name" : "Update Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/0saw",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ae238ae1-0044-4f63-852e-13d9ce1ed9f9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.084904Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "cfd891ce-4b8e-4fe6-a331-fe85600f5936",
    "name" : "Update Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/0jm5",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cfd891ce-4b8e-4fe6-a331-fe85600f5936",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.084778Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "2b341ed1-cd29-44ea-9c98-b4ed5156f727",
    "name" : "Update Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/v2b3",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2b341ed1-cd29-44ea-9c98-b4ed5156f727",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.084652Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "d5413866-74d2-4645-80ef-2532a6c7b060",
    "name" : "Update Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/h4o7",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"tax-rates\",\n  \"service\" : \"xero\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d5413866-74d2-4645-80ef-2532a6c7b060",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.084509Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "tax-rates",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateTaxRateResponse"
          }
        }
      }
    }
  }, {
    "id" : "0e6ee98b-397b-41f1-bea2-2f6dbc682685",
    "name" : "Get Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/hnlk",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0e6ee98b-397b-41f1-bea2-2f6dbc682685",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.08437Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "762b0c22-147c-4755-ba5e-60879aa45f21",
    "name" : "Get Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/zv3i",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "762b0c22-147c-4755-ba5e-60879aa45f21",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.08424Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "4d5bf8ab-a279-4960-9450-708d3cb00241",
    "name" : "Get Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/7y10",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4d5bf8ab-a279-4960-9450-708d3cb00241",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.084089Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "23243dac-75de-4815-b534-c7d38a7c46c2",
    "name" : "Get Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/270l",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "23243dac-75de-4815-b534-c7d38a7c46c2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.083931Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "1d162f6f-059c-4988-b03a-c38254abb6dc",
    "name" : "Get Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/102h",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1d162f6f-059c-4988-b03a-c38254abb6dc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.083797Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "f5081e4f-a3ea-4972-a46e-d83d49b96f98",
    "name" : "Get Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/y7a7",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"components\" : [ {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    } ],\n    \"code\" : \"ABN\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Reduced rate GST Purchases\",\n    \"type\" : \"NONE\",\n    \"created_by\" : \"12345\",\n    \"original_tax_rate_id\" : \"12345\",\n    \"tax_remitted_account_id\" : \"123456\",\n    \"tax_payable_account_id\" : \"123456\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"report_tax_type\" : \"NONE\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"GST on Purchases\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"1234\",\n    \"effective_tax_rate\" : 10,\n    \"total_tax_rate\" : 10,\n    \"status\" : \"active\"\n  },\n  \"resource\" : \"tax-rates\",\n  \"service\" : \"xero\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f5081e4f-a3ea-4972-a46e-d83d49b96f98",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.083644Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/TaxRate"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "tax-rates",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetTaxRateResponse",
            "x-graphql-type-name" : "TaxRateOne"
          }
        }
      }
    }
  }, {
    "id" : "cfe914ba-023e-45fb-ad19-626dcb4470e2",
    "name" : "Delete Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/yvm3",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cfe914ba-023e-45fb-ad19-626dcb4470e2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.083401Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "3e4dabd5-bf9d-4e88-840a-dbf46568bae7",
    "name" : "Delete Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/twan",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3e4dabd5-bf9d-4e88-840a-dbf46568bae7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.083269Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "3884414a-1539-4d7f-8d52-911c165b9eb4",
    "name" : "Delete Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/z1d3",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3884414a-1539-4d7f-8d52-911c165b9eb4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.083116Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "e12c9ea5-6bb7-4cb5-8273-6bdefe7b01e0",
    "name" : "Delete Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/nd65",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e12c9ea5-6bb7-4cb5-8273-6bdefe7b01e0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.082986Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "63331076-a652-40dc-aa0e-671530a2a027",
    "name" : "Delete Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/w9l6",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "63331076-a652-40dc-aa0e-671530a2a027",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.082853Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "7b3a8e11-8202-438c-8b41-850b6e091914",
    "name" : "Delete Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/5l9g",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"tax-rates\",\n  \"service\" : \"xero\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7b3a8e11-8202-438c-8b41-850b6e091914",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.082697Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "tax-rates",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "DeleteTaxRateResponse"
          }
        }
      }
    }
  }, {
    "id" : "47ab3771-aa27-477a-a105-427138f42249",
    "name" : "Create Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "47ab3771-aa27-477a-a105-427138f42249",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.08255Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "d643713d-0635-4ece-acb0-7a217e7b9e5b",
    "name" : "Create Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d643713d-0635-4ece-acb0-7a217e7b9e5b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.082485Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "3a178471-73ce-4de5-b697-0a08e30add5b",
    "name" : "Create Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3a178471-73ce-4de5-b697-0a08e30add5b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.082399Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "5b36707e-ce04-4414-9948-047073a2bff2",
    "name" : "Create Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5b36707e-ce04-4414-9948-047073a2bff2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.082332Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "e2f51355-22a6-4141-852a-4434f1a2c067",
    "name" : "Create Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e2f51355-22a6-4141-852a-4434f1a2c067",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.082265Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "19f82a92-e415-46cb-8b5c-8b9c75eeae86",
    "name" : "Create Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"tax-rates\",\n  \"service\" : \"xero\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "19f82a92-e415-46cb-8b5c-8b9c75eeae86",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.082176Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "tax-rates",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateTaxRateResponse"
          }
        }
      }
    }
  }, {
    "id" : "548283ac-a092-4a17-bcd7-c57447b67902",
    "name" : "List Tax Rates",
    "request" : {
      "urlPath" : "/accounting/tax-rates",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "548283ac-a092-4a17-bcd7-c57447b67902",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.082097Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "06324eb7-d7d0-47c8-9115-aa42bdb10731",
    "name" : "List Tax Rates",
    "request" : {
      "urlPath" : "/accounting/tax-rates",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "06324eb7-d7d0-47c8-9115-aa42bdb10731",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.082025Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "aa1d73b8-ffce-4e66-85ad-71b5beec33fb",
    "name" : "List Tax Rates",
    "request" : {
      "urlPath" : "/accounting/tax-rates",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aa1d73b8-ffce-4e66-85ad-71b5beec33fb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.081927Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "79e6c58f-a42e-4848-b818-38e43e50bbaa",
    "name" : "List Tax Rates",
    "request" : {
      "urlPath" : "/accounting/tax-rates",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "79e6c58f-a42e-4848-b818-38e43e50bbaa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.081858Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "81a84010-b197-4875-8b64-ecf289d01286",
    "name" : "List Tax Rates",
    "request" : {
      "urlPath" : "/accounting/tax-rates",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "81a84010-b197-4875-8b64-ecf289d01286",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.081788Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "218dcd40-3776-4ea2-bafa-18dc619a2e4a",
    "name" : "List Tax Rates",
    "request" : {
      "urlPath" : "/accounting/tax-rates",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"components\" : [ {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    } ],\n    \"code\" : \"ABN\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Reduced rate GST Purchases\",\n    \"type\" : \"NONE\",\n    \"created_by\" : \"12345\",\n    \"original_tax_rate_id\" : \"12345\",\n    \"tax_remitted_account_id\" : \"123456\",\n    \"tax_payable_account_id\" : \"123456\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"report_tax_type\" : \"NONE\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"GST on Purchases\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"1234\",\n    \"effective_tax_rate\" : 10,\n    \"total_tax_rate\" : 10,\n    \"status\" : \"active\"\n  }, {\n    \"components\" : [ {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    } ],\n    \"code\" : \"ABN\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Reduced rate GST Purchases\",\n    \"type\" : \"NONE\",\n    \"created_by\" : \"12345\",\n    \"original_tax_rate_id\" : \"12345\",\n    \"tax_remitted_account_id\" : \"123456\",\n    \"tax_payable_account_id\" : \"123456\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"report_tax_type\" : \"NONE\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"GST on Purchases\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"1234\",\n    \"effective_tax_rate\" : 10,\n    \"total_tax_rate\" : 10,\n    \"status\" : \"active\"\n  }, {\n    \"components\" : [ {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    } ],\n    \"code\" : \"ABN\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Reduced rate GST Purchases\",\n    \"type\" : \"NONE\",\n    \"created_by\" : \"12345\",\n    \"original_tax_rate_id\" : \"12345\",\n    \"tax_remitted_account_id\" : \"123456\",\n    \"tax_payable_account_id\" : \"123456\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"report_tax_type\" : \"NONE\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"GST on Purchases\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"1234\",\n    \"effective_tax_rate\" : 10,\n    \"total_tax_rate\" : 10,\n    \"status\" : \"active\"\n  }, {\n    \"components\" : [ {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    } ],\n    \"code\" : \"ABN\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Reduced rate GST Purchases\",\n    \"type\" : \"NONE\",\n    \"created_by\" : \"12345\",\n    \"original_tax_rate_id\" : \"12345\",\n    \"tax_remitted_account_id\" : \"123456\",\n    \"tax_payable_account_id\" : \"123456\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"report_tax_type\" : \"NONE\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"GST on Purchases\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"1234\",\n    \"effective_tax_rate\" : 10,\n    \"total_tax_rate\" : 10,\n    \"status\" : \"active\"\n  }, {\n    \"components\" : [ {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    } ],\n    \"code\" : \"ABN\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Reduced rate GST Purchases\",\n    \"type\" : \"NONE\",\n    \"created_by\" : \"12345\",\n    \"original_tax_rate_id\" : \"12345\",\n    \"tax_remitted_account_id\" : \"123456\",\n    \"tax_payable_account_id\" : \"123456\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"report_tax_type\" : \"NONE\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"GST on Purchases\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"1234\",\n    \"effective_tax_rate\" : 10,\n    \"total_tax_rate\" : 10,\n    \"status\" : \"active\"\n  } ],\n  \"resource\" : \"tax-rates\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"xero\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "218dcd40-3776-4ea2-bafa-18dc619a2e4a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.081691Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/TaxRate"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "tax-rates",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetTaxRatesResponse",
            "x-graphql-type-name" : "TaxRateList"
          }
        }
      }
    }
  }, {
    "id" : "a5f06353-ed66-4d68-945f-0166f0f62297",
    "name" : "Update Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/ey3r",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a5f06353-ed66-4d68-945f-0166f0f62297",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.081309Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "a3464a4e-1241-4bcd-84ef-cde1354b3fef",
    "name" : "Update Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/s978",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a3464a4e-1241-4bcd-84ef-cde1354b3fef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.081183Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "09b753f1-3f56-46cf-ba52-a05dd6ab60ad",
    "name" : "Update Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/9e77",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "09b753f1-3f56-46cf-ba52-a05dd6ab60ad",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.081037Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "da3db55b-0981-49e1-86b7-dab16d9d3a10",
    "name" : "Update Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/4xl9",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "da3db55b-0981-49e1-86b7-dab16d9d3a10",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.080913Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "8b2bc524-c976-4d74-b6f7-1f79c069a7c9",
    "name" : "Update Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/xa2b",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8b2bc524-c976-4d74-b6f7-1f79c069a7c9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.08079Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "71c8b4f4-2909-4832-a916-004422c9b6de",
    "name" : "Update Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/82kj",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"suppliers\",\n  \"service\" : \"xero\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "71c8b4f4-2909-4832-a916-004422c9b6de",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.080642Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "suppliers",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateSupplierResponse"
          }
        }
      }
    }
  }, {
    "id" : "1c7fb6bd-aef5-4159-a525-aaf5a5f61251",
    "name" : "Get Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/g6ak",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1c7fb6bd-aef5-4159-a525-aaf5a5f61251",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.0805Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "39231ef1-4bae-4d32-8db8-0265c8927fe2",
    "name" : "Get Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/k5ig",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "39231ef1-4bae-4d32-8db8-0265c8927fe2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.080373Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "03ee5f23-5fc9-44ba-b1d0-b9c75f955379",
    "name" : "Get Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/oiou",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "03ee5f23-5fc9-44ba-b1d0-b9c75f955379",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.080226Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "8a7e131a-3875-4cbd-bfe4-527906562a12",
    "name" : "Get Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/gfsk",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8a7e131a-3875-4cbd-bfe4-527906562a12",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.080094Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "e3faf3c5-de17-4449-a16a-8e3ed4a06a2a",
    "name" : "Get Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/6u87",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e3faf3c5-de17-4449-a16a-8e3ed4a06a2a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.079965Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "358088a1-66e8-4ce9-8d78-de0dd57469a9",
    "name" : "Get Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/eex5",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"notes\" : \"Some notes about this supplier\",\n    \"display_id\" : \"EMP00101\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"suffix\" : \"Jr.\",\n    \"title\" : \"CEO\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"tax_number\" : \"US123945459\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"first_name\" : \"Elon\",\n    \"individual\" : true,\n    \"last_name\" : \"Musk\",\n    \"display_name\" : \"Windsurf Shop\",\n    \"middle_name\" : \"D.\",\n    \"created_by\" : \"12345\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_name\" : \"SpaceX\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"bank_accounts\" : [ {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    } ],\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"status\" : \"active\"\n  },\n  \"resource\" : \"suppliers\",\n  \"service\" : \"xero\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "358088a1-66e8-4ce9-8d78-de0dd57469a9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.079809Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Supplier"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "suppliers",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetSupplierResponse",
            "x-graphql-type-name" : "Supplier"
          }
        }
      }
    }
  }, {
    "id" : "edd9df16-1d68-4d9b-b7b0-ef818813ed7b",
    "name" : "Delete Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/0v5p",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "edd9df16-1d68-4d9b-b7b0-ef818813ed7b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.079305Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "cc2d2ff2-bd08-43a8-aa43-236552c9533f",
    "name" : "Delete Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/7zb8",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cc2d2ff2-bd08-43a8-aa43-236552c9533f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.079163Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "1833f87b-053c-4e39-a24b-ce397014ace4",
    "name" : "Delete Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/j064",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1833f87b-053c-4e39-a24b-ce397014ace4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.079015Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "b9b4020c-b984-4235-ab97-2337eb9577a6",
    "name" : "Delete Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/o39n",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b9b4020c-b984-4235-ab97-2337eb9577a6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.078877Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "d0c1e043-c206-4333-8d69-1c0feacda102",
    "name" : "Delete Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/15c1",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d0c1e043-c206-4333-8d69-1c0feacda102",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.078745Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "92cc8307-4fa9-413f-b601-1338eaa4887f",
    "name" : "Delete Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/8c4a",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"suppliers\",\n  \"service\" : \"xero\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "92cc8307-4fa9-413f-b601-1338eaa4887f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.078574Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "suppliers",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "DeleteSupplierResponse"
          }
        }
      }
    }
  }, {
    "id" : "c9c19a46-5803-4a89-addd-035a93e8ffc7",
    "name" : "Create Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c9c19a46-5803-4a89-addd-035a93e8ffc7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.078359Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "35074576-0a10-43aa-aee9-eb900bea7055",
    "name" : "Create Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "35074576-0a10-43aa-aee9-eb900bea7055",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.078291Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "59454348-1eec-473d-b707-4dd2682c60ae",
    "name" : "Create Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "59454348-1eec-473d-b707-4dd2682c60ae",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.078206Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "77805643-0c6c-44cd-a6ec-1f4c64b30cef",
    "name" : "Create Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "77805643-0c6c-44cd-a6ec-1f4c64b30cef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.07814Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "f19d2505-3e37-4859-8267-20249b53bc33",
    "name" : "Create Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f19d2505-3e37-4859-8267-20249b53bc33",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.078072Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "09e63592-ef27-4028-968c-99c3a953d6df",
    "name" : "Create Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"payments\",\n  \"service\" : \"xero\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "09e63592-ef27-4028-968c-99c3a953d6df",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.077981Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "payments",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateSupplierResponse"
          }
        }
      }
    }
  }, {
    "id" : "7e8b1e17-e741-4882-b904-5f164f728731",
    "name" : "List Suppliers",
    "request" : {
      "urlPath" : "/accounting/suppliers",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7e8b1e17-e741-4882-b904-5f164f728731",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.077893Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "16b49025-49a9-4dec-909f-2a61959b5011",
    "name" : "List Suppliers",
    "request" : {
      "urlPath" : "/accounting/suppliers",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "16b49025-49a9-4dec-909f-2a61959b5011",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.077819Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "39b4b18e-213a-4d41-9652-bc0940203a6a",
    "name" : "List Suppliers",
    "request" : {
      "urlPath" : "/accounting/suppliers",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "39b4b18e-213a-4d41-9652-bc0940203a6a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.077727Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "095e7b70-bc52-4ab8-94c4-3308e31e5890",
    "name" : "List Suppliers",
    "request" : {
      "urlPath" : "/accounting/suppliers",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "095e7b70-bc52-4ab8-94c4-3308e31e5890",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.077655Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "c132e609-e3a5-4d41-a4c6-a1de06bb256c",
    "name" : "List Suppliers",
    "request" : {
      "urlPath" : "/accounting/suppliers",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c132e609-e3a5-4d41-a4c6-a1de06bb256c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.077583Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "7956583f-c6b0-4bbb-8ab6-9838cfa04b65",
    "name" : "List Suppliers",
    "request" : {
      "urlPath" : "/accounting/suppliers",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"notes\" : \"Some notes about this supplier\",\n    \"display_id\" : \"EMP00101\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"suffix\" : \"Jr.\",\n    \"title\" : \"CEO\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"tax_number\" : \"US123945459\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"first_name\" : \"Elon\",\n    \"individual\" : true,\n    \"last_name\" : \"Musk\",\n    \"display_name\" : \"Windsurf Shop\",\n    \"middle_name\" : \"D.\",\n    \"created_by\" : \"12345\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_name\" : \"SpaceX\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"bank_accounts\" : [ {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    } ],\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"status\" : \"active\"\n  }, {\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"notes\" : \"Some notes about this supplier\",\n    \"display_id\" : \"EMP00101\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"suffix\" : \"Jr.\",\n    \"title\" : \"CEO\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"tax_number\" : \"US123945459\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"first_name\" : \"Elon\",\n    \"individual\" : true,\n    \"last_name\" : \"Musk\",\n    \"display_name\" : \"Windsurf Shop\",\n    \"middle_name\" : \"D.\",\n    \"created_by\" : \"12345\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_name\" : \"SpaceX\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"bank_accounts\" : [ {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    } ],\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"status\" : \"active\"\n  }, {\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"notes\" : \"Some notes about this supplier\",\n    \"display_id\" : \"EMP00101\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"suffix\" : \"Jr.\",\n    \"title\" : \"CEO\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"tax_number\" : \"US123945459\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"first_name\" : \"Elon\",\n    \"individual\" : true,\n    \"last_name\" : \"Musk\",\n    \"display_name\" : \"Windsurf Shop\",\n    \"middle_name\" : \"D.\",\n    \"created_by\" : \"12345\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_name\" : \"SpaceX\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"bank_accounts\" : [ {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    } ],\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"status\" : \"active\"\n  }, {\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"notes\" : \"Some notes about this supplier\",\n    \"display_id\" : \"EMP00101\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"suffix\" : \"Jr.\",\n    \"title\" : \"CEO\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"tax_number\" : \"US123945459\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"first_name\" : \"Elon\",\n    \"individual\" : true,\n    \"last_name\" : \"Musk\",\n    \"display_name\" : \"Windsurf Shop\",\n    \"middle_name\" : \"D.\",\n    \"created_by\" : \"12345\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_name\" : \"SpaceX\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"bank_accounts\" : [ {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    } ],\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"status\" : \"active\"\n  } ],\n  \"resource\" : \"suppliers\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"xero\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7956583f-c6b0-4bbb-8ab6-9838cfa04b65",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.077463Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/Supplier"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "suppliers",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetSuppliersResponse",
            "x-graphql-type-name" : "SupplierList"
          }
        }
      }
    }
  }, {
    "id" : "26ffec12-a278-480d-8741-49f1b6d4763d",
    "name" : "Get Profit and Loss",
    "request" : {
      "urlPath" : "/accounting/profit-and-loss",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "26ffec12-a278-480d-8741-49f1b6d4763d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.075782Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "profitAndLossOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "80ac84be-abdf-47e6-b564-4e978ad36284",
    "name" : "Get Profit and Loss",
    "request" : {
      "urlPath" : "/accounting/profit-and-loss",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "80ac84be-abdf-47e6-b564-4e978ad36284",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.075708Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "profitAndLossOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "9cb5c0a1-1926-4b8f-b0e6-73c736acfc2a",
    "name" : "Get Profit and Loss",
    "request" : {
      "urlPath" : "/accounting/profit-and-loss",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9cb5c0a1-1926-4b8f-b0e6-73c736acfc2a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.075598Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "profitAndLossOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "541fcbb7-c243-4dbd-9c8c-9a9ec2480da4",
    "name" : "Get Profit and Loss",
    "request" : {
      "urlPath" : "/accounting/profit-and-loss",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "541fcbb7-c243-4dbd-9c8c-9a9ec2480da4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.075528Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "profitAndLossOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "290b8223-04a2-49d3-b9c4-2bc276dbc1fe",
    "name" : "Get Profit and Loss",
    "request" : {
      "urlPath" : "/accounting/profit-and-loss",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "290b8223-04a2-49d3-b9c4-2bc276dbc1fe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.075455Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "profitAndLossOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "a7824765-c44a-4dce-973f-1d88f4b6dbf5",
    "name" : "Get Profit and Loss",
    "request" : {
      "urlPath" : "/accounting/profit-and-loss",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"end_date\" : \"2017-01-01\",\n    \"income\" : {\n      \"records\" : [ {\n        \"amount\" : 10000,\n        \"id\" : \"123\",\n        \"name\" : \"Income 1\"\n      }, {\n        \"amount\" : 20000,\n        \"id\" : \"456\",\n        \"name\" : \"Income 2\"\n      } ],\n      \"total\" : 200000\n    },\n    \"net_operating_income\" : {\n      \"total\" : 200000\n    },\n    \"gross_profit\" : {\n      \"total\" : 200000\n    },\n    \"currency\" : \"USD\",\n    \"id\" : \"12345\",\n    \"net_income\" : {\n      \"total\" : 200000\n    },\n    \"customer_id\" : \"123\",\n    \"report_name\" : \"ProfitAndLoss\",\n    \"expenses\" : {\n      \"records\" : [ {\n        \"amount\" : 10000,\n        \"id\" : \"123\",\n        \"name\" : \"Expense 1\"\n      }, {\n        \"amount\" : 20000,\n        \"id\" : \"456\",\n        \"name\" : \"Expense 2\"\n      } ],\n      \"total\" : 200000\n    },\n    \"start_date\" : \"2017-01-01\"\n  },\n  \"resource\" : \"ProfitAndLosses\",\n  \"service\" : \"quickbooks\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a7824765-c44a-4dce-973f-1d88f4b6dbf5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.075358Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "profitAndLossOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/ProfitAndLoss"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "ProfitAndLosses",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "quickbooks",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetProfitAndLossResponse",
            "x-graphql-type-name" : "ProfitAndLoss"
          }
        }
      }
    }
  }, {
    "id" : "98eb0ffe-9ce4-4499-8aa9-4a15f955a816",
    "name" : "Update Payment",
    "request" : {
      "urlPath" : "/accounting/payments/yqp8",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "98eb0ffe-9ce4-4499-8aa9-4a15f955a816",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.075228Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "b48828b7-40d6-4f99-a74f-2a8d597c64e8",
    "name" : "Update Payment",
    "request" : {
      "urlPath" : "/accounting/payments/4w20",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b48828b7-40d6-4f99-a74f-2a8d597c64e8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.075093Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "395beae7-a721-49e5-8b81-f1e5fdd4794a",
    "name" : "Update Payment",
    "request" : {
      "urlPath" : "/accounting/payments/65n4",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "395beae7-a721-49e5-8b81-f1e5fdd4794a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.074941Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "cd538e6f-9dcd-4f6f-9bf3-5b3871c3f645",
    "name" : "Update Payment",
    "request" : {
      "urlPath" : "/accounting/payments/455e",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cd538e6f-9dcd-4f6f-9bf3-5b3871c3f645",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.074811Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "01b6c710-66dd-4ad4-9348-ce85c524afcd",
    "name" : "Update Payment",
    "request" : {
      "urlPath" : "/accounting/payments/9lu0",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "01b6c710-66dd-4ad4-9348-ce85c524afcd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.07468Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "d4b14b3c-9da7-4ba2-963b-885c0be89be6",
    "name" : "Update Payment",
    "request" : {
      "urlPath" : "/accounting/payments/1e8x",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"payments\",\n  \"service\" : \"xero\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d4b14b3c-9da7-4ba2-963b-885c0be89be6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.07453Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "payments",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdatePaymentResponse"
          }
        }
      }
    }
  }, {
    "id" : "b1126f33-0fe5-4ee3-8bae-37f47ac5f02b",
    "name" : "Get Payment",
    "request" : {
      "urlPath" : "/accounting/payments/iw63",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b1126f33-0fe5-4ee3-8bae-37f47ac5f02b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.074382Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "91150752-4788-4e7e-8162-8741c5435046",
    "name" : "Get Payment",
    "request" : {
      "urlPath" : "/accounting/payments/uami",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "91150752-4788-4e7e-8162-8741c5435046",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.074242Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "4338780f-8af9-4c0d-9601-d7c00c00253e",
    "name" : "Get Payment",
    "request" : {
      "urlPath" : "/accounting/payments/ejos",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4338780f-8af9-4c0d-9601-d7c00c00253e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.074086Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "26c5a0f3-949a-4c07-8e37-392abaf83947",
    "name" : "Get Payment",
    "request" : {
      "urlPath" : "/accounting/payments/9556",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "26c5a0f3-949a-4c07-8e37-392abaf83947",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.073957Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "1939e624-cec5-4996-89ba-24e1998a8466",
    "name" : "Get Payment",
    "request" : {
      "urlPath" : "/accounting/payments/0m87",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1939e624-cec5-4996-89ba-24e1998a8466",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.07382Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "2b1fab58-322d-4403-ac08-ad13dadb7e70",
    "name" : "Get Payment",
    "request" : {
      "urlPath" : "/accounting/payments/1594",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"note\" : \"Some notes about this payment\",\n    \"display_id\" : \"123456\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"type\" : \"accounts_receivable\",\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"expense\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"expense\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"invoice\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"over_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"invoice\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"pre_payment\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"123456\",\n    \"payment_method\" : \"Credit Card\",\n    \"transaction_date\" : \"2021-05-01T12:00:00.000Z\",\n    \"accounts_receivable_account_id\" : \"123456\",\n    \"reconciled\" : true,\n    \"payment_method_reference\" : \"123456\",\n    \"created_by\" : \"12345\",\n    \"accounts_receivable_account_type\" : \"Account\",\n    \"total_amount\" : 49.99,\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  },\n  \"resource\" : \"payments\",\n  \"service\" : \"xero\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2b1fab58-322d-4403-ac08-ad13dadb7e70",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.07366Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Payment"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "payments",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetPaymentResponse",
            "x-graphql-type-name" : "Payment"
          }
        }
      }
    }
  }, {
    "id" : "baf1d5c2-9105-4acb-a2ee-af7303940e17",
    "name" : "Delete Payment",
    "request" : {
      "urlPath" : "/accounting/payments/6a66",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "baf1d5c2-9105-4acb-a2ee-af7303940e17",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.073265Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "2bc29bdb-b403-4a17-b98c-7b7f66acc22a",
    "name" : "Delete Payment",
    "request" : {
      "urlPath" : "/accounting/payments/0868",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2bc29bdb-b403-4a17-b98c-7b7f66acc22a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.073135Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "b5913998-61a7-4c1a-a313-41b6ecedacf9",
    "name" : "Delete Payment",
    "request" : {
      "urlPath" : "/accounting/payments/6w7l",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b5913998-61a7-4c1a-a313-41b6ecedacf9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.072978Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "a7e612de-817e-4d8f-bda8-84c463c36e91",
    "name" : "Delete Payment",
    "request" : {
      "urlPath" : "/accounting/payments/497q",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a7e612de-817e-4d8f-bda8-84c463c36e91",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.072839Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "276203a1-ef43-4ac2-81a1-8684e76c6f26",
    "name" : "Delete Payment",
    "request" : {
      "urlPath" : "/accounting/payments/e19d",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "276203a1-ef43-4ac2-81a1-8684e76c6f26",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.072703Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "df127881-7436-4355-97f6-6221e27a917a",
    "name" : "Delete Payment",
    "request" : {
      "urlPath" : "/accounting/payments/66uc",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"payments\",\n  \"service\" : \"xero\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "df127881-7436-4355-97f6-6221e27a917a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.072535Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "payments",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "DeletePaymentResponse"
          }
        }
      }
    }
  }, {
    "id" : "af071609-d686-490f-9f6e-a05a0f50a6b7",
    "name" : "Create Payment",
    "request" : {
      "urlPath" : "/accounting/payments",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "af071609-d686-490f-9f6e-a05a0f50a6b7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.072333Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "7ddd57e9-48ba-46e7-875a-ab728ef27b3f",
    "name" : "Create Payment",
    "request" : {
      "urlPath" : "/accounting/payments",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7ddd57e9-48ba-46e7-875a-ab728ef27b3f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.072265Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "66174f2b-0d59-4b18-b955-88a7f255c5ca",
    "name" : "Create Payment",
    "request" : {
      "urlPath" : "/accounting/payments",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "66174f2b-0d59-4b18-b955-88a7f255c5ca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.072178Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "1e36e255-f99a-41b6-9b59-68cec85808b8",
    "name" : "Create Payment",
    "request" : {
      "urlPath" : "/accounting/payments",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1e36e255-f99a-41b6-9b59-68cec85808b8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.072112Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "9d0f110d-d595-43b2-b527-21f7ce7fee0e",
    "name" : "Create Payment",
    "request" : {
      "urlPath" : "/accounting/payments",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9d0f110d-d595-43b2-b527-21f7ce7fee0e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.072042Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "24e08817-3d0b-410c-a87c-4bbb0d59b35a",
    "name" : "Create Payment",
    "request" : {
      "urlPath" : "/accounting/payments",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"payments\",\n  \"service\" : \"xero\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "24e08817-3d0b-410c-a87c-4bbb0d59b35a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.071937Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "payments",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreatePaymentResponse"
          }
        }
      }
    }
  }, {
    "id" : "fde2725b-e269-4e68-994a-dec76a736583",
    "name" : "List Payments",
    "request" : {
      "urlPath" : "/accounting/payments",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fde2725b-e269-4e68-994a-dec76a736583",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.071849Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "aabcf7d6-ca14-4fb0-80b5-a3c9585c819e",
    "name" : "List Payments",
    "request" : {
      "urlPath" : "/accounting/payments",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aabcf7d6-ca14-4fb0-80b5-a3c9585c819e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.071777Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "3c561e40-10b5-4a84-b426-6c2f9290ac93",
    "name" : "List Payments",
    "request" : {
      "urlPath" : "/accounting/payments",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3c561e40-10b5-4a84-b426-6c2f9290ac93",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.071684Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "c4078a94-24e3-4bf8-9a0a-dee5989cbe5b",
    "name" : "List Payments",
    "request" : {
      "urlPath" : "/accounting/payments",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c4078a94-24e3-4bf8-9a0a-dee5989cbe5b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.071616Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "437e4596-badd-4d2e-b327-5bd26706f9ae",
    "name" : "List Payments",
    "request" : {
      "urlPath" : "/accounting/payments",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "437e4596-badd-4d2e-b327-5bd26706f9ae",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.071545Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "a1185743-b77e-4b16-ba47-82ca6c57858a",
    "name" : "List Payments",
    "request" : {
      "urlPath" : "/accounting/payments",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"note\" : \"Some notes about this payment\",\n    \"display_id\" : \"123456\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"type\" : \"accounts_receivable\",\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"pre_payment\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"123456\",\n    \"payment_method\" : \"Credit Card\",\n    \"transaction_date\" : \"2021-05-01T12:00:00.000Z\",\n    \"accounts_receivable_account_id\" : \"123456\",\n    \"reconciled\" : true,\n    \"payment_method_reference\" : \"123456\",\n    \"created_by\" : \"12345\",\n    \"accounts_receivable_account_type\" : \"Account\",\n    \"total_amount\" : 49.99,\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  }, {\n    \"note\" : \"Some notes about this payment\",\n    \"display_id\" : \"123456\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"type\" : \"accounts_receivable\",\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"pre_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"over_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"invoice\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"invoice\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"123456\",\n    \"payment_method\" : \"Credit Card\",\n    \"transaction_date\" : \"2021-05-01T12:00:00.000Z\",\n    \"accounts_receivable_account_id\" : \"123456\",\n    \"reconciled\" : true,\n    \"payment_method_reference\" : \"123456\",\n    \"created_by\" : \"12345\",\n    \"accounts_receivable_account_type\" : \"Account\",\n    \"total_amount\" : 49.99,\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  } ],\n  \"resource\" : \"payments\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"xero\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a1185743-b77e-4b16-ba47-82ca6c57858a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.071438Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/Payment"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "payments",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetPaymentsResponse",
            "x-graphql-type-name" : "PaymentList"
          }
        }
      }
    }
  }, {
    "id" : "68463b83-3543-4d1e-a33a-ccf661b99a3d",
    "name" : "Update Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/05p0",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "68463b83-3543-4d1e-a33a-ccf661b99a3d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.070935Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "a705fec3-7a8b-463d-ba88-9212771797fe",
    "name" : "Update Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/p6xe",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a705fec3-7a8b-463d-ba88-9212771797fe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.070806Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "f78fbb84-ed01-4262-a9ff-72b23b9fa463",
    "name" : "Update Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/7092",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f78fbb84-ed01-4262-a9ff-72b23b9fa463",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.07066Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "b4c5a134-b495-48e7-9684-1c17053f03c6",
    "name" : "Update Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/w2l9",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b4c5a134-b495-48e7-9684-1c17053f03c6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.070531Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "897e977c-f807-4a62-90e7-14cf379bc0e4",
    "name" : "Update Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/69fo",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "897e977c-f807-4a62-90e7-14cf379bc0e4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.070404Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "5e2dabc8-d53a-42af-9fc6-a68199a7fd35",
    "name" : "Update Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/918r",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"ledger-accounts\",\n  \"service\" : \"xero\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5e2dabc8-d53a-42af-9fc6-a68199a7fd35",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.070252Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "ledger-accounts",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateLedgerAccountResponse"
          }
        }
      }
    }
  }, {
    "id" : "debdd982-dfd7-4961-8a76-4ad634c74629",
    "name" : "Get Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/f4q6",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "debdd982-dfd7-4961-8a76-4ad634c74629",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.07011Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "181e7f84-d005-4ef9-8648-48c8dbbf9ef4",
    "name" : "Get Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/2ekw",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "181e7f84-d005-4ef9-8648-48c8dbbf9ef4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.069981Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "a2cbea50-4e5c-4bb6-a00b-60d8b7e507aa",
    "name" : "Get Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/pe23",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a2cbea50-4e5c-4bb6-a00b-60d8b7e507aa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.069822Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "f7cac3ee-8b26-45a2-a7c4-7e8ce1ec8411",
    "name" : "Get Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/kpbf",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f7cac3ee-8b26-45a2-a7c4-7e8ce1ec8411",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.069691Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "9564025d-8213-4d3d-82f3-f9c8d8082755",
    "name" : "Get Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/cr3k",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9564025d-8213-4d3d-82f3-f9c8d8082755",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.069557Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "57bfa7cf-7bab-45b3-a14b-5331cb203555",
    "name" : "Get Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/me9o",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"code\" : \"453\",\n    \"fully_qualified_name\" : \"Asset.Bank.Checking_Account\",\n    \"display_id\" : \"1-12345\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Main checking account\",\n    \"sub_account\" : false,\n    \"type\" : \"bank\",\n    \"last_reconciliation_date\" : \"2020-09-30\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"sub_type\" : \"CHECKING_ACCOUNT\",\n    \"current_balance\" : 20000,\n    \"currency\" : \"USD\",\n    \"categories\" : [ {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    } ],\n    \"id\" : \"12345\",\n    \"opening_balance\" : 75000,\n    \"bank_account\" : {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    },\n    \"level\" : 1,\n    \"active\" : true,\n    \"classification\" : \"asset\",\n    \"created_by\" : \"12345\",\n    \"parent_account\" : {\n      \"display_id\" : \"1-1100\",\n      \"name\" : \"Bank Accounts\",\n      \"id\" : \"12345\"\n    },\n    \"tax_type\" : \"NONE\",\n    \"sub_accounts\" : [ {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    } ],\n    \"nominal_code\" : \"N091\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Bank account\",\n    \"updated_by\" : \"12345\",\n    \"header\" : true,\n    \"status\" : \"active\"\n  },\n  \"resource\" : \"ledger-accounts\",\n  \"service\" : \"xero\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "57bfa7cf-7bab-45b3-a14b-5331cb203555",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.069405Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/LedgerAccount"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "ledger-accounts",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetLedgerAccountResponse",
            "x-graphql-type-name" : "LedgerAccount"
          }
        }
      }
    }
  }, {
    "id" : "78b2a703-a28e-4e42-83fd-51b1d3b48319",
    "name" : "Delete Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/2a43",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "78b2a703-a28e-4e42-83fd-51b1d3b48319",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.069112Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "26fc72e4-3cd2-4d96-a0fa-057a09f0776b",
    "name" : "Delete Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/3u02",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "26fc72e4-3cd2-4d96-a0fa-057a09f0776b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.068983Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "c44df00d-7358-4a01-9672-57bb992af32b",
    "name" : "Delete Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/6042",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c44df00d-7358-4a01-9672-57bb992af32b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.068832Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "4bf58d1f-6067-4873-8ed6-2435e5256b88",
    "name" : "Delete Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/9srv",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4bf58d1f-6067-4873-8ed6-2435e5256b88",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.068703Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "71d119b6-e397-47ba-8f75-c6613dcf4199",
    "name" : "Delete Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/t818",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "71d119b6-e397-47ba-8f75-c6613dcf4199",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.06857Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "d4c3e490-571e-4d36-84ea-38de994c18f0",
    "name" : "Delete Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/s330",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"ledger-accounts\",\n  \"service\" : \"xero\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d4c3e490-571e-4d36-84ea-38de994c18f0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.068418Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "ledger-accounts",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "DeleteLedgerAccountResponse"
          }
        }
      }
    }
  }, {
    "id" : "1ace0bd7-13f9-4dcb-a8cb-9d716752f369",
    "name" : "Create Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1ace0bd7-13f9-4dcb-a8cb-9d716752f369",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.06825Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "92919fbd-c338-4c1b-b13b-b56410aaa1bf",
    "name" : "Create Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "92919fbd-c338-4c1b-b13b-b56410aaa1bf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.068183Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "e444e3b1-f8b5-42b0-bd31-78d4c8ab2ef4",
    "name" : "Create Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e444e3b1-f8b5-42b0-bd31-78d4c8ab2ef4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.068097Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "9146a62b-1e01-407e-b918-431532dc613e",
    "name" : "Create Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9146a62b-1e01-407e-b918-431532dc613e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.068031Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "848949be-a93b-4879-9274-601797a54153",
    "name" : "Create Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "848949be-a93b-4879-9274-601797a54153",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.067966Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "b736cc08-f1d7-411c-84d1-bb472a2f7721",
    "name" : "Create Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"ledger-accounts\",\n  \"service\" : \"xero\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b736cc08-f1d7-411c-84d1-bb472a2f7721",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.067879Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "ledger-accounts",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateLedgerAccountResponse"
          }
        }
      }
    }
  }, {
    "id" : "a9081939-92cb-4d38-90cb-7672f1f7b2a0",
    "name" : "List Ledger Accounts",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a9081939-92cb-4d38-90cb-7672f1f7b2a0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.067788Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "17369928-b28f-4b1b-91d1-ee0b4b4ee960",
    "name" : "List Ledger Accounts",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "17369928-b28f-4b1b-91d1-ee0b4b4ee960",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.067712Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "56f33970-621a-4349-a2bb-24f04f3cb2ad",
    "name" : "List Ledger Accounts",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "56f33970-621a-4349-a2bb-24f04f3cb2ad",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.067619Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "4064d3c6-cd48-4d3e-abaa-396d1e337c96",
    "name" : "List Ledger Accounts",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4064d3c6-cd48-4d3e-abaa-396d1e337c96",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.067551Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "9690bd83-a07f-48cf-8aab-c36ccd5b70fe",
    "name" : "List Ledger Accounts",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9690bd83-a07f-48cf-8aab-c36ccd5b70fe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.067479Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "3bfacc71-b7f6-471e-9b72-ee369ffde145",
    "name" : "List Ledger Accounts",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"code\" : \"453\",\n    \"fully_qualified_name\" : \"Asset.Bank.Checking_Account\",\n    \"display_id\" : \"1-12345\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Main checking account\",\n    \"sub_account\" : false,\n    \"type\" : \"bank\",\n    \"last_reconciliation_date\" : \"2020-09-30\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"sub_type\" : \"CHECKING_ACCOUNT\",\n    \"current_balance\" : 20000,\n    \"currency\" : \"USD\",\n    \"categories\" : [ {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    } ],\n    \"id\" : \"12345\",\n    \"opening_balance\" : 75000,\n    \"bank_account\" : {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    },\n    \"level\" : 1,\n    \"active\" : true,\n    \"classification\" : \"asset\",\n    \"created_by\" : \"12345\",\n    \"parent_account\" : {\n      \"display_id\" : \"1-1100\",\n      \"name\" : \"Bank Accounts\",\n      \"id\" : \"12345\"\n    },\n    \"tax_type\" : \"NONE\",\n    \"sub_accounts\" : [ {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    } ],\n    \"nominal_code\" : \"N091\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Bank account\",\n    \"updated_by\" : \"12345\",\n    \"header\" : true,\n    \"status\" : \"active\"\n  }, {\n    \"code\" : \"453\",\n    \"fully_qualified_name\" : \"Asset.Bank.Checking_Account\",\n    \"display_id\" : \"1-12345\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Main checking account\",\n    \"sub_account\" : false,\n    \"type\" : \"bank\",\n    \"last_reconciliation_date\" : \"2020-09-30\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"sub_type\" : \"CHECKING_ACCOUNT\",\n    \"current_balance\" : 20000,\n    \"currency\" : \"USD\",\n    \"categories\" : [ {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    } ],\n    \"id\" : \"12345\",\n    \"opening_balance\" : 75000,\n    \"bank_account\" : {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    },\n    \"level\" : 1,\n    \"active\" : true,\n    \"classification\" : \"asset\",\n    \"created_by\" : \"12345\",\n    \"parent_account\" : {\n      \"display_id\" : \"1-1100\",\n      \"name\" : \"Bank Accounts\",\n      \"id\" : \"12345\"\n    },\n    \"tax_type\" : \"NONE\",\n    \"sub_accounts\" : [ {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    } ],\n    \"nominal_code\" : \"N091\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Bank account\",\n    \"updated_by\" : \"12345\",\n    \"header\" : true,\n    \"status\" : \"active\"\n  } ],\n  \"resource\" : \"ledger-accounts\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"xero\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3bfacc71-b7f6-471e-9b72-ee369ffde145",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.067384Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/LedgerAccount"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "ledger-accounts",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetLedgerAccountsResponse",
            "x-graphql-type-name" : "LedgerAccountList"
          }
        }
      }
    }
  }, {
    "id" : "a9b88336-e844-4b26-9871-63eadf495e28",
    "name" : "Update Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/bum5",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a9b88336-e844-4b26-9871-63eadf495e28",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.066982Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "7c5218a4-650e-4bb5-a64e-a17c08162032",
    "name" : "Update Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/0945",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7c5218a4-650e-4bb5-a64e-a17c08162032",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.066851Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "952c4e31-6a2b-4db2-856e-51a70c51d135",
    "name" : "Update Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/pxjv",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "952c4e31-6a2b-4db2-856e-51a70c51d135",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.066703Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "cb96bc84-a36c-43f0-9362-118413db1a32",
    "name" : "Update Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/5ep7",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cb96bc84-a36c-43f0-9362-118413db1a32",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.066575Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "ed98be51-8ef1-44ae-851a-257fa320d5d3",
    "name" : "Update Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/e25x",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ed98be51-8ef1-44ae-851a-257fa320d5d3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.066444Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "cd659c2c-5841-4ff5-8853-33cc927fbbef",
    "name" : "Update Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/nj58",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"journal-entries\",\n  \"service\" : \"quickbooks\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cd659c2c-5841-4ff5-8853-33cc927fbbef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.066292Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "journal-entries",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "quickbooks",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e1a17d02-8494-47dd-92c5-f10279acf6d8",
    "name" : "Get Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/d4u9",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e1a17d02-8494-47dd-92c5-f10279acf6d8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.066125Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "7e66c8e5-a17a-4b83-9b7b-6608f39cba7a",
    "name" : "Get Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/jsy7",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7e66c8e5-a17a-4b83-9b7b-6608f39cba7a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.065992Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "e85baa68-f192-4378-97d9-8d06c4a68c8a",
    "name" : "Get Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/8377",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e85baa68-f192-4378-97d9-8d06c4a68c8a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.065842Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "8546fd56-1abd-4e4e-8e11-aa2a0d28b8dd",
    "name" : "Get Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/9181",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8546fd56-1abd-4e4e-8e11-aa2a0d28b8dd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.065716Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "b7568152-c662-4600-a513-5c6cd174674b",
    "name" : "Get Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/sz2q",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b7568152-c662-4600-a513-5c6cd174674b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.065585Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "9e180fc8-9a09-4fd5-9a20-6f7580588136",
    "name" : "Get Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/6bd8",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"currency_rate\" : 0.69,\n    \"journal_symbol\" : \"IND\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"updated_by\" : \"12345\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"memo\" : \"Thank you for your business and have a great day!\",\n    \"currency\" : \"USD\",\n    \"id\" : \"12345\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    } ],\n    \"posted_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"title\" : \"Purchase Invoice-Inventory (USD): 2019/02/01 Batch Summary Entry\",\n    \"created_by\" : \"12345\"\n  },\n  \"resource\" : \"journal-entries\",\n  \"service\" : \"quickbooks\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9e180fc8-9a09-4fd5-9a20-6f7580588136",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.065435Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/JournalEntry"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "journal-entries",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "quickbooks",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-graphql-type-name" : "JournalEntry"
          }
        }
      }
    }
  }, {
    "id" : "bf5947a9-0543-4983-8751-254aff71b96b",
    "name" : "Delete Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/c47x",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bf5947a9-0543-4983-8751-254aff71b96b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.065131Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "aac6a90d-c5a1-44d6-85cf-b403d79f8830",
    "name" : "Delete Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/iay9",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aac6a90d-c5a1-44d6-85cf-b403d79f8830",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.065004Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "b3fd7b40-e1d8-4462-a894-e8ff3b41fdef",
    "name" : "Delete Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/x4c1",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b3fd7b40-e1d8-4462-a894-e8ff3b41fdef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.06485Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "ff9368db-826e-4c62-9d90-bdf6b001b4f9",
    "name" : "Delete Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/8z73",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ff9368db-826e-4c62-9d90-bdf6b001b4f9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.064722Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "8214806c-03f6-4858-bb54-35b554e28829",
    "name" : "Delete Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/a89o",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8214806c-03f6-4858-bb54-35b554e28829",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.064594Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "950bcca6-3138-4afe-9e76-4eade35d8262",
    "name" : "Delete Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/862h",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"journal-entries\",\n  \"service\" : \"quickbooks\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "950bcca6-3138-4afe-9e76-4eade35d8262",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.064441Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "journal-entries",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "quickbooks",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1084d26b-2e61-4fdd-96b7-b6694db93edf",
    "name" : "Create Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1084d26b-2e61-4fdd-96b7-b6694db93edf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.064278Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "402ef9fe-35de-442c-8fa1-224ca65c6744",
    "name" : "Create Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "402ef9fe-35de-442c-8fa1-224ca65c6744",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.064212Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "f75420c5-b414-46f1-8c4a-4d8c109c1d39",
    "name" : "Create Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f75420c5-b414-46f1-8c4a-4d8c109c1d39",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.064122Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "a69c0c33-ce7d-42de-92ec-fee02c3a9d8d",
    "name" : "Create Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a69c0c33-ce7d-42de-92ec-fee02c3a9d8d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.064056Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "351db408-f01b-4def-8e9b-fa9c7ae07bf0",
    "name" : "Create Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "351db408-f01b-4def-8e9b-fa9c7ae07bf0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.06399Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "1159fb87-c8a4-4256-b9c7-10a7249b7218",
    "name" : "Create Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"journal-entries\",\n  \"service\" : \"quickbooks\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1159fb87-c8a4-4256-b9c7-10a7249b7218",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.063901Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "journal-entries",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "quickbooks",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "99ccdd19-2b28-420f-877c-2a6cdb9ae71c",
    "name" : "List Journal Entries",
    "request" : {
      "urlPath" : "/accounting/journal-entries",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "99ccdd19-2b28-420f-877c-2a6cdb9ae71c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.063823Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "43c09124-0995-4862-b2cb-e358a43b25bf",
    "name" : "List Journal Entries",
    "request" : {
      "urlPath" : "/accounting/journal-entries",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "43c09124-0995-4862-b2cb-e358a43b25bf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.063758Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "98895da2-048f-4925-ae61-971450d407c9",
    "name" : "List Journal Entries",
    "request" : {
      "urlPath" : "/accounting/journal-entries",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "98895da2-048f-4925-ae61-971450d407c9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.063674Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "c23f775e-c9c4-4e85-817c-0a5fc68b44bc",
    "name" : "List Journal Entries",
    "request" : {
      "urlPath" : "/accounting/journal-entries",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c23f775e-c9c4-4e85-817c-0a5fc68b44bc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.06361Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "9d794b98-d848-4828-b0ef-f3f5a9e96bb9",
    "name" : "List Journal Entries",
    "request" : {
      "urlPath" : "/accounting/journal-entries",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9d794b98-d848-4828-b0ef-f3f5a9e96bb9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.063544Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "c061d284-4025-479d-8bed-fed58e33d191",
    "name" : "List Journal Entries",
    "request" : {
      "urlPath" : "/accounting/journal-entries",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"currency_rate\" : 0.69,\n    \"journal_symbol\" : \"IND\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"updated_by\" : \"12345\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"memo\" : \"Thank you for your business and have a great day!\",\n    \"currency\" : \"USD\",\n    \"id\" : \"12345\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    } ],\n    \"posted_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"title\" : \"Purchase Invoice-Inventory (USD): 2019/02/01 Batch Summary Entry\",\n    \"created_by\" : \"12345\"\n  }, {\n    \"currency_rate\" : 0.69,\n    \"journal_symbol\" : \"IND\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"updated_by\" : \"12345\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"memo\" : \"Thank you for your business and have a great day!\",\n    \"currency\" : \"USD\",\n    \"id\" : \"12345\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    } ],\n    \"posted_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"title\" : \"Purchase Invoice-Inventory (USD): 2019/02/01 Batch Summary Entry\",\n    \"created_by\" : \"12345\"\n  } ],\n  \"resource\" : \"journal-entries\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"quickbooks\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c061d284-4025-479d-8bed-fed58e33d191",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.063457Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/JournalEntry"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "journal-entries",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "quickbooks",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-graphql-type-name" : "JournalEntryList"
          }
        }
      }
    }
  }, {
    "id" : "2f6ced31-976e-4b08-8989-fea3f40a49ff",
    "name" : "Update Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/3amc",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2f6ced31-976e-4b08-8989-fea3f40a49ff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.063154Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "5406cedb-4309-4caf-b2a8-92a2c2d03772",
    "name" : "Update Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/wuy4",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5406cedb-4309-4caf-b2a8-92a2c2d03772",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.063016Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "59f9becb-a807-4252-8c8b-74b9f0ab7fcc",
    "name" : "Update Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/qm7t",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "59f9becb-a807-4252-8c8b-74b9f0ab7fcc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.062862Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "333e7661-e4fe-4549-b7ca-8181928e56de",
    "name" : "Update Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/2dlq",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "333e7661-e4fe-4549-b7ca-8181928e56de",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.06274Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "a7f3b7be-6ae7-4590-8c00-3b9b8e34b85e",
    "name" : "Update Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/dtcx",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a7f3b7be-6ae7-4590-8c00-3b9b8e34b85e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.062617Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "f05396a9-5290-4649-a787-66dc11097671",
    "name" : "Update Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/1lqp",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"invoices\",\n  \"service\" : \"xero\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f05396a9-5290-4649-a787-66dc11097671",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.062475Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/InvoiceResponse"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "invoices",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateInvoiceResponse"
          }
        }
      }
    }
  }, {
    "id" : "88c04e02-d381-4b49-a63e-764e94adb685",
    "name" : "Get Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/t315",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "88c04e02-d381-4b49-a63e-764e94adb685",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.062328Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "0ab87711-81de-4d35-bc29-71e1f4dabb84",
    "name" : "Get Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/224a",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0ab87711-81de-4d35-bc29-71e1f4dabb84",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.062199Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "b658b5b4-4f36-4f5f-90e6-43a7e66c0501",
    "name" : "Get Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/v7ap",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b658b5b4-4f36-4f5f-90e6-43a7e66c0501",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.062049Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "068e9b82-1f0d-4022-8b5c-595ab43fd2cf",
    "name" : "Get Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/vjnj",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "068e9b82-1f0d-4022-8b5c-595ab43fd2cf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.061917Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "803b6fbe-c0d9-4871-8213-87357b8119ee",
    "name" : "Get Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/0t74",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "803b6fbe-c0d9-4871-8213-87357b8119ee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.061787Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "83a4321f-baba-4283-889a-e47bc9e284a6",
    "name" : "Get Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/18je",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"billing_address\" : {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    },\n    \"discount_percentage\" : 5.5,\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"customer_memo\" : \"Thank you for your business and have a great day!\",\n    \"type\" : \"service\",\n    \"invoice_date\" : \"2020-09-30\",\n    \"reference\" : \"123456\",\n    \"number\" : \"OIT00546\",\n    \"currency_rate\" : 0.69,\n    \"po_number\" : \"90000117\",\n    \"total\" : 27500,\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"terms\" : \"Net 30 days\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"shipping_address\" : {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    },\n    \"due_date\" : \"2020-09-30\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"deposit\" : 0,\n    \"template_id\" : \"123456\",\n    \"invoice_sent\" : true,\n    \"source_document_url\" : \"https://www.invoicesolution.com/invoice/123456\",\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"draft\"\n  },\n  \"resource\" : \"invoices\",\n  \"service\" : \"xero\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "83a4321f-baba-4283-889a-e47bc9e284a6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.061628Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Invoice"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "invoices",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetInvoiceResponse",
            "x-graphql-type-name" : "Invoice"
          }
        }
      }
    }
  }, {
    "id" : "c233216a-ab00-4a76-8f3e-259b7ec702d8",
    "name" : "Delete Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/p3ss",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c233216a-ab00-4a76-8f3e-259b7ec702d8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.060841Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "522c9947-a899-473e-b416-8a87b430b898",
    "name" : "Delete Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/3afu",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "522c9947-a899-473e-b416-8a87b430b898",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.060707Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "835eb2d2-d138-425f-aedc-47c6bc3b298a",
    "name" : "Delete Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/k13i",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "835eb2d2-d138-425f-aedc-47c6bc3b298a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.060554Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "6730163c-bdc9-4fc4-a76c-87de1417663b",
    "name" : "Delete Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/1077",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6730163c-bdc9-4fc4-a76c-87de1417663b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.060419Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "e49a6ee3-d5de-4251-9e33-a93092ed99c0",
    "name" : "Delete Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/f573",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e49a6ee3-d5de-4251-9e33-a93092ed99c0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.060281Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "02a08b64-0a13-4e9d-b60b-92351bfd7861",
    "name" : "Delete Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/ga95",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"invoices\",\n  \"service\" : \"xero\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "02a08b64-0a13-4e9d-b60b-92351bfd7861",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.060121Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/InvoiceResponse"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "invoices",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "DeleteInvoiceResponse"
          }
        }
      }
    }
  }, {
    "id" : "b76929b7-5951-447a-9fc2-c51b7e4a9c8f",
    "name" : "Create Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b76929b7-5951-447a-9fc2-c51b7e4a9c8f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.059914Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "7e9a7072-ace4-49bb-b337-a41a1ee27fcd",
    "name" : "Create Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7e9a7072-ace4-49bb-b337-a41a1ee27fcd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.059842Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "7e051d0c-eb4f-4a00-95f3-5094134bb8f3",
    "name" : "Create Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7e051d0c-eb4f-4a00-95f3-5094134bb8f3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.059753Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "04329b66-a04b-4b10-9956-d4e10f5b8746",
    "name" : "Create Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "04329b66-a04b-4b10-9956-d4e10f5b8746",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.059681Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "fbb2725e-b59f-4200-91c9-d390db6f7d8b",
    "name" : "Create Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fbb2725e-b59f-4200-91c9-d390db6f7d8b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.059611Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "4b965421-957e-419d-b785-ccb3dca2ff13",
    "name" : "Create Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"invoices\",\n  \"service\" : \"xero\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4b965421-957e-419d-b785-ccb3dca2ff13",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.059517Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/InvoiceResponse"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "invoices",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateInvoiceResponse"
          }
        }
      }
    }
  }, {
    "id" : "e6e23b97-d5be-48cf-824e-a6b56a51e326",
    "name" : "List Invoices",
    "request" : {
      "urlPath" : "/accounting/invoices",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e6e23b97-d5be-48cf-824e-a6b56a51e326",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.059421Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "f1ad8e55-99fb-431b-a04e-43598164decc",
    "name" : "List Invoices",
    "request" : {
      "urlPath" : "/accounting/invoices",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f1ad8e55-99fb-431b-a04e-43598164decc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.059287Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "a31fc5f3-c4f0-46e3-a2c6-281e637d2e5b",
    "name" : "List Invoices",
    "request" : {
      "urlPath" : "/accounting/invoices",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a31fc5f3-c4f0-46e3-a2c6-281e637d2e5b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.059197Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "64f8af3a-5376-4876-b33e-e5a7b75a0958",
    "name" : "List Invoices",
    "request" : {
      "urlPath" : "/accounting/invoices",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "64f8af3a-5376-4876-b33e-e5a7b75a0958",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.059126Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "de6da720-2c4d-4f79-9b26-476559126d8f",
    "name" : "List Invoices",
    "request" : {
      "urlPath" : "/accounting/invoices",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "de6da720-2c4d-4f79-9b26-476559126d8f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.059048Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "293cfd79-7e47-4e7d-8d92-9c8c171207a5",
    "name" : "List Invoices",
    "request" : {
      "urlPath" : "/accounting/invoices",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"billing_address\" : {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    },\n    \"discount_percentage\" : 5.5,\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"customer_memo\" : \"Thank you for your business and have a great day!\",\n    \"type\" : \"service\",\n    \"invoice_date\" : \"2020-09-30\",\n    \"reference\" : \"123456\",\n    \"number\" : \"OIT00546\",\n    \"currency_rate\" : 0.69,\n    \"po_number\" : \"90000117\",\n    \"total\" : 27500,\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"terms\" : \"Net 30 days\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"shipping_address\" : {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    },\n    \"due_date\" : \"2020-09-30\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"deposit\" : 0,\n    \"template_id\" : \"123456\",\n    \"invoice_sent\" : true,\n    \"source_document_url\" : \"https://www.invoicesolution.com/invoice/123456\",\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"draft\"\n  }, {\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"billing_address\" : {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    },\n    \"discount_percentage\" : 5.5,\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"customer_memo\" : \"Thank you for your business and have a great day!\",\n    \"type\" : \"service\",\n    \"invoice_date\" : \"2020-09-30\",\n    \"reference\" : \"123456\",\n    \"number\" : \"OIT00546\",\n    \"currency_rate\" : 0.69,\n    \"po_number\" : \"90000117\",\n    \"total\" : 27500,\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"terms\" : \"Net 30 days\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"shipping_address\" : {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    },\n    \"due_date\" : \"2020-09-30\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"deposit\" : 0,\n    \"template_id\" : \"123456\",\n    \"invoice_sent\" : true,\n    \"source_document_url\" : \"https://www.invoicesolution.com/invoice/123456\",\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"draft\"\n  }, {\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"billing_address\" : {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    },\n    \"discount_percentage\" : 5.5,\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"customer_memo\" : \"Thank you for your business and have a great day!\",\n    \"type\" : \"service\",\n    \"invoice_date\" : \"2020-09-30\",\n    \"reference\" : \"123456\",\n    \"number\" : \"OIT00546\",\n    \"currency_rate\" : 0.69,\n    \"po_number\" : \"90000117\",\n    \"total\" : 27500,\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"terms\" : \"Net 30 days\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"shipping_address\" : {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    },\n    \"due_date\" : \"2020-09-30\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"deposit\" : 0,\n    \"template_id\" : \"123456\",\n    \"invoice_sent\" : true,\n    \"source_document_url\" : \"https://www.invoicesolution.com/invoice/123456\",\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"draft\"\n  } ],\n  \"resource\" : \"invoices\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"xero\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "293cfd79-7e47-4e7d-8d92-9c8c171207a5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.058934Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/Invoice"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "invoices",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetInvoicesResponse",
            "x-graphql-type-name" : "InvoiceList"
          }
        }
      }
    }
  }, {
    "id" : "faffa2a7-71c3-4493-bcb8-84fd7eeb27db",
    "name" : "Update Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/v3i9",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "faffa2a7-71c3-4493-bcb8-84fd7eeb27db",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.057645Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "dbc8ae8b-a187-4ba1-8bda-f3f77800366c",
    "name" : "Update Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/hg7p",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dbc8ae8b-a187-4ba1-8bda-f3f77800366c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.057516Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "125a4989-cd5f-48ba-a8cd-284c634de034",
    "name" : "Update Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/090x",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "125a4989-cd5f-48ba-a8cd-284c634de034",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.057362Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "d64c5bb1-5da8-4c8b-9d5b-e20d577a28a1",
    "name" : "Update Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/674y",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d64c5bb1-5da8-4c8b-9d5b-e20d577a28a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.057232Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "af231632-9f28-4523-a551-f6ddc84d9b12",
    "name" : "Update Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/0g97",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "af231632-9f28-4523-a551-f6ddc84d9b12",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.0571Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "38b40f22-b05f-4a9a-bf85-302deec53304",
    "name" : "Update Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/5eh5",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"invoice-items\",\n  \"service\" : \"xero\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "38b40f22-b05f-4a9a-bf85-302deec53304",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.05694Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "invoice-items",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateInvoiceItemsResponse"
          }
        }
      }
    }
  }, {
    "id" : "fd439b1c-9efe-475c-9045-8022044aed66",
    "name" : "Get Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/42sv",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fd439b1c-9efe-475c-9045-8022044aed66",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.056793Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "05559103-76da-47ce-9ed1-ef8560f086b7",
    "name" : "Get Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/9s8d",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "05559103-76da-47ce-9ed1-ef8560f086b7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.056662Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "7f5a1257-d20b-44a5-b6c3-2c8010383895",
    "name" : "Get Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/qleo",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7f5a1257-d20b-44a5-b6c3-2c8010383895",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.056508Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "81c048fb-e7a2-43fd-8903-1e914f764274",
    "name" : "Get Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/e790",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "81c048fb-e7a2-43fd-8903-1e914f764274",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.056373Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "d4620d7b-c8a7-454a-b3ab-d49942582a76",
    "name" : "Get Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/12bd",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d4620d7b-c8a7-454a-b3ab-d49942582a76",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.056216Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "57150daf-f4a5-4134-b338-bd565849ea19",
    "name" : "Get Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/e031",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"sold\" : true,\n    \"code\" : \"120-C\",\n    \"quantity\" : 1,\n    \"purchase_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"sales_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"active\" : true,\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n    \"tracked\" : true,\n    \"type\" : \"inventory\",\n    \"unit_price\" : 27500.5,\n    \"created_by\" : \"12345\",\n    \"inventory_date\" : \"2020-10-30\",\n    \"asset_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"expense_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"purchased\" : true,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Model Y\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"123456\",\n    \"income_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    }\n  },\n  \"resource\" : \"invoice-items\",\n  \"service\" : \"xero\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "57150daf-f4a5-4134-b338-bd565849ea19",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.056054Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/InvoiceItem"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "invoice-items",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetInvoiceItemResponse",
            "x-graphql-type-name" : "InvoiceItem"
          }
        }
      }
    }
  }, {
    "id" : "e47e88f3-fc8f-46a0-983f-b26400f6d83a",
    "name" : "Delete Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/7a7d",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e47e88f3-fc8f-46a0-983f-b26400f6d83a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.055783Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "59773cba-55b8-446a-a166-c260158d9574",
    "name" : "Delete Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/562j",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "59773cba-55b8-446a-a166-c260158d9574",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.055647Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "5cd1e674-ce7a-42f9-a1e9-4530ad980016",
    "name" : "Delete Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/gahd",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5cd1e674-ce7a-42f9-a1e9-4530ad980016",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.055484Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "6fe22e65-685f-4747-9d67-01ab98e6a8a1",
    "name" : "Delete Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/sqv0",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6fe22e65-685f-4747-9d67-01ab98e6a8a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.055347Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "3c2e0dab-e600-4095-a489-7f0efcc97b7a",
    "name" : "Delete Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/eo2e",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3c2e0dab-e600-4095-a489-7f0efcc97b7a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.055209Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "b8ebb46c-01ae-4b1c-a327-4dc7018abf03",
    "name" : "Delete Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/hlds",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"tax-rates\",\n  \"service\" : \"xero\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b8ebb46c-01ae-4b1c-a327-4dc7018abf03",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.055048Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "tax-rates",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "DeleteTaxRateResponse"
          }
        }
      }
    }
  }, {
    "id" : "f8e512a5-c00e-4b9b-8d0d-c8bcf7ca0483",
    "name" : "Create Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f8e512a5-c00e-4b9b-8d0d-c8bcf7ca0483",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.05483Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "d978bd10-2325-47e4-9503-ede437ac51a3",
    "name" : "Create Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d978bd10-2325-47e4-9503-ede437ac51a3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.05476Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "3beb7c97-7e8f-4b66-a721-a3e7c467ddd6",
    "name" : "Create Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3beb7c97-7e8f-4b66-a721-a3e7c467ddd6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.054673Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "061175d1-2c58-40a8-b40d-fa4cbde22421",
    "name" : "Create Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "061175d1-2c58-40a8-b40d-fa4cbde22421",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.054604Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "81e7dcba-b063-440d-8d10-5497aa56f390",
    "name" : "Create Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "81e7dcba-b063-440d-8d10-5497aa56f390",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.054527Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "48295139-a937-4422-9fca-7a62ff015e7c",
    "name" : "Create Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"invoice-items\",\n  \"service\" : \"xero\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "48295139-a937-4422-9fca-7a62ff015e7c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.054422Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "invoice-items",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateInvoiceItemResponse"
          }
        }
      }
    }
  }, {
    "id" : "c68470b8-334a-4b05-8016-9303fc73d8cc",
    "name" : "List Invoice Items",
    "request" : {
      "urlPath" : "/accounting/invoice-items",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c68470b8-334a-4b05-8016-9303fc73d8cc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.054325Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "96ba045d-d6d7-4033-8e6c-fd2705b290c0",
    "name" : "List Invoice Items",
    "request" : {
      "urlPath" : "/accounting/invoice-items",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "96ba045d-d6d7-4033-8e6c-fd2705b290c0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.05424Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "0b76c93e-9ca6-4fe2-be58-bdd7b42e122a",
    "name" : "List Invoice Items",
    "request" : {
      "urlPath" : "/accounting/invoice-items",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0b76c93e-9ca6-4fe2-be58-bdd7b42e122a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.05402Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "ef569e2b-98da-462a-9537-47dd27933d99",
    "name" : "List Invoice Items",
    "request" : {
      "urlPath" : "/accounting/invoice-items",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ef569e2b-98da-462a-9537-47dd27933d99",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.039456Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "e7a6b436-9f82-4f42-8c94-9afd68f06813",
    "name" : "List Invoice Items",
    "request" : {
      "urlPath" : "/accounting/invoice-items",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e7a6b436-9f82-4f42-8c94-9afd68f06813",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.03937Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "b8eeeaf8-93fd-48ec-a40c-1e7d961ee3fd",
    "name" : "List Invoice Items",
    "request" : {
      "urlPath" : "/accounting/invoice-items",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"sold\" : true,\n    \"code\" : \"120-C\",\n    \"quantity\" : 1,\n    \"purchase_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"sales_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"active\" : true,\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n    \"tracked\" : true,\n    \"type\" : \"inventory\",\n    \"unit_price\" : 27500.5,\n    \"created_by\" : \"12345\",\n    \"inventory_date\" : \"2020-10-30\",\n    \"asset_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"expense_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"purchased\" : true,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Model Y\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"123456\",\n    \"income_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    }\n  }, {\n    \"sold\" : true,\n    \"code\" : \"120-C\",\n    \"quantity\" : 1,\n    \"purchase_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"sales_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"active\" : true,\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n    \"tracked\" : true,\n    \"type\" : \"inventory\",\n    \"unit_price\" : 27500.5,\n    \"created_by\" : \"12345\",\n    \"inventory_date\" : \"2020-10-30\",\n    \"asset_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"expense_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"purchased\" : true,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Model Y\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"123456\",\n    \"income_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    }\n  } ],\n  \"resource\" : \"invoice-items\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"xero\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b8eeeaf8-93fd-48ec-a40c-1e7d961ee3fd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.039264Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/InvoiceItem"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "invoice-items",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetInvoiceItemsResponse",
            "x-graphql-type-name" : "InvoiceItemList"
          }
        }
      }
    }
  }, {
    "id" : "0de818b5-46ce-4038-af4f-4d28315a1430",
    "name" : "Update Customer",
    "request" : {
      "urlPath" : "/accounting/customers/13f0",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0de818b5-46ce-4038-af4f-4d28315a1430",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.038882Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "24d65968-b9fe-41a1-b880-5fa9699fc561",
    "name" : "Update Customer",
    "request" : {
      "urlPath" : "/accounting/customers/63h4",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "24d65968-b9fe-41a1-b880-5fa9699fc561",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.038741Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "f2a3cf32-a0d2-438e-9eb8-f2a7bcb65f0f",
    "name" : "Update Customer",
    "request" : {
      "urlPath" : "/accounting/customers/cups",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f2a3cf32-a0d2-438e-9eb8-f2a7bcb65f0f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.038584Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "54730a1d-88fa-4716-9f03-6ed20989505f",
    "name" : "Update Customer",
    "request" : {
      "urlPath" : "/accounting/customers/3h1j",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "54730a1d-88fa-4716-9f03-6ed20989505f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.038442Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "437a768d-8ba0-4360-9c1e-3c762b1126e6",
    "name" : "Update Customer",
    "request" : {
      "urlPath" : "/accounting/customers/x00c",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "437a768d-8ba0-4360-9c1e-3c762b1126e6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.038292Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "1fab425d-3617-4a8e-b1cd-a01effd83262",
    "name" : "Update Customer",
    "request" : {
      "urlPath" : "/accounting/customers/if7c",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"customers\",\n  \"service\" : \"xero\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1fab425d-3617-4a8e-b1cd-a01effd83262",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.038138Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "customers",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateCustomerResponse"
          }
        }
      }
    }
  }, {
    "id" : "8076f778-e250-45a1-8c5e-088ddfcf3ee1",
    "name" : "Get Customer",
    "request" : {
      "urlPath" : "/accounting/customers/90dp",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8076f778-e250-45a1-8c5e-088ddfcf3ee1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.037964Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "8dfc3a76-ebab-47e9-a8cf-476efbbbb0e9",
    "name" : "Get Customer",
    "request" : {
      "urlPath" : "/accounting/customers/k266",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8dfc3a76-ebab-47e9-a8cf-476efbbbb0e9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.037819Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "9de888a7-b601-4189-8b51-086782b67533",
    "name" : "Get Customer",
    "request" : {
      "urlPath" : "/accounting/customers/0n01",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9de888a7-b601-4189-8b51-086782b67533",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.037648Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "68724902-b4f4-4c0a-b474-68f945f84ca7",
    "name" : "Get Customer",
    "request" : {
      "urlPath" : "/accounting/customers/7tnn",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "68724902-b4f4-4c0a-b474-68f945f84ca7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.0375Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "d3cc0ed3-bb3a-4c1a-b1b2-b170853400d2",
    "name" : "Get Customer",
    "request" : {
      "urlPath" : "/accounting/customers/9c45",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d3cc0ed3-bb3a-4c1a-b1b2-b170853400d2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.037357Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "e22a9a0b-d9f1-4725-a57a-9755e66cedba",
    "name" : "Get Customer",
    "request" : {
      "urlPath" : "/accounting/customers/fgvz",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"parent\" : {\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\"\n    },\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"notes\" : \"Some notes about this customer\",\n    \"display_id\" : \"EMP00101\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"project\" : false,\n    \"suffix\" : \"Jr.\",\n    \"title\" : \"CEO\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"tax_number\" : \"US123945459\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"first_name\" : \"Elon\",\n    \"individual\" : true,\n    \"last_name\" : \"Musk\",\n    \"display_name\" : \"Windsurf Shop\",\n    \"middle_name\" : \"D.\",\n    \"created_by\" : \"12345\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_name\" : \"SpaceX\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"bank_accounts\" : [ {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    } ],\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"status\" : \"active\"\n  },\n  \"resource\" : \"customers\",\n  \"service\" : \"xero\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e22a9a0b-d9f1-4725-a57a-9755e66cedba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.037182Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/AccountingCustomer"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "customers",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetCustomerResponse"
          }
        }
      }
    }
  }, {
    "id" : "1a816bfa-4a2c-44db-87f9-9223b0ce2e81",
    "name" : "Delete Customer",
    "request" : {
      "urlPath" : "/accounting/customers/h6c2",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1a816bfa-4a2c-44db-87f9-9223b0ce2e81",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.036558Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "a8cf2dd7-15ad-4132-935e-c47f4960f270",
    "name" : "Delete Customer",
    "request" : {
      "urlPath" : "/accounting/customers/4a48",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a8cf2dd7-15ad-4132-935e-c47f4960f270",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.036415Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "5c628270-f132-4177-8867-68631219e6f8",
    "name" : "Delete Customer",
    "request" : {
      "urlPath" : "/accounting/customers/s8pm",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5c628270-f132-4177-8867-68631219e6f8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.036252Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "892ff36a-8f92-4250-a29d-dd9be217aa7d",
    "name" : "Delete Customer",
    "request" : {
      "urlPath" : "/accounting/customers/5g35",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "892ff36a-8f92-4250-a29d-dd9be217aa7d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.03611Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "88354aa5-661a-4419-afa8-1cd042efc664",
    "name" : "Delete Customer",
    "request" : {
      "urlPath" : "/accounting/customers/7q66",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "88354aa5-661a-4419-afa8-1cd042efc664",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.03595Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "8c20ff88-6337-4a87-b10a-e80042c42408",
    "name" : "Delete Customer",
    "request" : {
      "urlPath" : "/accounting/customers/ey83",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"customers\",\n  \"service\" : \"xero\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8c20ff88-6337-4a87-b10a-e80042c42408",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.035796Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "customers",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "DeleteCustomerResponse"
          }
        }
      }
    }
  }, {
    "id" : "1f9a0e75-ff90-487d-8728-8ff69094533d",
    "name" : "Create Customer",
    "request" : {
      "urlPath" : "/accounting/customers",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1f9a0e75-ff90-487d-8728-8ff69094533d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.035582Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "692b339c-3ad5-4494-82dd-618f4a59f662",
    "name" : "Create Customer",
    "request" : {
      "urlPath" : "/accounting/customers",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "692b339c-3ad5-4494-82dd-618f4a59f662",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.03551Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "5bbbd528-a844-4ef3-b300-eb99c97af1fa",
    "name" : "Create Customer",
    "request" : {
      "urlPath" : "/accounting/customers",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5bbbd528-a844-4ef3-b300-eb99c97af1fa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.035422Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "1dbb2e1b-876b-4508-87cb-5ef37baec38c",
    "name" : "Create Customer",
    "request" : {
      "urlPath" : "/accounting/customers",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1dbb2e1b-876b-4508-87cb-5ef37baec38c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.035355Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "0c97415a-1233-442f-9831-c8b0fd2501ab",
    "name" : "Create Customer",
    "request" : {
      "urlPath" : "/accounting/customers",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0c97415a-1233-442f-9831-c8b0fd2501ab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.035286Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "3101c24e-74a4-4f71-b524-fe4190cf7eaa",
    "name" : "Create Customer",
    "request" : {
      "urlPath" : "/accounting/customers",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"customers\",\n  \"service\" : \"xero\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3101c24e-74a4-4f71-b524-fe4190cf7eaa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.035197Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "customers",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateCustomerResponse"
          }
        }
      }
    }
  }, {
    "id" : "a575a2a2-f85f-4ef0-abf7-18411daf3923",
    "name" : "List Customers",
    "request" : {
      "urlPath" : "/accounting/customers",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a575a2a2-f85f-4ef0-abf7-18411daf3923",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.035088Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "1b8fbc78-dc7f-4b99-8590-f6915778773e",
    "name" : "List Customers",
    "request" : {
      "urlPath" : "/accounting/customers",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1b8fbc78-dc7f-4b99-8590-f6915778773e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.035004Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "4549fdcc-cee4-4a85-b6cf-80a606467606",
    "name" : "List Customers",
    "request" : {
      "urlPath" : "/accounting/customers",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4549fdcc-cee4-4a85-b6cf-80a606467606",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.034901Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "cd068cfb-0d60-4a9c-b3ca-74ef6ac97c29",
    "name" : "List Customers",
    "request" : {
      "urlPath" : "/accounting/customers",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cd068cfb-0d60-4a9c-b3ca-74ef6ac97c29",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.034817Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "e2862b22-5437-43d8-8e0d-22bda2b452a8",
    "name" : "List Customers",
    "request" : {
      "urlPath" : "/accounting/customers",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e2862b22-5437-43d8-8e0d-22bda2b452a8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.034733Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "433e8797-37ab-4f69-9bee-896814d5c1b7",
    "name" : "List Customers",
    "request" : {
      "urlPath" : "/accounting/customers",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"parent\" : {\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\"\n    },\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"notes\" : \"Some notes about this customer\",\n    \"display_id\" : \"EMP00101\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"project\" : false,\n    \"suffix\" : \"Jr.\",\n    \"title\" : \"CEO\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"tax_number\" : \"US123945459\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"first_name\" : \"Elon\",\n    \"individual\" : true,\n    \"last_name\" : \"Musk\",\n    \"display_name\" : \"Windsurf Shop\",\n    \"middle_name\" : \"D.\",\n    \"created_by\" : \"12345\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_name\" : \"SpaceX\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"bank_accounts\" : [ {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    } ],\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"status\" : \"active\"\n  }, {\n    \"parent\" : {\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\"\n    },\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"notes\" : \"Some notes about this customer\",\n    \"display_id\" : \"EMP00101\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"project\" : false,\n    \"suffix\" : \"Jr.\",\n    \"title\" : \"CEO\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"tax_number\" : \"US123945459\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"first_name\" : \"Elon\",\n    \"individual\" : true,\n    \"last_name\" : \"Musk\",\n    \"display_name\" : \"Windsurf Shop\",\n    \"middle_name\" : \"D.\",\n    \"created_by\" : \"12345\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_name\" : \"SpaceX\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"bank_accounts\" : [ {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    } ],\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"status\" : \"active\"\n  }, {\n    \"parent\" : {\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\"\n    },\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"notes\" : \"Some notes about this customer\",\n    \"display_id\" : \"EMP00101\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"project\" : false,\n    \"suffix\" : \"Jr.\",\n    \"title\" : \"CEO\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"tax_number\" : \"US123945459\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"first_name\" : \"Elon\",\n    \"individual\" : true,\n    \"last_name\" : \"Musk\",\n    \"display_name\" : \"Windsurf Shop\",\n    \"middle_name\" : \"D.\",\n    \"created_by\" : \"12345\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_name\" : \"SpaceX\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"bank_accounts\" : [ {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    } ],\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"status\" : \"active\"\n  } ],\n  \"resource\" : \"customers\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"xero\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "433e8797-37ab-4f69-9bee-896814d5c1b7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.034618Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/AccountingCustomer"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "customers",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetCustomersResponse",
            "x-graphql-type-name" : "CustomerList"
          }
        }
      }
    }
  }, {
    "id" : "c27fbcec-34c7-43b6-8f4b-ddf7da6669fe",
    "name" : "Update Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/3798",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c27fbcec-34c7-43b6-8f4b-ddf7da6669fe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.033154Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "10d7b845-f3e3-406a-afb5-643406da5ee0",
    "name" : "Update Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/j560",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "10d7b845-f3e3-406a-afb5-643406da5ee0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.033021Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "5a83ee17-2fbd-4c0d-be8c-09d311762547",
    "name" : "Update Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/r4ya",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5a83ee17-2fbd-4c0d-be8c-09d311762547",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.032867Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "94b0cab9-84f2-4ca5-9cf6-7d066ab46e2b",
    "name" : "Update Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/xe18",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "94b0cab9-84f2-4ca5-9cf6-7d066ab46e2b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.032733Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "0331af84-1d67-463b-93a2-2baeb2e4386c",
    "name" : "Update Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/68q0",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0331af84-1d67-463b-93a2-2baeb2e4386c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.032594Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "59e77daf-db9f-4349-be60-920de87c2a00",
    "name" : "Update Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/fi73",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"credit-notes\",\n  \"service\" : \"xero\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "59e77daf-db9f-4349-be60-920de87c2a00",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.032439Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "credit-notes",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateCreditNoteResponse"
          }
        }
      }
    }
  }, {
    "id" : "209d835d-c1cf-49ca-9ead-c4c5d3ce1af8",
    "name" : "Get Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/0281",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "209d835d-c1cf-49ca-9ead-c4c5d3ce1af8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.032268Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "a92b1200-7c68-46f0-9302-81b5234db8bb",
    "name" : "Get Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/0967",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a92b1200-7c68-46f0-9302-81b5234db8bb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.032134Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "5d017dca-6b5d-431a-83c3-528d28e0576c",
    "name" : "Get Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/8c24",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5d017dca-6b5d-431a-83c3-528d28e0576c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.031964Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "92f3ce69-e348-47f8-bbb3-335137ed7658",
    "name" : "Get Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/6i83",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "92f3ce69-e348-47f8-bbb3-335137ed7658",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.031832Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "ea9c1a5f-667a-43b6-bfea-1a90cea29cf8",
    "name" : "Get Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/csd5",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ea9c1a5f-667a-43b6-bfea-1a90cea29cf8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.031698Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "ad2de04e-a037-46a3-aa3e-4a661811ea48",
    "name" : "Get Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/gjv1",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"note\" : \"Some notes about this credit note\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"type\" : \"accounts_receivable_credit\",\n    \"reference\" : \"123456\",\n    \"number\" : \"OIT00546\",\n    \"currency_rate\" : 0.69,\n    \"remaining_credit\" : 27500,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"invoice\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"invoice\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"invoice\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"invoice\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"invoice\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"pre_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"order\"\n    } ],\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"date_paid\" : \"2021-05-01T12:00:00.000Z\",\n    \"currency\" : \"USD\",\n    \"id\" : \"123456\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"total_amount\" : 49.99,\n    \"date_issued\" : \"2021-05-01T12:00:00.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  },\n  \"resource\" : \"credit-notes\",\n  \"service\" : \"xero\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ad2de04e-a037-46a3-aa3e-4a661811ea48",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.031541Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/CreditNote"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "credit-notes",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetCreditNoteResponse"
          }
        }
      }
    }
  }, {
    "id" : "19fcfbf3-a5c2-4c4e-8048-3d028472a4bd",
    "name" : "Delete Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/444d",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "19fcfbf3-a5c2-4c4e-8048-3d028472a4bd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.030869Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "4c01e1a2-7bf9-4432-a935-905f032fb49a",
    "name" : "Delete Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/j01n",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4c01e1a2-7bf9-4432-a935-905f032fb49a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.030724Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "0c4339b8-2d7d-4265-bfa3-fb355b9f38b3",
    "name" : "Delete Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/np93",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0c4339b8-2d7d-4265-bfa3-fb355b9f38b3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.030566Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "9fb74862-47d6-4c7a-9174-a60db5ede0ee",
    "name" : "Delete Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/15k5",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9fb74862-47d6-4c7a-9174-a60db5ede0ee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.030433Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "39439373-7759-410b-8482-a1512b45fb92",
    "name" : "Delete Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/o9tk",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "39439373-7759-410b-8482-a1512b45fb92",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.030294Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "a1310823-b378-48d6-b726-5171ee5c2ed1",
    "name" : "Delete Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/1vwm",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"credit-notes\",\n  \"service\" : \"xero\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a1310823-b378-48d6-b726-5171ee5c2ed1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.030136Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "credit-notes",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "DeleteCreditNoteResponse"
          }
        }
      }
    }
  }, {
    "id" : "c31fbcff-2a73-4a8b-b6fb-e6530f92a990",
    "name" : "Create Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c31fbcff-2a73-4a8b-b6fb-e6530f92a990",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.0299Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "1d55561a-8309-48a7-8397-93382a92d36c",
    "name" : "Create Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1d55561a-8309-48a7-8397-93382a92d36c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.029829Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "059c4751-b95f-4119-9f9b-63317bb4b040",
    "name" : "Create Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "059c4751-b95f-4119-9f9b-63317bb4b040",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.029741Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "0f790f53-7c6a-45bc-b97d-95ef5995b108",
    "name" : "Create Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0f790f53-7c6a-45bc-b97d-95ef5995b108",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.029671Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "42d0b3e0-6bb7-44f3-832e-4e74ef0ffe9d",
    "name" : "Create Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "42d0b3e0-6bb7-44f3-832e-4e74ef0ffe9d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.029595Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "51ea5215-eb1b-4764-8eed-40e80c4188c2",
    "name" : "Create Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"credit-notes\",\n  \"service\" : \"xero\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "51ea5215-eb1b-4764-8eed-40e80c4188c2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.029496Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "credit-notes",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateCreditNoteResponse"
          }
        }
      }
    }
  }, {
    "id" : "c18e2795-3d98-44eb-93f4-36aab7144361",
    "name" : "List Credit Notes",
    "request" : {
      "urlPath" : "/accounting/credit-notes",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c18e2795-3d98-44eb-93f4-36aab7144361",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.029379Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "ad8a99fb-54da-42cd-b910-afcef5ef0840",
    "name" : "List Credit Notes",
    "request" : {
      "urlPath" : "/accounting/credit-notes",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ad8a99fb-54da-42cd-b910-afcef5ef0840",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.029291Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "1ed129b0-90f2-4b45-8f42-579c673867e1",
    "name" : "List Credit Notes",
    "request" : {
      "urlPath" : "/accounting/credit-notes",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1ed129b0-90f2-4b45-8f42-579c673867e1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.029185Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "1e67217c-1cb5-417d-97c8-e7526b779209",
    "name" : "List Credit Notes",
    "request" : {
      "urlPath" : "/accounting/credit-notes",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1e67217c-1cb5-417d-97c8-e7526b779209",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.02909Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "4ab69bf4-1efe-4f65-941b-fbdb27885033",
    "name" : "List Credit Notes",
    "request" : {
      "urlPath" : "/accounting/credit-notes",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4ab69bf4-1efe-4f65-941b-fbdb27885033",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.028991Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "fb5eeb42-79b0-4d21-a733-52e41fdb86d0",
    "name" : "List Credit Notes",
    "request" : {
      "urlPath" : "/accounting/credit-notes",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"note\" : \"Some notes about this credit note\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"type\" : \"accounts_receivable_credit\",\n    \"reference\" : \"123456\",\n    \"number\" : \"OIT00546\",\n    \"currency_rate\" : 0.69,\n    \"remaining_credit\" : 27500,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"pre_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"invoice\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"order\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"pre_payment\"\n    } ],\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"date_paid\" : \"2021-05-01T12:00:00.000Z\",\n    \"currency\" : \"USD\",\n    \"id\" : \"123456\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"total_amount\" : 49.99,\n    \"date_issued\" : \"2021-05-01T12:00:00.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  }, {\n    \"note\" : \"Some notes about this credit note\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"type\" : \"accounts_receivable_credit\",\n    \"reference\" : \"123456\",\n    \"number\" : \"OIT00546\",\n    \"currency_rate\" : 0.69,\n    \"remaining_credit\" : 27500,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"over_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    } ],\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"date_paid\" : \"2021-05-01T12:00:00.000Z\",\n    \"currency\" : \"USD\",\n    \"id\" : \"123456\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"total_amount\" : 49.99,\n    \"date_issued\" : \"2021-05-01T12:00:00.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  }, {\n    \"note\" : \"Some notes about this credit note\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"type\" : \"accounts_receivable_credit\",\n    \"reference\" : \"123456\",\n    \"number\" : \"OIT00546\",\n    \"currency_rate\" : 0.69,\n    \"remaining_credit\" : 27500,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"expense\"\n    } ],\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"date_paid\" : \"2021-05-01T12:00:00.000Z\",\n    \"currency\" : \"USD\",\n    \"id\" : \"123456\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"total_amount\" : 49.99,\n    \"date_issued\" : \"2021-05-01T12:00:00.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  }, {\n    \"note\" : \"Some notes about this credit note\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"type\" : \"accounts_receivable_credit\",\n    \"reference\" : \"123456\",\n    \"number\" : \"OIT00546\",\n    \"currency_rate\" : 0.69,\n    \"remaining_credit\" : 27500,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"invoice\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"expense\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"over_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"over_payment\"\n    } ],\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"date_paid\" : \"2021-05-01T12:00:00.000Z\",\n    \"currency\" : \"USD\",\n    \"id\" : \"123456\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"total_amount\" : 49.99,\n    \"date_issued\" : \"2021-05-01T12:00:00.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  }, {\n    \"note\" : \"Some notes about this credit note\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"type\" : \"accounts_receivable_credit\",\n    \"reference\" : \"123456\",\n    \"number\" : \"OIT00546\",\n    \"currency_rate\" : 0.69,\n    \"remaining_credit\" : 27500,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"order\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"pre_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"expense\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"order\"\n    } ],\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"date_paid\" : \"2021-05-01T12:00:00.000Z\",\n    \"currency\" : \"USD\",\n    \"id\" : \"123456\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"total_amount\" : 49.99,\n    \"date_issued\" : \"2021-05-01T12:00:00.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  }, {\n    \"note\" : \"Some notes about this credit note\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"type\" : \"accounts_receivable_credit\",\n    \"reference\" : \"123456\",\n    \"number\" : \"OIT00546\",\n    \"currency_rate\" : 0.69,\n    \"remaining_credit\" : 27500,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"pre_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"over_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"expense\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"order\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"pre_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"pre_payment\"\n    } ],\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"date_paid\" : \"2021-05-01T12:00:00.000Z\",\n    \"currency\" : \"USD\",\n    \"id\" : \"123456\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"total_amount\" : 49.99,\n    \"date_issued\" : \"2021-05-01T12:00:00.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  }, {\n    \"note\" : \"Some notes about this credit note\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"type\" : \"accounts_receivable_credit\",\n    \"reference\" : \"123456\",\n    \"number\" : \"OIT00546\",\n    \"currency_rate\" : 0.69,\n    \"remaining_credit\" : 27500,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"invoice\"\n    } ],\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"date_paid\" : \"2021-05-01T12:00:00.000Z\",\n    \"currency\" : \"USD\",\n    \"id\" : \"123456\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"total_amount\" : 49.99,\n    \"date_issued\" : \"2021-05-01T12:00:00.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  } ],\n  \"resource\" : \"credit-notes\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"xero\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fb5eeb42-79b0-4d21-a733-52e41fdb86d0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.028844Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/CreditNote"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "credit-notes",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetCreditNotesResponse"
          }
        }
      }
    }
  }, {
    "id" : "dba94fa6-93f6-441e-a243-754f60f71ff0",
    "name" : "Get company info",
    "request" : {
      "urlPath" : "/accounting/company-info",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dba94fa6-93f6-441e-a243-754f60f71ff0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.02558Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companyInfoOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "8b6bd14b-3e96-4789-96c4-0fcd3287d8e9",
    "name" : "Get company info",
    "request" : {
      "urlPath" : "/accounting/company-info",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8b6bd14b-3e96-4789-96c4-0fcd3287d8e9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.025509Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companyInfoOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "c1031e8d-b9ca-4933-a48f-6388937a7e38",
    "name" : "Get company info",
    "request" : {
      "urlPath" : "/accounting/company-info",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c1031e8d-b9ca-4933-a48f-6388937a7e38",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.025406Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companyInfoOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "1b822637-4233-430c-b64e-165836eb8297",
    "name" : "Get company info",
    "request" : {
      "urlPath" : "/accounting/company-info",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1b822637-4233-430c-b64e-165836eb8297",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.025321Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companyInfoOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "8a33d63f-85f8-44dd-b1c8-7776216b50a7",
    "name" : "Get company info",
    "request" : {
      "urlPath" : "/accounting/company-info",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8a33d63f-85f8-44dd-b1c8-7776216b50a7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.02523Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companyInfoOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "c96db574-23e8-4205-957c-41fee0d857da",
    "name" : "Get company info",
    "request" : {
      "urlPath" : "/accounting/company-info",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"country\" : \"US\",\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"default_sales_tax\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"company_start_date\" : \"2015-06-05\",\n    \"automated_sales_tax\" : false,\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"language\" : \"EN\",\n    \"created_by\" : \"12345\",\n    \"sales_tax_enabled\" : false,\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"sales_tax_number\" : \"111.222.333\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"company_name\" : \"SpaceX\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"currency\" : \"USD\",\n    \"fiscal_year_start_month\" : \"January\",\n    \"id\" : \"12345\",\n    \"legal_name\" : \"SpaceX Inc.\",\n    \"status\" : \"active\"\n  },\n  \"resource\" : \"company-info\",\n  \"service\" : \"xero\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c96db574-23e8-4205-957c-41fee0d857da",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.025117Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companyInfoOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/CompanyInfo"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "company-info",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetCompanyInfoResponse",
            "x-graphql-type-name" : "CompanyInfo"
          }
        }
      }
    }
  }, {
    "id" : "504c5608-2837-4d5a-87e5-129fcc35a7f5",
    "name" : "Update Bill",
    "request" : {
      "urlPath" : "/accounting/bills/duh0",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "504c5608-2837-4d5a-87e5-129fcc35a7f5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.024704Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "45cbcc72-b009-4349-b7b8-7d77a244a332",
    "name" : "Update Bill",
    "request" : {
      "urlPath" : "/accounting/bills/hadn",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "45cbcc72-b009-4349-b7b8-7d77a244a332",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.024359Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "126c4a84-e12d-470f-b907-501c8609210e",
    "name" : "Update Bill",
    "request" : {
      "urlPath" : "/accounting/bills/9r4r",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "126c4a84-e12d-470f-b907-501c8609210e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.024183Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "0aad8b7a-f2bc-49b4-aca7-e1b3215dd836",
    "name" : "Update Bill",
    "request" : {
      "urlPath" : "/accounting/bills/h798",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0aad8b7a-f2bc-49b4-aca7-e1b3215dd836",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.024042Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "803520c2-9483-49bc-936e-cee1e461b59e",
    "name" : "Update Bill",
    "request" : {
      "urlPath" : "/accounting/bills/k5ik",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "803520c2-9483-49bc-936e-cee1e461b59e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.023896Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "ebfdcb2f-5a94-482d-a2b8-59a1e5a170a1",
    "name" : "Update Bill",
    "request" : {
      "urlPath" : "/accounting/bills/4e06",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"bills\",\n  \"service\" : \"xero\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ebfdcb2f-5a94-482d-a2b8-59a1e5a170a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.023726Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "bills",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateBillResponse"
          }
        }
      }
    }
  }, {
    "id" : "0e7c963c-267b-4921-9d93-918f2dcab584",
    "name" : "Get Bill",
    "request" : {
      "urlPath" : "/accounting/bills/126e",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0e7c963c-267b-4921-9d93-918f2dcab584",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.023549Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "3241768a-c752-4277-907c-d4bd3ae9c796",
    "name" : "Get Bill",
    "request" : {
      "urlPath" : "/accounting/bills/2313",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3241768a-c752-4277-907c-d4bd3ae9c796",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.023404Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "af674b83-c9ea-47c5-a988-cd2c8dd7ada4",
    "name" : "Get Bill",
    "request" : {
      "urlPath" : "/accounting/bills/d78x",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "af674b83-c9ea-47c5-a988-cd2c8dd7ada4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.023236Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "85acf8f4-1d4f-4340-a96e-dd9df8f1ba93",
    "name" : "Get Bill",
    "request" : {
      "urlPath" : "/accounting/bills/i7l9",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "85acf8f4-1d4f-4340-a96e-dd9df8f1ba93",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.023085Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "97872590-b2c4-4bdc-8173-8001f0862545",
    "name" : "Get Bill",
    "request" : {
      "urlPath" : "/accounting/bills/9e4q",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "97872590-b2c4-4bdc-8173-8001f0862545",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.022933Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "c6d94a04-58b1-4b47-b416-ec6fea059171",
    "name" : "Get Bill",
    "request" : {
      "urlPath" : "/accounting/bills/fayk",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"notes\" : \"Some notes about this bill.\",\n    \"bill_date\" : \"2020-09-30\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"po_number\" : \"90000117\",\n    \"total\" : 27500,\n    \"bill_number\" : \"10001\",\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"terms\" : \"Net 30 days\",\n    \"ledger_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"due_date\" : \"2020-10-30\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"deposit\" : 0,\n    \"paid_date\" : \"2020-10-30\",\n    \"status\" : \"draft\"\n  },\n  \"resource\" : \"bills\",\n  \"service\" : \"xero\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c6d94a04-58b1-4b47-b416-ec6fea059171",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.02276Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Bill"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "bills",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetBillResponse",
            "x-graphql-type-name" : "Bill"
          }
        }
      }
    }
  }, {
    "id" : "18cb417a-ffcf-41e4-92fd-a48dad83c656",
    "name" : "Delete Bill",
    "request" : {
      "urlPath" : "/accounting/bills/60op",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "18cb417a-ffcf-41e4-92fd-a48dad83c656",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.022175Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "a516e7a0-a52a-4c44-96a9-a729c905a5cc",
    "name" : "Delete Bill",
    "request" : {
      "urlPath" : "/accounting/bills/663r",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a516e7a0-a52a-4c44-96a9-a729c905a5cc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.022024Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "2897eaef-d6db-4bbb-b236-41f9b661142c",
    "name" : "Delete Bill",
    "request" : {
      "urlPath" : "/accounting/bills/z70w",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2897eaef-d6db-4bbb-b236-41f9b661142c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.021858Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "7135e67a-9a26-400a-9165-8b66789d2ed0",
    "name" : "Delete Bill",
    "request" : {
      "urlPath" : "/accounting/bills/pird",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7135e67a-9a26-400a-9165-8b66789d2ed0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.021711Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "eb3eb66f-9c3d-43ef-a4a7-b99e9475861e",
    "name" : "Delete Bill",
    "request" : {
      "urlPath" : "/accounting/bills/9p0m",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eb3eb66f-9c3d-43ef-a4a7-b99e9475861e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.021563Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "a742a6b9-af5d-4cb0-a80e-f24f5f30653d",
    "name" : "Delete Bill",
    "request" : {
      "urlPath" : "/accounting/bills/9e13",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"bills\",\n  \"service\" : \"xero\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a742a6b9-af5d-4cb0-a80e-f24f5f30653d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.021387Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "bills",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "DeleteBillResponse"
          }
        }
      }
    }
  }, {
    "id" : "cace8299-137a-42c3-911c-a1d811d4db9e",
    "name" : "Create Bill",
    "request" : {
      "urlPath" : "/accounting/bills",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cace8299-137a-42c3-911c-a1d811d4db9e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.021179Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "20c644d1-259d-40d9-bb23-d1c92e3fbaa1",
    "name" : "Create Bill",
    "request" : {
      "urlPath" : "/accounting/bills",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "20c644d1-259d-40d9-bb23-d1c92e3fbaa1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.021104Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "75dbe0a2-740e-4b1d-9dc5-a91188bece02",
    "name" : "Create Bill",
    "request" : {
      "urlPath" : "/accounting/bills",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "75dbe0a2-740e-4b1d-9dc5-a91188bece02",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.021011Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "fb88cdf3-8bd6-4b2d-a81f-6366b01c89fa",
    "name" : "Create Bill",
    "request" : {
      "urlPath" : "/accounting/bills",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fb88cdf3-8bd6-4b2d-a81f-6366b01c89fa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.020937Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "c1354e1c-80a7-486f-a1d8-89300fadd19b",
    "name" : "Create Bill",
    "request" : {
      "urlPath" : "/accounting/bills",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c1354e1c-80a7-486f-a1d8-89300fadd19b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.020857Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "365817b1-d642-47fd-ae5f-569b25fb5b2b",
    "name" : "Create Bill",
    "request" : {
      "urlPath" : "/accounting/bills",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"bills\",\n  \"service\" : \"xero\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "365817b1-d642-47fd-ae5f-569b25fb5b2b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.020761Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "bills",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateBillResponse"
          }
        }
      }
    }
  }, {
    "id" : "a9d7b4ab-b828-4677-a37e-922627d9928c",
    "name" : "List Bills",
    "request" : {
      "urlPath" : "/accounting/bills",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a9d7b4ab-b828-4677-a37e-922627d9928c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.020648Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "381c33a5-1ba3-4b8d-a2f1-c914e38f7f32",
    "name" : "List Bills",
    "request" : {
      "urlPath" : "/accounting/bills",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "381c33a5-1ba3-4b8d-a2f1-c914e38f7f32",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.020565Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "ad1dc739-2750-4c1d-b7bb-05269a9144d2",
    "name" : "List Bills",
    "request" : {
      "urlPath" : "/accounting/bills",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ad1dc739-2750-4c1d-b7bb-05269a9144d2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.02046Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "a18915a9-1c2b-49b1-9b3d-15be066e7bca",
    "name" : "List Bills",
    "request" : {
      "urlPath" : "/accounting/bills",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a18915a9-1c2b-49b1-9b3d-15be066e7bca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.02037Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "63d5ed40-f978-42d2-bdd3-5a684d837617",
    "name" : "List Bills",
    "request" : {
      "urlPath" : "/accounting/bills",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "63d5ed40-f978-42d2-bdd3-5a684d837617",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.020281Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "20ea2f33-00b3-415e-bf03-59ae336375ae",
    "name" : "List Bills",
    "request" : {
      "urlPath" : "/accounting/bills",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"notes\" : \"Some notes about this bill.\",\n    \"bill_date\" : \"2020-09-30\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"po_number\" : \"90000117\",\n    \"total\" : 27500,\n    \"bill_number\" : \"10001\",\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"terms\" : \"Net 30 days\",\n    \"ledger_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"due_date\" : \"2020-10-30\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"deposit\" : 0,\n    \"paid_date\" : \"2020-10-30\",\n    \"status\" : \"draft\"\n  }, {\n    \"notes\" : \"Some notes about this bill.\",\n    \"bill_date\" : \"2020-09-30\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"po_number\" : \"90000117\",\n    \"total\" : 27500,\n    \"bill_number\" : \"10001\",\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"terms\" : \"Net 30 days\",\n    \"ledger_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"due_date\" : \"2020-10-30\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"deposit\" : 0,\n    \"paid_date\" : \"2020-10-30\",\n    \"status\" : \"draft\"\n  }, {\n    \"notes\" : \"Some notes about this bill.\",\n    \"bill_date\" : \"2020-09-30\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"po_number\" : \"90000117\",\n    \"total\" : 27500,\n    \"bill_number\" : \"10001\",\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"terms\" : \"Net 30 days\",\n    \"ledger_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"due_date\" : \"2020-10-30\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"deposit\" : 0,\n    \"paid_date\" : \"2020-10-30\",\n    \"status\" : \"draft\"\n  } ],\n  \"resource\" : \"bills\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"xero\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "20ea2f33-00b3-415e-bf03-59ae336375ae",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.020167Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/Bill"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "bills",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetBillsResponse",
            "x-graphql-type-name" : "BillList"
          }
        }
      }
    }
  }, {
    "id" : "f1643f25-a7b3-4c99-9ab8-1cafbb6bae82",
    "name" : "Get BalanceSheet",
    "request" : {
      "urlPath" : "/accounting/balance-sheet",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f1643f25-a7b3-4c99-9ab8-1cafbb6bae82",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.018948Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "balanceSheetOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "f097b706-df02-4d33-b70b-1f5099040fa4",
    "name" : "Get BalanceSheet",
    "request" : {
      "urlPath" : "/accounting/balance-sheet",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f097b706-df02-4d33-b70b-1f5099040fa4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.018834Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "balanceSheetOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "c0e0d4b4-d850-4b1b-8c41-d114861d1db4",
    "name" : "Get BalanceSheet",
    "request" : {
      "urlPath" : "/accounting/balance-sheet",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c0e0d4b4-d850-4b1b-8c41-d114861d1db4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.018711Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "balanceSheetOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "0d146177-54dd-4b52-8fa9-3335561a0f93",
    "name" : "Get BalanceSheet",
    "request" : {
      "urlPath" : "/accounting/balance-sheet",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0d146177-54dd-4b52-8fa9-3335561a0f93",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.018594Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "balanceSheetOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "18e2266a-5d93-44d5-ba20-774ae993bedf",
    "name" : "Get BalanceSheet",
    "request" : {
      "urlPath" : "/accounting/balance-sheet",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "18e2266a-5d93-44d5-ba20-774ae993bedf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.018464Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "balanceSheetOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "c571405e-82e4-4d1e-879b-de15fd1195dc",
    "name" : "Get BalanceSheet",
    "request" : {
      "urlPath" : "/accounting/balance-sheet",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"end_date\" : \"2017-01-01\",\n    \"assets\" : {\n      \"current_assets\" : {\n        \"accounts\" : [ {\n          \"id\" : \"1\",\n          \"name\" : \"Accounts Receivable (A/R)\",\n          \"value\" : 10000\n        }, {\n          \"id\" : \"2\",\n          \"name\" : \"Accounts Payable (A/P)\",\n          \"value\" : 10000\n        } ],\n        \"total\" : 100000\n      },\n      \"fixed_assets\" : {\n        \"accounts\" : [ {\n          \"id\" : \"1\",\n          \"name\" : \"Accounts Receivable (A/R)\",\n          \"value\" : 10000\n        }, {\n          \"id\" : \"2\",\n          \"name\" : \"Accounts Payable (A/P)\",\n          \"value\" : 10000\n        } ],\n        \"total\" : 100000\n      },\n      \"total\" : 200000\n    },\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"liabilities\" : {\n      \"accounts\" : [ {\n        \"id\" : \"1\",\n        \"name\" : \"Accounts Payable (A/P)\",\n        \"value\" : 10000\n      } ],\n      \"total\" : 200000\n    },\n    \"updated_by\" : \"12345\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"id\" : \"12345\",\n    \"report_name\" : \"BalanceSheet\",\n    \"created_by\" : \"12345\",\n    \"equity\" : {\n      \"items\" : [ {\n        \"id\" : \"1\",\n        \"name\" : \"Retained Earnings\",\n        \"value\" : 10000\n      } ],\n      \"total\" : 200000\n    },\n    \"start_date\" : \"2017-01-01\"\n  },\n  \"resource\" : \"BalanceSheets\",\n  \"service\" : \"quickbooks\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c571405e-82e4-4d1e-879b-de15fd1195dc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.018311Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "balanceSheetOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/BalanceSheet"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "BalanceSheets",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "quickbooks",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetBalanceSheetResponse",
            "x-graphql-type-name" : "BalanceSheet"
          }
        }
      }
    }
  } ]
}