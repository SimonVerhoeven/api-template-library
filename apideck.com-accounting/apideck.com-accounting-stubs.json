{
  "mappings" : [ {
    "id" : "361fca55-b359-3596-91a9-2ce4e163e67e",
    "name" : "Update Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/6aqh",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "361fca55-b359-3596-91a9-2ce4e163e67e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "taxRatesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "e9a1d4e0-fc7e-38de-bab1-29e45c7be9e5",
    "name" : "Update Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/01y9",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e9a1d4e0-fc7e-38de-bab1-29e45c7be9e5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "taxRatesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "192b54e3-a9b8-33d9-9c68-5f68300a7650",
    "name" : "Update Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/46v9",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "192b54e3-a9b8-33d9-9c68-5f68300a7650",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "taxRatesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "dcc535b0-5091-33d1-b415-04e2668f3f57",
    "name" : "Update Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/b5v1",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dcc535b0-5091-33d1-b415-04e2668f3f57",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "taxRatesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "c781ed37-365b-39b0-bd42-15730895078e",
    "name" : "Update Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/9924",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c781ed37-365b-39b0-bd42-15730895078e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "taxRatesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "1921be4c-1b67-3d48-bdb5-1d59d3081fb5",
    "name" : "Update Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/5b6o",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"tax-rates\",\n  \"service\" : \"xero\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1921be4c-1b67-3d48-bdb5-1d59d3081fb5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "taxRatesUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "tax-rates",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateTaxRateResponse"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "5b2894e2-950f-3d90-8a8a-0902f88e1e5a",
    "name" : "Get Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/un96",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5b2894e2-950f-3d90-8a8a-0902f88e1e5a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "taxRatesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "59302bdf-be51-3085-ad8c-ab74fb748a1d",
    "name" : "Get Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/oqz5",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "59302bdf-be51-3085-ad8c-ab74fb748a1d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "taxRatesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "d4e5517a-c508-38e9-a6dd-bd56bcf84114",
    "name" : "Get Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/rcm0",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d4e5517a-c508-38e9-a6dd-bd56bcf84114",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "taxRatesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "f1fe1e7f-000d-3842-9298-d936874efeb5",
    "name" : "Get Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/k091",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f1fe1e7f-000d-3842-9298-d936874efeb5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "taxRatesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "c9bcce83-a61c-31d9-b2e5-2f1c49f9353a",
    "name" : "Get Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/84g2",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c9bcce83-a61c-31d9-b2e5-2f1c49f9353a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "taxRatesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "7a190d9f-9854-3555-b97c-f9d36655a640",
    "name" : "Get Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/4z3v",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"components\" : [ {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    } ],\n    \"code\" : \"ABN\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Reduced rate GST Purchases\",\n    \"type\" : \"NONE\",\n    \"created_by\" : \"12345\",\n    \"original_tax_rate_id\" : \"12345\",\n    \"tax_remitted_account_id\" : \"123456\",\n    \"tax_payable_account_id\" : \"123456\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"report_tax_type\" : \"NONE\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"GST on Purchases\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"1234\",\n    \"effective_tax_rate\" : 10,\n    \"total_tax_rate\" : 10,\n    \"status\" : \"active\"\n  },\n  \"resource\" : \"tax-rates\",\n  \"service\" : \"xero\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7a190d9f-9854-3555-b97c-f9d36655a640",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "taxRatesOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/TaxRate"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "tax-rates",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetTaxRateResponse",
            "x-graphql-type-name" : "TaxRateOne"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "de3baf1f-902a-3b32-9e0c-c58027ed1572",
    "name" : "Delete Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/s9ar",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "de3baf1f-902a-3b32-9e0c-c58027ed1572",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "taxRatesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "b370c66d-a7b9-353a-955a-beda6796ad2a",
    "name" : "Delete Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/qo5y",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b370c66d-a7b9-353a-955a-beda6796ad2a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "taxRatesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "7b407c1d-7e44-3eef-bf74-2bb8cf20623d",
    "name" : "Delete Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/x33l",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7b407c1d-7e44-3eef-bf74-2bb8cf20623d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "taxRatesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "b504086b-d6a6-321f-836e-a5e2b743d585",
    "name" : "Delete Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/jx14",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b504086b-d6a6-321f-836e-a5e2b743d585",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "taxRatesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "95c14b55-e938-3e4a-bb0b-bb764ae79e11",
    "name" : "Delete Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/v96i",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "95c14b55-e938-3e4a-bb0b-bb764ae79e11",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "taxRatesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "f5255544-d2a5-3a1f-9788-a6e2185250b7",
    "name" : "Delete Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/9q4s",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"tax-rates\",\n  \"service\" : \"xero\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f5255544-d2a5-3a1f-9788-a6e2185250b7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "taxRatesDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "tax-rates",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "DeleteTaxRateResponse"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "177b0d92-073c-35f1-bca9-5c07a949c6f3",
    "name" : "Create Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "177b0d92-073c-35f1-bca9-5c07a949c6f3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "taxRatesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "8362c967-4434-3e1b-b6e3-16b143e03979",
    "name" : "Create Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8362c967-4434-3e1b-b6e3-16b143e03979",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "taxRatesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "d4adad51-97ab-3ab7-bf0f-d2f95f4f8c8c",
    "name" : "Create Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d4adad51-97ab-3ab7-bf0f-d2f95f4f8c8c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "taxRatesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "14972630-c695-3744-a47b-2efcc8d51c25",
    "name" : "Create Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "14972630-c695-3744-a47b-2efcc8d51c25",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "taxRatesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "dcb12d8e-f83e-3fd1-a178-2e0d2a02a526",
    "name" : "Create Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dcb12d8e-f83e-3fd1-a178-2e0d2a02a526",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "taxRatesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "7bb75b3e-a95e-30f8-bbe7-300ba18170c5",
    "name" : "Create Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"tax-rates\",\n  \"service\" : \"xero\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7bb75b3e-a95e-30f8-bbe7-300ba18170c5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "taxRatesAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "tax-rates",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateTaxRateResponse"
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "8361d28f-9ada-3696-b831-ebdb2cb545b9",
    "name" : "List Tax Rates",
    "request" : {
      "urlPath" : "/accounting/tax-rates",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8361d28f-9ada-3696-b831-ebdb2cb545b9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "taxRatesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "7d32db53-3b29-33c9-a475-2d540293eb4c",
    "name" : "List Tax Rates",
    "request" : {
      "urlPath" : "/accounting/tax-rates",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7d32db53-3b29-33c9-a475-2d540293eb4c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "taxRatesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "e0a121ae-e371-3fdc-a47e-19fef6fe82c1",
    "name" : "List Tax Rates",
    "request" : {
      "urlPath" : "/accounting/tax-rates",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e0a121ae-e371-3fdc-a47e-19fef6fe82c1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "taxRatesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "896bdf04-c2c6-3d15-885d-414a7326870f",
    "name" : "List Tax Rates",
    "request" : {
      "urlPath" : "/accounting/tax-rates",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "896bdf04-c2c6-3d15-885d-414a7326870f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "taxRatesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "34b234c7-9c0f-37d2-92b2-589105ca200a",
    "name" : "List Tax Rates",
    "request" : {
      "urlPath" : "/accounting/tax-rates",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "34b234c7-9c0f-37d2-92b2-589105ca200a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "taxRatesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "abce248e-22cd-31ec-8f1d-1eeb3421d2b1",
    "name" : "List Tax Rates",
    "request" : {
      "urlPath" : "/accounting/tax-rates",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"components\" : [ {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    } ],\n    \"code\" : \"ABN\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Reduced rate GST Purchases\",\n    \"type\" : \"NONE\",\n    \"created_by\" : \"12345\",\n    \"original_tax_rate_id\" : \"12345\",\n    \"tax_remitted_account_id\" : \"123456\",\n    \"tax_payable_account_id\" : \"123456\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"report_tax_type\" : \"NONE\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"GST on Purchases\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"1234\",\n    \"effective_tax_rate\" : 10,\n    \"total_tax_rate\" : 10,\n    \"status\" : \"active\"\n  } ],\n  \"resource\" : \"tax-rates\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"xero\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "abce248e-22cd-31ec-8f1d-1eeb3421d2b1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "taxRatesAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/TaxRate"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "tax-rates",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetTaxRatesResponse",
            "x-graphql-type-name" : "TaxRateList"
          }
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "2d18d83b-b95c-315a-9bff-a3d2056ddade",
    "name" : "Update Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/ul93",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2d18d83b-b95c-315a-9bff-a3d2056ddade",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "suppliersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "0ec5190c-7846-3888-92e2-539e4cecf39b",
    "name" : "Update Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/5h6n",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0ec5190c-7846-3888-92e2-539e4cecf39b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "suppliersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "07fe341d-a0e9-381b-99f1-170a0b0b96eb",
    "name" : "Update Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/vab9",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "07fe341d-a0e9-381b-99f1-170a0b0b96eb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "suppliersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "374132e2-0af6-3d65-92ed-2ece4e97cdbf",
    "name" : "Update Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/i1zx",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "374132e2-0af6-3d65-92ed-2ece4e97cdbf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "suppliersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "3f857d68-6f9f-3df1-a97d-f22823398f71",
    "name" : "Update Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/p957",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3f857d68-6f9f-3df1-a97d-f22823398f71",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "suppliersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "13ff67b9-b934-3033-97ff-2b900ccb2f12",
    "name" : "Update Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/rii0",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"suppliers\",\n  \"service\" : \"xero\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "13ff67b9-b934-3033-97ff-2b900ccb2f12",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "suppliersUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "suppliers",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateSupplierResponse"
          }
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "12eae7df-c42c-3640-9598-4ed4892fe02a",
    "name" : "Get Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/jw06",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "12eae7df-c42c-3640-9598-4ed4892fe02a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "suppliersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "7ed3df60-80a8-3f9c-acf9-dcc7e0e0e794",
    "name" : "Get Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/88p9",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7ed3df60-80a8-3f9c-acf9-dcc7e0e0e794",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "suppliersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "3eb40f60-a12f-3976-b9c1-8bfd237cf872",
    "name" : "Get Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/v8jr",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3eb40f60-a12f-3976-b9c1-8bfd237cf872",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "suppliersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "dcba0fa5-51c8-3700-b93f-2dc03e128b85",
    "name" : "Get Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/1153",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dcba0fa5-51c8-3700-b93f-2dc03e128b85",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "suppliersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "e5509056-0a86-36da-8da8-a9009b9eee6d",
    "name" : "Get Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/mdul",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e5509056-0a86-36da-8da8-a9009b9eee6d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "suppliersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "ac225756-be46-3418-9d52-2dbef0774b7b",
    "name" : "Get Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/b75v",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"notes\" : \"Some notes about this supplier\",\n    \"display_id\" : \"EMP00101\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"suffix\" : \"Jr.\",\n    \"title\" : \"CEO\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"tax_number\" : \"US123945459\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"first_name\" : \"Elon\",\n    \"individual\" : true,\n    \"last_name\" : \"Musk\",\n    \"display_name\" : \"Windsurf Shop\",\n    \"middle_name\" : \"D.\",\n    \"created_by\" : \"12345\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_name\" : \"SpaceX\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"bank_accounts\" : [ {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    } ],\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"status\" : \"active\"\n  },\n  \"resource\" : \"suppliers\",\n  \"service\" : \"xero\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ac225756-be46-3418-9d52-2dbef0774b7b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "suppliersOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Supplier"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "suppliers",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetSupplierResponse",
            "x-graphql-type-name" : "Supplier"
          }
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "f6808787-2955-3631-80c6-ec87947cea58",
    "name" : "Delete Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/rfle",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f6808787-2955-3631-80c6-ec87947cea58",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "suppliersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 42
  }, {
    "id" : "4f368edc-f83d-3a31-8a15-9cfe0866e8dc",
    "name" : "Delete Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/84dm",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4f368edc-f83d-3a31-8a15-9cfe0866e8dc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "suppliersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 43
  }, {
    "id" : "4eda67b3-c965-3bc1-b230-723bc36e23a4",
    "name" : "Delete Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/054u",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4eda67b3-c965-3bc1-b230-723bc36e23a4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "suppliersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 44
  }, {
    "id" : "f812cdd3-c5a7-36b0-85ec-fb7e8ce17876",
    "name" : "Delete Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/4up2",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f812cdd3-c5a7-36b0-85ec-fb7e8ce17876",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "suppliersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 45
  }, {
    "id" : "b60549c5-b249-33b1-a530-79f7883dd427",
    "name" : "Delete Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/6axb",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b60549c5-b249-33b1-a530-79f7883dd427",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "suppliersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 46
  }, {
    "id" : "10c63f86-d3d5-3b8b-8e43-b2388fc1f16f",
    "name" : "Delete Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/y4lz",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"suppliers\",\n  \"service\" : \"xero\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "10c63f86-d3d5-3b8b-8e43-b2388fc1f16f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "suppliersDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "suppliers",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "DeleteSupplierResponse"
          }
        }
      }
    },
    "insertionIndex" : 47
  }, {
    "id" : "496b21e6-26da-376b-82f3-b7dee1f65185",
    "name" : "Create Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "496b21e6-26da-376b-82f3-b7dee1f65185",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "suppliersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 48
  }, {
    "id" : "bc624866-c7ce-3ad3-9be6-816c1b35f43b",
    "name" : "Create Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bc624866-c7ce-3ad3-9be6-816c1b35f43b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "suppliersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 49
  }, {
    "id" : "54e8fe5e-8193-3281-9ca5-5adbeb88b964",
    "name" : "Create Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "54e8fe5e-8193-3281-9ca5-5adbeb88b964",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "suppliersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 50
  }, {
    "id" : "115fdaa9-f90d-3022-a8a1-621861a0edbc",
    "name" : "Create Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "115fdaa9-f90d-3022-a8a1-621861a0edbc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "suppliersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 51
  }, {
    "id" : "099f8958-8780-3c75-89ee-107550139692",
    "name" : "Create Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "099f8958-8780-3c75-89ee-107550139692",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "suppliersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 52
  }, {
    "id" : "d683f21f-3fb2-3f87-adb1-616c39679199",
    "name" : "Create Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"payments\",\n  \"service\" : \"xero\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d683f21f-3fb2-3f87-adb1-616c39679199",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "suppliersAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "payments",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateSupplierResponse"
          }
        }
      }
    },
    "insertionIndex" : 53
  }, {
    "id" : "6d37ee9b-51a7-3a52-b26e-b8c05028ea69",
    "name" : "List Suppliers",
    "request" : {
      "urlPath" : "/accounting/suppliers",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6d37ee9b-51a7-3a52-b26e-b8c05028ea69",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "suppliersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 54
  }, {
    "id" : "b876d382-4ee1-3db5-8f16-d198bae2830a",
    "name" : "List Suppliers",
    "request" : {
      "urlPath" : "/accounting/suppliers",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b876d382-4ee1-3db5-8f16-d198bae2830a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "suppliersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 55
  }, {
    "id" : "ad3ea2e7-0661-3a45-af91-1c8189ea1bbd",
    "name" : "List Suppliers",
    "request" : {
      "urlPath" : "/accounting/suppliers",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ad3ea2e7-0661-3a45-af91-1c8189ea1bbd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "suppliersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 56
  }, {
    "id" : "b8c516e0-caf8-347c-946a-de2211e01483",
    "name" : "List Suppliers",
    "request" : {
      "urlPath" : "/accounting/suppliers",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b8c516e0-caf8-347c-946a-de2211e01483",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "suppliersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 57
  }, {
    "id" : "d6f735e3-5d88-3faf-a48f-e888422cc8a0",
    "name" : "List Suppliers",
    "request" : {
      "urlPath" : "/accounting/suppliers",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d6f735e3-5d88-3faf-a48f-e888422cc8a0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "suppliersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 58
  }, {
    "id" : "abffca8c-18c7-35ed-85a9-24faa4ec7049",
    "name" : "List Suppliers",
    "request" : {
      "urlPath" : "/accounting/suppliers",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"notes\" : \"Some notes about this supplier\",\n    \"display_id\" : \"EMP00101\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"suffix\" : \"Jr.\",\n    \"title\" : \"CEO\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"tax_number\" : \"US123945459\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"first_name\" : \"Elon\",\n    \"individual\" : true,\n    \"last_name\" : \"Musk\",\n    \"display_name\" : \"Windsurf Shop\",\n    \"middle_name\" : \"D.\",\n    \"created_by\" : \"12345\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_name\" : \"SpaceX\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"bank_accounts\" : [ {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    } ],\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"status\" : \"active\"\n  }, {\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"notes\" : \"Some notes about this supplier\",\n    \"display_id\" : \"EMP00101\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"suffix\" : \"Jr.\",\n    \"title\" : \"CEO\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"tax_number\" : \"US123945459\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"first_name\" : \"Elon\",\n    \"individual\" : true,\n    \"last_name\" : \"Musk\",\n    \"display_name\" : \"Windsurf Shop\",\n    \"middle_name\" : \"D.\",\n    \"created_by\" : \"12345\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_name\" : \"SpaceX\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"bank_accounts\" : [ {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    } ],\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"status\" : \"active\"\n  }, {\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"notes\" : \"Some notes about this supplier\",\n    \"display_id\" : \"EMP00101\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"suffix\" : \"Jr.\",\n    \"title\" : \"CEO\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"tax_number\" : \"US123945459\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"first_name\" : \"Elon\",\n    \"individual\" : true,\n    \"last_name\" : \"Musk\",\n    \"display_name\" : \"Windsurf Shop\",\n    \"middle_name\" : \"D.\",\n    \"created_by\" : \"12345\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_name\" : \"SpaceX\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"bank_accounts\" : [ {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    } ],\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"status\" : \"active\"\n  }, {\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"notes\" : \"Some notes about this supplier\",\n    \"display_id\" : \"EMP00101\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"suffix\" : \"Jr.\",\n    \"title\" : \"CEO\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"tax_number\" : \"US123945459\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"first_name\" : \"Elon\",\n    \"individual\" : true,\n    \"last_name\" : \"Musk\",\n    \"display_name\" : \"Windsurf Shop\",\n    \"middle_name\" : \"D.\",\n    \"created_by\" : \"12345\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_name\" : \"SpaceX\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"bank_accounts\" : [ {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    } ],\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"status\" : \"active\"\n  }, {\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"notes\" : \"Some notes about this supplier\",\n    \"display_id\" : \"EMP00101\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"suffix\" : \"Jr.\",\n    \"title\" : \"CEO\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"tax_number\" : \"US123945459\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"first_name\" : \"Elon\",\n    \"individual\" : true,\n    \"last_name\" : \"Musk\",\n    \"display_name\" : \"Windsurf Shop\",\n    \"middle_name\" : \"D.\",\n    \"created_by\" : \"12345\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_name\" : \"SpaceX\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"bank_accounts\" : [ {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    } ],\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"status\" : \"active\"\n  }, {\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"notes\" : \"Some notes about this supplier\",\n    \"display_id\" : \"EMP00101\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"suffix\" : \"Jr.\",\n    \"title\" : \"CEO\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"tax_number\" : \"US123945459\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"first_name\" : \"Elon\",\n    \"individual\" : true,\n    \"last_name\" : \"Musk\",\n    \"display_name\" : \"Windsurf Shop\",\n    \"middle_name\" : \"D.\",\n    \"created_by\" : \"12345\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_name\" : \"SpaceX\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"bank_accounts\" : [ {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    } ],\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"status\" : \"active\"\n  }, {\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"notes\" : \"Some notes about this supplier\",\n    \"display_id\" : \"EMP00101\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"suffix\" : \"Jr.\",\n    \"title\" : \"CEO\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"tax_number\" : \"US123945459\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"first_name\" : \"Elon\",\n    \"individual\" : true,\n    \"last_name\" : \"Musk\",\n    \"display_name\" : \"Windsurf Shop\",\n    \"middle_name\" : \"D.\",\n    \"created_by\" : \"12345\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_name\" : \"SpaceX\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"bank_accounts\" : [ {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    } ],\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"status\" : \"active\"\n  } ],\n  \"resource\" : \"suppliers\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"xero\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "abffca8c-18c7-35ed-85a9-24faa4ec7049",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "suppliersAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/Supplier"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "suppliers",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetSuppliersResponse",
            "x-graphql-type-name" : "SupplierList"
          }
        }
      }
    },
    "insertionIndex" : 59
  }, {
    "id" : "b9bf07c9-6280-362b-a5b7-78fca3a09486",
    "name" : "Get Profit and Loss",
    "request" : {
      "urlPath" : "/accounting/profit-and-loss",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b9bf07c9-6280-362b-a5b7-78fca3a09486",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "profitAndLossOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 60
  }, {
    "id" : "466f22f9-8c1e-3934-9e58-d3cbc7141079",
    "name" : "Get Profit and Loss",
    "request" : {
      "urlPath" : "/accounting/profit-and-loss",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "466f22f9-8c1e-3934-9e58-d3cbc7141079",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "profitAndLossOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 61
  }, {
    "id" : "23684e90-9a5c-33e8-90dc-6829675043fb",
    "name" : "Get Profit and Loss",
    "request" : {
      "urlPath" : "/accounting/profit-and-loss",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "23684e90-9a5c-33e8-90dc-6829675043fb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "profitAndLossOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 62
  }, {
    "id" : "759839b9-f622-31b6-898b-4e1d2d10dc17",
    "name" : "Get Profit and Loss",
    "request" : {
      "urlPath" : "/accounting/profit-and-loss",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "759839b9-f622-31b6-898b-4e1d2d10dc17",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "profitAndLossOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 63
  }, {
    "id" : "aeb67011-9aaf-3243-bcfb-c6058139f4ad",
    "name" : "Get Profit and Loss",
    "request" : {
      "urlPath" : "/accounting/profit-and-loss",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aeb67011-9aaf-3243-bcfb-c6058139f4ad",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "profitAndLossOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 64
  }, {
    "id" : "a9868809-2b45-316e-9fab-e2054f80d841",
    "name" : "Get Profit and Loss",
    "request" : {
      "urlPath" : "/accounting/profit-and-loss",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"end_date\" : \"2017-01-01\",\n    \"income\" : {\n      \"records\" : [ {\n        \"amount\" : 10000,\n        \"id\" : \"123\",\n        \"name\" : \"Income 1\"\n      }, {\n        \"amount\" : 20000,\n        \"id\" : \"456\",\n        \"name\" : \"Income 2\"\n      } ],\n      \"total\" : 200000\n    },\n    \"net_operating_income\" : {\n      \"total\" : 200000\n    },\n    \"gross_profit\" : {\n      \"total\" : 200000\n    },\n    \"currency\" : \"USD\",\n    \"id\" : \"12345\",\n    \"net_income\" : {\n      \"total\" : 200000\n    },\n    \"customer_id\" : \"123\",\n    \"report_name\" : \"ProfitAndLoss\",\n    \"expenses\" : {\n      \"records\" : [ {\n        \"amount\" : 10000,\n        \"id\" : \"123\",\n        \"name\" : \"Expense 1\"\n      }, {\n        \"amount\" : 20000,\n        \"id\" : \"456\",\n        \"name\" : \"Expense 2\"\n      } ],\n      \"total\" : 200000\n    },\n    \"start_date\" : \"2017-01-01\"\n  },\n  \"resource\" : \"ProfitAndLosses\",\n  \"service\" : \"quickbooks\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a9868809-2b45-316e-9fab-e2054f80d841",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "profitAndLossOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/ProfitAndLoss"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "ProfitAndLosses",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "quickbooks",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetProfitAndLossResponse",
            "x-graphql-type-name" : "ProfitAndLoss"
          }
        }
      }
    },
    "insertionIndex" : 65
  }, {
    "id" : "cb2c5514-80a3-3805-b661-309e225f44fe",
    "name" : "Update Payment",
    "request" : {
      "urlPath" : "/accounting/payments/5208",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cb2c5514-80a3-3805-b661-309e225f44fe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "paymentsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 66
  }, {
    "id" : "0121b7ec-7f14-31dc-b248-93f53f8ebd8d",
    "name" : "Update Payment",
    "request" : {
      "urlPath" : "/accounting/payments/hb7y",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0121b7ec-7f14-31dc-b248-93f53f8ebd8d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "paymentsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 67
  }, {
    "id" : "3c0dc445-f770-3794-bfb9-f83b3282ec85",
    "name" : "Update Payment",
    "request" : {
      "urlPath" : "/accounting/payments/09ex",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3c0dc445-f770-3794-bfb9-f83b3282ec85",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "paymentsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 68
  }, {
    "id" : "0847f252-fa42-351b-b59a-5a8d18752d0c",
    "name" : "Update Payment",
    "request" : {
      "urlPath" : "/accounting/payments/m0f3",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0847f252-fa42-351b-b59a-5a8d18752d0c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "paymentsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 69
  }, {
    "id" : "25b707eb-5506-3120-b487-a582311f02b0",
    "name" : "Update Payment",
    "request" : {
      "urlPath" : "/accounting/payments/92bw",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "25b707eb-5506-3120-b487-a582311f02b0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "paymentsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 70
  }, {
    "id" : "456341f9-2572-3149-89dd-456b1a9cab28",
    "name" : "Update Payment",
    "request" : {
      "urlPath" : "/accounting/payments/68vg",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"payments\",\n  \"service\" : \"xero\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "456341f9-2572-3149-89dd-456b1a9cab28",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "paymentsUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "payments",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdatePaymentResponse"
          }
        }
      }
    },
    "insertionIndex" : 71
  }, {
    "id" : "be89c185-e7ff-36d0-9145-c608f171e152",
    "name" : "Get Payment",
    "request" : {
      "urlPath" : "/accounting/payments/lrgb",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "be89c185-e7ff-36d0-9145-c608f171e152",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "paymentsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 72
  }, {
    "id" : "8bc72dbc-fc9d-30bb-8d5b-fd36a8294616",
    "name" : "Get Payment",
    "request" : {
      "urlPath" : "/accounting/payments/po00",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8bc72dbc-fc9d-30bb-8d5b-fd36a8294616",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "paymentsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 73
  }, {
    "id" : "d5877201-8aa7-3a4e-a4d9-ea2a524a469c",
    "name" : "Get Payment",
    "request" : {
      "urlPath" : "/accounting/payments/pjzr",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d5877201-8aa7-3a4e-a4d9-ea2a524a469c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "paymentsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 74
  }, {
    "id" : "8998f14c-85c4-3091-8a9d-4039aab1e645",
    "name" : "Get Payment",
    "request" : {
      "urlPath" : "/accounting/payments/831q",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8998f14c-85c4-3091-8a9d-4039aab1e645",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "paymentsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 75
  }, {
    "id" : "00ef6dbe-69ba-35d3-bb64-a82440c0a72a",
    "name" : "Get Payment",
    "request" : {
      "urlPath" : "/accounting/payments/u99d",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "00ef6dbe-69ba-35d3-bb64-a82440c0a72a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "paymentsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 76
  }, {
    "id" : "428be575-fff8-353c-ae17-f644f78e12b7",
    "name" : "Get Payment",
    "request" : {
      "urlPath" : "/accounting/payments/5a3w",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"note\" : \"Some notes about this payment\",\n    \"display_id\" : \"123456\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"type\" : \"accounts_receivable\",\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"over_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"expense\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"invoice\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"invoice\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"over_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"invoice\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"123456\",\n    \"payment_method\" : \"Credit Card\",\n    \"transaction_date\" : \"2021-05-01T12:00:00.000Z\",\n    \"accounts_receivable_account_id\" : \"123456\",\n    \"reconciled\" : true,\n    \"payment_method_reference\" : \"123456\",\n    \"created_by\" : \"12345\",\n    \"accounts_receivable_account_type\" : \"Account\",\n    \"total_amount\" : 49.99,\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  },\n  \"resource\" : \"payments\",\n  \"service\" : \"xero\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "428be575-fff8-353c-ae17-f644f78e12b7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "paymentsOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Payment"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "payments",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetPaymentResponse",
            "x-graphql-type-name" : "Payment"
          }
        }
      }
    },
    "insertionIndex" : 77
  }, {
    "id" : "b9c21b5f-ec3b-3368-8848-b376101229f9",
    "name" : "Delete Payment",
    "request" : {
      "urlPath" : "/accounting/payments/eeby",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b9c21b5f-ec3b-3368-8848-b376101229f9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "paymentsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 78
  }, {
    "id" : "49c902c5-dd6d-3ba7-8e07-d6d6347f9881",
    "name" : "Delete Payment",
    "request" : {
      "urlPath" : "/accounting/payments/651y",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "49c902c5-dd6d-3ba7-8e07-d6d6347f9881",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "paymentsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 79
  }, {
    "id" : "bac77ff0-bc29-3809-a4a1-1141d83269fc",
    "name" : "Delete Payment",
    "request" : {
      "urlPath" : "/accounting/payments/r7q0",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bac77ff0-bc29-3809-a4a1-1141d83269fc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "paymentsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 80
  }, {
    "id" : "c1211e3e-a8b9-3a3b-903f-120b1540af7e",
    "name" : "Delete Payment",
    "request" : {
      "urlPath" : "/accounting/payments/34g1",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c1211e3e-a8b9-3a3b-903f-120b1540af7e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "paymentsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 81
  }, {
    "id" : "976fd0c4-4626-3726-9067-4d07fc44dd41",
    "name" : "Delete Payment",
    "request" : {
      "urlPath" : "/accounting/payments/3059",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "976fd0c4-4626-3726-9067-4d07fc44dd41",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "paymentsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 82
  }, {
    "id" : "389c80cd-d7bb-3855-ad66-0f39c6f3063e",
    "name" : "Delete Payment",
    "request" : {
      "urlPath" : "/accounting/payments/o1fc",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"payments\",\n  \"service\" : \"xero\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "389c80cd-d7bb-3855-ad66-0f39c6f3063e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "paymentsDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "payments",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "DeletePaymentResponse"
          }
        }
      }
    },
    "insertionIndex" : 83
  }, {
    "id" : "95bf213b-950d-37eb-963e-ccfa3ca3df02",
    "name" : "Create Payment",
    "request" : {
      "urlPath" : "/accounting/payments",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "95bf213b-950d-37eb-963e-ccfa3ca3df02",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "paymentsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 84
  }, {
    "id" : "d941823f-c67e-3763-8449-e39da7f20c3d",
    "name" : "Create Payment",
    "request" : {
      "urlPath" : "/accounting/payments",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d941823f-c67e-3763-8449-e39da7f20c3d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "paymentsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 85
  }, {
    "id" : "f84d8ac0-9f62-3e8b-895e-43be9a243a08",
    "name" : "Create Payment",
    "request" : {
      "urlPath" : "/accounting/payments",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f84d8ac0-9f62-3e8b-895e-43be9a243a08",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "paymentsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 86
  }, {
    "id" : "90dad402-568c-31fb-bb68-e6ce7046d783",
    "name" : "Create Payment",
    "request" : {
      "urlPath" : "/accounting/payments",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "90dad402-568c-31fb-bb68-e6ce7046d783",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "paymentsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 87
  }, {
    "id" : "6f15f4e6-7cc5-3e78-aee6-e586a034e453",
    "name" : "Create Payment",
    "request" : {
      "urlPath" : "/accounting/payments",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6f15f4e6-7cc5-3e78-aee6-e586a034e453",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "paymentsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 88
  }, {
    "id" : "93015b4f-f0f4-3453-be42-6ab2a374cc8b",
    "name" : "Create Payment",
    "request" : {
      "urlPath" : "/accounting/payments",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"payments\",\n  \"service\" : \"xero\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "93015b4f-f0f4-3453-be42-6ab2a374cc8b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "paymentsAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "payments",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreatePaymentResponse"
          }
        }
      }
    },
    "insertionIndex" : 89
  }, {
    "id" : "ecc6613a-d599-397a-b33d-614e3e6c614c",
    "name" : "List Payments",
    "request" : {
      "urlPath" : "/accounting/payments",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ecc6613a-d599-397a-b33d-614e3e6c614c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "paymentsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 90
  }, {
    "id" : "2e30238c-08ec-371a-99df-bc987d46075b",
    "name" : "List Payments",
    "request" : {
      "urlPath" : "/accounting/payments",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2e30238c-08ec-371a-99df-bc987d46075b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "paymentsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 91
  }, {
    "id" : "ad7ec6b2-e735-3f8f-8f90-7f64afe709ec",
    "name" : "List Payments",
    "request" : {
      "urlPath" : "/accounting/payments",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ad7ec6b2-e735-3f8f-8f90-7f64afe709ec",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "paymentsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 92
  }, {
    "id" : "18d4938a-c415-32bc-9782-6d60c006b3b6",
    "name" : "List Payments",
    "request" : {
      "urlPath" : "/accounting/payments",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "18d4938a-c415-32bc-9782-6d60c006b3b6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "paymentsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 93
  }, {
    "id" : "7fd63eb0-a73d-3f13-bf7a-c2630bfb4ca3",
    "name" : "List Payments",
    "request" : {
      "urlPath" : "/accounting/payments",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7fd63eb0-a73d-3f13-bf7a-c2630bfb4ca3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "paymentsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 94
  }, {
    "id" : "5a3a24b6-f333-3744-a999-256b4736699a",
    "name" : "List Payments",
    "request" : {
      "urlPath" : "/accounting/payments",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"note\" : \"Some notes about this payment\",\n    \"display_id\" : \"123456\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"type\" : \"accounts_receivable\",\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"order\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"order\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"expense\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"invoice\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"123456\",\n    \"payment_method\" : \"Credit Card\",\n    \"transaction_date\" : \"2021-05-01T12:00:00.000Z\",\n    \"accounts_receivable_account_id\" : \"123456\",\n    \"reconciled\" : true,\n    \"payment_method_reference\" : \"123456\",\n    \"created_by\" : \"12345\",\n    \"accounts_receivable_account_type\" : \"Account\",\n    \"total_amount\" : 49.99,\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  }, {\n    \"note\" : \"Some notes about this payment\",\n    \"display_id\" : \"123456\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"type\" : \"accounts_receivable\",\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"over_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"expense\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"invoice\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"123456\",\n    \"payment_method\" : \"Credit Card\",\n    \"transaction_date\" : \"2021-05-01T12:00:00.000Z\",\n    \"accounts_receivable_account_id\" : \"123456\",\n    \"reconciled\" : true,\n    \"payment_method_reference\" : \"123456\",\n    \"created_by\" : \"12345\",\n    \"accounts_receivable_account_type\" : \"Account\",\n    \"total_amount\" : 49.99,\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  }, {\n    \"note\" : \"Some notes about this payment\",\n    \"display_id\" : \"123456\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"type\" : \"accounts_receivable\",\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"order\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"order\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"pre_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"order\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"pre_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"over_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"order\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"123456\",\n    \"payment_method\" : \"Credit Card\",\n    \"transaction_date\" : \"2021-05-01T12:00:00.000Z\",\n    \"accounts_receivable_account_id\" : \"123456\",\n    \"reconciled\" : true,\n    \"payment_method_reference\" : \"123456\",\n    \"created_by\" : \"12345\",\n    \"accounts_receivable_account_type\" : \"Account\",\n    \"total_amount\" : 49.99,\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  }, {\n    \"note\" : \"Some notes about this payment\",\n    \"display_id\" : \"123456\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"type\" : \"accounts_receivable\",\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"over_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"invoice\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"expense\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"123456\",\n    \"payment_method\" : \"Credit Card\",\n    \"transaction_date\" : \"2021-05-01T12:00:00.000Z\",\n    \"accounts_receivable_account_id\" : \"123456\",\n    \"reconciled\" : true,\n    \"payment_method_reference\" : \"123456\",\n    \"created_by\" : \"12345\",\n    \"accounts_receivable_account_type\" : \"Account\",\n    \"total_amount\" : 49.99,\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  }, {\n    \"note\" : \"Some notes about this payment\",\n    \"display_id\" : \"123456\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"type\" : \"accounts_receivable\",\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"expense\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"over_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"pre_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"order\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"over_payment\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"123456\",\n    \"payment_method\" : \"Credit Card\",\n    \"transaction_date\" : \"2021-05-01T12:00:00.000Z\",\n    \"accounts_receivable_account_id\" : \"123456\",\n    \"reconciled\" : true,\n    \"payment_method_reference\" : \"123456\",\n    \"created_by\" : \"12345\",\n    \"accounts_receivable_account_type\" : \"Account\",\n    \"total_amount\" : 49.99,\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  }, {\n    \"note\" : \"Some notes about this payment\",\n    \"display_id\" : \"123456\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"type\" : \"accounts_receivable\",\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"expense\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"over_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"expense\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"expense\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"pre_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"over_payment\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"123456\",\n    \"payment_method\" : \"Credit Card\",\n    \"transaction_date\" : \"2021-05-01T12:00:00.000Z\",\n    \"accounts_receivable_account_id\" : \"123456\",\n    \"reconciled\" : true,\n    \"payment_method_reference\" : \"123456\",\n    \"created_by\" : \"12345\",\n    \"accounts_receivable_account_type\" : \"Account\",\n    \"total_amount\" : 49.99,\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  }, {\n    \"note\" : \"Some notes about this payment\",\n    \"display_id\" : \"123456\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"type\" : \"accounts_receivable\",\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"over_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"pre_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"123456\",\n    \"payment_method\" : \"Credit Card\",\n    \"transaction_date\" : \"2021-05-01T12:00:00.000Z\",\n    \"accounts_receivable_account_id\" : \"123456\",\n    \"reconciled\" : true,\n    \"payment_method_reference\" : \"123456\",\n    \"created_by\" : \"12345\",\n    \"accounts_receivable_account_type\" : \"Account\",\n    \"total_amount\" : 49.99,\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  } ],\n  \"resource\" : \"payments\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"xero\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5a3a24b6-f333-3744-a999-256b4736699a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "paymentsAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/Payment"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "payments",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetPaymentsResponse",
            "x-graphql-type-name" : "PaymentList"
          }
        }
      }
    },
    "insertionIndex" : 95
  }, {
    "id" : "3270f184-a7d5-3720-b9f4-c976aa699b89",
    "name" : "Update Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/6dj0",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3270f184-a7d5-3720-b9f4-c976aa699b89",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ledgerAccountsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 96
  }, {
    "id" : "16c8f7b9-3402-3653-b6a6-874581073074",
    "name" : "Update Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/78ww",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "16c8f7b9-3402-3653-b6a6-874581073074",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ledgerAccountsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 97
  }, {
    "id" : "242093cf-f4be-3d01-b446-1946439107ee",
    "name" : "Update Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/vuvb",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "242093cf-f4be-3d01-b446-1946439107ee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ledgerAccountsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 98
  }, {
    "id" : "f5a5aae1-b371-3754-b081-53aedffcb3bb",
    "name" : "Update Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/furc",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f5a5aae1-b371-3754-b081-53aedffcb3bb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ledgerAccountsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 99
  }, {
    "id" : "eb09c7d7-29c6-302b-96c1-1b422a72039b",
    "name" : "Update Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/xon8",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eb09c7d7-29c6-302b-96c1-1b422a72039b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ledgerAccountsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 100
  }, {
    "id" : "d354ac80-aa04-307c-94bf-c65140b757ee",
    "name" : "Update Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/627z",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"ledger-accounts\",\n  \"service\" : \"xero\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d354ac80-aa04-307c-94bf-c65140b757ee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ledgerAccountsUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "ledger-accounts",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateLedgerAccountResponse"
          }
        }
      }
    },
    "insertionIndex" : 101
  }, {
    "id" : "f04be51b-74cf-329a-a4e1-8c6672381a40",
    "name" : "Get Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/s0l6",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f04be51b-74cf-329a-a4e1-8c6672381a40",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ledgerAccountsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 102
  }, {
    "id" : "1f43a8eb-4e26-30e3-8979-8e166da26aa9",
    "name" : "Get Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/la5i",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1f43a8eb-4e26-30e3-8979-8e166da26aa9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ledgerAccountsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 103
  }, {
    "id" : "c2a14d4e-3a0c-3677-8270-34f297d2f864",
    "name" : "Get Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/k16g",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c2a14d4e-3a0c-3677-8270-34f297d2f864",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ledgerAccountsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 104
  }, {
    "id" : "fed765f7-8bb6-32e1-8bb0-ff06b9f8ad5f",
    "name" : "Get Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/k2f4",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fed765f7-8bb6-32e1-8bb0-ff06b9f8ad5f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ledgerAccountsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 105
  }, {
    "id" : "0cbf875b-d18a-3665-b417-24828254db6c",
    "name" : "Get Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/x091",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0cbf875b-d18a-3665-b417-24828254db6c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ledgerAccountsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 106
  }, {
    "id" : "9c12c85f-1681-36d9-9ed9-2692c5c25ff8",
    "name" : "Get Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/agd2",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"code\" : \"453\",\n    \"fully_qualified_name\" : \"Asset.Bank.Checking_Account\",\n    \"display_id\" : \"1-12345\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Main checking account\",\n    \"sub_account\" : false,\n    \"type\" : \"bank\",\n    \"last_reconciliation_date\" : \"2020-09-30\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"sub_type\" : \"CHECKING_ACCOUNT\",\n    \"current_balance\" : 20000,\n    \"currency\" : \"USD\",\n    \"categories\" : [ {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    } ],\n    \"id\" : \"12345\",\n    \"opening_balance\" : 75000,\n    \"bank_account\" : {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    },\n    \"level\" : 1,\n    \"active\" : true,\n    \"classification\" : \"asset\",\n    \"created_by\" : \"12345\",\n    \"parent_account\" : {\n      \"display_id\" : \"1-1100\",\n      \"name\" : \"Bank Accounts\",\n      \"id\" : \"12345\"\n    },\n    \"tax_type\" : \"NONE\",\n    \"sub_accounts\" : [ {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    } ],\n    \"nominal_code\" : \"N091\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Bank account\",\n    \"updated_by\" : \"12345\",\n    \"header\" : true,\n    \"status\" : \"active\"\n  },\n  \"resource\" : \"ledger-accounts\",\n  \"service\" : \"xero\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9c12c85f-1681-36d9-9ed9-2692c5c25ff8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ledgerAccountsOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/LedgerAccount"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "ledger-accounts",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetLedgerAccountResponse",
            "x-graphql-type-name" : "LedgerAccount"
          }
        }
      }
    },
    "insertionIndex" : 107
  }, {
    "id" : "e9d8de39-69c5-3d78-90ce-92fd80122fbc",
    "name" : "Delete Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/916b",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e9d8de39-69c5-3d78-90ce-92fd80122fbc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ledgerAccountsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 108
  }, {
    "id" : "e4e90ef1-15e5-3985-bbbf-ec3c1a47d8b7",
    "name" : "Delete Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/wxt0",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e4e90ef1-15e5-3985-bbbf-ec3c1a47d8b7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ledgerAccountsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 109
  }, {
    "id" : "aedfa50c-5fcc-3c53-bf8f-9a68fbc774b4",
    "name" : "Delete Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/i025",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aedfa50c-5fcc-3c53-bf8f-9a68fbc774b4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ledgerAccountsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 110
  }, {
    "id" : "aa925211-cc2a-39f3-ae62-0deef2bed435",
    "name" : "Delete Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/3n20",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aa925211-cc2a-39f3-ae62-0deef2bed435",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ledgerAccountsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 111
  }, {
    "id" : "a1af14b9-43f9-3c26-bb7a-9687ab12521b",
    "name" : "Delete Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/4715",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a1af14b9-43f9-3c26-bb7a-9687ab12521b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ledgerAccountsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 112
  }, {
    "id" : "323a15f8-547a-32e7-bc5b-6a2edad0161e",
    "name" : "Delete Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/i033",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"ledger-accounts\",\n  \"service\" : \"xero\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "323a15f8-547a-32e7-bc5b-6a2edad0161e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ledgerAccountsDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "ledger-accounts",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "DeleteLedgerAccountResponse"
          }
        }
      }
    },
    "insertionIndex" : 113
  }, {
    "id" : "22e81c69-2d82-3605-a03d-67867cb142d8",
    "name" : "Create Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "22e81c69-2d82-3605-a03d-67867cb142d8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ledgerAccountsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 114
  }, {
    "id" : "61bfb55a-4fa0-33e1-a1f4-434fbd7cfe68",
    "name" : "Create Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "61bfb55a-4fa0-33e1-a1f4-434fbd7cfe68",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ledgerAccountsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 115
  }, {
    "id" : "989b6f2c-f3f3-3149-8fba-36ec0484822a",
    "name" : "Create Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "989b6f2c-f3f3-3149-8fba-36ec0484822a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ledgerAccountsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 116
  }, {
    "id" : "d7d92139-22e1-33f7-bf4c-3065ac013eb9",
    "name" : "Create Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d7d92139-22e1-33f7-bf4c-3065ac013eb9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ledgerAccountsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 117
  }, {
    "id" : "46f51e74-7fd0-325b-906b-49f0f4e5e56b",
    "name" : "Create Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "46f51e74-7fd0-325b-906b-49f0f4e5e56b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ledgerAccountsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 118
  }, {
    "id" : "e52cd9f5-87ef-3158-bc3f-6cf0aa1e9de1",
    "name" : "Create Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"ledger-accounts\",\n  \"service\" : \"xero\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e52cd9f5-87ef-3158-bc3f-6cf0aa1e9de1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ledgerAccountsAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "ledger-accounts",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateLedgerAccountResponse"
          }
        }
      }
    },
    "insertionIndex" : 119
  }, {
    "id" : "ddc8b263-f758-3a11-8920-e7b571d61432",
    "name" : "List Ledger Accounts",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ddc8b263-f758-3a11-8920-e7b571d61432",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ledgerAccountsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 120
  }, {
    "id" : "adf2085d-2c0e-35ae-9dd9-65206d20b984",
    "name" : "List Ledger Accounts",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "adf2085d-2c0e-35ae-9dd9-65206d20b984",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ledgerAccountsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 121
  }, {
    "id" : "b74d1fe9-9ce8-3071-927f-67c25914b0c3",
    "name" : "List Ledger Accounts",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b74d1fe9-9ce8-3071-927f-67c25914b0c3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ledgerAccountsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 122
  }, {
    "id" : "51b33a35-2def-3e12-bad9-5b1ce528f7ef",
    "name" : "List Ledger Accounts",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "51b33a35-2def-3e12-bad9-5b1ce528f7ef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ledgerAccountsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 123
  }, {
    "id" : "697a9c53-34f7-3825-bfe7-0f55ff6c79aa",
    "name" : "List Ledger Accounts",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "697a9c53-34f7-3825-bfe7-0f55ff6c79aa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ledgerAccountsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 124
  }, {
    "id" : "b1ada376-9bc3-3d61-8e1d-7a3cc6a19e01",
    "name" : "List Ledger Accounts",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"code\" : \"453\",\n    \"fully_qualified_name\" : \"Asset.Bank.Checking_Account\",\n    \"display_id\" : \"1-12345\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Main checking account\",\n    \"sub_account\" : false,\n    \"type\" : \"bank\",\n    \"last_reconciliation_date\" : \"2020-09-30\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"sub_type\" : \"CHECKING_ACCOUNT\",\n    \"current_balance\" : 20000,\n    \"currency\" : \"USD\",\n    \"categories\" : [ {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    } ],\n    \"id\" : \"12345\",\n    \"opening_balance\" : 75000,\n    \"bank_account\" : {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    },\n    \"level\" : 1,\n    \"active\" : true,\n    \"classification\" : \"asset\",\n    \"created_by\" : \"12345\",\n    \"parent_account\" : {\n      \"display_id\" : \"1-1100\",\n      \"name\" : \"Bank Accounts\",\n      \"id\" : \"12345\"\n    },\n    \"tax_type\" : \"NONE\",\n    \"sub_accounts\" : [ {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    } ],\n    \"nominal_code\" : \"N091\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Bank account\",\n    \"updated_by\" : \"12345\",\n    \"header\" : true,\n    \"status\" : \"active\"\n  }, {\n    \"code\" : \"453\",\n    \"fully_qualified_name\" : \"Asset.Bank.Checking_Account\",\n    \"display_id\" : \"1-12345\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Main checking account\",\n    \"sub_account\" : false,\n    \"type\" : \"bank\",\n    \"last_reconciliation_date\" : \"2020-09-30\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"sub_type\" : \"CHECKING_ACCOUNT\",\n    \"current_balance\" : 20000,\n    \"currency\" : \"USD\",\n    \"categories\" : [ {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    } ],\n    \"id\" : \"12345\",\n    \"opening_balance\" : 75000,\n    \"bank_account\" : {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    },\n    \"level\" : 1,\n    \"active\" : true,\n    \"classification\" : \"asset\",\n    \"created_by\" : \"12345\",\n    \"parent_account\" : {\n      \"display_id\" : \"1-1100\",\n      \"name\" : \"Bank Accounts\",\n      \"id\" : \"12345\"\n    },\n    \"tax_type\" : \"NONE\",\n    \"sub_accounts\" : [ {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    } ],\n    \"nominal_code\" : \"N091\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Bank account\",\n    \"updated_by\" : \"12345\",\n    \"header\" : true,\n    \"status\" : \"active\"\n  }, {\n    \"code\" : \"453\",\n    \"fully_qualified_name\" : \"Asset.Bank.Checking_Account\",\n    \"display_id\" : \"1-12345\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Main checking account\",\n    \"sub_account\" : false,\n    \"type\" : \"bank\",\n    \"last_reconciliation_date\" : \"2020-09-30\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"sub_type\" : \"CHECKING_ACCOUNT\",\n    \"current_balance\" : 20000,\n    \"currency\" : \"USD\",\n    \"categories\" : [ {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    } ],\n    \"id\" : \"12345\",\n    \"opening_balance\" : 75000,\n    \"bank_account\" : {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    },\n    \"level\" : 1,\n    \"active\" : true,\n    \"classification\" : \"asset\",\n    \"created_by\" : \"12345\",\n    \"parent_account\" : {\n      \"display_id\" : \"1-1100\",\n      \"name\" : \"Bank Accounts\",\n      \"id\" : \"12345\"\n    },\n    \"tax_type\" : \"NONE\",\n    \"sub_accounts\" : [ {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    } ],\n    \"nominal_code\" : \"N091\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Bank account\",\n    \"updated_by\" : \"12345\",\n    \"header\" : true,\n    \"status\" : \"active\"\n  }, {\n    \"code\" : \"453\",\n    \"fully_qualified_name\" : \"Asset.Bank.Checking_Account\",\n    \"display_id\" : \"1-12345\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Main checking account\",\n    \"sub_account\" : false,\n    \"type\" : \"bank\",\n    \"last_reconciliation_date\" : \"2020-09-30\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"sub_type\" : \"CHECKING_ACCOUNT\",\n    \"current_balance\" : 20000,\n    \"currency\" : \"USD\",\n    \"categories\" : [ {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    } ],\n    \"id\" : \"12345\",\n    \"opening_balance\" : 75000,\n    \"bank_account\" : {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    },\n    \"level\" : 1,\n    \"active\" : true,\n    \"classification\" : \"asset\",\n    \"created_by\" : \"12345\",\n    \"parent_account\" : {\n      \"display_id\" : \"1-1100\",\n      \"name\" : \"Bank Accounts\",\n      \"id\" : \"12345\"\n    },\n    \"tax_type\" : \"NONE\",\n    \"sub_accounts\" : [ {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    } ],\n    \"nominal_code\" : \"N091\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Bank account\",\n    \"updated_by\" : \"12345\",\n    \"header\" : true,\n    \"status\" : \"active\"\n  }, {\n    \"code\" : \"453\",\n    \"fully_qualified_name\" : \"Asset.Bank.Checking_Account\",\n    \"display_id\" : \"1-12345\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Main checking account\",\n    \"sub_account\" : false,\n    \"type\" : \"bank\",\n    \"last_reconciliation_date\" : \"2020-09-30\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"sub_type\" : \"CHECKING_ACCOUNT\",\n    \"current_balance\" : 20000,\n    \"currency\" : \"USD\",\n    \"categories\" : [ {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    } ],\n    \"id\" : \"12345\",\n    \"opening_balance\" : 75000,\n    \"bank_account\" : {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    },\n    \"level\" : 1,\n    \"active\" : true,\n    \"classification\" : \"asset\",\n    \"created_by\" : \"12345\",\n    \"parent_account\" : {\n      \"display_id\" : \"1-1100\",\n      \"name\" : \"Bank Accounts\",\n      \"id\" : \"12345\"\n    },\n    \"tax_type\" : \"NONE\",\n    \"sub_accounts\" : [ {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    } ],\n    \"nominal_code\" : \"N091\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Bank account\",\n    \"updated_by\" : \"12345\",\n    \"header\" : true,\n    \"status\" : \"active\"\n  }, {\n    \"code\" : \"453\",\n    \"fully_qualified_name\" : \"Asset.Bank.Checking_Account\",\n    \"display_id\" : \"1-12345\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Main checking account\",\n    \"sub_account\" : false,\n    \"type\" : \"bank\",\n    \"last_reconciliation_date\" : \"2020-09-30\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"sub_type\" : \"CHECKING_ACCOUNT\",\n    \"current_balance\" : 20000,\n    \"currency\" : \"USD\",\n    \"categories\" : [ {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    } ],\n    \"id\" : \"12345\",\n    \"opening_balance\" : 75000,\n    \"bank_account\" : {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    },\n    \"level\" : 1,\n    \"active\" : true,\n    \"classification\" : \"asset\",\n    \"created_by\" : \"12345\",\n    \"parent_account\" : {\n      \"display_id\" : \"1-1100\",\n      \"name\" : \"Bank Accounts\",\n      \"id\" : \"12345\"\n    },\n    \"tax_type\" : \"NONE\",\n    \"sub_accounts\" : [ {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    } ],\n    \"nominal_code\" : \"N091\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Bank account\",\n    \"updated_by\" : \"12345\",\n    \"header\" : true,\n    \"status\" : \"active\"\n  }, {\n    \"code\" : \"453\",\n    \"fully_qualified_name\" : \"Asset.Bank.Checking_Account\",\n    \"display_id\" : \"1-12345\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Main checking account\",\n    \"sub_account\" : false,\n    \"type\" : \"bank\",\n    \"last_reconciliation_date\" : \"2020-09-30\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"sub_type\" : \"CHECKING_ACCOUNT\",\n    \"current_balance\" : 20000,\n    \"currency\" : \"USD\",\n    \"categories\" : [ {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    } ],\n    \"id\" : \"12345\",\n    \"opening_balance\" : 75000,\n    \"bank_account\" : {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    },\n    \"level\" : 1,\n    \"active\" : true,\n    \"classification\" : \"asset\",\n    \"created_by\" : \"12345\",\n    \"parent_account\" : {\n      \"display_id\" : \"1-1100\",\n      \"name\" : \"Bank Accounts\",\n      \"id\" : \"12345\"\n    },\n    \"tax_type\" : \"NONE\",\n    \"sub_accounts\" : [ {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    } ],\n    \"nominal_code\" : \"N091\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Bank account\",\n    \"updated_by\" : \"12345\",\n    \"header\" : true,\n    \"status\" : \"active\"\n  }, {\n    \"code\" : \"453\",\n    \"fully_qualified_name\" : \"Asset.Bank.Checking_Account\",\n    \"display_id\" : \"1-12345\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Main checking account\",\n    \"sub_account\" : false,\n    \"type\" : \"bank\",\n    \"last_reconciliation_date\" : \"2020-09-30\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"sub_type\" : \"CHECKING_ACCOUNT\",\n    \"current_balance\" : 20000,\n    \"currency\" : \"USD\",\n    \"categories\" : [ {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    } ],\n    \"id\" : \"12345\",\n    \"opening_balance\" : 75000,\n    \"bank_account\" : {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    },\n    \"level\" : 1,\n    \"active\" : true,\n    \"classification\" : \"asset\",\n    \"created_by\" : \"12345\",\n    \"parent_account\" : {\n      \"display_id\" : \"1-1100\",\n      \"name\" : \"Bank Accounts\",\n      \"id\" : \"12345\"\n    },\n    \"tax_type\" : \"NONE\",\n    \"sub_accounts\" : [ {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    } ],\n    \"nominal_code\" : \"N091\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Bank account\",\n    \"updated_by\" : \"12345\",\n    \"header\" : true,\n    \"status\" : \"active\"\n  } ],\n  \"resource\" : \"ledger-accounts\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"xero\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b1ada376-9bc3-3d61-8e1d-7a3cc6a19e01",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ledgerAccountsAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/LedgerAccount"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "ledger-accounts",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetLedgerAccountsResponse",
            "x-graphql-type-name" : "LedgerAccountList"
          }
        }
      }
    },
    "insertionIndex" : 125
  }, {
    "id" : "9bd5f8c7-a6d4-31b3-938f-911f279a90eb",
    "name" : "Update Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/1pi2",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9bd5f8c7-a6d4-31b3-938f-911f279a90eb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "journalEntriesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 126
  }, {
    "id" : "fdfdc652-15fa-3d03-9dad-59e96fcffba3",
    "name" : "Update Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/joy9",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fdfdc652-15fa-3d03-9dad-59e96fcffba3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "journalEntriesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 127
  }, {
    "id" : "f0c88842-bad9-3f33-9d08-802fab059df5",
    "name" : "Update Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/0055",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f0c88842-bad9-3f33-9d08-802fab059df5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "journalEntriesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 128
  }, {
    "id" : "9ffe234e-7055-371d-82fe-b77c2e6aa34b",
    "name" : "Update Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/tnpr",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9ffe234e-7055-371d-82fe-b77c2e6aa34b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "journalEntriesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 129
  }, {
    "id" : "f1a7d663-3740-3b6e-8b3e-f5746b48b541",
    "name" : "Update Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/5vk2",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f1a7d663-3740-3b6e-8b3e-f5746b48b541",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "journalEntriesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 130
  }, {
    "id" : "05ce2c03-841c-3ce9-b885-4397a04b6f9f",
    "name" : "Update Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/jv7w",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"journal-entries\",\n  \"service\" : \"quickbooks\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "05ce2c03-841c-3ce9-b885-4397a04b6f9f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "journalEntriesUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "journal-entries",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "quickbooks",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 131
  }, {
    "id" : "0fd903ab-8e56-32ee-a8ab-8a2ad81b345c",
    "name" : "Get Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/42sh",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0fd903ab-8e56-32ee-a8ab-8a2ad81b345c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "journalEntriesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 132
  }, {
    "id" : "813a4d81-d6dd-3733-aaef-1fb30b7ea142",
    "name" : "Get Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/0kuv",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "813a4d81-d6dd-3733-aaef-1fb30b7ea142",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "journalEntriesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 133
  }, {
    "id" : "2f4eb083-58a9-3e42-a6a5-f1c2ccef729b",
    "name" : "Get Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/kiot",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2f4eb083-58a9-3e42-a6a5-f1c2ccef729b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "journalEntriesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 134
  }, {
    "id" : "b91618d7-bc5e-3ea8-9b4a-15ca14f36ea1",
    "name" : "Get Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/304a",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b91618d7-bc5e-3ea8-9b4a-15ca14f36ea1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "journalEntriesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 135
  }, {
    "id" : "bc2be2e3-5602-3012-a32e-d720d4eabcd2",
    "name" : "Get Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/25nd",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bc2be2e3-5602-3012-a32e-d720d4eabcd2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "journalEntriesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 136
  }, {
    "id" : "6d5cc700-0eb7-3058-91c8-f397894f017c",
    "name" : "Get Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/0hf7",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"memo\" : \"Thank you for your business and have a great day!\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    } ],\n    \"title\" : \"Purchase Invoice-Inventory (USD): 2019/02/01 Batch Summary Entry\",\n    \"created_by\" : \"12345\",\n    \"currency_rate\" : 0.69,\n    \"journal_symbol\" : \"IND\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"currency\" : \"USD\",\n    \"id\" : \"12345\",\n    \"posted_at\" : \"2020-09-30T07:43:32.000Z\"\n  },\n  \"resource\" : \"journal-entries\",\n  \"service\" : \"quickbooks\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6d5cc700-0eb7-3058-91c8-f397894f017c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "journalEntriesOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/JournalEntry"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "journal-entries",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "quickbooks",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-graphql-type-name" : "JournalEntry"
          }
        }
      }
    },
    "insertionIndex" : 137
  }, {
    "id" : "afd2d256-62fc-37d5-8988-61023eee2560",
    "name" : "Delete Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/1c3g",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "afd2d256-62fc-37d5-8988-61023eee2560",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "journalEntriesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 138
  }, {
    "id" : "97ebaca6-810b-35db-a15c-f4ae01e62818",
    "name" : "Delete Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/0fj0",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "97ebaca6-810b-35db-a15c-f4ae01e62818",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "journalEntriesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 139
  }, {
    "id" : "18e33ea7-ddbf-333e-85ce-d6f97710b39b",
    "name" : "Delete Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/k775",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "18e33ea7-ddbf-333e-85ce-d6f97710b39b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "journalEntriesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 140
  }, {
    "id" : "97927499-4053-3665-8a89-2074b65d320a",
    "name" : "Delete Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/513y",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "97927499-4053-3665-8a89-2074b65d320a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "journalEntriesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 141
  }, {
    "id" : "c24688b9-c03f-33cd-92e7-7d0a723933c0",
    "name" : "Delete Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/p871",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c24688b9-c03f-33cd-92e7-7d0a723933c0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "journalEntriesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 142
  }, {
    "id" : "2b132d29-5872-3dff-aaa4-f4456f24e2ea",
    "name" : "Delete Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/kx9y",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"journal-entries\",\n  \"service\" : \"quickbooks\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2b132d29-5872-3dff-aaa4-f4456f24e2ea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "journalEntriesDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "journal-entries",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "quickbooks",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 143
  }, {
    "id" : "9b4cdc0b-10b0-3f39-8a30-fe0efa984c46",
    "name" : "Create Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9b4cdc0b-10b0-3f39-8a30-fe0efa984c46",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "journalEntriesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 144
  }, {
    "id" : "4781ef66-d3cd-3a36-a37b-8a8770080e96",
    "name" : "Create Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4781ef66-d3cd-3a36-a37b-8a8770080e96",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "journalEntriesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 145
  }, {
    "id" : "e5294bb5-e6fd-32d2-8791-071aa08f6da6",
    "name" : "Create Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e5294bb5-e6fd-32d2-8791-071aa08f6da6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "journalEntriesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 146
  }, {
    "id" : "5c755218-e5f4-343a-ac43-e50bdb3aa2e8",
    "name" : "Create Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5c755218-e5f4-343a-ac43-e50bdb3aa2e8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "journalEntriesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 147
  }, {
    "id" : "0a4a3196-6110-3f80-aec1-66e85ffd8527",
    "name" : "Create Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0a4a3196-6110-3f80-aec1-66e85ffd8527",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "journalEntriesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 148
  }, {
    "id" : "852549ec-cb19-3be0-a323-959b0a823054",
    "name" : "Create Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"journal-entries\",\n  \"service\" : \"quickbooks\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "852549ec-cb19-3be0-a323-959b0a823054",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "journalEntriesAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "journal-entries",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "quickbooks",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 149
  }, {
    "id" : "064e2795-4aa5-363f-ac9d-aaaa955978b1",
    "name" : "List Journal Entries",
    "request" : {
      "urlPath" : "/accounting/journal-entries",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "064e2795-4aa5-363f-ac9d-aaaa955978b1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "journalEntriesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 150
  }, {
    "id" : "044a9fdd-b24f-3a06-9c59-a530a60b2a69",
    "name" : "List Journal Entries",
    "request" : {
      "urlPath" : "/accounting/journal-entries",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "044a9fdd-b24f-3a06-9c59-a530a60b2a69",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "journalEntriesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 151
  }, {
    "id" : "f7e7726a-0db1-3d03-a068-45876668783e",
    "name" : "List Journal Entries",
    "request" : {
      "urlPath" : "/accounting/journal-entries",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f7e7726a-0db1-3d03-a068-45876668783e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "journalEntriesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 152
  }, {
    "id" : "2433d482-1baf-3798-a9c9-b7e9e4bd6d3a",
    "name" : "List Journal Entries",
    "request" : {
      "urlPath" : "/accounting/journal-entries",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2433d482-1baf-3798-a9c9-b7e9e4bd6d3a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "journalEntriesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 153
  }, {
    "id" : "44da52e0-ea31-342f-bbee-e3fc863f193b",
    "name" : "List Journal Entries",
    "request" : {
      "urlPath" : "/accounting/journal-entries",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "44da52e0-ea31-342f-bbee-e3fc863f193b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "journalEntriesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 154
  }, {
    "id" : "c5234720-2bb7-38cf-94c2-99fea93474fe",
    "name" : "List Journal Entries",
    "request" : {
      "urlPath" : "/accounting/journal-entries",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"memo\" : \"Thank you for your business and have a great day!\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    } ],\n    \"title\" : \"Purchase Invoice-Inventory (USD): 2019/02/01 Batch Summary Entry\",\n    \"created_by\" : \"12345\",\n    \"currency_rate\" : 0.69,\n    \"journal_symbol\" : \"IND\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"currency\" : \"USD\",\n    \"id\" : \"12345\",\n    \"posted_at\" : \"2020-09-30T07:43:32.000Z\"\n  }, {\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"memo\" : \"Thank you for your business and have a great day!\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    } ],\n    \"title\" : \"Purchase Invoice-Inventory (USD): 2019/02/01 Batch Summary Entry\",\n    \"created_by\" : \"12345\",\n    \"currency_rate\" : 0.69,\n    \"journal_symbol\" : \"IND\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"currency\" : \"USD\",\n    \"id\" : \"12345\",\n    \"posted_at\" : \"2020-09-30T07:43:32.000Z\"\n  }, {\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"memo\" : \"Thank you for your business and have a great day!\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    } ],\n    \"title\" : \"Purchase Invoice-Inventory (USD): 2019/02/01 Batch Summary Entry\",\n    \"created_by\" : \"12345\",\n    \"currency_rate\" : 0.69,\n    \"journal_symbol\" : \"IND\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"currency\" : \"USD\",\n    \"id\" : \"12345\",\n    \"posted_at\" : \"2020-09-30T07:43:32.000Z\"\n  }, {\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"memo\" : \"Thank you for your business and have a great day!\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    } ],\n    \"title\" : \"Purchase Invoice-Inventory (USD): 2019/02/01 Batch Summary Entry\",\n    \"created_by\" : \"12345\",\n    \"currency_rate\" : 0.69,\n    \"journal_symbol\" : \"IND\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"currency\" : \"USD\",\n    \"id\" : \"12345\",\n    \"posted_at\" : \"2020-09-30T07:43:32.000Z\"\n  }, {\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"memo\" : \"Thank you for your business and have a great day!\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    } ],\n    \"title\" : \"Purchase Invoice-Inventory (USD): 2019/02/01 Batch Summary Entry\",\n    \"created_by\" : \"12345\",\n    \"currency_rate\" : 0.69,\n    \"journal_symbol\" : \"IND\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"currency\" : \"USD\",\n    \"id\" : \"12345\",\n    \"posted_at\" : \"2020-09-30T07:43:32.000Z\"\n  } ],\n  \"resource\" : \"journal-entries\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"quickbooks\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c5234720-2bb7-38cf-94c2-99fea93474fe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "journalEntriesAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/JournalEntry"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "journal-entries",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "quickbooks",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-graphql-type-name" : "JournalEntryList"
          }
        }
      }
    },
    "insertionIndex" : 155
  }, {
    "id" : "1796a17c-3559-3976-8950-eb5c32ac464c",
    "name" : "Update Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/4hu3",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1796a17c-3559-3976-8950-eb5c32ac464c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "invoicesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 156
  }, {
    "id" : "b2ca0788-ce70-3921-af55-6d2a6ce07c59",
    "name" : "Update Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/qp83",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b2ca0788-ce70-3921-af55-6d2a6ce07c59",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "invoicesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 157
  }, {
    "id" : "52271384-d70f-365c-9673-a86d5bcd185b",
    "name" : "Update Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/y8n8",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "52271384-d70f-365c-9673-a86d5bcd185b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "invoicesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 158
  }, {
    "id" : "954f18ea-1a76-38a0-a8b9-de25008634cc",
    "name" : "Update Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/q7x2",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "954f18ea-1a76-38a0-a8b9-de25008634cc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "invoicesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 159
  }, {
    "id" : "e9ce2938-1f1e-3621-ad3b-9eb59b94c9b5",
    "name" : "Update Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/y1n3",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e9ce2938-1f1e-3621-ad3b-9eb59b94c9b5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "invoicesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 160
  }, {
    "id" : "9f8c8c81-3dc6-36f9-bcfa-110897d483b2",
    "name" : "Update Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/96t2",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"invoices\",\n  \"service\" : \"xero\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9f8c8c81-3dc6-36f9-bcfa-110897d483b2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "invoicesUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/InvoiceResponse"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "invoices",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateInvoiceResponse"
          }
        }
      }
    },
    "insertionIndex" : 161
  }, {
    "id" : "a9a293bd-c7a3-3fc8-9022-703f7650665c",
    "name" : "Get Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/m047",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a9a293bd-c7a3-3fc8-9022-703f7650665c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "invoicesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 162
  }, {
    "id" : "d5b3cba5-388d-3104-923e-9add5c4d93d7",
    "name" : "Get Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/glw9",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d5b3cba5-388d-3104-923e-9add5c4d93d7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "invoicesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 163
  }, {
    "id" : "c5115b79-c8e8-3cb4-b5d7-6bb383eb333d",
    "name" : "Get Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/sv55",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c5115b79-c8e8-3cb4-b5d7-6bb383eb333d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "invoicesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 164
  }, {
    "id" : "d2118e92-7f72-33da-bafc-3d83a19e2646",
    "name" : "Get Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/5262",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d2118e92-7f72-33da-bafc-3d83a19e2646",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "invoicesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 165
  }, {
    "id" : "3d4cc4e4-440c-3fd5-b3c2-7252481d4224",
    "name" : "Get Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/200b",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3d4cc4e4-440c-3fd5-b3c2-7252481d4224",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "invoicesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 166
  }, {
    "id" : "656280c0-ecd8-30db-9c57-00d26167ad58",
    "name" : "Get Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/l27j",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"billing_address\" : {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    },\n    \"discount_percentage\" : 5.5,\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"customer_memo\" : \"Thank you for your business and have a great day!\",\n    \"type\" : \"service\",\n    \"invoice_date\" : \"2020-09-30\",\n    \"reference\" : \"123456\",\n    \"number\" : \"OIT00546\",\n    \"currency_rate\" : 0.69,\n    \"po_number\" : \"90000117\",\n    \"total\" : 27500,\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"terms\" : \"Net 30 days\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"shipping_address\" : {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    },\n    \"due_date\" : \"2020-09-30\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"deposit\" : 0,\n    \"template_id\" : \"123456\",\n    \"invoice_sent\" : true,\n    \"source_document_url\" : \"https://www.invoicesolution.com/invoice/123456\",\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"draft\"\n  },\n  \"resource\" : \"invoices\",\n  \"service\" : \"xero\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "656280c0-ecd8-30db-9c57-00d26167ad58",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "invoicesOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Invoice"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "invoices",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetInvoiceResponse",
            "x-graphql-type-name" : "Invoice"
          }
        }
      }
    },
    "insertionIndex" : 167
  }, {
    "id" : "10c4be55-61b5-388f-90f7-ba88fca44e8c",
    "name" : "Delete Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/9xg2",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "10c4be55-61b5-388f-90f7-ba88fca44e8c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "invoicesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 168
  }, {
    "id" : "4e781ae3-22b7-310b-9875-90e5e107d608",
    "name" : "Delete Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/025c",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4e781ae3-22b7-310b-9875-90e5e107d608",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "invoicesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 169
  }, {
    "id" : "aeb775d5-6b3d-36fc-beaa-176dbd31e0e6",
    "name" : "Delete Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/2510",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aeb775d5-6b3d-36fc-beaa-176dbd31e0e6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "invoicesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 170
  }, {
    "id" : "738a01d3-efb7-35c8-aadb-8ca9081af505",
    "name" : "Delete Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/94vs",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "738a01d3-efb7-35c8-aadb-8ca9081af505",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "invoicesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 171
  }, {
    "id" : "dfc50e30-51d2-35c5-9ffa-1aa2ef1b8035",
    "name" : "Delete Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/ga51",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dfc50e30-51d2-35c5-9ffa-1aa2ef1b8035",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "invoicesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 172
  }, {
    "id" : "f08bbd88-dc79-35ad-b7a8-0d5eb661e2d2",
    "name" : "Delete Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/jnuf",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"invoices\",\n  \"service\" : \"xero\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f08bbd88-dc79-35ad-b7a8-0d5eb661e2d2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "invoicesDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/InvoiceResponse"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "invoices",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "DeleteInvoiceResponse"
          }
        }
      }
    },
    "insertionIndex" : 173
  }, {
    "id" : "0b6d89eb-5f80-3acd-9b5e-ed43544223c3",
    "name" : "Create Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0b6d89eb-5f80-3acd-9b5e-ed43544223c3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "invoicesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 174
  }, {
    "id" : "26cdc903-6d6b-3515-bd43-6026509912aa",
    "name" : "Create Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "26cdc903-6d6b-3515-bd43-6026509912aa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "invoicesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 175
  }, {
    "id" : "70ac1d15-41d5-3467-8742-a6e90b2d016a",
    "name" : "Create Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "70ac1d15-41d5-3467-8742-a6e90b2d016a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "invoicesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 176
  }, {
    "id" : "b9495976-da9c-31f2-9af4-74b2c2eedec2",
    "name" : "Create Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b9495976-da9c-31f2-9af4-74b2c2eedec2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "invoicesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 177
  }, {
    "id" : "c2f2c161-c3f3-3371-90d8-c95d6d31d078",
    "name" : "Create Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c2f2c161-c3f3-3371-90d8-c95d6d31d078",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "invoicesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 178
  }, {
    "id" : "ba163c11-ab48-3ec0-9a95-382f6c3139ac",
    "name" : "Create Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"invoices\",\n  \"service\" : \"xero\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ba163c11-ab48-3ec0-9a95-382f6c3139ac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "invoicesAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/InvoiceResponse"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "invoices",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateInvoiceResponse"
          }
        }
      }
    },
    "insertionIndex" : 179
  }, {
    "id" : "f2e5e3e9-eb71-3c38-8ee0-fe5f4c484b99",
    "name" : "List Invoices",
    "request" : {
      "urlPath" : "/accounting/invoices",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f2e5e3e9-eb71-3c38-8ee0-fe5f4c484b99",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "invoicesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 180
  }, {
    "id" : "09e2631f-5147-3ac0-a527-5502b6e4240d",
    "name" : "List Invoices",
    "request" : {
      "urlPath" : "/accounting/invoices",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "09e2631f-5147-3ac0-a527-5502b6e4240d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "invoicesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 181
  }, {
    "id" : "b730d59e-3e24-3446-a536-4a26c00e351d",
    "name" : "List Invoices",
    "request" : {
      "urlPath" : "/accounting/invoices",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b730d59e-3e24-3446-a536-4a26c00e351d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "invoicesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 182
  }, {
    "id" : "cddb1919-e159-326b-bc31-9f0945cf6014",
    "name" : "List Invoices",
    "request" : {
      "urlPath" : "/accounting/invoices",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cddb1919-e159-326b-bc31-9f0945cf6014",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "invoicesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 183
  }, {
    "id" : "70f0342d-a0b5-3376-bd6f-2ab9a711ef67",
    "name" : "List Invoices",
    "request" : {
      "urlPath" : "/accounting/invoices",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "70f0342d-a0b5-3376-bd6f-2ab9a711ef67",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "invoicesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 184
  }, {
    "id" : "04b7f8ec-9ba2-3e57-9e71-2d9ab72a4466",
    "name" : "List Invoices",
    "request" : {
      "urlPath" : "/accounting/invoices",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"billing_address\" : {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    },\n    \"discount_percentage\" : 5.5,\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"customer_memo\" : \"Thank you for your business and have a great day!\",\n    \"type\" : \"service\",\n    \"invoice_date\" : \"2020-09-30\",\n    \"reference\" : \"123456\",\n    \"number\" : \"OIT00546\",\n    \"currency_rate\" : 0.69,\n    \"po_number\" : \"90000117\",\n    \"total\" : 27500,\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"terms\" : \"Net 30 days\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"shipping_address\" : {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    },\n    \"due_date\" : \"2020-09-30\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"deposit\" : 0,\n    \"template_id\" : \"123456\",\n    \"invoice_sent\" : true,\n    \"source_document_url\" : \"https://www.invoicesolution.com/invoice/123456\",\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"draft\"\n  }, {\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"billing_address\" : {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    },\n    \"discount_percentage\" : 5.5,\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"customer_memo\" : \"Thank you for your business and have a great day!\",\n    \"type\" : \"service\",\n    \"invoice_date\" : \"2020-09-30\",\n    \"reference\" : \"123456\",\n    \"number\" : \"OIT00546\",\n    \"currency_rate\" : 0.69,\n    \"po_number\" : \"90000117\",\n    \"total\" : 27500,\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"terms\" : \"Net 30 days\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"shipping_address\" : {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    },\n    \"due_date\" : \"2020-09-30\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"deposit\" : 0,\n    \"template_id\" : \"123456\",\n    \"invoice_sent\" : true,\n    \"source_document_url\" : \"https://www.invoicesolution.com/invoice/123456\",\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"draft\"\n  } ],\n  \"resource\" : \"invoices\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"xero\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "04b7f8ec-9ba2-3e57-9e71-2d9ab72a4466",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "invoicesAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/Invoice"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "invoices",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetInvoicesResponse",
            "x-graphql-type-name" : "InvoiceList"
          }
        }
      }
    },
    "insertionIndex" : 185
  }, {
    "id" : "2ef7e657-d2c0-3ec4-9fba-720ec6678623",
    "name" : "Update Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/z83w",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2ef7e657-d2c0-3ec4-9fba-720ec6678623",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "invoiceItemsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 186
  }, {
    "id" : "058f014d-7b05-3618-823e-20fdd7b321a5",
    "name" : "Update Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/8k8n",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "058f014d-7b05-3618-823e-20fdd7b321a5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "invoiceItemsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 187
  }, {
    "id" : "fd5cf916-c797-3444-af1c-8e583f39492a",
    "name" : "Update Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/5i7b",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fd5cf916-c797-3444-af1c-8e583f39492a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "invoiceItemsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 188
  }, {
    "id" : "b670ded4-67d5-3ca2-9eaa-2827c262eb2b",
    "name" : "Update Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/24h1",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b670ded4-67d5-3ca2-9eaa-2827c262eb2b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "invoiceItemsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 189
  }, {
    "id" : "f9cb4097-94be-3be0-b362-5617c4adf7a5",
    "name" : "Update Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/411g",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f9cb4097-94be-3be0-b362-5617c4adf7a5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "invoiceItemsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 190
  }, {
    "id" : "d4ffca79-9990-3c75-a769-1ac65e4b0e9d",
    "name" : "Update Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/938s",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"invoice-items\",\n  \"service\" : \"xero\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d4ffca79-9990-3c75-a769-1ac65e4b0e9d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "invoiceItemsUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "invoice-items",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateInvoiceItemsResponse"
          }
        }
      }
    },
    "insertionIndex" : 191
  }, {
    "id" : "a6deccac-3a09-3de1-8c7c-79105a74e5e6",
    "name" : "Get Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/w5ps",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a6deccac-3a09-3de1-8c7c-79105a74e5e6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "invoiceItemsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 192
  }, {
    "id" : "dbd751f2-a5d5-3e70-aff6-45f9029f4334",
    "name" : "Get Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/ep7g",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dbd751f2-a5d5-3e70-aff6-45f9029f4334",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "invoiceItemsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 193
  }, {
    "id" : "0ada1cb2-dfa3-338e-bcdd-ded99fa79fa6",
    "name" : "Get Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/z6w6",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0ada1cb2-dfa3-338e-bcdd-ded99fa79fa6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "invoiceItemsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 194
  }, {
    "id" : "1a6db3c2-bb96-305e-a940-7c1c3560fbf3",
    "name" : "Get Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/232n",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1a6db3c2-bb96-305e-a940-7c1c3560fbf3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "invoiceItemsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 195
  }, {
    "id" : "e8fbae01-5ef3-3b61-807c-7183adab641e",
    "name" : "Get Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/4qly",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e8fbae01-5ef3-3b61-807c-7183adab641e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "invoiceItemsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 196
  }, {
    "id" : "6543edcb-2db3-3dbd-befc-c53f1051a684",
    "name" : "Get Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/7v0p",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"sold\" : true,\n    \"code\" : \"120-C\",\n    \"quantity\" : 1,\n    \"purchase_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"sales_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"active\" : true,\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n    \"tracked\" : true,\n    \"type\" : \"inventory\",\n    \"unit_price\" : 27500.5,\n    \"created_by\" : \"12345\",\n    \"inventory_date\" : \"2020-10-30\",\n    \"asset_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"expense_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"purchased\" : true,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Model Y\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"123456\",\n    \"income_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    }\n  },\n  \"resource\" : \"invoice-items\",\n  \"service\" : \"xero\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6543edcb-2db3-3dbd-befc-c53f1051a684",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "invoiceItemsOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/InvoiceItem"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "invoice-items",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetInvoiceItemResponse",
            "x-graphql-type-name" : "InvoiceItem"
          }
        }
      }
    },
    "insertionIndex" : 197
  }, {
    "id" : "2ad46b88-166c-367e-b454-6b313216ebbd",
    "name" : "Delete Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/p63f",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2ad46b88-166c-367e-b454-6b313216ebbd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "invoiceItemsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 198
  }, {
    "id" : "fa56bdc5-a785-3f27-8825-9375b732c5d3",
    "name" : "Delete Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/01lk",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fa56bdc5-a785-3f27-8825-9375b732c5d3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "invoiceItemsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 199
  }, {
    "id" : "daa83d49-c869-33b0-b997-574cdf331840",
    "name" : "Delete Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/5lql",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "daa83d49-c869-33b0-b997-574cdf331840",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "invoiceItemsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 200
  }, {
    "id" : "604e216b-695f-3511-8f22-0a9d57670581",
    "name" : "Delete Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/crq2",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "604e216b-695f-3511-8f22-0a9d57670581",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "invoiceItemsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 201
  }, {
    "id" : "23dec97f-58fa-3d5a-8e44-f13d8da56048",
    "name" : "Delete Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/5jkm",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "23dec97f-58fa-3d5a-8e44-f13d8da56048",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "invoiceItemsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 202
  }, {
    "id" : "076a10f3-86f5-35fb-98a5-2b439324494f",
    "name" : "Delete Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/3i6s",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"tax-rates\",\n  \"service\" : \"xero\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "076a10f3-86f5-35fb-98a5-2b439324494f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "invoiceItemsDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "tax-rates",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "DeleteTaxRateResponse"
          }
        }
      }
    },
    "insertionIndex" : 203
  }, {
    "id" : "1401a982-7eb9-315b-8d27-bdd84ecf195f",
    "name" : "Create Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1401a982-7eb9-315b-8d27-bdd84ecf195f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "invoiceItemsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 204
  }, {
    "id" : "b6068547-1ad8-38d5-ba70-59ab909620a2",
    "name" : "Create Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b6068547-1ad8-38d5-ba70-59ab909620a2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "invoiceItemsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 205
  }, {
    "id" : "6ffe856d-cebd-3bba-a21b-40349d7893e9",
    "name" : "Create Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6ffe856d-cebd-3bba-a21b-40349d7893e9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "invoiceItemsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 206
  }, {
    "id" : "1f9ca169-bd1b-3248-94ad-ad518a1fd370",
    "name" : "Create Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1f9ca169-bd1b-3248-94ad-ad518a1fd370",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "invoiceItemsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 207
  }, {
    "id" : "9cb8cf7e-edad-3598-af39-f666e78b24ff",
    "name" : "Create Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9cb8cf7e-edad-3598-af39-f666e78b24ff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "invoiceItemsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 208
  }, {
    "id" : "c007fe95-c69a-3624-8e72-ea3f2c4b22e4",
    "name" : "Create Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"invoice-items\",\n  \"service\" : \"xero\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c007fe95-c69a-3624-8e72-ea3f2c4b22e4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "invoiceItemsAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "invoice-items",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateInvoiceItemResponse"
          }
        }
      }
    },
    "insertionIndex" : 209
  }, {
    "id" : "f6b26c97-303b-3e69-bba5-b8057cfb6a5b",
    "name" : "List Invoice Items",
    "request" : {
      "urlPath" : "/accounting/invoice-items",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f6b26c97-303b-3e69-bba5-b8057cfb6a5b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "invoiceItemsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 210
  }, {
    "id" : "935c5cf8-cc7c-3a13-b22f-c6f9081bdcc0",
    "name" : "List Invoice Items",
    "request" : {
      "urlPath" : "/accounting/invoice-items",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "935c5cf8-cc7c-3a13-b22f-c6f9081bdcc0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "invoiceItemsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 211
  }, {
    "id" : "a1992fba-b00c-3463-be14-86565b42f456",
    "name" : "List Invoice Items",
    "request" : {
      "urlPath" : "/accounting/invoice-items",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a1992fba-b00c-3463-be14-86565b42f456",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "invoiceItemsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 212
  }, {
    "id" : "e776e385-1a50-35c0-98d4-e415f98c21fd",
    "name" : "List Invoice Items",
    "request" : {
      "urlPath" : "/accounting/invoice-items",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e776e385-1a50-35c0-98d4-e415f98c21fd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "invoiceItemsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 213
  }, {
    "id" : "9fc4e93f-88f8-3370-9062-d2e5e475bd76",
    "name" : "List Invoice Items",
    "request" : {
      "urlPath" : "/accounting/invoice-items",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9fc4e93f-88f8-3370-9062-d2e5e475bd76",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "invoiceItemsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 214
  }, {
    "id" : "ed10d8a1-1cce-3106-b99b-adcffa51d820",
    "name" : "List Invoice Items",
    "request" : {
      "urlPath" : "/accounting/invoice-items",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"sold\" : true,\n    \"code\" : \"120-C\",\n    \"quantity\" : 1,\n    \"purchase_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"sales_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"active\" : true,\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n    \"tracked\" : true,\n    \"type\" : \"inventory\",\n    \"unit_price\" : 27500.5,\n    \"created_by\" : \"12345\",\n    \"inventory_date\" : \"2020-10-30\",\n    \"asset_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"expense_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"purchased\" : true,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Model Y\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"123456\",\n    \"income_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    }\n  }, {\n    \"sold\" : true,\n    \"code\" : \"120-C\",\n    \"quantity\" : 1,\n    \"purchase_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"sales_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"active\" : true,\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n    \"tracked\" : true,\n    \"type\" : \"inventory\",\n    \"unit_price\" : 27500.5,\n    \"created_by\" : \"12345\",\n    \"inventory_date\" : \"2020-10-30\",\n    \"asset_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"expense_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"purchased\" : true,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Model Y\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"123456\",\n    \"income_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    }\n  }, {\n    \"sold\" : true,\n    \"code\" : \"120-C\",\n    \"quantity\" : 1,\n    \"purchase_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"sales_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"active\" : true,\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n    \"tracked\" : true,\n    \"type\" : \"inventory\",\n    \"unit_price\" : 27500.5,\n    \"created_by\" : \"12345\",\n    \"inventory_date\" : \"2020-10-30\",\n    \"asset_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"expense_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"purchased\" : true,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Model Y\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"123456\",\n    \"income_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    }\n  }, {\n    \"sold\" : true,\n    \"code\" : \"120-C\",\n    \"quantity\" : 1,\n    \"purchase_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"sales_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"active\" : true,\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n    \"tracked\" : true,\n    \"type\" : \"inventory\",\n    \"unit_price\" : 27500.5,\n    \"created_by\" : \"12345\",\n    \"inventory_date\" : \"2020-10-30\",\n    \"asset_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"expense_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"purchased\" : true,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Model Y\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"123456\",\n    \"income_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    }\n  }, {\n    \"sold\" : true,\n    \"code\" : \"120-C\",\n    \"quantity\" : 1,\n    \"purchase_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"sales_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"active\" : true,\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n    \"tracked\" : true,\n    \"type\" : \"inventory\",\n    \"unit_price\" : 27500.5,\n    \"created_by\" : \"12345\",\n    \"inventory_date\" : \"2020-10-30\",\n    \"asset_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"expense_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"purchased\" : true,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Model Y\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"123456\",\n    \"income_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    }\n  }, {\n    \"sold\" : true,\n    \"code\" : \"120-C\",\n    \"quantity\" : 1,\n    \"purchase_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"sales_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"active\" : true,\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n    \"tracked\" : true,\n    \"type\" : \"inventory\",\n    \"unit_price\" : 27500.5,\n    \"created_by\" : \"12345\",\n    \"inventory_date\" : \"2020-10-30\",\n    \"asset_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"expense_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"purchased\" : true,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Model Y\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"123456\",\n    \"income_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    }\n  }, {\n    \"sold\" : true,\n    \"code\" : \"120-C\",\n    \"quantity\" : 1,\n    \"purchase_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"sales_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"active\" : true,\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n    \"tracked\" : true,\n    \"type\" : \"inventory\",\n    \"unit_price\" : 27500.5,\n    \"created_by\" : \"12345\",\n    \"inventory_date\" : \"2020-10-30\",\n    \"asset_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"expense_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"purchased\" : true,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Model Y\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"123456\",\n    \"income_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    }\n  }, {\n    \"sold\" : true,\n    \"code\" : \"120-C\",\n    \"quantity\" : 1,\n    \"purchase_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"sales_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"active\" : true,\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n    \"tracked\" : true,\n    \"type\" : \"inventory\",\n    \"unit_price\" : 27500.5,\n    \"created_by\" : \"12345\",\n    \"inventory_date\" : \"2020-10-30\",\n    \"asset_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"expense_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"purchased\" : true,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Model Y\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"123456\",\n    \"income_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    }\n  } ],\n  \"resource\" : \"invoice-items\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"xero\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ed10d8a1-1cce-3106-b99b-adcffa51d820",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "invoiceItemsAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/InvoiceItem"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "invoice-items",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetInvoiceItemsResponse",
            "x-graphql-type-name" : "InvoiceItemList"
          }
        }
      }
    },
    "insertionIndex" : 215
  }, {
    "id" : "e0cce1c4-70f8-38a8-881c-9b17911d0212",
    "name" : "Update Customer",
    "request" : {
      "urlPath" : "/accounting/customers/sk2z",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e0cce1c4-70f8-38a8-881c-9b17911d0212",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "customersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 216
  }, {
    "id" : "d1292322-b3ea-3bbd-9f0f-f7ec6df8535a",
    "name" : "Update Customer",
    "request" : {
      "urlPath" : "/accounting/customers/iq8q",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d1292322-b3ea-3bbd-9f0f-f7ec6df8535a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "customersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 217
  }, {
    "id" : "4784b5f5-e207-3a5a-b5ac-873088d87cc8",
    "name" : "Update Customer",
    "request" : {
      "urlPath" : "/accounting/customers/dg2g",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4784b5f5-e207-3a5a-b5ac-873088d87cc8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "customersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 218
  }, {
    "id" : "f0b981c8-fee1-37fd-a4b6-9fad3e62a1db",
    "name" : "Update Customer",
    "request" : {
      "urlPath" : "/accounting/customers/fkia",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f0b981c8-fee1-37fd-a4b6-9fad3e62a1db",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "customersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 219
  }, {
    "id" : "77ffface-4573-3fc7-83eb-27a708e6c14f",
    "name" : "Update Customer",
    "request" : {
      "urlPath" : "/accounting/customers/50au",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "77ffface-4573-3fc7-83eb-27a708e6c14f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "customersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 220
  }, {
    "id" : "870bb877-02a8-3052-a6be-8a1096908cee",
    "name" : "Update Customer",
    "request" : {
      "urlPath" : "/accounting/customers/4xjm",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"customers\",\n  \"service\" : \"xero\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "870bb877-02a8-3052-a6be-8a1096908cee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "customersUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "customers",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateCustomerResponse"
          }
        }
      }
    },
    "insertionIndex" : 221
  }, {
    "id" : "cc0641c9-ab82-3554-a88d-e09080a9e623",
    "name" : "Get Customer",
    "request" : {
      "urlPath" : "/accounting/customers/n59v",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cc0641c9-ab82-3554-a88d-e09080a9e623",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "customersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 222
  }, {
    "id" : "c4ce275a-9be4-3818-a45c-552d1a8cb93b",
    "name" : "Get Customer",
    "request" : {
      "urlPath" : "/accounting/customers/4y36",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c4ce275a-9be4-3818-a45c-552d1a8cb93b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "customersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 223
  }, {
    "id" : "bed71987-e88a-3de9-a98c-dac38c4c238b",
    "name" : "Get Customer",
    "request" : {
      "urlPath" : "/accounting/customers/t21m",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bed71987-e88a-3de9-a98c-dac38c4c238b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "customersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 224
  }, {
    "id" : "a72a66af-0716-3366-83ab-88d50d9ba4b9",
    "name" : "Get Customer",
    "request" : {
      "urlPath" : "/accounting/customers/zy09",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a72a66af-0716-3366-83ab-88d50d9ba4b9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "customersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 225
  }, {
    "id" : "8ad461f8-73c8-3aac-a045-fd8652061447",
    "name" : "Get Customer",
    "request" : {
      "urlPath" : "/accounting/customers/utcc",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8ad461f8-73c8-3aac-a045-fd8652061447",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "customersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 226
  }, {
    "id" : "18628897-5133-3121-9e9f-dcb23551ef03",
    "name" : "Get Customer",
    "request" : {
      "urlPath" : "/accounting/customers/la2x",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"parent\" : {\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\"\n    },\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"notes\" : \"Some notes about this customer\",\n    \"display_id\" : \"EMP00101\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"project\" : false,\n    \"suffix\" : \"Jr.\",\n    \"title\" : \"CEO\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"tax_number\" : \"US123945459\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"first_name\" : \"Elon\",\n    \"individual\" : true,\n    \"last_name\" : \"Musk\",\n    \"display_name\" : \"Windsurf Shop\",\n    \"middle_name\" : \"D.\",\n    \"created_by\" : \"12345\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_name\" : \"SpaceX\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"bank_accounts\" : [ {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    } ],\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"status\" : \"active\"\n  },\n  \"resource\" : \"customers\",\n  \"service\" : \"xero\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "18628897-5133-3121-9e9f-dcb23551ef03",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "customersOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/AccountingCustomer"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "customers",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetCustomerResponse"
          }
        }
      }
    },
    "insertionIndex" : 227
  }, {
    "id" : "a34f8b73-4874-374b-9c70-4de83827836b",
    "name" : "Delete Customer",
    "request" : {
      "urlPath" : "/accounting/customers/8z0q",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a34f8b73-4874-374b-9c70-4de83827836b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "customersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 228
  }, {
    "id" : "97a2b18a-702d-32bf-865c-bb4b7f597a68",
    "name" : "Delete Customer",
    "request" : {
      "urlPath" : "/accounting/customers/4o20",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "97a2b18a-702d-32bf-865c-bb4b7f597a68",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "customersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 229
  }, {
    "id" : "ee3f2c77-7743-3ee2-836c-d93b6558af6f",
    "name" : "Delete Customer",
    "request" : {
      "urlPath" : "/accounting/customers/myuj",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ee3f2c77-7743-3ee2-836c-d93b6558af6f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "customersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 230
  }, {
    "id" : "1af87cd7-74e2-3053-9769-ec6513d51bf1",
    "name" : "Delete Customer",
    "request" : {
      "urlPath" : "/accounting/customers/adkl",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1af87cd7-74e2-3053-9769-ec6513d51bf1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "customersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 231
  }, {
    "id" : "53cba2ad-5aac-38cf-b431-bc5949a7e45e",
    "name" : "Delete Customer",
    "request" : {
      "urlPath" : "/accounting/customers/93re",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "53cba2ad-5aac-38cf-b431-bc5949a7e45e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "customersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 232
  }, {
    "id" : "6a8380ec-ee0b-398e-8757-1484af4eaed8",
    "name" : "Delete Customer",
    "request" : {
      "urlPath" : "/accounting/customers/7n37",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"customers\",\n  \"service\" : \"xero\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6a8380ec-ee0b-398e-8757-1484af4eaed8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "customersDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "customers",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "DeleteCustomerResponse"
          }
        }
      }
    },
    "insertionIndex" : 233
  }, {
    "id" : "b552eef2-7415-3627-9d2f-6f2fba8cb287",
    "name" : "Create Customer",
    "request" : {
      "urlPath" : "/accounting/customers",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b552eef2-7415-3627-9d2f-6f2fba8cb287",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "customersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 234
  }, {
    "id" : "8de24d01-c299-3b85-8fac-cee15c829a29",
    "name" : "Create Customer",
    "request" : {
      "urlPath" : "/accounting/customers",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8de24d01-c299-3b85-8fac-cee15c829a29",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "customersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 235
  }, {
    "id" : "1b9f6ce3-07e4-3abd-90b9-72c17bf083a6",
    "name" : "Create Customer",
    "request" : {
      "urlPath" : "/accounting/customers",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1b9f6ce3-07e4-3abd-90b9-72c17bf083a6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "customersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 236
  }, {
    "id" : "666a7e4b-6e2e-33f6-944f-1b1276f74735",
    "name" : "Create Customer",
    "request" : {
      "urlPath" : "/accounting/customers",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "666a7e4b-6e2e-33f6-944f-1b1276f74735",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "customersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 237
  }, {
    "id" : "957046ca-c83a-307d-a40b-cd392ad2d975",
    "name" : "Create Customer",
    "request" : {
      "urlPath" : "/accounting/customers",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "957046ca-c83a-307d-a40b-cd392ad2d975",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "customersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 238
  }, {
    "id" : "9be8e90f-5b0d-39a1-aeaf-4750ea9feee4",
    "name" : "Create Customer",
    "request" : {
      "urlPath" : "/accounting/customers",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"customers\",\n  \"service\" : \"xero\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9be8e90f-5b0d-39a1-aeaf-4750ea9feee4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "customersAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "customers",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateCustomerResponse"
          }
        }
      }
    },
    "insertionIndex" : 239
  }, {
    "id" : "3b2b71cc-2b0f-3a5d-8e82-b2c03d736ec8",
    "name" : "List Customers",
    "request" : {
      "urlPath" : "/accounting/customers",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3b2b71cc-2b0f-3a5d-8e82-b2c03d736ec8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "customersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 240
  }, {
    "id" : "8bf14e42-5df6-3ef9-ada4-98c3ec682da6",
    "name" : "List Customers",
    "request" : {
      "urlPath" : "/accounting/customers",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8bf14e42-5df6-3ef9-ada4-98c3ec682da6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "customersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 241
  }, {
    "id" : "0faea2d8-d832-3038-abbb-b6b99e3a84f7",
    "name" : "List Customers",
    "request" : {
      "urlPath" : "/accounting/customers",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0faea2d8-d832-3038-abbb-b6b99e3a84f7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "customersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 242
  }, {
    "id" : "0788528b-6e29-3967-bead-8c941bc15ddc",
    "name" : "List Customers",
    "request" : {
      "urlPath" : "/accounting/customers",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0788528b-6e29-3967-bead-8c941bc15ddc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "customersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 243
  }, {
    "id" : "0c60331c-a3a2-366b-9563-b29d51b4ac60",
    "name" : "List Customers",
    "request" : {
      "urlPath" : "/accounting/customers",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0c60331c-a3a2-366b-9563-b29d51b4ac60",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "customersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 244
  }, {
    "id" : "d4c38b0f-d046-3a73-ad4f-6f487b6c40e1",
    "name" : "List Customers",
    "request" : {
      "urlPath" : "/accounting/customers",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"parent\" : {\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\"\n    },\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"notes\" : \"Some notes about this customer\",\n    \"display_id\" : \"EMP00101\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"project\" : false,\n    \"suffix\" : \"Jr.\",\n    \"title\" : \"CEO\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"tax_number\" : \"US123945459\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"first_name\" : \"Elon\",\n    \"individual\" : true,\n    \"last_name\" : \"Musk\",\n    \"display_name\" : \"Windsurf Shop\",\n    \"middle_name\" : \"D.\",\n    \"created_by\" : \"12345\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_name\" : \"SpaceX\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"bank_accounts\" : [ {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    } ],\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"status\" : \"active\"\n  }, {\n    \"parent\" : {\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\"\n    },\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"notes\" : \"Some notes about this customer\",\n    \"display_id\" : \"EMP00101\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"project\" : false,\n    \"suffix\" : \"Jr.\",\n    \"title\" : \"CEO\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"tax_number\" : \"US123945459\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"first_name\" : \"Elon\",\n    \"individual\" : true,\n    \"last_name\" : \"Musk\",\n    \"display_name\" : \"Windsurf Shop\",\n    \"middle_name\" : \"D.\",\n    \"created_by\" : \"12345\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_name\" : \"SpaceX\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"bank_accounts\" : [ {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    } ],\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"status\" : \"active\"\n  }, {\n    \"parent\" : {\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\"\n    },\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"notes\" : \"Some notes about this customer\",\n    \"display_id\" : \"EMP00101\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"project\" : false,\n    \"suffix\" : \"Jr.\",\n    \"title\" : \"CEO\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"tax_number\" : \"US123945459\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"first_name\" : \"Elon\",\n    \"individual\" : true,\n    \"last_name\" : \"Musk\",\n    \"display_name\" : \"Windsurf Shop\",\n    \"middle_name\" : \"D.\",\n    \"created_by\" : \"12345\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_name\" : \"SpaceX\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"bank_accounts\" : [ {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    } ],\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"status\" : \"active\"\n  } ],\n  \"resource\" : \"customers\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"xero\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d4c38b0f-d046-3a73-ad4f-6f487b6c40e1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "customersAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/AccountingCustomer"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "customers",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetCustomersResponse",
            "x-graphql-type-name" : "CustomerList"
          }
        }
      }
    },
    "insertionIndex" : 245
  }, {
    "id" : "f933de48-7045-393c-98bf-0f7de8461662",
    "name" : "Update Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/qr9t",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f933de48-7045-393c-98bf-0f7de8461662",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "creditNotesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 246
  }, {
    "id" : "4de59873-86d2-36f6-b12b-254171230274",
    "name" : "Update Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/00jg",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4de59873-86d2-36f6-b12b-254171230274",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "creditNotesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 247
  }, {
    "id" : "db930163-3ee4-32db-a621-a0d05f9afb6c",
    "name" : "Update Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/57ki",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "db930163-3ee4-32db-a621-a0d05f9afb6c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "creditNotesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 248
  }, {
    "id" : "fd4e99d1-6856-3e8d-95cf-b79fcb4e1c49",
    "name" : "Update Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/hn3y",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fd4e99d1-6856-3e8d-95cf-b79fcb4e1c49",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "creditNotesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 249
  }, {
    "id" : "42b909d5-bf21-3c36-9ba9-f37d374c758f",
    "name" : "Update Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/4ck5",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "42b909d5-bf21-3c36-9ba9-f37d374c758f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "creditNotesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 250
  }, {
    "id" : "cfca7875-19a0-3bcb-abe0-2beda7cc7bb2",
    "name" : "Update Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/e606",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"credit-notes\",\n  \"service\" : \"xero\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cfca7875-19a0-3bcb-abe0-2beda7cc7bb2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "creditNotesUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "credit-notes",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateCreditNoteResponse"
          }
        }
      }
    },
    "insertionIndex" : 251
  }, {
    "id" : "be63ebfd-b0a7-3227-a44b-9d6060dc1ce5",
    "name" : "Get Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/70gh",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "be63ebfd-b0a7-3227-a44b-9d6060dc1ce5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "creditNotesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 252
  }, {
    "id" : "50886e35-25c5-3e2b-b274-b67979831484",
    "name" : "Get Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/041h",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "50886e35-25c5-3e2b-b274-b67979831484",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "creditNotesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 253
  }, {
    "id" : "e11adf1c-a0fa-336c-8424-37e03f8a1066",
    "name" : "Get Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/01gq",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e11adf1c-a0fa-336c-8424-37e03f8a1066",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "creditNotesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 254
  }, {
    "id" : "4017b8d4-a6e1-30ed-b249-b85627b95bba",
    "name" : "Get Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/06p2",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4017b8d4-a6e1-30ed-b249-b85627b95bba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "creditNotesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 255
  }, {
    "id" : "d058c639-dc9c-3822-9e16-90f00902abf3",
    "name" : "Get Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/zd6j",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d058c639-dc9c-3822-9e16-90f00902abf3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "creditNotesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 256
  }, {
    "id" : "841342b5-0ee7-376c-aece-c045e3632ae2",
    "name" : "Get Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/2nem",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"note\" : \"Some notes about this credit note\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"type\" : \"accounts_receivable_credit\",\n    \"reference\" : \"123456\",\n    \"number\" : \"OIT00546\",\n    \"currency_rate\" : 0.69,\n    \"remaining_credit\" : 27500,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"pre_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"over_payment\"\n    } ],\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"date_paid\" : \"2021-05-01T12:00:00.000Z\",\n    \"currency\" : \"USD\",\n    \"id\" : \"123456\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"total_amount\" : 49.99,\n    \"date_issued\" : \"2021-05-01T12:00:00.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  },\n  \"resource\" : \"credit-notes\",\n  \"service\" : \"xero\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "841342b5-0ee7-376c-aece-c045e3632ae2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "creditNotesOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/CreditNote"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "credit-notes",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetCreditNoteResponse"
          }
        }
      }
    },
    "insertionIndex" : 257
  }, {
    "id" : "f791e642-3b7c-35ec-bc46-d0c138e50d86",
    "name" : "Delete Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/070a",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f791e642-3b7c-35ec-bc46-d0c138e50d86",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "creditNotesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 258
  }, {
    "id" : "229fd33c-7903-38ae-8eb1-cba25c07787b",
    "name" : "Delete Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/hhm4",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "229fd33c-7903-38ae-8eb1-cba25c07787b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "creditNotesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 259
  }, {
    "id" : "adce2f9d-93a2-32d8-9189-9ac3d32af42f",
    "name" : "Delete Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/t21g",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "adce2f9d-93a2-32d8-9189-9ac3d32af42f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "creditNotesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 260
  }, {
    "id" : "cc1493f9-2231-34ee-8ed8-7536f70228f2",
    "name" : "Delete Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/pw95",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cc1493f9-2231-34ee-8ed8-7536f70228f2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "creditNotesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 261
  }, {
    "id" : "b21cae8d-e057-3148-a6ea-34409db1a4fe",
    "name" : "Delete Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/0squ",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b21cae8d-e057-3148-a6ea-34409db1a4fe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "creditNotesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 262
  }, {
    "id" : "3ed47446-38fc-3320-a20c-d7b9e336951b",
    "name" : "Delete Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/7dn0",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"credit-notes\",\n  \"service\" : \"xero\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3ed47446-38fc-3320-a20c-d7b9e336951b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "creditNotesDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "credit-notes",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "DeleteCreditNoteResponse"
          }
        }
      }
    },
    "insertionIndex" : 263
  }, {
    "id" : "ce10133e-4eca-3e6e-a75c-157656b6e965",
    "name" : "Create Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ce10133e-4eca-3e6e-a75c-157656b6e965",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "creditNotesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 264
  }, {
    "id" : "9e69f4a6-57bd-3097-bb7b-ef1727d04b8f",
    "name" : "Create Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9e69f4a6-57bd-3097-bb7b-ef1727d04b8f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "creditNotesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 265
  }, {
    "id" : "d6459293-2f49-3a75-b734-c655c42a4b1f",
    "name" : "Create Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d6459293-2f49-3a75-b734-c655c42a4b1f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "creditNotesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 266
  }, {
    "id" : "0ffccee9-d889-306c-aa27-a261e83a137e",
    "name" : "Create Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0ffccee9-d889-306c-aa27-a261e83a137e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "creditNotesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 267
  }, {
    "id" : "252ce7d0-3547-3df9-9159-08e39b8c9e3a",
    "name" : "Create Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "252ce7d0-3547-3df9-9159-08e39b8c9e3a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "creditNotesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 268
  }, {
    "id" : "6e177572-c397-38cc-b3ce-cbc2dde6276a",
    "name" : "Create Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"credit-notes\",\n  \"service\" : \"xero\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6e177572-c397-38cc-b3ce-cbc2dde6276a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "creditNotesAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "credit-notes",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateCreditNoteResponse"
          }
        }
      }
    },
    "insertionIndex" : 269
  }, {
    "id" : "949828d5-df71-350e-b090-84f16c80af7c",
    "name" : "List Credit Notes",
    "request" : {
      "urlPath" : "/accounting/credit-notes",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "949828d5-df71-350e-b090-84f16c80af7c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "creditNotesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 270
  }, {
    "id" : "d91466dc-9b57-3034-8994-c0442cafb45c",
    "name" : "List Credit Notes",
    "request" : {
      "urlPath" : "/accounting/credit-notes",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d91466dc-9b57-3034-8994-c0442cafb45c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "creditNotesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 271
  }, {
    "id" : "0b3e299c-5d1e-373e-8add-23d03083c887",
    "name" : "List Credit Notes",
    "request" : {
      "urlPath" : "/accounting/credit-notes",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0b3e299c-5d1e-373e-8add-23d03083c887",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "creditNotesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 272
  }, {
    "id" : "0b14716b-f343-3042-91fe-789654c30340",
    "name" : "List Credit Notes",
    "request" : {
      "urlPath" : "/accounting/credit-notes",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0b14716b-f343-3042-91fe-789654c30340",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "creditNotesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 273
  }, {
    "id" : "662357c5-0b35-3b45-a791-d119cb189914",
    "name" : "List Credit Notes",
    "request" : {
      "urlPath" : "/accounting/credit-notes",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "662357c5-0b35-3b45-a791-d119cb189914",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "creditNotesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 274
  }, {
    "id" : "37c6df43-e76e-36b9-a5a9-d834a2a085e8",
    "name" : "List Credit Notes",
    "request" : {
      "urlPath" : "/accounting/credit-notes",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"note\" : \"Some notes about this credit note\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"type\" : \"accounts_receivable_credit\",\n    \"reference\" : \"123456\",\n    \"number\" : \"OIT00546\",\n    \"currency_rate\" : 0.69,\n    \"remaining_credit\" : 27500,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"invoice\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"order\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"order\"\n    } ],\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"date_paid\" : \"2021-05-01T12:00:00.000Z\",\n    \"currency\" : \"USD\",\n    \"id\" : \"123456\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"total_amount\" : 49.99,\n    \"date_issued\" : \"2021-05-01T12:00:00.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  }, {\n    \"note\" : \"Some notes about this credit note\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"type\" : \"accounts_receivable_credit\",\n    \"reference\" : \"123456\",\n    \"number\" : \"OIT00546\",\n    \"currency_rate\" : 0.69,\n    \"remaining_credit\" : 27500,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"expense\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"over_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"over_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"pre_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"pre_payment\"\n    } ],\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"date_paid\" : \"2021-05-01T12:00:00.000Z\",\n    \"currency\" : \"USD\",\n    \"id\" : \"123456\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"total_amount\" : 49.99,\n    \"date_issued\" : \"2021-05-01T12:00:00.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  }, {\n    \"note\" : \"Some notes about this credit note\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"type\" : \"accounts_receivable_credit\",\n    \"reference\" : \"123456\",\n    \"number\" : \"OIT00546\",\n    \"currency_rate\" : 0.69,\n    \"remaining_credit\" : 27500,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"invoice\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"pre_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"over_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"over_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"invoice\"\n    } ],\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"date_paid\" : \"2021-05-01T12:00:00.000Z\",\n    \"currency\" : \"USD\",\n    \"id\" : \"123456\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"total_amount\" : 49.99,\n    \"date_issued\" : \"2021-05-01T12:00:00.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  }, {\n    \"note\" : \"Some notes about this credit note\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"type\" : \"accounts_receivable_credit\",\n    \"reference\" : \"123456\",\n    \"number\" : \"OIT00546\",\n    \"currency_rate\" : 0.69,\n    \"remaining_credit\" : 27500,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"over_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"expense\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    } ],\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"date_paid\" : \"2021-05-01T12:00:00.000Z\",\n    \"currency\" : \"USD\",\n    \"id\" : \"123456\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"total_amount\" : 49.99,\n    \"date_issued\" : \"2021-05-01T12:00:00.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  }, {\n    \"note\" : \"Some notes about this credit note\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"type\" : \"accounts_receivable_credit\",\n    \"reference\" : \"123456\",\n    \"number\" : \"OIT00546\",\n    \"currency_rate\" : 0.69,\n    \"remaining_credit\" : 27500,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"over_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"expense\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    } ],\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"date_paid\" : \"2021-05-01T12:00:00.000Z\",\n    \"currency\" : \"USD\",\n    \"id\" : \"123456\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"total_amount\" : 49.99,\n    \"date_issued\" : \"2021-05-01T12:00:00.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  }, {\n    \"note\" : \"Some notes about this credit note\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"type\" : \"accounts_receivable_credit\",\n    \"reference\" : \"123456\",\n    \"number\" : \"OIT00546\",\n    \"currency_rate\" : 0.69,\n    \"remaining_credit\" : 27500,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"invoice\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"order\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"pre_payment\"\n    } ],\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"date_paid\" : \"2021-05-01T12:00:00.000Z\",\n    \"currency\" : \"USD\",\n    \"id\" : \"123456\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"total_amount\" : 49.99,\n    \"date_issued\" : \"2021-05-01T12:00:00.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  } ],\n  \"resource\" : \"credit-notes\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"xero\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "37c6df43-e76e-36b9-a5a9-d834a2a085e8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "creditNotesAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/CreditNote"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "credit-notes",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetCreditNotesResponse"
          }
        }
      }
    },
    "insertionIndex" : 275
  }, {
    "id" : "7f47a248-1b1b-3494-9f9c-bbb363677b03",
    "name" : "Get company info",
    "request" : {
      "urlPath" : "/accounting/company-info",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7f47a248-1b1b-3494-9f9c-bbb363677b03",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "companyInfoOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 276
  }, {
    "id" : "a7b3f5f4-94db-340d-aba4-cd6d17ad0401",
    "name" : "Get company info",
    "request" : {
      "urlPath" : "/accounting/company-info",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a7b3f5f4-94db-340d-aba4-cd6d17ad0401",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "companyInfoOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 277
  }, {
    "id" : "02e9eb93-5145-3752-a5ca-440942eed992",
    "name" : "Get company info",
    "request" : {
      "urlPath" : "/accounting/company-info",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "02e9eb93-5145-3752-a5ca-440942eed992",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "companyInfoOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 278
  }, {
    "id" : "a67f1864-bdb8-3479-ba93-c1af402f9420",
    "name" : "Get company info",
    "request" : {
      "urlPath" : "/accounting/company-info",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a67f1864-bdb8-3479-ba93-c1af402f9420",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "companyInfoOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 279
  }, {
    "id" : "5a06baa7-51eb-35d2-9a05-69ea157c0b12",
    "name" : "Get company info",
    "request" : {
      "urlPath" : "/accounting/company-info",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5a06baa7-51eb-35d2-9a05-69ea157c0b12",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "companyInfoOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 280
  }, {
    "id" : "450df971-9e07-3bd5-afa3-213849a1da65",
    "name" : "Get company info",
    "request" : {
      "urlPath" : "/accounting/company-info",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"country\" : \"US\",\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"default_sales_tax\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"company_start_date\" : \"2015-06-05\",\n    \"automated_sales_tax\" : true,\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"language\" : \"EN\",\n    \"created_by\" : \"12345\",\n    \"sales_tax_enabled\" : true,\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"sales_tax_number\" : \"111.222.333\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"company_name\" : \"SpaceX\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"currency\" : \"USD\",\n    \"fiscal_year_start_month\" : \"January\",\n    \"id\" : \"12345\",\n    \"legal_name\" : \"SpaceX Inc.\",\n    \"status\" : \"active\"\n  },\n  \"resource\" : \"company-info\",\n  \"service\" : \"xero\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "450df971-9e07-3bd5-afa3-213849a1da65",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "companyInfoOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/CompanyInfo"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "company-info",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetCompanyInfoResponse",
            "x-graphql-type-name" : "CompanyInfo"
          }
        }
      }
    },
    "insertionIndex" : 281
  }, {
    "id" : "10ba50e6-948b-30d4-b665-7eac10f9510d",
    "name" : "Update Bill",
    "request" : {
      "urlPath" : "/accounting/bills/310q",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "10ba50e6-948b-30d4-b665-7eac10f9510d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "billsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 282
  }, {
    "id" : "a55bc4b1-2bc5-3fcd-9cce-07019f3556eb",
    "name" : "Update Bill",
    "request" : {
      "urlPath" : "/accounting/bills/023c",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a55bc4b1-2bc5-3fcd-9cce-07019f3556eb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "billsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 283
  }, {
    "id" : "e38bda29-897d-3393-96ea-821ab6ea11a9",
    "name" : "Update Bill",
    "request" : {
      "urlPath" : "/accounting/bills/400o",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e38bda29-897d-3393-96ea-821ab6ea11a9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "billsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 284
  }, {
    "id" : "99b2461d-50ee-37c6-a8f6-29e68eccbf65",
    "name" : "Update Bill",
    "request" : {
      "urlPath" : "/accounting/bills/h8mu",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "99b2461d-50ee-37c6-a8f6-29e68eccbf65",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "billsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 285
  }, {
    "id" : "b1265772-5bd6-3d51-8a6b-7e6ffd8f0935",
    "name" : "Update Bill",
    "request" : {
      "urlPath" : "/accounting/bills/mgk2",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b1265772-5bd6-3d51-8a6b-7e6ffd8f0935",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "billsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 286
  }, {
    "id" : "d44fafb4-2457-3227-96bd-720ef6d85720",
    "name" : "Update Bill",
    "request" : {
      "urlPath" : "/accounting/bills/5a4i",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"bills\",\n  \"service\" : \"xero\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d44fafb4-2457-3227-96bd-720ef6d85720",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "billsUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "bills",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateBillResponse"
          }
        }
      }
    },
    "insertionIndex" : 287
  }, {
    "id" : "29408e12-4bad-3ac0-b4d5-17c25f2f31a2",
    "name" : "Get Bill",
    "request" : {
      "urlPath" : "/accounting/bills/friz",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "29408e12-4bad-3ac0-b4d5-17c25f2f31a2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "billsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 288
  }, {
    "id" : "be5bdac8-c9c7-3f13-ad14-0f0dcadc871e",
    "name" : "Get Bill",
    "request" : {
      "urlPath" : "/accounting/bills/6htc",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "be5bdac8-c9c7-3f13-ad14-0f0dcadc871e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "billsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 289
  }, {
    "id" : "dd685a41-2436-309c-ab3d-fcc76853589b",
    "name" : "Get Bill",
    "request" : {
      "urlPath" : "/accounting/bills/4764",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dd685a41-2436-309c-ab3d-fcc76853589b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "billsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 290
  }, {
    "id" : "f0e0f36e-f18f-37cc-8800-784b9ed5c538",
    "name" : "Get Bill",
    "request" : {
      "urlPath" : "/accounting/bills/re4b",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f0e0f36e-f18f-37cc-8800-784b9ed5c538",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "billsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 291
  }, {
    "id" : "647ca42b-3682-3157-9db9-3acf6efe4405",
    "name" : "Get Bill",
    "request" : {
      "urlPath" : "/accounting/bills/t0e4",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "647ca42b-3682-3157-9db9-3acf6efe4405",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "billsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 292
  }, {
    "id" : "59a77950-7e78-3af1-b34d-7481cffc60f4",
    "name" : "Get Bill",
    "request" : {
      "urlPath" : "/accounting/bills/e764",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"notes\" : \"Some notes about this bill.\",\n    \"bill_date\" : \"2020-09-30\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"po_number\" : \"90000117\",\n    \"total\" : 27500,\n    \"bill_number\" : \"10001\",\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"terms\" : \"Net 30 days\",\n    \"ledger_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"due_date\" : \"2020-10-30\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"deposit\" : 0,\n    \"paid_date\" : \"2020-10-30\",\n    \"status\" : \"draft\"\n  },\n  \"resource\" : \"bills\",\n  \"service\" : \"xero\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "59a77950-7e78-3af1-b34d-7481cffc60f4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "billsOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Bill"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "bills",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetBillResponse",
            "x-graphql-type-name" : "Bill"
          }
        }
      }
    },
    "insertionIndex" : 293
  }, {
    "id" : "3a38c10b-6ccc-3714-9048-fde024e325a3",
    "name" : "Delete Bill",
    "request" : {
      "urlPath" : "/accounting/bills/22kt",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3a38c10b-6ccc-3714-9048-fde024e325a3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "billsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 294
  }, {
    "id" : "009bd782-03a6-3fe8-ad44-e55fa729ee19",
    "name" : "Delete Bill",
    "request" : {
      "urlPath" : "/accounting/bills/lcm9",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "009bd782-03a6-3fe8-ad44-e55fa729ee19",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "billsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 295
  }, {
    "id" : "8b6b3cdf-f5cc-378c-9caf-21cd1d1187ed",
    "name" : "Delete Bill",
    "request" : {
      "urlPath" : "/accounting/bills/3fpx",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8b6b3cdf-f5cc-378c-9caf-21cd1d1187ed",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "billsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 296
  }, {
    "id" : "5578dfe1-14be-3123-9bbb-1f931486e3a4",
    "name" : "Delete Bill",
    "request" : {
      "urlPath" : "/accounting/bills/47ie",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5578dfe1-14be-3123-9bbb-1f931486e3a4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "billsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 297
  }, {
    "id" : "e0dc9a48-a396-3be6-95e1-b820cfe4ceb6",
    "name" : "Delete Bill",
    "request" : {
      "urlPath" : "/accounting/bills/6ra2",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e0dc9a48-a396-3be6-95e1-b820cfe4ceb6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "billsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 298
  }, {
    "id" : "e1bf381a-d19c-3154-80ca-eefaffc0ceaa",
    "name" : "Delete Bill",
    "request" : {
      "urlPath" : "/accounting/bills/81s2",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"bills\",\n  \"service\" : \"xero\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e1bf381a-d19c-3154-80ca-eefaffc0ceaa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "billsDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "bills",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "DeleteBillResponse"
          }
        }
      }
    },
    "insertionIndex" : 299
  }, {
    "id" : "b33467df-8e39-3cf5-ba40-9a40bed10dea",
    "name" : "Create Bill",
    "request" : {
      "urlPath" : "/accounting/bills",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b33467df-8e39-3cf5-ba40-9a40bed10dea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "billsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 300
  }, {
    "id" : "e915454d-6f83-3be0-a628-d220a9822ee0",
    "name" : "Create Bill",
    "request" : {
      "urlPath" : "/accounting/bills",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e915454d-6f83-3be0-a628-d220a9822ee0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "billsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 301
  }, {
    "id" : "4b026eff-ca77-3783-bcc9-1be1aecd8312",
    "name" : "Create Bill",
    "request" : {
      "urlPath" : "/accounting/bills",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4b026eff-ca77-3783-bcc9-1be1aecd8312",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "billsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 302
  }, {
    "id" : "38175011-ca41-3c0a-b3fa-ab3f4e792d32",
    "name" : "Create Bill",
    "request" : {
      "urlPath" : "/accounting/bills",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "38175011-ca41-3c0a-b3fa-ab3f4e792d32",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "billsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 303
  }, {
    "id" : "62db8539-e1eb-38f9-961d-e131945d744e",
    "name" : "Create Bill",
    "request" : {
      "urlPath" : "/accounting/bills",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "62db8539-e1eb-38f9-961d-e131945d744e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "billsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 304
  }, {
    "id" : "6262d90d-ad65-306c-beab-aa09a0ac1a8c",
    "name" : "Create Bill",
    "request" : {
      "urlPath" : "/accounting/bills",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"bills\",\n  \"service\" : \"xero\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6262d90d-ad65-306c-beab-aa09a0ac1a8c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "billsAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "bills",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateBillResponse"
          }
        }
      }
    },
    "insertionIndex" : 305
  }, {
    "id" : "9c77e8ea-f673-393a-ba19-142e970410c2",
    "name" : "List Bills",
    "request" : {
      "urlPath" : "/accounting/bills",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9c77e8ea-f673-393a-ba19-142e970410c2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "billsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 306
  }, {
    "id" : "26d01ef5-cb3b-3658-80a6-2c0df8ddfece",
    "name" : "List Bills",
    "request" : {
      "urlPath" : "/accounting/bills",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "26d01ef5-cb3b-3658-80a6-2c0df8ddfece",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "billsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 307
  }, {
    "id" : "e92c50f8-93e1-3072-9aa5-48d08ede2baa",
    "name" : "List Bills",
    "request" : {
      "urlPath" : "/accounting/bills",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e92c50f8-93e1-3072-9aa5-48d08ede2baa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "billsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 308
  }, {
    "id" : "12c6f59d-ec6e-3576-9ce8-4bdadceec882",
    "name" : "List Bills",
    "request" : {
      "urlPath" : "/accounting/bills",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "12c6f59d-ec6e-3576-9ce8-4bdadceec882",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "billsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 309
  }, {
    "id" : "852eaf85-d64b-36a2-81cb-7c05dc6781c8",
    "name" : "List Bills",
    "request" : {
      "urlPath" : "/accounting/bills",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "852eaf85-d64b-36a2-81cb-7c05dc6781c8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "billsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 310
  }, {
    "id" : "2d360bed-88c3-376d-b66b-c27c4afa6bde",
    "name" : "List Bills",
    "request" : {
      "urlPath" : "/accounting/bills",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"notes\" : \"Some notes about this bill.\",\n    \"bill_date\" : \"2020-09-30\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"po_number\" : \"90000117\",\n    \"total\" : 27500,\n    \"bill_number\" : \"10001\",\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"terms\" : \"Net 30 days\",\n    \"ledger_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"due_date\" : \"2020-10-30\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"deposit\" : 0,\n    \"paid_date\" : \"2020-10-30\",\n    \"status\" : \"draft\"\n  }, {\n    \"notes\" : \"Some notes about this bill.\",\n    \"bill_date\" : \"2020-09-30\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"po_number\" : \"90000117\",\n    \"total\" : 27500,\n    \"bill_number\" : \"10001\",\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"terms\" : \"Net 30 days\",\n    \"ledger_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"due_date\" : \"2020-10-30\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"deposit\" : 0,\n    \"paid_date\" : \"2020-10-30\",\n    \"status\" : \"draft\"\n  }, {\n    \"notes\" : \"Some notes about this bill.\",\n    \"bill_date\" : \"2020-09-30\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"po_number\" : \"90000117\",\n    \"total\" : 27500,\n    \"bill_number\" : \"10001\",\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"terms\" : \"Net 30 days\",\n    \"ledger_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"due_date\" : \"2020-10-30\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"deposit\" : 0,\n    \"paid_date\" : \"2020-10-30\",\n    \"status\" : \"draft\"\n  }, {\n    \"notes\" : \"Some notes about this bill.\",\n    \"bill_date\" : \"2020-09-30\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"po_number\" : \"90000117\",\n    \"total\" : 27500,\n    \"bill_number\" : \"10001\",\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"terms\" : \"Net 30 days\",\n    \"ledger_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"due_date\" : \"2020-10-30\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"deposit\" : 0,\n    \"paid_date\" : \"2020-10-30\",\n    \"status\" : \"draft\"\n  }, {\n    \"notes\" : \"Some notes about this bill.\",\n    \"bill_date\" : \"2020-09-30\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"po_number\" : \"90000117\",\n    \"total\" : 27500,\n    \"bill_number\" : \"10001\",\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"terms\" : \"Net 30 days\",\n    \"ledger_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"due_date\" : \"2020-10-30\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"deposit\" : 0,\n    \"paid_date\" : \"2020-10-30\",\n    \"status\" : \"draft\"\n  }, {\n    \"notes\" : \"Some notes about this bill.\",\n    \"bill_date\" : \"2020-09-30\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"po_number\" : \"90000117\",\n    \"total\" : 27500,\n    \"bill_number\" : \"10001\",\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"terms\" : \"Net 30 days\",\n    \"ledger_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"due_date\" : \"2020-10-30\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"deposit\" : 0,\n    \"paid_date\" : \"2020-10-30\",\n    \"status\" : \"draft\"\n  }, {\n    \"notes\" : \"Some notes about this bill.\",\n    \"bill_date\" : \"2020-09-30\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"po_number\" : \"90000117\",\n    \"total\" : 27500,\n    \"bill_number\" : \"10001\",\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"terms\" : \"Net 30 days\",\n    \"ledger_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"due_date\" : \"2020-10-30\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"deposit\" : 0,\n    \"paid_date\" : \"2020-10-30\",\n    \"status\" : \"draft\"\n  } ],\n  \"resource\" : \"bills\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"xero\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2d360bed-88c3-376d-b66b-c27c4afa6bde",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "billsAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/Bill"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "bills",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetBillsResponse",
            "x-graphql-type-name" : "BillList"
          }
        }
      }
    },
    "insertionIndex" : 311
  }, {
    "id" : "57dcf1f9-8d20-3a95-9016-686cb90444aa",
    "name" : "Get BalanceSheet",
    "request" : {
      "urlPath" : "/accounting/balance-sheet",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "57dcf1f9-8d20-3a95-9016-686cb90444aa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "balanceSheetOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 312
  }, {
    "id" : "a75a3b16-930d-3e62-9e82-5be95c7e58b2",
    "name" : "Get BalanceSheet",
    "request" : {
      "urlPath" : "/accounting/balance-sheet",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a75a3b16-930d-3e62-9e82-5be95c7e58b2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "balanceSheetOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 313
  }, {
    "id" : "24dd6b45-46a4-34be-b159-8345fc0133bf",
    "name" : "Get BalanceSheet",
    "request" : {
      "urlPath" : "/accounting/balance-sheet",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "24dd6b45-46a4-34be-b159-8345fc0133bf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "balanceSheetOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 314
  }, {
    "id" : "9d2d04d8-5304-3b42-86e0-51d93b1d8c6e",
    "name" : "Get BalanceSheet",
    "request" : {
      "urlPath" : "/accounting/balance-sheet",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9d2d04d8-5304-3b42-86e0-51d93b1d8c6e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "balanceSheetOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 315
  }, {
    "id" : "cb1735f4-0a64-35b4-a096-66b70f8dfad3",
    "name" : "Get BalanceSheet",
    "request" : {
      "urlPath" : "/accounting/balance-sheet",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cb1735f4-0a64-35b4-a096-66b70f8dfad3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "balanceSheetOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 316
  }, {
    "id" : "239db14c-d5bb-303a-a49f-5aa700560745",
    "name" : "Get BalanceSheet",
    "request" : {
      "urlPath" : "/accounting/balance-sheet",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"end_date\" : \"2017-01-01\",\n    \"assets\" : {\n      \"current_assets\" : {\n        \"accounts\" : [ {\n          \"id\" : \"1\",\n          \"name\" : \"Accounts Receivable (A/R)\",\n          \"value\" : 10000\n        }, {\n          \"id\" : \"2\",\n          \"name\" : \"Accounts Payable (A/P)\",\n          \"value\" : 10000\n        } ],\n        \"total\" : 100000\n      },\n      \"fixed_assets\" : {\n        \"accounts\" : [ {\n          \"id\" : \"1\",\n          \"name\" : \"Accounts Receivable (A/R)\",\n          \"value\" : 10000\n        }, {\n          \"id\" : \"2\",\n          \"name\" : \"Accounts Payable (A/P)\",\n          \"value\" : 10000\n        } ],\n        \"total\" : 100000\n      },\n      \"total\" : 200000\n    },\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"liabilities\" : {\n      \"accounts\" : [ {\n        \"id\" : \"1\",\n        \"name\" : \"Accounts Payable (A/P)\",\n        \"value\" : 10000\n      } ],\n      \"total\" : 200000\n    },\n    \"updated_by\" : \"12345\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"id\" : \"12345\",\n    \"report_name\" : \"BalanceSheet\",\n    \"created_by\" : \"12345\",\n    \"equity\" : {\n      \"items\" : [ {\n        \"id\" : \"1\",\n        \"name\" : \"Retained Earnings\",\n        \"value\" : 10000\n      } ],\n      \"total\" : 200000\n    },\n    \"start_date\" : \"2017-01-01\"\n  },\n  \"resource\" : \"BalanceSheets\",\n  \"service\" : \"quickbooks\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "239db14c-d5bb-303a-a49f-5aa700560745",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "balanceSheetOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/BalanceSheet"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "BalanceSheets",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "quickbooks",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetBalanceSheetResponse",
            "x-graphql-type-name" : "BalanceSheet"
          }
        }
      }
    },
    "insertionIndex" : 317
  } ]
}