{
  "mappings" : [ {
    "id" : "fd0d11ef-4d65-4a22-bcba-494be173cc85",
    "name" : "Update Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/t333",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fd0d11ef-4d65-4a22-bcba-494be173cc85",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.126656Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "05a2504d-4fd0-45d2-8c64-88af7a83de3e",
    "name" : "Update Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/f39y",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "05a2504d-4fd0-45d2-8c64-88af7a83de3e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.12652Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "a232aa6b-0b74-4eaf-9601-8074fe05cf3e",
    "name" : "Update Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/5sd0",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a232aa6b-0b74-4eaf-9601-8074fe05cf3e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.126359Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "3a8cfe54-aec9-4a2c-8c33-067f9bf26908",
    "name" : "Update Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/e7pe",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3a8cfe54-aec9-4a2c-8c33-067f9bf26908",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.126227Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "d9881045-a685-4bc8-8e72-b33cf233d5f6",
    "name" : "Update Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/7b9l",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d9881045-a685-4bc8-8e72-b33cf233d5f6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.126096Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "5a85edfa-8008-47d7-bdae-7462bbab9d02",
    "name" : "Update Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/wi10",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"tax-rates\",\n  \"service\" : \"xero\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5a85edfa-8008-47d7-bdae-7462bbab9d02",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.125942Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "tax-rates",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateTaxRateResponse"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "3e99a009-2576-411f-ae79-de8c4dcb4e34",
    "name" : "Get Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/y8s8",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3e99a009-2576-411f-ae79-de8c4dcb4e34",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.125774Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "8807fc27-7d87-44b8-978c-46dc6fc44f0a",
    "name" : "Get Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/8ds2",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8807fc27-7d87-44b8-978c-46dc6fc44f0a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.12564Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "539db9ef-b2d3-4f5e-a217-4498b36a993a",
    "name" : "Get Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/5g4w",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "539db9ef-b2d3-4f5e-a217-4498b36a993a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.125483Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "73c36f48-2a71-477c-8fbe-2e7fb6b289a2",
    "name" : "Get Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/asg8",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "73c36f48-2a71-477c-8fbe-2e7fb6b289a2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.125344Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "1cc1eb82-ced2-4fec-98eb-db7686e16012",
    "name" : "Get Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/ji75",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1cc1eb82-ced2-4fec-98eb-db7686e16012",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.125205Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "d16072f9-fbf6-45ff-8854-39b46dd92b52",
    "name" : "Get Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/4hsk",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"components\" : [ {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    } ],\n    \"code\" : \"ABN\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Reduced rate GST Purchases\",\n    \"type\" : \"NONE\",\n    \"created_by\" : \"12345\",\n    \"original_tax_rate_id\" : \"12345\",\n    \"tax_remitted_account_id\" : \"123456\",\n    \"tax_payable_account_id\" : \"123456\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"report_tax_type\" : \"NONE\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"GST on Purchases\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"1234\",\n    \"effective_tax_rate\" : 10,\n    \"total_tax_rate\" : 10,\n    \"status\" : \"active\"\n  },\n  \"resource\" : \"tax-rates\",\n  \"service\" : \"xero\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d16072f9-fbf6-45ff-8854-39b46dd92b52",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.125033Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/TaxRate"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "tax-rates",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetTaxRateResponse",
            "x-graphql-type-name" : "TaxRateOne"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "fc0181bd-45ca-4620-a32b-6ab2bcd43a7c",
    "name" : "Delete Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/88px",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fc0181bd-45ca-4620-a32b-6ab2bcd43a7c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.124745Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "3a909c97-cc4a-4ab5-a297-406f0acddfd6",
    "name" : "Delete Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/n9g3",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3a909c97-cc4a-4ab5-a297-406f0acddfd6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.1246Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "932427b9-331a-4ab0-afd3-64d173c157d3",
    "name" : "Delete Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/a8ba",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "932427b9-331a-4ab0-afd3-64d173c157d3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.124439Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "e3c97f25-a511-4c1b-826c-d0f5f2207c0c",
    "name" : "Delete Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/n67o",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e3c97f25-a511-4c1b-826c-d0f5f2207c0c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.124304Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "fa44a2db-1cff-44ca-954b-2650e0df4d23",
    "name" : "Delete Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/8ytn",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fa44a2db-1cff-44ca-954b-2650e0df4d23",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.12416Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "097d578a-0435-4472-8d65-76d7c8bcf822",
    "name" : "Delete Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/f83r",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"tax-rates\",\n  \"service\" : \"xero\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "097d578a-0435-4472-8d65-76d7c8bcf822",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.123983Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "tax-rates",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "DeleteTaxRateResponse"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "eda01030-6f5b-4d76-9cbb-2a5ae23cdc5d",
    "name" : "Create Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eda01030-6f5b-4d76-9cbb-2a5ae23cdc5d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.123786Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "32b3011a-7c9b-4a25-93f8-0667d7449cc1",
    "name" : "Create Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "32b3011a-7c9b-4a25-93f8-0667d7449cc1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.123712Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "a5922aa1-8766-4008-ae5e-d4e6c486e3bd",
    "name" : "Create Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a5922aa1-8766-4008-ae5e-d4e6c486e3bd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.123613Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "11b544e3-831b-46ba-a04c-c4f47282dc8f",
    "name" : "Create Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "11b544e3-831b-46ba-a04c-c4f47282dc8f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.12354Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "7e364833-1b9b-454c-9a03-113f1fab9124",
    "name" : "Create Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7e364833-1b9b-454c-9a03-113f1fab9124",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.123463Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "5dcc8e86-a286-4e28-baf2-804286e399bb",
    "name" : "Create Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"tax-rates\",\n  \"service\" : \"xero\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5dcc8e86-a286-4e28-baf2-804286e399bb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.123354Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "tax-rates",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateTaxRateResponse"
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "f24b0cc3-3a6b-45a1-bd34-e327f7b8d40b",
    "name" : "List Tax Rates",
    "request" : {
      "urlPath" : "/accounting/tax-rates",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f24b0cc3-3a6b-45a1-bd34-e327f7b8d40b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.12322Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "85abd3cf-21eb-4a0a-b9d2-ef32f4da0e89",
    "name" : "List Tax Rates",
    "request" : {
      "urlPath" : "/accounting/tax-rates",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "85abd3cf-21eb-4a0a-b9d2-ef32f4da0e89",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.12314Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "303a2669-3d4e-4b94-8260-3a83ea607351",
    "name" : "List Tax Rates",
    "request" : {
      "urlPath" : "/accounting/tax-rates",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "303a2669-3d4e-4b94-8260-3a83ea607351",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.123029Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "691ac456-9990-43a3-989a-2c5617c5c28c",
    "name" : "List Tax Rates",
    "request" : {
      "urlPath" : "/accounting/tax-rates",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "691ac456-9990-43a3-989a-2c5617c5c28c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.122938Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "a0d51f70-19e2-4002-bfb3-528793bedca9",
    "name" : "List Tax Rates",
    "request" : {
      "urlPath" : "/accounting/tax-rates",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a0d51f70-19e2-4002-bfb3-528793bedca9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.122807Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "8e2e4c0b-c6ac-4840-92da-b8327c8d6a54",
    "name" : "List Tax Rates",
    "request" : {
      "urlPath" : "/accounting/tax-rates",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"components\" : [ {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    } ],\n    \"code\" : \"ABN\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Reduced rate GST Purchases\",\n    \"type\" : \"NONE\",\n    \"created_by\" : \"12345\",\n    \"original_tax_rate_id\" : \"12345\",\n    \"tax_remitted_account_id\" : \"123456\",\n    \"tax_payable_account_id\" : \"123456\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"report_tax_type\" : \"NONE\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"GST on Purchases\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"1234\",\n    \"effective_tax_rate\" : 10,\n    \"total_tax_rate\" : 10,\n    \"status\" : \"active\"\n  }, {\n    \"components\" : [ {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    } ],\n    \"code\" : \"ABN\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Reduced rate GST Purchases\",\n    \"type\" : \"NONE\",\n    \"created_by\" : \"12345\",\n    \"original_tax_rate_id\" : \"12345\",\n    \"tax_remitted_account_id\" : \"123456\",\n    \"tax_payable_account_id\" : \"123456\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"report_tax_type\" : \"NONE\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"GST on Purchases\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"1234\",\n    \"effective_tax_rate\" : 10,\n    \"total_tax_rate\" : 10,\n    \"status\" : \"active\"\n  }, {\n    \"components\" : [ {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    } ],\n    \"code\" : \"ABN\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Reduced rate GST Purchases\",\n    \"type\" : \"NONE\",\n    \"created_by\" : \"12345\",\n    \"original_tax_rate_id\" : \"12345\",\n    \"tax_remitted_account_id\" : \"123456\",\n    \"tax_payable_account_id\" : \"123456\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"report_tax_type\" : \"NONE\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"GST on Purchases\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"1234\",\n    \"effective_tax_rate\" : 10,\n    \"total_tax_rate\" : 10,\n    \"status\" : \"active\"\n  } ],\n  \"resource\" : \"tax-rates\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"xero\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8e2e4c0b-c6ac-4840-92da-b8327c8d6a54",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.122699Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/TaxRate"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "tax-rates",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetTaxRatesResponse",
            "x-graphql-type-name" : "TaxRateList"
          }
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "25faeaa9-d24a-4a5e-9f26-eb2b2e212231",
    "name" : "Update Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/rwlj",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "25faeaa9-d24a-4a5e-9f26-eb2b2e212231",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.122245Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "e1c364b3-9dfd-4743-a933-6cba4117db22",
    "name" : "Update Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/a32u",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e1c364b3-9dfd-4743-a933-6cba4117db22",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.122098Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "64747ca7-9598-4bdf-a228-8cfed0bef126",
    "name" : "Update Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/w0as",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "64747ca7-9598-4bdf-a228-8cfed0bef126",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.121934Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "11779b31-82d0-43b1-9089-58d142e304e5",
    "name" : "Update Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/377y",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "11779b31-82d0-43b1-9089-58d142e304e5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.121796Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "cfb1b0ee-2ade-44bb-9713-08877036361f",
    "name" : "Update Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/3q15",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cfb1b0ee-2ade-44bb-9713-08877036361f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.121653Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "5070fd5a-4896-4437-bfa2-df48df027822",
    "name" : "Update Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/4cm4",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"suppliers\",\n  \"service\" : \"xero\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5070fd5a-4896-4437-bfa2-df48df027822",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.121487Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "suppliers",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateSupplierResponse"
          }
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "0a8616d0-efd8-4985-a1a3-beb993859105",
    "name" : "Get Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/g5k1",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0a8616d0-efd8-4985-a1a3-beb993859105",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.121314Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "f995946b-85de-457e-b527-2c22842f40a9",
    "name" : "Get Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/2848",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f995946b-85de-457e-b527-2c22842f40a9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.121167Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "c5580972-daf9-4646-95db-047dcaaf53da",
    "name" : "Get Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/1x9u",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c5580972-daf9-4646-95db-047dcaaf53da",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.120993Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "2f8a28a3-2e4a-45f5-8f55-d84d151475c0",
    "name" : "Get Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/lu10",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2f8a28a3-2e4a-45f5-8f55-d84d151475c0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.120846Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "41dc3c32-8e59-4ca0-b180-8e89b8f678db",
    "name" : "Get Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/72xg",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "41dc3c32-8e59-4ca0-b180-8e89b8f678db",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.120694Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "d9eb9350-a406-42aa-b3de-fe5fc9b5f3bb",
    "name" : "Get Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/x62b",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"notes\" : \"Some notes about this supplier\",\n    \"display_id\" : \"EMP00101\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"suffix\" : \"Jr.\",\n    \"title\" : \"CEO\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"tax_number\" : \"US123945459\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"first_name\" : \"Elon\",\n    \"individual\" : true,\n    \"last_name\" : \"Musk\",\n    \"display_name\" : \"Windsurf Shop\",\n    \"middle_name\" : \"D.\",\n    \"created_by\" : \"12345\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_name\" : \"SpaceX\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"bank_accounts\" : [ {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    } ],\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"status\" : \"active\"\n  },\n  \"resource\" : \"suppliers\",\n  \"service\" : \"xero\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d9eb9350-a406-42aa-b3de-fe5fc9b5f3bb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.120499Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Supplier"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "suppliers",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetSupplierResponse",
            "x-graphql-type-name" : "Supplier"
          }
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "0c261e0e-f820-4aa1-8980-98650937a0d5",
    "name" : "Delete Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/om91",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0c261e0e-f820-4aa1-8980-98650937a0d5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.119764Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 42
  }, {
    "id" : "5c91fb19-ccf0-4517-beea-3ba08e6e595e",
    "name" : "Delete Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/a0bn",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5c91fb19-ccf0-4517-beea-3ba08e6e595e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.1196Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 43
  }, {
    "id" : "9d876e66-3e37-47c5-9306-b24d7ef24f1e",
    "name" : "Delete Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/c54a",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9d876e66-3e37-47c5-9306-b24d7ef24f1e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.119404Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 44
  }, {
    "id" : "fe41aea2-373e-4493-97a0-e291f503f7fd",
    "name" : "Delete Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/rbx0",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fe41aea2-373e-4493-97a0-e291f503f7fd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.119243Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 45
  }, {
    "id" : "69017730-0806-4a91-99a5-153a1016daca",
    "name" : "Delete Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/lob1",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "69017730-0806-4a91-99a5-153a1016daca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.119039Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 46
  }, {
    "id" : "879d457d-289c-4d32-b774-704f2c30af90",
    "name" : "Delete Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/e36p",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"suppliers\",\n  \"service\" : \"xero\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "879d457d-289c-4d32-b774-704f2c30af90",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.118835Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "suppliers",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "DeleteSupplierResponse"
          }
        }
      }
    },
    "insertionIndex" : 47
  }, {
    "id" : "4671d0f7-456a-4ab0-846d-ab277a236e5a",
    "name" : "Create Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4671d0f7-456a-4ab0-846d-ab277a236e5a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.118618Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 48
  }, {
    "id" : "15f88ff7-b4b8-43d8-8cd3-02bad7bf75de",
    "name" : "Create Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "15f88ff7-b4b8-43d8-8cd3-02bad7bf75de",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.118549Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 49
  }, {
    "id" : "9455a1ab-bbfa-49cb-b936-75ad0acb04ee",
    "name" : "Create Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9455a1ab-bbfa-49cb-b936-75ad0acb04ee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.11846Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 50
  }, {
    "id" : "5c6004a1-e5f6-4a34-bf46-08d564fbe690",
    "name" : "Create Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5c6004a1-e5f6-4a34-bf46-08d564fbe690",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.11837Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 51
  }, {
    "id" : "7bd50783-344e-48e4-998e-45185a3bc59d",
    "name" : "Create Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7bd50783-344e-48e4-998e-45185a3bc59d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.118297Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 52
  }, {
    "id" : "607faca2-d6f9-4a11-b75d-d74197d1b7a9",
    "name" : "Create Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"payments\",\n  \"service\" : \"xero\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "607faca2-d6f9-4a11-b75d-d74197d1b7a9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.118205Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "payments",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateSupplierResponse"
          }
        }
      }
    },
    "insertionIndex" : 53
  }, {
    "id" : "451855f7-55da-4358-bd14-70f7650c1ad9",
    "name" : "List Suppliers",
    "request" : {
      "urlPath" : "/accounting/suppliers",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "451855f7-55da-4358-bd14-70f7650c1ad9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.118097Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 54
  }, {
    "id" : "4a76088a-32e1-4ef7-9540-9e559e14dd91",
    "name" : "List Suppliers",
    "request" : {
      "urlPath" : "/accounting/suppliers",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4a76088a-32e1-4ef7-9540-9e559e14dd91",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.118022Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 55
  }, {
    "id" : "e4a4b7f9-786a-4457-9433-616d5bd260d0",
    "name" : "List Suppliers",
    "request" : {
      "urlPath" : "/accounting/suppliers",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e4a4b7f9-786a-4457-9433-616d5bd260d0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.117923Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 56
  }, {
    "id" : "c67f68a4-e4e0-4435-8f28-bf1809a20167",
    "name" : "List Suppliers",
    "request" : {
      "urlPath" : "/accounting/suppliers",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c67f68a4-e4e0-4435-8f28-bf1809a20167",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.117848Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 57
  }, {
    "id" : "a7dfa1be-0913-4735-91f9-983600059bc0",
    "name" : "List Suppliers",
    "request" : {
      "urlPath" : "/accounting/suppliers",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a7dfa1be-0913-4735-91f9-983600059bc0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.117772Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 58
  }, {
    "id" : "d9670d7d-8391-4a52-ad96-3743088c474c",
    "name" : "List Suppliers",
    "request" : {
      "urlPath" : "/accounting/suppliers",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"notes\" : \"Some notes about this supplier\",\n    \"display_id\" : \"EMP00101\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"suffix\" : \"Jr.\",\n    \"title\" : \"CEO\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"tax_number\" : \"US123945459\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"first_name\" : \"Elon\",\n    \"individual\" : true,\n    \"last_name\" : \"Musk\",\n    \"display_name\" : \"Windsurf Shop\",\n    \"middle_name\" : \"D.\",\n    \"created_by\" : \"12345\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_name\" : \"SpaceX\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"bank_accounts\" : [ {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    } ],\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"status\" : \"active\"\n  }, {\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"notes\" : \"Some notes about this supplier\",\n    \"display_id\" : \"EMP00101\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"suffix\" : \"Jr.\",\n    \"title\" : \"CEO\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"tax_number\" : \"US123945459\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"first_name\" : \"Elon\",\n    \"individual\" : true,\n    \"last_name\" : \"Musk\",\n    \"display_name\" : \"Windsurf Shop\",\n    \"middle_name\" : \"D.\",\n    \"created_by\" : \"12345\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_name\" : \"SpaceX\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"bank_accounts\" : [ {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    } ],\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"status\" : \"active\"\n  } ],\n  \"resource\" : \"suppliers\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"xero\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d9670d7d-8391-4a52-ad96-3743088c474c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.117667Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/Supplier"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "suppliers",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetSuppliersResponse",
            "x-graphql-type-name" : "SupplierList"
          }
        }
      }
    },
    "insertionIndex" : 59
  }, {
    "id" : "a23b44e7-b4a7-4ade-b7e4-7c19dc9fa127",
    "name" : "Get Profit and Loss",
    "request" : {
      "urlPath" : "/accounting/profit-and-loss",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a23b44e7-b4a7-4ade-b7e4-7c19dc9fa127",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.116616Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "profitAndLossOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 60
  }, {
    "id" : "8ea0a838-ca77-41e3-988a-7ca1617e0fa5",
    "name" : "Get Profit and Loss",
    "request" : {
      "urlPath" : "/accounting/profit-and-loss",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8ea0a838-ca77-41e3-988a-7ca1617e0fa5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.11654Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "profitAndLossOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 61
  }, {
    "id" : "21c7d679-dcae-42a7-bee3-caddcfd2173b",
    "name" : "Get Profit and Loss",
    "request" : {
      "urlPath" : "/accounting/profit-and-loss",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "21c7d679-dcae-42a7-bee3-caddcfd2173b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.116421Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "profitAndLossOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 62
  }, {
    "id" : "a3ec7895-d359-4ca2-bb76-92f764e45b61",
    "name" : "Get Profit and Loss",
    "request" : {
      "urlPath" : "/accounting/profit-and-loss",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a3ec7895-d359-4ca2-bb76-92f764e45b61",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.11633Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "profitAndLossOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 63
  }, {
    "id" : "547097b1-bf04-4651-8b44-81dc323319da",
    "name" : "Get Profit and Loss",
    "request" : {
      "urlPath" : "/accounting/profit-and-loss",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "547097b1-bf04-4651-8b44-81dc323319da",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.116239Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "profitAndLossOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 64
  }, {
    "id" : "2873025b-eb89-4f1d-9c6f-486416d603e0",
    "name" : "Get Profit and Loss",
    "request" : {
      "urlPath" : "/accounting/profit-and-loss",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"end_date\" : \"2017-01-01\",\n    \"income\" : {\n      \"records\" : [ {\n        \"amount\" : 10000,\n        \"id\" : \"123\",\n        \"name\" : \"Income 1\"\n      }, {\n        \"amount\" : 20000,\n        \"id\" : \"456\",\n        \"name\" : \"Income 2\"\n      } ],\n      \"total\" : 200000\n    },\n    \"net_operating_income\" : {\n      \"total\" : 200000\n    },\n    \"gross_profit\" : {\n      \"total\" : 200000\n    },\n    \"currency\" : \"USD\",\n    \"id\" : \"12345\",\n    \"net_income\" : {\n      \"total\" : 200000\n    },\n    \"customer_id\" : \"123\",\n    \"report_name\" : \"ProfitAndLoss\",\n    \"expenses\" : {\n      \"records\" : [ {\n        \"amount\" : 10000,\n        \"id\" : \"123\",\n        \"name\" : \"Expense 1\"\n      }, {\n        \"amount\" : 20000,\n        \"id\" : \"456\",\n        \"name\" : \"Expense 2\"\n      } ],\n      \"total\" : 200000\n    },\n    \"start_date\" : \"2017-01-01\"\n  },\n  \"resource\" : \"ProfitAndLosses\",\n  \"service\" : \"quickbooks\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2873025b-eb89-4f1d-9c6f-486416d603e0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.116113Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "profitAndLossOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/ProfitAndLoss"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "ProfitAndLosses",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "quickbooks",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetProfitAndLossResponse",
            "x-graphql-type-name" : "ProfitAndLoss"
          }
        }
      }
    },
    "insertionIndex" : 65
  }, {
    "id" : "be08c80b-b599-4cd4-8e05-240f24c03b04",
    "name" : "Update Payment",
    "request" : {
      "urlPath" : "/accounting/payments/snzc",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "be08c80b-b599-4cd4-8e05-240f24c03b04",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.115895Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 66
  }, {
    "id" : "1619e5a7-1ecf-417b-b3c5-01600bc41e9e",
    "name" : "Update Payment",
    "request" : {
      "urlPath" : "/accounting/payments/1mf2",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1619e5a7-1ecf-417b-b3c5-01600bc41e9e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.115651Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 67
  }, {
    "id" : "5fdbbb2a-f6e2-40cd-90ec-d5d87c403add",
    "name" : "Update Payment",
    "request" : {
      "urlPath" : "/accounting/payments/fj9n",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5fdbbb2a-f6e2-40cd-90ec-d5d87c403add",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.115479Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 68
  }, {
    "id" : "ef64dcc7-333a-44b6-8f60-1089d522d176",
    "name" : "Update Payment",
    "request" : {
      "urlPath" : "/accounting/payments/2ccv",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ef64dcc7-333a-44b6-8f60-1089d522d176",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.115333Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 69
  }, {
    "id" : "a0ed8aec-9093-4183-aafc-4fb653ab3468",
    "name" : "Update Payment",
    "request" : {
      "urlPath" : "/accounting/payments/090o",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a0ed8aec-9093-4183-aafc-4fb653ab3468",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.115184Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 70
  }, {
    "id" : "e53e1e6a-6b28-43da-9bcb-10439e560e0c",
    "name" : "Update Payment",
    "request" : {
      "urlPath" : "/accounting/payments/rt86",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"payments\",\n  \"service\" : \"xero\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e53e1e6a-6b28-43da-9bcb-10439e560e0c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.115Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "payments",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdatePaymentResponse"
          }
        }
      }
    },
    "insertionIndex" : 71
  }, {
    "id" : "55e214fd-3eb6-4fa5-bcf6-400f0d8f91b7",
    "name" : "Get Payment",
    "request" : {
      "urlPath" : "/accounting/payments/14qp",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "55e214fd-3eb6-4fa5-bcf6-400f0d8f91b7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.114821Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 72
  }, {
    "id" : "a9f2b68b-e22d-459e-a5d5-4582826f13fd",
    "name" : "Get Payment",
    "request" : {
      "urlPath" : "/accounting/payments/g52z",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a9f2b68b-e22d-459e-a5d5-4582826f13fd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.114672Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 73
  }, {
    "id" : "ff83686f-3867-44a8-9db4-df9c7e7f1d2d",
    "name" : "Get Payment",
    "request" : {
      "urlPath" : "/accounting/payments/jj77",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ff83686f-3867-44a8-9db4-df9c7e7f1d2d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.114502Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 74
  }, {
    "id" : "550736b8-b15a-4340-8075-1130f72c67c2",
    "name" : "Get Payment",
    "request" : {
      "urlPath" : "/accounting/payments/0137",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "550736b8-b15a-4340-8075-1130f72c67c2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.114358Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 75
  }, {
    "id" : "126ed31d-c1e4-4de5-a941-0562c7ff8fa8",
    "name" : "Get Payment",
    "request" : {
      "urlPath" : "/accounting/payments/6jwp",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "126ed31d-c1e4-4de5-a941-0562c7ff8fa8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.114216Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 76
  }, {
    "id" : "878b9eeb-41d6-41ec-a50e-c6a81df65533",
    "name" : "Get Payment",
    "request" : {
      "urlPath" : "/accounting/payments/9fp0",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"note\" : \"Some notes about this payment\",\n    \"display_id\" : \"123456\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"type\" : \"accounts_receivable\",\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"pre_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"order\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"123456\",\n    \"payment_method\" : \"Credit Card\",\n    \"transaction_date\" : \"2021-05-01T12:00:00.000Z\",\n    \"accounts_receivable_account_id\" : \"123456\",\n    \"reconciled\" : true,\n    \"payment_method_reference\" : \"123456\",\n    \"created_by\" : \"12345\",\n    \"accounts_receivable_account_type\" : \"Account\",\n    \"total_amount\" : 49.99,\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  },\n  \"resource\" : \"payments\",\n  \"service\" : \"xero\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "878b9eeb-41d6-41ec-a50e-c6a81df65533",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.114051Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Payment"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "payments",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetPaymentResponse",
            "x-graphql-type-name" : "Payment"
          }
        }
      }
    },
    "insertionIndex" : 77
  }, {
    "id" : "1cd15146-7c0e-4d82-ab4f-6521bce6269d",
    "name" : "Delete Payment",
    "request" : {
      "urlPath" : "/accounting/payments/a8zz",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1cd15146-7c0e-4d82-ab4f-6521bce6269d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.113673Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 78
  }, {
    "id" : "e7ee8248-08b2-4409-bc7d-5e40eda0ca38",
    "name" : "Delete Payment",
    "request" : {
      "urlPath" : "/accounting/payments/oqb7",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e7ee8248-08b2-4409-bc7d-5e40eda0ca38",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.113537Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 79
  }, {
    "id" : "eea6be0c-203d-4600-8846-642eca3081ff",
    "name" : "Delete Payment",
    "request" : {
      "urlPath" : "/accounting/payments/a68v",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eea6be0c-203d-4600-8846-642eca3081ff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.113382Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 80
  }, {
    "id" : "198fa374-6ece-461d-97a3-0a56bfbe896f",
    "name" : "Delete Payment",
    "request" : {
      "urlPath" : "/accounting/payments/lrmu",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "198fa374-6ece-461d-97a3-0a56bfbe896f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.113251Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 81
  }, {
    "id" : "f3878dfe-470f-4ea9-ba10-bf52248e6b13",
    "name" : "Delete Payment",
    "request" : {
      "urlPath" : "/accounting/payments/f052",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f3878dfe-470f-4ea9-ba10-bf52248e6b13",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.113096Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 82
  }, {
    "id" : "132bd517-ba5e-4876-a081-7be3ef627daf",
    "name" : "Delete Payment",
    "request" : {
      "urlPath" : "/accounting/payments/pyi3",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"payments\",\n  \"service\" : \"xero\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "132bd517-ba5e-4876-a081-7be3ef627daf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.112935Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "payments",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "DeletePaymentResponse"
          }
        }
      }
    },
    "insertionIndex" : 83
  }, {
    "id" : "94b0c84f-1aa8-45ee-9e2f-07221c1b4d43",
    "name" : "Create Payment",
    "request" : {
      "urlPath" : "/accounting/payments",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "94b0c84f-1aa8-45ee-9e2f-07221c1b4d43",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.112753Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 84
  }, {
    "id" : "1a99381f-2015-4dc7-816e-ab4feeba45cb",
    "name" : "Create Payment",
    "request" : {
      "urlPath" : "/accounting/payments",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1a99381f-2015-4dc7-816e-ab4feeba45cb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.112684Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 85
  }, {
    "id" : "3627075c-8c4b-4326-80e6-95be09ce6e4f",
    "name" : "Create Payment",
    "request" : {
      "urlPath" : "/accounting/payments",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3627075c-8c4b-4326-80e6-95be09ce6e4f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.112593Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 86
  }, {
    "id" : "e5a781b7-039b-4d3e-862b-36e4e3b6e5b0",
    "name" : "Create Payment",
    "request" : {
      "urlPath" : "/accounting/payments",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e5a781b7-039b-4d3e-862b-36e4e3b6e5b0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.112524Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 87
  }, {
    "id" : "af5edf63-2b4e-4532-b869-fbe7edb156a1",
    "name" : "Create Payment",
    "request" : {
      "urlPath" : "/accounting/payments",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "af5edf63-2b4e-4532-b869-fbe7edb156a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.112454Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 88
  }, {
    "id" : "6b032249-b91c-4534-94d5-d491e5a1610d",
    "name" : "Create Payment",
    "request" : {
      "urlPath" : "/accounting/payments",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"payments\",\n  \"service\" : \"xero\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6b032249-b91c-4534-94d5-d491e5a1610d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.11236Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "payments",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreatePaymentResponse"
          }
        }
      }
    },
    "insertionIndex" : 89
  }, {
    "id" : "9d3c05bb-6e3b-4051-bbd5-782a270df091",
    "name" : "List Payments",
    "request" : {
      "urlPath" : "/accounting/payments",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9d3c05bb-6e3b-4051-bbd5-782a270df091",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.112249Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 90
  }, {
    "id" : "881e741b-682b-47c4-b4b9-9465f3eb5d5d",
    "name" : "List Payments",
    "request" : {
      "urlPath" : "/accounting/payments",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "881e741b-682b-47c4-b4b9-9465f3eb5d5d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.112164Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 91
  }, {
    "id" : "56395707-08fa-4940-8e02-9e6ae862d81e",
    "name" : "List Payments",
    "request" : {
      "urlPath" : "/accounting/payments",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "56395707-08fa-4940-8e02-9e6ae862d81e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.112049Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 92
  }, {
    "id" : "bf39fb37-7f26-4113-8174-cc1a2de6faf8",
    "name" : "List Payments",
    "request" : {
      "urlPath" : "/accounting/payments",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bf39fb37-7f26-4113-8174-cc1a2de6faf8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.11196Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 93
  }, {
    "id" : "0d655c27-0a02-4681-8459-1f78b4f9f57c",
    "name" : "List Payments",
    "request" : {
      "urlPath" : "/accounting/payments",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0d655c27-0a02-4681-8459-1f78b4f9f57c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.111866Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 94
  }, {
    "id" : "744521c8-ca07-43b9-a249-a77985230b4a",
    "name" : "List Payments",
    "request" : {
      "urlPath" : "/accounting/payments",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"note\" : \"Some notes about this payment\",\n    \"display_id\" : \"123456\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"type\" : \"accounts_receivable\",\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"over_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"over_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"expense\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"over_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"over_payment\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"123456\",\n    \"payment_method\" : \"Credit Card\",\n    \"transaction_date\" : \"2021-05-01T12:00:00.000Z\",\n    \"accounts_receivable_account_id\" : \"123456\",\n    \"reconciled\" : true,\n    \"payment_method_reference\" : \"123456\",\n    \"created_by\" : \"12345\",\n    \"accounts_receivable_account_type\" : \"Account\",\n    \"total_amount\" : 49.99,\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  }, {\n    \"note\" : \"Some notes about this payment\",\n    \"display_id\" : \"123456\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"type\" : \"accounts_receivable\",\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"order\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"invoice\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"123456\",\n    \"payment_method\" : \"Credit Card\",\n    \"transaction_date\" : \"2021-05-01T12:00:00.000Z\",\n    \"accounts_receivable_account_id\" : \"123456\",\n    \"reconciled\" : true,\n    \"payment_method_reference\" : \"123456\",\n    \"created_by\" : \"12345\",\n    \"accounts_receivable_account_type\" : \"Account\",\n    \"total_amount\" : 49.99,\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  }, {\n    \"note\" : \"Some notes about this payment\",\n    \"display_id\" : \"123456\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"type\" : \"accounts_receivable\",\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"order\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"pre_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"pre_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"pre_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"invoice\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"123456\",\n    \"payment_method\" : \"Credit Card\",\n    \"transaction_date\" : \"2021-05-01T12:00:00.000Z\",\n    \"accounts_receivable_account_id\" : \"123456\",\n    \"reconciled\" : true,\n    \"payment_method_reference\" : \"123456\",\n    \"created_by\" : \"12345\",\n    \"accounts_receivable_account_type\" : \"Account\",\n    \"total_amount\" : 49.99,\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  }, {\n    \"note\" : \"Some notes about this payment\",\n    \"display_id\" : \"123456\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"type\" : \"accounts_receivable\",\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"pre_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"pre_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"invoice\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"expense\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"expense\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"123456\",\n    \"payment_method\" : \"Credit Card\",\n    \"transaction_date\" : \"2021-05-01T12:00:00.000Z\",\n    \"accounts_receivable_account_id\" : \"123456\",\n    \"reconciled\" : true,\n    \"payment_method_reference\" : \"123456\",\n    \"created_by\" : \"12345\",\n    \"accounts_receivable_account_type\" : \"Account\",\n    \"total_amount\" : 49.99,\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  } ],\n  \"resource\" : \"payments\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"xero\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "744521c8-ca07-43b9-a249-a77985230b4a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.11173Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/Payment"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "payments",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetPaymentsResponse",
            "x-graphql-type-name" : "PaymentList"
          }
        }
      }
    },
    "insertionIndex" : 95
  }, {
    "id" : "17056e6e-d1e4-4dca-94c9-4fd5496a0791",
    "name" : "Update Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/6xx3",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "17056e6e-d1e4-4dca-94c9-4fd5496a0791",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.110522Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 96
  }, {
    "id" : "cf2baa5d-03ac-41a1-a98e-bd5affe10885",
    "name" : "Update Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/hfob",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cf2baa5d-03ac-41a1-a98e-bd5affe10885",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.110368Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 97
  }, {
    "id" : "c0cf5abf-1b8d-4a94-9cb0-ec0bf89cd18e",
    "name" : "Update Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/m54w",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c0cf5abf-1b8d-4a94-9cb0-ec0bf89cd18e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.110189Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 98
  }, {
    "id" : "6414a339-57ec-4a73-bd3a-978bc74f8c50",
    "name" : "Update Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/56i5",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6414a339-57ec-4a73-bd3a-978bc74f8c50",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.110019Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 99
  }, {
    "id" : "51df57c8-a75b-456f-87c5-ad8e7f719364",
    "name" : "Update Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/6u35",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "51df57c8-a75b-456f-87c5-ad8e7f719364",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.109856Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 100
  }, {
    "id" : "7eac6f73-c0ff-44e2-b64e-adfd5c2ba544",
    "name" : "Update Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/4v2s",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"ledger-accounts\",\n  \"service\" : \"xero\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7eac6f73-c0ff-44e2-b64e-adfd5c2ba544",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.109663Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "ledger-accounts",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateLedgerAccountResponse"
          }
        }
      }
    },
    "insertionIndex" : 101
  }, {
    "id" : "8937207f-ce22-4e63-a720-6eb96910555f",
    "name" : "Get Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/802m",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8937207f-ce22-4e63-a720-6eb96910555f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.109465Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 102
  }, {
    "id" : "1d5f1ac5-c0fe-4a17-b70d-d4e1f4ae3066",
    "name" : "Get Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/3p9d",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1d5f1ac5-c0fe-4a17-b70d-d4e1f4ae3066",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.109264Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 103
  }, {
    "id" : "d6592303-77e1-42d5-9e3f-51840433300b",
    "name" : "Get Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/s0n3",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d6592303-77e1-42d5-9e3f-51840433300b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.108945Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 104
  }, {
    "id" : "8e06c84c-7fb1-4e5c-bc3c-5718bc735060",
    "name" : "Get Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/2y37",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8e06c84c-7fb1-4e5c-bc3c-5718bc735060",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.108812Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 105
  }, {
    "id" : "741404ac-e533-4b33-aff6-6346c4a52023",
    "name" : "Get Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/7emj",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "741404ac-e533-4b33-aff6-6346c4a52023",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.108676Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 106
  }, {
    "id" : "731b6efa-8bcd-466a-93cd-cd5eb9b22cc0",
    "name" : "Get Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/4708",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"code\" : \"453\",\n    \"fully_qualified_name\" : \"Asset.Bank.Checking_Account\",\n    \"display_id\" : \"1-12345\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Main checking account\",\n    \"sub_account\" : false,\n    \"type\" : \"bank\",\n    \"last_reconciliation_date\" : \"2020-09-30\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"sub_type\" : \"CHECKING_ACCOUNT\",\n    \"current_balance\" : 20000,\n    \"currency\" : \"USD\",\n    \"categories\" : [ {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    } ],\n    \"id\" : \"12345\",\n    \"opening_balance\" : 75000,\n    \"bank_account\" : {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    },\n    \"level\" : 1,\n    \"active\" : true,\n    \"classification\" : \"asset\",\n    \"created_by\" : \"12345\",\n    \"parent_account\" : {\n      \"display_id\" : \"1-1100\",\n      \"name\" : \"Bank Accounts\",\n      \"id\" : \"12345\"\n    },\n    \"tax_type\" : \"NONE\",\n    \"sub_accounts\" : [ {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    } ],\n    \"nominal_code\" : \"N091\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Bank account\",\n    \"updated_by\" : \"12345\",\n    \"header\" : true,\n    \"status\" : \"active\"\n  },\n  \"resource\" : \"ledger-accounts\",\n  \"service\" : \"xero\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "731b6efa-8bcd-466a-93cd-cd5eb9b22cc0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.108523Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/LedgerAccount"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "ledger-accounts",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetLedgerAccountResponse",
            "x-graphql-type-name" : "LedgerAccount"
          }
        }
      }
    },
    "insertionIndex" : 107
  }, {
    "id" : "d949dac5-c7fc-4615-baa2-05cd1a53d614",
    "name" : "Delete Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/d6g2",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d949dac5-c7fc-4615-baa2-05cd1a53d614",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.108197Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 108
  }, {
    "id" : "c3ad9427-0fe2-48b7-8874-4c63a11129d5",
    "name" : "Delete Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/cxr4",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c3ad9427-0fe2-48b7-8874-4c63a11129d5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.108057Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 109
  }, {
    "id" : "b21187fe-8b3c-4352-a718-e0e3c836bf62",
    "name" : "Delete Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/z31b",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b21187fe-8b3c-4352-a718-e0e3c836bf62",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.107905Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 110
  }, {
    "id" : "2f43129e-d708-4971-b451-32c8a9b06078",
    "name" : "Delete Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/71a6",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2f43129e-d708-4971-b451-32c8a9b06078",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.10777Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 111
  }, {
    "id" : "bdc59922-010b-4c6c-acae-0d004724ef3b",
    "name" : "Delete Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/m0x3",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bdc59922-010b-4c6c-acae-0d004724ef3b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.107631Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 112
  }, {
    "id" : "ae0da9ac-830b-41c3-baf1-ee761cc05e3e",
    "name" : "Delete Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/97fq",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"ledger-accounts\",\n  \"service\" : \"xero\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ae0da9ac-830b-41c3-baf1-ee761cc05e3e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.107454Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "ledger-accounts",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "DeleteLedgerAccountResponse"
          }
        }
      }
    },
    "insertionIndex" : 113
  }, {
    "id" : "d14b27db-7658-4d16-9e8c-228a3acd6c3a",
    "name" : "Create Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d14b27db-7658-4d16-9e8c-228a3acd6c3a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.10727Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 114
  }, {
    "id" : "5ad24a26-d9b1-4e3e-b1ed-f60e1ab5cbb2",
    "name" : "Create Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5ad24a26-d9b1-4e3e-b1ed-f60e1ab5cbb2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.107201Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 115
  }, {
    "id" : "dc11f1cf-185b-4dc6-9f80-7a993994bd0c",
    "name" : "Create Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dc11f1cf-185b-4dc6-9f80-7a993994bd0c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.107111Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 116
  }, {
    "id" : "40b70c26-3213-47a3-bed9-882b1890d061",
    "name" : "Create Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "40b70c26-3213-47a3-bed9-882b1890d061",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.107044Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 117
  }, {
    "id" : "f4b0de81-3446-42c3-85f3-089afdef0feb",
    "name" : "Create Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f4b0de81-3446-42c3-85f3-089afdef0feb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.106975Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 118
  }, {
    "id" : "b33f7fc3-5f72-490c-9254-22703e5fd340",
    "name" : "Create Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"ledger-accounts\",\n  \"service\" : \"xero\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b33f7fc3-5f72-490c-9254-22703e5fd340",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.106885Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "ledger-accounts",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateLedgerAccountResponse"
          }
        }
      }
    },
    "insertionIndex" : 119
  }, {
    "id" : "6f51d1d2-10e1-4984-b366-4971ac23579d",
    "name" : "List Ledger Accounts",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6f51d1d2-10e1-4984-b366-4971ac23579d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.106782Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 120
  }, {
    "id" : "2ccb8871-15a6-4e09-a4fe-7b76dc6c9619",
    "name" : "List Ledger Accounts",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2ccb8871-15a6-4e09-a4fe-7b76dc6c9619",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.106711Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 121
  }, {
    "id" : "54fd773d-5ba3-44e0-96e5-d0d058ef9523",
    "name" : "List Ledger Accounts",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "54fd773d-5ba3-44e0-96e5-d0d058ef9523",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.106621Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 122
  }, {
    "id" : "462f4d48-51d6-486e-b82f-558878406301",
    "name" : "List Ledger Accounts",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "462f4d48-51d6-486e-b82f-558878406301",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.106552Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 123
  }, {
    "id" : "a4ef7b05-cf2a-4f32-92ec-0fa5f9a1bcca",
    "name" : "List Ledger Accounts",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a4ef7b05-cf2a-4f32-92ec-0fa5f9a1bcca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.106481Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 124
  }, {
    "id" : "6a6cc03f-e4dd-410e-a201-7470907a9eab",
    "name" : "List Ledger Accounts",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"code\" : \"453\",\n    \"fully_qualified_name\" : \"Asset.Bank.Checking_Account\",\n    \"display_id\" : \"1-12345\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Main checking account\",\n    \"sub_account\" : false,\n    \"type\" : \"bank\",\n    \"last_reconciliation_date\" : \"2020-09-30\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"sub_type\" : \"CHECKING_ACCOUNT\",\n    \"current_balance\" : 20000,\n    \"currency\" : \"USD\",\n    \"categories\" : [ {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    } ],\n    \"id\" : \"12345\",\n    \"opening_balance\" : 75000,\n    \"bank_account\" : {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    },\n    \"level\" : 1,\n    \"active\" : true,\n    \"classification\" : \"asset\",\n    \"created_by\" : \"12345\",\n    \"parent_account\" : {\n      \"display_id\" : \"1-1100\",\n      \"name\" : \"Bank Accounts\",\n      \"id\" : \"12345\"\n    },\n    \"tax_type\" : \"NONE\",\n    \"sub_accounts\" : [ {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    } ],\n    \"nominal_code\" : \"N091\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Bank account\",\n    \"updated_by\" : \"12345\",\n    \"header\" : true,\n    \"status\" : \"active\"\n  }, {\n    \"code\" : \"453\",\n    \"fully_qualified_name\" : \"Asset.Bank.Checking_Account\",\n    \"display_id\" : \"1-12345\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Main checking account\",\n    \"sub_account\" : false,\n    \"type\" : \"bank\",\n    \"last_reconciliation_date\" : \"2020-09-30\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"sub_type\" : \"CHECKING_ACCOUNT\",\n    \"current_balance\" : 20000,\n    \"currency\" : \"USD\",\n    \"categories\" : [ {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    } ],\n    \"id\" : \"12345\",\n    \"opening_balance\" : 75000,\n    \"bank_account\" : {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    },\n    \"level\" : 1,\n    \"active\" : true,\n    \"classification\" : \"asset\",\n    \"created_by\" : \"12345\",\n    \"parent_account\" : {\n      \"display_id\" : \"1-1100\",\n      \"name\" : \"Bank Accounts\",\n      \"id\" : \"12345\"\n    },\n    \"tax_type\" : \"NONE\",\n    \"sub_accounts\" : [ {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    } ],\n    \"nominal_code\" : \"N091\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Bank account\",\n    \"updated_by\" : \"12345\",\n    \"header\" : true,\n    \"status\" : \"active\"\n  } ],\n  \"resource\" : \"ledger-accounts\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"xero\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6a6cc03f-e4dd-410e-a201-7470907a9eab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.106387Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/LedgerAccount"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "ledger-accounts",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetLedgerAccountsResponse",
            "x-graphql-type-name" : "LedgerAccountList"
          }
        }
      }
    },
    "insertionIndex" : 125
  }, {
    "id" : "94b6585a-2524-4282-b01e-1bbff5998eba",
    "name" : "Update Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/91r5",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "94b6585a-2524-4282-b01e-1bbff5998eba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.105877Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 126
  }, {
    "id" : "8df1f427-4415-4408-a8d2-9fd8c30bfe58",
    "name" : "Update Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/46vf",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8df1f427-4415-4408-a8d2-9fd8c30bfe58",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.105749Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 127
  }, {
    "id" : "a5c9b9de-5a20-421b-833b-8b0005eda17f",
    "name" : "Update Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/z3gc",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a5c9b9de-5a20-421b-833b-8b0005eda17f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.105599Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 128
  }, {
    "id" : "8d2c651d-44ee-47c2-a22f-6b211a3f12fe",
    "name" : "Update Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/s912",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8d2c651d-44ee-47c2-a22f-6b211a3f12fe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.105465Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 129
  }, {
    "id" : "3d89edcb-64cf-4c96-bc5b-749f0c1b3325",
    "name" : "Update Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/6g0b",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3d89edcb-64cf-4c96-bc5b-749f0c1b3325",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.105342Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 130
  }, {
    "id" : "5bdce17d-4ab2-49eb-98d2-788f4f81d60a",
    "name" : "Update Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/w8jo",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"journal-entries\",\n  \"service\" : \"quickbooks\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5bdce17d-4ab2-49eb-98d2-788f4f81d60a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.105181Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "journal-entries",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "quickbooks",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 131
  }, {
    "id" : "9b64c002-0ea2-4070-84a4-587519c6ba4b",
    "name" : "Get Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/4h46",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9b64c002-0ea2-4070-84a4-587519c6ba4b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.105011Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 132
  }, {
    "id" : "590225e5-847c-4b61-a201-15d6fd143ce1",
    "name" : "Get Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/26jy",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "590225e5-847c-4b61-a201-15d6fd143ce1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.104879Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 133
  }, {
    "id" : "931712f2-9fb9-44da-abc3-38a90fbbf1b8",
    "name" : "Get Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/h6o5",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "931712f2-9fb9-44da-abc3-38a90fbbf1b8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.104726Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 134
  }, {
    "id" : "8edc0e41-1a8a-4b2f-be82-a9a1a70f7cfe",
    "name" : "Get Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/8g9l",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8edc0e41-1a8a-4b2f-be82-a9a1a70f7cfe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.104593Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 135
  }, {
    "id" : "93fca289-dfa6-4d89-bdd5-ee6283683ffd",
    "name" : "Get Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/58c3",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "93fca289-dfa6-4d89-bdd5-ee6283683ffd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.104456Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 136
  }, {
    "id" : "dae6a9d9-f349-469f-bed5-86921d79ce20",
    "name" : "Get Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/gp72",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"memo\" : \"Thank you for your business and have a great day!\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    } ],\n    \"title\" : \"Purchase Invoice-Inventory (USD): 2019/02/01 Batch Summary Entry\",\n    \"created_by\" : \"12345\",\n    \"currency_rate\" : 0.69,\n    \"journal_symbol\" : \"IND\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"currency\" : \"USD\",\n    \"id\" : \"12345\",\n    \"posted_at\" : \"2020-09-30T07:43:32.000Z\"\n  },\n  \"resource\" : \"journal-entries\",\n  \"service\" : \"quickbooks\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dae6a9d9-f349-469f-bed5-86921d79ce20",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.104294Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/JournalEntry"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "journal-entries",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "quickbooks",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-graphql-type-name" : "JournalEntry"
          }
        }
      }
    },
    "insertionIndex" : 137
  }, {
    "id" : "cd456b18-35e2-4c92-8038-fb1703a549b0",
    "name" : "Delete Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/8c2j",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cd456b18-35e2-4c92-8038-fb1703a549b0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.103915Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 138
  }, {
    "id" : "9ff785d0-d7e9-482b-a008-dcd767560a7c",
    "name" : "Delete Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/e5iq",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9ff785d0-d7e9-482b-a008-dcd767560a7c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.103771Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 139
  }, {
    "id" : "4a17f5b6-66c0-4660-9bd5-f89d14a447b2",
    "name" : "Delete Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/r0rd",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4a17f5b6-66c0-4660-9bd5-f89d14a447b2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.103611Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 140
  }, {
    "id" : "e11388a6-fed5-49eb-915f-e79ea447ffbe",
    "name" : "Delete Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/q0f0",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e11388a6-fed5-49eb-915f-e79ea447ffbe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.103479Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 141
  }, {
    "id" : "3a14bbde-9f86-448b-a857-a5d97610c847",
    "name" : "Delete Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/wd48",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3a14bbde-9f86-448b-a857-a5d97610c847",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.103346Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 142
  }, {
    "id" : "98feb8fa-8b35-4db3-b3ad-56e520ff0f75",
    "name" : "Delete Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/na16",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"journal-entries\",\n  \"service\" : \"quickbooks\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "98feb8fa-8b35-4db3-b3ad-56e520ff0f75",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.103191Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "journal-entries",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "quickbooks",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 143
  }, {
    "id" : "fd8117d1-c232-451f-bdd5-41a57920e11c",
    "name" : "Create Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fd8117d1-c232-451f-bdd5-41a57920e11c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.102985Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 144
  }, {
    "id" : "a2d75751-ed26-4d8c-960c-67670abedc15",
    "name" : "Create Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a2d75751-ed26-4d8c-960c-67670abedc15",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.102913Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 145
  }, {
    "id" : "f9a7ff0a-2b9d-4c90-ab87-f3683b780392",
    "name" : "Create Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f9a7ff0a-2b9d-4c90-ab87-f3683b780392",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.102819Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 146
  }, {
    "id" : "7d5b6e71-1adb-4b7b-973a-aa4398f4eeb0",
    "name" : "Create Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7d5b6e71-1adb-4b7b-973a-aa4398f4eeb0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.102747Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 147
  }, {
    "id" : "0f5cbc1e-d844-4521-bbba-34b2094e83b1",
    "name" : "Create Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0f5cbc1e-d844-4521-bbba-34b2094e83b1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.102676Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 148
  }, {
    "id" : "ebee4310-bfd6-44d1-a23c-1ddece8accf9",
    "name" : "Create Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"journal-entries\",\n  \"service\" : \"quickbooks\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ebee4310-bfd6-44d1-a23c-1ddece8accf9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.102581Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "journal-entries",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "quickbooks",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 149
  }, {
    "id" : "6353e88e-b0fb-48de-bcf9-2c06eb2866a1",
    "name" : "List Journal Entries",
    "request" : {
      "urlPath" : "/accounting/journal-entries",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6353e88e-b0fb-48de-bcf9-2c06eb2866a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.102474Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 150
  }, {
    "id" : "60a4a5c2-8344-4ccf-a37c-bf7b4b2aa0df",
    "name" : "List Journal Entries",
    "request" : {
      "urlPath" : "/accounting/journal-entries",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "60a4a5c2-8344-4ccf-a37c-bf7b4b2aa0df",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.102397Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 151
  }, {
    "id" : "0ae9213b-ed5b-49c7-ab71-31274f9293a9",
    "name" : "List Journal Entries",
    "request" : {
      "urlPath" : "/accounting/journal-entries",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0ae9213b-ed5b-49c7-ab71-31274f9293a9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.102295Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 152
  }, {
    "id" : "8910d19d-df1a-44e8-b121-49145bd02b98",
    "name" : "List Journal Entries",
    "request" : {
      "urlPath" : "/accounting/journal-entries",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8910d19d-df1a-44e8-b121-49145bd02b98",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.102219Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 153
  }, {
    "id" : "245226ba-8fd5-4a2d-b408-e355d54fdd9d",
    "name" : "List Journal Entries",
    "request" : {
      "urlPath" : "/accounting/journal-entries",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "245226ba-8fd5-4a2d-b408-e355d54fdd9d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.10214Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 154
  }, {
    "id" : "d9a3c6d1-f8d2-49e2-999a-361242806345",
    "name" : "List Journal Entries",
    "request" : {
      "urlPath" : "/accounting/journal-entries",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"memo\" : \"Thank you for your business and have a great day!\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    } ],\n    \"title\" : \"Purchase Invoice-Inventory (USD): 2019/02/01 Batch Summary Entry\",\n    \"created_by\" : \"12345\",\n    \"currency_rate\" : 0.69,\n    \"journal_symbol\" : \"IND\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"currency\" : \"USD\",\n    \"id\" : \"12345\",\n    \"posted_at\" : \"2020-09-30T07:43:32.000Z\"\n  }, {\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"memo\" : \"Thank you for your business and have a great day!\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    } ],\n    \"title\" : \"Purchase Invoice-Inventory (USD): 2019/02/01 Batch Summary Entry\",\n    \"created_by\" : \"12345\",\n    \"currency_rate\" : 0.69,\n    \"journal_symbol\" : \"IND\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"currency\" : \"USD\",\n    \"id\" : \"12345\",\n    \"posted_at\" : \"2020-09-30T07:43:32.000Z\"\n  }, {\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"memo\" : \"Thank you for your business and have a great day!\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    } ],\n    \"title\" : \"Purchase Invoice-Inventory (USD): 2019/02/01 Batch Summary Entry\",\n    \"created_by\" : \"12345\",\n    \"currency_rate\" : 0.69,\n    \"journal_symbol\" : \"IND\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"currency\" : \"USD\",\n    \"id\" : \"12345\",\n    \"posted_at\" : \"2020-09-30T07:43:32.000Z\"\n  } ],\n  \"resource\" : \"journal-entries\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"quickbooks\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d9a3c6d1-f8d2-49e2-999a-361242806345",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.102031Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/JournalEntry"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "journal-entries",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "quickbooks",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-graphql-type-name" : "JournalEntryList"
          }
        }
      }
    },
    "insertionIndex" : 155
  }, {
    "id" : "a74e267a-4745-4a77-acfd-ca42691d2010",
    "name" : "Update Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/jowv",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a74e267a-4745-4a77-acfd-ca42691d2010",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.101063Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 156
  }, {
    "id" : "cb182758-ff16-4de2-8058-14075b8a6a5f",
    "name" : "Update Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/a6n3",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cb182758-ff16-4de2-8058-14075b8a6a5f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.10093Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 157
  }, {
    "id" : "408da2de-74d4-4c4d-8bcd-f9bf39798647",
    "name" : "Update Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/erg7",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "408da2de-74d4-4c4d-8bcd-f9bf39798647",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.100766Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 158
  }, {
    "id" : "c6d45dde-492b-41d9-9030-17d21e498d48",
    "name" : "Update Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/ht5g",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c6d45dde-492b-41d9-9030-17d21e498d48",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.10063Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 159
  }, {
    "id" : "38738fc9-6a5d-4ebd-8b4d-d3e8c6e6e1d0",
    "name" : "Update Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/w7uk",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "38738fc9-6a5d-4ebd-8b4d-d3e8c6e6e1d0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.100499Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 160
  }, {
    "id" : "d71bc5fc-1df9-4cf5-b1ff-e69c28a707fa",
    "name" : "Update Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/24ej",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"invoices\",\n  \"service\" : \"xero\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d71bc5fc-1df9-4cf5-b1ff-e69c28a707fa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.100338Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/InvoiceResponse"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "invoices",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateInvoiceResponse"
          }
        }
      }
    },
    "insertionIndex" : 161
  }, {
    "id" : "2931b0ad-ac7f-4f96-8197-86b614e88809",
    "name" : "Get Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/55kw",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2931b0ad-ac7f-4f96-8197-86b614e88809",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.100158Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 162
  }, {
    "id" : "fa1609a9-fd7d-4710-bd37-ed81834cdbbf",
    "name" : "Get Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/rs69",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fa1609a9-fd7d-4710-bd37-ed81834cdbbf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.100011Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 163
  }, {
    "id" : "dc980d87-113b-4ac2-8b34-513e17640851",
    "name" : "Get Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/1i0h",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dc980d87-113b-4ac2-8b34-513e17640851",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.099848Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 164
  }, {
    "id" : "3df5fd12-feb1-46fa-b4fd-95bb7e5cb6b7",
    "name" : "Get Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/rg2w",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3df5fd12-feb1-46fa-b4fd-95bb7e5cb6b7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.099703Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 165
  }, {
    "id" : "42b51115-6b1a-4031-8cf4-105127a3c81a",
    "name" : "Get Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/4oh1",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "42b51115-6b1a-4031-8cf4-105127a3c81a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.099552Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 166
  }, {
    "id" : "a46212b0-25c9-47ae-8aed-938bba7f08dc",
    "name" : "Get Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/kwuv",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"discount_amount\" : 25,\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"billing_address\" : {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    },\n    \"discount_percentage\" : 5.5,\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"customer_memo\" : \"Thank you for your business and have a great day!\",\n    \"type\" : \"service\",\n    \"invoice_date\" : \"2020-09-30\",\n    \"reference\" : \"123456\",\n    \"number\" : \"OIT00546\",\n    \"currency_rate\" : 0.69,\n    \"po_number\" : \"90000117\",\n    \"total\" : 27500,\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"terms\" : \"Net 30 days\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"shipping_address\" : {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    },\n    \"due_date\" : \"2020-09-30\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"deposit\" : 0,\n    \"template_id\" : \"123456\",\n    \"invoice_sent\" : true,\n    \"source_document_url\" : \"https://www.invoicesolution.com/invoice/123456\",\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"draft\"\n  },\n  \"resource\" : \"invoices\",\n  \"service\" : \"xero\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a46212b0-25c9-47ae-8aed-938bba7f08dc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.099361Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Invoice"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "invoices",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetInvoiceResponse",
            "x-graphql-type-name" : "Invoice"
          }
        }
      }
    },
    "insertionIndex" : 167
  }, {
    "id" : "77ce7743-f1d6-4228-adc2-37c693baa43a",
    "name" : "Delete Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/13p6",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "77ce7743-f1d6-4228-adc2-37c693baa43a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.098637Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 168
  }, {
    "id" : "5f507d02-fecf-4f2e-ab61-a660ac0cfb6f",
    "name" : "Delete Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/7jv2",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5f507d02-fecf-4f2e-ab61-a660ac0cfb6f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.098494Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 169
  }, {
    "id" : "7895f7a8-88cf-4ee8-94c4-5366a4a0f375",
    "name" : "Delete Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/f1iy",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7895f7a8-88cf-4ee8-94c4-5366a4a0f375",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.098346Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 170
  }, {
    "id" : "3dd1f8ad-c97e-4578-b7a8-9a1dd1fc7cbc",
    "name" : "Delete Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/419s",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3dd1f8ad-c97e-4578-b7a8-9a1dd1fc7cbc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.098218Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 171
  }, {
    "id" : "6dc43ece-edac-4867-84b7-333c89b83728",
    "name" : "Delete Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/4u33",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6dc43ece-edac-4867-84b7-333c89b83728",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.098086Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 172
  }, {
    "id" : "b5cf7474-4f13-412e-a1df-361c0cd34914",
    "name" : "Delete Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/51e0",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"invoices\",\n  \"service\" : \"xero\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b5cf7474-4f13-412e-a1df-361c0cd34914",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.097931Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/InvoiceResponse"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "invoices",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "DeleteInvoiceResponse"
          }
        }
      }
    },
    "insertionIndex" : 173
  }, {
    "id" : "2e995108-5b17-40c3-b1cf-a6766814a08f",
    "name" : "Create Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2e995108-5b17-40c3-b1cf-a6766814a08f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.097728Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 174
  }, {
    "id" : "c85c30d2-82f5-49d3-8224-d656a93029df",
    "name" : "Create Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c85c30d2-82f5-49d3-8224-d656a93029df",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.09766Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 175
  }, {
    "id" : "f451d59b-7ae7-4f15-ba53-d0fcbb76d9e2",
    "name" : "Create Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f451d59b-7ae7-4f15-ba53-d0fcbb76d9e2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.097565Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 176
  }, {
    "id" : "63327932-5f91-41b9-a419-bba493bd41e0",
    "name" : "Create Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "63327932-5f91-41b9-a419-bba493bd41e0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.097498Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 177
  }, {
    "id" : "e99f614b-cbdc-438b-a7bb-5601bdf8bca0",
    "name" : "Create Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e99f614b-cbdc-438b-a7bb-5601bdf8bca0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.09743Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 178
  }, {
    "id" : "60cc9b2a-c9ee-4b66-8daf-17272989b131",
    "name" : "Create Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"invoices\",\n  \"service\" : \"xero\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "60cc9b2a-c9ee-4b66-8daf-17272989b131",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.09734Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/InvoiceResponse"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "invoices",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateInvoiceResponse"
          }
        }
      }
    },
    "insertionIndex" : 179
  }, {
    "id" : "fe0b95ee-3ab1-4c0d-9b4b-f66fc0ca47ac",
    "name" : "List Invoices",
    "request" : {
      "urlPath" : "/accounting/invoices",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fe0b95ee-3ab1-4c0d-9b4b-f66fc0ca47ac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.097233Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 180
  }, {
    "id" : "a2fb6802-e762-41cf-99fd-7eaaa2ab887b",
    "name" : "List Invoices",
    "request" : {
      "urlPath" : "/accounting/invoices",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a2fb6802-e762-41cf-99fd-7eaaa2ab887b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.097153Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 181
  }, {
    "id" : "40b89c86-30be-4f05-ac67-18da5c89bac3",
    "name" : "List Invoices",
    "request" : {
      "urlPath" : "/accounting/invoices",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "40b89c86-30be-4f05-ac67-18da5c89bac3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.09705Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 182
  }, {
    "id" : "6db071fb-4bfa-4fa9-beef-132ccad6cadb",
    "name" : "List Invoices",
    "request" : {
      "urlPath" : "/accounting/invoices",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6db071fb-4bfa-4fa9-beef-132ccad6cadb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.09697Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 183
  }, {
    "id" : "413fba38-a5af-47c6-8b4c-27fb456053d0",
    "name" : "List Invoices",
    "request" : {
      "urlPath" : "/accounting/invoices",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "413fba38-a5af-47c6-8b4c-27fb456053d0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.096887Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 184
  }, {
    "id" : "2c698621-0e2b-45df-8c95-6aad3d503d6f",
    "name" : "List Invoices",
    "request" : {
      "urlPath" : "/accounting/invoices",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"discount_amount\" : 25,\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"billing_address\" : {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    },\n    \"discount_percentage\" : 5.5,\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"customer_memo\" : \"Thank you for your business and have a great day!\",\n    \"type\" : \"service\",\n    \"invoice_date\" : \"2020-09-30\",\n    \"reference\" : \"123456\",\n    \"number\" : \"OIT00546\",\n    \"currency_rate\" : 0.69,\n    \"po_number\" : \"90000117\",\n    \"total\" : 27500,\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"terms\" : \"Net 30 days\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"shipping_address\" : {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    },\n    \"due_date\" : \"2020-09-30\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"deposit\" : 0,\n    \"template_id\" : \"123456\",\n    \"invoice_sent\" : true,\n    \"source_document_url\" : \"https://www.invoicesolution.com/invoice/123456\",\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"draft\"\n  }, {\n    \"discount_amount\" : 25,\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"billing_address\" : {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    },\n    \"discount_percentage\" : 5.5,\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"customer_memo\" : \"Thank you for your business and have a great day!\",\n    \"type\" : \"service\",\n    \"invoice_date\" : \"2020-09-30\",\n    \"reference\" : \"123456\",\n    \"number\" : \"OIT00546\",\n    \"currency_rate\" : 0.69,\n    \"po_number\" : \"90000117\",\n    \"total\" : 27500,\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"terms\" : \"Net 30 days\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"shipping_address\" : {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    },\n    \"due_date\" : \"2020-09-30\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"deposit\" : 0,\n    \"template_id\" : \"123456\",\n    \"invoice_sent\" : true,\n    \"source_document_url\" : \"https://www.invoicesolution.com/invoice/123456\",\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"draft\"\n  }, {\n    \"discount_amount\" : 25,\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"billing_address\" : {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    },\n    \"discount_percentage\" : 5.5,\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"customer_memo\" : \"Thank you for your business and have a great day!\",\n    \"type\" : \"service\",\n    \"invoice_date\" : \"2020-09-30\",\n    \"reference\" : \"123456\",\n    \"number\" : \"OIT00546\",\n    \"currency_rate\" : 0.69,\n    \"po_number\" : \"90000117\",\n    \"total\" : 27500,\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"terms\" : \"Net 30 days\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"shipping_address\" : {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    },\n    \"due_date\" : \"2020-09-30\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"deposit\" : 0,\n    \"template_id\" : \"123456\",\n    \"invoice_sent\" : true,\n    \"source_document_url\" : \"https://www.invoicesolution.com/invoice/123456\",\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"draft\"\n  }, {\n    \"discount_amount\" : 25,\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"billing_address\" : {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    },\n    \"discount_percentage\" : 5.5,\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"customer_memo\" : \"Thank you for your business and have a great day!\",\n    \"type\" : \"service\",\n    \"invoice_date\" : \"2020-09-30\",\n    \"reference\" : \"123456\",\n    \"number\" : \"OIT00546\",\n    \"currency_rate\" : 0.69,\n    \"po_number\" : \"90000117\",\n    \"total\" : 27500,\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"terms\" : \"Net 30 days\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"shipping_address\" : {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    },\n    \"due_date\" : \"2020-09-30\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"deposit\" : 0,\n    \"template_id\" : \"123456\",\n    \"invoice_sent\" : true,\n    \"source_document_url\" : \"https://www.invoicesolution.com/invoice/123456\",\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"draft\"\n  } ],\n  \"resource\" : \"invoices\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"xero\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2c698621-0e2b-45df-8c95-6aad3d503d6f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.096774Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/Invoice"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "invoices",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetInvoicesResponse",
            "x-graphql-type-name" : "InvoiceList"
          }
        }
      }
    },
    "insertionIndex" : 185
  }, {
    "id" : "241ce9f0-c6ed-4853-8e64-a12bee93eacb",
    "name" : "Update Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/0vld",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "241ce9f0-c6ed-4853-8e64-a12bee93eacb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.094649Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 186
  }, {
    "id" : "8d1dd1a8-8a28-4722-a47f-6250f1ff886e",
    "name" : "Update Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/sa76",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8d1dd1a8-8a28-4722-a47f-6250f1ff886e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.094515Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 187
  }, {
    "id" : "3fa5a890-2d13-4a2c-b94d-250cc1d0e008",
    "name" : "Update Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/uv6g",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3fa5a890-2d13-4a2c-b94d-250cc1d0e008",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.094363Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 188
  }, {
    "id" : "8173ca55-29fc-4916-b444-da3eda474bac",
    "name" : "Update Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/6izb",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8173ca55-29fc-4916-b444-da3eda474bac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.094235Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 189
  }, {
    "id" : "268e06ed-0f0b-447a-bb2b-02605fd6f8a9",
    "name" : "Update Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/6cvt",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "268e06ed-0f0b-447a-bb2b-02605fd6f8a9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.094106Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 190
  }, {
    "id" : "5ff2a7b2-9774-4c97-950e-c95c66655292",
    "name" : "Update Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/no4i",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"invoice-items\",\n  \"service\" : \"xero\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5ff2a7b2-9774-4c97-950e-c95c66655292",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.093958Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "invoice-items",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateInvoiceItemsResponse"
          }
        }
      }
    },
    "insertionIndex" : 191
  }, {
    "id" : "5e9bd4fc-65e4-4941-869c-a183fd3544f1",
    "name" : "Get Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/33tx",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5e9bd4fc-65e4-4941-869c-a183fd3544f1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.093797Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 192
  }, {
    "id" : "bdaea2d5-b04c-40bd-8393-06183a37e8ac",
    "name" : "Get Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/m9f2",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bdaea2d5-b04c-40bd-8393-06183a37e8ac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.093665Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 193
  }, {
    "id" : "cff07ccd-0fe0-48ca-a154-4af898fdefa8",
    "name" : "Get Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/si5i",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cff07ccd-0fe0-48ca-a154-4af898fdefa8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.093511Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 194
  }, {
    "id" : "46dbabd7-7e52-4b4e-813a-3eea18d888c0",
    "name" : "Get Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/ak3d",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "46dbabd7-7e52-4b4e-813a-3eea18d888c0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.093383Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 195
  }, {
    "id" : "a1671399-a58a-4683-abe2-41fc147410ee",
    "name" : "Get Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/ti6m",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a1671399-a58a-4683-abe2-41fc147410ee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.093249Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 196
  }, {
    "id" : "9161306f-13cc-4ed3-b802-abffdf6bebc7",
    "name" : "Get Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/13p4",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"sold\" : true,\n    \"code\" : \"120-C\",\n    \"quantity\" : 1,\n    \"purchase_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"sales_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"active\" : true,\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n    \"tracked\" : true,\n    \"type\" : \"inventory\",\n    \"unit_price\" : 27500.5,\n    \"created_by\" : \"12345\",\n    \"inventory_date\" : \"2020-10-30\",\n    \"asset_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"expense_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"purchased\" : true,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Model Y\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"123456\",\n    \"income_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    }\n  },\n  \"resource\" : \"invoice-items\",\n  \"service\" : \"xero\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9161306f-13cc-4ed3-b802-abffdf6bebc7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.093092Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/InvoiceItem"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "invoice-items",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetInvoiceItemResponse",
            "x-graphql-type-name" : "InvoiceItem"
          }
        }
      }
    },
    "insertionIndex" : 197
  }, {
    "id" : "706aaf9f-3792-4b93-9fa5-08ab12dc374f",
    "name" : "Delete Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/268r",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "706aaf9f-3792-4b93-9fa5-08ab12dc374f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.092795Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 198
  }, {
    "id" : "192001cd-b17f-485e-98eb-2b3f9611a963",
    "name" : "Delete Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/4w2c",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "192001cd-b17f-485e-98eb-2b3f9611a963",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.092664Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 199
  }, {
    "id" : "1ebeb718-764f-4f75-8f56-7293ddb8fa29",
    "name" : "Delete Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/hbdm",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1ebeb718-764f-4f75-8f56-7293ddb8fa29",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.092515Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 200
  }, {
    "id" : "c99bb04f-dfe8-4bc8-92c2-b3f62fa64b87",
    "name" : "Delete Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/yvxr",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c99bb04f-dfe8-4bc8-92c2-b3f62fa64b87",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.092382Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 201
  }, {
    "id" : "012e8f87-c8b4-4279-8fc7-3e25c368c615",
    "name" : "Delete Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/4pl5",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "012e8f87-c8b4-4279-8fc7-3e25c368c615",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.09225Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 202
  }, {
    "id" : "49d05a77-2b46-4c2b-aa8f-ff2cdffefc26",
    "name" : "Delete Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/y9jy",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"tax-rates\",\n  \"service\" : \"xero\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "49d05a77-2b46-4c2b-aa8f-ff2cdffefc26",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.092099Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "tax-rates",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "DeleteTaxRateResponse"
          }
        }
      }
    },
    "insertionIndex" : 203
  }, {
    "id" : "a816618f-2cf6-4ece-9db9-5547fda28ada",
    "name" : "Create Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a816618f-2cf6-4ece-9db9-5547fda28ada",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.091928Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 204
  }, {
    "id" : "5b1e1979-9f68-4d9a-a79b-0499c3fa179c",
    "name" : "Create Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5b1e1979-9f68-4d9a-a79b-0499c3fa179c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.091859Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 205
  }, {
    "id" : "0f68a42d-69dd-41f4-8589-76cecef3369a",
    "name" : "Create Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0f68a42d-69dd-41f4-8589-76cecef3369a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.09177Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 206
  }, {
    "id" : "8f19b759-c142-4224-b828-92dd261ebdf4",
    "name" : "Create Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8f19b759-c142-4224-b828-92dd261ebdf4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.091701Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 207
  }, {
    "id" : "10adf7d0-aecc-4499-8e8f-1b8142a21df2",
    "name" : "Create Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "10adf7d0-aecc-4499-8e8f-1b8142a21df2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.091631Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 208
  }, {
    "id" : "2d620288-e413-4ce5-be6d-2252bfaf3c6e",
    "name" : "Create Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"invoice-items\",\n  \"service\" : \"xero\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2d620288-e413-4ce5-be6d-2252bfaf3c6e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.091533Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "invoice-items",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateInvoiceItemResponse"
          }
        }
      }
    },
    "insertionIndex" : 209
  }, {
    "id" : "9339e34b-0517-4857-a590-a0e316a4d54b",
    "name" : "List Invoice Items",
    "request" : {
      "urlPath" : "/accounting/invoice-items",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9339e34b-0517-4857-a590-a0e316a4d54b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.09143Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 210
  }, {
    "id" : "e67e5f22-39b0-48b8-a2d1-53e6d7528e4a",
    "name" : "List Invoice Items",
    "request" : {
      "urlPath" : "/accounting/invoice-items",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e67e5f22-39b0-48b8-a2d1-53e6d7528e4a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.091356Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 211
  }, {
    "id" : "2ae9b7d2-ffe4-4359-bbef-4147a17368e4",
    "name" : "List Invoice Items",
    "request" : {
      "urlPath" : "/accounting/invoice-items",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2ae9b7d2-ffe4-4359-bbef-4147a17368e4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.09126Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 212
  }, {
    "id" : "8455b1b1-ddde-423f-8763-d3301c23488b",
    "name" : "List Invoice Items",
    "request" : {
      "urlPath" : "/accounting/invoice-items",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8455b1b1-ddde-423f-8763-d3301c23488b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.091188Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 213
  }, {
    "id" : "7eca1ba2-0c59-4121-b8fe-55298ef64e65",
    "name" : "List Invoice Items",
    "request" : {
      "urlPath" : "/accounting/invoice-items",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7eca1ba2-0c59-4121-b8fe-55298ef64e65",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.091111Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 214
  }, {
    "id" : "b655efa1-964a-4b8a-9d43-da33e7c1910a",
    "name" : "List Invoice Items",
    "request" : {
      "urlPath" : "/accounting/invoice-items",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"sold\" : true,\n    \"code\" : \"120-C\",\n    \"quantity\" : 1,\n    \"purchase_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"sales_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"active\" : true,\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n    \"tracked\" : true,\n    \"type\" : \"inventory\",\n    \"unit_price\" : 27500.5,\n    \"created_by\" : \"12345\",\n    \"inventory_date\" : \"2020-10-30\",\n    \"asset_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"expense_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"purchased\" : true,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Model Y\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"123456\",\n    \"income_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    }\n  }, {\n    \"sold\" : true,\n    \"code\" : \"120-C\",\n    \"quantity\" : 1,\n    \"purchase_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"sales_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"active\" : true,\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n    \"tracked\" : true,\n    \"type\" : \"inventory\",\n    \"unit_price\" : 27500.5,\n    \"created_by\" : \"12345\",\n    \"inventory_date\" : \"2020-10-30\",\n    \"asset_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"expense_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"purchased\" : true,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Model Y\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"123456\",\n    \"income_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    }\n  }, {\n    \"sold\" : true,\n    \"code\" : \"120-C\",\n    \"quantity\" : 1,\n    \"purchase_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"sales_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"active\" : true,\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n    \"tracked\" : true,\n    \"type\" : \"inventory\",\n    \"unit_price\" : 27500.5,\n    \"created_by\" : \"12345\",\n    \"inventory_date\" : \"2020-10-30\",\n    \"asset_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"expense_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"purchased\" : true,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Model Y\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"123456\",\n    \"income_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    }\n  }, {\n    \"sold\" : true,\n    \"code\" : \"120-C\",\n    \"quantity\" : 1,\n    \"purchase_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"sales_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"active\" : true,\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n    \"tracked\" : true,\n    \"type\" : \"inventory\",\n    \"unit_price\" : 27500.5,\n    \"created_by\" : \"12345\",\n    \"inventory_date\" : \"2020-10-30\",\n    \"asset_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"expense_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"purchased\" : true,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Model Y\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"123456\",\n    \"income_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    }\n  }, {\n    \"sold\" : true,\n    \"code\" : \"120-C\",\n    \"quantity\" : 1,\n    \"purchase_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"sales_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"active\" : true,\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n    \"tracked\" : true,\n    \"type\" : \"inventory\",\n    \"unit_price\" : 27500.5,\n    \"created_by\" : \"12345\",\n    \"inventory_date\" : \"2020-10-30\",\n    \"asset_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"expense_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"purchased\" : true,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Model Y\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"123456\",\n    \"income_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    }\n  }, {\n    \"sold\" : true,\n    \"code\" : \"120-C\",\n    \"quantity\" : 1,\n    \"purchase_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"sales_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"active\" : true,\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n    \"tracked\" : true,\n    \"type\" : \"inventory\",\n    \"unit_price\" : 27500.5,\n    \"created_by\" : \"12345\",\n    \"inventory_date\" : \"2020-10-30\",\n    \"asset_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"expense_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"purchased\" : true,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Model Y\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"123456\",\n    \"income_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    }\n  }, {\n    \"sold\" : true,\n    \"code\" : \"120-C\",\n    \"quantity\" : 1,\n    \"purchase_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"sales_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"active\" : true,\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n    \"tracked\" : true,\n    \"type\" : \"inventory\",\n    \"unit_price\" : 27500.5,\n    \"created_by\" : \"12345\",\n    \"inventory_date\" : \"2020-10-30\",\n    \"asset_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"expense_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"purchased\" : true,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Model Y\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"123456\",\n    \"income_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    }\n  } ],\n  \"resource\" : \"invoice-items\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"xero\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b655efa1-964a-4b8a-9d43-da33e7c1910a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.091006Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/InvoiceItem"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "invoice-items",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetInvoiceItemsResponse",
            "x-graphql-type-name" : "InvoiceItemList"
          }
        }
      }
    },
    "insertionIndex" : 215
  }, {
    "id" : "ac61763c-1ce1-4ba6-b60b-454a78426dad",
    "name" : "Update Customer",
    "request" : {
      "urlPath" : "/accounting/customers/0q1x",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ac61763c-1ce1-4ba6-b60b-454a78426dad",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.090177Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 216
  }, {
    "id" : "9e9742b6-0fd8-49ff-8aee-c87d8a072b0c",
    "name" : "Update Customer",
    "request" : {
      "urlPath" : "/accounting/customers/sj26",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9e9742b6-0fd8-49ff-8aee-c87d8a072b0c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.090042Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 217
  }, {
    "id" : "346a3724-b983-45f4-ae49-f2d3e11ca813",
    "name" : "Update Customer",
    "request" : {
      "urlPath" : "/accounting/customers/2ksi",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "346a3724-b983-45f4-ae49-f2d3e11ca813",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.089893Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 218
  }, {
    "id" : "f51f26ac-1d11-459a-95a7-a90024562a4d",
    "name" : "Update Customer",
    "request" : {
      "urlPath" : "/accounting/customers/e8y9",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f51f26ac-1d11-459a-95a7-a90024562a4d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.089761Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 219
  }, {
    "id" : "39fe6a25-916b-46dd-a72f-c834119ff9ff",
    "name" : "Update Customer",
    "request" : {
      "urlPath" : "/accounting/customers/6ao8",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "39fe6a25-916b-46dd-a72f-c834119ff9ff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.089612Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 220
  }, {
    "id" : "3012a241-1ecd-43c5-b003-816f4894d5f9",
    "name" : "Update Customer",
    "request" : {
      "urlPath" : "/accounting/customers/ft6j",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"customers\",\n  \"service\" : \"xero\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3012a241-1ecd-43c5-b003-816f4894d5f9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.089441Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "customers",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateCustomerResponse"
          }
        }
      }
    },
    "insertionIndex" : 221
  }, {
    "id" : "19eb714f-08ca-41e9-8b30-df87a3be5531",
    "name" : "Get Customer",
    "request" : {
      "urlPath" : "/accounting/customers/0jv1",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "19eb714f-08ca-41e9-8b30-df87a3be5531",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.089272Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 222
  }, {
    "id" : "bf5700db-356b-4447-8264-0a7f6c5746e7",
    "name" : "Get Customer",
    "request" : {
      "urlPath" : "/accounting/customers/5356",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bf5700db-356b-4447-8264-0a7f6c5746e7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.08913Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 223
  }, {
    "id" : "81eb0ee8-af4a-4747-b9a4-9fa4f005c0a1",
    "name" : "Get Customer",
    "request" : {
      "urlPath" : "/accounting/customers/f4u2",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "81eb0ee8-af4a-4747-b9a4-9fa4f005c0a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.088922Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 224
  }, {
    "id" : "504eda6b-afad-427f-898b-0e6aa2c6d196",
    "name" : "Get Customer",
    "request" : {
      "urlPath" : "/accounting/customers/9v39",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "504eda6b-afad-427f-898b-0e6aa2c6d196",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.088723Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 225
  }, {
    "id" : "1496eaf9-db94-44dc-9fc7-a46776c2b18e",
    "name" : "Get Customer",
    "request" : {
      "urlPath" : "/accounting/customers/1om2",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1496eaf9-db94-44dc-9fc7-a46776c2b18e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.088553Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 226
  }, {
    "id" : "17d5c305-fc46-40bc-9b2f-728a82f6eb4b",
    "name" : "Get Customer",
    "request" : {
      "urlPath" : "/accounting/customers/rbp1",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"parent\" : {\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\"\n    },\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"notes\" : \"Some notes about this customer\",\n    \"display_id\" : \"EMP00101\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"project\" : false,\n    \"suffix\" : \"Jr.\",\n    \"title\" : \"CEO\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"tax_number\" : \"US123945459\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"first_name\" : \"Elon\",\n    \"individual\" : true,\n    \"last_name\" : \"Musk\",\n    \"display_name\" : \"Windsurf Shop\",\n    \"middle_name\" : \"D.\",\n    \"created_by\" : \"12345\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_name\" : \"SpaceX\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"bank_accounts\" : [ {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    } ],\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"status\" : \"active\"\n  },\n  \"resource\" : \"customers\",\n  \"service\" : \"xero\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "17d5c305-fc46-40bc-9b2f-728a82f6eb4b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.088369Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/AccountingCustomer"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "customers",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetCustomerResponse"
          }
        }
      }
    },
    "insertionIndex" : 227
  }, {
    "id" : "bdbb3969-18e4-4e08-8c4a-40eb9afec48b",
    "name" : "Delete Customer",
    "request" : {
      "urlPath" : "/accounting/customers/j3uq",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bdbb3969-18e4-4e08-8c4a-40eb9afec48b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.087771Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 228
  }, {
    "id" : "6968ef1a-a5c5-4f47-ba9f-198bf55c47e4",
    "name" : "Delete Customer",
    "request" : {
      "urlPath" : "/accounting/customers/9j1f",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6968ef1a-a5c5-4f47-ba9f-198bf55c47e4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.08762Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 229
  }, {
    "id" : "9377bb4c-ab2e-4508-a3ae-f3541a813b44",
    "name" : "Delete Customer",
    "request" : {
      "urlPath" : "/accounting/customers/z8ck",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9377bb4c-ab2e-4508-a3ae-f3541a813b44",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.087452Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 230
  }, {
    "id" : "bd0a347d-9f30-488a-a80e-f0e2ead7b9bf",
    "name" : "Delete Customer",
    "request" : {
      "urlPath" : "/accounting/customers/ioai",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bd0a347d-9f30-488a-a80e-f0e2ead7b9bf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.087305Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 231
  }, {
    "id" : "19107c8b-25a4-429b-ab2e-37f4aa5b426b",
    "name" : "Delete Customer",
    "request" : {
      "urlPath" : "/accounting/customers/4byg",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "19107c8b-25a4-429b-ab2e-37f4aa5b426b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.087156Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 232
  }, {
    "id" : "632da4ab-6729-4bdc-a243-a37100f5c2da",
    "name" : "Delete Customer",
    "request" : {
      "urlPath" : "/accounting/customers/cx19",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"customers\",\n  \"service\" : \"xero\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "632da4ab-6729-4bdc-a243-a37100f5c2da",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.086978Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "customers",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "DeleteCustomerResponse"
          }
        }
      }
    },
    "insertionIndex" : 233
  }, {
    "id" : "71c6ca5f-bb22-49f0-a013-c2fd395ebd4b",
    "name" : "Create Customer",
    "request" : {
      "urlPath" : "/accounting/customers",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "71c6ca5f-bb22-49f0-a013-c2fd395ebd4b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.086729Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 234
  }, {
    "id" : "9b691d1c-2aa1-48cb-a162-3670e36092d9",
    "name" : "Create Customer",
    "request" : {
      "urlPath" : "/accounting/customers",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9b691d1c-2aa1-48cb-a162-3670e36092d9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.086651Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 235
  }, {
    "id" : "e1d2cbd8-c12a-4f33-a985-9478b935b54b",
    "name" : "Create Customer",
    "request" : {
      "urlPath" : "/accounting/customers",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e1d2cbd8-c12a-4f33-a985-9478b935b54b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.086557Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 236
  }, {
    "id" : "7df8498a-96b4-40b4-bf01-6e5a658f91ee",
    "name" : "Create Customer",
    "request" : {
      "urlPath" : "/accounting/customers",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7df8498a-96b4-40b4-bf01-6e5a658f91ee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.086483Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 237
  }, {
    "id" : "a92ebd75-5909-4c2e-a3ca-f24993672cec",
    "name" : "Create Customer",
    "request" : {
      "urlPath" : "/accounting/customers",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a92ebd75-5909-4c2e-a3ca-f24993672cec",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.086407Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 238
  }, {
    "id" : "73592747-8527-46e6-a8e0-0da7b54cea31",
    "name" : "Create Customer",
    "request" : {
      "urlPath" : "/accounting/customers",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"customers\",\n  \"service\" : \"xero\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "73592747-8527-46e6-a8e0-0da7b54cea31",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.086302Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "customers",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateCustomerResponse"
          }
        }
      }
    },
    "insertionIndex" : 239
  }, {
    "id" : "1b4eddfb-016b-462f-a273-d21341e3cd89",
    "name" : "List Customers",
    "request" : {
      "urlPath" : "/accounting/customers",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1b4eddfb-016b-462f-a273-d21341e3cd89",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.086185Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 240
  }, {
    "id" : "9c55dbff-c016-4cc0-b4ea-d508687b3104",
    "name" : "List Customers",
    "request" : {
      "urlPath" : "/accounting/customers",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9c55dbff-c016-4cc0-b4ea-d508687b3104",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.086095Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 241
  }, {
    "id" : "1559c233-f429-465c-b745-82eb4b4f2a23",
    "name" : "List Customers",
    "request" : {
      "urlPath" : "/accounting/customers",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1559c233-f429-465c-b745-82eb4b4f2a23",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.085975Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 242
  }, {
    "id" : "77e4bb75-2272-439a-a348-949ffaa6f1e2",
    "name" : "List Customers",
    "request" : {
      "urlPath" : "/accounting/customers",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "77e4bb75-2272-439a-a348-949ffaa6f1e2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.085882Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 243
  }, {
    "id" : "7b5e33e6-ef85-4ef7-898c-7578cc625764",
    "name" : "List Customers",
    "request" : {
      "urlPath" : "/accounting/customers",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7b5e33e6-ef85-4ef7-898c-7578cc625764",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.085782Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 244
  }, {
    "id" : "878d8129-ab5f-44fb-ae19-73ad0b93bbdd",
    "name" : "List Customers",
    "request" : {
      "urlPath" : "/accounting/customers",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"parent\" : {\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\"\n    },\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"notes\" : \"Some notes about this customer\",\n    \"display_id\" : \"EMP00101\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"project\" : false,\n    \"suffix\" : \"Jr.\",\n    \"title\" : \"CEO\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"tax_number\" : \"US123945459\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"first_name\" : \"Elon\",\n    \"individual\" : true,\n    \"last_name\" : \"Musk\",\n    \"display_name\" : \"Windsurf Shop\",\n    \"middle_name\" : \"D.\",\n    \"created_by\" : \"12345\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_name\" : \"SpaceX\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"bank_accounts\" : [ {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    } ],\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"status\" : \"active\"\n  }, {\n    \"parent\" : {\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\"\n    },\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"notes\" : \"Some notes about this customer\",\n    \"display_id\" : \"EMP00101\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"project\" : false,\n    \"suffix\" : \"Jr.\",\n    \"title\" : \"CEO\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"tax_number\" : \"US123945459\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"first_name\" : \"Elon\",\n    \"individual\" : true,\n    \"last_name\" : \"Musk\",\n    \"display_name\" : \"Windsurf Shop\",\n    \"middle_name\" : \"D.\",\n    \"created_by\" : \"12345\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_name\" : \"SpaceX\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"bank_accounts\" : [ {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    } ],\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"status\" : \"active\"\n  }, {\n    \"parent\" : {\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\"\n    },\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"notes\" : \"Some notes about this customer\",\n    \"display_id\" : \"EMP00101\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"project\" : false,\n    \"suffix\" : \"Jr.\",\n    \"title\" : \"CEO\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"tax_number\" : \"US123945459\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"first_name\" : \"Elon\",\n    \"individual\" : true,\n    \"last_name\" : \"Musk\",\n    \"display_name\" : \"Windsurf Shop\",\n    \"middle_name\" : \"D.\",\n    \"created_by\" : \"12345\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_name\" : \"SpaceX\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"bank_accounts\" : [ {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    } ],\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"status\" : \"active\"\n  }, {\n    \"parent\" : {\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\"\n    },\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"notes\" : \"Some notes about this customer\",\n    \"display_id\" : \"EMP00101\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"project\" : false,\n    \"suffix\" : \"Jr.\",\n    \"title\" : \"CEO\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"tax_number\" : \"US123945459\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"first_name\" : \"Elon\",\n    \"individual\" : true,\n    \"last_name\" : \"Musk\",\n    \"display_name\" : \"Windsurf Shop\",\n    \"middle_name\" : \"D.\",\n    \"created_by\" : \"12345\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_name\" : \"SpaceX\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"bank_accounts\" : [ {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    } ],\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"status\" : \"active\"\n  }, {\n    \"parent\" : {\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\"\n    },\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"notes\" : \"Some notes about this customer\",\n    \"display_id\" : \"EMP00101\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"project\" : false,\n    \"suffix\" : \"Jr.\",\n    \"title\" : \"CEO\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"tax_number\" : \"US123945459\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"first_name\" : \"Elon\",\n    \"individual\" : true,\n    \"last_name\" : \"Musk\",\n    \"display_name\" : \"Windsurf Shop\",\n    \"middle_name\" : \"D.\",\n    \"created_by\" : \"12345\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_name\" : \"SpaceX\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"bank_accounts\" : [ {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    } ],\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"status\" : \"active\"\n  } ],\n  \"resource\" : \"customers\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"xero\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "878d8129-ab5f-44fb-ae19-73ad0b93bbdd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.085632Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/AccountingCustomer"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "customers",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetCustomersResponse",
            "x-graphql-type-name" : "CustomerList"
          }
        }
      }
    },
    "insertionIndex" : 245
  }, {
    "id" : "bd87e9ec-b812-49b9-b961-57f84c36a021",
    "name" : "Update Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/x520",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bd87e9ec-b812-49b9-b961-57f84c36a021",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.0827Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 246
  }, {
    "id" : "266823b1-2f6c-4890-8910-3b24d69d548a",
    "name" : "Update Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/l69d",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "266823b1-2f6c-4890-8910-3b24d69d548a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.08257Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 247
  }, {
    "id" : "accaae4d-affe-4f4e-be4e-5fa54aaffa7f",
    "name" : "Update Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/35c7",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "accaae4d-affe-4f4e-be4e-5fa54aaffa7f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.082413Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 248
  }, {
    "id" : "712f2637-6298-4790-b7bd-5dc88cb91c6c",
    "name" : "Update Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/615s",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "712f2637-6298-4790-b7bd-5dc88cb91c6c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.08228Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 249
  }, {
    "id" : "b5b96842-1a1c-45d7-856f-fc9db5d2f177",
    "name" : "Update Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/4sfq",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b5b96842-1a1c-45d7-856f-fc9db5d2f177",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.08215Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 250
  }, {
    "id" : "6fc5792d-fa15-4ef5-ad52-2be36c903874",
    "name" : "Update Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/16u2",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"credit-notes\",\n  \"service\" : \"xero\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6fc5792d-fa15-4ef5-ad52-2be36c903874",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.081997Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "credit-notes",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateCreditNoteResponse"
          }
        }
      }
    },
    "insertionIndex" : 251
  }, {
    "id" : "4ca1f58e-a0d6-4298-ad63-a7e61f7bf807",
    "name" : "Get Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/4fg2",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4ca1f58e-a0d6-4298-ad63-a7e61f7bf807",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.081823Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 252
  }, {
    "id" : "8ddbe420-948d-4136-9941-aee97b692b7a",
    "name" : "Get Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/e1rm",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8ddbe420-948d-4136-9941-aee97b692b7a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.081682Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 253
  }, {
    "id" : "723da867-9f9e-498a-8067-0153e945f346",
    "name" : "Get Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/fubu",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "723da867-9f9e-498a-8067-0153e945f346",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.081521Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 254
  }, {
    "id" : "e9e9ff50-c701-45c1-9ccf-f18282879065",
    "name" : "Get Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/r81x",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e9e9ff50-c701-45c1-9ccf-f18282879065",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.081359Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 255
  }, {
    "id" : "7896dfca-b19d-43cb-9e14-4c150f68b532",
    "name" : "Get Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/26al",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7896dfca-b19d-43cb-9e14-4c150f68b532",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.081219Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 256
  }, {
    "id" : "cdf1999c-7349-4022-af58-b11800ff813c",
    "name" : "Get Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/7e28",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"note\" : \"Some notes about this credit note\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"type\" : \"accounts_receivable_credit\",\n    \"reference\" : \"123456\",\n    \"number\" : \"OIT00546\",\n    \"currency_rate\" : 0.69,\n    \"remaining_credit\" : 27500,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"expense\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"expense\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"pre_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"invoice\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"over_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"invoice\"\n    } ],\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"date_paid\" : \"2021-05-01T12:00:00.000Z\",\n    \"currency\" : \"USD\",\n    \"id\" : \"123456\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"total_amount\" : 49.99,\n    \"date_issued\" : \"2021-05-01T12:00:00.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  },\n  \"resource\" : \"credit-notes\",\n  \"service\" : \"xero\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cdf1999c-7349-4022-af58-b11800ff813c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.081055Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/CreditNote"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "credit-notes",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetCreditNoteResponse"
          }
        }
      }
    },
    "insertionIndex" : 257
  }, {
    "id" : "24ff91aa-5a02-4f6e-a2be-cbfbd1d71815",
    "name" : "Delete Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/3bw3",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "24ff91aa-5a02-4f6e-a2be-cbfbd1d71815",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.080153Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 258
  }, {
    "id" : "9fa0a74b-bebe-43bb-9821-7de060dbbb76",
    "name" : "Delete Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/rvdq",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9fa0a74b-bebe-43bb-9821-7de060dbbb76",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.080017Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 259
  }, {
    "id" : "b1e5c568-a42b-4700-a1b6-1b7c70f10df1",
    "name" : "Delete Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/d21f",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b1e5c568-a42b-4700-a1b6-1b7c70f10df1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.07986Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 260
  }, {
    "id" : "23dbe5eb-c9ef-456d-a895-45ca4a823828",
    "name" : "Delete Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/8r16",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "23dbe5eb-c9ef-456d-a895-45ca4a823828",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.07973Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 261
  }, {
    "id" : "9d6f6f20-eeb5-4a38-b662-9e034a9efa33",
    "name" : "Delete Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/i44d",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9d6f6f20-eeb5-4a38-b662-9e034a9efa33",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.079595Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 262
  }, {
    "id" : "a7970c65-70a7-4c0d-8028-9d340e0204cd",
    "name" : "Delete Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/s4xt",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"credit-notes\",\n  \"service\" : \"xero\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a7970c65-70a7-4c0d-8028-9d340e0204cd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.079433Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "credit-notes",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "DeleteCreditNoteResponse"
          }
        }
      }
    },
    "insertionIndex" : 263
  }, {
    "id" : "6bf71cad-5eed-4ad2-9775-7a9141183b4b",
    "name" : "Create Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6bf71cad-5eed-4ad2-9775-7a9141183b4b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.079216Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 264
  }, {
    "id" : "e2c4cbd4-9c8e-4d9e-a532-371262b86ae8",
    "name" : "Create Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e2c4cbd4-9c8e-4d9e-a532-371262b86ae8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.079147Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 265
  }, {
    "id" : "5b6499d0-1604-4fc4-b2fa-24bbe71feeab",
    "name" : "Create Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5b6499d0-1604-4fc4-b2fa-24bbe71feeab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.079058Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 266
  }, {
    "id" : "e0190085-f9f4-4558-9c25-ad6af06236bc",
    "name" : "Create Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e0190085-f9f4-4558-9c25-ad6af06236bc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.078988Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 267
  }, {
    "id" : "a0774901-0d80-45f5-b2a5-d5f07f787924",
    "name" : "Create Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a0774901-0d80-45f5-b2a5-d5f07f787924",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.078917Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 268
  }, {
    "id" : "be6f8f55-1e04-4798-835f-9b47c2f88fa4",
    "name" : "Create Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"credit-notes\",\n  \"service\" : \"xero\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "be6f8f55-1e04-4798-835f-9b47c2f88fa4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.078826Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "credit-notes",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateCreditNoteResponse"
          }
        }
      }
    },
    "insertionIndex" : 269
  }, {
    "id" : "6d90380a-e698-4020-9fb4-5116ccf6be92",
    "name" : "List Credit Notes",
    "request" : {
      "urlPath" : "/accounting/credit-notes",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6d90380a-e698-4020-9fb4-5116ccf6be92",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.078708Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 270
  }, {
    "id" : "4d4df5f4-7999-4127-89e6-6e4e98a2d1ec",
    "name" : "List Credit Notes",
    "request" : {
      "urlPath" : "/accounting/credit-notes",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4d4df5f4-7999-4127-89e6-6e4e98a2d1ec",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.078609Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 271
  }, {
    "id" : "c225b05c-3b70-4326-b3e0-458daa7f23ce",
    "name" : "List Credit Notes",
    "request" : {
      "urlPath" : "/accounting/credit-notes",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c225b05c-3b70-4326-b3e0-458daa7f23ce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.078486Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 272
  }, {
    "id" : "87c0a1d1-b7c1-4f9e-ae09-f873817b30d8",
    "name" : "List Credit Notes",
    "request" : {
      "urlPath" : "/accounting/credit-notes",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "87c0a1d1-b7c1-4f9e-ae09-f873817b30d8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.078388Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 273
  }, {
    "id" : "2c3152c1-69eb-41eb-8798-cce5ae29913b",
    "name" : "List Credit Notes",
    "request" : {
      "urlPath" : "/accounting/credit-notes",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2c3152c1-69eb-41eb-8798-cce5ae29913b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.07829Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 274
  }, {
    "id" : "8224a9fb-1707-42b3-83e8-8c0dacbde49a",
    "name" : "List Credit Notes",
    "request" : {
      "urlPath" : "/accounting/credit-notes",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"note\" : \"Some notes about this credit note\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"type\" : \"accounts_receivable_credit\",\n    \"reference\" : \"123456\",\n    \"number\" : \"OIT00546\",\n    \"currency_rate\" : 0.69,\n    \"remaining_credit\" : 27500,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"order\"\n    } ],\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"date_paid\" : \"2021-05-01T12:00:00.000Z\",\n    \"currency\" : \"USD\",\n    \"id\" : \"123456\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"total_amount\" : 49.99,\n    \"date_issued\" : \"2021-05-01T12:00:00.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  }, {\n    \"note\" : \"Some notes about this credit note\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"type\" : \"accounts_receivable_credit\",\n    \"reference\" : \"123456\",\n    \"number\" : \"OIT00546\",\n    \"currency_rate\" : 0.69,\n    \"remaining_credit\" : 27500,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"over_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"invoice\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"expense\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"pre_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"over_payment\"\n    } ],\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"date_paid\" : \"2021-05-01T12:00:00.000Z\",\n    \"currency\" : \"USD\",\n    \"id\" : \"123456\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"total_amount\" : 49.99,\n    \"date_issued\" : \"2021-05-01T12:00:00.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  }, {\n    \"note\" : \"Some notes about this credit note\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"type\" : \"accounts_receivable_credit\",\n    \"reference\" : \"123456\",\n    \"number\" : \"OIT00546\",\n    \"currency_rate\" : 0.69,\n    \"remaining_credit\" : 27500,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"expense\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"invoice\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"over_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"pre_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    } ],\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"date_paid\" : \"2021-05-01T12:00:00.000Z\",\n    \"currency\" : \"USD\",\n    \"id\" : \"123456\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"total_amount\" : 49.99,\n    \"date_issued\" : \"2021-05-01T12:00:00.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  }, {\n    \"note\" : \"Some notes about this credit note\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"type\" : \"accounts_receivable_credit\",\n    \"reference\" : \"123456\",\n    \"number\" : \"OIT00546\",\n    \"currency_rate\" : 0.69,\n    \"remaining_credit\" : 27500,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"order\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"over_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"order\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"pre_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"order\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"expense\"\n    } ],\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"date_paid\" : \"2021-05-01T12:00:00.000Z\",\n    \"currency\" : \"USD\",\n    \"id\" : \"123456\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"total_amount\" : 49.99,\n    \"date_issued\" : \"2021-05-01T12:00:00.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  }, {\n    \"note\" : \"Some notes about this credit note\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"type\" : \"accounts_receivable_credit\",\n    \"reference\" : \"123456\",\n    \"number\" : \"OIT00546\",\n    \"currency_rate\" : 0.69,\n    \"remaining_credit\" : 27500,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"order\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"invoice\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"pre_payment\"\n    } ],\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"date_paid\" : \"2021-05-01T12:00:00.000Z\",\n    \"currency\" : \"USD\",\n    \"id\" : \"123456\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"total_amount\" : 49.99,\n    \"date_issued\" : \"2021-05-01T12:00:00.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  }, {\n    \"note\" : \"Some notes about this credit note\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"type\" : \"accounts_receivable_credit\",\n    \"reference\" : \"123456\",\n    \"number\" : \"OIT00546\",\n    \"currency_rate\" : 0.69,\n    \"remaining_credit\" : 27500,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"invoice\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"pre_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"over_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"expense\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"order\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"over_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"pre_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"over_payment\"\n    } ],\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"date_paid\" : \"2021-05-01T12:00:00.000Z\",\n    \"currency\" : \"USD\",\n    \"id\" : \"123456\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"total_amount\" : 49.99,\n    \"date_issued\" : \"2021-05-01T12:00:00.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  }, {\n    \"note\" : \"Some notes about this credit note\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"type\" : \"accounts_receivable_credit\",\n    \"reference\" : \"123456\",\n    \"number\" : \"OIT00546\",\n    \"currency_rate\" : 0.69,\n    \"remaining_credit\" : 27500,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"over_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"over_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"pre_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"invoice\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"invoice\"\n    } ],\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"date_paid\" : \"2021-05-01T12:00:00.000Z\",\n    \"currency\" : \"USD\",\n    \"id\" : \"123456\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"total_amount\" : 49.99,\n    \"date_issued\" : \"2021-05-01T12:00:00.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  }, {\n    \"note\" : \"Some notes about this credit note\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"discount_amount\" : 19.99,\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"type\" : \"accounts_receivable_credit\",\n    \"reference\" : \"123456\",\n    \"number\" : \"OIT00546\",\n    \"currency_rate\" : 0.69,\n    \"remaining_credit\" : 27500,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    } ],\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"date_paid\" : \"2021-05-01T12:00:00.000Z\",\n    \"currency\" : \"USD\",\n    \"id\" : \"123456\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"total_amount\" : 49.99,\n    \"date_issued\" : \"2021-05-01T12:00:00.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  } ],\n  \"resource\" : \"credit-notes\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"xero\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8224a9fb-1707-42b3-83e8-8c0dacbde49a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.078133Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/CreditNote"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "credit-notes",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetCreditNotesResponse"
          }
        }
      }
    },
    "insertionIndex" : 275
  }, {
    "id" : "f7cd6275-2a34-41d2-8179-7c59d0c534ee",
    "name" : "Get company info",
    "request" : {
      "urlPath" : "/accounting/company-info",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f7cd6275-2a34-41d2-8179-7c59d0c534ee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.073919Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companyInfoOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 276
  }, {
    "id" : "5bda8f19-8c74-413b-b7c0-a13a40b646d4",
    "name" : "Get company info",
    "request" : {
      "urlPath" : "/accounting/company-info",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5bda8f19-8c74-413b-b7c0-a13a40b646d4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.073848Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companyInfoOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 277
  }, {
    "id" : "0ed8481b-970f-4cd9-8b22-4002a94090d2",
    "name" : "Get company info",
    "request" : {
      "urlPath" : "/accounting/company-info",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0ed8481b-970f-4cd9-8b22-4002a94090d2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.073757Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companyInfoOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 278
  }, {
    "id" : "addfa191-7781-4e28-8ffd-1efcb7d0deb7",
    "name" : "Get company info",
    "request" : {
      "urlPath" : "/accounting/company-info",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "addfa191-7781-4e28-8ffd-1efcb7d0deb7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.073688Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companyInfoOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 279
  }, {
    "id" : "5460dec4-261f-477e-9bc0-94ac0dbea3e2",
    "name" : "Get company info",
    "request" : {
      "urlPath" : "/accounting/company-info",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5460dec4-261f-477e-9bc0-94ac0dbea3e2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.073618Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companyInfoOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 280
  }, {
    "id" : "00a09c7d-8830-45d6-b7a0-0d9172327251",
    "name" : "Get company info",
    "request" : {
      "urlPath" : "/accounting/company-info",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"country\" : \"US\",\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"default_sales_tax\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"company_start_date\" : \"2015-06-05\",\n    \"automated_sales_tax\" : false,\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"language\" : \"EN\",\n    \"created_by\" : \"12345\",\n    \"sales_tax_enabled\" : false,\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"sales_tax_number\" : \"111.222.333\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"company_name\" : \"SpaceX\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"currency\" : \"USD\",\n    \"fiscal_year_start_month\" : \"January\",\n    \"id\" : \"12345\",\n    \"legal_name\" : \"SpaceX Inc.\",\n    \"status\" : \"active\"\n  },\n  \"resource\" : \"company-info\",\n  \"service\" : \"xero\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "00a09c7d-8830-45d6-b7a0-0d9172327251",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.07352Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companyInfoOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/CompanyInfo"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "company-info",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetCompanyInfoResponse",
            "x-graphql-type-name" : "CompanyInfo"
          }
        }
      }
    },
    "insertionIndex" : 281
  }, {
    "id" : "fd89efe6-b3ee-4693-a93b-94d545e37d19",
    "name" : "Update Bill",
    "request" : {
      "urlPath" : "/accounting/bills/0r97",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fd89efe6-b3ee-4693-a93b-94d545e37d19",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.07296Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 282
  }, {
    "id" : "502666b3-f5cc-492b-8751-54cf8f76b9eb",
    "name" : "Update Bill",
    "request" : {
      "urlPath" : "/accounting/bills/bsbk",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "502666b3-f5cc-492b-8751-54cf8f76b9eb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.072821Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 283
  }, {
    "id" : "e1b36138-7160-4ba9-923f-4b276f102e70",
    "name" : "Update Bill",
    "request" : {
      "urlPath" : "/accounting/bills/6lr7",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e1b36138-7160-4ba9-923f-4b276f102e70",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.072669Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 284
  }, {
    "id" : "a59f522c-8f09-419d-a348-3b2782af00c6",
    "name" : "Update Bill",
    "request" : {
      "urlPath" : "/accounting/bills/0s0s",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a59f522c-8f09-419d-a348-3b2782af00c6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.072536Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 285
  }, {
    "id" : "77731941-b8a7-48ca-b7fd-2a26fcddfbbb",
    "name" : "Update Bill",
    "request" : {
      "urlPath" : "/accounting/bills/g5l2",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "77731941-b8a7-48ca-b7fd-2a26fcddfbbb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.072398Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 286
  }, {
    "id" : "08a2e39d-d8ae-4147-af66-6455ccb189d7",
    "name" : "Update Bill",
    "request" : {
      "urlPath" : "/accounting/bills/a254",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"bills\",\n  \"service\" : \"xero\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "08a2e39d-d8ae-4147-af66-6455ccb189d7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.072222Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "bills",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateBillResponse"
          }
        }
      }
    },
    "insertionIndex" : 287
  }, {
    "id" : "ef82ee02-2316-486d-9c57-4c66548c05e4",
    "name" : "Get Bill",
    "request" : {
      "urlPath" : "/accounting/bills/8136",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ef82ee02-2316-486d-9c57-4c66548c05e4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.072041Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 288
  }, {
    "id" : "fbd2e520-35aa-46bc-bc76-fe1f3b8111c2",
    "name" : "Get Bill",
    "request" : {
      "urlPath" : "/accounting/bills/ufh8",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fbd2e520-35aa-46bc-bc76-fe1f3b8111c2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.071896Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 289
  }, {
    "id" : "3b4b6ac8-2c67-4533-88a6-0aedd54dc5d2",
    "name" : "Get Bill",
    "request" : {
      "urlPath" : "/accounting/bills/rcgm",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3b4b6ac8-2c67-4533-88a6-0aedd54dc5d2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.071722Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 290
  }, {
    "id" : "bf013dcb-4467-4566-b7b2-05f8d2773651",
    "name" : "Get Bill",
    "request" : {
      "urlPath" : "/accounting/bills/40h1",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bf013dcb-4467-4566-b7b2-05f8d2773651",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.071572Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 291
  }, {
    "id" : "bd3648c9-2447-4c87-91f9-a511321e6629",
    "name" : "Get Bill",
    "request" : {
      "urlPath" : "/accounting/bills/qss0",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bd3648c9-2447-4c87-91f9-a511321e6629",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.071426Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 292
  }, {
    "id" : "83586d1c-3cb5-49ba-bf41-476283440390",
    "name" : "Get Bill",
    "request" : {
      "urlPath" : "/accounting/bills/i510",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"notes\" : \"Some notes about this bill.\",\n    \"bill_date\" : \"2020-09-30\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"po_number\" : \"90000117\",\n    \"total\" : 27500,\n    \"bill_number\" : \"10001\",\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"terms\" : \"Net 30 days\",\n    \"ledger_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"due_date\" : \"2020-10-30\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"deposit\" : 0,\n    \"paid_date\" : \"2020-10-30\",\n    \"status\" : \"draft\"\n  },\n  \"resource\" : \"bills\",\n  \"service\" : \"xero\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "83586d1c-3cb5-49ba-bf41-476283440390",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.07125Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Bill"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "bills",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetBillResponse",
            "x-graphql-type-name" : "Bill"
          }
        }
      }
    },
    "insertionIndex" : 293
  }, {
    "id" : "317424fd-6a8c-43fd-8f85-38bc536e2795",
    "name" : "Delete Bill",
    "request" : {
      "urlPath" : "/accounting/bills/fgw9",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "317424fd-6a8c-43fd-8f85-38bc536e2795",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.070606Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 294
  }, {
    "id" : "7d4d3ce1-8152-4c53-b734-54e0a656ad7f",
    "name" : "Delete Bill",
    "request" : {
      "urlPath" : "/accounting/bills/e031",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7d4d3ce1-8152-4c53-b734-54e0a656ad7f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.070465Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 295
  }, {
    "id" : "ec2e2275-0cf3-4b3c-b90a-b82117d66dc2",
    "name" : "Delete Bill",
    "request" : {
      "urlPath" : "/accounting/bills/01g6",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ec2e2275-0cf3-4b3c-b90a-b82117d66dc2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.0703Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 296
  }, {
    "id" : "3bfa1095-292d-45b2-9a10-7693c4ea35a4",
    "name" : "Delete Bill",
    "request" : {
      "urlPath" : "/accounting/bills/8f8h",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3bfa1095-292d-45b2-9a10-7693c4ea35a4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.07017Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 297
  }, {
    "id" : "5ed6617b-e9bf-4841-9511-61d65b9c7726",
    "name" : "Delete Bill",
    "request" : {
      "urlPath" : "/accounting/bills/iv47",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5ed6617b-e9bf-4841-9511-61d65b9c7726",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.070037Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 298
  }, {
    "id" : "83b17ad1-e9f9-411a-9b56-29fba0eaed84",
    "name" : "Delete Bill",
    "request" : {
      "urlPath" : "/accounting/bills/0xmo",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"bills\",\n  \"service\" : \"xero\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "83b17ad1-e9f9-411a-9b56-29fba0eaed84",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.06988Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "bills",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "DeleteBillResponse"
          }
        }
      }
    },
    "insertionIndex" : 299
  }, {
    "id" : "6e3565b2-86f0-4db1-8d78-6be9c77f6a96",
    "name" : "Create Bill",
    "request" : {
      "urlPath" : "/accounting/bills",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6e3565b2-86f0-4db1-8d78-6be9c77f6a96",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.069641Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 300
  }, {
    "id" : "8de82b86-926e-4dea-975a-595f7c74db22",
    "name" : "Create Bill",
    "request" : {
      "urlPath" : "/accounting/bills",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8de82b86-926e-4dea-975a-595f7c74db22",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.069571Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 301
  }, {
    "id" : "89f923bd-1d5c-4fd5-b983-cd7bce7e05e3",
    "name" : "Create Bill",
    "request" : {
      "urlPath" : "/accounting/bills",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "89f923bd-1d5c-4fd5-b983-cd7bce7e05e3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.069474Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 302
  }, {
    "id" : "684f3f1d-3d3e-47d3-8a3d-c4e1f7fbc029",
    "name" : "Create Bill",
    "request" : {
      "urlPath" : "/accounting/bills",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "684f3f1d-3d3e-47d3-8a3d-c4e1f7fbc029",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.069402Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 303
  }, {
    "id" : "d1b7c341-06ff-48aa-9a09-5bc2bd30b376",
    "name" : "Create Bill",
    "request" : {
      "urlPath" : "/accounting/bills",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d1b7c341-06ff-48aa-9a09-5bc2bd30b376",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.069327Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 304
  }, {
    "id" : "cdc71342-8852-4c5a-bff2-3553a45a37fc",
    "name" : "Create Bill",
    "request" : {
      "urlPath" : "/accounting/bills",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"bills\",\n  \"service\" : \"xero\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cdc71342-8852-4c5a-bff2-3553a45a37fc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.069228Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "bills",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateBillResponse"
          }
        }
      }
    },
    "insertionIndex" : 305
  }, {
    "id" : "7f296648-da7a-4633-9b53-c6ce7bd72357",
    "name" : "List Bills",
    "request" : {
      "urlPath" : "/accounting/bills",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7f296648-da7a-4633-9b53-c6ce7bd72357",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.069112Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 306
  }, {
    "id" : "231a40aa-ffd1-4521-876c-6ed76b9b905a",
    "name" : "List Bills",
    "request" : {
      "urlPath" : "/accounting/bills",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "231a40aa-ffd1-4521-876c-6ed76b9b905a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.069008Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 307
  }, {
    "id" : "93a2af23-10bd-404b-a433-b6de66a6340a",
    "name" : "List Bills",
    "request" : {
      "urlPath" : "/accounting/bills",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "93a2af23-10bd-404b-a433-b6de66a6340a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.068877Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 308
  }, {
    "id" : "c8baa0a2-52d6-4567-8da1-ae8193245438",
    "name" : "List Bills",
    "request" : {
      "urlPath" : "/accounting/bills",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c8baa0a2-52d6-4567-8da1-ae8193245438",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.068773Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 309
  }, {
    "id" : "8c56de87-2f2e-4ecd-ae60-19b06f1d0cb0",
    "name" : "List Bills",
    "request" : {
      "urlPath" : "/accounting/bills",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8c56de87-2f2e-4ecd-ae60-19b06f1d0cb0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.06867Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 310
  }, {
    "id" : "a4cb61b2-3dd0-4498-aebc-bdbabd6ec99d",
    "name" : "List Bills",
    "request" : {
      "urlPath" : "/accounting/bills",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"notes\" : \"Some notes about this bill.\",\n    \"bill_date\" : \"2020-09-30\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"po_number\" : \"90000117\",\n    \"total\" : 27500,\n    \"bill_number\" : \"10001\",\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"terms\" : \"Net 30 days\",\n    \"ledger_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"due_date\" : \"2020-10-30\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"deposit\" : 0,\n    \"paid_date\" : \"2020-10-30\",\n    \"status\" : \"draft\"\n  }, {\n    \"notes\" : \"Some notes about this bill.\",\n    \"bill_date\" : \"2020-09-30\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"po_number\" : \"90000117\",\n    \"total\" : 27500,\n    \"bill_number\" : \"10001\",\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"terms\" : \"Net 30 days\",\n    \"ledger_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"due_date\" : \"2020-10-30\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"deposit\" : 0,\n    \"paid_date\" : \"2020-10-30\",\n    \"status\" : \"draft\"\n  }, {\n    \"notes\" : \"Some notes about this bill.\",\n    \"bill_date\" : \"2020-09-30\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"po_number\" : \"90000117\",\n    \"total\" : 27500,\n    \"bill_number\" : \"10001\",\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"terms\" : \"Net 30 days\",\n    \"ledger_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"due_date\" : \"2020-10-30\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"deposit\" : 0,\n    \"paid_date\" : \"2020-10-30\",\n    \"status\" : \"draft\"\n  }, {\n    \"notes\" : \"Some notes about this bill.\",\n    \"bill_date\" : \"2020-09-30\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"po_number\" : \"90000117\",\n    \"total\" : 27500,\n    \"bill_number\" : \"10001\",\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"terms\" : \"Net 30 days\",\n    \"ledger_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"due_date\" : \"2020-10-30\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"deposit\" : 0,\n    \"paid_date\" : \"2020-10-30\",\n    \"status\" : \"draft\"\n  }, {\n    \"notes\" : \"Some notes about this bill.\",\n    \"bill_date\" : \"2020-09-30\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"po_number\" : \"90000117\",\n    \"total\" : 27500,\n    \"bill_number\" : \"10001\",\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"terms\" : \"Net 30 days\",\n    \"ledger_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"due_date\" : \"2020-10-30\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"deposit\" : 0,\n    \"paid_date\" : \"2020-10-30\",\n    \"status\" : \"draft\"\n  }, {\n    \"notes\" : \"Some notes about this bill.\",\n    \"bill_date\" : \"2020-09-30\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"po_number\" : \"90000117\",\n    \"total\" : 27500,\n    \"bill_number\" : \"10001\",\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"terms\" : \"Net 30 days\",\n    \"ledger_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"due_date\" : \"2020-10-30\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"deposit\" : 0,\n    \"paid_date\" : \"2020-10-30\",\n    \"status\" : \"draft\"\n  }, {\n    \"notes\" : \"Some notes about this bill.\",\n    \"bill_date\" : \"2020-09-30\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"po_number\" : \"90000117\",\n    \"total\" : 27500,\n    \"bill_number\" : \"10001\",\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"terms\" : \"Net 30 days\",\n    \"ledger_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"due_date\" : \"2020-10-30\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"deposit\" : 0,\n    \"paid_date\" : \"2020-10-30\",\n    \"status\" : \"draft\"\n  }, {\n    \"notes\" : \"Some notes about this bill.\",\n    \"bill_date\" : \"2020-09-30\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"po_number\" : \"90000117\",\n    \"total\" : 27500,\n    \"bill_number\" : \"10001\",\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"terms\" : \"Net 30 days\",\n    \"ledger_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"due_date\" : \"2020-10-30\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"deposit\" : 0,\n    \"paid_date\" : \"2020-10-30\",\n    \"status\" : \"draft\"\n  } ],\n  \"resource\" : \"bills\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"xero\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a4cb61b2-3dd0-4498-aebc-bdbabd6ec99d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.068499Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/Bill"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "bills",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetBillsResponse",
            "x-graphql-type-name" : "BillList"
          }
        }
      }
    },
    "insertionIndex" : 311
  }, {
    "id" : "b9e7f872-420d-4c16-990e-b564bf8f834d",
    "name" : "Get BalanceSheet",
    "request" : {
      "urlPath" : "/accounting/balance-sheet",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b9e7f872-420d-4c16-990e-b564bf8f834d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.065039Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "balanceSheetOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 312
  }, {
    "id" : "583bd831-835a-44ec-8acf-cffb0762dcd4",
    "name" : "Get BalanceSheet",
    "request" : {
      "urlPath" : "/accounting/balance-sheet",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "583bd831-835a-44ec-8acf-cffb0762dcd4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.064922Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "balanceSheetOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 313
  }, {
    "id" : "dc3d4813-8ea1-4555-914c-598d6b01e9af",
    "name" : "Get BalanceSheet",
    "request" : {
      "urlPath" : "/accounting/balance-sheet",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dc3d4813-8ea1-4555-914c-598d6b01e9af",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.064782Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "balanceSheetOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 314
  }, {
    "id" : "8ce89bb0-ade6-491f-8c56-8cbfbf15c507",
    "name" : "Get BalanceSheet",
    "request" : {
      "urlPath" : "/accounting/balance-sheet",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8ce89bb0-ade6-491f-8c56-8cbfbf15c507",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.06467Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "balanceSheetOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 315
  }, {
    "id" : "c754de78-8dc3-42e7-a8a6-b15c25ad60ab",
    "name" : "Get BalanceSheet",
    "request" : {
      "urlPath" : "/accounting/balance-sheet",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c754de78-8dc3-42e7-a8a6-b15c25ad60ab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.0645Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "balanceSheetOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 316
  }, {
    "id" : "bb87c1ee-5c61-4028-b276-e077d3bac464",
    "name" : "Get BalanceSheet",
    "request" : {
      "urlPath" : "/accounting/balance-sheet",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"end_date\" : \"2017-01-01\",\n    \"assets\" : {\n      \"current_assets\" : {\n        \"accounts\" : [ {\n          \"id\" : \"1\",\n          \"name\" : \"Accounts Receivable (A/R)\",\n          \"value\" : 10000\n        }, {\n          \"id\" : \"2\",\n          \"name\" : \"Accounts Payable (A/P)\",\n          \"value\" : 10000\n        } ],\n        \"total\" : 100000\n      },\n      \"fixed_assets\" : {\n        \"accounts\" : [ {\n          \"id\" : \"1\",\n          \"name\" : \"Accounts Receivable (A/R)\",\n          \"value\" : 10000\n        }, {\n          \"id\" : \"2\",\n          \"name\" : \"Accounts Payable (A/P)\",\n          \"value\" : 10000\n        } ],\n        \"total\" : 100000\n      },\n      \"total\" : 200000\n    },\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"liabilities\" : {\n      \"accounts\" : [ {\n        \"id\" : \"1\",\n        \"name\" : \"Accounts Payable (A/P)\",\n        \"value\" : 10000\n      } ],\n      \"total\" : 200000\n    },\n    \"updated_by\" : \"12345\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"id\" : \"12345\",\n    \"report_name\" : \"BalanceSheet\",\n    \"created_by\" : \"12345\",\n    \"equity\" : {\n      \"items\" : [ {\n        \"id\" : \"1\",\n        \"name\" : \"Retained Earnings\",\n        \"value\" : 10000\n      } ],\n      \"total\" : 200000\n    },\n    \"start_date\" : \"2017-01-01\"\n  },\n  \"resource\" : \"BalanceSheets\",\n  \"service\" : \"quickbooks\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bb87c1ee-5c61-4028-b276-e077d3bac464",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:38.064324Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "balanceSheetOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/BalanceSheet"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "BalanceSheets",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "quickbooks",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetBalanceSheetResponse",
            "x-graphql-type-name" : "BalanceSheet"
          }
        }
      }
    },
    "insertionIndex" : 317
  } ]
}