{
  "mappings" : [ {
    "id" : "3754a1a2-96ca-4eb3-b63e-983cad600147",
    "name" : "Update Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/5090",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3754a1a2-96ca-4eb3-b63e-983cad600147",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.988068Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "58ca34b0-0d9d-4fdf-a006-c6243498da38",
    "name" : "Update Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/5ds1",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "58ca34b0-0d9d-4fdf-a006-c6243498da38",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.987916Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "59d63bee-8b7d-483f-9dab-56667dff33f5",
    "name" : "Update Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/4hql",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "59d63bee-8b7d-483f-9dab-56667dff33f5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.987749Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "bcd31a22-5ece-49a1-bbc1-f2c97d4de691",
    "name" : "Update Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/fcn2",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bcd31a22-5ece-49a1-bbc1-f2c97d4de691",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.987603Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "692af1ac-ae45-4d23-9476-705cf2bfce3b",
    "name" : "Update Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/dh8x",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "692af1ac-ae45-4d23-9476-705cf2bfce3b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.987449Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "f8ab4c8a-ba0c-457f-9305-6c0828f9cb30",
    "name" : "Update Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/3xjm",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"tax-rates\",\n  \"service\" : \"xero\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f8ab4c8a-ba0c-457f-9305-6c0828f9cb30",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.987278Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "tax-rates",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateTaxRateResponse"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "0a433379-c8ee-4dee-bb45-8db19aa88c25",
    "name" : "Get Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/l00u",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0a433379-c8ee-4dee-bb45-8db19aa88c25",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.987106Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "008092de-ed73-411c-95c9-10eeb6bc81ed",
    "name" : "Get Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/gm21",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "008092de-ed73-411c-95c9-10eeb6bc81ed",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.986958Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "eca5cfa0-eebe-4e69-b37c-3a767387a4bf",
    "name" : "Get Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/1w24",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eca5cfa0-eebe-4e69-b37c-3a767387a4bf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.986783Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "5211ec64-a742-41df-beec-f33966f787d8",
    "name" : "Get Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/3773",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5211ec64-a742-41df-beec-f33966f787d8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.986612Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "b2f56a06-1ccf-4c8c-aed7-30c51e6134bd",
    "name" : "Get Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/1v9o",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b2f56a06-1ccf-4c8c-aed7-30c51e6134bd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.986469Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "57be85e1-fa88-409a-a325-524693c85058",
    "name" : "Get Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/kdzr",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"components\" : [ {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    } ],\n    \"code\" : \"ABN\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Reduced rate GST Purchases\",\n    \"type\" : \"NONE\",\n    \"created_by\" : \"12345\",\n    \"original_tax_rate_id\" : \"12345\",\n    \"tax_remitted_account_id\" : \"123456\",\n    \"tax_payable_account_id\" : \"123456\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"report_tax_type\" : \"NONE\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"GST on Purchases\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"1234\",\n    \"effective_tax_rate\" : 10,\n    \"total_tax_rate\" : 10,\n    \"status\" : \"active\"\n  },\n  \"resource\" : \"tax-rates\",\n  \"service\" : \"xero\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "57be85e1-fa88-409a-a325-524693c85058",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.986304Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/TaxRate"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "tax-rates",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetTaxRateResponse",
            "x-graphql-type-name" : "TaxRateOne"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "d32dda46-ef12-4170-8b22-3632c811bcbb",
    "name" : "Delete Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/ty5b",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d32dda46-ef12-4170-8b22-3632c811bcbb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.986032Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "50e98deb-7bf3-4ca9-a518-89827e7ffaac",
    "name" : "Delete Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/75ph",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "50e98deb-7bf3-4ca9-a518-89827e7ffaac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.985887Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "272b903b-e530-4d90-8835-975397fb80ee",
    "name" : "Delete Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/qem2",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "272b903b-e530-4d90-8835-975397fb80ee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.985722Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "a3ab38de-8279-482f-a29c-911660cca58f",
    "name" : "Delete Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/7f5h",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a3ab38de-8279-482f-a29c-911660cca58f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.985589Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "b5005261-e6d1-41e1-9dbc-74444f2176b4",
    "name" : "Delete Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/c44u",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b5005261-e6d1-41e1-9dbc-74444f2176b4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.985434Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "004cb0b6-aa07-4eeb-bce5-6d7baa7cf65d",
    "name" : "Delete Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/yfy7",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"tax-rates\",\n  \"service\" : \"xero\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "004cb0b6-aa07-4eeb-bce5-6d7baa7cf65d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.985275Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "tax-rates",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "DeleteTaxRateResponse"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "507fc598-507c-4673-9131-14e292dae4b6",
    "name" : "Create Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "507fc598-507c-4673-9131-14e292dae4b6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.985085Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "07a387a9-3593-49ca-ba33-4186232f7440",
    "name" : "Create Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "07a387a9-3593-49ca-ba33-4186232f7440",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.985012Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "86aaabf6-078a-4fd6-966c-739027d47853",
    "name" : "Create Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "86aaabf6-078a-4fd6-966c-739027d47853",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.984916Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "596563b0-c484-46cf-a4ad-4851b261264a",
    "name" : "Create Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "596563b0-c484-46cf-a4ad-4851b261264a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.984843Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "a615780f-bb11-465b-8959-de17b0356341",
    "name" : "Create Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a615780f-bb11-465b-8959-de17b0356341",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.984768Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "793570e7-8b33-4b2b-9117-75f8cba9c33b",
    "name" : "Create Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"tax-rates\",\n  \"service\" : \"xero\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "793570e7-8b33-4b2b-9117-75f8cba9c33b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.984672Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "tax-rates",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateTaxRateResponse"
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "39a940de-91a7-4f83-810a-7718f04251ff",
    "name" : "List Tax Rates",
    "request" : {
      "urlPath" : "/accounting/tax-rates",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "39a940de-91a7-4f83-810a-7718f04251ff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.984559Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "4286ef2a-33a1-4a74-9dca-892b35076d27",
    "name" : "List Tax Rates",
    "request" : {
      "urlPath" : "/accounting/tax-rates",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4286ef2a-33a1-4a74-9dca-892b35076d27",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.984474Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "cff67bf3-e8bb-4fdb-881b-4234a3781c95",
    "name" : "List Tax Rates",
    "request" : {
      "urlPath" : "/accounting/tax-rates",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cff67bf3-e8bb-4fdb-881b-4234a3781c95",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.984366Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "9c9cd001-61d9-495e-94a2-17049937dd56",
    "name" : "List Tax Rates",
    "request" : {
      "urlPath" : "/accounting/tax-rates",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9c9cd001-61d9-495e-94a2-17049937dd56",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.984288Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "b859ed34-90cd-44e2-85ce-5a4c572fd9ed",
    "name" : "List Tax Rates",
    "request" : {
      "urlPath" : "/accounting/tax-rates",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b859ed34-90cd-44e2-85ce-5a4c572fd9ed",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.984197Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "0edd1600-efa8-4f5e-abe0-b29cf9edf7e7",
    "name" : "List Tax Rates",
    "request" : {
      "urlPath" : "/accounting/tax-rates",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"components\" : [ {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    } ],\n    \"code\" : \"ABN\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Reduced rate GST Purchases\",\n    \"type\" : \"NONE\",\n    \"created_by\" : \"12345\",\n    \"original_tax_rate_id\" : \"12345\",\n    \"tax_remitted_account_id\" : \"123456\",\n    \"tax_payable_account_id\" : \"123456\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"report_tax_type\" : \"NONE\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"GST on Purchases\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"1234\",\n    \"effective_tax_rate\" : 10,\n    \"total_tax_rate\" : 10,\n    \"status\" : \"active\"\n  }, {\n    \"components\" : [ {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    } ],\n    \"code\" : \"ABN\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Reduced rate GST Purchases\",\n    \"type\" : \"NONE\",\n    \"created_by\" : \"12345\",\n    \"original_tax_rate_id\" : \"12345\",\n    \"tax_remitted_account_id\" : \"123456\",\n    \"tax_payable_account_id\" : \"123456\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"report_tax_type\" : \"NONE\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"GST on Purchases\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"1234\",\n    \"effective_tax_rate\" : 10,\n    \"total_tax_rate\" : 10,\n    \"status\" : \"active\"\n  } ],\n  \"resource\" : \"tax-rates\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"xero\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0edd1600-efa8-4f5e-abe0-b29cf9edf7e7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.984089Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/TaxRate"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "tax-rates",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetTaxRatesResponse",
            "x-graphql-type-name" : "TaxRateList"
          }
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "be28a3f0-517d-4631-bf5d-0b4d4c32f548",
    "name" : "Update Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/1w5v",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "be28a3f0-517d-4631-bf5d-0b4d4c32f548",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.983723Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "29ff0493-b497-49c0-ad99-6101994ae4ee",
    "name" : "Update Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/ne24",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "29ff0493-b497-49c0-ad99-6101994ae4ee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.983578Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "2a3080dd-d85f-4a6e-b519-37065756b963",
    "name" : "Update Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/bv73",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2a3080dd-d85f-4a6e-b519-37065756b963",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.983409Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "9cb8ea56-5599-4ec6-8ffc-49c4dd14c240",
    "name" : "Update Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/z361",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9cb8ea56-5599-4ec6-8ffc-49c4dd14c240",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.983266Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "9dec2e5c-e824-47cb-9fab-437e472db254",
    "name" : "Update Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/m58n",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9dec2e5c-e824-47cb-9fab-437e472db254",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.983124Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "259134da-b133-4119-9def-73a4eb593376",
    "name" : "Update Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/4jir",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"suppliers\",\n  \"service\" : \"xero\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "259134da-b133-4119-9def-73a4eb593376",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.982949Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "suppliers",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateSupplierResponse"
          }
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "6df98e25-bd3c-418a-b991-05fb8a7da22e",
    "name" : "Get Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/54w0",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6df98e25-bd3c-418a-b991-05fb8a7da22e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.982773Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "544eef17-d143-4ee9-94b8-4c6c6c445bc5",
    "name" : "Get Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/il6t",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "544eef17-d143-4ee9-94b8-4c6c6c445bc5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.982627Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "23e1d056-5235-482a-882d-a7ccc48a38fc",
    "name" : "Get Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/t6w8",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "23e1d056-5235-482a-882d-a7ccc48a38fc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.982443Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "015d1740-ea9a-4fdb-b819-e0432217cdfa",
    "name" : "Get Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/w974",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "015d1740-ea9a-4fdb-b819-e0432217cdfa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.982296Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "dae4d932-bb51-4482-91f0-263df4d2828e",
    "name" : "Get Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/98s5",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dae4d932-bb51-4482-91f0-263df4d2828e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.982146Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "21f3a9f3-7a1d-451e-962b-14dba6ece886",
    "name" : "Get Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/egi1",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"notes\" : \"Some notes about this supplier\",\n    \"display_id\" : \"EMP00101\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"suffix\" : \"Jr.\",\n    \"title\" : \"CEO\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"tax_number\" : \"US123945459\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"first_name\" : \"Elon\",\n    \"individual\" : true,\n    \"last_name\" : \"Musk\",\n    \"display_name\" : \"Windsurf Shop\",\n    \"middle_name\" : \"D.\",\n    \"created_by\" : \"12345\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_name\" : \"SpaceX\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"bank_accounts\" : [ {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    } ],\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"status\" : \"active\"\n  },\n  \"resource\" : \"suppliers\",\n  \"service\" : \"xero\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "21f3a9f3-7a1d-451e-962b-14dba6ece886",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.981968Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Supplier"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "suppliers",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetSupplierResponse",
            "x-graphql-type-name" : "Supplier"
          }
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "1b41a876-21c2-4de0-a99c-80fea6460fb4",
    "name" : "Delete Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/dvv0",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1b41a876-21c2-4de0-a99c-80fea6460fb4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.981284Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 42
  }, {
    "id" : "aaaf84c1-4a19-412e-995c-79d6c3e34523",
    "name" : "Delete Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/6v34",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aaaf84c1-4a19-412e-995c-79d6c3e34523",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.981142Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 43
  }, {
    "id" : "c2af8caf-6f88-4e20-9e92-f7a09a1bdeff",
    "name" : "Delete Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/47z5",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c2af8caf-6f88-4e20-9e92-f7a09a1bdeff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.98098Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 44
  }, {
    "id" : "75c386e0-e5d6-4e79-a630-ac48c79b897b",
    "name" : "Delete Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/ros5",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "75c386e0-e5d6-4e79-a630-ac48c79b897b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.980842Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 45
  }, {
    "id" : "772f5fb1-0239-4fd0-aafe-f8f4e35f1670",
    "name" : "Delete Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/1mp4",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "772f5fb1-0239-4fd0-aafe-f8f4e35f1670",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.980703Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 46
  }, {
    "id" : "335bce4a-8736-460c-b544-6040bb552108",
    "name" : "Delete Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/fzqo",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"suppliers\",\n  \"service\" : \"xero\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "335bce4a-8736-460c-b544-6040bb552108",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.980539Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "suppliers",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "DeleteSupplierResponse"
          }
        }
      }
    },
    "insertionIndex" : 47
  }, {
    "id" : "4bc061c0-ae62-4eb4-9461-4cf0542d6355",
    "name" : "Create Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4bc061c0-ae62-4eb4-9461-4cf0542d6355",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.980353Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 48
  }, {
    "id" : "2f97cf25-cb49-4a01-a85e-e7f3254238f8",
    "name" : "Create Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2f97cf25-cb49-4a01-a85e-e7f3254238f8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.980273Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 49
  }, {
    "id" : "a4ea785e-a7a0-4b6f-b4f1-476796c6ec9a",
    "name" : "Create Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a4ea785e-a7a0-4b6f-b4f1-476796c6ec9a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.980179Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 50
  }, {
    "id" : "5cbd477b-92b9-43a4-9d73-cf62318f6056",
    "name" : "Create Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5cbd477b-92b9-43a4-9d73-cf62318f6056",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.980107Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 51
  }, {
    "id" : "70f3ae20-0482-4dcd-8806-9552f67eedf0",
    "name" : "Create Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "70f3ae20-0482-4dcd-8806-9552f67eedf0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.980032Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 52
  }, {
    "id" : "a818b5a3-a19b-48a0-b8d0-9164d3af7614",
    "name" : "Create Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"payments\",\n  \"service\" : \"xero\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a818b5a3-a19b-48a0-b8d0-9164d3af7614",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.979936Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "payments",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateSupplierResponse"
          }
        }
      }
    },
    "insertionIndex" : 53
  }, {
    "id" : "63b4b656-8ceb-4cb0-b139-62502f6a81ca",
    "name" : "List Suppliers",
    "request" : {
      "urlPath" : "/accounting/suppliers",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "63b4b656-8ceb-4cb0-b139-62502f6a81ca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.979824Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 54
  }, {
    "id" : "5e59cdbf-9eaa-45e0-8005-329260da0ea7",
    "name" : "List Suppliers",
    "request" : {
      "urlPath" : "/accounting/suppliers",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5e59cdbf-9eaa-45e0-8005-329260da0ea7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.979734Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 55
  }, {
    "id" : "31bbf321-7163-49ef-802c-98a961fa1638",
    "name" : "List Suppliers",
    "request" : {
      "urlPath" : "/accounting/suppliers",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "31bbf321-7163-49ef-802c-98a961fa1638",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.979615Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 56
  }, {
    "id" : "1109f01d-33cc-4161-ba54-eb1eb9e4b00c",
    "name" : "List Suppliers",
    "request" : {
      "urlPath" : "/accounting/suppliers",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1109f01d-33cc-4161-ba54-eb1eb9e4b00c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.979527Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 57
  }, {
    "id" : "32e11935-bb61-41f2-a149-870dcf3eed31",
    "name" : "List Suppliers",
    "request" : {
      "urlPath" : "/accounting/suppliers",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "32e11935-bb61-41f2-a149-870dcf3eed31",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.979437Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 58
  }, {
    "id" : "554b4656-c02c-414f-a173-46ddf8fdbe1f",
    "name" : "List Suppliers",
    "request" : {
      "urlPath" : "/accounting/suppliers",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"notes\" : \"Some notes about this supplier\",\n    \"display_id\" : \"EMP00101\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"suffix\" : \"Jr.\",\n    \"title\" : \"CEO\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"tax_number\" : \"US123945459\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"first_name\" : \"Elon\",\n    \"individual\" : true,\n    \"last_name\" : \"Musk\",\n    \"display_name\" : \"Windsurf Shop\",\n    \"middle_name\" : \"D.\",\n    \"created_by\" : \"12345\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_name\" : \"SpaceX\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"bank_accounts\" : [ {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    } ],\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"status\" : \"active\"\n  }, {\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"notes\" : \"Some notes about this supplier\",\n    \"display_id\" : \"EMP00101\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"suffix\" : \"Jr.\",\n    \"title\" : \"CEO\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"tax_number\" : \"US123945459\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"first_name\" : \"Elon\",\n    \"individual\" : true,\n    \"last_name\" : \"Musk\",\n    \"display_name\" : \"Windsurf Shop\",\n    \"middle_name\" : \"D.\",\n    \"created_by\" : \"12345\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_name\" : \"SpaceX\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"bank_accounts\" : [ {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    } ],\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"status\" : \"active\"\n  }, {\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"notes\" : \"Some notes about this supplier\",\n    \"display_id\" : \"EMP00101\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"suffix\" : \"Jr.\",\n    \"title\" : \"CEO\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"tax_number\" : \"US123945459\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"first_name\" : \"Elon\",\n    \"individual\" : true,\n    \"last_name\" : \"Musk\",\n    \"display_name\" : \"Windsurf Shop\",\n    \"middle_name\" : \"D.\",\n    \"created_by\" : \"12345\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_name\" : \"SpaceX\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"bank_accounts\" : [ {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    } ],\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"status\" : \"active\"\n  }, {\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"notes\" : \"Some notes about this supplier\",\n    \"display_id\" : \"EMP00101\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"suffix\" : \"Jr.\",\n    \"title\" : \"CEO\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"tax_number\" : \"US123945459\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"first_name\" : \"Elon\",\n    \"individual\" : true,\n    \"last_name\" : \"Musk\",\n    \"display_name\" : \"Windsurf Shop\",\n    \"middle_name\" : \"D.\",\n    \"created_by\" : \"12345\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_name\" : \"SpaceX\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"bank_accounts\" : [ {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    } ],\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"status\" : \"active\"\n  } ],\n  \"resource\" : \"suppliers\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"xero\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "554b4656-c02c-414f-a173-46ddf8fdbe1f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.979296Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/Supplier"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "suppliers",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetSuppliersResponse",
            "x-graphql-type-name" : "SupplierList"
          }
        }
      }
    },
    "insertionIndex" : 59
  }, {
    "id" : "2ce8d84b-4e92-4d96-bddb-468e185fbf86",
    "name" : "Get Profit and Loss",
    "request" : {
      "urlPath" : "/accounting/profit-and-loss",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2ce8d84b-4e92-4d96-bddb-468e185fbf86",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.977612Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "profitAndLossOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 60
  }, {
    "id" : "aa7d97d7-afcc-49fa-bbbd-2822f531988e",
    "name" : "Get Profit and Loss",
    "request" : {
      "urlPath" : "/accounting/profit-and-loss",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aa7d97d7-afcc-49fa-bbbd-2822f531988e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.977537Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "profitAndLossOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 61
  }, {
    "id" : "a6f1af6a-3c65-4c11-99b7-42da9147b3c3",
    "name" : "Get Profit and Loss",
    "request" : {
      "urlPath" : "/accounting/profit-and-loss",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a6f1af6a-3c65-4c11-99b7-42da9147b3c3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.977442Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "profitAndLossOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 62
  }, {
    "id" : "d421996b-8e1f-4590-a003-388a1b2d45c6",
    "name" : "Get Profit and Loss",
    "request" : {
      "urlPath" : "/accounting/profit-and-loss",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d421996b-8e1f-4590-a003-388a1b2d45c6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.977364Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "profitAndLossOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 63
  }, {
    "id" : "68b8de3e-cbd5-40c9-a663-875f07ac527d",
    "name" : "Get Profit and Loss",
    "request" : {
      "urlPath" : "/accounting/profit-and-loss",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "68b8de3e-cbd5-40c9-a663-875f07ac527d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.977285Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "profitAndLossOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 64
  }, {
    "id" : "88543d20-3003-4910-a01a-f4117d771459",
    "name" : "Get Profit and Loss",
    "request" : {
      "urlPath" : "/accounting/profit-and-loss",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"end_date\" : \"2017-01-01\",\n    \"income\" : {\n      \"records\" : [ {\n        \"amount\" : 10000,\n        \"id\" : \"123\",\n        \"name\" : \"Income 1\"\n      }, {\n        \"amount\" : 20000,\n        \"id\" : \"456\",\n        \"name\" : \"Income 2\"\n      } ],\n      \"total\" : 200000\n    },\n    \"net_operating_income\" : {\n      \"total\" : 200000\n    },\n    \"gross_profit\" : {\n      \"total\" : 200000\n    },\n    \"currency\" : \"USD\",\n    \"id\" : \"12345\",\n    \"net_income\" : {\n      \"total\" : 200000\n    },\n    \"customer_id\" : \"123\",\n    \"report_name\" : \"ProfitAndLoss\",\n    \"expenses\" : {\n      \"records\" : [ {\n        \"amount\" : 10000,\n        \"id\" : \"123\",\n        \"name\" : \"Expense 1\"\n      }, {\n        \"amount\" : 20000,\n        \"id\" : \"456\",\n        \"name\" : \"Expense 2\"\n      } ],\n      \"total\" : 200000\n    },\n    \"start_date\" : \"2017-01-01\"\n  },\n  \"resource\" : \"ProfitAndLosses\",\n  \"service\" : \"quickbooks\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "88543d20-3003-4910-a01a-f4117d771459",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.977184Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "profitAndLossOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/ProfitAndLoss"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "ProfitAndLosses",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "quickbooks",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetProfitAndLossResponse",
            "x-graphql-type-name" : "ProfitAndLoss"
          }
        }
      }
    },
    "insertionIndex" : 65
  }, {
    "id" : "0fd81fdd-b7e5-46da-8705-02ccd91418d9",
    "name" : "Update Payment",
    "request" : {
      "urlPath" : "/accounting/payments/95i5",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0fd81fdd-b7e5-46da-8705-02ccd91418d9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.977011Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 66
  }, {
    "id" : "54dbe12d-c645-418f-b3ef-191bd83fef2b",
    "name" : "Update Payment",
    "request" : {
      "urlPath" : "/accounting/payments/696v",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "54dbe12d-c645-418f-b3ef-191bd83fef2b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.976863Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 67
  }, {
    "id" : "294ab2e6-c7bc-4711-be17-0f341280d06b",
    "name" : "Update Payment",
    "request" : {
      "urlPath" : "/accounting/payments/l35z",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "294ab2e6-c7bc-4711-be17-0f341280d06b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.976684Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 68
  }, {
    "id" : "9512869a-0351-4897-8467-9f88a7417bee",
    "name" : "Update Payment",
    "request" : {
      "urlPath" : "/accounting/payments/1sgy",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9512869a-0351-4897-8467-9f88a7417bee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.976549Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 69
  }, {
    "id" : "35780228-fd8b-43aa-8859-69b2a1314cec",
    "name" : "Update Payment",
    "request" : {
      "urlPath" : "/accounting/payments/jbkj",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "35780228-fd8b-43aa-8859-69b2a1314cec",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.976408Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 70
  }, {
    "id" : "3d044f39-cb99-47f3-b489-e4e5453fbfcd",
    "name" : "Update Payment",
    "request" : {
      "urlPath" : "/accounting/payments/s78j",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"payments\",\n  \"service\" : \"xero\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3d044f39-cb99-47f3-b489-e4e5453fbfcd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.976238Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "payments",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdatePaymentResponse"
          }
        }
      }
    },
    "insertionIndex" : 71
  }, {
    "id" : "3d6f1ec7-f962-487f-a787-415c78a5ccb6",
    "name" : "Get Payment",
    "request" : {
      "urlPath" : "/accounting/payments/a44w",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3d6f1ec7-f962-487f-a787-415c78a5ccb6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.976057Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 72
  }, {
    "id" : "5a636325-cb20-4e0a-8c66-4aa18596f466",
    "name" : "Get Payment",
    "request" : {
      "urlPath" : "/accounting/payments/k48b",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5a636325-cb20-4e0a-8c66-4aa18596f466",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.9759Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 73
  }, {
    "id" : "d2e4e73c-0344-4b92-b2e2-c556058a3a64",
    "name" : "Get Payment",
    "request" : {
      "urlPath" : "/accounting/payments/y75c",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d2e4e73c-0344-4b92-b2e2-c556058a3a64",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.97573Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 74
  }, {
    "id" : "81fd3bfb-3f7b-4108-9449-f3c38d817f53",
    "name" : "Get Payment",
    "request" : {
      "urlPath" : "/accounting/payments/b7jk",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "81fd3bfb-3f7b-4108-9449-f3c38d817f53",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.975589Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 75
  }, {
    "id" : "c0eca554-9942-4d2e-b502-0166af6650ac",
    "name" : "Get Payment",
    "request" : {
      "urlPath" : "/accounting/payments/v6i4",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c0eca554-9942-4d2e-b502-0166af6650ac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.975444Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 76
  }, {
    "id" : "996fc80a-2c87-4c3b-bd12-3eaca3de9387",
    "name" : "Get Payment",
    "request" : {
      "urlPath" : "/accounting/payments/31c8",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"note\" : \"Some notes about this payment\",\n    \"display_id\" : \"123456\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"type\" : \"accounts_receivable\",\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"pre_payment\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"123456\",\n    \"payment_method\" : \"Credit Card\",\n    \"transaction_date\" : \"2021-05-01T12:00:00.000Z\",\n    \"accounts_receivable_account_id\" : \"123456\",\n    \"reconciled\" : true,\n    \"payment_method_reference\" : \"123456\",\n    \"created_by\" : \"12345\",\n    \"accounts_receivable_account_type\" : \"Account\",\n    \"total_amount\" : 49.99,\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  },\n  \"resource\" : \"payments\",\n  \"service\" : \"xero\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "996fc80a-2c87-4c3b-bd12-3eaca3de9387",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.975268Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Payment"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "payments",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetPaymentResponse",
            "x-graphql-type-name" : "Payment"
          }
        }
      }
    },
    "insertionIndex" : 77
  }, {
    "id" : "3dcd31e5-2cca-4b72-b0be-0e382e4a8895",
    "name" : "Delete Payment",
    "request" : {
      "urlPath" : "/accounting/payments/wnk7",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3dcd31e5-2cca-4b72-b0be-0e382e4a8895",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.974874Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 78
  }, {
    "id" : "cd8a0b43-af17-41f7-9a5d-b6afed28c185",
    "name" : "Delete Payment",
    "request" : {
      "urlPath" : "/accounting/payments/w6j9",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cd8a0b43-af17-41f7-9a5d-b6afed28c185",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.974729Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 79
  }, {
    "id" : "83ff8e6f-416c-4e5d-9261-3251d9f3c41f",
    "name" : "Delete Payment",
    "request" : {
      "urlPath" : "/accounting/payments/07iq",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "83ff8e6f-416c-4e5d-9261-3251d9f3c41f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.974554Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 80
  }, {
    "id" : "46fd590b-bbff-462b-a3be-088dc314f33c",
    "name" : "Delete Payment",
    "request" : {
      "urlPath" : "/accounting/payments/461f",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "46fd590b-bbff-462b-a3be-088dc314f33c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.974403Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 81
  }, {
    "id" : "45d17439-0715-432d-8b33-b35726d5e768",
    "name" : "Delete Payment",
    "request" : {
      "urlPath" : "/accounting/payments/eh7g",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "45d17439-0715-432d-8b33-b35726d5e768",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.97425Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 82
  }, {
    "id" : "c1e54747-0018-48e8-8a3d-94c2b14f4a8b",
    "name" : "Delete Payment",
    "request" : {
      "urlPath" : "/accounting/payments/b2sw",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"payments\",\n  \"service\" : \"xero\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c1e54747-0018-48e8-8a3d-94c2b14f4a8b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.97409Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "payments",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "DeletePaymentResponse"
          }
        }
      }
    },
    "insertionIndex" : 83
  }, {
    "id" : "3ef62874-3ca1-4c1c-97b8-2bc042b16f70",
    "name" : "Create Payment",
    "request" : {
      "urlPath" : "/accounting/payments",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3ef62874-3ca1-4c1c-97b8-2bc042b16f70",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.973882Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 84
  }, {
    "id" : "cb9b7ffe-99f2-4817-8056-0e097ff44b2a",
    "name" : "Create Payment",
    "request" : {
      "urlPath" : "/accounting/payments",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cb9b7ffe-99f2-4817-8056-0e097ff44b2a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.97381Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 85
  }, {
    "id" : "585c782d-7329-4a55-9834-1f2a19a7a232",
    "name" : "Create Payment",
    "request" : {
      "urlPath" : "/accounting/payments",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "585c782d-7329-4a55-9834-1f2a19a7a232",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.973713Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 86
  }, {
    "id" : "dabbcc72-5e85-42f6-a3bb-51dfda1f05e8",
    "name" : "Create Payment",
    "request" : {
      "urlPath" : "/accounting/payments",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dabbcc72-5e85-42f6-a3bb-51dfda1f05e8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.973637Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 87
  }, {
    "id" : "050366a3-adc7-4e90-9a20-0e06ced45d71",
    "name" : "Create Payment",
    "request" : {
      "urlPath" : "/accounting/payments",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "050366a3-adc7-4e90-9a20-0e06ced45d71",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.973563Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 88
  }, {
    "id" : "60a7a831-3671-409e-a606-598a890d9afa",
    "name" : "Create Payment",
    "request" : {
      "urlPath" : "/accounting/payments",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"payments\",\n  \"service\" : \"xero\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "60a7a831-3671-409e-a606-598a890d9afa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.973455Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "payments",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreatePaymentResponse"
          }
        }
      }
    },
    "insertionIndex" : 89
  }, {
    "id" : "b490c6b0-65e9-4d06-a3a5-8ee6d5b1018b",
    "name" : "List Payments",
    "request" : {
      "urlPath" : "/accounting/payments",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b490c6b0-65e9-4d06-a3a5-8ee6d5b1018b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.973339Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 90
  }, {
    "id" : "1789d1ae-331c-4ca9-ab6e-2ace46c24a76",
    "name" : "List Payments",
    "request" : {
      "urlPath" : "/accounting/payments",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1789d1ae-331c-4ca9-ab6e-2ace46c24a76",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.973253Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 91
  }, {
    "id" : "0aaf59f7-4195-4cdf-8583-0c944c6185bf",
    "name" : "List Payments",
    "request" : {
      "urlPath" : "/accounting/payments",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0aaf59f7-4195-4cdf-8583-0c944c6185bf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.973132Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 92
  }, {
    "id" : "cb05ac7e-cd70-41f3-b9d4-4f9cc29349fa",
    "name" : "List Payments",
    "request" : {
      "urlPath" : "/accounting/payments",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cb05ac7e-cd70-41f3-b9d4-4f9cc29349fa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.973052Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 93
  }, {
    "id" : "daf47fc0-f507-45e4-814d-cd14a79a08aa",
    "name" : "List Payments",
    "request" : {
      "urlPath" : "/accounting/payments",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "daf47fc0-f507-45e4-814d-cd14a79a08aa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.972968Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 94
  }, {
    "id" : "8d7b1658-567a-42b6-8565-0e69400b08a4",
    "name" : "List Payments",
    "request" : {
      "urlPath" : "/accounting/payments",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"note\" : \"Some notes about this payment\",\n    \"display_id\" : \"123456\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"type\" : \"accounts_receivable\",\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"invoice\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"expense\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"pre_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"order\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"123456\",\n    \"payment_method\" : \"Credit Card\",\n    \"transaction_date\" : \"2021-05-01T12:00:00.000Z\",\n    \"accounts_receivable_account_id\" : \"123456\",\n    \"reconciled\" : true,\n    \"payment_method_reference\" : \"123456\",\n    \"created_by\" : \"12345\",\n    \"accounts_receivable_account_type\" : \"Account\",\n    \"total_amount\" : 49.99,\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  }, {\n    \"note\" : \"Some notes about this payment\",\n    \"display_id\" : \"123456\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"type\" : \"accounts_receivable\",\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"order\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"over_payment\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"123456\",\n    \"payment_method\" : \"Credit Card\",\n    \"transaction_date\" : \"2021-05-01T12:00:00.000Z\",\n    \"accounts_receivable_account_id\" : \"123456\",\n    \"reconciled\" : true,\n    \"payment_method_reference\" : \"123456\",\n    \"created_by\" : \"12345\",\n    \"accounts_receivable_account_type\" : \"Account\",\n    \"total_amount\" : 49.99,\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  }, {\n    \"note\" : \"Some notes about this payment\",\n    \"display_id\" : \"123456\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"type\" : \"accounts_receivable\",\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"over_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"over_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"123456\",\n    \"payment_method\" : \"Credit Card\",\n    \"transaction_date\" : \"2021-05-01T12:00:00.000Z\",\n    \"accounts_receivable_account_id\" : \"123456\",\n    \"reconciled\" : true,\n    \"payment_method_reference\" : \"123456\",\n    \"created_by\" : \"12345\",\n    \"accounts_receivable_account_type\" : \"Account\",\n    \"total_amount\" : 49.99,\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  }, {\n    \"note\" : \"Some notes about this payment\",\n    \"display_id\" : \"123456\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"type\" : \"accounts_receivable\",\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"over_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"order\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"order\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"invoice\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"pre_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"pre_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"pre_payment\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"123456\",\n    \"payment_method\" : \"Credit Card\",\n    \"transaction_date\" : \"2021-05-01T12:00:00.000Z\",\n    \"accounts_receivable_account_id\" : \"123456\",\n    \"reconciled\" : true,\n    \"payment_method_reference\" : \"123456\",\n    \"created_by\" : \"12345\",\n    \"accounts_receivable_account_type\" : \"Account\",\n    \"total_amount\" : 49.99,\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  }, {\n    \"note\" : \"Some notes about this payment\",\n    \"display_id\" : \"123456\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"type\" : \"accounts_receivable\",\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"over_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"over_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"pre_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"expense\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"123456\",\n    \"payment_method\" : \"Credit Card\",\n    \"transaction_date\" : \"2021-05-01T12:00:00.000Z\",\n    \"accounts_receivable_account_id\" : \"123456\",\n    \"reconciled\" : true,\n    \"payment_method_reference\" : \"123456\",\n    \"created_by\" : \"12345\",\n    \"accounts_receivable_account_type\" : \"Account\",\n    \"total_amount\" : 49.99,\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  } ],\n  \"resource\" : \"payments\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"xero\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8d7b1658-567a-42b6-8565-0e69400b08a4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.972844Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/Payment"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "payments",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetPaymentsResponse",
            "x-graphql-type-name" : "PaymentList"
          }
        }
      }
    },
    "insertionIndex" : 95
  }, {
    "id" : "1a867739-7030-4b6c-bf13-91e90fd116b5",
    "name" : "Update Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/3655",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1a867739-7030-4b6c-bf13-91e90fd116b5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.97161Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 96
  }, {
    "id" : "351d0ec3-001b-40c6-ae5a-676cd15deb6c",
    "name" : "Update Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/t182",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "351d0ec3-001b-40c6-ae5a-676cd15deb6c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.971467Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 97
  }, {
    "id" : "1c26f4f2-b391-46f1-bae6-2cd1ce467eff",
    "name" : "Update Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/l464",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1c26f4f2-b391-46f1-bae6-2cd1ce467eff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.971295Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 98
  }, {
    "id" : "b1d79fa2-c7a8-4008-936a-1b3feb981f93",
    "name" : "Update Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/e8nq",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b1d79fa2-c7a8-4008-936a-1b3feb981f93",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.971144Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 99
  }, {
    "id" : "e88f079d-3086-4c5b-93d4-761a8ec94f9b",
    "name" : "Update Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/887w",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e88f079d-3086-4c5b-93d4-761a8ec94f9b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.970987Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 100
  }, {
    "id" : "96e2c62b-a969-4ceb-ac97-604a301bc5c3",
    "name" : "Update Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/3j08",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"ledger-accounts\",\n  \"service\" : \"xero\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "96e2c62b-a969-4ceb-ac97-604a301bc5c3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.970821Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "ledger-accounts",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateLedgerAccountResponse"
          }
        }
      }
    },
    "insertionIndex" : 101
  }, {
    "id" : "1fb53d49-4db3-4cca-bda7-f535721fdda1",
    "name" : "Get Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/jn64",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1fb53d49-4db3-4cca-bda7-f535721fdda1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.97063Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 102
  }, {
    "id" : "2d6219a5-e2e5-4ee4-a286-d504bdc7fa2d",
    "name" : "Get Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/j117",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2d6219a5-e2e5-4ee4-a286-d504bdc7fa2d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.970476Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 103
  }, {
    "id" : "c923d1dd-acd7-44cb-b46e-e5d8543c82e6",
    "name" : "Get Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/r0sk",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c923d1dd-acd7-44cb-b46e-e5d8543c82e6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.970286Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 104
  }, {
    "id" : "be6115ff-fb44-4b01-b177-6e56566cc5a8",
    "name" : "Get Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/9hqd",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "be6115ff-fb44-4b01-b177-6e56566cc5a8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.970141Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 105
  }, {
    "id" : "acc243cc-1201-4fdb-9847-be0e41ae6a21",
    "name" : "Get Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/hu67",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "acc243cc-1201-4fdb-9847-be0e41ae6a21",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.969987Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 106
  }, {
    "id" : "e0328f4b-7c11-4a17-9a6f-db00fc08ed1d",
    "name" : "Get Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/o4r2",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"code\" : \"453\",\n    \"fully_qualified_name\" : \"Asset.Bank.Checking_Account\",\n    \"display_id\" : \"1-12345\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Main checking account\",\n    \"sub_account\" : false,\n    \"type\" : \"bank\",\n    \"last_reconciliation_date\" : \"2020-09-30\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"sub_type\" : \"CHECKING_ACCOUNT\",\n    \"current_balance\" : 20000,\n    \"currency\" : \"USD\",\n    \"categories\" : [ {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    } ],\n    \"id\" : \"12345\",\n    \"opening_balance\" : 75000,\n    \"bank_account\" : {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    },\n    \"level\" : 1,\n    \"active\" : true,\n    \"classification\" : \"asset\",\n    \"created_by\" : \"12345\",\n    \"parent_account\" : {\n      \"display_id\" : \"1-1100\",\n      \"name\" : \"Bank Accounts\",\n      \"id\" : \"12345\"\n    },\n    \"tax_type\" : \"NONE\",\n    \"sub_accounts\" : [ {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    } ],\n    \"nominal_code\" : \"N091\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Bank account\",\n    \"updated_by\" : \"12345\",\n    \"header\" : true,\n    \"status\" : \"active\"\n  },\n  \"resource\" : \"ledger-accounts\",\n  \"service\" : \"xero\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e0328f4b-7c11-4a17-9a6f-db00fc08ed1d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.969821Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/LedgerAccount"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "ledger-accounts",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetLedgerAccountResponse",
            "x-graphql-type-name" : "LedgerAccount"
          }
        }
      }
    },
    "insertionIndex" : 107
  }, {
    "id" : "69d10c9e-0b13-4238-8abb-ee2f8daacd63",
    "name" : "Delete Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/gfzb",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "69d10c9e-0b13-4238-8abb-ee2f8daacd63",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.969483Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 108
  }, {
    "id" : "a3b5b9f6-8b6d-4295-ba4a-fbc6c1218f88",
    "name" : "Delete Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/nwr5",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a3b5b9f6-8b6d-4295-ba4a-fbc6c1218f88",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.969343Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 109
  }, {
    "id" : "3a260300-1c47-446c-9ef7-0aa353685bdd",
    "name" : "Delete Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/5cvg",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3a260300-1c47-446c-9ef7-0aa353685bdd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.969176Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 110
  }, {
    "id" : "756d98fe-a475-4bc6-a3ad-f5ee405e550e",
    "name" : "Delete Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/0w84",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "756d98fe-a475-4bc6-a3ad-f5ee405e550e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.969035Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 111
  }, {
    "id" : "8b675526-3a77-43d2-ae49-a3960912c0ff",
    "name" : "Delete Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/4g70",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8b675526-3a77-43d2-ae49-a3960912c0ff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.968898Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 112
  }, {
    "id" : "ef393988-cd03-46dd-becb-04ec1947eea4",
    "name" : "Delete Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/f261",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"ledger-accounts\",\n  \"service\" : \"xero\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ef393988-cd03-46dd-becb-04ec1947eea4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.968733Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "ledger-accounts",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "DeleteLedgerAccountResponse"
          }
        }
      }
    },
    "insertionIndex" : 113
  }, {
    "id" : "41d401ab-711a-47aa-96aa-962a1c254623",
    "name" : "Create Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "41d401ab-711a-47aa-96aa-962a1c254623",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.968545Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 114
  }, {
    "id" : "aaecda18-0c42-430a-bf28-f0741e1f5a03",
    "name" : "Create Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aaecda18-0c42-430a-bf28-f0741e1f5a03",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.96845Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 115
  }, {
    "id" : "18b5ffe1-9720-4e33-b34b-bb8bff50257d",
    "name" : "Create Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "18b5ffe1-9720-4e33-b34b-bb8bff50257d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.968353Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 116
  }, {
    "id" : "bbfb1fe0-18d1-4309-9cf6-9b3f5db5c42e",
    "name" : "Create Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bbfb1fe0-18d1-4309-9cf6-9b3f5db5c42e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.968281Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 117
  }, {
    "id" : "bece7bec-ef7a-49f2-8850-aaa62b9e24fe",
    "name" : "Create Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bece7bec-ef7a-49f2-8850-aaa62b9e24fe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.968187Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 118
  }, {
    "id" : "af84b028-4626-4269-b021-8b59a32cebae",
    "name" : "Create Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"ledger-accounts\",\n  \"service\" : \"xero\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "af84b028-4626-4269-b021-8b59a32cebae",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.968093Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "ledger-accounts",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateLedgerAccountResponse"
          }
        }
      }
    },
    "insertionIndex" : 119
  }, {
    "id" : "0d76e79f-beb4-4a08-9f0a-ee809e15580d",
    "name" : "List Ledger Accounts",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0d76e79f-beb4-4a08-9f0a-ee809e15580d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.967982Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 120
  }, {
    "id" : "b17c0703-db3c-4b44-8eca-46354010f729",
    "name" : "List Ledger Accounts",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b17c0703-db3c-4b44-8eca-46354010f729",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.967895Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 121
  }, {
    "id" : "72b45614-f9e2-4abb-abf7-5b5ee8c9bf80",
    "name" : "List Ledger Accounts",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "72b45614-f9e2-4abb-abf7-5b5ee8c9bf80",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.967784Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 122
  }, {
    "id" : "01e5aec2-08d9-4f1f-81ce-c6f9ac15dd29",
    "name" : "List Ledger Accounts",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "01e5aec2-08d9-4f1f-81ce-c6f9ac15dd29",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.967699Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 123
  }, {
    "id" : "8b195cd3-fdc5-4c44-9e2d-aefe70ffb93b",
    "name" : "List Ledger Accounts",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8b195cd3-fdc5-4c44-9e2d-aefe70ffb93b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.967612Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 124
  }, {
    "id" : "42364daa-f045-4d03-95a4-64c232fa2f3a",
    "name" : "List Ledger Accounts",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"code\" : \"453\",\n    \"fully_qualified_name\" : \"Asset.Bank.Checking_Account\",\n    \"display_id\" : \"1-12345\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Main checking account\",\n    \"sub_account\" : false,\n    \"type\" : \"bank\",\n    \"last_reconciliation_date\" : \"2020-09-30\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"sub_type\" : \"CHECKING_ACCOUNT\",\n    \"current_balance\" : 20000,\n    \"currency\" : \"USD\",\n    \"categories\" : [ {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    } ],\n    \"id\" : \"12345\",\n    \"opening_balance\" : 75000,\n    \"bank_account\" : {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    },\n    \"level\" : 1,\n    \"active\" : true,\n    \"classification\" : \"asset\",\n    \"created_by\" : \"12345\",\n    \"parent_account\" : {\n      \"display_id\" : \"1-1100\",\n      \"name\" : \"Bank Accounts\",\n      \"id\" : \"12345\"\n    },\n    \"tax_type\" : \"NONE\",\n    \"sub_accounts\" : [ {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    } ],\n    \"nominal_code\" : \"N091\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Bank account\",\n    \"updated_by\" : \"12345\",\n    \"header\" : true,\n    \"status\" : \"active\"\n  }, {\n    \"code\" : \"453\",\n    \"fully_qualified_name\" : \"Asset.Bank.Checking_Account\",\n    \"display_id\" : \"1-12345\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Main checking account\",\n    \"sub_account\" : false,\n    \"type\" : \"bank\",\n    \"last_reconciliation_date\" : \"2020-09-30\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"sub_type\" : \"CHECKING_ACCOUNT\",\n    \"current_balance\" : 20000,\n    \"currency\" : \"USD\",\n    \"categories\" : [ {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    } ],\n    \"id\" : \"12345\",\n    \"opening_balance\" : 75000,\n    \"bank_account\" : {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    },\n    \"level\" : 1,\n    \"active\" : true,\n    \"classification\" : \"asset\",\n    \"created_by\" : \"12345\",\n    \"parent_account\" : {\n      \"display_id\" : \"1-1100\",\n      \"name\" : \"Bank Accounts\",\n      \"id\" : \"12345\"\n    },\n    \"tax_type\" : \"NONE\",\n    \"sub_accounts\" : [ {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    } ],\n    \"nominal_code\" : \"N091\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Bank account\",\n    \"updated_by\" : \"12345\",\n    \"header\" : true,\n    \"status\" : \"active\"\n  }, {\n    \"code\" : \"453\",\n    \"fully_qualified_name\" : \"Asset.Bank.Checking_Account\",\n    \"display_id\" : \"1-12345\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Main checking account\",\n    \"sub_account\" : false,\n    \"type\" : \"bank\",\n    \"last_reconciliation_date\" : \"2020-09-30\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"sub_type\" : \"CHECKING_ACCOUNT\",\n    \"current_balance\" : 20000,\n    \"currency\" : \"USD\",\n    \"categories\" : [ {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    } ],\n    \"id\" : \"12345\",\n    \"opening_balance\" : 75000,\n    \"bank_account\" : {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    },\n    \"level\" : 1,\n    \"active\" : true,\n    \"classification\" : \"asset\",\n    \"created_by\" : \"12345\",\n    \"parent_account\" : {\n      \"display_id\" : \"1-1100\",\n      \"name\" : \"Bank Accounts\",\n      \"id\" : \"12345\"\n    },\n    \"tax_type\" : \"NONE\",\n    \"sub_accounts\" : [ {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    } ],\n    \"nominal_code\" : \"N091\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Bank account\",\n    \"updated_by\" : \"12345\",\n    \"header\" : true,\n    \"status\" : \"active\"\n  }, {\n    \"code\" : \"453\",\n    \"fully_qualified_name\" : \"Asset.Bank.Checking_Account\",\n    \"display_id\" : \"1-12345\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Main checking account\",\n    \"sub_account\" : false,\n    \"type\" : \"bank\",\n    \"last_reconciliation_date\" : \"2020-09-30\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"sub_type\" : \"CHECKING_ACCOUNT\",\n    \"current_balance\" : 20000,\n    \"currency\" : \"USD\",\n    \"categories\" : [ {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    } ],\n    \"id\" : \"12345\",\n    \"opening_balance\" : 75000,\n    \"bank_account\" : {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    },\n    \"level\" : 1,\n    \"active\" : true,\n    \"classification\" : \"asset\",\n    \"created_by\" : \"12345\",\n    \"parent_account\" : {\n      \"display_id\" : \"1-1100\",\n      \"name\" : \"Bank Accounts\",\n      \"id\" : \"12345\"\n    },\n    \"tax_type\" : \"NONE\",\n    \"sub_accounts\" : [ {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    } ],\n    \"nominal_code\" : \"N091\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Bank account\",\n    \"updated_by\" : \"12345\",\n    \"header\" : true,\n    \"status\" : \"active\"\n  }, {\n    \"code\" : \"453\",\n    \"fully_qualified_name\" : \"Asset.Bank.Checking_Account\",\n    \"display_id\" : \"1-12345\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Main checking account\",\n    \"sub_account\" : false,\n    \"type\" : \"bank\",\n    \"last_reconciliation_date\" : \"2020-09-30\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"sub_type\" : \"CHECKING_ACCOUNT\",\n    \"current_balance\" : 20000,\n    \"currency\" : \"USD\",\n    \"categories\" : [ {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    } ],\n    \"id\" : \"12345\",\n    \"opening_balance\" : 75000,\n    \"bank_account\" : {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    },\n    \"level\" : 1,\n    \"active\" : true,\n    \"classification\" : \"asset\",\n    \"created_by\" : \"12345\",\n    \"parent_account\" : {\n      \"display_id\" : \"1-1100\",\n      \"name\" : \"Bank Accounts\",\n      \"id\" : \"12345\"\n    },\n    \"tax_type\" : \"NONE\",\n    \"sub_accounts\" : [ {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    } ],\n    \"nominal_code\" : \"N091\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Bank account\",\n    \"updated_by\" : \"12345\",\n    \"header\" : true,\n    \"status\" : \"active\"\n  }, {\n    \"code\" : \"453\",\n    \"fully_qualified_name\" : \"Asset.Bank.Checking_Account\",\n    \"display_id\" : \"1-12345\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Main checking account\",\n    \"sub_account\" : false,\n    \"type\" : \"bank\",\n    \"last_reconciliation_date\" : \"2020-09-30\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"sub_type\" : \"CHECKING_ACCOUNT\",\n    \"current_balance\" : 20000,\n    \"currency\" : \"USD\",\n    \"categories\" : [ {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    } ],\n    \"id\" : \"12345\",\n    \"opening_balance\" : 75000,\n    \"bank_account\" : {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    },\n    \"level\" : 1,\n    \"active\" : true,\n    \"classification\" : \"asset\",\n    \"created_by\" : \"12345\",\n    \"parent_account\" : {\n      \"display_id\" : \"1-1100\",\n      \"name\" : \"Bank Accounts\",\n      \"id\" : \"12345\"\n    },\n    \"tax_type\" : \"NONE\",\n    \"sub_accounts\" : [ {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    } ],\n    \"nominal_code\" : \"N091\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Bank account\",\n    \"updated_by\" : \"12345\",\n    \"header\" : true,\n    \"status\" : \"active\"\n  }, {\n    \"code\" : \"453\",\n    \"fully_qualified_name\" : \"Asset.Bank.Checking_Account\",\n    \"display_id\" : \"1-12345\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Main checking account\",\n    \"sub_account\" : false,\n    \"type\" : \"bank\",\n    \"last_reconciliation_date\" : \"2020-09-30\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"sub_type\" : \"CHECKING_ACCOUNT\",\n    \"current_balance\" : 20000,\n    \"currency\" : \"USD\",\n    \"categories\" : [ {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    } ],\n    \"id\" : \"12345\",\n    \"opening_balance\" : 75000,\n    \"bank_account\" : {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    },\n    \"level\" : 1,\n    \"active\" : true,\n    \"classification\" : \"asset\",\n    \"created_by\" : \"12345\",\n    \"parent_account\" : {\n      \"display_id\" : \"1-1100\",\n      \"name\" : \"Bank Accounts\",\n      \"id\" : \"12345\"\n    },\n    \"tax_type\" : \"NONE\",\n    \"sub_accounts\" : [ {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    } ],\n    \"nominal_code\" : \"N091\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Bank account\",\n    \"updated_by\" : \"12345\",\n    \"header\" : true,\n    \"status\" : \"active\"\n  }, {\n    \"code\" : \"453\",\n    \"fully_qualified_name\" : \"Asset.Bank.Checking_Account\",\n    \"display_id\" : \"1-12345\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Main checking account\",\n    \"sub_account\" : false,\n    \"type\" : \"bank\",\n    \"last_reconciliation_date\" : \"2020-09-30\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"sub_type\" : \"CHECKING_ACCOUNT\",\n    \"current_balance\" : 20000,\n    \"currency\" : \"USD\",\n    \"categories\" : [ {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    } ],\n    \"id\" : \"12345\",\n    \"opening_balance\" : 75000,\n    \"bank_account\" : {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    },\n    \"level\" : 1,\n    \"active\" : true,\n    \"classification\" : \"asset\",\n    \"created_by\" : \"12345\",\n    \"parent_account\" : {\n      \"display_id\" : \"1-1100\",\n      \"name\" : \"Bank Accounts\",\n      \"id\" : \"12345\"\n    },\n    \"tax_type\" : \"NONE\",\n    \"sub_accounts\" : [ {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    } ],\n    \"nominal_code\" : \"N091\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Bank account\",\n    \"updated_by\" : \"12345\",\n    \"header\" : true,\n    \"status\" : \"active\"\n  } ],\n  \"resource\" : \"ledger-accounts\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"xero\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "42364daa-f045-4d03-95a4-64c232fa2f3a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.967492Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/LedgerAccount"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "ledger-accounts",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetLedgerAccountsResponse",
            "x-graphql-type-name" : "LedgerAccountList"
          }
        }
      }
    },
    "insertionIndex" : 125
  }, {
    "id" : "9ea6389b-32e5-4040-af69-ecbd7080c755",
    "name" : "Update Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/6e6f",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9ea6389b-32e5-4040-af69-ecbd7080c755",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.96642Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 126
  }, {
    "id" : "ed415598-f41e-478e-8f71-1be5296f3807",
    "name" : "Update Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/p60p",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ed415598-f41e-478e-8f71-1be5296f3807",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.966266Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 127
  }, {
    "id" : "f4308f3e-6966-4af6-8aaf-98ecfb9bb5d0",
    "name" : "Update Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/zlv7",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f4308f3e-6966-4af6-8aaf-98ecfb9bb5d0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.966087Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 128
  }, {
    "id" : "42dd623c-fb46-4772-87aa-a5b6c5451ca5",
    "name" : "Update Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/e43f",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "42dd623c-fb46-4772-87aa-a5b6c5451ca5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.965935Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 129
  }, {
    "id" : "3e563378-fd15-4a84-aab3-503c78fba587",
    "name" : "Update Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/1378",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3e563378-fd15-4a84-aab3-503c78fba587",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.965791Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 130
  }, {
    "id" : "d70ddd1f-d3b0-49eb-8548-221e9e160096",
    "name" : "Update Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/2fh2",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"journal-entries\",\n  \"service\" : \"quickbooks\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d70ddd1f-d3b0-49eb-8548-221e9e160096",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.965627Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "journal-entries",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "quickbooks",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 131
  }, {
    "id" : "acab4a04-258d-4f74-ab4b-326b75712f32",
    "name" : "Get Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/k316",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "acab4a04-258d-4f74-ab4b-326b75712f32",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.965449Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 132
  }, {
    "id" : "4de00b1e-6353-4627-b22b-539c22fd2ff2",
    "name" : "Get Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/3n72",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4de00b1e-6353-4627-b22b-539c22fd2ff2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.965303Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 133
  }, {
    "id" : "2e389108-c9c4-42fa-af40-db4079dcf488",
    "name" : "Get Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/55r9",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2e389108-c9c4-42fa-af40-db4079dcf488",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.965127Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 134
  }, {
    "id" : "0b318008-4fb5-472f-bb1e-82cedd8de519",
    "name" : "Get Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/pyz9",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0b318008-4fb5-472f-bb1e-82cedd8de519",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.964978Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 135
  }, {
    "id" : "fcb7a351-f8c8-4b34-b0aa-797a20735c83",
    "name" : "Get Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/2i5e",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fcb7a351-f8c8-4b34-b0aa-797a20735c83",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.964824Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 136
  }, {
    "id" : "6c6c385e-5118-4735-9565-ef4af9973225",
    "name" : "Get Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/375j",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"memo\" : \"Thank you for your business and have a great day!\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    } ],\n    \"title\" : \"Purchase Invoice-Inventory (USD): 2019/02/01 Batch Summary Entry\",\n    \"created_by\" : \"12345\",\n    \"currency_rate\" : 0.69,\n    \"journal_symbol\" : \"IND\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"currency\" : \"USD\",\n    \"id\" : \"12345\",\n    \"posted_at\" : \"2020-09-30T07:43:32.000Z\"\n  },\n  \"resource\" : \"journal-entries\",\n  \"service\" : \"quickbooks\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6c6c385e-5118-4735-9565-ef4af9973225",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.964654Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/JournalEntry"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "journal-entries",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "quickbooks",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-graphql-type-name" : "JournalEntry"
          }
        }
      }
    },
    "insertionIndex" : 137
  }, {
    "id" : "d90bdcc8-bb5d-4534-8004-06d25dd262ed",
    "name" : "Delete Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/8x3c",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d90bdcc8-bb5d-4534-8004-06d25dd262ed",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.964181Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 138
  }, {
    "id" : "5cf73388-d1ef-4882-88d4-f022e2cc352e",
    "name" : "Delete Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/x3e2",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5cf73388-d1ef-4882-88d4-f022e2cc352e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.964033Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 139
  }, {
    "id" : "8a0fa775-b5d3-445d-b229-9abcae054b2c",
    "name" : "Delete Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/9q1y",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8a0fa775-b5d3-445d-b229-9abcae054b2c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.963865Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 140
  }, {
    "id" : "541aff62-1904-4177-bfe4-546956f86f46",
    "name" : "Delete Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/90b1",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "541aff62-1904-4177-bfe4-546956f86f46",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.963721Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 141
  }, {
    "id" : "5b8a7e3f-5d53-4f1b-9823-e3d1fafe2aa7",
    "name" : "Delete Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/5zat",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5b8a7e3f-5d53-4f1b-9823-e3d1fafe2aa7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.963582Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 142
  }, {
    "id" : "5e955735-d1ee-4555-9d45-acb6006537b2",
    "name" : "Delete Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/g6nk",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"journal-entries\",\n  \"service\" : \"quickbooks\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5e955735-d1ee-4555-9d45-acb6006537b2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.963418Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "journal-entries",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "quickbooks",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 143
  }, {
    "id" : "c41d6c48-85b0-422f-88c8-2f2076d4dc00",
    "name" : "Create Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c41d6c48-85b0-422f-88c8-2f2076d4dc00",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.963233Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 144
  }, {
    "id" : "67b3eb1c-5976-47fd-9f3a-cf30f139fa80",
    "name" : "Create Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "67b3eb1c-5976-47fd-9f3a-cf30f139fa80",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.963159Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 145
  }, {
    "id" : "f42c17f1-0887-47dd-bafc-e779ad7f031d",
    "name" : "Create Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f42c17f1-0887-47dd-bafc-e779ad7f031d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.963063Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 146
  }, {
    "id" : "58d2c71e-a908-4fbb-b4e2-e5d53ac2787c",
    "name" : "Create Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "58d2c71e-a908-4fbb-b4e2-e5d53ac2787c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.962985Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 147
  }, {
    "id" : "01229393-165f-43d5-9cad-2b284163a00b",
    "name" : "Create Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "01229393-165f-43d5-9cad-2b284163a00b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.962907Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 148
  }, {
    "id" : "63f0ab65-72fc-4e30-9eeb-01f875db4313",
    "name" : "Create Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"journal-entries\",\n  \"service\" : \"quickbooks\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "63f0ab65-72fc-4e30-9eeb-01f875db4313",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.962811Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "journal-entries",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "quickbooks",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 149
  }, {
    "id" : "777119c1-1906-4fc0-ae7f-ffdfa71d9836",
    "name" : "List Journal Entries",
    "request" : {
      "urlPath" : "/accounting/journal-entries",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "777119c1-1906-4fc0-ae7f-ffdfa71d9836",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.962696Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 150
  }, {
    "id" : "c2063031-d729-4407-97cc-e4560845eac0",
    "name" : "List Journal Entries",
    "request" : {
      "urlPath" : "/accounting/journal-entries",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c2063031-d729-4407-97cc-e4560845eac0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.962602Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 151
  }, {
    "id" : "a2b4a70b-f64b-423e-9754-129be62413f9",
    "name" : "List Journal Entries",
    "request" : {
      "urlPath" : "/accounting/journal-entries",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a2b4a70b-f64b-423e-9754-129be62413f9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.962479Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 152
  }, {
    "id" : "dbcd0262-fd35-492c-9930-b28f1c951dda",
    "name" : "List Journal Entries",
    "request" : {
      "urlPath" : "/accounting/journal-entries",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dbcd0262-fd35-492c-9930-b28f1c951dda",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.962385Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 153
  }, {
    "id" : "85aaaf3a-02ae-496e-a04a-3f45a8d623b0",
    "name" : "List Journal Entries",
    "request" : {
      "urlPath" : "/accounting/journal-entries",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "85aaaf3a-02ae-496e-a04a-3f45a8d623b0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.962288Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 154
  }, {
    "id" : "e777e19c-4620-4d77-a793-d50cfdbecb7f",
    "name" : "List Journal Entries",
    "request" : {
      "urlPath" : "/accounting/journal-entries",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"memo\" : \"Thank you for your business and have a great day!\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    } ],\n    \"title\" : \"Purchase Invoice-Inventory (USD): 2019/02/01 Batch Summary Entry\",\n    \"created_by\" : \"12345\",\n    \"currency_rate\" : 0.69,\n    \"journal_symbol\" : \"IND\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"currency\" : \"USD\",\n    \"id\" : \"12345\",\n    \"posted_at\" : \"2020-09-30T07:43:32.000Z\"\n  }, {\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"memo\" : \"Thank you for your business and have a great day!\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    } ],\n    \"title\" : \"Purchase Invoice-Inventory (USD): 2019/02/01 Batch Summary Entry\",\n    \"created_by\" : \"12345\",\n    \"currency_rate\" : 0.69,\n    \"journal_symbol\" : \"IND\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"currency\" : \"USD\",\n    \"id\" : \"12345\",\n    \"posted_at\" : \"2020-09-30T07:43:32.000Z\"\n  }, {\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"memo\" : \"Thank you for your business and have a great day!\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    } ],\n    \"title\" : \"Purchase Invoice-Inventory (USD): 2019/02/01 Batch Summary Entry\",\n    \"created_by\" : \"12345\",\n    \"currency_rate\" : 0.69,\n    \"journal_symbol\" : \"IND\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"currency\" : \"USD\",\n    \"id\" : \"12345\",\n    \"posted_at\" : \"2020-09-30T07:43:32.000Z\"\n  }, {\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"memo\" : \"Thank you for your business and have a great day!\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    } ],\n    \"title\" : \"Purchase Invoice-Inventory (USD): 2019/02/01 Batch Summary Entry\",\n    \"created_by\" : \"12345\",\n    \"currency_rate\" : 0.69,\n    \"journal_symbol\" : \"IND\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"currency\" : \"USD\",\n    \"id\" : \"12345\",\n    \"posted_at\" : \"2020-09-30T07:43:32.000Z\"\n  } ],\n  \"resource\" : \"journal-entries\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"quickbooks\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e777e19c-4620-4d77-a793-d50cfdbecb7f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.962151Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/JournalEntry"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "journal-entries",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "quickbooks",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-graphql-type-name" : "JournalEntryList"
          }
        }
      }
    },
    "insertionIndex" : 155
  }, {
    "id" : "e820787a-9325-43a5-8031-5b38b0189168",
    "name" : "Update Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/927f",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e820787a-9325-43a5-8031-5b38b0189168",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.961159Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 156
  }, {
    "id" : "c1b376e6-e19e-4802-8c5b-51f5ede584da",
    "name" : "Update Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/285t",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c1b376e6-e19e-4802-8c5b-51f5ede584da",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.960998Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 157
  }, {
    "id" : "3c101ced-9605-4221-a33d-ff1f3bac4566",
    "name" : "Update Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/hym9",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3c101ced-9605-4221-a33d-ff1f3bac4566",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.960809Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 158
  }, {
    "id" : "68e6fa5c-fe77-41a9-bf8d-953ef7900708",
    "name" : "Update Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/5n67",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "68e6fa5c-fe77-41a9-bf8d-953ef7900708",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.960653Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 159
  }, {
    "id" : "4403a2cb-f6f0-4815-9b3b-de0f44a8db2d",
    "name" : "Update Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/uq52",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4403a2cb-f6f0-4815-9b3b-de0f44a8db2d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.960437Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 160
  }, {
    "id" : "fab34ab3-d51f-4ed4-b495-73955ff7ad54",
    "name" : "Update Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/yz0t",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"invoices\",\n  \"service\" : \"xero\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fab34ab3-d51f-4ed4-b495-73955ff7ad54",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.960188Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/InvoiceResponse"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "invoices",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateInvoiceResponse"
          }
        }
      }
    },
    "insertionIndex" : 161
  }, {
    "id" : "98d633e7-c7ba-4a6f-9e76-8b97894ade66",
    "name" : "Get Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/0n38",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "98d633e7-c7ba-4a6f-9e76-8b97894ade66",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.960013Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 162
  }, {
    "id" : "64ebdfcf-a717-49a0-a95b-4e45375d2cb3",
    "name" : "Get Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/47k4",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "64ebdfcf-a717-49a0-a95b-4e45375d2cb3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.95987Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 163
  }, {
    "id" : "422c02cc-b78a-455a-8e48-957343f8823d",
    "name" : "Get Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/x14c",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "422c02cc-b78a-455a-8e48-957343f8823d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.959703Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 164
  }, {
    "id" : "ed644f1e-59b9-4623-bda2-59587d9f1ebf",
    "name" : "Get Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/330h",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ed644f1e-59b9-4623-bda2-59587d9f1ebf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.959559Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 165
  }, {
    "id" : "ba8f04e4-84bc-4360-b1d5-424a80d53caf",
    "name" : "Get Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/q0kq",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ba8f04e4-84bc-4360-b1d5-424a80d53caf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.95942Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 166
  }, {
    "id" : "26547f1a-2d4a-4514-92cb-56ea4e9015d3",
    "name" : "Get Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/0g70",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"billing_address\" : {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    },\n    \"discount_percentage\" : 5.5,\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"customer_memo\" : \"Thank you for your business and have a great day!\",\n    \"type\" : \"service\",\n    \"invoice_date\" : \"2020-09-30\",\n    \"reference\" : \"123456\",\n    \"number\" : \"OIT00546\",\n    \"currency_rate\" : 0.69,\n    \"po_number\" : \"90000117\",\n    \"total\" : 27500,\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"terms\" : \"Net 30 days\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"shipping_address\" : {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    },\n    \"due_date\" : \"2020-09-30\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"deposit\" : 0,\n    \"template_id\" : \"123456\",\n    \"invoice_sent\" : true,\n    \"source_document_url\" : \"https://www.invoicesolution.com/invoice/123456\",\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"draft\"\n  },\n  \"resource\" : \"invoices\",\n  \"service\" : \"xero\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "26547f1a-2d4a-4514-92cb-56ea4e9015d3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.959242Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Invoice"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "invoices",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetInvoiceResponse",
            "x-graphql-type-name" : "Invoice"
          }
        }
      }
    },
    "insertionIndex" : 167
  }, {
    "id" : "0110ca11-bb96-40d6-904e-b9fba9004503",
    "name" : "Delete Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/qxxk",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0110ca11-bb96-40d6-904e-b9fba9004503",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.958381Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 168
  }, {
    "id" : "163f652f-0103-495f-be7e-914a90d87573",
    "name" : "Delete Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/r0w3",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "163f652f-0103-495f-be7e-914a90d87573",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.95823Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 169
  }, {
    "id" : "2fd52140-c514-4dd3-b012-4a4db982d1ca",
    "name" : "Delete Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/wrwd",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2fd52140-c514-4dd3-b012-4a4db982d1ca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.958047Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 170
  }, {
    "id" : "2ca19a23-9644-4d7e-ac41-6d2d4a85885c",
    "name" : "Delete Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/d059",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2ca19a23-9644-4d7e-ac41-6d2d4a85885c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.957892Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 171
  }, {
    "id" : "eebc62cb-4c67-44c7-b245-25810c3ad5df",
    "name" : "Delete Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/u1j2",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eebc62cb-4c67-44c7-b245-25810c3ad5df",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.957736Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 172
  }, {
    "id" : "3c60518c-f854-4f0a-aa75-79960a9380ff",
    "name" : "Delete Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/6899",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"invoices\",\n  \"service\" : \"xero\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3c60518c-f854-4f0a-aa75-79960a9380ff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.957538Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/InvoiceResponse"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "invoices",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "DeleteInvoiceResponse"
          }
        }
      }
    },
    "insertionIndex" : 173
  }, {
    "id" : "c00103db-65f9-4cc2-8934-e8f4b4460c60",
    "name" : "Create Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c00103db-65f9-4cc2-8934-e8f4b4460c60",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.957183Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 174
  }, {
    "id" : "cd8d9453-6ece-47cd-b7a6-2785b13543f4",
    "name" : "Create Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cd8d9453-6ece-47cd-b7a6-2785b13543f4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.95706Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 175
  }, {
    "id" : "314f9496-4b66-4b59-9ee0-d59594a64101",
    "name" : "Create Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "314f9496-4b66-4b59-9ee0-d59594a64101",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.956949Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 176
  }, {
    "id" : "dbe7dc07-2010-4a60-b051-5c6922c8ceac",
    "name" : "Create Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dbe7dc07-2010-4a60-b051-5c6922c8ceac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.956842Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 177
  }, {
    "id" : "f9cab22b-334e-4448-97b7-2148bf3e0973",
    "name" : "Create Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f9cab22b-334e-4448-97b7-2148bf3e0973",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.956765Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 178
  }, {
    "id" : "c65caf1e-804c-4272-bd0e-9f9f8c00a649",
    "name" : "Create Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"invoices\",\n  \"service\" : \"xero\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c65caf1e-804c-4272-bd0e-9f9f8c00a649",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.956664Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/InvoiceResponse"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "invoices",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateInvoiceResponse"
          }
        }
      }
    },
    "insertionIndex" : 179
  }, {
    "id" : "15462862-07ea-43f3-84ba-6b8677ad1f90",
    "name" : "List Invoices",
    "request" : {
      "urlPath" : "/accounting/invoices",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "15462862-07ea-43f3-84ba-6b8677ad1f90",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.956533Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 180
  }, {
    "id" : "087e25eb-b8a5-4600-8c53-5044951a331c",
    "name" : "List Invoices",
    "request" : {
      "urlPath" : "/accounting/invoices",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "087e25eb-b8a5-4600-8c53-5044951a331c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.956438Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 181
  }, {
    "id" : "a0c55be0-6fb4-4627-bf0a-5a3eedc2f12c",
    "name" : "List Invoices",
    "request" : {
      "urlPath" : "/accounting/invoices",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a0c55be0-6fb4-4627-bf0a-5a3eedc2f12c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.956313Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 182
  }, {
    "id" : "0670909f-c47a-468e-9c28-895bc32965fa",
    "name" : "List Invoices",
    "request" : {
      "urlPath" : "/accounting/invoices",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0670909f-c47a-468e-9c28-895bc32965fa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.956223Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 183
  }, {
    "id" : "a3d1f12b-6ef5-4514-bf01-13c03c6df1cd",
    "name" : "List Invoices",
    "request" : {
      "urlPath" : "/accounting/invoices",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a3d1f12b-6ef5-4514-bf01-13c03c6df1cd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.956126Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 184
  }, {
    "id" : "7cff4400-98d1-4fb4-bff4-ff1750200ee2",
    "name" : "List Invoices",
    "request" : {
      "urlPath" : "/accounting/invoices",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"billing_address\" : {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    },\n    \"discount_percentage\" : 5.5,\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"customer_memo\" : \"Thank you for your business and have a great day!\",\n    \"type\" : \"service\",\n    \"invoice_date\" : \"2020-09-30\",\n    \"reference\" : \"123456\",\n    \"number\" : \"OIT00546\",\n    \"currency_rate\" : 0.69,\n    \"po_number\" : \"90000117\",\n    \"total\" : 27500,\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"terms\" : \"Net 30 days\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"shipping_address\" : {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    },\n    \"due_date\" : \"2020-09-30\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"deposit\" : 0,\n    \"template_id\" : \"123456\",\n    \"invoice_sent\" : true,\n    \"source_document_url\" : \"https://www.invoicesolution.com/invoice/123456\",\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"draft\"\n  }, {\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"billing_address\" : {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    },\n    \"discount_percentage\" : 5.5,\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"customer_memo\" : \"Thank you for your business and have a great day!\",\n    \"type\" : \"service\",\n    \"invoice_date\" : \"2020-09-30\",\n    \"reference\" : \"123456\",\n    \"number\" : \"OIT00546\",\n    \"currency_rate\" : 0.69,\n    \"po_number\" : \"90000117\",\n    \"total\" : 27500,\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"terms\" : \"Net 30 days\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"shipping_address\" : {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    },\n    \"due_date\" : \"2020-09-30\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"deposit\" : 0,\n    \"template_id\" : \"123456\",\n    \"invoice_sent\" : true,\n    \"source_document_url\" : \"https://www.invoicesolution.com/invoice/123456\",\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"draft\"\n  }, {\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"billing_address\" : {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    },\n    \"discount_percentage\" : 5.5,\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"customer_memo\" : \"Thank you for your business and have a great day!\",\n    \"type\" : \"service\",\n    \"invoice_date\" : \"2020-09-30\",\n    \"reference\" : \"123456\",\n    \"number\" : \"OIT00546\",\n    \"currency_rate\" : 0.69,\n    \"po_number\" : \"90000117\",\n    \"total\" : 27500,\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"terms\" : \"Net 30 days\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"shipping_address\" : {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    },\n    \"due_date\" : \"2020-09-30\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"deposit\" : 0,\n    \"template_id\" : \"123456\",\n    \"invoice_sent\" : true,\n    \"source_document_url\" : \"https://www.invoicesolution.com/invoice/123456\",\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"draft\"\n  }, {\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"billing_address\" : {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    },\n    \"discount_percentage\" : 5.5,\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"customer_memo\" : \"Thank you for your business and have a great day!\",\n    \"type\" : \"service\",\n    \"invoice_date\" : \"2020-09-30\",\n    \"reference\" : \"123456\",\n    \"number\" : \"OIT00546\",\n    \"currency_rate\" : 0.69,\n    \"po_number\" : \"90000117\",\n    \"total\" : 27500,\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"terms\" : \"Net 30 days\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"shipping_address\" : {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    },\n    \"due_date\" : \"2020-09-30\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"deposit\" : 0,\n    \"template_id\" : \"123456\",\n    \"invoice_sent\" : true,\n    \"source_document_url\" : \"https://www.invoicesolution.com/invoice/123456\",\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"draft\"\n  }, {\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"billing_address\" : {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    },\n    \"discount_percentage\" : 5.5,\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"customer_memo\" : \"Thank you for your business and have a great day!\",\n    \"type\" : \"service\",\n    \"invoice_date\" : \"2020-09-30\",\n    \"reference\" : \"123456\",\n    \"number\" : \"OIT00546\",\n    \"currency_rate\" : 0.69,\n    \"po_number\" : \"90000117\",\n    \"total\" : 27500,\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"terms\" : \"Net 30 days\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"shipping_address\" : {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    },\n    \"due_date\" : \"2020-09-30\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"deposit\" : 0,\n    \"template_id\" : \"123456\",\n    \"invoice_sent\" : true,\n    \"source_document_url\" : \"https://www.invoicesolution.com/invoice/123456\",\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"draft\"\n  }, {\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"billing_address\" : {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    },\n    \"discount_percentage\" : 5.5,\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"customer_memo\" : \"Thank you for your business and have a great day!\",\n    \"type\" : \"service\",\n    \"invoice_date\" : \"2020-09-30\",\n    \"reference\" : \"123456\",\n    \"number\" : \"OIT00546\",\n    \"currency_rate\" : 0.69,\n    \"po_number\" : \"90000117\",\n    \"total\" : 27500,\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"terms\" : \"Net 30 days\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"shipping_address\" : {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    },\n    \"due_date\" : \"2020-09-30\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"deposit\" : 0,\n    \"template_id\" : \"123456\",\n    \"invoice_sent\" : true,\n    \"source_document_url\" : \"https://www.invoicesolution.com/invoice/123456\",\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"draft\"\n  }, {\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"billing_address\" : {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    },\n    \"discount_percentage\" : 5.5,\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"customer_memo\" : \"Thank you for your business and have a great day!\",\n    \"type\" : \"service\",\n    \"invoice_date\" : \"2020-09-30\",\n    \"reference\" : \"123456\",\n    \"number\" : \"OIT00546\",\n    \"currency_rate\" : 0.69,\n    \"po_number\" : \"90000117\",\n    \"total\" : 27500,\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"terms\" : \"Net 30 days\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"shipping_address\" : {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    },\n    \"due_date\" : \"2020-09-30\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"deposit\" : 0,\n    \"template_id\" : \"123456\",\n    \"invoice_sent\" : true,\n    \"source_document_url\" : \"https://www.invoicesolution.com/invoice/123456\",\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"draft\"\n  } ],\n  \"resource\" : \"invoices\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"xero\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7cff4400-98d1-4fb4-bff4-ff1750200ee2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.955988Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/Invoice"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "invoices",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetInvoicesResponse",
            "x-graphql-type-name" : "InvoiceList"
          }
        }
      }
    },
    "insertionIndex" : 185
  }, {
    "id" : "e20d8146-63ae-4cd9-9f0a-0e9d24aa24c5",
    "name" : "Update Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/353d",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e20d8146-63ae-4cd9-9f0a-0e9d24aa24c5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.95336Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 186
  }, {
    "id" : "0d6654a5-74fb-4c10-9e88-6cff2ef35913",
    "name" : "Update Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/u8s7",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0d6654a5-74fb-4c10-9e88-6cff2ef35913",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.953216Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 187
  }, {
    "id" : "3c3515eb-253a-4672-811b-9ebbd686131d",
    "name" : "Update Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/24ga",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3c3515eb-253a-4672-811b-9ebbd686131d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.953051Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 188
  }, {
    "id" : "9e42ddb6-643d-4d33-936e-8fe957645962",
    "name" : "Update Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/bph6",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9e42ddb6-643d-4d33-936e-8fe957645962",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.952907Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 189
  }, {
    "id" : "ec1046f3-426b-4e4a-88dc-f05a77193c13",
    "name" : "Update Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/xb8i",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ec1046f3-426b-4e4a-88dc-f05a77193c13",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.952772Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 190
  }, {
    "id" : "740ed39e-5c18-414a-856f-aeb42058406d",
    "name" : "Update Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/6wk7",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"invoice-items\",\n  \"service\" : \"xero\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "740ed39e-5c18-414a-856f-aeb42058406d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.952611Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "invoice-items",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateInvoiceItemsResponse"
          }
        }
      }
    },
    "insertionIndex" : 191
  }, {
    "id" : "8c82fad9-d85a-4f5c-a928-b008df9cb599",
    "name" : "Get Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/au0z",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8c82fad9-d85a-4f5c-a928-b008df9cb599",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.952432Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 192
  }, {
    "id" : "3a558f87-ab58-4c01-9437-f8946a1276f8",
    "name" : "Get Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/42l3",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3a558f87-ab58-4c01-9437-f8946a1276f8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.952287Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 193
  }, {
    "id" : "42e1de94-2b48-4bf3-b1d1-e46f4b241e47",
    "name" : "Get Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/8prh",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "42e1de94-2b48-4bf3-b1d1-e46f4b241e47",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.952128Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 194
  }, {
    "id" : "9d872765-1c72-43b9-8d8b-e4fa5e9d9c85",
    "name" : "Get Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/8v63",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9d872765-1c72-43b9-8d8b-e4fa5e9d9c85",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.951992Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 195
  }, {
    "id" : "cdad7ec4-ebf1-40a9-9030-2a6ed5cc52b4",
    "name" : "Get Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/4404",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cdad7ec4-ebf1-40a9-9030-2a6ed5cc52b4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.951847Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 196
  }, {
    "id" : "bc7ba3b4-46b2-42cb-9ed7-ce8667a289ff",
    "name" : "Get Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/4og5",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"sold\" : true,\n    \"code\" : \"120-C\",\n    \"quantity\" : 1,\n    \"purchase_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"sales_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"active\" : true,\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n    \"tracked\" : true,\n    \"type\" : \"inventory\",\n    \"unit_price\" : 27500.5,\n    \"created_by\" : \"12345\",\n    \"inventory_date\" : \"2020-10-30\",\n    \"asset_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"expense_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"purchased\" : true,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Model Y\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"123456\",\n    \"income_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    }\n  },\n  \"resource\" : \"invoice-items\",\n  \"service\" : \"xero\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bc7ba3b4-46b2-42cb-9ed7-ce8667a289ff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.951676Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/InvoiceItem"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "invoice-items",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetInvoiceItemResponse",
            "x-graphql-type-name" : "InvoiceItem"
          }
        }
      }
    },
    "insertionIndex" : 197
  }, {
    "id" : "e69726ca-babb-4e25-b989-24c7341705d5",
    "name" : "Delete Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/a59w",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e69726ca-babb-4e25-b989-24c7341705d5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.951362Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 198
  }, {
    "id" : "1c58d67d-3bc1-4285-a2ee-79f7ca0df297",
    "name" : "Delete Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/2gq7",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1c58d67d-3bc1-4285-a2ee-79f7ca0df297",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.951192Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 199
  }, {
    "id" : "8650c3ae-66d6-4272-a6e1-1983cf058249",
    "name" : "Delete Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/spn3",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8650c3ae-66d6-4272-a6e1-1983cf058249",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.951004Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 200
  }, {
    "id" : "68c1e60f-3ae3-464d-a660-54cf7f86f6b6",
    "name" : "Delete Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/i5j8",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "68c1e60f-3ae3-464d-a660-54cf7f86f6b6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.950849Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 201
  }, {
    "id" : "3640da84-96ba-478a-a8c3-e932054518d8",
    "name" : "Delete Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/ethc",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3640da84-96ba-478a-a8c3-e932054518d8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.950696Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 202
  }, {
    "id" : "5ab44e28-cc4d-4578-8015-9ca304a7f407",
    "name" : "Delete Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/yre6",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"tax-rates\",\n  \"service\" : \"xero\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5ab44e28-cc4d-4578-8015-9ca304a7f407",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.950494Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "tax-rates",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "DeleteTaxRateResponse"
          }
        }
      }
    },
    "insertionIndex" : 203
  }, {
    "id" : "238e9d3f-abf2-4fbc-9d74-4d4e249253e4",
    "name" : "Create Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "238e9d3f-abf2-4fbc-9d74-4d4e249253e4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.950264Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 204
  }, {
    "id" : "2c8c1a4b-0700-414f-ba4a-6aed230e1121",
    "name" : "Create Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2c8c1a4b-0700-414f-ba4a-6aed230e1121",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.950192Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 205
  }, {
    "id" : "bafdedc7-cce3-4032-88c7-6a88b95ee379",
    "name" : "Create Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bafdedc7-cce3-4032-88c7-6a88b95ee379",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.950094Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 206
  }, {
    "id" : "e19d2475-5233-4e9a-bf41-2f8dfbdbb6b8",
    "name" : "Create Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e19d2475-5233-4e9a-bf41-2f8dfbdbb6b8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.950021Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 207
  }, {
    "id" : "3aff072d-c2d8-44f8-9ddd-955d97c07531",
    "name" : "Create Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3aff072d-c2d8-44f8-9ddd-955d97c07531",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.949948Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 208
  }, {
    "id" : "f0cf78b4-08a9-4a58-a5b0-bd5adcb2b586",
    "name" : "Create Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"invoice-items\",\n  \"service\" : \"xero\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f0cf78b4-08a9-4a58-a5b0-bd5adcb2b586",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.949851Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "invoice-items",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateInvoiceItemResponse"
          }
        }
      }
    },
    "insertionIndex" : 209
  }, {
    "id" : "81f3c82f-4139-40ee-b58e-a7c0a92ee792",
    "name" : "List Invoice Items",
    "request" : {
      "urlPath" : "/accounting/invoice-items",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "81f3c82f-4139-40ee-b58e-a7c0a92ee792",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.949737Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 210
  }, {
    "id" : "7fa52814-e78b-4f8d-be28-c5dcc853103e",
    "name" : "List Invoice Items",
    "request" : {
      "urlPath" : "/accounting/invoice-items",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7fa52814-e78b-4f8d-be28-c5dcc853103e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.94965Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 211
  }, {
    "id" : "11ccbdc1-3de0-41f8-b69c-a0dbcd216aa7",
    "name" : "List Invoice Items",
    "request" : {
      "urlPath" : "/accounting/invoice-items",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "11ccbdc1-3de0-41f8-b69c-a0dbcd216aa7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.949532Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 212
  }, {
    "id" : "75fc7be5-a301-4a85-9c1d-4aca682c7a14",
    "name" : "List Invoice Items",
    "request" : {
      "urlPath" : "/accounting/invoice-items",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "75fc7be5-a301-4a85-9c1d-4aca682c7a14",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.949449Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 213
  }, {
    "id" : "cf5ee861-d163-4970-8786-cebb922f1966",
    "name" : "List Invoice Items",
    "request" : {
      "urlPath" : "/accounting/invoice-items",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cf5ee861-d163-4970-8786-cebb922f1966",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.949361Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 214
  }, {
    "id" : "709c3800-75eb-4d36-aa91-ff85bcbdcf72",
    "name" : "List Invoice Items",
    "request" : {
      "urlPath" : "/accounting/invoice-items",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"sold\" : true,\n    \"code\" : \"120-C\",\n    \"quantity\" : 1,\n    \"purchase_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"sales_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"active\" : true,\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n    \"tracked\" : true,\n    \"type\" : \"inventory\",\n    \"unit_price\" : 27500.5,\n    \"created_by\" : \"12345\",\n    \"inventory_date\" : \"2020-10-30\",\n    \"asset_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"expense_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"purchased\" : true,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Model Y\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"123456\",\n    \"income_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    }\n  }, {\n    \"sold\" : true,\n    \"code\" : \"120-C\",\n    \"quantity\" : 1,\n    \"purchase_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"sales_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"active\" : true,\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n    \"tracked\" : true,\n    \"type\" : \"inventory\",\n    \"unit_price\" : 27500.5,\n    \"created_by\" : \"12345\",\n    \"inventory_date\" : \"2020-10-30\",\n    \"asset_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"expense_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"purchased\" : true,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Model Y\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"123456\",\n    \"income_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    }\n  }, {\n    \"sold\" : true,\n    \"code\" : \"120-C\",\n    \"quantity\" : 1,\n    \"purchase_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"sales_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"active\" : true,\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n    \"tracked\" : true,\n    \"type\" : \"inventory\",\n    \"unit_price\" : 27500.5,\n    \"created_by\" : \"12345\",\n    \"inventory_date\" : \"2020-10-30\",\n    \"asset_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"expense_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"purchased\" : true,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Model Y\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"123456\",\n    \"income_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    }\n  }, {\n    \"sold\" : true,\n    \"code\" : \"120-C\",\n    \"quantity\" : 1,\n    \"purchase_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"sales_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"active\" : true,\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n    \"tracked\" : true,\n    \"type\" : \"inventory\",\n    \"unit_price\" : 27500.5,\n    \"created_by\" : \"12345\",\n    \"inventory_date\" : \"2020-10-30\",\n    \"asset_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"expense_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"purchased\" : true,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Model Y\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"123456\",\n    \"income_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    }\n  }, {\n    \"sold\" : true,\n    \"code\" : \"120-C\",\n    \"quantity\" : 1,\n    \"purchase_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"sales_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"active\" : true,\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n    \"tracked\" : true,\n    \"type\" : \"inventory\",\n    \"unit_price\" : 27500.5,\n    \"created_by\" : \"12345\",\n    \"inventory_date\" : \"2020-10-30\",\n    \"asset_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"expense_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"purchased\" : true,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Model Y\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"123456\",\n    \"income_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    }\n  } ],\n  \"resource\" : \"invoice-items\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"xero\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "709c3800-75eb-4d36-aa91-ff85bcbdcf72",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.949248Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/InvoiceItem"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "invoice-items",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetInvoiceItemsResponse",
            "x-graphql-type-name" : "InvoiceItemList"
          }
        }
      }
    },
    "insertionIndex" : 215
  }, {
    "id" : "62094aee-0b42-46c8-b5cc-25a3a1ad5a3f",
    "name" : "Update Customer",
    "request" : {
      "urlPath" : "/accounting/customers/2a23",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "62094aee-0b42-46c8-b5cc-25a3a1ad5a3f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.948613Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 216
  }, {
    "id" : "5a1c056b-6ab2-4c93-ba5b-8b3f2fbc6cf1",
    "name" : "Update Customer",
    "request" : {
      "urlPath" : "/accounting/customers/4t5e",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5a1c056b-6ab2-4c93-ba5b-8b3f2fbc6cf1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.948465Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 217
  }, {
    "id" : "1e8d2170-4a91-400a-91a9-62ebdb3bb396",
    "name" : "Update Customer",
    "request" : {
      "urlPath" : "/accounting/customers/a01b",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1e8d2170-4a91-400a-91a9-62ebdb3bb396",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.948287Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 218
  }, {
    "id" : "9112e162-ca3e-442c-acaa-41eab1897701",
    "name" : "Update Customer",
    "request" : {
      "urlPath" : "/accounting/customers/07j0",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9112e162-ca3e-442c-acaa-41eab1897701",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.94814Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 219
  }, {
    "id" : "80b439b2-86de-402b-852b-7dee2998f56d",
    "name" : "Update Customer",
    "request" : {
      "urlPath" : "/accounting/customers/x9py",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "80b439b2-86de-402b-852b-7dee2998f56d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.947979Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 220
  }, {
    "id" : "9c5acff5-c8bb-4c03-9331-8b95dd33d143",
    "name" : "Update Customer",
    "request" : {
      "urlPath" : "/accounting/customers/62vw",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"customers\",\n  \"service\" : \"xero\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9c5acff5-c8bb-4c03-9331-8b95dd33d143",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.947809Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "customers",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateCustomerResponse"
          }
        }
      }
    },
    "insertionIndex" : 221
  }, {
    "id" : "9205598a-ff33-4edd-8df8-edc5ee25fb35",
    "name" : "Get Customer",
    "request" : {
      "urlPath" : "/accounting/customers/7yy9",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9205598a-ff33-4edd-8df8-edc5ee25fb35",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.947621Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 222
  }, {
    "id" : "740828cd-d41d-4c22-a8b2-091ff4a9b135",
    "name" : "Get Customer",
    "request" : {
      "urlPath" : "/accounting/customers/7lbu",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "740828cd-d41d-4c22-a8b2-091ff4a9b135",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.947469Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 223
  }, {
    "id" : "fa822906-01c6-400a-923e-c89db3a4e3cc",
    "name" : "Get Customer",
    "request" : {
      "urlPath" : "/accounting/customers/x0lt",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fa822906-01c6-400a-923e-c89db3a4e3cc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.947293Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 224
  }, {
    "id" : "6fb129bf-f03c-4243-855c-2fcbb4e82a4f",
    "name" : "Get Customer",
    "request" : {
      "urlPath" : "/accounting/customers/a84t",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6fb129bf-f03c-4243-855c-2fcbb4e82a4f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.947143Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 225
  }, {
    "id" : "dba2bd9f-3da2-4a0e-a875-ee203842056e",
    "name" : "Get Customer",
    "request" : {
      "urlPath" : "/accounting/customers/apz9",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dba2bd9f-3da2-4a0e-a875-ee203842056e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.94699Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 226
  }, {
    "id" : "6ff9be1f-e11b-4fdb-b990-457f9c62d3da",
    "name" : "Get Customer",
    "request" : {
      "urlPath" : "/accounting/customers/99j8",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"parent\" : {\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\"\n    },\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"notes\" : \"Some notes about this customer\",\n    \"display_id\" : \"EMP00101\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"project\" : false,\n    \"suffix\" : \"Jr.\",\n    \"title\" : \"CEO\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"tax_number\" : \"US123945459\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"first_name\" : \"Elon\",\n    \"individual\" : true,\n    \"last_name\" : \"Musk\",\n    \"display_name\" : \"Windsurf Shop\",\n    \"middle_name\" : \"D.\",\n    \"created_by\" : \"12345\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_name\" : \"SpaceX\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"bank_accounts\" : [ {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    } ],\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"status\" : \"active\"\n  },\n  \"resource\" : \"customers\",\n  \"service\" : \"xero\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6ff9be1f-e11b-4fdb-b990-457f9c62d3da",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.946805Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/AccountingCustomer"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "customers",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetCustomerResponse"
          }
        }
      }
    },
    "insertionIndex" : 227
  }, {
    "id" : "dcc7208a-8099-4174-8739-05826c69d355",
    "name" : "Delete Customer",
    "request" : {
      "urlPath" : "/accounting/customers/7vk5",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dcc7208a-8099-4174-8739-05826c69d355",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.946126Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 228
  }, {
    "id" : "ede2e036-a86b-4a71-9541-d9299fb95c1b",
    "name" : "Delete Customer",
    "request" : {
      "urlPath" : "/accounting/customers/b7n6",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ede2e036-a86b-4a71-9541-d9299fb95c1b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.945972Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 229
  }, {
    "id" : "5e104e0a-2b93-48c7-9c40-92f6fa823040",
    "name" : "Delete Customer",
    "request" : {
      "urlPath" : "/accounting/customers/9v0o",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5e104e0a-2b93-48c7-9c40-92f6fa823040",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.945799Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 230
  }, {
    "id" : "f25a96c7-87f7-4036-b81d-87ab1278a3c9",
    "name" : "Delete Customer",
    "request" : {
      "urlPath" : "/accounting/customers/6h7u",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f25a96c7-87f7-4036-b81d-87ab1278a3c9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.945654Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 231
  }, {
    "id" : "ba7ce21a-115b-464c-ac2b-5f6650978687",
    "name" : "Delete Customer",
    "request" : {
      "urlPath" : "/accounting/customers/35wu",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ba7ce21a-115b-464c-ac2b-5f6650978687",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.94549Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 232
  }, {
    "id" : "1334b9d0-d5b0-4d90-bd2c-6e42ee17c178",
    "name" : "Delete Customer",
    "request" : {
      "urlPath" : "/accounting/customers/905v",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"customers\",\n  \"service\" : \"xero\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1334b9d0-d5b0-4d90-bd2c-6e42ee17c178",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.945321Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "customers",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "DeleteCustomerResponse"
          }
        }
      }
    },
    "insertionIndex" : 233
  }, {
    "id" : "1ab3f51f-7f63-4ce2-9dca-de99d263af9a",
    "name" : "Create Customer",
    "request" : {
      "urlPath" : "/accounting/customers",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1ab3f51f-7f63-4ce2-9dca-de99d263af9a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.945078Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 234
  }, {
    "id" : "295ca779-54ad-45e7-8689-2a66d47d5284",
    "name" : "Create Customer",
    "request" : {
      "urlPath" : "/accounting/customers",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "295ca779-54ad-45e7-8689-2a66d47d5284",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.945004Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 235
  }, {
    "id" : "7caa075c-3d75-4c5b-abb4-87c70fcc1cd5",
    "name" : "Create Customer",
    "request" : {
      "urlPath" : "/accounting/customers",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7caa075c-3d75-4c5b-abb4-87c70fcc1cd5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.944906Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 236
  }, {
    "id" : "c51a028f-794c-4684-bfd1-9fe0ab0a8e54",
    "name" : "Create Customer",
    "request" : {
      "urlPath" : "/accounting/customers",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c51a028f-794c-4684-bfd1-9fe0ab0a8e54",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.944833Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 237
  }, {
    "id" : "126bf8a0-1aa8-423f-b02d-b6e412bcb56a",
    "name" : "Create Customer",
    "request" : {
      "urlPath" : "/accounting/customers",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "126bf8a0-1aa8-423f-b02d-b6e412bcb56a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.944757Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 238
  }, {
    "id" : "62c4d5d1-ca23-4554-852a-8d9aa4d1b7c7",
    "name" : "Create Customer",
    "request" : {
      "urlPath" : "/accounting/customers",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"customers\",\n  \"service\" : \"xero\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "62c4d5d1-ca23-4554-852a-8d9aa4d1b7c7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.944653Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "customers",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateCustomerResponse"
          }
        }
      }
    },
    "insertionIndex" : 239
  }, {
    "id" : "20115d97-dcf3-400f-a24d-afb01ee62aed",
    "name" : "List Customers",
    "request" : {
      "urlPath" : "/accounting/customers",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "20115d97-dcf3-400f-a24d-afb01ee62aed",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.944533Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 240
  }, {
    "id" : "5cd0c1da-c7d8-4e25-ae37-fc9957e20cd5",
    "name" : "List Customers",
    "request" : {
      "urlPath" : "/accounting/customers",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5cd0c1da-c7d8-4e25-ae37-fc9957e20cd5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.944441Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 241
  }, {
    "id" : "5db284c3-27ce-47c1-954f-642e4ef0ff08",
    "name" : "List Customers",
    "request" : {
      "urlPath" : "/accounting/customers",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5db284c3-27ce-47c1-954f-642e4ef0ff08",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.944307Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 242
  }, {
    "id" : "69ac352e-2cd2-434d-a25f-1daa5870db44",
    "name" : "List Customers",
    "request" : {
      "urlPath" : "/accounting/customers",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "69ac352e-2cd2-434d-a25f-1daa5870db44",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.94421Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 243
  }, {
    "id" : "cae53267-1c1f-4755-8f24-678bc270feb1",
    "name" : "List Customers",
    "request" : {
      "urlPath" : "/accounting/customers",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cae53267-1c1f-4755-8f24-678bc270feb1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.944106Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 244
  }, {
    "id" : "8c7e7a1d-d03f-49f1-ab8b-7f91c004f444",
    "name" : "List Customers",
    "request" : {
      "urlPath" : "/accounting/customers",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"parent\" : {\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\"\n    },\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"notes\" : \"Some notes about this customer\",\n    \"display_id\" : \"EMP00101\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"project\" : false,\n    \"suffix\" : \"Jr.\",\n    \"title\" : \"CEO\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"tax_number\" : \"US123945459\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"first_name\" : \"Elon\",\n    \"individual\" : true,\n    \"last_name\" : \"Musk\",\n    \"display_name\" : \"Windsurf Shop\",\n    \"middle_name\" : \"D.\",\n    \"created_by\" : \"12345\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_name\" : \"SpaceX\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"bank_accounts\" : [ {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    } ],\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"status\" : \"active\"\n  }, {\n    \"parent\" : {\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\"\n    },\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"notes\" : \"Some notes about this customer\",\n    \"display_id\" : \"EMP00101\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"project\" : false,\n    \"suffix\" : \"Jr.\",\n    \"title\" : \"CEO\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"tax_number\" : \"US123945459\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"first_name\" : \"Elon\",\n    \"individual\" : true,\n    \"last_name\" : \"Musk\",\n    \"display_name\" : \"Windsurf Shop\",\n    \"middle_name\" : \"D.\",\n    \"created_by\" : \"12345\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_name\" : \"SpaceX\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"bank_accounts\" : [ {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    } ],\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"status\" : \"active\"\n  }, {\n    \"parent\" : {\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\"\n    },\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"notes\" : \"Some notes about this customer\",\n    \"display_id\" : \"EMP00101\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"project\" : false,\n    \"suffix\" : \"Jr.\",\n    \"title\" : \"CEO\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"tax_number\" : \"US123945459\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"first_name\" : \"Elon\",\n    \"individual\" : true,\n    \"last_name\" : \"Musk\",\n    \"display_name\" : \"Windsurf Shop\",\n    \"middle_name\" : \"D.\",\n    \"created_by\" : \"12345\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_name\" : \"SpaceX\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"bank_accounts\" : [ {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    } ],\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"status\" : \"active\"\n  }, {\n    \"parent\" : {\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\"\n    },\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"notes\" : \"Some notes about this customer\",\n    \"display_id\" : \"EMP00101\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"project\" : false,\n    \"suffix\" : \"Jr.\",\n    \"title\" : \"CEO\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"tax_number\" : \"US123945459\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"first_name\" : \"Elon\",\n    \"individual\" : true,\n    \"last_name\" : \"Musk\",\n    \"display_name\" : \"Windsurf Shop\",\n    \"middle_name\" : \"D.\",\n    \"created_by\" : \"12345\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_name\" : \"SpaceX\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"bank_accounts\" : [ {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    } ],\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"status\" : \"active\"\n  } ],\n  \"resource\" : \"customers\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"xero\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8c7e7a1d-d03f-49f1-ab8b-7f91c004f444",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.94395Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/AccountingCustomer"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "customers",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetCustomersResponse",
            "x-graphql-type-name" : "CustomerList"
          }
        }
      }
    },
    "insertionIndex" : 245
  }, {
    "id" : "6b2ad285-d5a2-4713-934c-2da22c811c5b",
    "name" : "Update Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/6z04",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6b2ad285-d5a2-4713-934c-2da22c811c5b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.942335Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 246
  }, {
    "id" : "0ef87d81-7e74-4062-9692-275efe6e6b4b",
    "name" : "Update Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/an01",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0ef87d81-7e74-4062-9692-275efe6e6b4b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.942188Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 247
  }, {
    "id" : "b0622fd5-4e07-4aa8-bf64-25a44377b03e",
    "name" : "Update Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/5ds3",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b0622fd5-4e07-4aa8-bf64-25a44377b03e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.942008Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 248
  }, {
    "id" : "c743c6dd-0224-4e1d-b283-6804edac3bc9",
    "name" : "Update Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/4wlp",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c743c6dd-0224-4e1d-b283-6804edac3bc9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.941851Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 249
  }, {
    "id" : "2471d343-5497-4421-bc96-5ee4321c0841",
    "name" : "Update Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/v6n2",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2471d343-5497-4421-bc96-5ee4321c0841",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.941708Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 250
  }, {
    "id" : "c184900d-4433-46fc-baeb-08601a45cfc9",
    "name" : "Update Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/6z33",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"credit-notes\",\n  \"service\" : \"xero\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c184900d-4433-46fc-baeb-08601a45cfc9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.941527Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "credit-notes",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateCreditNoteResponse"
          }
        }
      }
    },
    "insertionIndex" : 251
  }, {
    "id" : "5efc932a-7b9f-4b18-ae49-67233960566b",
    "name" : "Get Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/4z00",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5efc932a-7b9f-4b18-ae49-67233960566b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.941337Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 252
  }, {
    "id" : "a17069d5-3c60-4f79-9e24-fc219fb521e5",
    "name" : "Get Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/p35u",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a17069d5-3c60-4f79-9e24-fc219fb521e5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.941179Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 253
  }, {
    "id" : "e4081e17-6baa-4b73-9347-1c893902474c",
    "name" : "Get Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/n18o",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e4081e17-6baa-4b73-9347-1c893902474c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.940992Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 254
  }, {
    "id" : "e694a4cb-7849-4870-99ef-3813bd46fdc2",
    "name" : "Get Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/abm2",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e694a4cb-7849-4870-99ef-3813bd46fdc2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.940826Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 255
  }, {
    "id" : "ab65c0f5-8851-422f-bef5-b102d92e1d2b",
    "name" : "Get Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/7587",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ab65c0f5-8851-422f-bef5-b102d92e1d2b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.940657Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 256
  }, {
    "id" : "c21fc00c-2045-4ac8-b36a-9f0bb0c3d542",
    "name" : "Get Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/j1oh",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"note\" : \"Some notes about this credit note\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"type\" : \"accounts_receivable_credit\",\n    \"reference\" : \"123456\",\n    \"number\" : \"OIT00546\",\n    \"currency_rate\" : 0.69,\n    \"remaining_credit\" : 27500,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"invoice\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"expense\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"order\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"over_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"order\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"invoice\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"invoice\"\n    } ],\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"date_paid\" : \"2021-05-01T12:00:00.000Z\",\n    \"currency\" : \"USD\",\n    \"id\" : \"123456\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"total_amount\" : 49.99,\n    \"date_issued\" : \"2021-05-01T12:00:00.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  },\n  \"resource\" : \"credit-notes\",\n  \"service\" : \"xero\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c21fc00c-2045-4ac8-b36a-9f0bb0c3d542",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.940387Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/CreditNote"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "credit-notes",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetCreditNoteResponse"
          }
        }
      }
    },
    "insertionIndex" : 257
  }, {
    "id" : "7b0b8fa7-3226-435b-91e3-19af3a0524d4",
    "name" : "Delete Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/4351",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7b0b8fa7-3226-435b-91e3-19af3a0524d4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.939756Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 258
  }, {
    "id" : "9fffebe5-5a14-457e-8de1-348eae15694a",
    "name" : "Delete Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/99sg",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9fffebe5-5a14-457e-8de1-348eae15694a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.939615Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 259
  }, {
    "id" : "740bb30e-416a-494e-afe6-95904c0af1d2",
    "name" : "Delete Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/4hd9",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "740bb30e-416a-494e-afe6-95904c0af1d2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.93946Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 260
  }, {
    "id" : "5ecdef43-9979-4b70-9838-718b7c007eb9",
    "name" : "Delete Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/9e76",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5ecdef43-9979-4b70-9838-718b7c007eb9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.93933Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 261
  }, {
    "id" : "b3e69e43-e212-4096-86da-3dfdd3e13b71",
    "name" : "Delete Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/4092",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b3e69e43-e212-4096-86da-3dfdd3e13b71",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.939194Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 262
  }, {
    "id" : "106efb7a-6fc4-45c9-9aab-c831663e0476",
    "name" : "Delete Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/tit1",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"credit-notes\",\n  \"service\" : \"xero\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "106efb7a-6fc4-45c9-9aab-c831663e0476",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.939036Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "credit-notes",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "DeleteCreditNoteResponse"
          }
        }
      }
    },
    "insertionIndex" : 263
  }, {
    "id" : "aecd0b8e-375d-41a9-a652-97066b0d17c0",
    "name" : "Create Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aecd0b8e-375d-41a9-a652-97066b0d17c0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.938849Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 264
  }, {
    "id" : "0b373910-7e1b-464d-9c8a-f83697255606",
    "name" : "Create Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0b373910-7e1b-464d-9c8a-f83697255606",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.938777Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 265
  }, {
    "id" : "8e5d97b9-2eda-4889-a830-9c4b0d467bdb",
    "name" : "Create Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8e5d97b9-2eda-4889-a830-9c4b0d467bdb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.938676Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 266
  }, {
    "id" : "3faef3a4-dd9d-4d2f-9fcb-3a2d5115323d",
    "name" : "Create Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3faef3a4-dd9d-4d2f-9fcb-3a2d5115323d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.938604Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 267
  }, {
    "id" : "7336c0c6-bff5-404e-9325-2757c6c0674d",
    "name" : "Create Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7336c0c6-bff5-404e-9325-2757c6c0674d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.938531Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 268
  }, {
    "id" : "917850f3-dc17-4627-bde0-1d21756ee83a",
    "name" : "Create Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"credit-notes\",\n  \"service\" : \"xero\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "917850f3-dc17-4627-bde0-1d21756ee83a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.938433Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "credit-notes",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateCreditNoteResponse"
          }
        }
      }
    },
    "insertionIndex" : 269
  }, {
    "id" : "226b853e-b7b5-426e-98b8-f4aa171a8140",
    "name" : "List Credit Notes",
    "request" : {
      "urlPath" : "/accounting/credit-notes",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "226b853e-b7b5-426e-98b8-f4aa171a8140",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.938317Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 270
  }, {
    "id" : "cb2b6b24-587d-45b6-a000-275fb55028d4",
    "name" : "List Credit Notes",
    "request" : {
      "urlPath" : "/accounting/credit-notes",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cb2b6b24-587d-45b6-a000-275fb55028d4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.938224Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 271
  }, {
    "id" : "b4af5d5c-93b4-4490-9228-bfb9b91215d1",
    "name" : "List Credit Notes",
    "request" : {
      "urlPath" : "/accounting/credit-notes",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b4af5d5c-93b4-4490-9228-bfb9b91215d1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.938105Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 272
  }, {
    "id" : "4d4d0a82-8f3d-44ca-bfae-4d2b778f18f8",
    "name" : "List Credit Notes",
    "request" : {
      "urlPath" : "/accounting/credit-notes",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4d4d0a82-8f3d-44ca-bfae-4d2b778f18f8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.938015Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 273
  }, {
    "id" : "f496b02e-c5a2-4f44-a813-ab8dc1665ef6",
    "name" : "List Credit Notes",
    "request" : {
      "urlPath" : "/accounting/credit-notes",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f496b02e-c5a2-4f44-a813-ab8dc1665ef6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.937926Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 274
  }, {
    "id" : "c3f7e9fb-4a7a-4bdf-bb8d-c148f5eaf4f9",
    "name" : "List Credit Notes",
    "request" : {
      "urlPath" : "/accounting/credit-notes",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"note\" : \"Some notes about this credit note\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"type\" : \"accounts_receivable_credit\",\n    \"reference\" : \"123456\",\n    \"number\" : \"OIT00546\",\n    \"currency_rate\" : 0.69,\n    \"remaining_credit\" : 27500,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"invoice\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"pre_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"pre_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"expense\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"order\"\n    } ],\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"date_paid\" : \"2021-05-01T12:00:00.000Z\",\n    \"currency\" : \"USD\",\n    \"id\" : \"123456\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"total_amount\" : 49.99,\n    \"date_issued\" : \"2021-05-01T12:00:00.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  }, {\n    \"note\" : \"Some notes about this credit note\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"type\" : \"accounts_receivable_credit\",\n    \"reference\" : \"123456\",\n    \"number\" : \"OIT00546\",\n    \"currency_rate\" : 0.69,\n    \"remaining_credit\" : 27500,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"expense\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"order\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"expense\"\n    } ],\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"date_paid\" : \"2021-05-01T12:00:00.000Z\",\n    \"currency\" : \"USD\",\n    \"id\" : \"123456\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"total_amount\" : 49.99,\n    \"date_issued\" : \"2021-05-01T12:00:00.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  }, {\n    \"note\" : \"Some notes about this credit note\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"type\" : \"accounts_receivable_credit\",\n    \"reference\" : \"123456\",\n    \"number\" : \"OIT00546\",\n    \"currency_rate\" : 0.69,\n    \"remaining_credit\" : 27500,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"order\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"over_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"over_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"order\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"order\"\n    } ],\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"date_paid\" : \"2021-05-01T12:00:00.000Z\",\n    \"currency\" : \"USD\",\n    \"id\" : \"123456\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"total_amount\" : 49.99,\n    \"date_issued\" : \"2021-05-01T12:00:00.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  }, {\n    \"note\" : \"Some notes about this credit note\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"type\" : \"accounts_receivable_credit\",\n    \"reference\" : \"123456\",\n    \"number\" : \"OIT00546\",\n    \"currency_rate\" : 0.69,\n    \"remaining_credit\" : 27500,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"over_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"invoice\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"order\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"pre_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"order\"\n    } ],\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"date_paid\" : \"2021-05-01T12:00:00.000Z\",\n    \"currency\" : \"USD\",\n    \"id\" : \"123456\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"total_amount\" : 49.99,\n    \"date_issued\" : \"2021-05-01T12:00:00.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  }, {\n    \"note\" : \"Some notes about this credit note\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"type\" : \"accounts_receivable_credit\",\n    \"reference\" : \"123456\",\n    \"number\" : \"OIT00546\",\n    \"currency_rate\" : 0.69,\n    \"remaining_credit\" : 27500,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"order\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"order\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"pre_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"order\"\n    } ],\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"date_paid\" : \"2021-05-01T12:00:00.000Z\",\n    \"currency\" : \"USD\",\n    \"id\" : \"123456\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"total_amount\" : 49.99,\n    \"date_issued\" : \"2021-05-01T12:00:00.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  } ],\n  \"resource\" : \"credit-notes\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"xero\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c3f7e9fb-4a7a-4bdf-bb8d-c148f5eaf4f9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.937804Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/CreditNote"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "credit-notes",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetCreditNotesResponse"
          }
        }
      }
    },
    "insertionIndex" : 275
  }, {
    "id" : "6654035e-7c6b-4b38-88e1-4524e805b557",
    "name" : "Get company info",
    "request" : {
      "urlPath" : "/accounting/company-info",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6654035e-7c6b-4b38-88e1-4524e805b557",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.935193Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companyInfoOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 276
  }, {
    "id" : "13d71c2d-7418-41c0-8303-beb6543221ff",
    "name" : "Get company info",
    "request" : {
      "urlPath" : "/accounting/company-info",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "13d71c2d-7418-41c0-8303-beb6543221ff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.935113Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companyInfoOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 277
  }, {
    "id" : "b6f505d8-0bc2-4a63-a117-9f8ac433672c",
    "name" : "Get company info",
    "request" : {
      "urlPath" : "/accounting/company-info",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b6f505d8-0bc2-4a63-a117-9f8ac433672c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.935006Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companyInfoOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 278
  }, {
    "id" : "6bc6701d-a2c7-4396-8e35-c503acd621ec",
    "name" : "Get company info",
    "request" : {
      "urlPath" : "/accounting/company-info",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6bc6701d-a2c7-4396-8e35-c503acd621ec",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.934928Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companyInfoOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 279
  }, {
    "id" : "41fc0153-04d0-4615-abf9-17449d22cf13",
    "name" : "Get company info",
    "request" : {
      "urlPath" : "/accounting/company-info",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "41fc0153-04d0-4615-abf9-17449d22cf13",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.934847Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companyInfoOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 280
  }, {
    "id" : "99818be8-c882-44c8-94f5-9a401015e04f",
    "name" : "Get company info",
    "request" : {
      "urlPath" : "/accounting/company-info",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"country\" : \"US\",\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"default_sales_tax\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"company_start_date\" : \"2015-06-05\",\n    \"automated_sales_tax\" : true,\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"language\" : \"EN\",\n    \"created_by\" : \"12345\",\n    \"sales_tax_enabled\" : false,\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"sales_tax_number\" : \"111.222.333\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"company_name\" : \"SpaceX\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"currency\" : \"USD\",\n    \"fiscal_year_start_month\" : \"January\",\n    \"id\" : \"12345\",\n    \"legal_name\" : \"SpaceX Inc.\",\n    \"status\" : \"active\"\n  },\n  \"resource\" : \"company-info\",\n  \"service\" : \"xero\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "99818be8-c882-44c8-94f5-9a401015e04f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.934734Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companyInfoOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/CompanyInfo"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "company-info",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetCompanyInfoResponse",
            "x-graphql-type-name" : "CompanyInfo"
          }
        }
      }
    },
    "insertionIndex" : 281
  }, {
    "id" : "573614cc-ee45-4df5-a8c4-156f7cc434c6",
    "name" : "Update Bill",
    "request" : {
      "urlPath" : "/accounting/bills/5043",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "573614cc-ee45-4df5-a8c4-156f7cc434c6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.934213Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 282
  }, {
    "id" : "9366222f-2414-4537-bcd3-2cfe4341c00b",
    "name" : "Update Bill",
    "request" : {
      "urlPath" : "/accounting/bills/8t3o",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9366222f-2414-4537-bcd3-2cfe4341c00b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.934065Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 283
  }, {
    "id" : "0cea3a7a-6cf6-428e-bee8-1502ff053843",
    "name" : "Update Bill",
    "request" : {
      "urlPath" : "/accounting/bills/9qn1",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0cea3a7a-6cf6-428e-bee8-1502ff053843",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.933884Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 284
  }, {
    "id" : "5255b124-75fe-4dc7-b9de-a9b86ecf2eaf",
    "name" : "Update Bill",
    "request" : {
      "urlPath" : "/accounting/bills/gj57",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5255b124-75fe-4dc7-b9de-a9b86ecf2eaf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.933728Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 285
  }, {
    "id" : "2242995c-8333-4f70-bb34-751aa0e6b261",
    "name" : "Update Bill",
    "request" : {
      "urlPath" : "/accounting/bills/xj72",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2242995c-8333-4f70-bb34-751aa0e6b261",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.933566Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 286
  }, {
    "id" : "66a5c8e5-0d5c-4cb0-9961-0e755b5923bf",
    "name" : "Update Bill",
    "request" : {
      "urlPath" : "/accounting/bills/y964",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"bills\",\n  \"service\" : \"xero\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "66a5c8e5-0d5c-4cb0-9961-0e755b5923bf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.933365Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "bills",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateBillResponse"
          }
        }
      }
    },
    "insertionIndex" : 287
  }, {
    "id" : "43de9d7a-b8e2-42bd-9a53-487c7936ce7a",
    "name" : "Get Bill",
    "request" : {
      "urlPath" : "/accounting/bills/2002",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "43de9d7a-b8e2-42bd-9a53-487c7936ce7a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.933167Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 288
  }, {
    "id" : "bae4d56d-d26d-44a1-9159-3bfbbc433280",
    "name" : "Get Bill",
    "request" : {
      "urlPath" : "/accounting/bills/6898",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bae4d56d-d26d-44a1-9159-3bfbbc433280",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.932974Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 289
  }, {
    "id" : "89f1628e-5a10-46a9-a407-e8b9b259af8b",
    "name" : "Get Bill",
    "request" : {
      "urlPath" : "/accounting/bills/sq2u",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "89f1628e-5a10-46a9-a407-e8b9b259af8b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.932744Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 290
  }, {
    "id" : "5a2ce76e-fdee-44ed-b3b0-b6fa402f6593",
    "name" : "Get Bill",
    "request" : {
      "urlPath" : "/accounting/bills/xgsc",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5a2ce76e-fdee-44ed-b3b0-b6fa402f6593",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.932595Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 291
  }, {
    "id" : "e1e22473-b850-4c01-be09-c1ee7a013701",
    "name" : "Get Bill",
    "request" : {
      "urlPath" : "/accounting/bills/hag7",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e1e22473-b850-4c01-be09-c1ee7a013701",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.932416Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 292
  }, {
    "id" : "1b1d7ab5-440a-4881-bac8-9b5510c7c554",
    "name" : "Get Bill",
    "request" : {
      "urlPath" : "/accounting/bills/2wa3",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"notes\" : \"Some notes about this bill.\",\n    \"bill_date\" : \"2020-09-30\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"po_number\" : \"90000117\",\n    \"total\" : 27500,\n    \"bill_number\" : \"10001\",\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"terms\" : \"Net 30 days\",\n    \"ledger_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"due_date\" : \"2020-10-30\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"deposit\" : 0,\n    \"paid_date\" : \"2020-10-30\",\n    \"status\" : \"draft\"\n  },\n  \"resource\" : \"bills\",\n  \"service\" : \"xero\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1b1d7ab5-440a-4881-bac8-9b5510c7c554",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.93223Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Bill"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "bills",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetBillResponse",
            "x-graphql-type-name" : "Bill"
          }
        }
      }
    },
    "insertionIndex" : 293
  }, {
    "id" : "fac6bf28-e677-4587-adab-1adc286da832",
    "name" : "Delete Bill",
    "request" : {
      "urlPath" : "/accounting/bills/fnd4",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fac6bf28-e677-4587-adab-1adc286da832",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.931355Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 294
  }, {
    "id" : "9ab510c7-b501-446b-b620-d1f661c03cdf",
    "name" : "Delete Bill",
    "request" : {
      "urlPath" : "/accounting/bills/1kxq",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9ab510c7-b501-446b-b620-d1f661c03cdf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.931196Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 295
  }, {
    "id" : "b2d9728f-5708-4e5b-a273-a5a0bbe6c781",
    "name" : "Delete Bill",
    "request" : {
      "urlPath" : "/accounting/bills/48gj",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b2d9728f-5708-4e5b-a273-a5a0bbe6c781",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.931017Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 296
  }, {
    "id" : "d2769847-a210-4046-b91c-aa50d338e209",
    "name" : "Delete Bill",
    "request" : {
      "urlPath" : "/accounting/bills/1034",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d2769847-a210-4046-b91c-aa50d338e209",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.930867Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 297
  }, {
    "id" : "9c38d7e9-e5ef-4574-9bdd-056463bb710e",
    "name" : "Delete Bill",
    "request" : {
      "urlPath" : "/accounting/bills/7830",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9c38d7e9-e5ef-4574-9bdd-056463bb710e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.930714Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 298
  }, {
    "id" : "3c7e05e5-8a03-4339-b537-21759067dce6",
    "name" : "Delete Bill",
    "request" : {
      "urlPath" : "/accounting/bills/8ds7",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"bills\",\n  \"service\" : \"xero\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3c7e05e5-8a03-4339-b537-21759067dce6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.930537Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "bills",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "DeleteBillResponse"
          }
        }
      }
    },
    "insertionIndex" : 299
  }, {
    "id" : "fbc96203-e411-4840-ad19-ddb87fc10c1a",
    "name" : "Create Bill",
    "request" : {
      "urlPath" : "/accounting/bills",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fbc96203-e411-4840-ad19-ddb87fc10c1a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.930326Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 300
  }, {
    "id" : "367ce969-db77-44ec-afe3-e871a2c8a9c4",
    "name" : "Create Bill",
    "request" : {
      "urlPath" : "/accounting/bills",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "367ce969-db77-44ec-afe3-e871a2c8a9c4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.930245Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 301
  }, {
    "id" : "a85f28c1-e55e-431d-9a27-568d325fcaf8",
    "name" : "Create Bill",
    "request" : {
      "urlPath" : "/accounting/bills",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a85f28c1-e55e-431d-9a27-568d325fcaf8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.930142Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 302
  }, {
    "id" : "33d9a9c8-210d-48f3-aa44-dea767bccbc9",
    "name" : "Create Bill",
    "request" : {
      "urlPath" : "/accounting/bills",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "33d9a9c8-210d-48f3-aa44-dea767bccbc9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.930065Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 303
  }, {
    "id" : "2e22851e-1c49-4fbe-8590-6007ed2b4b06",
    "name" : "Create Bill",
    "request" : {
      "urlPath" : "/accounting/bills",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2e22851e-1c49-4fbe-8590-6007ed2b4b06",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.929986Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 304
  }, {
    "id" : "d7e8acdf-cbe0-4366-9f2b-748e0abc80ee",
    "name" : "Create Bill",
    "request" : {
      "urlPath" : "/accounting/bills",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"bills\",\n  \"service\" : \"xero\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d7e8acdf-cbe0-4366-9f2b-748e0abc80ee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.929846Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "bills",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateBillResponse"
          }
        }
      }
    },
    "insertionIndex" : 305
  }, {
    "id" : "278ef525-cc90-4a9d-85b8-fe040ff72d3b",
    "name" : "List Bills",
    "request" : {
      "urlPath" : "/accounting/bills",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "278ef525-cc90-4a9d-85b8-fe040ff72d3b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.929725Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 306
  }, {
    "id" : "02d28198-9147-4b78-bf26-6aaa8d668d7a",
    "name" : "List Bills",
    "request" : {
      "urlPath" : "/accounting/bills",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "02d28198-9147-4b78-bf26-6aaa8d668d7a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.92963Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 307
  }, {
    "id" : "5af864d0-6734-4fb8-a7ce-d7ec960a0d5a",
    "name" : "List Bills",
    "request" : {
      "urlPath" : "/accounting/bills",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5af864d0-6734-4fb8-a7ce-d7ec960a0d5a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.929506Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 308
  }, {
    "id" : "816b98b7-222b-43b9-98d4-992a02a17082",
    "name" : "List Bills",
    "request" : {
      "urlPath" : "/accounting/bills",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "816b98b7-222b-43b9-98d4-992a02a17082",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.92941Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 309
  }, {
    "id" : "57001995-76f5-4172-aef4-76c21237ebba",
    "name" : "List Bills",
    "request" : {
      "urlPath" : "/accounting/bills",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "57001995-76f5-4172-aef4-76c21237ebba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.929312Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 310
  }, {
    "id" : "bda3aa25-ca25-4e70-b504-18d08fc124c7",
    "name" : "List Bills",
    "request" : {
      "urlPath" : "/accounting/bills",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"notes\" : \"Some notes about this bill.\",\n    \"bill_date\" : \"2020-09-30\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"po_number\" : \"90000117\",\n    \"total\" : 27500,\n    \"bill_number\" : \"10001\",\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"terms\" : \"Net 30 days\",\n    \"ledger_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"due_date\" : \"2020-10-30\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"deposit\" : 0,\n    \"paid_date\" : \"2020-10-30\",\n    \"status\" : \"draft\"\n  }, {\n    \"notes\" : \"Some notes about this bill.\",\n    \"bill_date\" : \"2020-09-30\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"po_number\" : \"90000117\",\n    \"total\" : 27500,\n    \"bill_number\" : \"10001\",\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"terms\" : \"Net 30 days\",\n    \"ledger_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"due_date\" : \"2020-10-30\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"deposit\" : 0,\n    \"paid_date\" : \"2020-10-30\",\n    \"status\" : \"draft\"\n  }, {\n    \"notes\" : \"Some notes about this bill.\",\n    \"bill_date\" : \"2020-09-30\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"po_number\" : \"90000117\",\n    \"total\" : 27500,\n    \"bill_number\" : \"10001\",\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"terms\" : \"Net 30 days\",\n    \"ledger_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"due_date\" : \"2020-10-30\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"deposit\" : 0,\n    \"paid_date\" : \"2020-10-30\",\n    \"status\" : \"draft\"\n  }, {\n    \"notes\" : \"Some notes about this bill.\",\n    \"bill_date\" : \"2020-09-30\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"po_number\" : \"90000117\",\n    \"total\" : 27500,\n    \"bill_number\" : \"10001\",\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"terms\" : \"Net 30 days\",\n    \"ledger_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"due_date\" : \"2020-10-30\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"deposit\" : 0,\n    \"paid_date\" : \"2020-10-30\",\n    \"status\" : \"draft\"\n  }, {\n    \"notes\" : \"Some notes about this bill.\",\n    \"bill_date\" : \"2020-09-30\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"po_number\" : \"90000117\",\n    \"total\" : 27500,\n    \"bill_number\" : \"10001\",\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"terms\" : \"Net 30 days\",\n    \"ledger_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"due_date\" : \"2020-10-30\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"deposit\" : 0,\n    \"paid_date\" : \"2020-10-30\",\n    \"status\" : \"draft\"\n  } ],\n  \"resource\" : \"bills\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"xero\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bda3aa25-ca25-4e70-b504-18d08fc124c7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.929183Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/Bill"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "bills",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetBillsResponse",
            "x-graphql-type-name" : "BillList"
          }
        }
      }
    },
    "insertionIndex" : 311
  }, {
    "id" : "41e902a0-18c5-4736-8c07-8614e66a7482",
    "name" : "Get BalanceSheet",
    "request" : {
      "urlPath" : "/accounting/balance-sheet",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "41e902a0-18c5-4736-8c07-8614e66a7482",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.927441Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "balanceSheetOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 312
  }, {
    "id" : "a3865897-d669-46ad-8624-a26e30776e28",
    "name" : "Get BalanceSheet",
    "request" : {
      "urlPath" : "/accounting/balance-sheet",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a3865897-d669-46ad-8624-a26e30776e28",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.927306Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "balanceSheetOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 313
  }, {
    "id" : "061a377c-d6fb-482f-a62d-99262e9eedb9",
    "name" : "Get BalanceSheet",
    "request" : {
      "urlPath" : "/accounting/balance-sheet",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "061a377c-d6fb-482f-a62d-99262e9eedb9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.927124Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "balanceSheetOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 314
  }, {
    "id" : "a9d69ea9-ab0f-4351-9a3f-5823c426e2f8",
    "name" : "Get BalanceSheet",
    "request" : {
      "urlPath" : "/accounting/balance-sheet",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a9d69ea9-ab0f-4351-9a3f-5823c426e2f8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.927014Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "balanceSheetOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 315
  }, {
    "id" : "9c269f9e-f055-48de-aa5d-f5e69effee93",
    "name" : "Get BalanceSheet",
    "request" : {
      "urlPath" : "/accounting/balance-sheet",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9c269f9e-f055-48de-aa5d-f5e69effee93",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.92688Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "balanceSheetOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 316
  }, {
    "id" : "595f76d9-3192-45f7-914d-f6df03af508c",
    "name" : "Get BalanceSheet",
    "request" : {
      "urlPath" : "/accounting/balance-sheet",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"end_date\" : \"2017-01-01\",\n    \"assets\" : {\n      \"current_assets\" : {\n        \"accounts\" : [ {\n          \"id\" : \"1\",\n          \"name\" : \"Accounts Receivable (A/R)\",\n          \"value\" : 10000\n        }, {\n          \"id\" : \"2\",\n          \"name\" : \"Accounts Payable (A/P)\",\n          \"value\" : 10000\n        } ],\n        \"total\" : 100000\n      },\n      \"fixed_assets\" : {\n        \"accounts\" : [ {\n          \"id\" : \"1\",\n          \"name\" : \"Accounts Receivable (A/R)\",\n          \"value\" : 10000\n        }, {\n          \"id\" : \"2\",\n          \"name\" : \"Accounts Payable (A/P)\",\n          \"value\" : 10000\n        } ],\n        \"total\" : 100000\n      },\n      \"total\" : 200000\n    },\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"liabilities\" : {\n      \"accounts\" : [ {\n        \"id\" : \"1\",\n        \"name\" : \"Accounts Payable (A/P)\",\n        \"value\" : 10000\n      } ],\n      \"total\" : 200000\n    },\n    \"updated_by\" : \"12345\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"id\" : \"12345\",\n    \"report_name\" : \"BalanceSheet\",\n    \"created_by\" : \"12345\",\n    \"equity\" : {\n      \"items\" : [ {\n        \"id\" : \"1\",\n        \"name\" : \"Retained Earnings\",\n        \"value\" : 10000\n      } ],\n      \"total\" : 200000\n    },\n    \"start_date\" : \"2017-01-01\"\n  },\n  \"resource\" : \"BalanceSheets\",\n  \"service\" : \"quickbooks\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "595f76d9-3192-45f7-914d-f6df03af508c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.926718Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "balanceSheetOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/BalanceSheet"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "BalanceSheets",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "quickbooks",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetBalanceSheetResponse",
            "x-graphql-type-name" : "BalanceSheet"
          }
        }
      }
    },
    "insertionIndex" : 317
  } ]
}