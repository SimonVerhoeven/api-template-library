{
  "mappings" : [ {
    "id" : "e0ebe00a-2a59-442f-9669-8bb12ff26269",
    "name" : "Update Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/wcqu",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e0ebe00a-2a59-442f-9669-8bb12ff26269",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.703874Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "7967d80a-f5f9-44b7-9cb5-8ccc8ad767d8",
    "name" : "Update Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/9i3p",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7967d80a-f5f9-44b7-9cb5-8ccc8ad767d8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.703735Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "453eeeb2-bdfd-4bf5-99c3-aafd52532306",
    "name" : "Update Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/g32y",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "453eeeb2-bdfd-4bf5-99c3-aafd52532306",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.703576Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "c3e3d6a6-f95d-4884-9875-3c27b2cb8eab",
    "name" : "Update Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/n9l0",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c3e3d6a6-f95d-4884-9875-3c27b2cb8eab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.703437Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "3a868ef2-d893-435c-b5ef-b467c019a673",
    "name" : "Update Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/9z84",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3a868ef2-d893-435c-b5ef-b467c019a673",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.7033Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "76bd3098-a0c7-4161-9722-679b9171390e",
    "name" : "Update Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/1tv4",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"tax-rates\",\n  \"service\" : \"xero\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "76bd3098-a0c7-4161-9722-679b9171390e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.703145Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "tax-rates",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateTaxRateResponse"
          }
        }
      }
    }
  }, {
    "id" : "910dda7b-924b-4087-b158-772134deb0d3",
    "name" : "Get Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/q644",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "910dda7b-924b-4087-b158-772134deb0d3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.703002Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "6cdd720f-8dd8-4673-a910-eeb1c6a14f46",
    "name" : "Get Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/e71u",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6cdd720f-8dd8-4673-a910-eeb1c6a14f46",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.702872Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "a58edd44-f40c-48ed-ab67-295bc420c3ea",
    "name" : "Get Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/4760",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a58edd44-f40c-48ed-ab67-295bc420c3ea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.702715Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "9eb16fb4-7a9e-4cb3-ae14-6f1321d0a14e",
    "name" : "Get Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/fj56",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9eb16fb4-7a9e-4cb3-ae14-6f1321d0a14e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.702583Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "11fd2cc1-0549-4a46-8e8d-1e405fff5d15",
    "name" : "Get Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/199w",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "11fd2cc1-0549-4a46-8e8d-1e405fff5d15",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.702452Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "3df7fc71-a175-4ee9-adae-69a921850fa7",
    "name" : "Get Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/250p",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"components\" : [ {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    } ],\n    \"code\" : \"ABN\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Reduced rate GST Purchases\",\n    \"type\" : \"NONE\",\n    \"created_by\" : \"12345\",\n    \"original_tax_rate_id\" : \"12345\",\n    \"tax_remitted_account_id\" : \"123456\",\n    \"tax_payable_account_id\" : \"123456\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"report_tax_type\" : \"NONE\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"GST on Purchases\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"1234\",\n    \"effective_tax_rate\" : 10,\n    \"total_tax_rate\" : 10,\n    \"status\" : \"active\"\n  },\n  \"resource\" : \"tax-rates\",\n  \"service\" : \"xero\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3df7fc71-a175-4ee9-adae-69a921850fa7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.702294Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/TaxRate"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "tax-rates",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetTaxRateResponse",
            "x-graphql-type-name" : "TaxRateOne"
          }
        }
      }
    }
  }, {
    "id" : "f0ee3552-3f28-4d8b-b24c-1e35f2a44006",
    "name" : "Delete Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/0w10",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f0ee3552-3f28-4d8b-b24c-1e35f2a44006",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.702072Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "ea723264-72f2-4afc-ab3d-1aa0804b3f59",
    "name" : "Delete Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/4t76",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ea723264-72f2-4afc-ab3d-1aa0804b3f59",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.701934Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "b6491c13-a773-43b0-a096-81f48a5f7e26",
    "name" : "Delete Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/8k35",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b6491c13-a773-43b0-a096-81f48a5f7e26",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.701771Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "ab6c9758-e899-4192-b170-7ff7b2c6cbcf",
    "name" : "Delete Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/s3ip",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ab6c9758-e899-4192-b170-7ff7b2c6cbcf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.701638Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "b7833ecf-8919-4b27-a1f9-9507e0a2a0c7",
    "name" : "Delete Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/pas8",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b7833ecf-8919-4b27-a1f9-9507e0a2a0c7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.701502Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "cda23d6c-5934-47a4-8d6e-652cdae0e4f8",
    "name" : "Delete Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates/4c4o",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"tax-rates\",\n  \"service\" : \"xero\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cda23d6c-5934-47a4-8d6e-652cdae0e4f8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.701345Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "tax-rates",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "DeleteTaxRateResponse"
          }
        }
      }
    }
  }, {
    "id" : "cde4755e-d560-408d-a384-8c7b0bc5eb6f",
    "name" : "Create Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cde4755e-d560-408d-a384-8c7b0bc5eb6f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.701179Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "a65dd9da-2f1f-4e52-8edc-6000c8c76a27",
    "name" : "Create Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a65dd9da-2f1f-4e52-8edc-6000c8c76a27",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.70111Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "6270d565-d52d-4aa7-aa5c-05388b6c2016",
    "name" : "Create Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6270d565-d52d-4aa7-aa5c-05388b6c2016",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.70102Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "a5a1c883-4fb8-47ac-8493-cc97397c5c31",
    "name" : "Create Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a5a1c883-4fb8-47ac-8493-cc97397c5c31",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.70095Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "34f0fb2b-bf3c-4f96-8463-12068074639d",
    "name" : "Create Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "34f0fb2b-bf3c-4f96-8463-12068074639d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.700881Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "6556d7f6-041f-4505-873d-d0ef8a60fdf1",
    "name" : "Create Tax Rate",
    "request" : {
      "urlPath" : "/accounting/tax-rates",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"tax-rates\",\n  \"service\" : \"xero\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6556d7f6-041f-4505-873d-d0ef8a60fdf1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.700789Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "tax-rates",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateTaxRateResponse"
          }
        }
      }
    }
  }, {
    "id" : "69b42234-1ab3-4456-9671-6ca324011b69",
    "name" : "List Tax Rates",
    "request" : {
      "urlPath" : "/accounting/tax-rates",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "69b42234-1ab3-4456-9671-6ca324011b69",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.700703Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "7ba739b2-2edc-4a22-aa55-8ce96d4edc72",
    "name" : "List Tax Rates",
    "request" : {
      "urlPath" : "/accounting/tax-rates",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7ba739b2-2edc-4a22-aa55-8ce96d4edc72",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.70061Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "1068f240-825e-477b-9b54-c9c356e5148c",
    "name" : "List Tax Rates",
    "request" : {
      "urlPath" : "/accounting/tax-rates",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1068f240-825e-477b-9b54-c9c356e5148c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.700509Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "3d733d7b-ec7c-497c-83cd-b1d25c6caa4a",
    "name" : "List Tax Rates",
    "request" : {
      "urlPath" : "/accounting/tax-rates",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3d733d7b-ec7c-497c-83cd-b1d25c6caa4a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.700438Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "f9d89124-a3e9-4de4-849e-164d22ed5795",
    "name" : "List Tax Rates",
    "request" : {
      "urlPath" : "/accounting/tax-rates",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f9d89124-a3e9-4de4-849e-164d22ed5795",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.700366Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "ed9886aa-9d25-41db-b6d6-e320c4605288",
    "name" : "List Tax Rates",
    "request" : {
      "urlPath" : "/accounting/tax-rates",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"components\" : [ {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    } ],\n    \"code\" : \"ABN\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Reduced rate GST Purchases\",\n    \"type\" : \"NONE\",\n    \"created_by\" : \"12345\",\n    \"original_tax_rate_id\" : \"12345\",\n    \"tax_remitted_account_id\" : \"123456\",\n    \"tax_payable_account_id\" : \"123456\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"report_tax_type\" : \"NONE\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"GST on Purchases\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"1234\",\n    \"effective_tax_rate\" : 10,\n    \"total_tax_rate\" : 10,\n    \"status\" : \"active\"\n  }, {\n    \"components\" : [ {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    }, {\n      \"rate\" : 10,\n      \"name\" : \"GST\",\n      \"id\" : \"10\",\n      \"compound\" : true\n    } ],\n    \"code\" : \"ABN\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Reduced rate GST Purchases\",\n    \"type\" : \"NONE\",\n    \"created_by\" : \"12345\",\n    \"original_tax_rate_id\" : \"12345\",\n    \"tax_remitted_account_id\" : \"123456\",\n    \"tax_payable_account_id\" : \"123456\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"report_tax_type\" : \"NONE\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"GST on Purchases\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"1234\",\n    \"effective_tax_rate\" : 10,\n    \"total_tax_rate\" : 10,\n    \"status\" : \"active\"\n  } ],\n  \"resource\" : \"tax-rates\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"xero\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ed9886aa-9d25-41db-b6d6-e320c4605288",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.700267Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxRatesAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/TaxRate"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "tax-rates",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetTaxRatesResponse",
            "x-graphql-type-name" : "TaxRateList"
          }
        }
      }
    }
  }, {
    "id" : "cc07660b-f6d2-4e88-be68-5fe3f7c0f31a",
    "name" : "Update Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/17vq",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cc07660b-f6d2-4e88-be68-5fe3f7c0f31a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.700018Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "b6203770-3b15-45cb-8b49-bb7f67185975",
    "name" : "Update Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/33qd",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b6203770-3b15-45cb-8b49-bb7f67185975",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.699881Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "21ef5868-e52c-4fdb-9adc-de774f4069b0",
    "name" : "Update Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/9vun",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "21ef5868-e52c-4fdb-9adc-de774f4069b0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.699728Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "4c826a12-c063-45e4-b81c-5c3baea847f6",
    "name" : "Update Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/m956",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4c826a12-c063-45e4-b81c-5c3baea847f6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.699573Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "af805a73-dccb-4de8-87c5-abe6a3a532d2",
    "name" : "Update Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/hht9",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "af805a73-dccb-4de8-87c5-abe6a3a532d2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.699437Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "d995be61-a281-4af3-afd9-a48bb80928b1",
    "name" : "Update Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/48k7",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"suppliers\",\n  \"service\" : \"xero\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d995be61-a281-4af3-afd9-a48bb80928b1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.699277Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "suppliers",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateSupplierResponse"
          }
        }
      }
    }
  }, {
    "id" : "6c5c9ac0-f1be-40b2-911e-44eaa81eade8",
    "name" : "Get Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/73s5",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6c5c9ac0-f1be-40b2-911e-44eaa81eade8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.699128Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "686c981f-1375-4648-939d-051ed122c206",
    "name" : "Get Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/wpy8",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "686c981f-1375-4648-939d-051ed122c206",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.698989Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "287e5f7f-d084-4bb7-b0fc-15719ad44493",
    "name" : "Get Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/b0xk",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "287e5f7f-d084-4bb7-b0fc-15719ad44493",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.698825Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "4b9a9869-0973-4b00-ac5f-6ea19de240aa",
    "name" : "Get Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/s5n0",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4b9a9869-0973-4b00-ac5f-6ea19de240aa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.698685Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "5f318831-b5ac-4ba7-934f-4c4f1c7137da",
    "name" : "Get Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/fgka",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5f318831-b5ac-4ba7-934f-4c4f1c7137da",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.698547Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "183644d4-3e4c-4980-9cb7-8b9d2e591daf",
    "name" : "Get Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/06yz",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"notes\" : \"Some notes about this supplier\",\n    \"display_id\" : \"EMP00101\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"suffix\" : \"Jr.\",\n    \"title\" : \"CEO\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"tax_number\" : \"US123945459\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"first_name\" : \"Elon\",\n    \"individual\" : true,\n    \"last_name\" : \"Musk\",\n    \"display_name\" : \"Windsurf Shop\",\n    \"middle_name\" : \"D.\",\n    \"created_by\" : \"12345\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_name\" : \"SpaceX\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"bank_accounts\" : [ {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    } ],\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"status\" : \"active\"\n  },\n  \"resource\" : \"suppliers\",\n  \"service\" : \"xero\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "183644d4-3e4c-4980-9cb7-8b9d2e591daf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.698374Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Supplier"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "suppliers",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetSupplierResponse",
            "x-graphql-type-name" : "Supplier"
          }
        }
      }
    }
  }, {
    "id" : "4e74f32e-a551-42ec-9d12-a287ef7ec0fb",
    "name" : "Delete Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/3peg",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4e74f32e-a551-42ec-9d12-a287ef7ec0fb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.697841Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "8580356d-096c-4f73-bd1a-8656e4d63500",
    "name" : "Delete Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/872q",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8580356d-096c-4f73-bd1a-8656e4d63500",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.697701Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "4f49e3a1-2c5f-40f7-bbfa-ee6507fef28f",
    "name" : "Delete Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/y9pc",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4f49e3a1-2c5f-40f7-bbfa-ee6507fef28f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.697521Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "0b1bba9b-cce3-470a-b87e-8c340b53be9a",
    "name" : "Delete Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/l497",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0b1bba9b-cce3-470a-b87e-8c340b53be9a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.697385Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "489c3fc5-573a-4be7-aec5-0615ef7db1ed",
    "name" : "Delete Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/nchk",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "489c3fc5-573a-4be7-aec5-0615ef7db1ed",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.697227Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "36e2bfdc-4041-4ec3-b56a-cace9834e232",
    "name" : "Delete Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers/jjs6",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"suppliers\",\n  \"service\" : \"xero\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "36e2bfdc-4041-4ec3-b56a-cace9834e232",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.697053Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "suppliers",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "DeleteSupplierResponse"
          }
        }
      }
    }
  }, {
    "id" : "d13afdd0-03bd-4e4a-b4cb-eb3280d7ba7e",
    "name" : "Create Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d13afdd0-03bd-4e4a-b4cb-eb3280d7ba7e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.696859Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "8b73a778-ae61-43cf-8f9e-06ff5d9397b9",
    "name" : "Create Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8b73a778-ae61-43cf-8f9e-06ff5d9397b9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.696787Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "38f9c6ef-4cb4-4bde-8406-b66be03ba30f",
    "name" : "Create Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "38f9c6ef-4cb4-4bde-8406-b66be03ba30f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.696695Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "22b35b6d-536b-435c-a4b5-1cae93985df6",
    "name" : "Create Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "22b35b6d-536b-435c-a4b5-1cae93985df6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.696622Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "f7281ec4-cb5e-4942-8d17-4bda89fde0f3",
    "name" : "Create Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f7281ec4-cb5e-4942-8d17-4bda89fde0f3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.696551Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "68a5cb57-94f3-485c-9afd-b5be2c047ae5",
    "name" : "Create Supplier",
    "request" : {
      "urlPath" : "/accounting/suppliers",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"payments\",\n  \"service\" : \"xero\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "68a5cb57-94f3-485c-9afd-b5be2c047ae5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.696455Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "payments",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateSupplierResponse"
          }
        }
      }
    }
  }, {
    "id" : "17afeba3-219b-4856-8bfd-8edd1fdd77f9",
    "name" : "List Suppliers",
    "request" : {
      "urlPath" : "/accounting/suppliers",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "17afeba3-219b-4856-8bfd-8edd1fdd77f9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.696365Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "834a3dcb-2110-4cc4-9d7b-6bef226359d6",
    "name" : "List Suppliers",
    "request" : {
      "urlPath" : "/accounting/suppliers",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "834a3dcb-2110-4cc4-9d7b-6bef226359d6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.696286Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "e320ef2a-bb74-4530-aadb-27fb9f4cd664",
    "name" : "List Suppliers",
    "request" : {
      "urlPath" : "/accounting/suppliers",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e320ef2a-bb74-4530-aadb-27fb9f4cd664",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.696183Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "b675933e-f78b-4458-995c-d175ebcdf014",
    "name" : "List Suppliers",
    "request" : {
      "urlPath" : "/accounting/suppliers",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b675933e-f78b-4458-995c-d175ebcdf014",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.6961Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "51062c80-0f73-4489-9e3b-bd589b17b6d3",
    "name" : "List Suppliers",
    "request" : {
      "urlPath" : "/accounting/suppliers",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "51062c80-0f73-4489-9e3b-bd589b17b6d3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.696019Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "38ca6e95-d813-4429-a172-1e83c0e84970",
    "name" : "List Suppliers",
    "request" : {
      "urlPath" : "/accounting/suppliers",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"notes\" : \"Some notes about this supplier\",\n    \"display_id\" : \"EMP00101\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"suffix\" : \"Jr.\",\n    \"title\" : \"CEO\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"tax_number\" : \"US123945459\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"first_name\" : \"Elon\",\n    \"individual\" : true,\n    \"last_name\" : \"Musk\",\n    \"display_name\" : \"Windsurf Shop\",\n    \"middle_name\" : \"D.\",\n    \"created_by\" : \"12345\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_name\" : \"SpaceX\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"bank_accounts\" : [ {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    } ],\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"status\" : \"active\"\n  }, {\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"notes\" : \"Some notes about this supplier\",\n    \"display_id\" : \"EMP00101\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"suffix\" : \"Jr.\",\n    \"title\" : \"CEO\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"tax_number\" : \"US123945459\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"first_name\" : \"Elon\",\n    \"individual\" : true,\n    \"last_name\" : \"Musk\",\n    \"display_name\" : \"Windsurf Shop\",\n    \"middle_name\" : \"D.\",\n    \"created_by\" : \"12345\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_name\" : \"SpaceX\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"bank_accounts\" : [ {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    } ],\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"status\" : \"active\"\n  }, {\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"notes\" : \"Some notes about this supplier\",\n    \"display_id\" : \"EMP00101\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"suffix\" : \"Jr.\",\n    \"title\" : \"CEO\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"tax_number\" : \"US123945459\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"first_name\" : \"Elon\",\n    \"individual\" : true,\n    \"last_name\" : \"Musk\",\n    \"display_name\" : \"Windsurf Shop\",\n    \"middle_name\" : \"D.\",\n    \"created_by\" : \"12345\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_name\" : \"SpaceX\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"bank_accounts\" : [ {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    } ],\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"status\" : \"active\"\n  }, {\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"notes\" : \"Some notes about this supplier\",\n    \"display_id\" : \"EMP00101\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"suffix\" : \"Jr.\",\n    \"title\" : \"CEO\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"tax_number\" : \"US123945459\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"first_name\" : \"Elon\",\n    \"individual\" : true,\n    \"last_name\" : \"Musk\",\n    \"display_name\" : \"Windsurf Shop\",\n    \"middle_name\" : \"D.\",\n    \"created_by\" : \"12345\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_name\" : \"SpaceX\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"bank_accounts\" : [ {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    } ],\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"status\" : \"active\"\n  }, {\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"notes\" : \"Some notes about this supplier\",\n    \"display_id\" : \"EMP00101\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"suffix\" : \"Jr.\",\n    \"title\" : \"CEO\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"tax_number\" : \"US123945459\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"first_name\" : \"Elon\",\n    \"individual\" : true,\n    \"last_name\" : \"Musk\",\n    \"display_name\" : \"Windsurf Shop\",\n    \"middle_name\" : \"D.\",\n    \"created_by\" : \"12345\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_name\" : \"SpaceX\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"bank_accounts\" : [ {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    } ],\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"status\" : \"active\"\n  }, {\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"notes\" : \"Some notes about this supplier\",\n    \"display_id\" : \"EMP00101\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"suffix\" : \"Jr.\",\n    \"title\" : \"CEO\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"tax_number\" : \"US123945459\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"first_name\" : \"Elon\",\n    \"individual\" : true,\n    \"last_name\" : \"Musk\",\n    \"display_name\" : \"Windsurf Shop\",\n    \"middle_name\" : \"D.\",\n    \"created_by\" : \"12345\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_name\" : \"SpaceX\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"bank_accounts\" : [ {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    } ],\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"status\" : \"active\"\n  }, {\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"notes\" : \"Some notes about this supplier\",\n    \"display_id\" : \"EMP00101\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"suffix\" : \"Jr.\",\n    \"title\" : \"CEO\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"tax_number\" : \"US123945459\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"first_name\" : \"Elon\",\n    \"individual\" : true,\n    \"last_name\" : \"Musk\",\n    \"display_name\" : \"Windsurf Shop\",\n    \"middle_name\" : \"D.\",\n    \"created_by\" : \"12345\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_name\" : \"SpaceX\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"bank_accounts\" : [ {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    } ],\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"status\" : \"active\"\n  } ],\n  \"resource\" : \"suppliers\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"xero\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "38ca6e95-d813-4429-a172-1e83c0e84970",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.695884Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "suppliersAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/Supplier"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "suppliers",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetSuppliersResponse",
            "x-graphql-type-name" : "SupplierList"
          }
        }
      }
    }
  }, {
    "id" : "08b7cfe4-24ca-4814-8690-adb7a654e535",
    "name" : "Get Profit and Loss",
    "request" : {
      "urlPath" : "/accounting/profit-and-loss",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "08b7cfe4-24ca-4814-8690-adb7a654e535",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.692723Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "profitAndLossOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "d247f966-65f5-447d-bf75-21dfd707149f",
    "name" : "Get Profit and Loss",
    "request" : {
      "urlPath" : "/accounting/profit-and-loss",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d247f966-65f5-447d-bf75-21dfd707149f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.692655Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "profitAndLossOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "5825b8ea-db47-418f-aa60-5d6213faff56",
    "name" : "Get Profit and Loss",
    "request" : {
      "urlPath" : "/accounting/profit-and-loss",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5825b8ea-db47-418f-aa60-5d6213faff56",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.692565Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "profitAndLossOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "32b7a9dc-dc7d-42ea-a4f9-90364f8ffda6",
    "name" : "Get Profit and Loss",
    "request" : {
      "urlPath" : "/accounting/profit-and-loss",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "32b7a9dc-dc7d-42ea-a4f9-90364f8ffda6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.692501Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "profitAndLossOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "3b900a19-24c7-4b94-af22-b30767e8b4df",
    "name" : "Get Profit and Loss",
    "request" : {
      "urlPath" : "/accounting/profit-and-loss",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3b900a19-24c7-4b94-af22-b30767e8b4df",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.692433Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "profitAndLossOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "6b712cce-447a-4dc6-8135-d490379d55a2",
    "name" : "Get Profit and Loss",
    "request" : {
      "urlPath" : "/accounting/profit-and-loss",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"end_date\" : \"2017-01-01\",\n    \"income\" : {\n      \"records\" : [ {\n        \"amount\" : 10000,\n        \"id\" : \"123\",\n        \"name\" : \"Income 1\"\n      }, {\n        \"amount\" : 20000,\n        \"id\" : \"456\",\n        \"name\" : \"Income 2\"\n      } ],\n      \"total\" : 200000\n    },\n    \"net_operating_income\" : {\n      \"total\" : 200000\n    },\n    \"gross_profit\" : {\n      \"total\" : 200000\n    },\n    \"currency\" : \"USD\",\n    \"id\" : \"12345\",\n    \"net_income\" : {\n      \"total\" : 200000\n    },\n    \"customer_id\" : \"123\",\n    \"report_name\" : \"ProfitAndLoss\",\n    \"expenses\" : {\n      \"records\" : [ {\n        \"amount\" : 10000,\n        \"id\" : \"123\",\n        \"name\" : \"Expense 1\"\n      }, {\n        \"amount\" : 20000,\n        \"id\" : \"456\",\n        \"name\" : \"Expense 2\"\n      } ],\n      \"total\" : 200000\n    },\n    \"start_date\" : \"2017-01-01\"\n  },\n  \"resource\" : \"ProfitAndLosses\",\n  \"service\" : \"quickbooks\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6b712cce-447a-4dc6-8135-d490379d55a2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.692346Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "profitAndLossOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/ProfitAndLoss"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "ProfitAndLosses",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "quickbooks",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetProfitAndLossResponse",
            "x-graphql-type-name" : "ProfitAndLoss"
          }
        }
      }
    }
  }, {
    "id" : "ecc45c3f-dc69-4b68-a06f-9c7725dbda31",
    "name" : "Update Payment",
    "request" : {
      "urlPath" : "/accounting/payments/b0c0",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ecc45c3f-dc69-4b68-a06f-9c7725dbda31",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.692233Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "9ef9445a-8eb2-423a-9e21-6635c945b52d",
    "name" : "Update Payment",
    "request" : {
      "urlPath" : "/accounting/payments/5g66",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9ef9445a-8eb2-423a-9e21-6635c945b52d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.692106Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "e8edf804-40f2-46a1-9551-0e0a40c4bef6",
    "name" : "Update Payment",
    "request" : {
      "urlPath" : "/accounting/payments/iak7",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e8edf804-40f2-46a1-9551-0e0a40c4bef6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.691959Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "028e1ae4-7843-400c-96b4-235b9a4d491e",
    "name" : "Update Payment",
    "request" : {
      "urlPath" : "/accounting/payments/0j87",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "028e1ae4-7843-400c-96b4-235b9a4d491e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.691835Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "25684ce1-31c9-47a6-b003-7a80b19bac25",
    "name" : "Update Payment",
    "request" : {
      "urlPath" : "/accounting/payments/98k0",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "25684ce1-31c9-47a6-b003-7a80b19bac25",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.691712Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "841b6a55-34a1-4757-8b67-3102aabafa59",
    "name" : "Update Payment",
    "request" : {
      "urlPath" : "/accounting/payments/el13",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"payments\",\n  \"service\" : \"xero\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "841b6a55-34a1-4757-8b67-3102aabafa59",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.691558Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "payments",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdatePaymentResponse"
          }
        }
      }
    }
  }, {
    "id" : "9011d4f0-e20e-47eb-adf4-8e685fba49d8",
    "name" : "Get Payment",
    "request" : {
      "urlPath" : "/accounting/payments/5km4",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9011d4f0-e20e-47eb-adf4-8e685fba49d8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.691399Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "979476ed-cbf5-4aaf-bb22-ff14b00bbac2",
    "name" : "Get Payment",
    "request" : {
      "urlPath" : "/accounting/payments/nqi3",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "979476ed-cbf5-4aaf-bb22-ff14b00bbac2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.691264Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "4f1063b0-f947-49f0-924a-9af23ab20a5f",
    "name" : "Get Payment",
    "request" : {
      "urlPath" : "/accounting/payments/6335",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4f1063b0-f947-49f0-924a-9af23ab20a5f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.691114Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "39b246a5-4871-49bd-8771-bb26ed0577c6",
    "name" : "Get Payment",
    "request" : {
      "urlPath" : "/accounting/payments/695m",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "39b246a5-4871-49bd-8771-bb26ed0577c6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.690987Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "f65fe887-9236-4b22-ab92-a3b40040ea72",
    "name" : "Get Payment",
    "request" : {
      "urlPath" : "/accounting/payments/44h3",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f65fe887-9236-4b22-ab92-a3b40040ea72",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.690854Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "5e0104dd-165c-4c57-90ed-c337a73be7a2",
    "name" : "Get Payment",
    "request" : {
      "urlPath" : "/accounting/payments/5142",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"note\" : \"Some notes about this payment\",\n    \"display_id\" : \"123456\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"type\" : \"accounts_receivable\",\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"over_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"pre_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"order\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"expense\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"123456\",\n    \"payment_method\" : \"Credit Card\",\n    \"transaction_date\" : \"2021-05-01T12:00:00.000Z\",\n    \"accounts_receivable_account_id\" : \"123456\",\n    \"reconciled\" : true,\n    \"payment_method_reference\" : \"123456\",\n    \"created_by\" : \"12345\",\n    \"accounts_receivable_account_type\" : \"Account\",\n    \"total_amount\" : 49.99,\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  },\n  \"resource\" : \"payments\",\n  \"service\" : \"xero\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5e0104dd-165c-4c57-90ed-c337a73be7a2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.690689Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Payment"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "payments",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetPaymentResponse",
            "x-graphql-type-name" : "Payment"
          }
        }
      }
    }
  }, {
    "id" : "855130ab-415f-4a13-a061-8afe05f45332",
    "name" : "Delete Payment",
    "request" : {
      "urlPath" : "/accounting/payments/48ut",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "855130ab-415f-4a13-a061-8afe05f45332",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.690333Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "ece3f25a-af00-4fe8-a3bd-65b48ebc3740",
    "name" : "Delete Payment",
    "request" : {
      "urlPath" : "/accounting/payments/m503",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ece3f25a-af00-4fe8-a3bd-65b48ebc3740",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.690212Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "c32e520b-3447-40d3-ae8f-c477b1aeb491",
    "name" : "Delete Payment",
    "request" : {
      "urlPath" : "/accounting/payments/xnsd",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c32e520b-3447-40d3-ae8f-c477b1aeb491",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.690067Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "26b97072-4cfc-4f00-b9b4-f7f15765d8ec",
    "name" : "Delete Payment",
    "request" : {
      "urlPath" : "/accounting/payments/619b",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "26b97072-4cfc-4f00-b9b4-f7f15765d8ec",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.689945Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "04762959-e86c-4eaf-ae50-3751772612ca",
    "name" : "Delete Payment",
    "request" : {
      "urlPath" : "/accounting/payments/539b",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "04762959-e86c-4eaf-ae50-3751772612ca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.689814Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "e9257a63-975f-4e67-8d0e-30b64a32e0ee",
    "name" : "Delete Payment",
    "request" : {
      "urlPath" : "/accounting/payments/67to",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"payments\",\n  \"service\" : \"xero\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e9257a63-975f-4e67-8d0e-30b64a32e0ee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.689664Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "payments",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "DeletePaymentResponse"
          }
        }
      }
    }
  }, {
    "id" : "e9edbe03-c1b9-4592-ac07-e02fbbc980b0",
    "name" : "Create Payment",
    "request" : {
      "urlPath" : "/accounting/payments",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e9edbe03-c1b9-4592-ac07-e02fbbc980b0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.689517Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "11ab3732-231b-4aba-b762-25ece0742fdc",
    "name" : "Create Payment",
    "request" : {
      "urlPath" : "/accounting/payments",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "11ab3732-231b-4aba-b762-25ece0742fdc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.68945Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "47cebed7-8ef3-47c4-8003-f302cb908be4",
    "name" : "Create Payment",
    "request" : {
      "urlPath" : "/accounting/payments",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "47cebed7-8ef3-47c4-8003-f302cb908be4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.689364Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "04fa7112-547a-4afb-9275-10065f8ae58d",
    "name" : "Create Payment",
    "request" : {
      "urlPath" : "/accounting/payments",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "04fa7112-547a-4afb-9275-10065f8ae58d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.689299Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "8be22025-ec29-4aec-a876-e8cf07522947",
    "name" : "Create Payment",
    "request" : {
      "urlPath" : "/accounting/payments",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8be22025-ec29-4aec-a876-e8cf07522947",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.689233Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "05857107-382f-41fe-b2c2-ef613549afb4",
    "name" : "Create Payment",
    "request" : {
      "urlPath" : "/accounting/payments",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"payments\",\n  \"service\" : \"xero\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "05857107-382f-41fe-b2c2-ef613549afb4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.689136Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "payments",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreatePaymentResponse"
          }
        }
      }
    }
  }, {
    "id" : "9faa7ef9-8494-47c9-b182-d6016c69f41c",
    "name" : "List Payments",
    "request" : {
      "urlPath" : "/accounting/payments",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9faa7ef9-8494-47c9-b182-d6016c69f41c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.689056Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "db8b3ccf-121a-43d9-bea1-4f682492d93a",
    "name" : "List Payments",
    "request" : {
      "urlPath" : "/accounting/payments",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "db8b3ccf-121a-43d9-bea1-4f682492d93a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.688986Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "087efe8a-ec4a-4eff-9d33-0ef59afcd925",
    "name" : "List Payments",
    "request" : {
      "urlPath" : "/accounting/payments",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "087efe8a-ec4a-4eff-9d33-0ef59afcd925",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.688895Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "d2bce212-310b-4850-8c2e-bf96a2082a7a",
    "name" : "List Payments",
    "request" : {
      "urlPath" : "/accounting/payments",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d2bce212-310b-4850-8c2e-bf96a2082a7a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.688826Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "ca22a360-bf4f-40a2-83fd-c55e290b1fe8",
    "name" : "List Payments",
    "request" : {
      "urlPath" : "/accounting/payments",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ca22a360-bf4f-40a2-83fd-c55e290b1fe8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.688757Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "f7573973-e431-481d-9b7a-079ef86c1916",
    "name" : "List Payments",
    "request" : {
      "urlPath" : "/accounting/payments",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"note\" : \"Some notes about this payment\",\n    \"display_id\" : \"123456\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"type\" : \"accounts_receivable\",\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"over_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"pre_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"invoice\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"order\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"expense\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"over_payment\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"123456\",\n    \"payment_method\" : \"Credit Card\",\n    \"transaction_date\" : \"2021-05-01T12:00:00.000Z\",\n    \"accounts_receivable_account_id\" : \"123456\",\n    \"reconciled\" : true,\n    \"payment_method_reference\" : \"123456\",\n    \"created_by\" : \"12345\",\n    \"accounts_receivable_account_type\" : \"Account\",\n    \"total_amount\" : 49.99,\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  }, {\n    \"note\" : \"Some notes about this payment\",\n    \"display_id\" : \"123456\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"type\" : \"accounts_receivable\",\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"over_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"order\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"pre_payment\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"123456\",\n    \"payment_method\" : \"Credit Card\",\n    \"transaction_date\" : \"2021-05-01T12:00:00.000Z\",\n    \"accounts_receivable_account_id\" : \"123456\",\n    \"reconciled\" : true,\n    \"payment_method_reference\" : \"123456\",\n    \"created_by\" : \"12345\",\n    \"accounts_receivable_account_type\" : \"Account\",\n    \"total_amount\" : 49.99,\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  }, {\n    \"note\" : \"Some notes about this payment\",\n    \"display_id\" : \"123456\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"type\" : \"accounts_receivable\",\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"order\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"invoice\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"expense\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"123456\",\n    \"payment_method\" : \"Credit Card\",\n    \"transaction_date\" : \"2021-05-01T12:00:00.000Z\",\n    \"accounts_receivable_account_id\" : \"123456\",\n    \"reconciled\" : true,\n    \"payment_method_reference\" : \"123456\",\n    \"created_by\" : \"12345\",\n    \"accounts_receivable_account_type\" : \"Account\",\n    \"total_amount\" : 49.99,\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  }, {\n    \"note\" : \"Some notes about this payment\",\n    \"display_id\" : \"123456\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"type\" : \"accounts_receivable\",\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"expense\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"invoice\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"order\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"expense\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"123456\",\n    \"payment_method\" : \"Credit Card\",\n    \"transaction_date\" : \"2021-05-01T12:00:00.000Z\",\n    \"accounts_receivable_account_id\" : \"123456\",\n    \"reconciled\" : true,\n    \"payment_method_reference\" : \"123456\",\n    \"created_by\" : \"12345\",\n    \"accounts_receivable_account_type\" : \"Account\",\n    \"total_amount\" : 49.99,\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  }, {\n    \"note\" : \"Some notes about this payment\",\n    \"display_id\" : \"123456\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"type\" : \"accounts_receivable\",\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"expense\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"over_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"expense\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"over_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"pre_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"invoice\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"123456\",\n    \"payment_method\" : \"Credit Card\",\n    \"transaction_date\" : \"2021-05-01T12:00:00.000Z\",\n    \"accounts_receivable_account_id\" : \"123456\",\n    \"reconciled\" : true,\n    \"payment_method_reference\" : \"123456\",\n    \"created_by\" : \"12345\",\n    \"accounts_receivable_account_type\" : \"Account\",\n    \"total_amount\" : 49.99,\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  }, {\n    \"note\" : \"Some notes about this payment\",\n    \"display_id\" : \"123456\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"type\" : \"accounts_receivable\",\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"invoice\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"invoice\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"order\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"expense\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"pre_payment\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"123456\",\n    \"payment_method\" : \"Credit Card\",\n    \"transaction_date\" : \"2021-05-01T12:00:00.000Z\",\n    \"accounts_receivable_account_id\" : \"123456\",\n    \"reconciled\" : true,\n    \"payment_method_reference\" : \"123456\",\n    \"created_by\" : \"12345\",\n    \"accounts_receivable_account_type\" : \"Account\",\n    \"total_amount\" : 49.99,\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  }, {\n    \"note\" : \"Some notes about this payment\",\n    \"display_id\" : \"123456\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"type\" : \"accounts_receivable\",\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"pre_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"expense\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"pre_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"order\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"pre_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"invoice\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"pre_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"pre_payment\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"123456\",\n    \"payment_method\" : \"Credit Card\",\n    \"transaction_date\" : \"2021-05-01T12:00:00.000Z\",\n    \"accounts_receivable_account_id\" : \"123456\",\n    \"reconciled\" : true,\n    \"payment_method_reference\" : \"123456\",\n    \"created_by\" : \"12345\",\n    \"accounts_receivable_account_type\" : \"Account\",\n    \"total_amount\" : 49.99,\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  } ],\n  \"resource\" : \"payments\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"xero\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f7573973-e431-481d-9b7a-079ef86c1916",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.688651Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "paymentsAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/Payment"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "payments",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetPaymentsResponse",
            "x-graphql-type-name" : "PaymentList"
          }
        }
      }
    }
  }, {
    "id" : "3d75ebd5-960f-4d5f-8d51-4f7e9c43bcf6",
    "name" : "Update Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/3871",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3d75ebd5-960f-4d5f-8d51-4f7e9c43bcf6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.68715Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "80061fb8-6e18-4025-a64e-a5d4281cf638",
    "name" : "Update Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/x2gr",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "80061fb8-6e18-4025-a64e-a5d4281cf638",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.687019Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "8152f9f0-e627-40c0-bc9b-c7509fd360a0",
    "name" : "Update Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/ztko",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8152f9f0-e627-40c0-bc9b-c7509fd360a0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.686867Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "131c5cf0-1a50-49d8-9e7d-e1523fc9490c",
    "name" : "Update Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/vuu9",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "131c5cf0-1a50-49d8-9e7d-e1523fc9490c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.686741Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "3bedda40-c74e-4cde-9c93-a5be698de251",
    "name" : "Update Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/961o",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3bedda40-c74e-4cde-9c93-a5be698de251",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.68661Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "2c19840c-9738-45fe-927b-9339db25f769",
    "name" : "Update Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/m9p0",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"ledger-accounts\",\n  \"service\" : \"xero\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2c19840c-9738-45fe-927b-9339db25f769",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.686459Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "ledger-accounts",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateLedgerAccountResponse"
          }
        }
      }
    }
  }, {
    "id" : "57a3251f-9063-4a5d-92c0-9bc4fb1cb189",
    "name" : "Get Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/h47o",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "57a3251f-9063-4a5d-92c0-9bc4fb1cb189",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.686311Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "0ab671e6-e187-4769-8d99-a71c1692a670",
    "name" : "Get Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/574y",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0ab671e6-e187-4769-8d99-a71c1692a670",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.68618Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "e93ad319-fd8f-48ba-a0bb-2b30ff50aeb0",
    "name" : "Get Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/l11f",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e93ad319-fd8f-48ba-a0bb-2b30ff50aeb0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.686026Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "68e3e0f2-b9a1-4302-843c-15f5e96ce649",
    "name" : "Get Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/718g",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "68e3e0f2-b9a1-4302-843c-15f5e96ce649",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.685897Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "c3ac1135-59a8-4669-8583-67d5a1b7fff9",
    "name" : "Get Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/opw5",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c3ac1135-59a8-4669-8583-67d5a1b7fff9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.685763Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "6457e878-137c-44e3-9910-5a49e52a0578",
    "name" : "Get Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/igz8",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"code\" : \"453\",\n    \"fully_qualified_name\" : \"Asset.Bank.Checking_Account\",\n    \"display_id\" : \"1-12345\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Main checking account\",\n    \"sub_account\" : false,\n    \"type\" : \"bank\",\n    \"last_reconciliation_date\" : \"2020-09-30\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"sub_type\" : \"CHECKING_ACCOUNT\",\n    \"current_balance\" : 20000,\n    \"currency\" : \"USD\",\n    \"categories\" : [ {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    } ],\n    \"id\" : \"12345\",\n    \"opening_balance\" : 75000,\n    \"bank_account\" : {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    },\n    \"level\" : 1,\n    \"active\" : true,\n    \"classification\" : \"asset\",\n    \"created_by\" : \"12345\",\n    \"parent_account\" : {\n      \"display_id\" : \"1-1100\",\n      \"name\" : \"Bank Accounts\",\n      \"id\" : \"12345\"\n    },\n    \"tax_type\" : \"NONE\",\n    \"sub_accounts\" : [ {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    } ],\n    \"nominal_code\" : \"N091\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Bank account\",\n    \"updated_by\" : \"12345\",\n    \"header\" : true,\n    \"status\" : \"active\"\n  },\n  \"resource\" : \"ledger-accounts\",\n  \"service\" : \"xero\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6457e878-137c-44e3-9910-5a49e52a0578",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.685604Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/LedgerAccount"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "ledger-accounts",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetLedgerAccountResponse",
            "x-graphql-type-name" : "LedgerAccount"
          }
        }
      }
    }
  }, {
    "id" : "fc3bad77-e34a-42ec-8ae3-3806725d540e",
    "name" : "Delete Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/1z02",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fc3bad77-e34a-42ec-8ae3-3806725d540e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.685354Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "8023aa27-100c-4755-a198-51f3ed85cf7f",
    "name" : "Delete Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/tv55",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8023aa27-100c-4755-a198-51f3ed85cf7f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.685229Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "a1ea803a-1fbb-4c94-a71e-e98a0adef865",
    "name" : "Delete Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/dd4x",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a1ea803a-1fbb-4c94-a71e-e98a0adef865",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.685083Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "31d0495d-07b0-4a8f-96f8-622aa9362a5e",
    "name" : "Delete Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/z9p5",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "31d0495d-07b0-4a8f-96f8-622aa9362a5e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.684955Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "fecc105a-f6e7-4ca4-b67c-bd169e7a4b91",
    "name" : "Delete Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/86w0",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fecc105a-f6e7-4ca4-b67c-bd169e7a4b91",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.684831Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "52a86db9-1e65-4d0f-b561-cead5d89b4b3",
    "name" : "Delete Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts/c3yv",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"ledger-accounts\",\n  \"service\" : \"xero\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "52a86db9-1e65-4d0f-b561-cead5d89b4b3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.684684Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "ledger-accounts",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "DeleteLedgerAccountResponse"
          }
        }
      }
    }
  }, {
    "id" : "9ade92d5-da03-4c7a-946e-765aefb4f64e",
    "name" : "Create Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9ade92d5-da03-4c7a-946e-765aefb4f64e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.68451Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "5ad1f06c-3ca7-4390-99b8-8323f532e550",
    "name" : "Create Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5ad1f06c-3ca7-4390-99b8-8323f532e550",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.684441Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "f31f64b6-7a6f-4ec6-8979-0fd0bd9c0bd2",
    "name" : "Create Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f31f64b6-7a6f-4ec6-8979-0fd0bd9c0bd2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.684356Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "de76e9f3-985a-4495-8b1e-b2c270b4b58e",
    "name" : "Create Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "de76e9f3-985a-4495-8b1e-b2c270b4b58e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.684291Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "bc2ac918-7c74-4be6-9aa1-aa6146ae0160",
    "name" : "Create Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bc2ac918-7c74-4be6-9aa1-aa6146ae0160",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.684222Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "613532b0-798c-4ab5-aee4-927b53508557",
    "name" : "Create Ledger Account",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"ledger-accounts\",\n  \"service\" : \"xero\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "613532b0-798c-4ab5-aee4-927b53508557",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.684129Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "ledger-accounts",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateLedgerAccountResponse"
          }
        }
      }
    }
  }, {
    "id" : "498a83ec-bf3f-4558-9ae4-36f0cb49e198",
    "name" : "List Ledger Accounts",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "498a83ec-bf3f-4558-9ae4-36f0cb49e198",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.684046Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "e10a388e-ca80-456f-93fd-3d5d31ffb6d4",
    "name" : "List Ledger Accounts",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e10a388e-ca80-456f-93fd-3d5d31ffb6d4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.683979Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "35570d25-7836-460b-888a-a7aa7115a3a1",
    "name" : "List Ledger Accounts",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "35570d25-7836-460b-888a-a7aa7115a3a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.683887Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "c0d2d2e7-7df5-49ee-baeb-9cad9475966d",
    "name" : "List Ledger Accounts",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c0d2d2e7-7df5-49ee-baeb-9cad9475966d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.683822Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "ebcdf051-7347-4e98-97f1-38fed45520a7",
    "name" : "List Ledger Accounts",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ebcdf051-7347-4e98-97f1-38fed45520a7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.683756Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "fbda1ea9-9354-4301-b804-147ecfc480ee",
    "name" : "List Ledger Accounts",
    "request" : {
      "urlPath" : "/accounting/ledger-accounts",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"code\" : \"453\",\n    \"fully_qualified_name\" : \"Asset.Bank.Checking_Account\",\n    \"display_id\" : \"1-12345\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Main checking account\",\n    \"sub_account\" : false,\n    \"type\" : \"bank\",\n    \"last_reconciliation_date\" : \"2020-09-30\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"sub_type\" : \"CHECKING_ACCOUNT\",\n    \"current_balance\" : 20000,\n    \"currency\" : \"USD\",\n    \"categories\" : [ {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    } ],\n    \"id\" : \"12345\",\n    \"opening_balance\" : 75000,\n    \"bank_account\" : {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    },\n    \"level\" : 1,\n    \"active\" : true,\n    \"classification\" : \"asset\",\n    \"created_by\" : \"12345\",\n    \"parent_account\" : {\n      \"display_id\" : \"1-1100\",\n      \"name\" : \"Bank Accounts\",\n      \"id\" : \"12345\"\n    },\n    \"tax_type\" : \"NONE\",\n    \"sub_accounts\" : [ {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    } ],\n    \"nominal_code\" : \"N091\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Bank account\",\n    \"updated_by\" : \"12345\",\n    \"header\" : true,\n    \"status\" : \"active\"\n  }, {\n    \"code\" : \"453\",\n    \"fully_qualified_name\" : \"Asset.Bank.Checking_Account\",\n    \"display_id\" : \"1-12345\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Main checking account\",\n    \"sub_account\" : false,\n    \"type\" : \"bank\",\n    \"last_reconciliation_date\" : \"2020-09-30\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"sub_type\" : \"CHECKING_ACCOUNT\",\n    \"current_balance\" : 20000,\n    \"currency\" : \"USD\",\n    \"categories\" : [ {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    } ],\n    \"id\" : \"12345\",\n    \"opening_balance\" : 75000,\n    \"bank_account\" : {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    },\n    \"level\" : 1,\n    \"active\" : true,\n    \"classification\" : \"asset\",\n    \"created_by\" : \"12345\",\n    \"parent_account\" : {\n      \"display_id\" : \"1-1100\",\n      \"name\" : \"Bank Accounts\",\n      \"id\" : \"12345\"\n    },\n    \"tax_type\" : \"NONE\",\n    \"sub_accounts\" : [ {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    } ],\n    \"nominal_code\" : \"N091\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Bank account\",\n    \"updated_by\" : \"12345\",\n    \"header\" : true,\n    \"status\" : \"active\"\n  }, {\n    \"code\" : \"453\",\n    \"fully_qualified_name\" : \"Asset.Bank.Checking_Account\",\n    \"display_id\" : \"1-12345\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Main checking account\",\n    \"sub_account\" : false,\n    \"type\" : \"bank\",\n    \"last_reconciliation_date\" : \"2020-09-30\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"sub_type\" : \"CHECKING_ACCOUNT\",\n    \"current_balance\" : 20000,\n    \"currency\" : \"USD\",\n    \"categories\" : [ {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    } ],\n    \"id\" : \"12345\",\n    \"opening_balance\" : 75000,\n    \"bank_account\" : {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    },\n    \"level\" : 1,\n    \"active\" : true,\n    \"classification\" : \"asset\",\n    \"created_by\" : \"12345\",\n    \"parent_account\" : {\n      \"display_id\" : \"1-1100\",\n      \"name\" : \"Bank Accounts\",\n      \"id\" : \"12345\"\n    },\n    \"tax_type\" : \"NONE\",\n    \"sub_accounts\" : [ {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    } ],\n    \"nominal_code\" : \"N091\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Bank account\",\n    \"updated_by\" : \"12345\",\n    \"header\" : true,\n    \"status\" : \"active\"\n  }, {\n    \"code\" : \"453\",\n    \"fully_qualified_name\" : \"Asset.Bank.Checking_Account\",\n    \"display_id\" : \"1-12345\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Main checking account\",\n    \"sub_account\" : false,\n    \"type\" : \"bank\",\n    \"last_reconciliation_date\" : \"2020-09-30\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"sub_type\" : \"CHECKING_ACCOUNT\",\n    \"current_balance\" : 20000,\n    \"currency\" : \"USD\",\n    \"categories\" : [ {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    } ],\n    \"id\" : \"12345\",\n    \"opening_balance\" : 75000,\n    \"bank_account\" : {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    },\n    \"level\" : 1,\n    \"active\" : true,\n    \"classification\" : \"asset\",\n    \"created_by\" : \"12345\",\n    \"parent_account\" : {\n      \"display_id\" : \"1-1100\",\n      \"name\" : \"Bank Accounts\",\n      \"id\" : \"12345\"\n    },\n    \"tax_type\" : \"NONE\",\n    \"sub_accounts\" : [ {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    } ],\n    \"nominal_code\" : \"N091\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Bank account\",\n    \"updated_by\" : \"12345\",\n    \"header\" : true,\n    \"status\" : \"active\"\n  }, {\n    \"code\" : \"453\",\n    \"fully_qualified_name\" : \"Asset.Bank.Checking_Account\",\n    \"display_id\" : \"1-12345\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Main checking account\",\n    \"sub_account\" : false,\n    \"type\" : \"bank\",\n    \"last_reconciliation_date\" : \"2020-09-30\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"sub_type\" : \"CHECKING_ACCOUNT\",\n    \"current_balance\" : 20000,\n    \"currency\" : \"USD\",\n    \"categories\" : [ {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    } ],\n    \"id\" : \"12345\",\n    \"opening_balance\" : 75000,\n    \"bank_account\" : {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    },\n    \"level\" : 1,\n    \"active\" : true,\n    \"classification\" : \"asset\",\n    \"created_by\" : \"12345\",\n    \"parent_account\" : {\n      \"display_id\" : \"1-1100\",\n      \"name\" : \"Bank Accounts\",\n      \"id\" : \"12345\"\n    },\n    \"tax_type\" : \"NONE\",\n    \"sub_accounts\" : [ {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    } ],\n    \"nominal_code\" : \"N091\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Bank account\",\n    \"updated_by\" : \"12345\",\n    \"header\" : true,\n    \"status\" : \"active\"\n  }, {\n    \"code\" : \"453\",\n    \"fully_qualified_name\" : \"Asset.Bank.Checking_Account\",\n    \"display_id\" : \"1-12345\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Main checking account\",\n    \"sub_account\" : false,\n    \"type\" : \"bank\",\n    \"last_reconciliation_date\" : \"2020-09-30\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"sub_type\" : \"CHECKING_ACCOUNT\",\n    \"current_balance\" : 20000,\n    \"currency\" : \"USD\",\n    \"categories\" : [ {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    } ],\n    \"id\" : \"12345\",\n    \"opening_balance\" : 75000,\n    \"bank_account\" : {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    },\n    \"level\" : 1,\n    \"active\" : true,\n    \"classification\" : \"asset\",\n    \"created_by\" : \"12345\",\n    \"parent_account\" : {\n      \"display_id\" : \"1-1100\",\n      \"name\" : \"Bank Accounts\",\n      \"id\" : \"12345\"\n    },\n    \"tax_type\" : \"NONE\",\n    \"sub_accounts\" : [ {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    } ],\n    \"nominal_code\" : \"N091\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Bank account\",\n    \"updated_by\" : \"12345\",\n    \"header\" : true,\n    \"status\" : \"active\"\n  }, {\n    \"code\" : \"453\",\n    \"fully_qualified_name\" : \"Asset.Bank.Checking_Account\",\n    \"display_id\" : \"1-12345\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Main checking account\",\n    \"sub_account\" : false,\n    \"type\" : \"bank\",\n    \"last_reconciliation_date\" : \"2020-09-30\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"sub_type\" : \"CHECKING_ACCOUNT\",\n    \"current_balance\" : 20000,\n    \"currency\" : \"USD\",\n    \"categories\" : [ {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    }, {\n      \"name\" : \"Finance Charges Expense\",\n      \"id\" : \"12345\"\n    } ],\n    \"id\" : \"12345\",\n    \"opening_balance\" : 75000,\n    \"bank_account\" : {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    },\n    \"level\" : 1,\n    \"active\" : true,\n    \"classification\" : \"asset\",\n    \"created_by\" : \"12345\",\n    \"parent_account\" : {\n      \"display_id\" : \"1-1100\",\n      \"name\" : \"Bank Accounts\",\n      \"id\" : \"12345\"\n    },\n    \"tax_type\" : \"NONE\",\n    \"sub_accounts\" : [ {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    }, {\n      \"account_sub_name\" : \"Petty Cash\",\n      \"id\" : \"12345\"\n    } ],\n    \"nominal_code\" : \"N091\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Bank account\",\n    \"updated_by\" : \"12345\",\n    \"header\" : true,\n    \"status\" : \"active\"\n  } ],\n  \"resource\" : \"ledger-accounts\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"xero\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fbda1ea9-9354-4301-b804-147ecfc480ee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.683656Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ledgerAccountsAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/LedgerAccount"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "ledger-accounts",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetLedgerAccountsResponse",
            "x-graphql-type-name" : "LedgerAccountList"
          }
        }
      }
    }
  }, {
    "id" : "92a97424-f5e9-44dc-80eb-a847371f5575",
    "name" : "Update Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/r770",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "92a97424-f5e9-44dc-80eb-a847371f5575",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.682748Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "1552f8ff-2580-4f43-84a6-06e315d8319f",
    "name" : "Update Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/1yry",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1552f8ff-2580-4f43-84a6-06e315d8319f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.682623Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "2965161d-1fe9-4858-91a5-f1a224f7ed53",
    "name" : "Update Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/156e",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2965161d-1fe9-4858-91a5-f1a224f7ed53",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.682478Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "86c19326-cf46-400f-8414-306bdd0ec23e",
    "name" : "Update Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/aqdo",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "86c19326-cf46-400f-8414-306bdd0ec23e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.682348Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "adfae27f-f9b1-47e5-88c9-e574c1561c15",
    "name" : "Update Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/jo32",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "adfae27f-f9b1-47e5-88c9-e574c1561c15",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.682226Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "ae1c2e55-0c0c-4c5a-896d-ea1ed710fca6",
    "name" : "Update Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/47b9",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"journal-entries\",\n  \"service\" : \"quickbooks\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ae1c2e55-0c0c-4c5a-896d-ea1ed710fca6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.682079Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "journal-entries",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "quickbooks",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d1d3e422-7a35-46b5-8425-7873c2d6c69c",
    "name" : "Get Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/b1s1",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d1d3e422-7a35-46b5-8425-7873c2d6c69c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.681941Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "4bb046a9-7d9b-4ac7-af92-77df937d71ce",
    "name" : "Get Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/s79t",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4bb046a9-7d9b-4ac7-af92-77df937d71ce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.681816Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "9cceac06-9211-4c9c-8029-820f010e8ba9",
    "name" : "Get Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/3c1h",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9cceac06-9211-4c9c-8029-820f010e8ba9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.681672Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "5d110bb1-2be6-4240-b3e4-49c37eba7976",
    "name" : "Get Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/ty25",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5d110bb1-2be6-4240-b3e4-49c37eba7976",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.68155Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "f9a5c646-e53f-405f-8e61-537593ba3d09",
    "name" : "Get Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/726p",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f9a5c646-e53f-405f-8e61-537593ba3d09",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.681424Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "1de39cdc-a7c5-45f4-977a-e54401dad4d9",
    "name" : "Get Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/yp9e",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"currency_rate\" : 0.69,\n    \"journal_symbol\" : \"IND\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"updated_by\" : \"12345\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"memo\" : \"Thank you for your business and have a great day!\",\n    \"currency\" : \"USD\",\n    \"id\" : \"12345\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    } ],\n    \"posted_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"title\" : \"Purchase Invoice-Inventory (USD): 2019/02/01 Batch Summary Entry\",\n    \"created_by\" : \"12345\"\n  },\n  \"resource\" : \"journal-entries\",\n  \"service\" : \"quickbooks\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1de39cdc-a7c5-45f4-977a-e54401dad4d9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.681279Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/JournalEntry"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "journal-entries",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "quickbooks",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-graphql-type-name" : "JournalEntry"
          }
        }
      }
    }
  }, {
    "id" : "c0459644-9444-4353-ab9f-53807d53292c",
    "name" : "Delete Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/20qt",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c0459644-9444-4353-ab9f-53807d53292c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.681042Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "7e34c058-dd94-454c-9d07-f0994ff8a410",
    "name" : "Delete Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/emhx",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7e34c058-dd94-454c-9d07-f0994ff8a410",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.680904Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "d4e879b0-29f5-41df-9858-0c046f64638f",
    "name" : "Delete Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/3j56",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d4e879b0-29f5-41df-9858-0c046f64638f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.680757Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "3f444553-1fae-4c60-96ee-9540c9e9f34e",
    "name" : "Delete Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/hcbr",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3f444553-1fae-4c60-96ee-9540c9e9f34e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.680631Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "d63eb49c-6852-4915-945d-02979a0c0ff8",
    "name" : "Delete Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/u94l",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d63eb49c-6852-4915-945d-02979a0c0ff8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.68051Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "818932ea-f1f6-4b49-b532-49984597a480",
    "name" : "Delete Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries/2yw2",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"journal-entries\",\n  \"service\" : \"quickbooks\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "818932ea-f1f6-4b49-b532-49984597a480",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.680363Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "journal-entries",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "quickbooks",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "67c15706-e2e0-468c-b738-6f74ff8d420c",
    "name" : "Create Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "67c15706-e2e0-468c-b738-6f74ff8d420c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.680183Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "5d1fc501-e7a2-4d46-870e-eb3f5e985222",
    "name" : "Create Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5d1fc501-e7a2-4d46-870e-eb3f5e985222",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.680118Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "21cd0968-1d49-4a97-a7c9-9e6a5ca6d74b",
    "name" : "Create Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "21cd0968-1d49-4a97-a7c9-9e6a5ca6d74b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.680033Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "65fa79be-15eb-482d-bb8f-8f76ebcf39db",
    "name" : "Create Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "65fa79be-15eb-482d-bb8f-8f76ebcf39db",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.679967Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "a5690c42-9159-4d49-a785-79305bfe18ce",
    "name" : "Create Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a5690c42-9159-4d49-a785-79305bfe18ce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.679901Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "7fba1600-f0be-4472-b3d8-73c8d218bcb5",
    "name" : "Create Journal Entry",
    "request" : {
      "urlPath" : "/accounting/journal-entries",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"journal-entries\",\n  \"service\" : \"quickbooks\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7fba1600-f0be-4472-b3d8-73c8d218bcb5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.679815Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "journal-entries",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "quickbooks",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "bad39d7a-f219-4650-8565-bea090fde8fb",
    "name" : "List Journal Entries",
    "request" : {
      "urlPath" : "/accounting/journal-entries",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bad39d7a-f219-4650-8565-bea090fde8fb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.679734Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "48def362-243a-438f-b449-c754b22836c8",
    "name" : "List Journal Entries",
    "request" : {
      "urlPath" : "/accounting/journal-entries",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "48def362-243a-438f-b449-c754b22836c8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.679659Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "ea18612d-b04f-4d9c-8ca9-68ef85c0dc55",
    "name" : "List Journal Entries",
    "request" : {
      "urlPath" : "/accounting/journal-entries",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ea18612d-b04f-4d9c-8ca9-68ef85c0dc55",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.67956Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "f1dcafb4-1226-4794-9c58-b16f0eaa1beb",
    "name" : "List Journal Entries",
    "request" : {
      "urlPath" : "/accounting/journal-entries",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f1dcafb4-1226-4794-9c58-b16f0eaa1beb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.679488Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "85b3265e-0a9d-4c8b-8693-10c2604b8737",
    "name" : "List Journal Entries",
    "request" : {
      "urlPath" : "/accounting/journal-entries",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "85b3265e-0a9d-4c8b-8693-10c2604b8737",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.679417Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "c20a53fe-0b74-452b-b0d7-18ba2b09cbe9",
    "name" : "List Journal Entries",
    "request" : {
      "urlPath" : "/accounting/journal-entries",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"currency_rate\" : 0.69,\n    \"journal_symbol\" : \"IND\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"updated_by\" : \"12345\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"memo\" : \"Thank you for your business and have a great day!\",\n    \"currency\" : \"USD\",\n    \"id\" : \"12345\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    } ],\n    \"posted_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"title\" : \"Purchase Invoice-Inventory (USD): 2019/02/01 Batch Summary Entry\",\n    \"created_by\" : \"12345\"\n  }, {\n    \"currency_rate\" : 0.69,\n    \"journal_symbol\" : \"IND\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"updated_by\" : \"12345\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"memo\" : \"Thank you for your business and have a great day!\",\n    \"currency\" : \"USD\",\n    \"id\" : \"12345\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    } ],\n    \"posted_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"title\" : \"Purchase Invoice-Inventory (USD): 2019/02/01 Batch Summary Entry\",\n    \"created_by\" : \"12345\"\n  }, {\n    \"currency_rate\" : 0.69,\n    \"journal_symbol\" : \"IND\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"updated_by\" : \"12345\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"memo\" : \"Thank you for your business and have a great day!\",\n    \"currency\" : \"USD\",\n    \"id\" : \"12345\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    } ],\n    \"posted_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"title\" : \"Purchase Invoice-Inventory (USD): 2019/02/01 Batch Summary Entry\",\n    \"created_by\" : \"12345\"\n  }, {\n    \"currency_rate\" : 0.69,\n    \"journal_symbol\" : \"IND\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"updated_by\" : \"12345\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"memo\" : \"Thank you for your business and have a great day!\",\n    \"currency\" : \"USD\",\n    \"id\" : \"12345\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    } ],\n    \"posted_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"title\" : \"Purchase Invoice-Inventory (USD): 2019/02/01 Batch Summary Entry\",\n    \"created_by\" : \"12345\"\n  }, {\n    \"currency_rate\" : 0.69,\n    \"journal_symbol\" : \"IND\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"updated_by\" : \"12345\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"memo\" : \"Thank you for your business and have a great day!\",\n    \"currency\" : \"USD\",\n    \"id\" : \"12345\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    } ],\n    \"posted_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"title\" : \"Purchase Invoice-Inventory (USD): 2019/02/01 Batch Summary Entry\",\n    \"created_by\" : \"12345\"\n  }, {\n    \"currency_rate\" : 0.69,\n    \"journal_symbol\" : \"IND\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"updated_by\" : \"12345\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"memo\" : \"Thank you for your business and have a great day!\",\n    \"currency\" : \"USD\",\n    \"id\" : \"12345\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    } ],\n    \"posted_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"title\" : \"Purchase Invoice-Inventory (USD): 2019/02/01 Batch Summary Entry\",\n    \"created_by\" : \"12345\"\n  }, {\n    \"currency_rate\" : 0.69,\n    \"journal_symbol\" : \"IND\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"updated_by\" : \"12345\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"memo\" : \"Thank you for your business and have a great day!\",\n    \"currency\" : \"USD\",\n    \"id\" : \"12345\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    } ],\n    \"posted_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"title\" : \"Purchase Invoice-Inventory (USD): 2019/02/01 Batch Summary Entry\",\n    \"created_by\" : \"12345\"\n  }, {\n    \"currency_rate\" : 0.69,\n    \"journal_symbol\" : \"IND\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"updated_by\" : \"12345\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"memo\" : \"Thank you for your business and have a great day!\",\n    \"currency\" : \"USD\",\n    \"id\" : \"12345\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    }, {\n      \"tax_amount\" : 27500,\n      \"department_id\" : \"12345\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"tracking_category\" : {\n        \"name\" : \"New York\",\n        \"id\" : \"123456\"\n      },\n      \"id\" : \"12345\",\n      \"type\" : \"debit\",\n      \"location_id\" : \"12345\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    } ],\n    \"posted_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"title\" : \"Purchase Invoice-Inventory (USD): 2019/02/01 Batch Summary Entry\",\n    \"created_by\" : \"12345\"\n  } ],\n  \"resource\" : \"journal-entries\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"quickbooks\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c20a53fe-0b74-452b-b0d7-18ba2b09cbe9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.679294Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "journalEntriesAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/JournalEntry"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "journal-entries",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "quickbooks",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-graphql-type-name" : "JournalEntryList"
          }
        }
      }
    }
  }, {
    "id" : "95c45a8b-bcdb-4d2a-9806-64c1bc86ffa2",
    "name" : "Update Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/2c31",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "95c45a8b-bcdb-4d2a-9806-64c1bc86ffa2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.677749Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "e8c2d3b1-b928-4b67-b626-6c2a8569a84b",
    "name" : "Update Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/c984",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e8c2d3b1-b928-4b67-b626-6c2a8569a84b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.677623Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "9f14c735-d958-4921-84f7-a301c2ce232e",
    "name" : "Update Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/e88f",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9f14c735-d958-4921-84f7-a301c2ce232e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.677479Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "11e3f578-82de-42ed-af03-32b0fdd3d552",
    "name" : "Update Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/btmz",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "11e3f578-82de-42ed-af03-32b0fdd3d552",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.677352Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "88d07a84-b07a-4bfc-a728-cbf1b08fee6e",
    "name" : "Update Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/dcb6",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "88d07a84-b07a-4bfc-a728-cbf1b08fee6e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.677226Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "524321e8-bb69-4b79-9d95-aec3470305e5",
    "name" : "Update Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/t4gu",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"invoices\",\n  \"service\" : \"xero\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "524321e8-bb69-4b79-9d95-aec3470305e5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.677075Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/InvoiceResponse"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "invoices",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateInvoiceResponse"
          }
        }
      }
    }
  }, {
    "id" : "d4d42f3b-f750-4043-881c-2db9c13753a7",
    "name" : "Get Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/91xu",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d4d42f3b-f750-4043-881c-2db9c13753a7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.67693Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "e3339960-340d-46f4-8c05-81bd58c3e027",
    "name" : "Get Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/0zfk",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e3339960-340d-46f4-8c05-81bd58c3e027",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.676804Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "db4bc08e-84d7-4fd8-925e-a9c4540ad4bf",
    "name" : "Get Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/ct91",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "db4bc08e-84d7-4fd8-925e-a9c4540ad4bf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.676648Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "ae1cc5aa-3613-49fd-ba9e-ad6977f568e1",
    "name" : "Get Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/63gi",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ae1cc5aa-3613-49fd-ba9e-ad6977f568e1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.676518Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "c0dfafd7-687e-4f19-a059-b197968cc4f4",
    "name" : "Get Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/7xdl",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c0dfafd7-687e-4f19-a059-b197968cc4f4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.676385Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "d2dc5b75-b532-4fbb-b7d1-aacdf028e565",
    "name" : "Get Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/07cy",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"billing_address\" : {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    },\n    \"discount_percentage\" : 5.5,\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"customer_memo\" : \"Thank you for your business and have a great day!\",\n    \"type\" : \"service\",\n    \"invoice_date\" : \"2020-09-30\",\n    \"reference\" : \"123456\",\n    \"number\" : \"OIT00546\",\n    \"currency_rate\" : 0.69,\n    \"po_number\" : \"90000117\",\n    \"total\" : 27500,\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"terms\" : \"Net 30 days\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"shipping_address\" : {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    },\n    \"due_date\" : \"2020-09-30\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"deposit\" : 0,\n    \"template_id\" : \"123456\",\n    \"invoice_sent\" : true,\n    \"source_document_url\" : \"https://www.invoicesolution.com/invoice/123456\",\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"draft\"\n  },\n  \"resource\" : \"invoices\",\n  \"service\" : \"xero\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d2dc5b75-b532-4fbb-b7d1-aacdf028e565",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.676222Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Invoice"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "invoices",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetInvoiceResponse",
            "x-graphql-type-name" : "Invoice"
          }
        }
      }
    }
  }, {
    "id" : "6b2f1005-1036-4c73-a85f-69c349138013",
    "name" : "Delete Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/zmm6",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6b2f1005-1036-4c73-a85f-69c349138013",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.675775Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "e6b4c359-08ff-4170-8a24-f4f6df6a0f3e",
    "name" : "Delete Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/5r4i",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e6b4c359-08ff-4170-8a24-f4f6df6a0f3e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.675647Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "a39b7b02-6c61-4052-9b39-96b793d452b4",
    "name" : "Delete Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/n701",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a39b7b02-6c61-4052-9b39-96b793d452b4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.675485Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "54bb993a-f9a5-4783-9c85-13201a4eba73",
    "name" : "Delete Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/54eq",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "54bb993a-f9a5-4783-9c85-13201a4eba73",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.675354Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "b10f2e0d-def4-4b26-bac7-67ac7f7914ac",
    "name" : "Delete Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/i68n",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b10f2e0d-def4-4b26-bac7-67ac7f7914ac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.675228Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "d8628f0a-ebd5-4890-9239-4ffe1c9019c9",
    "name" : "Delete Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices/x90f",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"invoices\",\n  \"service\" : \"xero\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d8628f0a-ebd5-4890-9239-4ffe1c9019c9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.675076Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/InvoiceResponse"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "invoices",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "DeleteInvoiceResponse"
          }
        }
      }
    }
  }, {
    "id" : "8966f9b1-2122-4352-95d3-e7e6a6a15695",
    "name" : "Create Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8966f9b1-2122-4352-95d3-e7e6a6a15695",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.674903Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "df504bc2-1c60-41f1-bcaf-e64b804c1255",
    "name" : "Create Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "df504bc2-1c60-41f1-bcaf-e64b804c1255",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.674837Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "1a214992-2957-40df-aaae-0c25db43206c",
    "name" : "Create Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1a214992-2957-40df-aaae-0c25db43206c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.674752Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "b753ef51-8820-4e99-a788-e87e249eebd9",
    "name" : "Create Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b753ef51-8820-4e99-a788-e87e249eebd9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.674687Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "db448aba-9dd0-4c53-a55e-008c99ddb42a",
    "name" : "Create Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "db448aba-9dd0-4c53-a55e-008c99ddb42a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.67462Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "36f66327-cf06-452d-98bc-88bc4e891dae",
    "name" : "Create Invoice",
    "request" : {
      "urlPath" : "/accounting/invoices",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"invoices\",\n  \"service\" : \"xero\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "36f66327-cf06-452d-98bc-88bc4e891dae",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.674532Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/InvoiceResponse"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "invoices",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateInvoiceResponse"
          }
        }
      }
    }
  }, {
    "id" : "e1cacd8a-86a8-46fd-a04a-5d00de6b4d75",
    "name" : "List Invoices",
    "request" : {
      "urlPath" : "/accounting/invoices",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e1cacd8a-86a8-46fd-a04a-5d00de6b4d75",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.674451Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "daf4c47d-61ad-45ba-9bc1-d39dce631f54",
    "name" : "List Invoices",
    "request" : {
      "urlPath" : "/accounting/invoices",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "daf4c47d-61ad-45ba-9bc1-d39dce631f54",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.674385Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "67a5ac24-2c0d-4243-90e5-bdfae7670cda",
    "name" : "List Invoices",
    "request" : {
      "urlPath" : "/accounting/invoices",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "67a5ac24-2c0d-4243-90e5-bdfae7670cda",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.674294Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "e989f3e6-2795-44af-b58f-79aa091ce940",
    "name" : "List Invoices",
    "request" : {
      "urlPath" : "/accounting/invoices",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e989f3e6-2795-44af-b58f-79aa091ce940",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.674226Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "8e82ca4c-d838-47d6-9f87-f3ccf02a81fe",
    "name" : "List Invoices",
    "request" : {
      "urlPath" : "/accounting/invoices",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8e82ca4c-d838-47d6-9f87-f3ccf02a81fe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.674151Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "f3ead64c-c15d-4817-9838-ac3f01e55179",
    "name" : "List Invoices",
    "request" : {
      "urlPath" : "/accounting/invoices",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"billing_address\" : {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    },\n    \"discount_percentage\" : 5.5,\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"customer_memo\" : \"Thank you for your business and have a great day!\",\n    \"type\" : \"service\",\n    \"invoice_date\" : \"2020-09-30\",\n    \"reference\" : \"123456\",\n    \"number\" : \"OIT00546\",\n    \"currency_rate\" : 0.69,\n    \"po_number\" : \"90000117\",\n    \"total\" : 27500,\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"terms\" : \"Net 30 days\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"shipping_address\" : {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    },\n    \"due_date\" : \"2020-09-30\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"deposit\" : 0,\n    \"template_id\" : \"123456\",\n    \"invoice_sent\" : true,\n    \"source_document_url\" : \"https://www.invoicesolution.com/invoice/123456\",\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"draft\"\n  }, {\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"billing_address\" : {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    },\n    \"discount_percentage\" : 5.5,\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"customer_memo\" : \"Thank you for your business and have a great day!\",\n    \"type\" : \"service\",\n    \"invoice_date\" : \"2020-09-30\",\n    \"reference\" : \"123456\",\n    \"number\" : \"OIT00546\",\n    \"currency_rate\" : 0.69,\n    \"po_number\" : \"90000117\",\n    \"total\" : 27500,\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"terms\" : \"Net 30 days\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"shipping_address\" : {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    },\n    \"due_date\" : \"2020-09-30\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"deposit\" : 0,\n    \"template_id\" : \"123456\",\n    \"invoice_sent\" : true,\n    \"source_document_url\" : \"https://www.invoicesolution.com/invoice/123456\",\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"draft\"\n  } ],\n  \"resource\" : \"invoices\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"xero\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f3ead64c-c15d-4817-9838-ac3f01e55179",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.674047Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoicesAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/Invoice"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "invoices",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetInvoicesResponse",
            "x-graphql-type-name" : "InvoiceList"
          }
        }
      }
    }
  }, {
    "id" : "080e6cfd-a643-458f-824d-add399536d9d",
    "name" : "Update Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/1bz5",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "080e6cfd-a643-458f-824d-add399536d9d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.673134Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "e4ff4e5f-2e2a-4518-83ec-a44ccf973960",
    "name" : "Update Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/8163",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e4ff4e5f-2e2a-4518-83ec-a44ccf973960",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.673009Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "874eea07-0ee8-4c0b-9712-68877759c7b7",
    "name" : "Update Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/8bgn",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "874eea07-0ee8-4c0b-9712-68877759c7b7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.672865Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "0b745d21-3814-4e29-8a00-49b80be422c0",
    "name" : "Update Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/vmve",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0b745d21-3814-4e29-8a00-49b80be422c0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.672737Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "b91d2e92-0cad-4c67-82fa-c30ea3ba2707",
    "name" : "Update Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/1693",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b91d2e92-0cad-4c67-82fa-c30ea3ba2707",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.672608Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "659918be-cc7c-4821-be4a-a46aa626b5aa",
    "name" : "Update Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/7m1v",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"invoice-items\",\n  \"service\" : \"xero\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "659918be-cc7c-4821-be4a-a46aa626b5aa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.672452Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "invoice-items",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateInvoiceItemsResponse"
          }
        }
      }
    }
  }, {
    "id" : "3766b81c-127b-48d8-96f3-753103b381c1",
    "name" : "Get Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/o87z",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3766b81c-127b-48d8-96f3-753103b381c1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.672285Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "1bef2da0-223c-4720-a32c-bb617544b25e",
    "name" : "Get Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/9uja",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1bef2da0-223c-4720-a32c-bb617544b25e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.672161Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "7189ab16-2c0e-4734-adae-ea1d012c5a11",
    "name" : "Get Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/96ck",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7189ab16-2c0e-4734-adae-ea1d012c5a11",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.672014Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "ad416af7-265c-46dd-ab61-581493a30c1d",
    "name" : "Get Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/2uh6",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ad416af7-265c-46dd-ab61-581493a30c1d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.671886Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "b1be37f2-fe42-44f9-a2ea-7adbf61e3371",
    "name" : "Get Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/0je9",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b1be37f2-fe42-44f9-a2ea-7adbf61e3371",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.671743Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "6066aba0-b071-4f99-9e55-4e9329c12277",
    "name" : "Get Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/v7xi",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"sold\" : true,\n    \"code\" : \"120-C\",\n    \"quantity\" : 1,\n    \"purchase_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"sales_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"active\" : true,\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n    \"tracked\" : true,\n    \"type\" : \"inventory\",\n    \"unit_price\" : 27500.5,\n    \"created_by\" : \"12345\",\n    \"inventory_date\" : \"2020-10-30\",\n    \"asset_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"expense_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"purchased\" : true,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Model Y\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"123456\",\n    \"income_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    }\n  },\n  \"resource\" : \"invoice-items\",\n  \"service\" : \"xero\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6066aba0-b071-4f99-9e55-4e9329c12277",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.671584Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/InvoiceItem"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "invoice-items",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetInvoiceItemResponse",
            "x-graphql-type-name" : "InvoiceItem"
          }
        }
      }
    }
  }, {
    "id" : "43e8d3d9-1971-4b26-9769-61896686fa8a",
    "name" : "Delete Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/x4i3",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "43e8d3d9-1971-4b26-9769-61896686fa8a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.671333Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "601584be-ac52-4f9d-8d39-7ef8d6f87b57",
    "name" : "Delete Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/55jg",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "601584be-ac52-4f9d-8d39-7ef8d6f87b57",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.671191Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "7a2ce2d6-7016-467e-af96-694df2c7f1ff",
    "name" : "Delete Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/zkc4",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7a2ce2d6-7016-467e-af96-694df2c7f1ff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.671033Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "04accf8a-468e-409c-8ad3-435f90f5d841",
    "name" : "Delete Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/d51l",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "04accf8a-468e-409c-8ad3-435f90f5d841",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.670898Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "9cfafbb8-e78d-4378-91db-2e50b1e6e3a4",
    "name" : "Delete Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/kml9",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9cfafbb8-e78d-4378-91db-2e50b1e6e3a4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.67074Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "52b804d6-f576-407d-9f04-a2b5ff7f6acf",
    "name" : "Delete Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items/t6l9",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"tax-rates\",\n  \"service\" : \"xero\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "52b804d6-f576-407d-9f04-a2b5ff7f6acf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.670572Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "tax-rates",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "DeleteTaxRateResponse"
          }
        }
      }
    }
  }, {
    "id" : "da709dd4-cbef-482d-ab6a-0f46c7d704b7",
    "name" : "Create Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "da709dd4-cbef-482d-ab6a-0f46c7d704b7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.670353Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "3546541b-22c3-4579-a3a5-8d1d002235b7",
    "name" : "Create Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3546541b-22c3-4579-a3a5-8d1d002235b7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.670281Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "ff92979d-dd3c-4177-a356-707248eede3f",
    "name" : "Create Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ff92979d-dd3c-4177-a356-707248eede3f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.67019Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "34319066-1e6a-4da9-97dc-68c6d1e4fa5e",
    "name" : "Create Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "34319066-1e6a-4da9-97dc-68c6d1e4fa5e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.670119Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "fdf22510-12ae-4e80-b969-db3a13d7efb4",
    "name" : "Create Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fdf22510-12ae-4e80-b969-db3a13d7efb4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.670046Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "9e07b069-0b94-473f-acfe-ad50e7cb7637",
    "name" : "Create Invoice Item",
    "request" : {
      "urlPath" : "/accounting/invoice-items",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"invoice-items\",\n  \"service\" : \"xero\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9e07b069-0b94-473f-acfe-ad50e7cb7637",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.669947Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "invoice-items",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateInvoiceItemResponse"
          }
        }
      }
    }
  }, {
    "id" : "93ce4a24-08d7-43d6-b995-f781f39634d7",
    "name" : "List Invoice Items",
    "request" : {
      "urlPath" : "/accounting/invoice-items",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "93ce4a24-08d7-43d6-b995-f781f39634d7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.669853Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "d8b7b1eb-5c30-4616-afd9-a5a21e0c0930",
    "name" : "List Invoice Items",
    "request" : {
      "urlPath" : "/accounting/invoice-items",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d8b7b1eb-5c30-4616-afd9-a5a21e0c0930",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.669774Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "09a7447c-4a45-4561-9c8e-dd7591cf68d4",
    "name" : "List Invoice Items",
    "request" : {
      "urlPath" : "/accounting/invoice-items",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "09a7447c-4a45-4561-9c8e-dd7591cf68d4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.669674Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "b654b904-8214-4685-b430-f71d18e46f95",
    "name" : "List Invoice Items",
    "request" : {
      "urlPath" : "/accounting/invoice-items",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b654b904-8214-4685-b430-f71d18e46f95",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.669595Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "c5dab4b6-6da9-4d4b-87c1-a4433d859963",
    "name" : "List Invoice Items",
    "request" : {
      "urlPath" : "/accounting/invoice-items",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c5dab4b6-6da9-4d4b-87c1-a4433d859963",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.669515Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "637a16d9-ba24-4a6a-bc54-3ad9e005f34c",
    "name" : "List Invoice Items",
    "request" : {
      "urlPath" : "/accounting/invoice-items",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"sold\" : true,\n    \"code\" : \"120-C\",\n    \"quantity\" : 1,\n    \"purchase_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"sales_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"active\" : true,\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n    \"tracked\" : true,\n    \"type\" : \"inventory\",\n    \"unit_price\" : 27500.5,\n    \"created_by\" : \"12345\",\n    \"inventory_date\" : \"2020-10-30\",\n    \"asset_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"expense_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"purchased\" : true,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Model Y\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"123456\",\n    \"income_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    }\n  }, {\n    \"sold\" : true,\n    \"code\" : \"120-C\",\n    \"quantity\" : 1,\n    \"purchase_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"sales_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"active\" : true,\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n    \"tracked\" : true,\n    \"type\" : \"inventory\",\n    \"unit_price\" : 27500.5,\n    \"created_by\" : \"12345\",\n    \"inventory_date\" : \"2020-10-30\",\n    \"asset_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"expense_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"purchased\" : true,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Model Y\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"123456\",\n    \"income_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    }\n  }, {\n    \"sold\" : true,\n    \"code\" : \"120-C\",\n    \"quantity\" : 1,\n    \"purchase_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"sales_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"active\" : true,\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n    \"tracked\" : true,\n    \"type\" : \"inventory\",\n    \"unit_price\" : 27500.5,\n    \"created_by\" : \"12345\",\n    \"inventory_date\" : \"2020-10-30\",\n    \"asset_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"expense_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"purchased\" : true,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Model Y\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"123456\",\n    \"income_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    }\n  }, {\n    \"sold\" : true,\n    \"code\" : \"120-C\",\n    \"quantity\" : 1,\n    \"purchase_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"sales_details\" : {\n      \"tax_inclusive\" : true,\n      \"unit_of_measure\" : \"pc.\",\n      \"unit_price\" : 27500.5,\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      }\n    },\n    \"active\" : true,\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n    \"tracked\" : true,\n    \"type\" : \"inventory\",\n    \"unit_price\" : 27500.5,\n    \"created_by\" : \"12345\",\n    \"inventory_date\" : \"2020-10-30\",\n    \"asset_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"expense_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"purchased\" : true,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"name\" : \"Model Y\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"123456\",\n    \"income_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    }\n  } ],\n  \"resource\" : \"invoice-items\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"xero\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "637a16d9-ba24-4a6a-bc54-3ad9e005f34c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.669392Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "invoiceItemsAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/InvoiceItem"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "invoice-items",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetInvoiceItemsResponse",
            "x-graphql-type-name" : "InvoiceItemList"
          }
        }
      }
    }
  }, {
    "id" : "7cb2e61b-3440-4b4c-bf88-8eac5cb89cea",
    "name" : "Update Customer",
    "request" : {
      "urlPath" : "/accounting/customers/3jl6",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7cb2e61b-3440-4b4c-bf88-8eac5cb89cea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.668825Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "8c4ac10d-78a5-4af1-85c1-0f2921bcf086",
    "name" : "Update Customer",
    "request" : {
      "urlPath" : "/accounting/customers/mf1b",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8c4ac10d-78a5-4af1-85c1-0f2921bcf086",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.668691Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "05d1a9c9-dd29-4b01-98a4-234651694e49",
    "name" : "Update Customer",
    "request" : {
      "urlPath" : "/accounting/customers/qz36",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "05d1a9c9-dd29-4b01-98a4-234651694e49",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.668534Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "32f17bdb-2f6f-4025-9cbb-417a8b53f54f",
    "name" : "Update Customer",
    "request" : {
      "urlPath" : "/accounting/customers/q18v",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "32f17bdb-2f6f-4025-9cbb-417a8b53f54f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.668404Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "14446885-ef0f-49c8-a1c8-5d1a1b991ae4",
    "name" : "Update Customer",
    "request" : {
      "urlPath" : "/accounting/customers/je48",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "14446885-ef0f-49c8-a1c8-5d1a1b991ae4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.668267Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "36e733ca-5d0b-4f04-b96f-1526d9889a26",
    "name" : "Update Customer",
    "request" : {
      "urlPath" : "/accounting/customers/30y0",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"customers\",\n  \"service\" : \"xero\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "36e733ca-5d0b-4f04-b96f-1526d9889a26",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.668109Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "customers",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateCustomerResponse"
          }
        }
      }
    }
  }, {
    "id" : "83406ce0-fc1d-453f-8bc1-fabd0c717a56",
    "name" : "Get Customer",
    "request" : {
      "urlPath" : "/accounting/customers/nekk",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "83406ce0-fc1d-453f-8bc1-fabd0c717a56",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.667963Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "84642cf7-eb21-4d64-8d4f-be926a91021b",
    "name" : "Get Customer",
    "request" : {
      "urlPath" : "/accounting/customers/2ku5",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "84642cf7-eb21-4d64-8d4f-be926a91021b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.66783Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "31711ca3-0ff1-4a26-9d05-cdb7264138df",
    "name" : "Get Customer",
    "request" : {
      "urlPath" : "/accounting/customers/c1k4",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "31711ca3-0ff1-4a26-9d05-cdb7264138df",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.667672Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "a004e689-e2b8-4ecc-9095-e5052e8b3a6a",
    "name" : "Get Customer",
    "request" : {
      "urlPath" : "/accounting/customers/mg01",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a004e689-e2b8-4ecc-9095-e5052e8b3a6a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.66754Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "387cc3c2-374a-4b97-9695-b5c8bf8d3013",
    "name" : "Get Customer",
    "request" : {
      "urlPath" : "/accounting/customers/4449",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "387cc3c2-374a-4b97-9695-b5c8bf8d3013",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.667404Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "fafaf7a5-bc82-442a-a939-33f42ecf8eea",
    "name" : "Get Customer",
    "request" : {
      "urlPath" : "/accounting/customers/2a88",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"parent\" : {\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\"\n    },\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"notes\" : \"Some notes about this customer\",\n    \"display_id\" : \"EMP00101\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"project\" : false,\n    \"suffix\" : \"Jr.\",\n    \"title\" : \"CEO\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"tax_number\" : \"US123945459\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"first_name\" : \"Elon\",\n    \"individual\" : true,\n    \"last_name\" : \"Musk\",\n    \"display_name\" : \"Windsurf Shop\",\n    \"middle_name\" : \"D.\",\n    \"created_by\" : \"12345\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_name\" : \"SpaceX\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"bank_accounts\" : [ {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    } ],\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"status\" : \"active\"\n  },\n  \"resource\" : \"customers\",\n  \"service\" : \"xero\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fafaf7a5-bc82-442a-a939-33f42ecf8eea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.667237Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/AccountingCustomer"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "customers",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetCustomerResponse"
          }
        }
      }
    }
  }, {
    "id" : "5bac6707-49a9-4ebe-a4fe-0739872967af",
    "name" : "Delete Customer",
    "request" : {
      "urlPath" : "/accounting/customers/28s2",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5bac6707-49a9-4ebe-a4fe-0739872967af",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.666645Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "3ab95d5a-f5e2-4a7a-9e34-469ea42f565d",
    "name" : "Delete Customer",
    "request" : {
      "urlPath" : "/accounting/customers/8lwv",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3ab95d5a-f5e2-4a7a-9e34-469ea42f565d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.66651Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "c5c7b60d-47e5-43e8-babd-b61cb80b0636",
    "name" : "Delete Customer",
    "request" : {
      "urlPath" : "/accounting/customers/4z5c",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c5c7b60d-47e5-43e8-babd-b61cb80b0636",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.666352Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "32d29a60-bca3-44ed-bc6c-b2ed9a25cd89",
    "name" : "Delete Customer",
    "request" : {
      "urlPath" : "/accounting/customers/s3om",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "32d29a60-bca3-44ed-bc6c-b2ed9a25cd89",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.666222Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "da289fc5-62cd-40bd-8bff-828ebca39d43",
    "name" : "Delete Customer",
    "request" : {
      "urlPath" : "/accounting/customers/ts6t",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "da289fc5-62cd-40bd-8bff-828ebca39d43",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.666084Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "b1f35720-1a22-4da7-a494-de451a8f5a7d",
    "name" : "Delete Customer",
    "request" : {
      "urlPath" : "/accounting/customers/3y08",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"customers\",\n  \"service\" : \"xero\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b1f35720-1a22-4da7-a494-de451a8f5a7d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.665924Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "customers",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "DeleteCustomerResponse"
          }
        }
      }
    }
  }, {
    "id" : "c5ccd118-d472-4f8e-8de8-edc0b3b2fde5",
    "name" : "Create Customer",
    "request" : {
      "urlPath" : "/accounting/customers",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c5ccd118-d472-4f8e-8de8-edc0b3b2fde5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.665733Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "3b3fa8f1-9323-42e9-93a7-8fe06b0bbcbe",
    "name" : "Create Customer",
    "request" : {
      "urlPath" : "/accounting/customers",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3b3fa8f1-9323-42e9-93a7-8fe06b0bbcbe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.665663Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "2d6e3208-cb52-4b7b-a358-040247f02d4b",
    "name" : "Create Customer",
    "request" : {
      "urlPath" : "/accounting/customers",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2d6e3208-cb52-4b7b-a358-040247f02d4b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.66557Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "36229c8f-f88a-4c91-95ac-4c7bb58e226e",
    "name" : "Create Customer",
    "request" : {
      "urlPath" : "/accounting/customers",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "36229c8f-f88a-4c91-95ac-4c7bb58e226e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.6655Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "ad4d23fa-e1ec-42cc-a5d7-bbff81ae6a67",
    "name" : "Create Customer",
    "request" : {
      "urlPath" : "/accounting/customers",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ad4d23fa-e1ec-42cc-a5d7-bbff81ae6a67",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.665429Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "660addf5-4472-4221-9f92-8435e2f85823",
    "name" : "Create Customer",
    "request" : {
      "urlPath" : "/accounting/customers",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"customers\",\n  \"service\" : \"xero\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "660addf5-4472-4221-9f92-8435e2f85823",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.665329Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "customers",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateCustomerResponse"
          }
        }
      }
    }
  }, {
    "id" : "478f6399-7205-4c23-9cc8-5c61b1c06877",
    "name" : "List Customers",
    "request" : {
      "urlPath" : "/accounting/customers",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "478f6399-7205-4c23-9cc8-5c61b1c06877",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.665243Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "ddb245f1-417d-4e7f-911d-cb37a2fd75bc",
    "name" : "List Customers",
    "request" : {
      "urlPath" : "/accounting/customers",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ddb245f1-417d-4e7f-911d-cb37a2fd75bc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.665167Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "3f3bfcde-0c0d-48b5-8975-9bd5d1972d31",
    "name" : "List Customers",
    "request" : {
      "urlPath" : "/accounting/customers",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3f3bfcde-0c0d-48b5-8975-9bd5d1972d31",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.665067Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "24d51adf-972a-4d92-94bd-c45ec7df3384",
    "name" : "List Customers",
    "request" : {
      "urlPath" : "/accounting/customers",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "24d51adf-972a-4d92-94bd-c45ec7df3384",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.664993Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "c9252139-7899-4ab4-bd62-98520cf1dab1",
    "name" : "List Customers",
    "request" : {
      "urlPath" : "/accounting/customers",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c9252139-7899-4ab4-bd62-98520cf1dab1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.664913Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "a11a6c3a-662e-4800-8b02-9c8ff15813fa",
    "name" : "List Customers",
    "request" : {
      "urlPath" : "/accounting/customers",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"parent\" : {\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\"\n    },\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"notes\" : \"Some notes about this customer\",\n    \"display_id\" : \"EMP00101\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"project\" : false,\n    \"suffix\" : \"Jr.\",\n    \"title\" : \"CEO\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"tax_number\" : \"US123945459\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"first_name\" : \"Elon\",\n    \"individual\" : true,\n    \"last_name\" : \"Musk\",\n    \"display_name\" : \"Windsurf Shop\",\n    \"middle_name\" : \"D.\",\n    \"created_by\" : \"12345\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_name\" : \"SpaceX\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"bank_accounts\" : [ {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    } ],\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"status\" : \"active\"\n  }, {\n    \"parent\" : {\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\"\n    },\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"notes\" : \"Some notes about this customer\",\n    \"display_id\" : \"EMP00101\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"project\" : false,\n    \"suffix\" : \"Jr.\",\n    \"title\" : \"CEO\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"tax_number\" : \"US123945459\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"first_name\" : \"Elon\",\n    \"individual\" : true,\n    \"last_name\" : \"Musk\",\n    \"display_name\" : \"Windsurf Shop\",\n    \"middle_name\" : \"D.\",\n    \"created_by\" : \"12345\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_name\" : \"SpaceX\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"bank_accounts\" : [ {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    }, {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    } ],\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"status\" : \"active\"\n  }, {\n    \"parent\" : {\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\"\n    },\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"notes\" : \"Some notes about this customer\",\n    \"display_id\" : \"EMP00101\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"project\" : false,\n    \"suffix\" : \"Jr.\",\n    \"title\" : \"CEO\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"tax_number\" : \"US123945459\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"first_name\" : \"Elon\",\n    \"individual\" : true,\n    \"last_name\" : \"Musk\",\n    \"display_name\" : \"Windsurf Shop\",\n    \"middle_name\" : \"D.\",\n    \"created_by\" : \"12345\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_name\" : \"SpaceX\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"bank_accounts\" : [ {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    } ],\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"status\" : \"active\"\n  }, {\n    \"parent\" : {\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\"\n    },\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"notes\" : \"Some notes about this customer\",\n    \"display_id\" : \"EMP00101\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"project\" : false,\n    \"suffix\" : \"Jr.\",\n    \"title\" : \"CEO\",\n    \"tax_rate\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"tax_number\" : \"US123945459\",\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"first_name\" : \"Elon\",\n    \"individual\" : true,\n    \"last_name\" : \"Musk\",\n    \"display_name\" : \"Windsurf Shop\",\n    \"middle_name\" : \"D.\",\n    \"created_by\" : \"12345\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_name\" : \"SpaceX\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"bank_accounts\" : [ {\n      \"bsb_number\" : \"062-001\",\n      \"account_number\" : \"123465\",\n      \"bank_code\" : \"BNH\",\n      \"account_type\" : \"credit_card\",\n      \"account_name\" : \"SPACEX LLC\",\n      \"iban\" : \"CH2989144532982975332\",\n      \"currency\" : \"USD\",\n      \"bic\" : \"AUDSCHGGXXX\",\n      \"branch_identifier\" : \"001\"\n    } ],\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"status\" : \"active\"\n  } ],\n  \"resource\" : \"customers\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"xero\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a11a6c3a-662e-4800-8b02-9c8ff15813fa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.66479Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "customersAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/AccountingCustomer"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "customers",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetCustomersResponse",
            "x-graphql-type-name" : "CustomerList"
          }
        }
      }
    }
  }, {
    "id" : "7155d117-d157-4f9c-8447-b27cbce422a6",
    "name" : "Update Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/qth4",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7155d117-d157-4f9c-8447-b27cbce422a6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.663221Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "580f8689-64e0-4711-b3e8-281623096655",
    "name" : "Update Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/35hb",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "580f8689-64e0-4711-b3e8-281623096655",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.663086Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "3c25929f-a910-463f-9bec-722dadc4e220",
    "name" : "Update Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/918x",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3c25929f-a910-463f-9bec-722dadc4e220",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.662934Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "50bddc5e-8f35-4fd2-9453-309926e0d55b",
    "name" : "Update Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/qi96",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "50bddc5e-8f35-4fd2-9453-309926e0d55b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.662803Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "36a35e40-8f96-40b4-be84-d65a85091c5d",
    "name" : "Update Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/7pl7",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "36a35e40-8f96-40b4-be84-d65a85091c5d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.66267Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "a4435e60-1944-4d57-ab9d-a440fccafcdc",
    "name" : "Update Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/ts7f",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"credit-notes\",\n  \"service\" : \"xero\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a4435e60-1944-4d57-ab9d-a440fccafcdc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.662502Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "credit-notes",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateCreditNoteResponse"
          }
        }
      }
    }
  }, {
    "id" : "bd2683e9-51f4-4f91-bd31-f24666fa413a",
    "name" : "Get Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/ge8r",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bd2683e9-51f4-4f91-bd31-f24666fa413a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.662354Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "417f8218-c450-49c3-8d86-290b05ab652e",
    "name" : "Get Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/1s61",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "417f8218-c450-49c3-8d86-290b05ab652e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.662221Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "fe6bf087-7995-4e11-9382-ba50601c9534",
    "name" : "Get Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/1w38",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fe6bf087-7995-4e11-9382-ba50601c9534",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.66207Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "e6567dd6-8116-4d59-b32f-3dfac6980fa3",
    "name" : "Get Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/3d6p",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e6567dd6-8116-4d59-b32f-3dfac6980fa3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.661941Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "6dbe85a0-ad8c-43bc-9e64-7477d2f6b21c",
    "name" : "Get Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/55ck",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6dbe85a0-ad8c-43bc-9e64-7477d2f6b21c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.661814Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "088b1855-c866-4811-b4d6-f6a5169b0435",
    "name" : "Get Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/87br",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"note\" : \"Some notes about this credit note\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"type\" : \"accounts_receivable_credit\",\n    \"reference\" : \"123456\",\n    \"number\" : \"OIT00546\",\n    \"currency_rate\" : 0.69,\n    \"remaining_credit\" : 27500,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"order\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"over_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"credit_memo\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"invoice\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"invoice\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"expense\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"expense\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"expense\"\n    } ],\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"date_paid\" : \"2021-05-01T12:00:00.000Z\",\n    \"currency\" : \"USD\",\n    \"id\" : \"123456\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"total_amount\" : 49.99,\n    \"date_issued\" : \"2021-05-01T12:00:00.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  },\n  \"resource\" : \"credit-notes\",\n  \"service\" : \"xero\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "088b1855-c866-4811-b4d6-f6a5169b0435",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.661652Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/CreditNote"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "credit-notes",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetCreditNoteResponse"
          }
        }
      }
    }
  }, {
    "id" : "95043a93-a4d5-4a9a-8331-7457d1bcbe2b",
    "name" : "Delete Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/toly",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "95043a93-a4d5-4a9a-8331-7457d1bcbe2b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.661069Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "26a69a1a-386a-4ff2-af5e-0478c53bfe9e",
    "name" : "Delete Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/y50i",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "26a69a1a-386a-4ff2-af5e-0478c53bfe9e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.660927Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "ca7c9f6a-bafd-4040-a213-393c98e8f622",
    "name" : "Delete Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/60b5",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ca7c9f6a-bafd-4040-a213-393c98e8f622",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.660775Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "47ae52b5-2bcf-4bfe-bcfb-34a6b06916d5",
    "name" : "Delete Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/i2mn",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "47ae52b5-2bcf-4bfe-bcfb-34a6b06916d5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.660621Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "52b41fcb-1605-4ad0-8a47-e4e568a9eb59",
    "name" : "Delete Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/8q73",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "52b41fcb-1605-4ad0-8a47-e4e568a9eb59",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.660492Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "1b8d9c4b-9be8-4534-8612-0feae3f2ad43",
    "name" : "Delete Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes/81wk",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"credit-notes\",\n  \"service\" : \"xero\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1b8d9c4b-9be8-4534-8612-0feae3f2ad43",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.660337Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "credit-notes",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "DeleteCreditNoteResponse"
          }
        }
      }
    }
  }, {
    "id" : "47c92247-2bc4-4076-9ec9-1da0a223c563",
    "name" : "Create Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "47c92247-2bc4-4076-9ec9-1da0a223c563",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.660156Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "551e0b48-2c52-4a24-8f9f-a99d94dad879",
    "name" : "Create Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "551e0b48-2c52-4a24-8f9f-a99d94dad879",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.660086Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "eeefa51a-7456-4354-b4e9-c3cc14fcfa28",
    "name" : "Create Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eeefa51a-7456-4354-b4e9-c3cc14fcfa28",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.659995Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "7c9fd42a-5841-4a67-b4e1-74eb45c814f3",
    "name" : "Create Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7c9fd42a-5841-4a67-b4e1-74eb45c814f3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.659927Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "207e70b2-ae61-43f1-952f-0b37fbadf53d",
    "name" : "Create Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "207e70b2-ae61-43f1-952f-0b37fbadf53d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.659855Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "5b35ec34-33c7-49f2-a402-8e8a023419e8",
    "name" : "Create Credit Note",
    "request" : {
      "urlPath" : "/accounting/credit-notes",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"credit-notes\",\n  \"service\" : \"xero\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5b35ec34-33c7-49f2-a402-8e8a023419e8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.659762Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "credit-notes",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateCreditNoteResponse"
          }
        }
      }
    }
  }, {
    "id" : "9a0f334b-09e6-4d0b-bafc-bf57a244ff56",
    "name" : "List Credit Notes",
    "request" : {
      "urlPath" : "/accounting/credit-notes",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9a0f334b-09e6-4d0b-bafc-bf57a244ff56",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.659679Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "f5b1aacc-5395-432a-8bb6-0152d79832e9",
    "name" : "List Credit Notes",
    "request" : {
      "urlPath" : "/accounting/credit-notes",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f5b1aacc-5395-432a-8bb6-0152d79832e9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.6596Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "77d575e2-0fe5-4880-a0d6-c4d6a4d80c4a",
    "name" : "List Credit Notes",
    "request" : {
      "urlPath" : "/accounting/credit-notes",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "77d575e2-0fe5-4880-a0d6-c4d6a4d80c4a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.659508Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "1d6e62e7-cfd1-47b7-b9e0-2b2b18cb2293",
    "name" : "List Credit Notes",
    "request" : {
      "urlPath" : "/accounting/credit-notes",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1d6e62e7-cfd1-47b7-b9e0-2b2b18cb2293",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.659433Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "20a3e995-dced-4996-9bd9-dc455e7c9cd1",
    "name" : "List Credit Notes",
    "request" : {
      "urlPath" : "/accounting/credit-notes",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "20a3e995-dced-4996-9bd9-dc455e7c9cd1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.659361Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "1468a294-c131-40b2-9f7e-67d2b763dd10",
    "name" : "List Credit Notes",
    "request" : {
      "urlPath" : "/accounting/credit-notes",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"note\" : \"Some notes about this credit note\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"type\" : \"accounts_receivable_credit\",\n    \"reference\" : \"123456\",\n    \"number\" : \"OIT00546\",\n    \"currency_rate\" : 0.69,\n    \"remaining_credit\" : 27500,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"pre_payment\"\n    } ],\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"date_paid\" : \"2021-05-01T12:00:00.000Z\",\n    \"currency\" : \"USD\",\n    \"id\" : \"123456\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"total_amount\" : 49.99,\n    \"date_issued\" : \"2021-05-01T12:00:00.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  }, {\n    \"note\" : \"Some notes about this credit note\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"type\" : \"accounts_receivable_credit\",\n    \"reference\" : \"123456\",\n    \"number\" : \"OIT00546\",\n    \"currency_rate\" : 0.69,\n    \"remaining_credit\" : 27500,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"pre_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"over_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"pre_payment\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"pre_payment\"\n    } ],\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"date_paid\" : \"2021-05-01T12:00:00.000Z\",\n    \"currency\" : \"USD\",\n    \"id\" : \"123456\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"total_amount\" : 49.99,\n    \"date_issued\" : \"2021-05-01T12:00:00.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  }, {\n    \"note\" : \"Some notes about this credit note\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"sales_item\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"type\" : \"accounts_receivable_credit\",\n    \"reference\" : \"123456\",\n    \"number\" : \"OIT00546\",\n    \"currency_rate\" : 0.69,\n    \"remaining_credit\" : 27500,\n    \"allocations\" : [ {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"order\"\n    }, {\n      \"amount\" : 49.99,\n      \"code\" : \"N091\",\n      \"id\" : \"123456\",\n      \"type\" : \"expense\"\n    } ],\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"date_paid\" : \"2021-05-01T12:00:00.000Z\",\n    \"currency\" : \"USD\",\n    \"id\" : \"123456\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"total_amount\" : 49.99,\n    \"date_issued\" : \"2021-05-01T12:00:00.000Z\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"customer\" : {\n      \"display_id\" : \"CUST00101\",\n      \"company_name\" : \"The boring company\",\n      \"name\" : \"Windsurf Shop\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"status\" : \"authorised\"\n  } ],\n  \"resource\" : \"credit-notes\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"xero\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1468a294-c131-40b2-9f7e-67d2b763dd10",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.659251Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "creditNotesAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/CreditNote"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "credit-notes",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetCreditNotesResponse"
          }
        }
      }
    }
  }, {
    "id" : "bc0a77ff-4647-4b66-80df-c12f1a98fe13",
    "name" : "Get company info",
    "request" : {
      "urlPath" : "/accounting/company-info",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bc0a77ff-4647-4b66-80df-c12f1a98fe13",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.657998Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companyInfoOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "24230dbf-be20-448b-a5b5-40d7b0a78414",
    "name" : "Get company info",
    "request" : {
      "urlPath" : "/accounting/company-info",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "24230dbf-be20-448b-a5b5-40d7b0a78414",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.657928Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companyInfoOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "256cea4d-ba79-42ca-906a-c0ee086cae8e",
    "name" : "Get company info",
    "request" : {
      "urlPath" : "/accounting/company-info",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "256cea4d-ba79-42ca-906a-c0ee086cae8e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.657834Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companyInfoOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "c461e226-c768-43b2-ae4a-9e1b924c7090",
    "name" : "Get company info",
    "request" : {
      "urlPath" : "/accounting/company-info",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c461e226-c768-43b2-ae4a-9e1b924c7090",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.657766Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companyInfoOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "864838f3-2185-425a-bf54-ee325fc4718c",
    "name" : "Get company info",
    "request" : {
      "urlPath" : "/accounting/company-info",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "864838f3-2185-425a-bf54-ee325fc4718c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.657693Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companyInfoOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "ce9bef8d-4515-451e-8f04-fa83d95f7d53",
    "name" : "Get company info",
    "request" : {
      "urlPath" : "/accounting/company-info",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"country\" : \"US\",\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"default_sales_tax\" : {\n      \"code\" : \"N-T\",\n      \"name\" : \"GST on Purchases\",\n      \"id\" : \"123456\"\n    },\n    \"company_start_date\" : \"2015-06-05\",\n    \"automated_sales_tax\" : true,\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"language\" : \"EN\",\n    \"created_by\" : \"12345\",\n    \"sales_tax_enabled\" : true,\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"sales_tax_number\" : \"111.222.333\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"company_name\" : \"SpaceX\",\n    \"row_version\" : \"1-12345\",\n    \"updated_by\" : \"12345\",\n    \"currency\" : \"USD\",\n    \"fiscal_year_start_month\" : \"January\",\n    \"id\" : \"12345\",\n    \"legal_name\" : \"SpaceX Inc.\",\n    \"status\" : \"active\"\n  },\n  \"resource\" : \"company-info\",\n  \"service\" : \"xero\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ce9bef8d-4515-451e-8f04-fa83d95f7d53",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.657593Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companyInfoOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/CompanyInfo"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "company-info",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetCompanyInfoResponse",
            "x-graphql-type-name" : "CompanyInfo"
          }
        }
      }
    }
  }, {
    "id" : "6b2ad3f0-141b-4235-90a4-bc6a6024f57d",
    "name" : "Update Bill",
    "request" : {
      "urlPath" : "/accounting/bills/287x",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6b2ad3f0-141b-4235-90a4-bc6a6024f57d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.657134Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "f022ab31-5cef-44bd-9291-b44b3cb3ea33",
    "name" : "Update Bill",
    "request" : {
      "urlPath" : "/accounting/bills/1e2j",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f022ab31-5cef-44bd-9291-b44b3cb3ea33",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.657Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "42096495-51c2-43d7-a1f3-f8e514cc90e1",
    "name" : "Update Bill",
    "request" : {
      "urlPath" : "/accounting/bills/4le9",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "42096495-51c2-43d7-a1f3-f8e514cc90e1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.656842Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "bfc5850c-74f6-444d-9e63-eceb7ee46dda",
    "name" : "Update Bill",
    "request" : {
      "urlPath" : "/accounting/bills/yc2f",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bfc5850c-74f6-444d-9e63-eceb7ee46dda",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.656709Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "7e1fefa4-23b4-416a-b99d-78e18e28aa0f",
    "name" : "Update Bill",
    "request" : {
      "urlPath" : "/accounting/bills/466z",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7e1fefa4-23b4-416a-b99d-78e18e28aa0f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.656578Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "6ba54423-481c-48c8-8823-1069cf426075",
    "name" : "Update Bill",
    "request" : {
      "urlPath" : "/accounting/bills/20o1",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"bills\",\n  \"service\" : \"xero\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6ba54423-481c-48c8-8823-1069cf426075",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.656428Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "bills",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateBillResponse"
          }
        }
      }
    }
  }, {
    "id" : "46802f6c-d54d-4da6-96e8-502ee7cc7a28",
    "name" : "Get Bill",
    "request" : {
      "urlPath" : "/accounting/bills/grl1",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "46802f6c-d54d-4da6-96e8-502ee7cc7a28",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.65628Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "237322dc-a1bb-4c53-be51-dda035510d9a",
    "name" : "Get Bill",
    "request" : {
      "urlPath" : "/accounting/bills/65n2",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "237322dc-a1bb-4c53-be51-dda035510d9a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.656147Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "b9aee2f5-e86e-4888-a747-e9c10cec36c2",
    "name" : "Get Bill",
    "request" : {
      "urlPath" : "/accounting/bills/u6q0",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b9aee2f5-e86e-4888-a747-e9c10cec36c2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.65599Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "a8ef66ca-3b85-4513-a0f2-80c62b4e2e56",
    "name" : "Get Bill",
    "request" : {
      "urlPath" : "/accounting/bills/g8p5",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a8ef66ca-3b85-4513-a0f2-80c62b4e2e56",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.65585Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "3235f0c6-cd3e-4b8a-b0fd-50ed0ee7afde",
    "name" : "Get Bill",
    "request" : {
      "urlPath" : "/accounting/bills/j1vm",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3235f0c6-cd3e-4b8a-b0fd-50ed0ee7afde",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.655712Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "e366a87f-7102-4d26-be05-698b7af6ef87",
    "name" : "Get Bill",
    "request" : {
      "urlPath" : "/accounting/bills/4ar9",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"notes\" : \"Some notes about this bill.\",\n    \"bill_date\" : \"2020-09-30\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"po_number\" : \"90000117\",\n    \"total\" : 27500,\n    \"bill_number\" : \"10001\",\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"terms\" : \"Net 30 days\",\n    \"ledger_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"due_date\" : \"2020-10-30\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"deposit\" : 0,\n    \"paid_date\" : \"2020-10-30\",\n    \"status\" : \"draft\"\n  },\n  \"resource\" : \"bills\",\n  \"service\" : \"xero\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e366a87f-7102-4d26-be05-698b7af6ef87",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.655526Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Bill"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "bills",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetBillResponse",
            "x-graphql-type-name" : "Bill"
          }
        }
      }
    }
  }, {
    "id" : "d2a15446-0a04-48d2-9625-7dc46ceb4c06",
    "name" : "Delete Bill",
    "request" : {
      "urlPath" : "/accounting/bills/543b",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d2a15446-0a04-48d2-9625-7dc46ceb4c06",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.655113Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "504f5edc-2ce4-4760-a9fe-8a0d0d8a701d",
    "name" : "Delete Bill",
    "request" : {
      "urlPath" : "/accounting/bills/m1v2",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "504f5edc-2ce4-4760-a9fe-8a0d0d8a701d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.654975Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "959b5d2a-fd5e-45bf-9068-9aa96ac17253",
    "name" : "Delete Bill",
    "request" : {
      "urlPath" : "/accounting/bills/0n1o",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "959b5d2a-fd5e-45bf-9068-9aa96ac17253",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.654817Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "24a479c7-484f-4060-8daa-dd561ee00ff0",
    "name" : "Delete Bill",
    "request" : {
      "urlPath" : "/accounting/bills/0ruk",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "24a479c7-484f-4060-8daa-dd561ee00ff0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.654678Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "25cc8d73-2880-4de9-bafa-49e75bc9ec7a",
    "name" : "Delete Bill",
    "request" : {
      "urlPath" : "/accounting/bills/t10m",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "25cc8d73-2880-4de9-bafa-49e75bc9ec7a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.654539Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "f455c146-7d50-40a5-9490-542386780374",
    "name" : "Delete Bill",
    "request" : {
      "urlPath" : "/accounting/bills/n74t",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"bills\",\n  \"service\" : \"xero\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f455c146-7d50-40a5-9490-542386780374",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.65437Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "bills",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "DeleteBillResponse"
          }
        }
      }
    }
  }, {
    "id" : "69ceafd8-1b90-4d71-9a1e-925d9bdb6c52",
    "name" : "Create Bill",
    "request" : {
      "urlPath" : "/accounting/bills",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "69ceafd8-1b90-4d71-9a1e-925d9bdb6c52",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.654115Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "4bed44d0-0661-4e00-89e8-ba854a7e6548",
    "name" : "Create Bill",
    "request" : {
      "urlPath" : "/accounting/bills",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4bed44d0-0661-4e00-89e8-ba854a7e6548",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.654046Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "8101b975-16a4-43c7-b339-d32e098b9771",
    "name" : "Create Bill",
    "request" : {
      "urlPath" : "/accounting/bills",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8101b975-16a4-43c7-b339-d32e098b9771",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.653956Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "aa583fad-6e6e-44da-ac2e-f2a1eb704251",
    "name" : "Create Bill",
    "request" : {
      "urlPath" : "/accounting/bills",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aa583fad-6e6e-44da-ac2e-f2a1eb704251",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.653889Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "853abada-8033-49ee-82bf-22687171db3d",
    "name" : "Create Bill",
    "request" : {
      "urlPath" : "/accounting/bills",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "853abada-8033-49ee-82bf-22687171db3d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.653819Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "bea117be-7cc0-4563-8dbe-e9d06661c7d3",
    "name" : "Create Bill",
    "request" : {
      "urlPath" : "/accounting/bills",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"bills\",\n  \"service\" : \"xero\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bea117be-7cc0-4563-8dbe-e9d06661c7d3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.653721Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "bills",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateBillResponse"
          }
        }
      }
    }
  }, {
    "id" : "a000bd9a-959f-4694-8646-6854f918019e",
    "name" : "List Bills",
    "request" : {
      "urlPath" : "/accounting/bills",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a000bd9a-959f-4694-8646-6854f918019e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.653634Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "1982d292-6c37-4a33-84ff-cd1153f3957c",
    "name" : "List Bills",
    "request" : {
      "urlPath" : "/accounting/bills",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1982d292-6c37-4a33-84ff-cd1153f3957c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.653558Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "fbd33407-aeea-43a2-afa8-b64d0a6bff90",
    "name" : "List Bills",
    "request" : {
      "urlPath" : "/accounting/bills",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fbd33407-aeea-43a2-afa8-b64d0a6bff90",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.65346Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "4fb5c411-9c98-4d5a-8242-aedcb49ac95c",
    "name" : "List Bills",
    "request" : {
      "urlPath" : "/accounting/bills",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4fb5c411-9c98-4d5a-8242-aedcb49ac95c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.653385Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "9b19420a-8750-41e9-bc5b-b464eef91209",
    "name" : "List Bills",
    "request" : {
      "urlPath" : "/accounting/bills",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9b19420a-8750-41e9-bc5b-b464eef91209",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.653308Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "5058fdf6-ce49-4578-86dd-27018ddb5a48",
    "name" : "List Bills",
    "request" : {
      "urlPath" : "/accounting/bills",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"notes\" : \"Some notes about this bill.\",\n    \"bill_date\" : \"2020-09-30\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"po_number\" : \"90000117\",\n    \"total\" : 27500,\n    \"bill_number\" : \"10001\",\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"terms\" : \"Net 30 days\",\n    \"ledger_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"due_date\" : \"2020-10-30\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"deposit\" : 0,\n    \"paid_date\" : \"2020-10-30\",\n    \"status\" : \"draft\"\n  }, {\n    \"notes\" : \"Some notes about this bill.\",\n    \"bill_date\" : \"2020-09-30\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"po_number\" : \"90000117\",\n    \"total\" : 27500,\n    \"bill_number\" : \"10001\",\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"terms\" : \"Net 30 days\",\n    \"ledger_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"due_date\" : \"2020-10-30\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"deposit\" : 0,\n    \"paid_date\" : \"2020-10-30\",\n    \"status\" : \"draft\"\n  }, {\n    \"notes\" : \"Some notes about this bill.\",\n    \"bill_date\" : \"2020-09-30\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"po_number\" : \"90000117\",\n    \"total\" : 27500,\n    \"bill_number\" : \"10001\",\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"terms\" : \"Net 30 days\",\n    \"ledger_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"due_date\" : \"2020-10-30\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"deposit\" : 0,\n    \"paid_date\" : \"2020-10-30\",\n    \"status\" : \"draft\"\n  }, {\n    \"notes\" : \"Some notes about this bill.\",\n    \"bill_date\" : \"2020-09-30\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"po_number\" : \"90000117\",\n    \"total\" : 27500,\n    \"bill_number\" : \"10001\",\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"terms\" : \"Net 30 days\",\n    \"ledger_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"due_date\" : \"2020-10-30\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"deposit\" : 0,\n    \"paid_date\" : \"2020-10-30\",\n    \"status\" : \"draft\"\n  }, {\n    \"notes\" : \"Some notes about this bill.\",\n    \"bill_date\" : \"2020-09-30\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"po_number\" : \"90000117\",\n    \"total\" : 27500,\n    \"bill_number\" : \"10001\",\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"terms\" : \"Net 30 days\",\n    \"ledger_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"due_date\" : \"2020-10-30\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"deposit\" : 0,\n    \"paid_date\" : \"2020-10-30\",\n    \"status\" : \"draft\"\n  }, {\n    \"notes\" : \"Some notes about this bill.\",\n    \"bill_date\" : \"2020-09-30\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"po_number\" : \"90000117\",\n    \"total\" : 27500,\n    \"bill_number\" : \"10001\",\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"terms\" : \"Net 30 days\",\n    \"ledger_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"due_date\" : \"2020-10-30\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"deposit\" : 0,\n    \"paid_date\" : \"2020-10-30\",\n    \"status\" : \"draft\"\n  }, {\n    \"notes\" : \"Some notes about this bill.\",\n    \"bill_date\" : \"2020-09-30\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"po_number\" : \"90000117\",\n    \"total\" : 27500,\n    \"bill_number\" : \"10001\",\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"terms\" : \"Net 30 days\",\n    \"ledger_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"due_date\" : \"2020-10-30\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"deposit\" : 0,\n    \"paid_date\" : \"2020-10-30\",\n    \"status\" : \"draft\"\n  }, {\n    \"notes\" : \"Some notes about this bill.\",\n    \"bill_date\" : \"2020-09-30\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"line_items\" : [ {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    }, {\n      \"tax_amount\" : 27500,\n      \"item\" : {\n        \"code\" : \"120-C\",\n        \"name\" : \"Model Y\",\n        \"id\" : \"12344\"\n      },\n      \"code\" : \"120-C\",\n      \"quantity\" : 1,\n      \"department_id\" : \"1234\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"discount_percentage\" : 0.01,\n      \"type\" : \"expense_account\",\n      \"unit_price\" : 27500.5,\n      \"created_by\" : \"12345\",\n      \"location_id\" : \"1234\",\n      \"tax_rate\" : {\n        \"code\" : \"N-T\",\n        \"name\" : \"GST on Purchases\",\n        \"id\" : \"123456\"\n      },\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"total_amount\" : 27500,\n      \"ledger_account\" : {\n        \"code\" : \"453\",\n        \"nominal_code\" : \"N091\",\n        \"name\" : \"Bank account\",\n        \"id\" : \"123456\"\n      },\n      \"line_number\" : 1,\n      \"row_version\" : \"1-12345\",\n      \"updated_by\" : \"12345\",\n      \"unit_of_measure\" : \"pc.\",\n      \"id\" : \"12345\",\n      \"row_id\" : \"12345\"\n    } ],\n    \"reference\" : \"123456\",\n    \"currency_rate\" : 0.69,\n    \"po_number\" : \"90000117\",\n    \"total\" : 27500,\n    \"bill_number\" : \"10001\",\n    \"balance\" : 27500,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"terms\" : \"Net 30 days\",\n    \"ledger_account\" : {\n      \"code\" : \"453\",\n      \"nominal_code\" : \"N091\",\n      \"name\" : \"Bank account\",\n      \"id\" : \"123456\"\n    },\n    \"supplier\" : {\n      \"address\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"company_name\" : \"The boring company\",\n      \"id\" : \"12345\",\n      \"display_name\" : \"Windsurf Shop\"\n    },\n    \"currency\" : \"USD\",\n    \"downstream_id\" : \"12345\",\n    \"id\" : \"12345\",\n    \"due_date\" : \"2020-10-30\",\n    \"tax_inclusive\" : true,\n    \"total_tax\" : 2500,\n    \"created_by\" : \"12345\",\n    \"tax_code\" : \"1234\",\n    \"row_version\" : \"1-12345\",\n    \"sub_total\" : 27500,\n    \"updated_by\" : \"12345\",\n    \"deposit\" : 0,\n    \"paid_date\" : \"2020-10-30\",\n    \"status\" : \"draft\"\n  } ],\n  \"resource\" : \"bills\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"xero\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5058fdf6-ce49-4578-86dd-27018ddb5a48",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.653176Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "billsAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/Bill"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "bills",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "xero",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetBillsResponse",
            "x-graphql-type-name" : "BillList"
          }
        }
      }
    }
  }, {
    "id" : "d980e326-56e0-4db0-8aa2-89ccfe25796b",
    "name" : "Get BalanceSheet",
    "request" : {
      "urlPath" : "/accounting/balance-sheet",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d980e326-56e0-4db0-8aa2-89ccfe25796b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.650131Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "balanceSheetOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "8a31b92c-78e8-40f5-9091-f834d45bbfd6",
    "name" : "Get BalanceSheet",
    "request" : {
      "urlPath" : "/accounting/balance-sheet",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8a31b92c-78e8-40f5-9091-f834d45bbfd6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.650048Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "balanceSheetOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "cee7f3f3-153a-403e-b185-1b558122c5aa",
    "name" : "Get BalanceSheet",
    "request" : {
      "urlPath" : "/accounting/balance-sheet",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cee7f3f3-153a-403e-b185-1b558122c5aa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.649942Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "balanceSheetOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "ffe423fc-aadf-4798-9fd7-7544732c1ac9",
    "name" : "Get BalanceSheet",
    "request" : {
      "urlPath" : "/accounting/balance-sheet",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ffe423fc-aadf-4798-9fd7-7544732c1ac9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.64986Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "balanceSheetOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "d245c0fb-dd0f-4aef-81a3-a32a267cbf24",
    "name" : "Get BalanceSheet",
    "request" : {
      "urlPath" : "/accounting/balance-sheet",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d245c0fb-dd0f-4aef-81a3-a32a267cbf24",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.649758Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "balanceSheetOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "f0dc2fc3-f8ce-4d97-bc5c-71164f6a0234",
    "name" : "Get BalanceSheet",
    "request" : {
      "urlPath" : "/accounting/balance-sheet",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"end_date\" : \"2017-01-01\",\n    \"assets\" : {\n      \"current_assets\" : {\n        \"accounts\" : [ {\n          \"id\" : \"1\",\n          \"name\" : \"Accounts Receivable (A/R)\",\n          \"value\" : 10000\n        }, {\n          \"id\" : \"2\",\n          \"name\" : \"Accounts Payable (A/P)\",\n          \"value\" : 10000\n        } ],\n        \"total\" : 100000\n      },\n      \"fixed_assets\" : {\n        \"accounts\" : [ {\n          \"id\" : \"1\",\n          \"name\" : \"Accounts Receivable (A/R)\",\n          \"value\" : 10000\n        }, {\n          \"id\" : \"2\",\n          \"name\" : \"Accounts Payable (A/P)\",\n          \"value\" : 10000\n        } ],\n        \"total\" : 100000\n      },\n      \"total\" : 200000\n    },\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"liabilities\" : {\n      \"accounts\" : [ {\n        \"id\" : \"1\",\n        \"name\" : \"Accounts Payable (A/P)\",\n        \"value\" : 10000\n      } ],\n      \"total\" : 200000\n    },\n    \"updated_by\" : \"12345\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"id\" : \"12345\",\n    \"report_name\" : \"BalanceSheet\",\n    \"created_by\" : \"12345\",\n    \"equity\" : {\n      \"items\" : [ {\n        \"id\" : \"1\",\n        \"name\" : \"Retained Earnings\",\n        \"value\" : 10000\n      } ],\n      \"total\" : 200000\n    },\n    \"start_date\" : \"2017-01-01\"\n  },\n  \"resource\" : \"BalanceSheets\",\n  \"service\" : \"quickbooks\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f0dc2fc3-f8ce-4d97-bc5c-71164f6a0234",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:59.649573Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "balanceSheetOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/BalanceSheet"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "BalanceSheets",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "quickbooks",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetBalanceSheetResponse",
            "x-graphql-type-name" : "BalanceSheet"
          }
        }
      }
    }
  } ]
}