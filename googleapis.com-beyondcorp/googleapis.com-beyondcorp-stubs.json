{
  "mappings" : [ {
    "id" : "b16ec6be-23f3-4bf1-8537-a1abe3d8016e",
    "name" : "Returns permissions that a caller has on the specified resource. If the resource...",
    "request" : {
      "urlPath" : "/v1/r9hv5jl6rjx8k99ytxjvrkbbhkodnmcx9rgc7c9t33rwqsr81x0lozf94t1mwe7ipnolwfy3zoy2gb0sezwnca6c4xlbjfqpbylcafkpwwwe9ve:testIamPermissions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"permissions\" : [ \"06c45u33himirdzoy85ctfbhnwoxm7hf51crlqngk3s0xo4jkog17bcmoh7hi9csenfchwr97gkacrx39l4zf3bs3szmp8l1nwdf6nmqg6buxw4cbsxo2z41u17344lwsqe34t2jygv\", \"geurlrza71w4v6itzoxedbo2reioc65n\", \"z28evo7h74lxmzop0c81zhavszi44bigpo3s5t6d7lwx2p4gu86949imiau7pdmhdjq4r9df5v4oupg9oez5cbj9uwiaayzff50gauejyp5wc54929dvjzlfqw1drnm6qnnipjlkfxffkvjzw2hh8a\", \"yi0yabwsnzn2eovnw4uajatlyuoou9napbbg0ql5dscu0gmooy8uf6zhiz80ih5xznagvfapl61og0r6i6gj6hwshev9yt5ve34tje6apgzx66ghiv2afku4boknqick4jhobmnzai\", \"1fwiwbkz51njd3a2cl1dj\", \"zqylr6ooahiwyrozi8w0jq9bft1wf76ob5g8ijteocm4dwt0if4q7tugbhxjx01sutjijiycl2b4uev\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b16ec6be-23f3-4bf1-8537-a1abe3d8016e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:28.577001Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.clientGateways.testIamPermissions",
          "schema" : {
            "description" : "Response message for `TestIamPermissions` method.",
            "properties" : {
              "permissions" : {
                "description" : "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "6e99bda1-5ac1-4d22-b8eb-2da4043cb5dc",
    "name" : "Sets the access control policy on the specified resource. Replaces any existing ...",
    "request" : {
      "urlPath" : "/v1/0ie8j3sjifx84ixjv0i7c:setIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"mfdtj7xjmsaobpw7sopoqx5i1c06uhymgn6a8d0k6ulg1cu33zmivdxr0yi3nabbcf8wahu71x7fidkmeqf3jla1kkopsgblv48d5p8k0u3phtfhafeszoefv5bgiqmh5ql42ne5fxieqajv3f5tauuarvewkd0v2tbhojzza6ue6rjlpmf7gzdty8pticciyxekgjo\",\n      \"description\" : \"Voluptate dolore deleniti cupiditate sint animi occaecati aut. Veritatis et quis harum magnam delectus quia veritatis. Fugiat quo officia. Eligendi optio deleniti possimus repellat occaecati nihil vol\",\n      \"location\" : \"6d47hl08i5ow8bc7yo6p9j1i\",\n      \"title\" : \"Rerum hic occaecati nobis.\"\n    },\n    \"role\" : \"zi3n7sm2bxvcn7z\",\n    \"members\" : [ \"n9ip2lek6mcijnl7zmnt2s87k99dsmk7rgrs2mamp3zto1v2gix8jt4pmpx2j7a1ft3nu4rria7lrp2lw9t8ctu17a9anj3c0szu0\", \"2necloijmcvuw66c03ze05kehypa7zs1fm3cl417ob2bvf60h7erhj0xgfdthf8051t0f776uursxenjkxw2zudyoaoht5ianbja5bk5vanss9wc6dhda3fc6bofsqjumxzj279bxeogf\", \"p38rwir\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"mov69k7umxzyxdbth0s70dnd25b8men51xne\",\n      \"description\" : \"Tenetur esse et tempore modi qui. Qui fuga eaque. Numquam sint doloremque fuga. Esse odit unde ut placeat qui officiis. Qui temporibus repellendus commodi error magnam officia.\",\n      \"location\" : \"1a6jqumkkrexop6gnuo9ye34ho5504sy4igkl97s6onghl6fiak5111kmcy549tbvjljtg8d57cy6axbytmte1gwzok7nu0hu9c2t2nf45x1ont70vsbhetzug8bisifkgmc0fmo8spkgwx1kbb2bor2bsadvx5eaon\",\n      \"title\" : \"Et sed quasi qui architecto laboriosam enim.\"\n    },\n    \"role\" : \"dottuvcm2hbuvqtx94kfvddbmq709cz8xn6f1cai2cb9wlryimqokrwkne9sy0uqng6s6vb6x6ov159tuwpdij8wt6dp4gn0bntn5e4r7bspu\",\n    \"members\" : [ \"0zhakbo9m6cpi28fc7a25534s7d64e8enjqw0dtemmv5g4yqevei2u2rtz7n515m29hclh8g5xxtlciwj4hzzliddkub67u7uei3ulp0cp19ruxkbxcpi4ajpf94aiwge9slwrc900kdvq0bkby0cml\", \"wysnwh3hyoooz5pw7sbn876onhzr5obnmxthxc1dcgimi9xgih7tquchau22c1q0tstgx788ws239kkfpvgr9w9bgbay4q16ozs5w84d1ubvfgs1p8pohgxs96c7q2spbiqfu1ucjp7\", \"xccsmhvurep7kx4568713asl2ag2c3okmxonpoun49w806qj4dywlnmg2jixm1bhr7gotn32l440bvrw9jfwys4kptxok6r4ghw\", \"1o4nn3o3z7vugohelgl\", \"e5s3fapuodz8hb6he5ywcet6ua0m3ocgdo4nug7czy3hqkhewvt3gsfucgg5qw3tn77m4sdsqv8yjrhdzayod2jng1bqf0105kvh524e0tqgt93gvblesgus\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"y167tqj638m9ssa1mlkttf11wrh83ah6slprl68ao507jezlrvvnblb915juk9jiu19besvpy0sb3v60ufxbn4tjl1mc42xvftucup42pnisokgk70qxx0aegtstb0jaoegl\",\n      \"description\" : \"Aut omnis dolores minus est et doloremque. Veritatis aut est neque error minima qui fugiat. Rem id ea. Molestiae qui maiores sit illum.\",\n      \"location\" : \"35ehyutk\",\n      \"title\" : \"Quo commodi voluptatum et.\"\n    },\n    \"role\" : \"78hwuy028to\",\n    \"members\" : [ \"a6630j4k1pkhffhmc7h3g0kh035v81cpdntbfh1nnt22xb28fi5y1i82gibem6mrnptdoo5o96f911zj6sxh\", \"yq4p4z7kyd1q0gyugbng2sjxpmw7jhavshw8ojc5n5s9b90y1w9f1axa8ata70f73ey033nbehc4avskay9s512lz7wfudp\", \"l458i3vk03ajwc73o4dtmt82lrcsb5hl1w7q9p0f58zvzti85fs5bogojdajoezmk2t8s1cobzcbqbkrf41uucx9x6aofmbpfx9tjtg3p0srb181r558y50mx8w8yj68dsn6zdfrobw79\", \"22htpq93oq6zgbyl7az9h6v4cescc211pjrzyyo22wa4gdoszhei0ga4u681l6mtz8t4k7l44of1vxtwkmawj5edquukjukd5aq4k0f6m14vwqq9jchzd89twdj25l4fxnufee8b9r5x9kxayx\", \"g4tgkkhitmj9b0e82bbi9gi6vvfs2abj1zqvhv44x7t184avpranx4tfjk8mxn6vaocuaw9m7xsqpv\", \"5xmhlh476ropzvlth6agk4p2ky5nuibil09kdzixnobs6bccbprv3b9m7pu89y0uabhcgbah1r403b4a7m798m1g9so08jloinmkk2zl8znl4zgtwhbdkh1zhqh0d63cuf198ny37s8g3ed7c\", \"s0bj6i3tfou1pf1rcwtsw0na5ivo2a8gs197jjshnxo65pqtwb0f02dsebqzdej\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"o0g2sdhucwiropzplxu94oryud9jb035u7wvo2d8yiqmj9kdf41i9laabo5r\",\n      \"description\" : \"Fuga perspiciatis et dolores perferendis consequatur optio. Odio totam amet. Exercitationem exercitationem et consequatur animi optio omnis. Sed libero voluptate et necessitatibus tenetur dolore conse\",\n      \"location\" : \"g302coefjl69wkxoch0igolroce3my3drko1kthwz1bspvonarep9382exiutao7sv8xp9tmj03dbdcpsg4ic5ew13o94naa07\",\n      \"title\" : \"Libero atque quia accusamus.\"\n    },\n    \"role\" : \"3hadcn7gpgdsqy1a6bd6zoa88jguy9oq7mz23epqii1xgd9hfty5qdt5rkkdjn8db1dxfmddrb32qs29yqa8f467k140v1\",\n    \"members\" : [ \"tosd2vlj795eoxej8dxr33xuhg165l4n8c5c2stqeglqz6ttw37mazq214bkbplcla5ekdxlonu62ols72yw46126anm\", \"cmgcqa0lgfcyxiqubbwrgyxvclfvymon1hmqak92fvl3m665kah19nkpa9donfzs3lfspqbypo9yson54jes48hdxpw8f429b5lmlhdr\", \"um60my9ueuo4\", \"liknsk60c12ugw94cukp72xz2e24k0wozzh63oo9rxjuginpu7cuy1sfu55npj\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"1vuuiu3btm4te62rn5vpjqar3eubu7pgmhsui029v92loe71ac8d4t56ofl87ww70rxydcu25tgkegnqrf94majhdvyy28wetiwpuoj956tyn40l6n820248138c39cjzl6579pxmhm9om4sg2zlsdcs46dz25896lzaifk\",\n      \"description\" : \"Debitis et fuga qui itaque reiciendis fugiat aperiam. Facilis deserunt vero. Consequatur fuga consequatur laudantium inventore autem et. Doloremque impedit beatae est dolor aliquid.\",\n      \"location\" : \"2jdslkkqnn4srvqrj5q7ik9cv6bw82hzd2y3xv6dl3ca4rpjanukscyfadea05eyhc9bm0r1bw7dnaba0bigqgkn6amf9d27zmobu4r5aq9heo1lq8b94o7yitwey68l2fgb3hqagt7a79cv3f0cmgr7rsbxtdwwitjempc2osg33iuxvfqdn4cbb5szrcq5nq5erz\",\n      \"title\" : \"Officiis quisquam non corrupti alias.\"\n    },\n    \"role\" : \"holcyqynsci77fw87tpst818ib8jlaooa586qcnkr6zz0knpvq08jtr8ogampwuq1qwj7lr31yx6dlwx9t18czs3a0yme5vko0gz6i1b03h5jyu2nqtt1vjxcnycw0c65y4qy94469m7h3fd766e276uitxs6c4ou1onkfnept89sshb3hr06gjyobz5\",\n    \"members\" : [ \"rou17cm9luiva17q5rzq5yut21wkbgul38n2euif7taqwkdce6qh0ym5njatkt7x22ykygvi5gty581z8m5iev0f7goai0y90x264uj9rk3cpc25svk2t7ct8n6e43d1iy0o0fcm23oofdkllem9vgum\", \"32igne2w10ks60f40845g00m22byx2vpk8ka5zzkga79tavl3bzvs0ymv2x3wxeukpk59zbco8gkeh03ljy8leyczwr8xe1bb9acbowi930kudtrbwwj9y0m14moytrkus\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"hc32t5r1xbc6vs3s1g9xxfzd8mq0brgsegwym0s8rnywblojzhxkz22mol5pro5u5lghnpmkvzrewn7x83pl\",\n      \"description\" : \"Illo libero ratione. Corrupti suscipit maxime repudiandae inventore in nulla. Nulla eius aut impedit harum dolore.\",\n      \"location\" : \"j7guclqo2vhji2gwq9nzz7up7freaz4d83fxwq0h9nxo22e4tu061ckf4apx0dmwekj01czlt9mu0ohzryb2ens2tte7azr5wolzz210jr0uc39zveb96lqx915dskrnr6w3q0c93fujpnfytux20dftxmb6vlzo\",\n      \"title\" : \"Natus vel reiciendis ut.\"\n    },\n    \"role\" : \"7effofiv82l0gpiiwndwfdnxx66det2ut8rs32i8r264g2xfm84bdcjh7mxic8o4lwmwaw5xdjked3rar53dp948dcqq917qpfzkk9wvsn2p6xnfrj0p6zkm7ktdz0uie1osidqxm3cljnqte5e7tzg24trb1m6brxtpzltgpjey5h8l81uvxs09qxz04hvzmkk\",\n    \"members\" : [ \"405pfql6g8mtcfk4oskzjn7ji4nyk4x9bwukj9piafv1qvn941x264qyg8xwae\", \"utahkohbfffnzs0v4uu3f3rof5rvwye5pmrc5r8oxt9rpslbdzdy3j4c21giftaq4owcetcoj8y5hfxin3acpvtpw4l8d6uduurgzdqu24hw6iv\", \"oqjivzp0h1jy6s39ybw1rx1q2ku6cff98kzsf1y5k43d2buobya9mwvmx02zqbuwkwna7tm64udpedlsnvm37qqx8omf9smztwkxdy58adwq6pchx4dcrv6vl0ize5hdp26sldr7wfhl9cn1l8yy1g30iw1pdz9vipo3o143oabdg9\", \"qrysbaxskxozffzttqag0ulxmy39si3skkcr9c6yari52nnsb0oa44gv2q8njib770njpr8pg0vsjzhhe8yktcpwzvy04wvrsw0f3shxe3u1glo875f4hx49sb49tqaehf6fay3n9xp7bvo1xbs6pwiwutri0q025di8owx1p09\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"ip382s4xb44xdj01rsqr48oxnjknablzsgiava7ca8spee1y4p7nr3nb8l5q4b5khfpph2i1s9ezh3rjtsz35tbte7i2m26xo0afo0197km1ziirsamb6z1fm52m0un1vd8ntarkt\",\n      \"description\" : \"Fuga iusto quos. Quidem beatae magnam ut inventore animi et. Voluptas voluptatibus temporibus provident ut totam. Et et aliquam quasi nisi aut id. Enim aut laborum error quia iusto temporibus quo.\",\n      \"location\" : \"6fq9xfs3rymrbz34j6sck4lkswgl337qfbwzf7m16nacyag1s2s57858y1ebm2kxhgocpsx8g956iwmbhh8cljsm1y0joaw79p5mn28u1xc13rhetqtxllh6sqf2muct3j5r950ihud92ky\",\n      \"title\" : \"Nulla error dolore.\"\n    },\n    \"role\" : \"f0xs5tdnolaalkua7ne7cp301cakncd4\",\n    \"members\" : [ \"jh6ecq1ko15srjbj5was5z2ow31rrkk92ph6z0sbbxwpgs8h11briqx13wcw4oklghrl8apj\", \"rbros8jfl8nwsj6le7yc4t2wnch\" ]\n  } ],\n  \"etag\" : \"eeeet\",\n  \"version\" : 106610374,\n  \"auditConfigs\" : [ {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"t6v9g4nyqy9ra6dg6jk3pi84tl7mhnlkbuwtj5j1fhb2n8dwatcxdn3poooln2s7iqjuf6x82mfzz2sctmfrfhqnfkhl8k9hh8tppvu4uljycoj5bmbod99gy4kpbhznefwi8vxfk7dwkg6f7l7havl6x8oedob7j4q0crby\", \"zr7ovvorfiuykiy7ay3kyowejh4tqrxspey3vuwkax3onwmzfxsugdr1ifbcsypcm3ux8znqv3mlsdms71txpuavcfryp5et0qw6ik3moe83v8tcwxdxkhl1ux81u9zm7g7y57ervw8t\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"ekwi0v699qt65said7fr1kwestjb75ecyuayytyaktmffeikxzfxbz4ksxnipurkm82wm93o0jl433kjbo6gi63grleuc8rscadlnpdsz1p898o5psjsbb5fucs0bdz4vd506r704ejlqt99afqcpk9uh22gr4u5f0la382afv1tefkbe481iqkntwm1b0i5k\", \"oqhdxfpxqckib033haowbvorsndboltb427ph3x1lazs22wu4d0vagmn0y82kxgridt9v6f3a64t7yljqlduvbej0fupalkv63jbce4yfm1bhmyr0j9bmlxzescgos6g4mmt6\", \"jt44pva4nn3yzy4nc1eg57cpal7uqgse3b5ldo2ye5o2ewljfem9w1hm83h7mfo6cfxb1t9rfwogtm5kujmclllq2npmy5tiemgdrtpiyq521tkrkk19nqy431cc35fpgfab6830n4fpdklgtrc969q81gcyzc10co\", \"tzqtk23x1d9x49xipaocewjctr5vmtf\", \"oo7e7e8f9le2vu1ulda6wspqovcc6goovdxig04bepp7gvrdl9ugwv83iu5tt0unfxarfcqdmzmhrf9ozuc83eooonoohyy7d1x70v4yklob4e7vtd5aap5lqvl7mw7xw5yr\", \"sjc0iwj0sqz1hs1um0btmmqod664a42njkeai3av0qr\", \"zphlh4o839bsdlfb6hielx8294h6ivh9oaxzylxpskzqarbwht4vvosn7jx97acgzrqdbm53xwwmkl8h1ogj00hb3037ndbrw0fw03fbggmwwlkcow7mjrqvrlhejbt7n13c298svuhoxa013erl948fhgion\", \"bl632tyn7vwlk69ftw93m5gmhuv337afpd78zmgu029qque35opnnj928bijnxj\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"2k1qfb9yd2isc551phba94ugrlebbxk5k5qba08y7h0hlf64dl7mqoo9x8ertri939baolf1i57txp3vkzzr9v4c2u6o9vijr5x1ta203a1dap46q29l93ur8uqrk3pc3l4uxzrimnc879\", \"i7xpm23w6qca9bcfyrk2jy4rd0efozh32b33\", \"zp7fu2yv6l51g3i6mi8smekdapqdwm0f9prk9khs2mmz84nf1d4098qxityn311w7\", \"nw0k25er88\", \"q87zqcpjkd90bw8pbvzkh8kfr31hzfrpd21yfccwp9nk5u2zx8nj17ty8nn908tm6ng3fu0uwx8ywks3i5af2ekda4jqi7a3si1yin36l0zmwd0fayxth2xj4eer8vap7undxuv8cusokqxlpz3feqw22oi08hg\", \"770r3bu2lfc1hijj16eh5ttg43ngofth6743hlk81wcd50p1qva075rflbempcsf1xhtczeyxwot2uak00lmzzjhhclsgh34rl2tuy2gm2mrsq85j0i01frhvp0rdxiphi82kxq3nviw73cfwzyi51d04j24q0xthhfqyncisan4zxb22jc0a\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"718bny3okjavouozcoj7lx3l5ftou4fou0akmcevdmm8m1a4b4\", \"b704z\", \"wdp0v5gk16b7lnsahqjzhzylqrrqhu935gwup0cyojxv7sk5350gjycei59xz7o7nz8sslur2\", \"96bkthceryf13xcwuncrqozz3flbr3\", \"q4g4mo3u5uty3pqt1j9l36yma61ta2zfccek8skhbhx9432vxd39lb\", \"oq6l0jrd\", \"kn514cbp7h6b2r53w56y3uv4o7fn9eczcoweoaljbooanw\", \"aa1k93h4b6wc6zc3rmcvqvh6l9k0sdo4govxtu3qd279qrqcrp42roxus3n781owf5pjgn101irnyz8jdst3af0g2mhtu34z28apzcim3ef6jcocrdvfa3bc4bkjjv5e2emem1clmynz91a9zuigct9jn6e7qlvgcjx074kh8dv0eu0xyca7nc789bdusi9\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"eog5kzbn42psblpc07ly61xoukglnm1jtb41ze3u7n56p5y9vwhpgt93v7afzb5t10ogqodx469pk85gqjxmcq1kcpe8\", \"m0os2r2obv6ugcoqnde9aadeoz3f617x76msk5tpde4\", \"l2cvzpe3e\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"pnxlp2wove4lw2yy3jbgvnh6cjozbera8muymtyg3tx9lcxl92bqewuvunuoy4g7c3m5qapv8m9dvm9kihiczv3hj3hvq7p6r1vckucx2jglrvaoksj8jlmtg9d50rt46lb\", \"b2tyqgy4tvij1495urimeq1v4jl46erycyesc9g6e6lzpavw5rf66dj5qra8ynswh27cjzf86cxynexvvatjsfybww54ycbc5w771358zgdtph9is8xosylras860e7jpcf0ndq8ju\", \"syjikmf3w4elr6p5ky2037vpq0wduvpxmimb7ax2j7acvd65zstelkp0z9lc6lgwosbwd7p6mb07xlmclb0x1bkm6bqc6irv7dpnde77jx5qc4utdzqaxaiwyzvrebnvt9shhlnyy41dhtggf0\", \"a70mr8s4lqplw611t9ejwezoukncb9fu6vutljp3gc2xvymec1nj\", \"69ddkwt3tyyov28lts7fhfo53phgi6g8h3ov6606lasulwxbht53xsdwq49nwfum362zeuofhc2lp11ba58zsc9j73m7axcd4giraolx4az62lv5rkc9r5lx6zdek4n3vqy0c44o7ttpmsr9pz8u01gfa02afoau8blieikx5kqtx6qb4qm9lu7ks1d1mqep5\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"nayba7a4a5zm0m778a6hbl81rnsbn3u2hjvx3gcl2xjwie50ybd8no6n98t5ammwwdmuerie31m5qth1mvskyoqfaawqaqy5mwvq38tyga1uy7620o0d6ohgl5k5r46k5e2hvk49n37gqx5cwgs\", \"2lu8a94fcjlmvff7mfrcio3p5g2gtah7jfbqtwedch9z8w1aejkdjh2k7z3\", \"l98v5uc8q2j30v1bz4d1s26e6saomzfvwr2hi6tym38q989lixiom43lykkdqixsew62yvb5bc1ixaadgnuhc33kpwgybgm8v1c1jbxx5i0wgh0uamalid02u9sqxp6swo3s6jr2jsu8\", \"x5jq2nmdk5cm73qz5pnj0tedvskpqxdpdtcw\", \"3y3fto\", \"j9c2emn3wtqd93ismz4800iyeg4sz2ptbsg7vkrpj\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"4i81dowfwz7hraoyr9ax9pr9ulhwhu41ami9lvr2wy9zacjglxtm846rm7av1fnv72aoup6jwxu18x1ek58n8jjlrvggxrtjpw8gcnikvcm1bc987fv4ok3plyv28hz456pjn\", \"d8zmce0bp8iyiq3mkla3wgfjk121tgus7laiqm464iapzpq4qh9qs2toio9m31umimfluy9ydv96whce7teo67u5nmukf6q85koou0fgo0opccoum2fqpubpsswi9zvgsmj1hmflzzb\", \"omwey6d67hvme18l5fqr2akfehjb27vgb7v9y6khud\", \"txrn3aqjwmabo9ymnvj6adhi4usftr59831emmnp7li29i11zdasfcqdtcmp4up7keii6q5uzbfaz0lznrn\", \"9b8nhkf\", \"wtqy9rbqad3ulhvxkzan25a0i8txnakm2jwr99u9tf14zbsa7j9fddit1wr37nd18qhjcg0sty0rsugwwhadssifuzb0n7acd4absj0iomqq0k3r10o8n5ini5hr3qcdpiaeunh00bdmrihfgqjkldy4vmmo\" ]\n    } ],\n    \"service\" : \"bs8cldphmqsmwmgf8o7zjh09xnjr924t9f5bsae99i8gid2lnitby672sajnhuf4xsmwzp84cl1hxavmpuyre728fxebou7xeubjph9\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"4jsv8p3mu316hiag52\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"jnmdh2d6wjzc96qmxz53udj581vj2v6734bsjlpcjb4mwga8wqlocbdlltshy0e1ger9lf87wutuxo6sdwt5k3svf2loev3nad9fppgdeu5t189851l6so8bosccylpv1mcnyygjvlcyvoseb6yen7o81dogvp9fozqosci1taemfiic5d2paj\", \"qgr7ycdnz7zuxq6jqdoqusool5bh9rj6zlaj5pit21967nsev5z6q7gkaik5fuef0c9gfjz8q0drdef2ukgwjehqmazxdvgwqw9kkji3oqeeewlk7qktsoc8uqv7i7wo7hixn1cc26ghvtb8azqze6zw0mppkptd5ji7lcy9q4su0c5invi0xrj\", \"do7cfaqhfk95gx20l9w950nh612yesnx45f2ztli5wp0n03j0h9kq92fovgdi809byjr1pc7gsa60q0h13kbpt2457orm10gnex57rvoolbvznv3wy85za0ud6v71nqn61z594qll6kuzfiy1ydjnfc74ncjnyjwtwwvoecrv8yop6ar8gvheja2e2nsdd75dmlyoum\", \"malfa3pn75jp1zuohl4jm\", \"ncbolwcxw3kbrpmr0oaeeeeb10vxqybej6f2935t48834rkls3aihx8it2tc1kgnokn9dftno19xm62uwxvp7zykikqur9jwbe0918babjbcian5f0r7jf99jkrcxtkikrg62cc75yjqrv\", \"awiiwee6ciepv0eiyg9go2k4hblnd3923hcay6gk6yj0gwi8gdv\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"9tk873iojkilxnnv1p0vff9toy39p\", \"apsw4kq2wcy9kzatazekn27pwjctyx0gq0fllnexij6tvbpot1xulh1cnazytxrrpjn5g7cwh8jdm8ubhhqiyb44hx31wh4sktx55f4fblp5rofwr0bzjviv9efbcgyxtczs78ilx8npmket18rdzax\", \"lohlxolrfvswp6awnqoq0a8wq8qnkc18hvi27qjz6v3mopm0asto9wcxyzgrv1c9wgbqr6h7k6k9cc9otl830jlhkvthu8d2t7lxjk232lisr8lmh3qcujiavc52x0gd95gk822j3qy3g6981pi2njemjb2x8n2kmxnayadno30b2hlca0ui7wa71rq7nnhd\", \"bo6w273leik18w3iv5ld99gzmanw\", \"g5hqmue1cmg9il6vse5z4laak5snd5va86tfyo7in7ngbgqoyzd5ig2h8v1vjewrsapyn9id4q7xbctxel2\", \"vjxixyg9t6nef5zcuqne7uag6882qeergovxswph81hwd6rjg3xwh1gpsb1iqtn92qzimau2k1fnngdlzmo5kgurwl4bv4v8dzt5r2xt6ysaxpdyer8yol25cah8qj498xvdby9m1hpv7j\", \"wbwbqr0826dtpblor5vphkgslk8dfewk8l1px2ig9ge302xkhxj28xwp9cji0eg6ezceclpfo\", \"2pi8kcxxsnjbuji1ru1srzfo8qktnc7poz7c926tc1et60bt5i147xs6hcfmmmxvw6z1d0ynw02hbx66cdfn0gau0mt2ouqsaenc09vmi1nui6tjzbm554700g5m3x1qny7jl5g3ossmuvupznbavx5b5pgyges82jyvt9hgec97uc7r\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"zo9rkzmn808ywiscdghvkv1a80kzky5s6sobwz9\", \"76w7ugrnestj4zs9zlcq6684nu378lryo9pv7jp73sftkgfff09ecx6j5qo530lv3y0c2jk5nut9atd3fzsdgo0dw0gkl7o3hg6ix1l5b4w\", \"pxk1ms7n\", \"f2851ah104zd2kvxiv4ml7ecr660vlaag3lz7hg7vt8g7et7avsna6ofvtv3v53gi4hywh2sz65c0iy8idgxq5vmea1hd3uud0vtag7z20i8\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"qsj1c1kw2yzfnw6064h9xdsvpcacb45dqon8su0ibxfsljzst9qj59h39vvft8g30jvqtlf5i97vxh5g3cpzddzf9oai1lltfa18kmlkc56ylqmfo5zl9wyk14jvhjkyn9dnee7gg2x3bus1sjikg876ujsjumazgg459jzjr7v4cpyboveu\", \"j5v28hdvnjv700uf2uffwce41pdi4067k3rckpdtjmzjzb4nvc1yxjupiutm99kga5gtndymaki86zsy493irldqnsp5jlvvnqu9h5lxr7o6tcv15t\", \"finqjcxasv9ncczjlwxk8b1b6o4bsffezbd7eyla806oew1btfy2gmerdv56akt24sxukk4euahp74nvrv18hoxw70a691p8h19ctyj9uwpy5e548ln7371up8fkvk383d\", \"pk09ecukys81cungntj7kh5ghvor5zlol1urfkzoxa0q8h2wfblys8umnane\", \"lemp6q2be2srhl\", \"u3bdx0eub1be066pswewjgqtbomb95uans7vzzukmf7n4tekjqmk7gqq8eahs7300wv7asdl9qr85fvhvhv01nddjyzw12sppf605zfzq\", \"1f0ixr2nj0btst3ihe0of1r5bvy0a7qjcpck4onbke1ezrtsbux4a78tg00zojqlokn6zhokfaqjzr0ff5a1blavykys8sm2ewjsbj5c4366hyl3oy\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"f4k73k7intb5warjwnq46w8i8zaezr2kp4k26z0pppdut85v5vuq9bpzkkgzi23u6lv12zyxf0m4klypya44fmqgpaj0eul9tvhi3umj0ur8\", \"18rnh3rhvm4v0qrnubg5edxgy4vvu9ds400nq6wussl6vr4yaoprv46bucnozqa6h7p5wyi4wjva019b673h310yr3dp72c0h368n24w2ffh9hhzdv8ahligxlz6jib2um83ymwlskfdgex9levpar1pgpvrzthh\", \"qc4c9dapnh95xldj3v6trf4tykj2vspsp2y9j2rib739pdmch5n3lq9c43io8vt7v9ylxgcjnsz5ngo21frmap890zi8uzspmrwrktasdk7pmahogpce5xiaozqx54qwdit1i8x40e2tz73v8q1ifdq6j481qjd7zv7me2wkj\", \"1j1ot4ls8n4bq6p609sg9y430uc5d5jf9ja15\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"w7egwyp93ltdnvpi9scbwoqv67x61ob07qfirzao1919wrp2ih66s0cs5screcse44779nkf01pltcr02y9fu1nbzvizhn5ht1j973s3uoh6vtts9kqa\", \"5wwznk0uvli9ub26x3p7kj1f8v8w6vsva04z9g213apiowp3un1pgyuhjnzrargf75bpp9xi5vv0yjfjh\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"of4cil8kvqghdvtdkofqu0x6h70y2u5gvo6cmj4y6zyd8yy8yplucr9kcwv8j90967p2k9ejusrb55v48ema9r7ratjz9a8cjjaduu\", \"ds8yinxr1m1etc8zttlw0pxt4w1iez0vmx65l8es9ye5ylo9i2v7nu8r87r082i2k40laaotvixbhf6wb1v5veu79dx2qihi8372hyst8ymuzkz7rc2yemc93x6dlhk6twfcmr4dn6l48gxsvoc3ip1dp2j7dqbw4wkkm1i9xa185qm4qhw2igpmwa05ba3gp\", \"yo1ytx3to3xx2d1mkrr20ssxbiqu81ilwez575s6hy2vs4o\", \"4vim1pzg42kl76vapwwrg1eoe7pxhnoudgh4owge86xglu6mdj1yvbbj447i9yd31o2ayt98hx1kr67qjlrft9a8gdxtt7vf65i62p0h2a0rcx6qbu5g0z4ysbm2khb9q0f9lvi9g2irkwy7d0zefqdyqvn53pg22x\", \"i8hj3t\", \"y9d1hnmh0jo89jnr2z6h0dswynq8914ijui1npbcg1bt55qr16ssvzfqu8cgg0f9llasnlhzkush8baoayn4mi4bxyeyghlwuhpii\", \"96ggddbib1tmnidgb4cqnoj7qdsrl8ejuld4pr2wng53ovu8tjidwpdhztc1nid6hopuwwb22bzrin1qrjfj2ar558m94dqkmruimjjt1r0fjrwxpm1ixopc\", \"7lin74pd553fai3u37igqcb3yp2lhfcijcl25y5b49n85ycci9tobvl7udx80tpj66wpdjh6qxehtehjxfia23bl728xns8e7eo3h335soe3\" ]\n    } ],\n    \"service\" : \"9wj55dypm3w3mqfjm0phlc658ym56zk7467lchsmmm1ra11gbj8iw9isgz\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"mavkpre85zbbe972k69dfy75gic9srtfnc72ny4izct0vjwzf0aho6u7noqt9eed4crllbpd2k5frsinouqfyh6ocxgzh512d4rs1p4gzhmv67r8me9chf6rorptyl6g210vjsfckcwk2p1fjyt7l5sdcldu9mh94kab0xsxb6b6p5a4zw4k5\", \"nl9iich0auro5asqdwrhaowqcqfdp9y9e2di6kl6s5tp7bzx4haa0j4hv2m0ltjqlorlcemg\", \"p5bvtga10jm0a3vqm6dacssxhrbj3n5gavt7y\", \"1kauylau7ssxbbrt6lqoqfex24l\", \"5iaxrctme9j6ar1ek37imnp35crxynwqdmteqwl6hpswmr9tadxyl2ztxnxgfbpce0hzpu90uc0d6rynfnpitlqoofc3rk43vkbmo3t89qqgmqocu\", \"9co7as8t4r17qor71s1opxww7j53rhw23q483upc9dmvda0lhowv6ez9y9w3jpo0mxb3yjgus052ysshovmbaln3dvt1z32ei5ng14xhsafnxj4ut5lh257v8a6mb8xbij1um59nqmh6zrgbdjgb9zssf\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"zipisnt1ej7g7k8m2\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"nvlt0unb84ck5bq21v45879e0dujzc654g273xyub434dqwqvf86ssqegiz1dgqwsb6x5phk5f4xq0muqrwhec38ygavigjyvdnnjhu1rthswbgiyjc4lz9uqc2w5f6m9l3qt\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"8gzwmemb68oo8og4xv7q07xgdn8gbboi2bwug3um2p6zvfbtaq64dhthsfdelptval6ey6761mykm9ibnkkivvhspbe8qszjlfis2ormwc5596o6kgnh3luiz584sp2vilk0m4x7f8jx83ywy6p4skbz3vbtlrbntjfq8j29\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"2lm9iyj3eqt5jbmof2yjiwxc789h0m\", \"ghdgtn8pr1zp81vzlx9uyo61uuc3hlcwrt2vnovte0w63d54lqx7c4sdo2xb3l3l1os5nlyd1a2n12i6u7qfhysv0zunhblh\", \"ryc7b7busr95gkt6zu7xvisqbbikc39edg76axxa5zwa65wpezvob0pxqvvi2kfsl50fh3rsps6y5ak0h1rfezqoo5m1czssnlked979sszmrore4s\", \"ospf2elhtpr7wmc7espk7bnhk8mke209brgyx4ag4c27zoi4a38rfv9523oooib34nsyqsny20st4v9sqcry9622eq6a\", \"37c6i5d3ee0whkmhng3sz\", \"dkmav4mb3ow62yv6xxbul4tm6tuyjk0poadkwb1ivw2rk7jtt8e3s4fl49fedeqdd3d3p4fmgqfvnvcunjdq84bca\", \"lbkx7vf2erbegqz0k5l6ci2oufiah4ph0z967w5qqchqgcrew38tqyy09krp1likmo4kd0gr5pgftwajpdcrgu1gudtrarnnvbxbfp8mtgz7tsbxeap4hi47tedpe1heejirz5nis5a5bnvakvv4cmq5loznrhzqgdizwr236dg40p9tv76q36\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"l614ixxpo3hjid5j4dryrp2hebs49trqf2mqxz2u0hxlcbofbosd6u79k61tcarog58vcatbq6f3lr9hoo1dzbpd97u\", \"wdbgys6y2hasvew5rnfy9xe2spjk73fphyl1duy6ydj5oqhuy4h8ps96fj7s2bhtssv52fgvhf8qt8n2l1ou1648nz62lkls0587ie2hqtl65s6b4frpdi2q4o2x64jsn1rb0t8b\" ]\n    } ],\n    \"service\" : \"bqwh6ugo6b33amlb625rac2zcnzm9cdxkyw5yrv5d3issfcpt3ywc5ce8spez81qtdzt6c1m6fqrzsypjclf3ahfff203ne3ceuxx8ogtqxau17zj2o1bpznqoxm2kzbfy38nb53a\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"2y6p9rrtx8px2a37xm9col3zojo55rrvp9whprme1ip2fhlw0sqr3eebvxpmgv0ttfmh9qvnnx2cl42bu7hx8luy1x9ld6xuycitzdikwz2a6vlf7u5cytdfg2fw0bb3zjadu3mj68329i3lu3qu1iffjt0u2ua72xlan9s5ai8nbev19wc5isil1menvnxf\", \"cipj1w7bqt2bhbt9tiyfwdgtjl8cgqh9ify6ctlwzolre6h\", \"cd0sar7bva4a0v6r39txnl36e7b1a0gkrl43gjwfyehu2xlo6rs7m87kp1ev7fmtz161mdvcnx82u5sugtmyoaqxc2263eqaf7m9xw1a54524nh3n0kq5na66gujc5\", \"5zv7wuqc30gfwih6gc7rs7pxlxapgarbfk6j2c2gl80zcmzf5zcyhi45eo84hzk49foakx3wactwnqo957nzoewnvt4vwz28k55xx9ipwzeq3bcxko7ec3frkbrtih4wca595ov6dei987eyyewz65ej943q6ajj\", \"ydlmwxq3ey4\", \"vuzecu819y4miqbjrlifae6eiwarvg8dlbl5n5cw1uc95z9abauwcnm19ipy6y7etbzeht2r362q876unf0hz0adsac6upyeeaagxf9m86ut62xzi5tltshb4juxzwac8w6bjf580msmv2a4hwh4nj8fwych97u509yvz36ayyji3utuvcryqq1\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"d2kxe87itswyuc25otiljemux9tba2pw7piwzbi0ik71bdt4t97sz2um95f\", \"3nept5\", \"3qi8xzgdacff\", \"r62idyqkpmot6tgypgejkgx45c9s34iaipp5g7wvvxpyvcgg0rdpl4yrwwruy892npxqricrgo4a87ejr\" ]\n    } ],\n    \"service\" : \"238wjzipqvwb1k4jgouu7au\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6e99bda1-5ac1-4d22-b8eb-2da4043cb5dc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:28.576826Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.clientGateways.setIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "auditConfigs" : {
                "description" : "Specifies cloud audit logging configuration for this policy.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleIamV1AuditConfig"
                },
                "type" : "array"
              },
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleIamV1Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "4ea5eac9-a9bf-4875-86b7-8c650de9019a",
    "name" : "Gets the access control policy for a resource. Returns an empty policy if the re...",
    "request" : {
      "urlPath" : "/v1/rkm44czu6sx77r5xv9bqz9uyv01wwkusfdmbdhco8xmfbv65vvy:getIamPolicy",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"b70xeiyjcejiubh39lw1py4wwrg763trz56pfhofvb7c958h27rzbbkn52huuiznew2f8zsvuaqkvyytz\",\n      \"description\" : \"Doloremque dolores assumenda id placeat est expedita. Odit aut voluptatum commodi est eius. Aut animi numquam. Minima vitae tempora sint ut.\",\n      \"location\" : \"c0dyezgjmhm5dsysdqytul8ham7rnu0v8jvs0umucscdi6otbe9n1z2wvpjtzeu7l5dy2ed2kf7ed60pwquqrsz7bgqem2shj9ul5pc6l4bkeb4lje1s4814fgw36tlpt6v3lifc4kkci1a9x6lwxaqk6h02qgh6oyc1zi3o9zphn9a9yqw68q221jg95etp731cxfz0\",\n      \"title\" : \"Minima adipisci maiores dicta cupiditate at fuga.\"\n    },\n    \"role\" : \"f8zykdaxdz7kwk2ewzci52dnhhujyxho4vyj7c5j6uofn9nnf3v1mx1ssc6qr1wohykqv5ggo61kfc5mcxathhv3muhvkiazisq3fc\",\n    \"members\" : [ \"6e4et2f2s03g2fjjedy8i48hy06o0dbbvleek4ro181c34qgr9nowtc6cocq7sq2z4ejutzy2en5beq29k1r3ni5vck4lqg7owrh2hc35t6k6svg369lq62tkvvpo\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"5dyu3lbp7lgi7su0kxg29463wumo9gp977ypnsm2\",\n      \"description\" : \"Quas expedita laborum. Dolor ad voluptate eos quaerat. Est ad rem quia. Sit porro sapiente. Eligendi ab voluptatibus quas voluptatum ullam.\",\n      \"location\" : \"gixi8uou70j278ksrh5iqj6fcu7vl0g3dmsxie1g15eo08pil180s6igsc2ivi30px52uwlanroitosaw2fxsw6lluvb8t80zxfpyd3h19w3mf07\",\n      \"title\" : \"Quos rem dolores qui.\"\n    },\n    \"role\" : \"pi59d2bc87pkjc7gahtsp5g815cv0x56qwn9dlejs86108ckvfqgn9y6gzrier32u49qurf80xciwxlovmx8lao0yf815bvnp3qyacfg4xrhrdlb4a2kj0mieoxu5d99wk4jsgtap0yf2ehlyymny\",\n    \"members\" : [ \"lceefjc8an0cup22v3l7n99edrrq2fbxly0tiqe1ucxffbj1eh6ritz87z7k8loegb9qz5485wppjr0mds4qxcugrwtn7fjjk96i2tyj\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"bwqwfhku2muo2w6dlznhe6en9jyouzu295h\",\n      \"description\" : \"Magnam alias id aliquid quasi odio deserunt rerum. Velit eveniet incidunt. Et dicta voluptatem cupiditate beatae dicta. Tempora cumque tempore adipisci.\",\n      \"location\" : \"f8yhnqa24ijjoezdp43nq6lnhrzp6elphv3wi46yoapcrukht3nfxm13j\",\n      \"title\" : \"Atque quia quisquam autem non laboriosam aut impedit.\"\n    },\n    \"role\" : \"zqudrxjnti6dx53vcaoqqsexwzyclprnvdi9zfysdf9ynw0jlovy\",\n    \"members\" : [ \"66uizfq7zbb8z1ohig0smfg5x75t1hfkmf9j2qsfky1wa7ytshcd8msn80ufoywayw0cl3zth2adl4i9374khrwit0fhu8d5ehxmxroqjz4gfx5d84z5wkn2l7gijtyfx2e0sqquu6d8p62tff0paxlno116snke5k9qg4u9qd\", \"qrovomiznpwxrhvnolanvx0c2o0zsy7l\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"qwnu107vxryfdesbpm0x\",\n      \"description\" : \"Dolorum totam ut quasi in commodi. Autem quos ut ipsa hic facilis nihil. Possimus doloremque architecto ullam voluptatem. Beatae sunt sunt perspiciatis iure omnis.\",\n      \"location\" : \"h2n5lfa0cz2a5g6ekjp48idwqekgzgp8dfh8p8qiguian2pk1g0qx82f6nlke52yq0n980tb8jyodvtzo79nrvpwncd944eie2c2dnd8vaik3tame5rmdjuy99b9j5uow\",\n      \"title\" : \"Ad voluptate magnam aperiam vel.\"\n    },\n    \"role\" : \"dc67xfx3xvx4xav6wnmbbl9v6qmj1cipgk5k58zu08d1hkqez0dhhvwhhynzqab3b6jrv9s6w3doeq1j5k92bnva0ui39rlt41qwepn1exbiyak5539fwhz0ry6knq1pd2w225poq85vgu2w4tx70c8h9iud20yw37n9vdpisiuh4vbwm\",\n    \"members\" : [ \"b504cj9a5uhorra420cdmo5jtsdhhn75t5irjpt6u128ivrp0dpws51yvch4qx08t6gf1qd61enrw3wzfygebsefhz0nu9s50kh8ubx0op8beszw7hwf3\", \"sqoiqih5m6uap9k92623pepxzg4gjzrm0mjiqew030hkq6txe0zuxcx1x8zwt8ie6sc983imkiovnca1kft3bti6etjvysv7b17y7luv43folwjtqm2ord750vonedxj43wrpz2clogyzykeh29z472gsj3lsld1fh856j8vi81myltu\", \"fi4jj06gke22goryz2c\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"d3agcfq8ton5e8ck54uvoz15z2\",\n      \"description\" : \"Quia iusto ea incidunt cupiditate aut. Facilis amet quisquam ut et. Qui porro perferendis laudantium eligendi.\",\n      \"location\" : \"jtqgf70t5utggsl75a42r4rn1xps7ebnjwqyw9dvdq91s3whv73f9uhcvde5td9v3wgjkp9kejacyhp3f52gisxnorcf78dxfuqt2auysbc61zujltfhpa7c8jp2sk87gsb9zqm7zg1upfcctfdhac776qchhtm8c2nn\",\n      \"title\" : \"Omnis quibusdam excepturi.\"\n    },\n    \"role\" : \"938invse0fg1jgqqtejz1m29n51sjoeldgp4sg5ogz0ul0d910xkuhefadh1rrq8jkid5bpifpqf5fcleiuj95rv2zd48g5dwq8no5oh5zd4fi7qwgiobyqkg21l42hu\",\n    \"members\" : [ \"7ebsixt35k0g3oardk4aeuylfu2e7hof3exhdt9i65s36o\", \"nw56423yoinwe99c3d9vattwid0e2u857jk\", \"ovc1psejms3tj6m765d6p20bys5ob4z4rcwoukxzcduui8otrnt50812cmyyy7mle4socg7d4hbpned5xyqjgjoxt124vl6alvguhbf6wp8bglu5dmaikbikleq75t89cskydpx1o5uwk3m839r4jwtoc5kvg3z1mz\", \"gbxdb0htm4m7qoo83am0y10sym07zjqc2xkyctyjabmfmdflocwuce8ukx54xhba0fvvn611a3mvw\", \"pxyzidkka4u5a6x1n14luryxa18ogs42kq\", \"v00mp21ubvtdbv6iaelv99hx8dbb4ae57p61tbujyer2zbwuvqsvv9z4usgakqncdx37q8l2jydrgv\", \"474axtow1cfwpe1am74o4l4c22jlop2qpnynru7nz1rra3ihqf5q6paqj3cqkfw05c4rycsq28ra5rbova1ik9jilr4lfsw50llyzqmct3faqk649ity27806jay4tgledi5m0rf8bkqz6opp0ngn35sw5q6xm1ozy23yjhd4wx2ai5\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"h5rccyt9vreowrau6u7s1dfrlgdosoq1a4gy9z1xn5az4swv6d0gy0ii09kms149d1d\",\n      \"description\" : \"Aut omnis velit laudantium similique nisi. Praesentium asperiores omnis facere qui ut laudantium. Sint quis dolor assumenda suscipit quaerat.\",\n      \"location\" : \"10oki\",\n      \"title\" : \"Cum rerum sequi deserunt ad.\"\n    },\n    \"role\" : \"zqhxhgvva1ma5m0g4ptjne7e2qfw0osfsxkhsget2nb5jpeswt8rjgio6zcjjgipvemzywt52o5c0m1h4pvkzke\",\n    \"members\" : [ \"9wjx1zujkmw2ef39xy9ilnxmq9okj5fqnc5l8wz9560mhy4d6kx2tsorbhmygufp8dk3qudif4qop3nnx2ofy7mayucmwrmfwwgb1fo9h1tuml0jwbhb6o0obfyb7r2d4dkxrttnrw6ifn37dxtcvcgkvmf48utuzkgdcb\", \"ffhf2oji0qrtchj4nxg7ce850jzic7ulvplztm1qoabi3rclhv2cdu0147v0fjdn8kqp0shknfkh0fxlrn7bsvttu26iqvldj63j4zzb55ivqs2b01tqerao1n4c4ny0404rga57tryu5zerecurxm4zw\", \"5zuxhmqc5wnjgs1i2mrg808zhf5aau3smbneae3t5snh444n1eqexdsukz7i\", \"zqb7x31flu6c86q7iq1fzjxhzki4jzrwkktyptrtkgdsuol80rltbx1ut14iawmqgujlmwyqs8jtmi8d0z4etogsg8q4v0djctrc7fvadsuo67hmut1x6c3afvkdc8oldrgk802sjaggskgml\", \"q3tm9wnw5b2dx7gb6trhl1h9ebo1wkla4nyyc4q3dclf00uzfw5wcwp4883mepdaplzwk3gtyhh7nkuty262r82x0ul6t3f4axc3ry987uu18xejepcku13lfmugenzbrwxto3vixeon9h\", \"mkfir\", \"pe6tmoo00zwnuimpmw50lzrw4zgzfv26q7vukv2470sefx30fyx058jif4ivubnu026tvsdacdy5iaw5mkks4pnc2qhmtuo5icn7iued1y7kaukh\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"moqjfz6d7wctj46qufm95oxt7qc4ejmoo2acjkvmor51vfqva231\",\n      \"description\" : \"Cum nisi pariatur sit veritatis temporibus beatae earum. Et atque expedita quibusdam explicabo sit est id. Maxime ullam voluptatem repellendus voluptatem excepturi repellat. Tempora dolore qui eaque.\",\n      \"location\" : \"8038xfr9rkyb3571b3ddkywia0gtozhw8whizc77a9l5ctdlk7a93alnbgui3wgkqx95swl3hhrzd9e41u6vvsln4xxb350u3kzf30lte\",\n      \"title\" : \"Est necessitatibus at.\"\n    },\n    \"role\" : \"h1f6yu9v0\",\n    \"members\" : [ \"chqg4e79n5qru8yds2qwjmv6n2dzsmxmvh3aoriwril2qyhivz117tpw345tu49r80yjpmob3auhz8cdrlno6ll933oi8vc8v51k\", \"yrt531vxtz5e0nj7vjesnlvnljra5nh7qe9mvqzwr2n1oesjtf62rw31owzz4o9fzeq60vvuf6fpuu2gv\", \"ix6x0qg9vxej4mwotbu\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"zv0knft0o37g51h2c4xqh70f76ip06auuty0tcjzgxogj85tiy3uparhafsqt4t6pupc252aualyadsuwcq8ol5e825mjvdxiyi02pkuqbapa125cu6f3baiuu8thhigz5admkfmkwghuar5cqgx0pbow5dbc2fehq65t6rzflh6ezezaqe1v58w790j2olo8\",\n      \"description\" : \"Omnis quia aliquid velit. Sunt voluptatem sunt velit non voluptates officia voluptas. Fuga veritatis rem ut dicta excepturi suscipit. Necessitatibus consequuntur non non sunt ea tempore labore.\",\n      \"location\" : \"2y458j6u48ziqnd1dp5c8tb5dy5xq3xxof1i3u17t50i2aoepw5saj5n8fh2vwkae9k6u9qn7kg81mzfrzknofzf6oa7c7sddcpqs7bk3cbh2yeu08si1oap5y0xmhac5xk8ah9wtjxxdro6sl382o91rrz7kuhm\",\n      \"title\" : \"Veritatis quia aliquam fuga explicabo.\"\n    },\n    \"role\" : \"unrpwks9e5xns6626yqum0zn3kkw\",\n    \"members\" : [ \"dc1pv11jx6c7vmafx1lm19jl65hpzpg7flcnjvacr0k4y30ycb2a2ivxwavlo7nu0wdpiocvfdaypgu8f3b7ftgpwc6prdcnawyuz64hn53ocruxurj9eugdl6ljnpd63t9vvvasmqqfeixpp3pa0d8dvopss9ete8pwi4haonbf8f20xugf0h45engzn319qke\", \"ybfpv397jrv9ygfre3h3ct5xnx7bsmc2410rmvkg13o0iirq28mjwc6yut5g3wh9s2t14mteuxdb5t9yo0ck3ibhrd6nma6zk4iumz8v436vibub3l8u7yc6mnx8ek14juejn8g8tnwr2dvtaohallpk4t27fg4zpktnl1n9j7av\", \"9v89ueu3mgkqnhf59kmy2ecbf72icn78nd21vbmzc5itk7ortys35\", \"bdk5ljbb8cvaph5j9hi7lxb8mfg32w9551bdd1ukpi3xuhqgcjemsmousqy8iigz2bqks3h51ew\", \"ymfo2k5bj1cqetk2f3x0rdtxh1uavuah3iaj4lhpo8adxt1dfy7oay7ajr2j1azk7ast1v3ukckpvn0ao4edcqahzp0vgjauyuuyfqzghgn9farr24f8jogqlmogryakoavrullpeuitjb5l9tt01pj9y63cj26jdysfgtlmrd1h4qlsx1hxytxi5\", \"hv0pwrths6888dwckvwpchmoxux6bt8jz1k5sfw4mokj6ovid0t7ocmwxzdrgjeatusumaaqwugwo6trgi55goq5jqolrruamxf96oumboyo4dr7142y4lr543xsqlzvzjvej5swjldvon0qfex3ljgi412gj1lajn2gsqpx4d8l7ax5nt60mm2ruxqxtbdybq1dyto7\", \"jdmkhtqag8cxjluxw6v2xxvyjacm53qs9vf2vsihna3m2k8xdxi0esyf773axrusmhu7b4ihmyse0djpundh6z3c1zzbt7hxxzmyhuhpgbrh3o7lprr7m\" ]\n  } ],\n  \"etag\" : \"soluta\",\n  \"version\" : 115048068,\n  \"auditConfigs\" : [ {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"193xd4b13hccz4ls5uhkxbu0ixj5oc5yd7yux56ib1x4k06xxo5wpfsc0ix4hwkffj9j7dgjdodwo0iw6j86g8nao5rqp2osw9krpz5o0n28ugrszqd5u9zbussm59enq2leg9d5xx4hdg88hmmuvrs9hulh1qzqglqh01gume9nifxyr10c7ev2l8\", \"fwftfues10g64ec4t0x4s6c1ezl2d2soruhlw1k27oetedhsdi7vpqms5mou6yevldr0evvfxjqz8uk5fjje40vivu2jidb6ouqc7ie508gkvogr3pppo0bloychtf8d15tjctr03snca77vfhekvr2gq3ygzw2zqp\", \"xjx8v3i3xxwgrf271s1lw2f2r3p8zmtl5f3h7zmpcx0o2jis2h9thdpr5a4tw3orftfcf1sx0lvri5d39m5xenoffggw1k99syd6t4ca110msmfxi8tr9gye1f89hlubmaj8b5q\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"dmsh4zusjhatizkabv1m50v6pyjqrnmygc5pncstje5zgzv6aaejncab38106r9jbarntgdv80ruxgncifyexyv709rtnqzzdjfdcsbyppk7dy0ojm3nmd3a6\", \"7g1mdiy3dlcft2kowc40dx5e0bp58iwurnh0drt0j3yrhrzqcgu5ibhgfpl6wmvfr3ttjnhrwxerb\", \"hzgjw7m6a69ycdpvu1cxw8btidhufnembq8202ijzgp95ffpkw84lfp032p8prj06j9d6qujaejmxn0g98b29dmche9mgdo4rf7qy71b84qtw2bfaxlb16n9vr28syezhyho0ekr8i0zyf977z1vebysqvp6hokhs4lgw2lvegrvb3xkbm\", \"iwwim96w4ibdbduihj9tjukqw14t8sx8y62lthun4tgu11w9rzt8lnor38jitnw\", \"1x3u1300u9m3y37q51u6254j21b2v3hnk6l0cpmk0qli3jmy5gaqv2hrvhjroehv60huwo2xu1z3xqb0ivwtke\", \"lyv7ahruulgd5ej82utvmn25xl8srf5x3yursx878hf6fx\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"877xh80zwqui324go4ck01n3y0nlslnkcjbke6b8msnuyepqnj73p62ag9111o7t2d5d7y162am7ixmq861e3bk4ejr1wdru82gfv1vmwew7m8cxh1qka8kjhj1aijl8w8dy7u50kus1vj8z1gjy4a2psgczjjj7th3br1v3qob69dsbczry7tpj7p\", \"6mafeiy2anh7nr9h16mh1g9l8gpl591oiwnkhjv9eh1omjejejue2rm5tws511vi5onpopigarpfh0ay8w6pgdwrkhccodze0f8fio8el\", \"fe9auenwvhgj62jhxbocyf9iyfvu99es1r775dzfrzktjplbcgz8ken4wv82eomb6pt5dig0sl5oe0d00ryf6ipa0qyen5rwjaxn4ym0qd9d9781z0zlxfyl0jcdef4m84xh1wjnoea4\", \"b86omfvdv8vaswuf9hmd6ezzvwd2hrw844384v1qgvdftb4g19e9bqxs097cdsko49rc1yhoapc0anb4b032emdxkrng0jugob6nbpts8ka9sy5jm9d0ckqxax13n0aec54y5ztu3dkqgzc0e\", \"m4m5qz302byj47dyn6fi3vx3nc281evx1fo1evak\", \"c5ucpuj71es8c7ayw3wvohu75d43cvsdvlicmf9x3kclhfr3lfbybp8onzqb6bkxn6efwj\", \"owpu5g33i0z7d0g3ful1lnhtnw8lromw7ziq5lbqbtjxvx8apnb0o1t8dhyk6puy7j3th14fbfnus2toze03cn4rfejtljakbnsaw3t0ck5vrmddw7fj6j559enjy3i71zdmk1kjsx54h72j\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"hqa67addr77jaqmtr5z5o7e5h\", \"3ozitiqffzasp50r1vfy9k39bc7o5ro7s5v5bkucll2nnm0kv1id6z5xh46f1eiycd36s18onb4dd748acsooek59t845m1vgrb8nscymt79a8bjojnzijzq80plv1xi0su4tjja6afltdi5rng5b9fvaws8mxjpr8a64plty7zj52on3\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"3yo6jq3colbtt2kwc2frzsg3vyzwfs15bz7bce57vxx21gzct2x5iwg9lsukjjfurvij6asb8l95kx8vig20ws7xbh05z8w3xc2yu4p5s02di6fst55sqxtdth18bnet3exnfepc1bcwm003\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"f76njfmvl5xa2r80i9oesqc\", \"wyg05otvdhltrjyzkynk9ttxuqq81whd9yo1dtcnc7j5\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"8e0tkypqchwzrdbaj989qdxpm2ngw4tdmixixy96xerhsjfpa03v0za7hoioarvw7hg5tb0aj7z8tn0t7sn78scx2wak3if1nzh4pgucs39uetgcww7xxrrd5igoew08uu1bhvuiynf989com0fvwyy6e07bwegiotufgqaznxsxrjgox5zzwv\", \"17o4twiwco4rn59dkt889shb4z6tard8vv5q1kj5vnzfjg1i7ie34yh84u6c1ny3de2ohtyjuu6f6i69s0nvorztmudy3837x9y0z0ccgxagnm0joj1x6w7y11kv2x04funwlsvuyk75rxooe8tdhhy3b2lp4fwexnjkm63bkkivbn5wd57huq\", \"yhxtewc5bxz00iso2fmyplw72tosoonf9ivxeikf7m5pg4ve\" ]\n    } ],\n    \"service\" : \"qyeotqgctuo1grdwswd\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"hj6hxx56szqbowhpktle2i8bdsj31ms7dyvjgqcv1tfuugkohzhxs1ik2rzmb6c0uuw83k8nsxly1lzmrcsvm39knmrc19c6cddykucq84nfusw9d5g6ma3e4ythnkru6xigdhhfyui9er23k2egahfcg3y9xexzgsafgcu75be83t64b6uklu\", \"6rt3274zhi1bx4auz\", \"f8mvz0y462ixin9xh5k7j5pcs1yb0zl8pmcyyjh5p9k2qxo6zw832e0rddpeq9e32qk7ts961utkuj5z2u5j1wl79hl0dnrgwcir9gt6aupiev31zxycs7lcwaujqrg7u\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"tekeegt803n1t65aecvgguvchrmt8vb67b0w2qt5t3dn7kn4nae3x66t9urafdunizq1lt0rt67o8rmsrh63ec3he2fosemvwt8kddnqn1xt9baa3n6fjxtwzg91iby43hlh0tq61rv5dueabq031tx2t3ou9wwch81hux4adch592rkipzfz0ri\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"92bwgqufus7ibfikwybbzx35plq8bmee929hadcfanq23g47zw2knsogtx\", \"d3qujx8lqsef3ixk2i4w7tpg6hfqc0n3ee8w9y17tnxo4zi0uxzdq4o4w85kv9r0j2mh71oalef121ir1gmv8rkjis8g1u824mitaslemobt26loipgh90jiz1iywo6jqcsvqx88k22e4dzjhuihd1\", \"0ubm92ngaaxaibb6pyxemibjtk87mzyko179pb7u39dzc6g67f6cemkvdr9exaxxuxfv3miyf0hyhfyadag8qpm\", \"drkvfigldtvpv4691tbhnkswo2gc53bvw64lqzr5js9jqndhp5te7kqc82l2yxfiijger35aj3vuahcp6p90l5iny4aa7oepvry2si6bzh0l178ibt40q2\", \"7bipu08ws43\", \"q8eyo2hjh9rkz6bsrzprdnuw2edh2i3uc431wqjh131a4ytjhtgr15pudqohe4t9ekiczf5yrmdbhfozagr0r8mwrwuy94dua4yhxr6njt7pu137p5garm8sl5pgt4s6mni9urvfgtyubwm7nndl7awh\", \"rskuru3peicozlxmkitzhtobbd3275went60cl1mfmeu2p3xqiqz8lnelhzurxtv5x8\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"0kfp7d7kami0jps3dnv\", \"8jjsezzn4lbiaq5qlqn7yxgh4gtnuthrwr0txlfm3yhbtw8idqma6y56nzeoeo14lcrn3fyjdiyofyxelhsanm6z0o3rg\", \"pzukaoj5z1cnpwchctpp5l4q1hqe33xzoh1e8366scc7z0jje8tetr86o1dzmoflq2q0ca1c6b7t0i6e5owut3but4073jpfvr5fxchvou898wr0u6rhqis9xsg38hiugz1693wrj582wb8god12qdgvg39yyex8gev6qpsca4q06r3m7loutrlo\", \"p16myc07vnbwm4vocnwyrhnzl8dwst378l2wmyhh7xyv8tdaqs5pd3p6nk7nualp6407foetf4nkxso15ytt6eubfi9qmbmfknbna27p0fvq0rxyu2lg0f1spro86ebh1wkn\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"jahnmi0gwxtd9rhtg4g15nh6iekak0rra2uo0771imnioiwrwysfa3jbh7rb7ot0l6c\", \"qk6kq6d7k9nmg1kwh5dhqxf5o64bg1pmk0b9t\", \"sxy61r0on65m22fxrnefkos0xfws5jqwz6m8aekv0i9f0qd48f146hb9p4931uet1apja2onx74wgf0dxwk7co1loqyxajhzny8f4x8gnwlkj5ss8jew6hgw6vky5\", \"adwxty0jvbpgagd89ikg46kmrjx31y7cli3hqtds0fz5ypj21lywfc9niszf7tp7yk2ek8el0l5ktmq1liijf00s9ten0291qus3uyfcc9jysghcxv0pn0ove4hf2dxik1yi3ec4jyfpvtened2y9\" ]\n    } ],\n    \"service\" : \"ix1e28ep7gq1vfm7zgw1uii6gywxktgtk8cz3bia61ov06t0fq1mped37yn\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4ea5eac9-a9bf-4875-86b7-8c650de9019a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:28.573182Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.clientGateways.getIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "auditConfigs" : {
                "description" : "Specifies cloud audit logging configuration for this policy.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleIamV1AuditConfig"
                },
                "type" : "array"
              },
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleIamV1Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "a461d184-5270-4e0f-8c8f-0bfea8f061f0",
    "name" : "Creates a new ClientGateway in a given project and location.",
    "request" : {
      "urlPath" : "/v1/zy4hpiil85b7laxg2aiagx42847lqskhwoobg9gvmypwx0za9kwixpys26d483hr5n0295phi2c299o5tybsv8a8ofjb4qshjgpl9o41urdi5wlaga2pay2z85k11u8is1a5svbp46rr9qvptiy01kk9ovgivjbsic/clientGateways",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Mrs. Mohammad Cartwright\",\n  \"error\" : {\n    \"code\" : 2103156802,\n    \"details\" : [ { } ],\n    \"message\" : \"Eaque quis sint temporibus in aut dolorem. Sunt dolorem perferendis. Et fugit rerum. Et totam dolores sit. Sapiente aut eum suscipit libero ea aut velit.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a461d184-5270-4e0f-8c8f-0bfea8f061f0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:28.570466Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.clientGateways.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "66d97a7d-9fc7-4836-90ac-f965149902a0",
    "name" : "Lists ClientGateways in a given project and location.",
    "request" : {
      "urlPath" : "/v1/zgf6umsk6v9lv2qnvobc8ena5pkbxp2ggmfkzt1gm8glligu7uy8nuroyvpcvsvudhuqinl7h12ai61oayih3ikxrx1jc92ho33omjlxxgfky/clientGateways",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"unreachable\" : [ \"6ts3jvdfssxv7pmvcqw0oxkjrq1d4weyj2s9u3ynt0ndh1l2s78ebg5s\", \"zf69uuronq5hab9reb55f1haun3299wy5tbtmi9antzh0cphxojwcrajy5kiez1wbtns5ehv0no65debnktkdgxxxga09y54lycayflbikwq2cqye4b13aedf7l0ljsf7h07er1rt3fijveinn5nd1\" ],\n  \"clientGateways\" : [ {\n    \"clientConnectorService\" : \"aydq5za4bc3zrdympbsfibx7tramfbzxof89yi5pben863zwbq63427w118isw7uex9nyhazrvcsuw7gmde3ni7ovtlf0k7ygkm6uoz5ombui58enfsq9pjirl6sqgfaci3vdbmgts388brogwqhoudu2aujbazhkh519jhbjdc4iv9xvihtt1fljr2ir\",\n    \"createTime\" : \"2022-10-27T11:32:28.567863Z\",\n    \"name\" : \"Criselda Nader III\",\n    \"updateTime\" : \"2023-03-07T11:35:28.567991Z\",\n    \"id\" : \"u46s\",\n    \"state\" : \"RUNNING\"\n  }, {\n    \"clientConnectorService\" : \"8erzsev9nm6l9s0i1a4e4ewzdoqqb7g4fo81j9o5x6e6k8g7eeimp31gni5v63i36ed6csydbyuflni433nguup04vimq5q4049ua1qp2c2o1vk32r00r8y5aaaz7fz\",\n    \"createTime\" : \"2022-05-21T08:14:28.568152Z\",\n    \"name\" : \"Ms. Kenisha Corkery\",\n    \"updateTime\" : \"2022-11-11T11:40:28.568255Z\",\n    \"id\" : \"mf2v\",\n    \"state\" : \"CREATING\"\n  }, {\n    \"clientConnectorService\" : \"w4kvrwua1f45pffnfisz50f7go8qdt2q3cm4z5vy22sk9gpo9hs7td84ny9n5uo02vw\",\n    \"createTime\" : \"2022-08-22T11:06:28.568407Z\",\n    \"name\" : \"Mr. Germaine Tremblay\",\n    \"updateTime\" : \"2022-08-29T08:30:28.568518Z\",\n    \"id\" : \"ol2s\",\n    \"state\" : \"DELETING\"\n  }, {\n    \"clientConnectorService\" : \"e50cb7c9q0qbhzuf6cp93evzeaa2cry5bmt34m7pztitou7a6yphqt3qb4es31tt3jk5sz1mkolfb3s72n0mv98q\",\n    \"createTime\" : \"2023-02-20T08:22:28.568667Z\",\n    \"name\" : \"Mrs. Barrett Bruen\",\n    \"updateTime\" : \"2023-02-11T11:38:28.568771Z\",\n    \"id\" : \"wl9y\",\n    \"state\" : \"UPDATING\"\n  }, {\n    \"clientConnectorService\" : \"am4ym3tlpl6twfjwd1iqv9x30jf8ibik2klu8\",\n    \"createTime\" : \"2022-12-03T11:12:28.568965Z\",\n    \"name\" : \"Ty Kerluke\",\n    \"updateTime\" : \"2022-12-25T08:41:28.569066Z\",\n    \"id\" : \"489e\",\n    \"state\" : \"ERROR\"\n  }, {\n    \"clientConnectorService\" : \"y04i0mvrdlwuzv1x4pzlci50k4shda82qc7sgqvo6244qpuw4h4eo9uxavryv48qr7e1b9bzrmsogs6mtc3v95oqn96vm8x3mgx7rc4st5evtm9340o06aeknw7xaucqyg9zu58zcow9utwg5piwbs1e\",\n    \"createTime\" : \"2022-07-15T10:57:28.569232Z\",\n    \"name\" : \"Mr. Agustin Hyatt\",\n    \"updateTime\" : \"2022-09-04T08:53:28.569327Z\",\n    \"id\" : \"68dj\",\n    \"state\" : \"DELETING\"\n  }, {\n    \"clientConnectorService\" : \"m34m5xbglgsqs10lrhw1fm7uy1an6okupptaqrxzgpf1cz88npbajr2unxzxdvqw7f2i6jw8nvabxjq2wubtof51l5yab60nnw7a1ozce1rbxy5mpv6eu6mlladx7pdb2cg4bbu1w7pm67t6nqq8iudwzxbuquhngb\",\n    \"createTime\" : \"2023-01-06T11:09:28.569477Z\",\n    \"name\" : \"Joey Waelchi\",\n    \"updateTime\" : \"2022-09-26T08:06:28.569594Z\",\n    \"id\" : \"g882\",\n    \"state\" : \"DELETING\"\n  }, {\n    \"clientConnectorService\" : \"6rfmocbt7csowhxwp95dqtbu3ku6islanb9fvv716c1j50cu9ecnasl8bqjqrmcmtyuw1ukeosauen19fzs0jzu87x1eandak\",\n    \"createTime\" : \"2022-09-28T10:03:28.569734Z\",\n    \"name\" : \"Erlinda Herman\",\n    \"updateTime\" : \"2022-07-06T09:13:28.56984Z\",\n    \"id\" : \"p35y\",\n    \"state\" : \"DOWN\"\n  } ],\n  \"nextPageToken\" : \"tu1u9zqmawpqv568bk3hi8ptjqdxe2ovpkyyo2mn7zrelh3rc6d1bouh8c1jh6zvrg137lxdp853gi0ec0jkea4c12p9idr2a1v9grayqcuvuz02myt31yicl8jwmy5s9wilyxuf8u9pm9onfan5svcf6mtnba499zwambkrctg2kkwlvldn9yvb\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "66d97a7d-9fc7-4836-90ac-f965149902a0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:28.570128Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.clientGateways.list",
          "schema" : {
            "description" : "Message for response to listing ClientGateways.",
            "properties" : {
              "clientGateways" : {
                "description" : "The list of ClientGateway.",
                "items" : {
                  "$ref" : "#/components/schemas/ClientGateway"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token identifying a page of results the server should return.",
                "type" : "string"
              },
              "unreachable" : {
                "description" : "Locations that could not be reached.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "ff791a1b-0d2c-4a1c-b0f5-955eeca58daf",
    "name" : "Creates a new ClientConnectorService in a given project and location.",
    "request" : {
      "urlPath" : "/v1/hk5nh84u8j33pmllhxwbrr73lo7f8mjwhz253je9l7ykhmxc7kabwtp24386agnjbrq62uguzyl3bfav8nhynilu6jr1h6mj49a/clientConnectorServices",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Miss Dana Toy\",\n  \"error\" : {\n    \"code\" : 176500171,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Voluptate ratione et. Iusto sunt itaque autem. Modi illum soluta. Sit natus laboriosam. Quia omnis ut et harum aliquid quo doloremque.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ff791a1b-0d2c-4a1c-b0f5-955eeca58daf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:28.567765Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.clientConnectorServices.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "6bdca146-9632-4ad9-ac68-bd0e07340f6f",
    "name" : "Lists ClientConnectorServices in a given project and location.",
    "request" : {
      "urlPath" : "/v1/d98uewnav2fwpdj910t88fyuyh84gud8jbd57clfpgqwg0q636d50skwy23wmtgioaqqkf8gvxvzjsat8owzj855t0uqb30m4bz1tzsmmtmc3tl5d5p0jdlxx6hxzk7ugami97gsd7ulcbqqc6dyoh3uc1zoi86iji8ttj6jhs3wiqk5oa83g2pzldx0ks/clientConnectorServices",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"unreachable\" : [ \"lfoxf90oz1gsd3hasulaxlnrlx5n8b75o6vqe6mykg44g2lz9340o86auesohchl\", \"gtty\", \"p1v2cv7ohgdun8a1u3n5684wj5ff24agkkawt8xdstfnxvkdxhp5vmuca5a3ryaiymcjncnw7hbb2z7ybc7b0mm\", \"5371etl1sx77qqb0xo2rqnonr4hyo1gfs5bcammm0wxfmv1v9cvncpojp3x5xyuju02miauiwkcbiksd2rd8roly1m7v6o783\", \"hb43aud0qcz4ld1ulidtugjntqwrl252p5u3a42k1wx8azm0olaj54dasvo2y2d3b18lj0y25zwswf5ahuxm5p3pjcbfmntn1d92cyos9nzfbpwlaz6ub1a6fl0lx9zwtbeixdglaafqqn5z2zg6r81own0leb2\", \"xsxl5or5flayffmyb8gj3oss2oyqezbm78uilimrp5nhnt57tagf3rnz68jh7n5rju1jlfae9yne303qjtk2kflnmingrdcwjv4slz3ameojvi7qn9ueeonyny6pxtjd5vapvmvm6yg6ghmkiidkyrlk3sium\", \"f1b8cv208uv0ayktedfzein69qkws9pvirnuw9pzm2zh1y48264xozisyy3\", \"1qnc0gfaupi42f4nx2q5rvp4vaij98ieq15yppjeo2zq\" ],\n  \"nextPageToken\" : \"p78r1hvbi19t6vn1cjpdlc6e82wppw4u1sraxsubdro10gje57fxcxz76bdrww80ck863sntbrrenktpurh1l2knigvpu5\",\n  \"clientConnectorServices\" : [ {\n    \"ingress\" : {\n      \"config\" : {\n        \"destinationRoutes\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"transportProtocol\" : \"TCP\"\n      }\n    },\n    \"createTime\" : \"2022-08-30T11:32:28.564595Z\",\n    \"displayName\" : \"Maybelle Volkman\",\n    \"name\" : \"Leigh Connelly II\",\n    \"updateTime\" : \"2022-06-04T11:50:28.564842Z\",\n    \"state\" : \"ERROR\",\n    \"egress\" : {\n      \"peeredVpc\" : {\n        \"networkVpc\" : \"svy3gsk3vpeu0us7xy\"\n      }\n    }\n  }, {\n    \"ingress\" : {\n      \"config\" : {\n        \"destinationRoutes\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"transportProtocol\" : \"TCP\"\n      }\n    },\n    \"createTime\" : \"2022-11-09T08:26:28.564986Z\",\n    \"displayName\" : \"Cornell Douglas\",\n    \"name\" : \"Christian Bruen\",\n    \"updateTime\" : \"2023-01-11T11:39:28.565178Z\",\n    \"state\" : \"CREATING\",\n    \"egress\" : {\n      \"peeredVpc\" : {\n        \"networkVpc\" : \"inbxbbhtqxjn6u3rlpicteeita0xj3rfl69ina5jk3b340hsq8rxm7t\"\n      }\n    }\n  }, {\n    \"ingress\" : {\n      \"config\" : {\n        \"destinationRoutes\" : [ { }, { }, { }, { }, { }, { } ],\n        \"transportProtocol\" : \"TRANSPORT_PROTOCOL_UNSPECIFIED\"\n      }\n    },\n    \"createTime\" : \"2022-06-11T10:08:28.565299Z\",\n    \"displayName\" : \"Leigh Sawayn\",\n    \"name\" : \"Leonel Goyette DDS\",\n    \"updateTime\" : \"2023-02-21T09:27:28.56548Z\",\n    \"state\" : \"RUNNING\",\n    \"egress\" : {\n      \"peeredVpc\" : {\n        \"networkVpc\" : \"3w12qkv8bu5otqmhdagl9qhkx639xd7ik7bh3saen8apd7asojuwt4npa80c90ebob9djy4be4kjldmvm3qe1w3c8r7f6llzb47edgj4su6797zjtpjj6tlobthmhka8r10ca561ay5xggew06pjg35l83i5y6bsun1261h0f3g6v6xkc61h3\"\n      }\n    }\n  }, {\n    \"ingress\" : {\n      \"config\" : {\n        \"destinationRoutes\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"transportProtocol\" : \"TCP\"\n      }\n    },\n    \"createTime\" : \"2022-08-12T09:33:28.565974Z\",\n    \"displayName\" : \"Eveline Schneider I\",\n    \"name\" : \"Mrs. Zachariah Hoppe\",\n    \"updateTime\" : \"2023-02-27T08:06:28.566167Z\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"egress\" : {\n      \"peeredVpc\" : {\n        \"networkVpc\" : \"zixy83p3rooqr8rwaijkzvuru38jtjzwqnwbmrdts8j08g55o2ry1xtifx8su10lpr1ntlgab4e1r43n0840t8a8blji748x7rq0stkka1d5n7l2j3it8nlbnbs\"\n      }\n    }\n  }, {\n    \"ingress\" : {\n      \"config\" : {\n        \"destinationRoutes\" : [ { }, { } ],\n        \"transportProtocol\" : \"TRANSPORT_PROTOCOL_UNSPECIFIED\"\n      }\n    },\n    \"createTime\" : \"2022-05-23T10:05:28.566274Z\",\n    \"displayName\" : \"Ms. Lorenzo Tremblay\",\n    \"name\" : \"Johanna Harris III\",\n    \"updateTime\" : \"2022-04-24T09:50:28.566546Z\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"egress\" : {\n      \"peeredVpc\" : {\n        \"networkVpc\" : \"qt9r9juxyde59mw3di8919kqhqf\"\n      }\n    }\n  }, {\n    \"ingress\" : {\n      \"config\" : {\n        \"destinationRoutes\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"transportProtocol\" : \"TCP\"\n      }\n    },\n    \"createTime\" : \"2022-05-20T11:31:28.566669Z\",\n    \"displayName\" : \"Allyson Stamm\",\n    \"name\" : \"Bernita Langosh\",\n    \"updateTime\" : \"2022-11-13T08:51:28.566852Z\",\n    \"state\" : \"CREATING\",\n    \"egress\" : {\n      \"peeredVpc\" : {\n        \"networkVpc\" : \"czwl8o82zx3fbr9i5jjr6zpzhtndwt1yrgk38l9ddwt5lioydtt8k9i3537xpik1mfkxp3njlutsdmxtcf0w50y4hui8l6zyhtgframrm6pgr\"\n      }\n    }\n  }, {\n    \"ingress\" : {\n      \"config\" : {\n        \"destinationRoutes\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"transportProtocol\" : \"TCP\"\n      }\n    },\n    \"createTime\" : \"2022-12-21T07:57:28.566974Z\",\n    \"displayName\" : \"Dinorah Feest IV\",\n    \"name\" : \"Aubrey Moore Jr.\",\n    \"updateTime\" : \"2022-06-15T11:14:28.567162Z\",\n    \"state\" : \"DELETING\",\n    \"egress\" : {\n      \"peeredVpc\" : {\n        \"networkVpc\" : \"ong99non89u761i121evr0kw24p5s4hw8carqwvev4u81rb4celkb1\"\n      }\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6bdca146-9632-4ad9-ac68-bd0e07340f6f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:28.567405Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.clientConnectorServices.list",
          "schema" : {
            "description" : "Message for response to listing ClientConnectorServices.",
            "properties" : {
              "clientConnectorServices" : {
                "description" : "The list of ClientConnectorService.",
                "items" : {
                  "$ref" : "#/components/schemas/ClientConnectorService"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token identifying a page of results the server should return.",
                "type" : "string"
              },
              "unreachable" : {
                "description" : "Locations that could not be reached.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "5eee299f-8581-45ec-b56a-6d121c3e3624",
    "name" : "Creates a new AppGateway in a given project and location.",
    "request" : {
      "urlPath" : "/v1/l9dqw3ad8bdn8g8jy4lle0p37z0fmyx22471hj0b1pvfdoxsjdc26own8vbgmdsnh9h39cdy5fdaxu7ecr5davob7gxr2rds5113el/appGateways",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Erasmo Sauer\",\n  \"error\" : {\n    \"code\" : 709254912,\n    \"details\" : [ { } ],\n    \"message\" : \"Eos architecto esse nihil esse. Et possimus et et suscipit magni. Reprehenderit voluptatem deleniti et et similique ipsam ut.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5eee299f-8581-45ec-b56a-6d121c3e3624",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:28.564406Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.appGateways.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "90fd697a-31fe-47ac-8f02-fb16f63bc422",
    "name" : "Lists AppGateways in a given project and location.",
    "request" : {
      "urlPath" : "/v1/aq64r/appGateways",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"appGateways\" : [ {\n    \"uid\" : \"929e\",\n    \"allocatedConnections\" : [ {\n      \"ingressPort\" : 1289252666,\n      \"pscUri\" : \"https://web.example.mocklab.io/508343\"\n    }, {\n      \"ingressPort\" : 692123483,\n      \"pscUri\" : \"https://web.example.mocklab.io/697545\"\n    }, {\n      \"ingressPort\" : 864402222,\n      \"pscUri\" : \"https://web.example.mocklab.io/857055\"\n    }, {\n      \"ingressPort\" : 530418172,\n      \"pscUri\" : \"https://web.example.mocklab.io/296364\"\n    }, {\n      \"ingressPort\" : 1880704542,\n      \"pscUri\" : \"https://web.example.mocklab.io/661463\"\n    }, {\n      \"ingressPort\" : 592300987,\n      \"pscUri\" : \"https://web.example.mocklab.io/827833\"\n    } ],\n    \"createTime\" : \"2022-09-30T09:56:28.558834Z\",\n    \"displayName\" : \"Tova Stiedemann\",\n    \"hostType\" : \"GCP_REGIONAL_MIG\",\n    \"name\" : \"Dr. Tony White\",\n    \"updateTime\" : \"2022-05-23T08:18:28.55904Z\",\n    \"state\" : \"DOWN\",\n    \"type\" : \"TYPE_UNSPECIFIED\",\n    \"uri\" : \"https://web.example.mocklab.io/052620\",\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"pn60\",\n    \"allocatedConnections\" : [ {\n      \"ingressPort\" : 625590464,\n      \"pscUri\" : \"https://web.example.mocklab.io/764845\"\n    } ],\n    \"createTime\" : \"2022-05-23T07:59:28.559393Z\",\n    \"displayName\" : \"King Ankunding\",\n    \"hostType\" : \"HOST_TYPE_UNSPECIFIED\",\n    \"name\" : \"Frankie Prosacco\",\n    \"updateTime\" : \"2023-01-09T08:15:28.559573Z\",\n    \"state\" : \"UPDATING\",\n    \"type\" : \"TCP_PROXY\",\n    \"uri\" : \"https://web.example.mocklab.io/911321\",\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"30fi\",\n    \"allocatedConnections\" : [ {\n      \"ingressPort\" : 1030930380,\n      \"pscUri\" : \"https://web.example.mocklab.io/466531\"\n    }, {\n      \"ingressPort\" : 1931332184,\n      \"pscUri\" : \"https://web.example.mocklab.io/637899\"\n    }, {\n      \"ingressPort\" : 1135990905,\n      \"pscUri\" : \"https://web.example.mocklab.io/077773\"\n    }, {\n      \"ingressPort\" : 361979009,\n      \"pscUri\" : \"https://web.example.mocklab.io/281905\"\n    }, {\n      \"ingressPort\" : 1252097939,\n      \"pscUri\" : \"https://web.example.mocklab.io/719915\"\n    } ],\n    \"createTime\" : \"2022-10-02T10:21:28.560332Z\",\n    \"displayName\" : \"Dr. Andres Berge\",\n    \"hostType\" : \"GCP_REGIONAL_MIG\",\n    \"name\" : \"Dr. Annamaria Lowe\",\n    \"updateTime\" : \"2023-02-15T10:30:28.560543Z\",\n    \"state\" : \"UPDATING\",\n    \"type\" : \"TCP_PROXY\",\n    \"uri\" : \"https://web.example.mocklab.io/797361\",\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"5z7b\",\n    \"allocatedConnections\" : [ {\n      \"ingressPort\" : 1484466084,\n      \"pscUri\" : \"https://web.example.mocklab.io/276049\"\n    }, {\n      \"ingressPort\" : 718379422,\n      \"pscUri\" : \"https://web.example.mocklab.io/373675\"\n    } ],\n    \"createTime\" : \"2022-08-09T08:35:28.56098Z\",\n    \"displayName\" : \"Arlean Feest I\",\n    \"hostType\" : \"HOST_TYPE_UNSPECIFIED\",\n    \"name\" : \"Brady Schuster Jr.\",\n    \"updateTime\" : \"2022-11-27T09:00:28.561195Z\",\n    \"state\" : \"UPDATING\",\n    \"type\" : \"TCP_PROXY\",\n    \"uri\" : \"https://web.example.mocklab.io/156430\",\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"0tzt\",\n    \"allocatedConnections\" : [ {\n      \"ingressPort\" : 979597542,\n      \"pscUri\" : \"https://web.example.mocklab.io/949812\"\n    }, {\n      \"ingressPort\" : 1205195807,\n      \"pscUri\" : \"https://web.example.mocklab.io/969389\"\n    }, {\n      \"ingressPort\" : 1326157096,\n      \"pscUri\" : \"https://web.example.mocklab.io/244640\"\n    }, {\n      \"ingressPort\" : 977241204,\n      \"pscUri\" : \"https://web.example.mocklab.io/119542\"\n    }, {\n      \"ingressPort\" : 714502017,\n      \"pscUri\" : \"https://web.example.mocklab.io/201378\"\n    }, {\n      \"ingressPort\" : 1462413485,\n      \"pscUri\" : \"https://web.example.mocklab.io/164087\"\n    }, {\n      \"ingressPort\" : 955240671,\n      \"pscUri\" : \"https://web.example.mocklab.io/048701\"\n    } ],\n    \"createTime\" : \"2022-11-16T11:48:28.562132Z\",\n    \"displayName\" : \"Sandy Cole\",\n    \"hostType\" : \"GCP_REGIONAL_MIG\",\n    \"name\" : \"Michal Leannon\",\n    \"updateTime\" : \"2022-06-29T08:45:28.562393Z\",\n    \"state\" : \"DELETING\",\n    \"type\" : \"TCP_PROXY\",\n    \"uri\" : \"https://web.example.mocklab.io/456151\",\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"pm89\",\n    \"allocatedConnections\" : [ {\n      \"ingressPort\" : 1186927802,\n      \"pscUri\" : \"https://web.example.mocklab.io/355454\"\n    }, {\n      \"ingressPort\" : 329442263,\n      \"pscUri\" : \"https://web.example.mocklab.io/266231\"\n    }, {\n      \"ingressPort\" : 2067802859,\n      \"pscUri\" : \"https://web.example.mocklab.io/820353\"\n    }, {\n      \"ingressPort\" : 1344071965,\n      \"pscUri\" : \"https://web.example.mocklab.io/555332\"\n    }, {\n      \"ingressPort\" : 953109265,\n      \"pscUri\" : \"https://web.example.mocklab.io/172990\"\n    }, {\n      \"ingressPort\" : 1963259762,\n      \"pscUri\" : \"https://web.example.mocklab.io/860609\"\n    } ],\n    \"createTime\" : \"2022-05-19T11:41:28.563477Z\",\n    \"displayName\" : \"Ms. Seymour Kutch\",\n    \"hostType\" : \"GCP_REGIONAL_MIG\",\n    \"name\" : \"Mrs. Charissa Lind\",\n    \"updateTime\" : \"2022-05-12T09:41:28.563735Z\",\n    \"state\" : \"DELETING\",\n    \"type\" : \"TCP_PROXY\",\n    \"uri\" : \"https://web.example.mocklab.io/583595\",\n    \"labels\" : { }\n  } ],\n  \"unreachable\" : [ \"pogrk7awx8miq6m7fwxe3q1m5muxsud7wa67gu03pdsr35lhzf70qkrj517yi4bab7vyqzzupvyx3uk8h4g4f8pd7brd5h2hkhwslzd56ixe2ptff3am5yq6v11mwyy6hf8yic842\" ],\n  \"nextPageToken\" : \"rx1dhlmwpqkt59azr0t7rcqwyg29rm7kvxo9hpjeg47qldlvd3wp7nwqwz6hkhen0st5xpr8xlw7bfvrqqrwdeer10hcozfby5n8fjs0buvj23zc1e68\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "90fd697a-31fe-47ac-8f02-fb16f63bc422",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:28.564092Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.appGateways.list",
          "schema" : {
            "description" : "Response message for BeyondCorp.ListAppGateways.",
            "properties" : {
              "appGateways" : {
                "description" : "A list of BeyondCorp AppGateways in the project.",
                "items" : {
                  "$ref" : "#/components/schemas/AppGateway"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              },
              "unreachable" : {
                "description" : "A list of locations that could not be reached.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "a73929f3-1b20-40a1-bbff-0e26c687fed7",
    "name" : "Creates a new AppConnector in a given project and location.",
    "request" : {
      "urlPath" : "/v1/bhwvyexru4fwq5pc1abduxp0qp5rfcqslfs3hhk85unp6f7rxzvdlcgt3cy4k4tdokhesxs217ifs2owbdafeqwmfpgbobdqv3froqvqbwwowvsnjrxpenbiz060hnd0ee7wdoszp9wu67j1mi7xhz/appConnectors",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"William Tremblay\",\n  \"error\" : {\n    \"code\" : 1331410461,\n    \"details\" : [ { }, { } ],\n    \"message\" : \"Eum ipsa ut. Pariatur soluta nihil aut. Odio maiores nostrum autem ut. Deserunt sit impedit ut consequuntur atque enim animi. Aut architecto et esse et.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a73929f3-1b20-40a1-bbff-0e26c687fed7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:28.558117Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.appConnectors.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "64e26f88-3f14-45c7-9562-ec247b47aaca",
    "name" : "Lists AppConnectors in a given project and location.",
    "request" : {
      "urlPath" : "/v1/ef711aqkr220je4kx972svnddegjq9lqgpbbbtmhd06w2bqa34yk0lge0ii09i7c2iwhys5njboqfg6dutpowqf1q8ish/appConnectors",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"unreachable\" : [ \"foren4iq0to6komkqcb10ksstcu9lnscjzxut98lg7nty1yodwkr1jocnoi7hmo46c2vrv2f7ypz17nzwhm6dc\", \"fdlz4rx02c52sb9fun3xhmeyf4oedjvz7rft8vaqwekxflyz26vjcy7zfwopb0pg94ewtiffhcyt0yjlzlanzeof29zu4fvnav9qicqd1tkxio9f9lrowjvc5jm75guihod3slp7hehuz9rni9bvosr3iatt2znf3fukz9vtsxv4pa5n19qf8vchh3c3rz2sbhk1ors\" ],\n  \"appConnectors\" : [ {\n    \"uid\" : \"0753\",\n    \"createTime\" : \"2022-03-26T08:41:28.547833Z\",\n    \"displayName\" : \"Mrs. Ena Brekke\",\n    \"name\" : \"Curt White IV\",\n    \"updateTime\" : \"2022-08-22T09:19:28.548031Z\",\n    \"state\" : \"CREATED\",\n    \"principalInfo\" : {\n      \"serviceAccount\" : {\n        \"email\" : \"vj1mv4421ix34x8i4qjkdr1dxxsiws2rdkwpdz32w88s\"\n      }\n    },\n    \"resourceInfo\" : {\n      \"sub\" : [ {\n        \"sub\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"4gfs\",\n        \"time\" : \"2022-03-18T11:53:28.548245Z\",\n        \"status\" : \"UNRESPONSIVE\"\n      }, {\n        \"sub\" : [ { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"82sn\",\n        \"time\" : \"2022-05-28T11:42:28.548431Z\",\n        \"status\" : \"UNRESPONSIVE\"\n      }, {\n        \"sub\" : [ { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"112p\",\n        \"time\" : \"2023-02-15T11:27:28.548689Z\",\n        \"status\" : \"UNRESPONSIVE\"\n      }, {\n        \"sub\" : [ { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"7i3j\",\n        \"time\" : \"2022-08-13T08:47:28.548863Z\",\n        \"status\" : \"UNRESPONSIVE\"\n      }, {\n        \"sub\" : [ { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"985v\",\n        \"time\" : \"2022-07-09T08:59:28.549034Z\",\n        \"status\" : \"HEALTHY\"\n      } ],\n      \"resource\" : { },\n      \"id\" : \"wy35\",\n      \"time\" : \"2022-12-25T11:47:28.549194Z\",\n      \"status\" : \"UNHEALTHY\"\n    },\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"tibq\",\n    \"createTime\" : \"2022-10-12T11:08:28.549362Z\",\n    \"displayName\" : \"Margy Emmerich\",\n    \"name\" : \"Ozella Flatley\",\n    \"updateTime\" : \"2022-04-25T09:40:28.549573Z\",\n    \"state\" : \"DOWN\",\n    \"principalInfo\" : {\n      \"serviceAccount\" : {\n        \"email\" : \"u3gxst1kc4ikic0hdbwagrkdhaj2mklthlsq4up8p9fvn5fds4d1rg2mq5rypy56to4vko3j2shyhwi5ar3glptkztb4fkn5ipfi0s7iwinws2c87yko4p0wcdxgbf2vcr2n82dvlp2u47lk4oaw96r8qehhjr620u8zvl6ndr5zcfts8xmpcmq\"\n      }\n    },\n    \"resourceInfo\" : {\n      \"sub\" : [ {\n        \"sub\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"e40e\",\n        \"time\" : \"2022-09-09T10:19:28.549851Z\",\n        \"status\" : \"UNRESPONSIVE\"\n      }, {\n        \"sub\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"s5eh\",\n        \"time\" : \"2022-06-03T11:21:28.550055Z\",\n        \"status\" : \"DEGRADED\"\n      }, {\n        \"sub\" : [ { }, { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"2kl0\",\n        \"time\" : \"2022-11-20T11:52:28.550246Z\",\n        \"status\" : \"HEALTHY\"\n      }, {\n        \"sub\" : [ { }, { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"ge71\",\n        \"time\" : \"2022-09-06T08:05:28.550516Z\",\n        \"status\" : \"UNRESPONSIVE\"\n      }, {\n        \"sub\" : [ { }, { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"gvyq\",\n        \"time\" : \"2022-10-16T11:24:28.550723Z\",\n        \"status\" : \"HEALTH_STATUS_UNSPECIFIED\"\n      }, {\n        \"sub\" : [ { }, { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"x961\",\n        \"time\" : \"2023-01-14T08:43:28.550897Z\",\n        \"status\" : \"HEALTH_STATUS_UNSPECIFIED\"\n      } ],\n      \"resource\" : { },\n      \"id\" : \"bo90\",\n      \"time\" : \"2022-07-21T09:15:28.55106Z\",\n      \"status\" : \"DEGRADED\"\n    },\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"ex8p\",\n    \"createTime\" : \"2022-09-25T08:32:28.551227Z\",\n    \"displayName\" : \"Tim Carroll\",\n    \"name\" : \"Hank Parker\",\n    \"updateTime\" : \"2022-10-17T08:11:28.551429Z\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"principalInfo\" : {\n      \"serviceAccount\" : {\n        \"email\" : \"8avbf3m0rwn4amj6yg\"\n      }\n    },\n    \"resourceInfo\" : {\n      \"sub\" : [ {\n        \"sub\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"0u2x\",\n        \"time\" : \"2022-06-24T11:38:28.55165Z\",\n        \"status\" : \"UNHEALTHY\"\n      }, {\n        \"sub\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"g968\",\n        \"time\" : \"2022-04-30T09:54:28.551835Z\",\n        \"status\" : \"UNHEALTHY\"\n      }, {\n        \"sub\" : [ { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"377g\",\n        \"time\" : \"2022-11-03T10:52:28.552004Z\",\n        \"status\" : \"HEALTHY\"\n      }, {\n        \"sub\" : [ { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"9555\",\n        \"time\" : \"2022-07-07T10:59:28.55218Z\",\n        \"status\" : \"DEGRADED\"\n      } ],\n      \"resource\" : { },\n      \"id\" : \"r332\",\n      \"time\" : \"2022-03-21T08:48:28.552338Z\",\n      \"status\" : \"UNRESPONSIVE\"\n    },\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"2k3d\",\n    \"createTime\" : \"2022-03-18T08:59:28.55249Z\",\n    \"displayName\" : \"Monroe Hoeger\",\n    \"name\" : \"Man Steuber\",\n    \"updateTime\" : \"2022-08-07T08:50:28.552691Z\",\n    \"state\" : \"DELETING\",\n    \"principalInfo\" : {\n      \"serviceAccount\" : {\n        \"email\" : \"obd37x9od2b690m8ia38wzjrpa3er7g88gadpnos5olcdvimmgknj7rrhe6re2qr0r0pjducmgt9k7us4llh64spp7lcx3lqezhbjme8p35\"\n      }\n    },\n    \"resourceInfo\" : {\n      \"sub\" : [ {\n        \"sub\" : [ { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"m655\",\n        \"time\" : \"2022-06-17T09:24:28.552895Z\",\n        \"status\" : \"HEALTH_STATUS_UNSPECIFIED\"\n      }, {\n        \"sub\" : [ { }, { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"j3j2\",\n        \"time\" : \"2022-11-04T09:36:28.55308Z\",\n        \"status\" : \"HEALTH_STATUS_UNSPECIFIED\"\n      }, {\n        \"sub\" : [ { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"123u\",\n        \"time\" : \"2023-02-08T09:47:28.553241Z\",\n        \"status\" : \"UNHEALTHY\"\n      }, {\n        \"sub\" : [ { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"8l31\",\n        \"time\" : \"2022-10-20T11:45:28.553399Z\",\n        \"status\" : \"HEALTH_STATUS_UNSPECIFIED\"\n      }, {\n        \"sub\" : [ { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"ff4z\",\n        \"time\" : \"2022-05-25T09:28:28.553564Z\",\n        \"status\" : \"DEGRADED\"\n      } ],\n      \"resource\" : { },\n      \"id\" : \"2h82\",\n      \"time\" : \"2022-12-21T08:39:28.55372Z\",\n      \"status\" : \"DEGRADED\"\n    },\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"1r9d\",\n    \"createTime\" : \"2022-08-22T11:29:28.55388Z\",\n    \"displayName\" : \"Mrs. Rafael Greenholt\",\n    \"name\" : \"Carl DuBuque\",\n    \"updateTime\" : \"2023-01-08T11:26:28.554143Z\",\n    \"state\" : \"CREATING\",\n    \"principalInfo\" : {\n      \"serviceAccount\" : {\n        \"email\" : \"a5c77xzfh0yrpr4njmfjhhjc3wvidf2aa2kgnga70j4c3dupwz2eaxaqqitxa27j4nil2flkc64tt7adx1o6r8uo3zsr5dbbmrqbrds6s9j5p\"\n      }\n    },\n    \"resourceInfo\" : {\n      \"sub\" : [ {\n        \"sub\" : [ { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"6c9b\",\n        \"time\" : \"2022-11-05T11:49:28.55434Z\",\n        \"status\" : \"DEGRADED\"\n      }, {\n        \"sub\" : [ { } ],\n        \"resource\" : { },\n        \"id\" : \"b2xl\",\n        \"time\" : \"2022-07-24T07:55:28.554499Z\",\n        \"status\" : \"DEGRADED\"\n      }, {\n        \"sub\" : [ { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"m8jo\",\n        \"time\" : \"2022-06-04T08:56:28.554655Z\",\n        \"status\" : \"DEGRADED\"\n      }, {\n        \"sub\" : [ { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"322w\",\n        \"time\" : \"2022-06-30T08:54:28.554881Z\",\n        \"status\" : \"UNHEALTHY\"\n      }, {\n        \"sub\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"723z\",\n        \"time\" : \"2023-01-23T11:10:28.55505Z\",\n        \"status\" : \"UNRESPONSIVE\"\n      }, {\n        \"sub\" : [ { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"43p9\",\n        \"time\" : \"2022-09-05T09:01:28.555215Z\",\n        \"status\" : \"UNRESPONSIVE\"\n      }, {\n        \"sub\" : [ { }, { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"5hkn\",\n        \"time\" : \"2022-04-18T10:16:28.555369Z\",\n        \"status\" : \"HEALTH_STATUS_UNSPECIFIED\"\n      }, {\n        \"sub\" : [ { } ],\n        \"resource\" : { },\n        \"id\" : \"w799\",\n        \"time\" : \"2022-07-06T09:09:28.555517Z\",\n        \"status\" : \"UNHEALTHY\"\n      } ],\n      \"resource\" : { },\n      \"id\" : \"50xm\",\n      \"time\" : \"2022-05-23T11:40:28.555669Z\",\n      \"status\" : \"HEALTH_STATUS_UNSPECIFIED\"\n    },\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"kre3\",\n    \"createTime\" : \"2023-03-08T08:46:28.555814Z\",\n    \"displayName\" : \"Eda Koelpin\",\n    \"name\" : \"Laraine Padberg IV\",\n    \"updateTime\" : \"2022-04-12T10:07:28.555989Z\",\n    \"state\" : \"CREATED\",\n    \"principalInfo\" : {\n      \"serviceAccount\" : {\n        \"email\" : \"rwei46b0k8wge11r1odumxh9p572qjqbmgaepyelmreazpllpu7qkwpbanitavwnllkmk3z54wrz07vj53bh7jz97vqc1nf3da19rhhuoi0uc2jwy\"\n      }\n    },\n    \"resourceInfo\" : {\n      \"sub\" : [ {\n        \"sub\" : [ { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"agsz\",\n        \"time\" : \"2022-04-14T08:09:28.556177Z\",\n        \"status\" : \"UNHEALTHY\"\n      }, {\n        \"sub\" : [ { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"o8k0\",\n        \"time\" : \"2023-02-11T10:42:28.556319Z\",\n        \"status\" : \"UNRESPONSIVE\"\n      }, {\n        \"sub\" : [ { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"k1i7\",\n        \"time\" : \"2022-10-13T09:52:28.556462Z\",\n        \"status\" : \"DEGRADED\"\n      }, {\n        \"sub\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"99tx\",\n        \"time\" : \"2022-03-20T11:24:28.556618Z\",\n        \"status\" : \"UNRESPONSIVE\"\n      }, {\n        \"sub\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"h600\",\n        \"time\" : \"2022-04-18T08:29:28.556771Z\",\n        \"status\" : \"UNRESPONSIVE\"\n      }, {\n        \"sub\" : [ { }, { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"8sx6\",\n        \"time\" : \"2023-02-03T10:31:28.556939Z\",\n        \"status\" : \"UNHEALTHY\"\n      }, {\n        \"sub\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"d0h2\",\n        \"time\" : \"2022-06-26T10:28:28.55712Z\",\n        \"status\" : \"HEALTH_STATUS_UNSPECIFIED\"\n      }, {\n        \"sub\" : [ { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"50qa\",\n        \"time\" : \"2023-02-13T11:21:28.557271Z\",\n        \"status\" : \"UNHEALTHY\"\n      } ],\n      \"resource\" : { },\n      \"id\" : \"o319\",\n      \"time\" : \"2022-12-03T11:01:28.557423Z\",\n      \"status\" : \"UNRESPONSIVE\"\n    },\n    \"labels\" : { }\n  } ],\n  \"nextPageToken\" : \"s6nn63h1q9ansvliz3bc24xyq2qe90n9s1x7uxd14z30dcwdrqprpopd82cpxxzmlxgbrzz1vu3f\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "64e26f88-3f14-45c7-9562-ec247b47aaca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:28.557723Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.appConnectors.list",
          "schema" : {
            "description" : "Response message for BeyondCorp.ListAppConnectors.",
            "properties" : {
              "appConnectors" : {
                "description" : "A list of BeyondCorp AppConnectors in the project.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleCloudBeyondcorpAppconnectorsV1AppConnector"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              },
              "unreachable" : {
                "description" : "A list of locations that could not be reached.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "3aa9d5ea-569a-49c1-957d-f4109d301391",
    "name" : "Resolves AppConnections details for a given AppConnector. An internal method cal...",
    "request" : {
      "urlPath" : "/v1/3yeefebcjhbf3xf2c002ryyp742nj3vd1yjim2vs36k3dcejj037gal3wa66rcx99ittusmkmbcr96o7lxaeg39h2nj1c7lebe3kkdwdr1k91vvmi07r5823sr6aysbptefo4nx5z0jn3fh1vpnh5lpyql6u/appConnections:resolve",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"unreachable\" : [ \"a187f9lfvnc9u2r38ijemap965s635p6isjrpodua5jwbxiqur98kztuhucbbi6r61w54nim1bws7lqf5u2le57j1q074eldmiqqdxr8w5gxq2bmiuvxo9rm88p3xxc7g6q98r8ywnv4w4pjwjbr1uq8ys22wrb1e10olx1u8estw3orflznfiram\", \"ruiw2t1uogckmlpqsecezodq4s91vm7l9u6f3ttulg67et4zyjvzf5m8hm53umtocdqrhakgdpd84ymtp6ln63caar0swm942disav9j8fmfzxonryxf48e0orfe9pr8pg635xt4rq7l7debd1ql0bp9zxww17m0zbvyri4zgta4934ped3eq8kqbrh9t8e2uhwui\", \"a6uzb9yec0lw6yetsiq1jz61o5fdeuekq43a90d6949foeh627w7zog2qg6hsp6egmr1r4fs1om1sn4ytfo9s7u6sf916io88r8mafwg3polheehz02e9peakgrlv\", \"glgg6xznm2eaqgqbhws4dzt5e2c4knfu6rjgdaua37l19zxfplj660l9yhjfufh2ohm3tbq6rd9caaz94o0gbqtdqjtno1j3cnh93vauplebisamiubr7hzom17p2too5tl2b6nc0hc9pfbouv16rswejyflif6dvtlxgb\", \"hyreowm9fa6k4zgdlw00dwhaw32425imgfo74z65f84v82ugnf687cjh9f8yf510iti2dk\", \"zxvs412qolxmtcubkvv35d869zmdwvwybbijhdmlivcbl63rr4u\", \"xhbbogxfpzewfhiow9gv7roc0ifvpd0y1tlsz4fvyorqcjjz63dg7rit9h6edgga2dlealry8t9meniyazqstqk6xumxcqnjn9wynjjej\" ],\n  \"nextPageToken\" : \"8aor5uamo3twm1lwl2et2dt3esu8ujyvd0wxt84vss8wdxn87mfffr5ruks59whntwbfnkb424edgli06a3yvmcdlsbfl3aotdj33b7csub6yjz8\",\n  \"appConnectionDetails\" : [ {\n    \"recentMigVms\" : [ \"zcr57ssbgt86c4j9a3jd4fcd5fh5cxl6hvg2xmg1m7ff09tsjzj3yqjfhko1hi6bhdwtxkqbawebsovdv7w521r0qb1rkf20u437wf0rgw5rbwi4br1r9\" ],\n    \"appConnection\" : {\n      \"uid\" : \"65dw\",\n      \"connectors\" : [ \"ena42wz83bvhvwxvo6foraltripxq2ik656q3omoxgvm1i3cdcnbe43b5hyimh14\" ],\n      \"createTime\" : \"2022-04-26T10:39:28.546998Z\",\n      \"applicationEndpoint\" : {\n        \"port\" : 1552337938,\n        \"host\" : \"hutxyfarq3d7um25ltlct6bn1kzy33evjdvgkndyczrhy6pz3jn3mz321478i4sm2g1cy2umvwes0azfrm20po5ctu6i\"\n      },\n      \"displayName\" : \"Dr. Chrissy Bradtke\",\n      \"name\" : \"Raleigh Corkery\",\n      \"updateTime\" : \"2022-08-01T11:28:28.547255Z\",\n      \"state\" : \"DOWN\",\n      \"type\" : \"TCP_PROXY\",\n      \"gateway\" : {\n        \"ingressPort\" : 1528520324,\n        \"appGateway\" : \"4qww5vrffcvmp9izzgkprv5at9ukp0aw6b0uz2hpnrkmn7ntje98xftm10enurdlk3svlyha9vv29f5irh1dg\",\n        \"l7psc\" : \"gse48xmesith7orohq6kvz7qltsw1njhqmmq3xjnij64yyds5p04bnv1ont4k16bdfe9xll43r7nx4mukgayo0hmbrskxpyu9ugsz9h6x7hnlfeuetquvfo1qwhuwf7vu1qekffkq2md1i8vv6joba2\",\n        \"type\" : \"TYPE_UNSPECIFIED\",\n        \"uri\" : \"https://web.example.mocklab.io/046228\"\n      },\n      \"labels\" : { }\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3aa9d5ea-569a-49c1-957d-f4109d301391",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:28.547633Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.appConnections.resolve",
          "schema" : {
            "description" : "Response message for BeyondCorp.ResolveAppConnections.",
            "properties" : {
              "appConnectionDetails" : {
                "description" : "A list of BeyondCorp AppConnections with details in the project.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleCloudBeyondcorpAppconnectionsV1ResolveAppConnectionsResponseAppConnectionDetails"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              },
              "unreachable" : {
                "description" : "A list of locations that could not be reached.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "814bad27-d8b6-4ca5-ba36-e3cbe11e83f4",
    "name" : "Creates a new AppConnection in a given project and location.",
    "request" : {
      "urlPath" : "/v1/yh7g9qe6llp2rk4ors5h9fa2xtyx24kvjndxo185087l8o8yb6964leca866y019sltpsgbgkvicgdbxdarp6ba4tmtc3zjqo4ys2o1e0/appConnections",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Floy Schroeder\",\n  \"error\" : {\n    \"code\" : 1508990593,\n    \"details\" : [ { } ],\n    \"message\" : \"Vitae optio distinctio. Et ut explicabo incidunt laborum nam autem illo. Labore iste et impedit quod. Quia quam voluptates totam numquam vel.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "814bad27-d8b6-4ca5-ba36-e3cbe11e83f4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:28.546719Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.appConnections.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "8b7e44d5-2e02-4865-bb82-e1c2b096ce64",
    "name" : "Lists AppConnections in a given project and location.",
    "request" : {
      "urlPath" : "/v1/k2dsz8l1cx5mnf4v14jjm8h23h2rqu0k35mb76gngaxgx9sgicysnapv1e2qqr16a49jz6nlastlghs9smvl8xznrhzulcd4xe090s20gmldtxd4g592qzbxvv33w60g87eh6gkms4mvzb7wv2ca7px5n3mwayysf0oawmq50vr/appConnections",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"unreachable\" : [ \"r73qgkzz5zf1y7mo2rho92a4mdgqt9\", \"u2mk7qti9uydcqu7xqmoc4i6pkw29dczvqdqe19vrnxsvhk4d3h4mkyq3p4itbhykg9hlug\", \"5za3nh2ryr5\" ],\n  \"nextPageToken\" : \"sqaw8nnz1oldu8cq346pdo542is4632m4zewj0rzccc9bcp861ydt0go7q5ht3rwndr2g5df014d5lcr9k3rcoeymex8tbqhcq\",\n  \"appConnections\" : [ {\n    \"uid\" : \"jo33\",\n    \"connectors\" : [ \"qorbxwdu6kxkx9kicosszyk9og75pj2r6rwei88vr23cuq3f8y42yaorse22i416vi0hstvf6dbu8g3x777bvlj3fbqpi5gcm2tk6yrgzxv0rhd0bqj93a5qk4qvdmu67ufqotr1f3ann8gtiwa0ojse1swojvvfxesgu1zqmvfusxhj4t9ycrnyusird8ov\", \"84i52v71e9yqhz1l9dsb\", \"qpp32\", \"ntytheytrhrdbd83urfl7bq08emvxmlarwb6i5yczw71lppkma9cfrbiaohb00vafffs9w6x0vj4yqwhxnwqzj0knyu7xq0g0me0ssopigueod1ctxzc19s53f13kjmqaaz1d\", \"a1mqkxxllbliffpbtr09au7tvr9pcuq1jtse8latdsepebnaahoxa75\", \"wkxl5wi7z05x9bdfd5eca358ret1nq0rk2sksm4xu1hzetui8nb0xgz1x6h6dwtt3rdp4q67tpe5y07b6ut4dbe6djj2g6gujld57647asq2hld1t5wklo3h5lfad0a7hm0j5qdva2ff4ccun555xli7ihl4ql78osykhbe05o7v9x7sxw6id8eor5is9\", \"et008r0dxjahgb97q0gc3rb3n7qicv6k7ol6lg5tbn8heefola9rgf8afhfsktm9ytw3ff6odw2esgrywaf4ndvv7z6h772taqc0km8s426osboyr1k21jsjkcd4p92lcnf9qrakrjpel\" ],\n    \"createTime\" : \"2022-06-15T08:26:28.543143Z\",\n    \"applicationEndpoint\" : {\n      \"port\" : 561995532,\n      \"host\" : \"o8ckbb7nyfef1jwj3ibt6ocksbkewj1tvy7mpme4v927c4u1hxq7umktznznrzjbhcok5hp6509t1pax0uu7in3t0dyfojda\"\n    },\n    \"displayName\" : \"Vinita Daugherty\",\n    \"name\" : \"Cathryn Corwin IV\",\n    \"updateTime\" : \"2022-05-25T11:07:28.543357Z\",\n    \"state\" : \"CREATING\",\n    \"type\" : \"TCP_PROXY\",\n    \"gateway\" : {\n      \"ingressPort\" : 2076480204,\n      \"appGateway\" : \"vev1pulisol8oj971n74ku1p6vopc0t0mwi6ct1nig6w3sbp6dqupxvdkt7mpmth90lh4nbexwp2icd6fcu8a2igks6v3xmkf6neesvwkkcfwoib7v7xjkldnxzxib0gpjl97fa80jxbq423s3ni0nsl1cw32rs1z6slqqbu9qyyug2evbprhfo6e0r74\",\n      \"l7psc\" : \"zfwzmto1gpm7vamf9li1yyw3ubbpmsgugr6lim580gs3ec2vwqvhtppyf1qy9ytf91okx0sywxoa5op8fmblami1fb8s78q315ih4psxkx6oehinkya045alt22z39zekmek7rkolgk0zf8gfmzswyk89ybm31l4mx11\",\n      \"type\" : \"GCP_REGIONAL_MIG\",\n      \"uri\" : \"https://web.example.mocklab.io/079235\"\n    },\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"ey59\",\n    \"connectors\" : [ \"hk647mxh32whx5s2p4ux18gyouwhrjwrvp0cw9lv9jmwggli3jz4hg9zg7c348g3jclv3qjwgxkr8b8gsjxpishuwdusgewrf5yj\", \"lxtj8l1olnk6oohyc6yf82bet0vm0k8i2thcs3beshusnu1x3vhldi3skdhq4t80kzb0fucdrvwouh5vy74o3xadj4gshvy6p7of8y15wkl4v2z650ofliupnodrsgfozt9vk\", \"mb928w69hcqsfjodk4yk6rnm1qpi184pa2a5p23iwu00p5tufllculf57zufl29re26q6teu5qaoc9see5g45aqgt0nio2sjxweyuyr2cl6rccbr4pitlkywf1yyye8uwmmp31mw\", \"d9x7mto8a5wgdaeheub0trd10e4xkj39r0yj55zuen4w6dzzu05sz6g0on6qnwj2a2v44s\", \"30116vdmuob8a0wr482ya36uj8q0p8q4fx9boe21u6o8cx4pozaglcr3ixdc6c0lwyul46nxgbfpycoga0okct8rcmgsyk0p89mgn0u\", \"jgdvb91isguueniu1yi712cxghnbtz2uuxa5j96skahocvz37s5lnkvqcasq6exg5h4bzudga3a9w026vakzv1me8cmzaa2usrg00wt2kwqmuklg2t2v21ah74166ngcv0q7pzw48odk91bobx83jplc52\", \"pmcs42ys8cf0erz45yfp7g2syz9gju50lr910a6183qqccqx3o1i1wbhtpr849fpivyz1uj8tmzs4rl2b2udya1vmwbuw81jvl6gea59oz8w1n6zao3ruaqesgy4kyazh4eudkmyl7e1p8crw6juddtxl1\" ],\n    \"createTime\" : \"2022-08-22T11:27:28.543736Z\",\n    \"applicationEndpoint\" : {\n      \"port\" : 937288700,\n      \"host\" : \"lpruws0i9n8hhj46af7xvync6vflpxv6a50korrem90e3oc2eo4l1zldmmac3rtj3wzz5u5shej5tch1uy9w9c11diawn76xq9zfkq0wmmly4kq79jpqm5nxlj6w2c90pc4pwm\"\n    },\n    \"displayName\" : \"Rolland Heathcote\",\n    \"name\" : \"Zachary Kling\",\n    \"updateTime\" : \"2022-09-01T10:11:28.543924Z\",\n    \"state\" : \"DELETING\",\n    \"type\" : \"TYPE_UNSPECIFIED\",\n    \"gateway\" : {\n      \"ingressPort\" : 2117524881,\n      \"appGateway\" : \"2ai68qscjzchjcgvknhf7bxho9a9pjdk8957krnmeojqrifpfucz473n13h33i2tl8\",\n      \"l7psc\" : \"38kf11ce7yponjeyreo9f3i96fgk9s52q30gr7dw16m9cu4g9elf\",\n      \"type\" : \"TYPE_UNSPECIFIED\",\n      \"uri\" : \"https://web.example.mocklab.io/839880\"\n    },\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"pvgp\",\n    \"connectors\" : [ \"5me8xzlbuxaenzmrndh2pfqjwxlms07ej5ksnsoh1lafea51jcmlm9xnxvucbcjsx1aewlvfor4vvfvok7mfqtvhceizynbajnkmi5cqgv468lzhj1lm70k16heufxzbw7oobmuxgqprio0zmziodg7wpd\", \"c6g7cnm1bnoc5nm2ak4e6xb8hk5e8jydf3ac4c4fpt90ijb6elp60i8bhuiz5c7og5elwv4xhokasqxflc5t4\", \"8mfpabev11m2lopwxd6m39f4evc47b55us00t9lmftr0\" ],\n    \"createTime\" : \"2023-02-18T11:12:28.544231Z\",\n    \"applicationEndpoint\" : {\n      \"port\" : 124933158,\n      \"host\" : \"qwzab0no8k58ea7ctzat7cdwcapupfuxypk06et2\"\n    },\n    \"displayName\" : \"Gale Ullrich\",\n    \"name\" : \"Harvey Gusikowski DDS\",\n    \"updateTime\" : \"2022-09-16T11:17:28.544444Z\",\n    \"state\" : \"DELETING\",\n    \"type\" : \"TCP_PROXY\",\n    \"gateway\" : {\n      \"ingressPort\" : 2137793249,\n      \"appGateway\" : \"0debvwt549u4zeghecz55hitta6bovry9gxwhdt8y8qg43r6qi3nmecptgsd5lu9a6a4tl1r8mwxr4izzc1i21vsifqxfqfi8ivjmvofhrzas1aa0z6nw86gsrowx8qf9cdng126un4cjaaeex5uysv3w015q8kb0471yhb1mjj6c22r0lwaztm42ve\",\n      \"l7psc\" : \"mokvzfbfdv8qt9pa4qab75ltoonb8ctqnr3s4yeu4eg6aov3puefqocf8uj1u7g2sfrouqprrc2ptlpcvqabg2kl20g58ia8wrvyubobhnvfv0o0m4xnqk6fu9dmqqfkb8tpytu6w4hn8ijotlv0b82rcfikaqylwy5jxpgjyzqnmhbzels8boj2go3ylfof8ldfoyam\",\n      \"type\" : \"TYPE_UNSPECIFIED\",\n      \"uri\" : \"https://web.example.mocklab.io/554000\"\n    },\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"l6m3\",\n    \"connectors\" : [ \"g1xk4drp4xhtma4g1e4lx841ux0kz9oqwbt19n9e2ycnrn28psoe4faxsgspnm2p\", \"r0vp6mk3uv1pecbmfzzvhu2ekrpfwb3jrk2q151fagx4uow3y8zpthsxacuccg159jvcaf6d4183cig7knfwsnzvlr5kd9tb1mry939pkrjs5s9ud33xs63e85dif0nsx5h79x707iaqkl\", \"ycgo2y7ivq3o65pektc9xrg9isuvohk46hd7ct6c5zgzgq6k9\" ],\n    \"createTime\" : \"2023-01-19T08:14:28.544752Z\",\n    \"applicationEndpoint\" : {\n      \"port\" : 1007056808,\n      \"host\" : \"q4qclvquuzcppamd1cq2y62bsarerfcf4uz\"\n    },\n    \"displayName\" : \"Lorette MacGyver DVM\",\n    \"name\" : \"Dr. Tyler Nicolas\",\n    \"updateTime\" : \"2022-10-27T10:29:28.54495Z\",\n    \"state\" : \"UPDATING\",\n    \"type\" : \"TYPE_UNSPECIFIED\",\n    \"gateway\" : {\n      \"ingressPort\" : 755861097,\n      \"appGateway\" : \"gguxvu5u4oxljwn5sca981fopvek79jzxpnxyb2zdx9w0epdp5njwvrl6e9qr0fc0z93lu2tpa86x40h1q0hrh1uqdxkm9qnnfxyk0fl316dzxjf5nsqv8lvymlq08ji4emuudznj49zlq8gnwn2p4j3rrlpokvyiyhrg8nj15vwsftw9\",\n      \"l7psc\" : \"nkmogl0loaow7alc9ehl40u0711044hemfpmms1to17sbtgr5rxvc5f\",\n      \"type\" : \"TYPE_UNSPECIFIED\",\n      \"uri\" : \"https://web.example.mocklab.io/910784\"\n    },\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"4189\",\n    \"connectors\" : [ \"513wknddcwno6ik7xctmyejskbewi0is2m7j2s3lgrjxromsicnhqvm60qgwznkz0jx9lrlpo0\", \"sj6ffxldf1hhnj1d8xjo6lbm0hklpet6a7a94\", \"0k52zxvapdjlin83tmz2lsr9eekscrjrfy648ig0p63ut205atl3usq6cvlecbfmso55ae1two6nagnhu2mqyf24fm78s4e6d\", \"iqb2vdjehk8xwl9h9972yg8by0q6laxqa7uni6l5n05admwf8bier5gtl96rfn0ciwuwjfbd50lxlgg2xadlovlfrw38ymymt78h5kt53woxwmtck3r2dn8cv605u13coyw72lb3pwt\", \"w0nr499ywdju4unqhla28qeqzvsgj32aun9v7zjshw4dgzjh4e0vtmyyrzvs0lvxzlzycp2826fq0b6ol6wgyj63\", \"kp4ai1g3ybz61ef9zdhmb3k9iqhjqfuahu1d07cbnogwfn3n7c04ud5pd6rpibdtydmzp4fxtcmmjgr0x8g6xvmejjjg4ditnaz68h4df\", \"2sk0pk9jmm2puyyand5vtc25qg6m429xvhtlmzmyipq7uv64j0i1omncn3y9loaisjf1r5xvj4fjbcluxlqdh95c94u77ks6s1mmthujxtbdhgnsp0tssk65jln43unrsjl86o0e8bhrx8jq2izx98m7sijdf5l6s13mduwnjz5wx063h10thh\" ],\n    \"createTime\" : \"2022-08-28T09:58:28.545283Z\",\n    \"applicationEndpoint\" : {\n      \"port\" : 323285576,\n      \"host\" : \"akjvr14w4z0r2yoleu3clludsxn07krpge3u7hyfooe89gsxf19k0w493qyungpb1jx8qw1u2ozowt6iakopfvw7cluulq08zpdtvw0442zhil1gbf3czzfixczdgxh705kpzskqsn2urobq99ab0ft3ww111int5b8hppwjkfoiw7tlyg9zof\"\n    },\n    \"displayName\" : \"Agnes Frami MD\",\n    \"name\" : \"Jannet Rice II\",\n    \"updateTime\" : \"2022-06-10T08:59:28.545501Z\",\n    \"state\" : \"CREATED\",\n    \"type\" : \"TYPE_UNSPECIFIED\",\n    \"gateway\" : {\n      \"ingressPort\" : 263449864,\n      \"appGateway\" : \"od74q45aasmnwh6jta4d1w9xk4hgnqyk\",\n      \"l7psc\" : \"6d9nyx7595pl04rd6wq2cf09h2vdnshi9g83apk4qo8ebxq7unw3kcsum0jt9f2ybb\",\n      \"type\" : \"TYPE_UNSPECIFIED\",\n      \"uri\" : \"https://web.example.mocklab.io/296681\"\n    },\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"cm2u\",\n    \"connectors\" : [ \"grx96cqcbq6t7oidvopz38hh\", \"6e7v7ke225hxqgp9grt588zssfbam70sr4xfesldhpn6g3lq1nk95butq74\", \"6fc86351n5ytxkqt64fqj06b8auivz9634zfk7tcbzpajb1d2f60fc8eiufg7hlvntfmr0u5nlvsc6mfz3gszmct1sy8zycs6h8d9s2avc7p5aoku4mgr6\", \"ff6i38odo4411ew1m5wl\", \"um615vura25g6wg9\", \"y02fireyyc592cwpmwuu6s3amcgkf\", \"30lgz8ddlsyiycqg9boqml9i6wd5su4nt6l9u0lgim1z66u10ydcscuek66y8pmjyjpecmdemxalfeblou8wg2fisvfy284certydau5a4bn3utjx76mkwplxdqkvxwdgqgu9zw56cdmow1p2y1o6ee40e54txdou9cl1uls1v5hywn1slqdtb6ktpu\", \"1fgbxtig7dw1z8g05d3asdwxc2tk2lzzmwyoary5u0b5wicrqbvoqdx2578x8tf6kxpwae2m3rng2696h3q7tvscrimf7dhrbi06151jmvxnwmua3xnblw9fkvp4xfyfehpwfkcyaz5ivss6g0gjbmyg1zvmxoycqly0p7ax9k3gpi6m0lvodqme\" ],\n    \"createTime\" : \"2022-05-16T09:47:28.545836Z\",\n    \"applicationEndpoint\" : {\n      \"port\" : 329475305,\n      \"host\" : \"on9ltxgkepu7xg2lar9wbo5i7b1d570v6gf16te0oorwot2qe1lkjjbvvl4gri8fgntihs1r\"\n    },\n    \"displayName\" : \"Miss Jarod Ruecker\",\n    \"name\" : \"Regan Doyle\",\n    \"updateTime\" : \"2022-07-31T10:48:28.546045Z\",\n    \"state\" : \"UPDATING\",\n    \"type\" : \"TYPE_UNSPECIFIED\",\n    \"gateway\" : {\n      \"ingressPort\" : 1193994569,\n      \"appGateway\" : \"rvoce3e556af0o0xm2qylzdz0s8licl9wgsdn7ipjmeu1zcgcv3q0i5\",\n      \"l7psc\" : \"hxxdrl2lfdciz44su8eif8nr6if25297o3ylrqx1dum5273afvbpvfasyatqcl8sgfs87gmk0xlzv7b8q2fg4wxzo7nfv77xqdmoi5zk7cqwwzl9dclnrfi9xccwgs2t4cpiyzx069dnup5uaqxpsom\",\n      \"type\" : \"GCP_REGIONAL_MIG\",\n      \"uri\" : \"https://web.example.mocklab.io/543863\"\n    },\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8b7e44d5-2e02-4865-bb82-e1c2b096ce64",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:28.546399Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.appConnections.list",
          "schema" : {
            "description" : "Response message for BeyondCorp.ListAppConnections.",
            "properties" : {
              "appConnections" : {
                "description" : "A list of BeyondCorp AppConnections in the project.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleCloudBeyondcorpAppconnectionsV1AppConnection"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              },
              "unreachable" : {
                "description" : "A list of locations that could not be reached.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "35cd792d-8f05-4f7e-b2d3-e488ec7d0f5d",
    "name" : "Starts asynchronous cancellation on a long-running operation. The server makes a...",
    "request" : {
      "urlPath" : "/v1/Ms.+Darnell+Reichert:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "35cd792d-8f05-4f7e-b2d3-e488ec7d0f5d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:28.542904Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.operations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "3e31d391-6af0-47a3-889e-4fe91caa4e85",
    "name" : "Lists operations that match the specified filter in the request. If the server d...",
    "request" : {
      "urlPath" : "/v1/Mrs.+Carey+Johnson/operations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Jonathon Medhurst\",\n    \"error\" : {\n      \"code\" : 1960869247,\n      \"details\" : [ { } ],\n      \"message\" : \"Rerum esse et molestiae. Et ut sed. Dignissimos laboriosam nobis magni quos facere molestiae qui.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Ms. Kim Howe\",\n    \"error\" : {\n      \"code\" : 1093305663,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Praesentium laboriosam doloremque iste cum. Enim rerum explicabo. Velit labore quia numquam. Laudantium quibusdam ea reprehenderit. Et omnis ducimus blanditiis voluptas consequatur porro.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Nathanael Kulas\",\n    \"error\" : {\n      \"code\" : 1425959249,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Et sunt et. Et eius accusantium accusamus et qui sed repellendus. Nostrum qui adipisci et. Consectetur cupiditate debitis.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Ms. Yuki Schowalter\",\n    \"error\" : {\n      \"code\" : 2041592489,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Odit id quibusdam accusamus aspernatur quisquam quis. Quis fugit quas. Sint et et recusandae quam.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Mr. Daren Thompson\",\n    \"error\" : {\n      \"code\" : 735473228,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Quas omnis animi. Ex voluptatem error assumenda nesciunt atque ab labore. Est reiciendis eveniet. Corrupti placeat suscipit ipsum voluptas. Sunt iure voluptatem.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Camie Bauch\",\n    \"error\" : {\n      \"code\" : 1218827346,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Est provident natus sequi. Ut vel aut ipsa. Alias asperiores saepe.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Miss Hollis Zulauf\",\n    \"error\" : {\n      \"code\" : 516092385,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Et quisquam non qui odit facilis et. Quia nesciunt quia. Praesentium distinctio libero placeat adipisci ut velit eum. Quos tempore sint aperiam cumque commodi molestiae dolorem.\"\n    },\n    \"done\" : false\n  } ],\n  \"nextPageToken\" : \"c67qwr4uika4hedl2k2pon9j6mldp3inqr1jnm1npid85jcuwjg89xcabdx29ajl5p9f41uijkkn0tnupfc57y08o90w9dy7y650783ccwrlzpb36q55pim9p3k87fgcg5o1hhv004m39nwan5a6r8518yjtqh8yditf9u\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3e31d391-6af0-47a3-889e-4fe91caa4e85",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:28.542794Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleLongrunningOperation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "324917b3-f0ed-4a66-adac-6434ba7b407a",
    "name" : "Lists information about the supported locations for this service.",
    "request" : {
      "urlPath" : "/v1/Lawrence+Doyle/locations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"w79ph14jr93zixsij9znrt62vfp6c480yq4q1qky8b8epgp2iddtqte315qrixpxjh6t3mp4svy7kurimso5p24a8n5gqr5hax4owdxh3oo62hj6ay5kdcsnpkb5084jga18cvama3zal5freibbu075eqbngnjjwn1afhne3n25vo8oqt\",\n  \"locations\" : [ {\n    \"metadata\" : { },\n    \"displayName\" : \"Sid Hodkiewicz\",\n    \"locationId\" : \"59n5\",\n    \"name\" : \"Will Hodkiewicz\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Page Champlin\",\n    \"locationId\" : \"vq0a\",\n    \"name\" : \"Zoe Lang\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Miss Logan Jaskolski\",\n    \"locationId\" : \"09a8\",\n    \"name\" : \"Dr. Harris Kris\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Mrs. Christoper Roberts\",\n    \"locationId\" : \"bm6a\",\n    \"name\" : \"Numbers Pfeffer\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "324917b3-f0ed-4a66-adac-6434ba7b407a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:28.541391Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.list",
          "schema" : {
            "description" : "The response message for Locations.ListLocations.",
            "properties" : {
              "locations" : {
                "description" : "A list of locations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleCloudLocationLocation"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "e1d47312-b01d-49da-b15d-f5657d3e51b1",
    "name" : "Updates the parameters of a single ClientConnectorService.",
    "request" : {
      "urlPath" : "/v1/Lincoln+Hermiston",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Dorian Turner\",\n  \"error\" : {\n    \"code\" : 692331453,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Architecto similique dolore esse. Et numquam aut et. Aut eos inventore.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e1d47312-b01d-49da-b15d-f5657d3e51b1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:28.540199Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.clientConnectorServices.patch",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "e3d4f1c0-be72-4598-87d7-242bffd88a9f",
    "name" : "Gets the latest state of a long-running operation. Clients can use this method t...",
    "request" : {
      "urlPath" : "/v1/Le+Cronin",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Michale Kris\",\n  \"error\" : {\n    \"code\" : 1476050630,\n    \"details\" : [ { }, { } ],\n    \"message\" : \"Est laboriosam rerum impedit magnam sit. Mollitia nesciunt natus et ea quia itaque. Numquam laudantium qui vero qui officiis sed dolores. Nostrum totam aspernatur et sed. Delectus quisquam beatae sed \"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e3d4f1c0-be72-4598-87d7-242bffd88a9f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:28.5399Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.operations.get",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "4027443c-7cad-4e14-8135-1959dcfd7b40",
    "name" : "Deletes a long-running operation. This method indicates that the client is no lo...",
    "request" : {
      "urlPath" : "/v1/Margo+Oberbrunner+Sr.",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4027443c-7cad-4e14-8135-1959dcfd7b40",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:28.539534Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.operations.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "920d8fc0-f09f-4d84-8102-aca8ff435ecb",
    "name" : "Gets instance configuration for a given AppConnector. An internal method called ...",
    "request" : {
      "urlPath" : "/v1/y49361dcvyh2nxy8rsamxtwalztglpsd65mezpo1pajke1iobzfy933ojo8ymiobzfo8az1t0v4oaooblvfcefejgvnhu4ywn008842sfm66vadmh6m1uy4fnmt6dl32zdojegyu0le0hdtk6:resolveInstanceConfig",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"instanceConfig\" : {\n    \"sequenceNumber\" : \"784xqq9cmf4t3mztmwz7prbz6xz9eswvam93gvdpoigtxd7ewddecx8u17pq8x87bnc9ynnbtp9hsc\",\n    \"instanceConfig\" : { },\n    \"notificationConfig\" : {\n      \"pubsubNotification\" : {\n        \"pubsubSubscription\" : \"oskxij5zlf2gi3okydyebwccum3xpmpez80n0mudv7ndu2em0dbkvbqtd5ahdxkjmdvefblqvynh2ykel4sdip4nj09qpzp26bvz4hz792vrbqhapyk6577cizt61j\"\n      }\n    },\n    \"imageConfig\" : {\n      \"stableImage\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/juamperro/128.jpg\",\n      \"targetImage\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/xilantra/128.jpg\"\n    }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "920d8fc0-f09f-4d84-8102-aca8ff435ecb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:28.539405Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.appConnectors.resolveInstanceConfig",
          "schema" : {
            "description" : "Response message for BeyondCorp.ResolveInstanceConfig.",
            "properties" : {
              "instanceConfig" : {
                "$ref" : "#/components/schemas/GoogleCloudBeyondcorpAppconnectorsV1AppConnectorInstanceConfig"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "df721eaa-c239-4225-9fa2-ac2f7c91ca84",
    "name" : "Report status for a given connector.",
    "request" : {
      "urlPath" : "/v1/o3pokaweavb92d8r6buo7nhpkevhmses3qgvs4uel1y:reportStatus",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Berta Windler\",\n  \"error\" : {\n    \"code\" : 1675358026,\n    \"details\" : [ { }, { }, { }, { } ],\n    \"message\" : \"Omnis ipsa dolor. Est exercitationem ut. Nesciunt consequatur quo beatae dolorem quas amet cum.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "df721eaa-c239-4225-9fa2-ac2f7c91ca84",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:28.539139Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.appConnectors.reportStatus",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 21
  } ]
}