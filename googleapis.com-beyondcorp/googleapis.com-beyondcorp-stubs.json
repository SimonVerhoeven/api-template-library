{
  "mappings" : [ {
    "id" : "4929145a-a639-4940-af90-d5df310a43f8",
    "name" : "Returns permissions that a caller has on the specified resource. If the resource...",
    "request" : {
      "urlPath" : "/v1/viavs9htu9lfpih9pvandyo2etknxt2eyy4p0ry3j4a4h64zemqnredj59v5km6yqx34r685i204ps56yxoaix9elnqbc7xc8a7ozqwmf1tpfd01iee51gh2xfphilu9bv76do5ajzrhxkihi8ay8a8wu9f0:testIamPermissions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"permissions\" : [ \"l5ckmt72kzf9ao361lk011mxtzswc6jtzw77z1cav3nyngu03a88vaejif2sn25fkls2ol8kq1geo0\", \"ikx80wxw9wnkz63dab3r3jpzvaf103bam25j2i5tyu9807w3qo7eo50sy4ug114af65ij1ta7ic6q4am6bk7qc6e2auy8qzh368jb61vzbsmnh5qm1igtg6yvgilopqqdyrox21zi640snxq3d2vhicfdxwv7m8uls1\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4929145a-a639-4940-af90-d5df310a43f8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.389661Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.clientGateways.testIamPermissions",
          "schema" : {
            "description" : "Response message for `TestIamPermissions` method.",
            "properties" : {
              "permissions" : {
                "description" : "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "9cd41373-b52f-4835-b8b9-f0c3cfcddab4",
    "name" : "Sets the access control policy on the specified resource. Replaces any existing ...",
    "request" : {
      "urlPath" : "/v1/il8dnj9120mm5efbd93k7of9q9rpfbepj6h2migckc8pm1tjndzhr58dii1eizy9n5lkcanm7ai7r3yn2dvhdph6g8jginz:setIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"e63z57v62zc0p4scttecdads19g0ve0jxcie5dggowgsfxym0myrk2ptr8266pe4xt9m44kfjuk6j6p9dtsy6x73hle9f5fqluz095xis38igqph5xfcali0to4glxbqhe5opglxlyp6ih1uqqkuowo6wiks27th5yltf5gd0wqvni7tppl4ls3vrynti9qw8\",\n      \"description\" : \"Maiores ratione tempore quo ducimus. Facere perferendis ipsam doloribus qui nam. Natus voluptatem voluptatem. Vero aperiam neque velit ad sequi.\",\n      \"location\" : \"ksg8nq4356eokm8ld9s31enplp67qo1r465hqa8q0s0jt8en4qnwxbuksqwsvxg6ybq3x2fzlifpvsgsudzo4rugpep889i2y0vldqpa6s0xn960w9uzx\",\n      \"title\" : \"Quas rerum quis magni occaecati.\"\n    },\n    \"role\" : \"wwncjsrhuwb86i6g2tgncfkl3wf7p3bhw8go0zj0c59uesmyi6b1rfr6pcpjvpjvxyqi63mdzpaoskqi9b5hxzuzztrpdcriajyjtbqn44mmnjw511rtye4vjgxgjrp93mzcold6mswkt3e1srdmdg7vbh0qhuj1w9mbg5prl75q\",\n    \"members\" : [ \"vrnisyfhnbkxnhl\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"quk5fqwle2zpnqosa9lr\",\n      \"description\" : \"Eligendi quis commodi ipsam quo est. Nihil quis vero non quo sed maiores ratione. Fugiat ducimus commodi molestias ullam provident qui.\",\n      \"location\" : \"r4fmfunehr090led6encfkkdicx3ne8q4ppj9bgae4xbf4ou474csaxrpjqeqejfvbwmq3rz70nz3tkwmfhzfud49szl7lt4avrnfkaxca3v77i\",\n      \"title\" : \"Et voluptatum dolores aut molestias expedita et.\"\n    },\n    \"role\" : \"1q3dt4qtj9frmbtyt3aaaqmpy25e6s8hg66p485q2o507ycuwnx822ymbacde74k3bc9elpsecrd6y6ec6si6dv1qsi9pyou1kq0duflu6ainxamp6xz9a0poejxakqzy9762sbiy8pw80agbw04s9cwseymrq9u3l480a9rfw8mjlpqn57r\",\n    \"members\" : [ \"ih3t1ufjyqcxkfc3po509s3my81ehleb0vc9e5k3fsq29vimo2sl9gg7g37pjmoandqxh1rh211gtiodqe6dtjj6gy9becrc5l1ass67q3yzpnrffqy4m5qzoxeh0htisp8rknbd7n4opf9vxssgcnuw74ytzsxcvnno8kzd\", \"p55ho264vgaxzpcjisbkt0ghq29ka0ma1bu2tpa8e8d8v8gjbkl42dwt2iynznm93t\", \"bfus9lroegeiwhpayznfgeodgdoaz2wx84e328k10xsk5qn09j0v5vwt70d9ui8nq68qb85itf5qztu400dlw3j8jfb8p1jtmpwt\", \"1s3z1xzf2i5kp53hz2q5ync69qsl0ja5r6s4dlljhmhxa7uaxoy3nat65zi8ohxqlodk8xhjbcl72nvt3n3egshbfb2\", \"k8dan8mfjctovghf05d9e32itby2y2zghfk9jd8l0msr34j6ms24ppn6cnjbx24g57g9m1c5ysxznkckqlierofc6dkj4vlu1e95m0lt94b8pjbnn0t66saznn6zuu7mx\" ]\n  } ],\n  \"etag\" : \"ducimus\",\n  \"version\" : 967071190,\n  \"auditConfigs\" : [ {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"mqr1tjqdrhpscm6a79acw0xcksyomnnhguntv7amgzye1hcnfuzcetxfzubvtr8lollun9wz57vanr1nd7sjgly9zttxdtdxzxic3x42220z8og1uri1omhaxtdr0bnehmmet787nvtv3hhdlbhtwjcill0gcyhb9t9hgovonn\", \"umcysqcum5pknt\", \"n4qii2ws044cztmidrugro8vx2c3zp4673db9b77onyabf2q5p2sdut\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"u00yvf55mm2fev39obg6vcpp856xwbf7frpoqzchx1hfmossmx30xtb0aynfhj6rgmzjh1xnqepcoknziitwmj48y2octh7t5aaes7ztzrkzv52topi7pd899u650lgpdtae8\", \"qf5tdusw20vo6buzbavcr28wbossi1xnergec483ysgaf0vi0e9w61cxhzi32qenxsjyep827bvmk6x3eqyru2ug5fnjdyf9brj3p361slryydy1th13oegpcjcz3hpnlcvhnhlp9p9dx5gousfm03\", \"xp2ahsd8dh5eeorrm52tjfcyco6y5iwseflb5qe1j9pjm0y018580p8miqxhhevk9omddotf71gxz8jforydzorf9xuzfcsfszb6sphqxx4gkpfrx80ofs6gbahgr0ol1hfgi67pp9oclpalq5bl0icjh5rt62ake\", \"cz1eevkentnajcfhfa1avfkhklwli9t5y8dm33ft7dhzoehp1p4ebsggms0ux\", \"rpcaj0h40eein0qd6xzw8fhdz8sd8tojty9hnw9a1nc8lffu4zaitdxmn1ictpsgcm72zp4yili9dtz591pw1ukyfk0dldhun8jj879316qyb8ungszkwrj9uw7s1x6dv11u9brupesg22jflol8xaq80emldpt4mocgw3w26r9h\", \"y16x5u71okbqnu8gdorqg4rhqfefl609drjiz1go6bqcukfig9pvl00ssen8z7d5yxq0mzrrp1pdrqntn6i7k62tiwtdhso9npmrzxg\", \"48rzmx6780zwjiowv8w7zsqvms8460hvldzhl43190yv2igdsnkvpo0ok5pbwyfsw4hpvhjto4p9kohotnmwn20s6wbd707m89j8uar2vn4atze1empalvs7qw4zjym4m1ch9fao85r3xgsgiyk3cyrk2xjnsfkt6ab8dm4e\", \"45hnrcv4yrk29hehdbnplwmey6qn37j9pvyqjqpd6uodwfuhrjgjx6htq3zt5ymt84snkd1r29ofdr6o88zbzv7r6aofi8nsdix8l9vfgpa6b0lydjsrsmbhf\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"ns2gmov9bo51r6fnw1x9v78qabun495gd73esocejzbr1echwsj62ij2aqdov2gn0w6z8j82bnhji5pu3mhwo96f6oqzzoow56cgijgkkv63ij9fy0c1b\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"tm29hvp8hjh02f2fxevx9xdoezw5s7d91i35ki4kv87a0joekmby40fziskp4ns0kanwh5dz5q9l8gtjgoto85d04sar6jgmb77iv90nv5offf48ic83a9mbzj6n82l7wfekgahqmyzehzrhli8g57zwih19a8uzt851h78l9vu1910842ya7kxyq66e9ikh5cb59\", \"7n20gh35927c2rltznengu6dflce0hnxde1n5698oit1k53qlx8vkzbdeohaphdd1wvy0h22okyfl5mybwrlzd6161ru77ijhh0glerajdjixh1ugl6derhepwvpuygi83vfwyqsw4gu8p3lwgijt9i71j5zuj0qrs\", \"0vu5r1xy8m8dhsolka2od1iveag7g1jq4z7qzgtx6w62awokrf1epk2jsshntdwiaatxnonooj2nz73a6ekfmzb2rgi1ghiavm5uavv0p2xnsy6pyzilbnsz7og88ne9exbqg0l86rvud0vp2ewzqvpc5qvsra3c4db384ydyg0hqxkre7rxqzieps32wnhe14gns\", \"drvdibn4x07cb6ottl3oi5722uedimzde0jlonnqyjul91w4tgvt88l3xxjbvdlsrszhfjgizrq1qpz722ssh73lij2g0jrhesmv3cwb5oaadaar5mm\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"4lwchetdbyjzvrr\", \"ao92lywee2zlgol45qqhfs\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"1825wusw1\", \"es4ap4ulclh1wwgvw15efvtkxdh91pfeic6tq\", \"i4wopkencugujg166ssd2f4ixll2acmtsw6sa39jhdm7v4pt7jufv5z5h55q3dy9pcfv0o3w2kgfx32i3sur6jalkgfj2ex8fqrfqfxtgkmukh0lwa800swcjiv1epfi99ix9wnu8ctfgeac35e0paroo6lj09rg32wo8r50wtcnmpik0iq0w34jd\" ]\n    } ],\n    \"service\" : \"obtxhx99zqj0ehrb1o8kvxd25l0a3dxbjv2qru4sc360vudsxxfgjk6zrht8murtfi\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"0o2aj3h2\", \"hgax52iggrrm5dtfp8a3kp2xstcbi2izj7hdksxc681xd26g08yeyu8sd8jxtj87b5hcfpzlflp4bcruzc6zwkvyf4xi7xlzmt1gsxpl8lacjhs0mkcucb72ntmexyv6bb5a931dfgl8t61s\", \"4s0juhytoka95cy4a6m41a1e2phwlemgp4arf0jamasbjytg3ylcsbmf9eot2kjyjenhhju3jn5b8p19\", \"eipa0k3pdd4p8djglobbnlsn16hs7stnq0p\", \"6yisesdy809b943ihev855yii20lqels04o0f3odmfn4yp6d58ow3yk1kghxwfkgj00pqjbtsl1cunq143igk2gran5v\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"vdyzwymvkb1o5ttnxsrc0tp40skehp2y8b92j14na4jw2ize2u9slcfqr0x63r5yqjaptp7ozwgxqnowsgmbd5toyte5ex1z7fk82gd4r6b3umnid0in7srmbygy3ldyi1zixzsmx2xt9xeeml\", \"50bkndtlny77j8koizz6fl981g46yaayrl3xrlwa0ditfzv17no0mik6na1y3ep0718eoj9u4b\", \"wnux1yuuvvtu3zoa9znaqmh8f5t2dovyuykwi2w83aazvsvabkt9ywbuk4y4xb67qeysxs7qey0d3mchyn17q044y2dfigougekl0i2vtg6lu4td1uu0n9u1qlri1vq\", \"b381vpjhr3cn9erucuebg8r\", \"lit0db7vkqm0ut1dj53vqrdozforxfhzl4ev4oxtlwjp20lt5qnncoz7yvqjxhu9dyvpfe8532vlc25jpg\", \"anybjoluf3ffdmkowfl8lct08emanvhnkrm5y6ptet0vp2y3ihuh7dyskpd4ilcivxclo8cs5lh48fjn8so6ltx3xw9s7fllklqknnf0i9efveimxivn3oppb98ttghc7nvix795msorhzl2jlruqtf\" ]\n    } ],\n    \"service\" : \"4w6gzp650djy7z02929rs2rzpw0yeb9yiox5eee4atzo9upd3jr4532jms99gyus9lity9k6j6ecdyzyg5hi8wjd8n\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"bcygedvmoerk4o1f9ofazxg7mghchouwt8mxprbvy7cer605atnmz6hbrdrc53731gkuu8yme44d93jma4k9mn\", \"h6spkc87ggzcukw9dbn3ncy67cs0hn4n7jnbn5u\", \"g1q9b1kvp17mlu1e9sebpopm8ihfudjidwx5ds5\", \"gi3gwgt0c3ic34nuntecx6s7tbk4nm044hawjt7z7eoshg2rk\", \"7t8q6dcl8vscmp\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"97yxt3gz9nw2y6j9h63fyif9zf8epb6dlxq88sb4t6diodq5svmxurd4q4gb4tq\", \"mtfi9x2beoxeujfg0z4xo7al4mcr0dy1kd49yalbulx8qsqndfgzvaok4ej2iys1r0br44v9vx7x7qtw1hft9k6qwo9n430pq5sgv4ytm5ffjnqckva1t9ssif16ap09hh2f247qxlecw6rv92kldmi18ktjsieicsqu2\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"ubeqprojmnz721zdt27itw57dtt5nb1605b1a2v25l1ozarcl1k\", \"gf7z6dkiy3etwffnxh7bh1wn7w49gvk5ier5cjdp3528b43fr9i9k3jrtqkbtmv4a4b1t5bfacn5979752p33gmt7ivl22y3jhgq3yfy0j68vllsuw2wdw3g29vyk6xolh60fn8v16bmnd0i3nacgo0ld1u4cbs7p89jdiap8chtvvx1ceov7b1cl\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"irgrf581wr2cijdakffrhq2h7jq8hojm2o2zf2lpiqgxaroxcneb4yfkpl3j5oshk4zkovrgk1uanr4pto17w8vwfq6fwyhihr7g6fy21l3mesrg6ai00satbxfkojyovtc28jiztoc1b6bnf42ti9wrsugaum\", \"4uxidbfe644ascp91ypfdh8qce6ky7r5rue44bai8\", \"88anmjrlaipiapc78eomhsro3odltokh318iborx2syt7f04pdnhgne1\", \"dajm2wwusat8odwmr3v44tynzf37kygkxgzduw1i3c1495ozrq231idwew7xmsedagbxk9rloly29jmgnuoithn7abuctbxwpw4bs0q8onoapnii2el7680f\", \"igdq41zkydvrx72vigrxs9wgmfgdyg0hrtldsfzhpcc3j490eku8mey3cz9r2utmmz0uh0w8b32mjhifcjzdsg72uj5g7nak58kyslmoqoekyykgah7p98i4s2lysmviefgxo0oxgz3vfn882llfl0d5ql0hi60kgtpye60vr39tjwj1mfhhxlqq83yjhw86\", \"vnji2nmoryr0olmfsgh1wyjqhe3s0va7ajjy3c1ufxcqpr8xwz81zrflsi5acd4rnkez4f3o19dhm381ra3ffftfjspb8kv765ezmmvqmf4sd5qy6f2mifib3ax6m60ea3hnfu2hi7qhspc0s254vxptb8mo4p9x8l1e1nywckfep3t4yk4f\", \"r7o03we6kdlieu9zacky9yot3zokd6a84oqqbbyyr87tu1vxt5yzzgoorzgt57ru23bjb50tpqmera1of29liqwgv729gdey6fguy0b7t6d80mx65qprb7w944096cxc749gi4x\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"hymndsk95esa67gll4wfe13bf08jtkw2zufbfehfd7ks11g81yu51ue6ka4kgdxg12sofo8tzbtz1nrhf8ux5hpdwidrpxj59k7xvdgkjw58h65klv2setn94opi5bmyhtiab598g4699olkt3w04el0l0crv7hvfl8b10588gysizw2sc3u4dn2x2w\", \"8tf1cdbv5gf2\", \"ys6hydun92zm5poeqp33be6ejrxxkaq0jgt6ol7htar9oi486iec8pcwclnwobqbv0qb94cw6ntqaj\", \"brrmvuss\", \"zplmiislc5ln3e7tfdc8x4gwa6xtqbi1x2gwtc2oiw9c37wfpgzdnoub8dlo2qj1kxjuz0t3qluaboiijjvxmlrj8o8zkzvwycapzfolebb305ihh81\", \"uq3n8o8mtq\" ]\n    } ],\n    \"service\" : \"kmes1grz19zavq0swt6q4h5lmi9z7ir6nq8pahvkqi8beosmxed01xqmxfxgey93p2i6wofa00vce917ppzcfobfarjjz6q1alg240sf9iey65csjx29bn50k8dwf7jdt3q5cuqym0zsi4sbmqwb09f95zpskg0xwokn3mc22aozix2htc3ri7mq\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"uyyyjqjvb86e9g4mcirmv8l50ex6bv2477utbhf16ctid\", \"b2mrkwx8o4pp2gpq9g1xs0r6kr5oaq59c8kc4o7t6ycqir0m5530yui1e4dt1i880jnisq3mxtlto6q5j35t2xv1ne1mv85h5q0vomoythxdjkidy8lkgg19za1uxkholphahyyhx6iy\", \"0bwtigses87hi82x149nh4j5rc\", \"v8kr4tkni5ouof0dyxgtgdyqtraht4y4mv5bwv7yskc63imigpjgr3swz13lvh7i1odl3p5wym04dvw7ct6p44r8ehy1\", \"pjske781uhwcm1cfv8j3je69rrc0evy9x4f95xdtbcikrgbiie3cvu90vf33cnjuiwger5ucbt7lkyqwjlbyavhnjx4o71e7hgrzmrqh0i4kvgae43fjy7uz76qsbnv2psdgrzhkwz9v9pdnkt0ptocvgldz4zdmezud9dfqq5sbq5k3jala\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"3fk1a8stc2ruj0ze146jmnw0ew56sthavl0oq3xm90e3mfrzy95vzztf7t1snbv\", \"v47q897kb67joqutyyz4beria1w6cwxy5mf6314m5haflieimx40xs008mn40qcscb09umh8gq4jrkg56yc3e1jsv32p28iyxqocl0bfboepvs7e5ak394ci64e0027a8ciitnt\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"ygfsg1k2p9vj1m38nmjfkwxllydcx5si5qmrzxkdmoszklyffd7hrilals\", \"0txl6dkiew093j8iyv9kskhbhywvco4azgw6lssw3zjh1tuj4ddxpx8hn44vic0zsfvkpo00wuwboscnpd36dok3vdvgvrx56x2fuk5gfi3nd9mgibk1fulcnt9s05gofchzesmbxzm9veb93rrnj2m1corhoj4v1y8tvs\", \"jpx0h180ugmtdvzbf6cyzvvfrph18s9h58xr7seoiux6p1kziidyrzpavd6hy2ba59stnimo4y42nbxbn821g9tcgm7ahyzbwy8bh4h4c49gr62ou2fkfcd8cvmz4\", \"b5xrvzg6ue3i0o4cvojq8gf2cvz4y2ypqod1wt2ca0idot1feqe25s7agu2gn2l6tmsj6zhwbcu6minazrfg6y1s0uoizyjgh14qxqvn6sjvmtn1f1qs5mhtni5swdl8maz4xt6dabtiwdrc9e2mjpwwhwgkk\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"votc6s1ji6xi0h76ts8jxtj5w3zlzz3r7r8wfqqczxvpccdgvybunlscgc4kykjj27s7f2nquu76oc4osudcep2qb6szri9ryt4fyfv9155ff4i5g5ojq18\", \"xaunwxso\", \"x62m7kl3uhp912fhzuk8hoy28mc9xffaoxprzu3pfqw7im6qv7sqgoq92qoxqcsmeo30uy7i4i7wrwl1c9umcldwjhjxptcamq24sj6xdfre4dfkx\" ]\n    } ],\n    \"service\" : \"6aca\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"xhubmk59jjmv35wgy0obqcsns7j8gfq3ei4u\", \"wvsqm8nf7n9bsd11un06770akm0c24trj34ruxj372rkgzo8sy0e1im3bmar5m3lkxtv8f1i9s3eneemtk0sczkxyuxw62hgoh0z8hwmj71cm9ikzqavgq2qzr8w4yd4d64vzy1x7\", \"iiy21ii3aq03enkvdv87zwx961wd73bwtqm3zyyia9m52u2l6d148e7wj87jwnc1sde2jz0r204j7wfr77lzask7v417q400\", \"ruyzl8f1l6erhko5p877ew4m0wtzomqvd6f1p6hclzv4zyg84p8vivkw7fqotqxmirhlcv4q5a76c818lfd0j6q3qfzffn1og6690uw0jsvwcd49kkfblaz4rsax6tksh323nfs9tx6u424ep9pvf67njiq8jcr\", \"fnxs3dc99qq1dio8i6o2xflz24jm7b0j54gh8nvdp0x5juldv8rzx9wvwbluae91u4kant5uu9mivm3jtwxms0mmhwvl1pyymwxgr37snb6c2zvsckzvbxm8k8ug9u9benxu2cyjxd50g9ojlulwmgpht5yaaewox55\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"srtavzpoq0ykk3mhr\", \"l28mswkd4jt9rhth2nm5v8iz63jcrdzp2l8cl3ljj8k5qskpfcjciyl1ckpzpi8z3x75ya3ua29szk1ecoqi2vb59l2rljusv78nmpidaof2kp4p70hdsyc8gombkafhybpnnoqtxo\", \"uqr6nfi853jzn9b5w6c1xsx8m03w\", \"kqm5o6yowm4tjc25z71d15210041r2n4s575iu0roeeclrqa0eg3kcp7gvgwa3sy36thf50g65b8iryuts7qktnp2vduuavd88hsmti80id03nc9f3\", \"ru0gbrxsvjgiqw2qykjfng5hmpwxtpiopaxwrpeo5qengox9gb4iweig45eshwtguivw\", \"iqu0tydus3be287r74m7709y3aj06azdm5ev7zc7irdonfz5g27zoh64gdtzhaxo\" ]\n    } ],\n    \"service\" : \"dpvu6c4o2ab47occi544qfs0yn8d5slfwedydmrp71gvqvboqd3wt6ixlzm0hulby2x86azodn76gci4t5s5n8t\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"vwafcrizlh40jcooplomvmhdxyv540m9gdtntzdp4izo61fojnkso8ls2gzdb2r8\", \"a0thin6k0l38ejkg2nlhu93l5eeiwcm8heq2kk1\", \"hd37tkiofbgkxuh7pf9w4jdpxzyfwrap9g7e1uiywx11kqyy5asq2yrp11ccbjfibsap5a7wnll2snk65836pw0f9wvf1r3y6hyz1rkbdqowd37zl428b0ig1lvhfzuija1pyo5ad9m348oagftc7snaz2gunbtt6ftb6r3d99fuocq2borxl73j\", \"jdqwgf\", \"jh1xhqadi655jtdt9jywlkdzpujv4j3kw6hb0hka415n9ias26xjt5s38mb1fhy0qwxg4xfuszx71lkud8io7cjnxvxbtmdycl5yuh5k58fkjlw0331zg1r0v5u8seutbnooslpdnspig7la8y2dtmuivwmw7m72yv46jmg173vpeezf3st0wsz14rhvmt4ly97wsj\", \"a9k4fiwrkjvyuov658d46cwovnr7dvgeaf8cu\", \"y2rpy2a6i170df9svpr29brjsqcq5en1zb8gsbdtngx9wkivzndr6k6ddh43np353fx861kn5nmbfm7iky83xg1wzoskt3qnm1718gesi0j0vu8lygj2eru4khupwm6okm07p8a5v6zawhtwhwmv8l7prc59q94f9tvt1kh056e9x\", \"g6r6u15gpkl89q44dnnmh0ngay6\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"txqimnps4u2mbiuaymztb3vx51im9xwdto41p\", \"gjpbyotvb874vk\", \"0dfujthv6uqb0es7mn7cy3jrzshvw37vfs\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"ez5kyzpt3e2ra4gk1ldtoe6lnifj55gwsuwnmhsb5nozs2\", \"wxr7kght7bknmgxonitsh55dvky38b1gwzq6fslbwiibvbuu0snzs718li4o5ia60z2wf4qgh7pihg9xfi1dkvdyy8qmp1g331evm41nnvy5kx39f4dz3gny177dfi2f1kmtxh0x0utynkq7pm3o7xsg6205dnf3i8483q0oaftt8o7avzkup75w928atbhbzj\", \"87in6x2337ew0e1swwmj746p07e7pts75mf4isp7opq1jbl3dgl501e4jbad7p5qu4ljtof7rlf21y2bcurz6d7p6mudgvvnojwpywcuzoi249rbu6zatah2dg23e88vfwcqj0l\", \"4hyc97vyv4r9raza7vkpf6567s2b989a56yxvuxyvxl6g50qk5zwlk8sff7eg3x1g2qjtx2znu9t711cy8dq553ur42ufpjs8a6mk1evl5l5be553mlrgxcr4xd5232wn9zmftg7a4bwp1hdwpjzhepki0ys3o4wwdjmjxtxv8qlcl1fha3\", \"i367xfyo81jciz2ostwz2a2zxdmye004mk5k6zwlzjlgvc6fc228e5xk3ewj7ryqzqj5qyd37sv3q2rl264i4u2wxjb6z0q969r5rdlzfy03xgsx1hkw80jdxosv3wg8u56sswls8ia31a9g9fosy4q0r87fxqlks6wmpa0z\", \"ffp23md4q2d6vact1zaqom2ww35fklg2iycia46f\", \"b4oz97da5ni4hzqeuchpjd3wldrlloqy4aue8yozx24dnhr5kaloy3bdmiwuofcyj98glkxv4\", \"aa0j4901ye1so90chp1sehcxprt5vsv4e2etzwze4avlmi1n1yk64d6k1ea8nm5wg7nlh197gdwi8ihqljl6dkrf21pcdt0r35dwobkqi2z248w80oc93nmkr58dz8833\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"wn208lvhgcxgaeer72osdugay6nueujgecl228ec89za79qa4p2mc3ru1939ivl2we9hvww3m0am0d2voc73\", \"1vjaf1wjzyu21n6e996alwczk7ygjyod0gigugl9genm1aj5l2z2guuku2af4va42ummm64arx7m8zvih3jvcqj5leq96ox0eyj0u1c1yqhmrkduxn6esogzx6\", \"4yu3cd227b7q2l9i4acz9n55gvxyimz575my5qp17dm0zsy1hcet8u9zoyqmai9qjjrqzgdbn7bt3qhttbjx39brkn8tq7n2h41gskny8tdk5afxujvd6j5xlv14oz\", \"hwesn89rjtu51wmfe3i32yafy51soxhd7y9gfls1ew2npv5siu8o6dwp8j4l8089n2sn4ve4sydpnb93jx41yfvire6ciri11otc8mck1z5hd59sbcsbvrkhvmxslxq4h1lfue5k1vhmvhyfvn99bj74wc2lyvl4ufp1rmquzepdrn3o7usz89bldid80tmnx0\", \"ppeunqleagm1cz1\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"49uhfdjbw7q181shu3niur5luduuore7vli\", \"lks8udmmj54qrxs8fnz0oxld0xq\", \"ycp6rf6dmj4a7xxj64tec7sj0f5hbqxhwg62isrljlddk8\", \"in0ju0sut0vt9sz91185h2vvkqei0ds1vt2lw93ksaq2z32qav4qsbt0yp\", \"zm19ejvh7p105oxi0rsa4a6jkw7nij1m0qkksfgi94mjlhxkznkka3hy5ppffkv7rgck4jtrykv04mb6jazsl15mc9vfmaljc56drx2ojel8vj64fcyi\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"2swav076mwnhjfs8u3qbeykjuri2x12zjb7piqnr3w423t6rav3pbtj2dtb3yg6pe6jnf2jmoxi3lql9mz7n0no6xj0k7r1s9it2t\", \"2zvzva2e2l65q0mfqehu85z7rryftr284mhedg\", \"9hpk0cimnrwuls0xeukeszushd3kj9rx40\", \"ag05133ueosvfqzfr8kwhv82zfbpusgur5qpma\", \"tc8wpebzytyfasg10bl46m88z4wm5niphuskeglvs70bperzyzx1caee7azqfd9o1tevimf1n35ky53rl2i7kz4l1t8hke2b9ov5mnrcy9f9\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"u3p7oju0sgiy8d19r82uerey5hr4jw9l7j2zm94pmqya8bw4wdv6r09qmplpsu8csyo8u7qy1x4pk14dago1vj2pgjkeeqyowwp9w988x7\", \"zuvubdotzz1aw2ctsxxp9b\", \"0p7cpkphvfonec1x41agzo0b1yn81iruu7zb2ft7lc60k84qt622tljjd5r9ehbdcm4iav4asqhexnu1tlwj3d2644mpgtl8ir96wg\", \"scy2i12fbdjiara82rmz4o5qht99ulotphfe7541z8fw6k3ibqqxr6rxhk17rjtbt7hzoabug71wzl2g8725kpglseyp8b7\", \"shtkhbncvkp6l389l9uwafo8ocsfyl7yzj98vr7i152zyunp8f9n67j282z7zx0jb25t1lr9kdhz88rna10c3\", \"0vcgj7ajqpsnpd0cbp5x1vlkt5jo00ut0z2ui21ggt5ob6t3nn503n3ihxcj82o9e7c6pbatgg311hx6b42rca1t6k03ih43di56756kqx55x\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"4k2vujzsrsfn8mu94j0wc84fyekr849y30od2f121xpfimwpvexh6oax3un0weyv7yt30qdga6nhh2lrdprdavkcw0lzfy0r8j5tegev06\", \"1n94g6azp5c9eezwhs5or8uran6eznqnuyi5vqcuvv58oztoabodfoqkqpslldhcg9wbe7f\", \"0o06ajfbbwofdpyl8fagipgoo3brrzs022jogp46ivhmerltnzm39t4l1addmt61v1o6dnlua3hh8ewf8u6bu6a9xkqe027bg9g2rh1s35awnaf92or0o9xh7\", \"s1pc9j3zz2vi95loxv4bgemzfevmy2dtp6etbu17mz71isar2pwvs3ix6jlqpam9vlhwqn45bo5cpt3ohznf3can1xwd8tj09nyq9tdc8luf19f8bym0lw68eewyfhu5r8wfigtcr59ejq1yi1pit\" ]\n    } ],\n    \"service\" : \"pwbr3hiyewybrm4gh60l2jfupin4i7plb\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"98zuz4ssanrtpqmlht875lrqj8h5ijw9t6jf2bprotdlms7ilkdnqemit66z6q0fmv8zxjwz7opdit0pfv7shuin\", \"s14n71pknzwthft3bqri3oqha8ew0xyqhlsx3ga\", \"wtya1cnx5t81lbhvzx5e74mtkzgucliia8gwqpsdg5xpnrmo9j8frffrrpmhyirn96lqn1ym8pd762xa9z4kf323p\", \"ddegk6ucjauui3ipo02n822zdpc2y557le9ow9o6ic65kin08d784kxbsaftdprjm894xs0hkt896pqe4hwo8pf79v17j4lsy738au2fcr0q0lwkkkbxm7tk3sg0ee0bvwhz9tarks73phs083yrj\", \"t6gugwuqzfzmk996r3rdzpj7ou81jaxorblo2lu8iqmoqbwfv5cv80elxurud73kz8javnx5nb6o8dr70n065hcs3qzt0g3dxkege49zb3po2hsik4jznvj7iy3axz3np8fywxb\" ]\n    } ],\n    \"service\" : \"wz2hn9fyujidy4b0vy1zt7qdxuoucfwz2sxy933tx5vikcq1b8iy3s8ditowr9y8ti9l\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9cd41373-b52f-4835-b8b9-f0c3cfcddab4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.389567Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.clientGateways.setIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "auditConfigs" : {
                "description" : "Specifies cloud audit logging configuration for this policy.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleIamV1AuditConfig"
                },
                "type" : "array"
              },
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleIamV1Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "4a254048-498d-4f34-89a9-649fdcea3006",
    "name" : "Gets the access control policy for a resource. Returns an empty policy if the re...",
    "request" : {
      "urlPath" : "/v1/law6zm4xmfopzsiktmtuupza9kj3ac0mlxwvrfwkqwpdrvknfu5crhl7h2fx56fbdeb42nqgzw9rrhwv71nkyujequtz8qa86xc9p6lwvgilsk7l2u6ni55sarqrwo2c1w5ibhe44sn19v98gce379ukym4fj1a7oduftzh5koo5brdd92f6y2v7mohd0w:getIamPolicy",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"36hs2jqof4aew2sczimbunvq659svbh8brw2ak9b1xqcmdmvfn0zlgdq9vo6tdzao3eormcs9aeyg7gx2w7w7d1yr8ofwgi5ugjd3v1osk02hk6mpkae\",\n      \"description\" : \"Voluptas dicta quo magnam omnis velit molestiae vel. Quibusdam blanditiis velit veritatis ab sed. Vero labore perferendis recusandae mollitia. Voluptatem dignissimos ipsam voluptas ut ut nobis.\",\n      \"location\" : \"htvu6gcidkevtzp8zgkh5ezau7paa5ta94wrojdv3ttl9sanysj03qt8p9l7kzj73u3da5mvc5c9vx1uktqfs4nqdlnpe0ol43sa6zlp4iutu66dfzin7wzty32c04pyirw51tcv7ujtjk9gurr24k6lkf74ihrrruerq6cvhn0z2r1iabr2d3x642ha3a8fpdqm7\",\n      \"title\" : \"Vero aut inventore ullam saepe.\"\n    },\n    \"role\" : \"b1z3b74gia58s9pdwe4suczsmmj5c745ce9hiy2b\",\n    \"members\" : [ \"dtki9vpzn4i71std8nze7o9mukgy84zbjg9pos41h5mlwletvpbrk4ewc8drzcxrcpg1w70k0ddgciez2iobp7mug9w3ear4zsft18h5e896f1vfmvx1wzdyl6tm98t59ckjk08uchsxsosirvsya3gekw02h4wye21hvlch5t\", \"vvzxdqqllzjxx23jsbt0ievpbmtxy\", \"n7p0zst0vid18uxcpsjfhb8v1mxodf43znrr0z8joi4v3jxy59rluyarhqyswvtr776kvor06nwy73vyrdlzbf35q2me8h9sdvwlnpnm3hh4abfct7pfgsnnv126k9p57sf05o7c1h4uojkgpg7ao25w4b8vw2te7pqpg2l55jsb0f8r9z\", \"yefc7ppsatolhv3v69eyox1tlcimgeva0grvz7srthu9xy18bi0s41buv4ji5nskbs00wjajm3jsbymzhxfh0j51s5tzane4rxgmfgiihfc00re2zgpmzjcmh5sxj9u0zba6j85epqfwbkaf3ms69l4o62wbsmf2ku\", \"5xx6gpqtvstn0m6c45irxjpxaby2hny1gqqd1s7h1i7ud8zkhvbhop3m4n8caia3vuh4okm0khes0q3hyrmhvwgg8ycow\", \"xwom32xizx11k52i3cjj5j23p7amos9pmuqxmfzsm9qbicyf4ltzhigs3nj8mefywriedunl41nfyfoddvk\", \"japmad9pcprns09imzlw3llpth3jv3ptb6y3oln6w8g\", \"nqsvsnsf99kpg1nk5exe0hk46bopoww8wn7m0eu82ij16cic6z0aripni98casvkm8t7kfj9bv2wqn6yxlp\" ]\n  } ],\n  \"etag\" : \"sequi\",\n  \"version\" : 104591157,\n  \"auditConfigs\" : [ {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"mfaw2q0g4j95ot1m5ros9wbzuh6kdr5tcv5vc86769ehs8955jlvxtemu1aujwi0flwenah4udpha1rs7r30k5mq6uo295d0icymnx1\", \"zdk18x1y3t4fctiwtnmr8vscvtw305v7gqf2synh2veuehll0m17vu8k1jz0lhgzjxv7q0e34vjlg9m449zdmq00gyb857bf3lsv7p0rt6v2t67vroh8ixjtcxzetoyhafv7b6zt9vo3e8mouh\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"lcyg2pm2s5ey0uqv8v6zwqbgv9ofnuxgysgwt0i49l8s85bsa8q22gkfd22wd3e7yby8ecwazdfmsusedzuj3rg1\", \"uyhkwuind2mdntouls5o0kf2ybj97am7d0ymk3ulcbgichn8rnlp8y15uxaqa0irnxe3dz8maltjeq86pmt3ryb1ner09cdwfkc6n32uf2qrajvwzv2x4zfx61x3z3wsljlbhmxkgvurktnuypfq19anlh8wx9z9dpwrk5tl4om6vbyks4d1vihpmw1yrdi3na\", \"s0b6l26mv9t6gy7eae2cw6rufkcblv6jp9rv6ktilq6zaezwv8k8dx\", \"qhnmkrt8uxcj1nt3qu2lu9jtz0l6j5x9pn72mca37fzfsvf8e1b6qdblii31lps5v7qhrkkhgtkzr9qpngex444d\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"j3q5c98fmdjvdo1x8xb7w92a9l1eeywjto3nxnblg8hli0hc0f53d6geb66aexm0zkn6800hxrbxij1ce9g54ou5ypiipe1objzpct3pfydpwrnhk\", \"bol84ndc59mvmplzg04kitb9z7w0vvgv8auvv89a01lp34znprrefpcwt70n0jtt6lwurpg0adr5hm6dmfj3yxc1sa5doi3jqxhdngd2ackmgtm46vitw3yt7435biz44pn87cxsijczgjs86s81zt2nomyc5ezsjd4m30er89jh9e3dm1v\", \"pq7j7177truvlvgyy0nt3y1t86ajq3yltw6jw7a17fad0mq19bkqnfsw578t7te6c8sq33iinre\", \"t62q3cfpr7y0\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"stzxkh4wq05bkp31g4q5kj2h3rs570avq2gpvv42tedyqao8qv0ii6totos2j698d0wotjymvieps957bl03icrfoom0d302671dzxmu34n8o2hywa1dki\", \"v4nw3wpev3w6jm3yl2tx\" ]\n    } ],\n    \"service\" : \"mdh4d1zs9kabalkheacbdvs4pbhszvxm4e9j1kh8ei6kpg38gqv40363l4m1j9y5bd4lwmp0aca2t848tjng91gatw6pnk4fnw6v70ydrqe9oob6o8safw5at1nogmrdkdfqlplmyku9tp25nn72i4fl8ofuwqem9h4ofhlcrpu6llzqhh6g7tg3k5d3fginc4wr0\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"570ddhgth5qwxxz21y4x65f8v\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"t08pesv80pleg1hsqqc1vsyq08p7ni0qhwqrdngbp7prrhl5r94dga15kovzm9lonxm2tpro9oymrvjkkimo0gsg6mjm\", \"qmt84u03jkgteqw7it3gjry9uk6m9q44dwr37sqt747ipq0ztw8mi8qwcezuo06ilndqo3u77dgzsh0hy7w3qrj2w9s2805d0r41k4du5paynqwd5pb2jza78zwdqkvbwk312r7m0vdf19kfnu\", \"95eluslhu8e8swv85n77vmtlb7aefst6tfqrcus8hnzvvmc0vqspayt4o2tfnro0fgpscit7ufc3snmsh75oo79v2jl7jz63ll6mect7qzsskbkg9xbx7wu6tny68whox21gu15m3w45rq929phc9p9yjupwm2qyqeb9kbn4gtvwpsr997k5fi4eyredk9159\", \"fupz5sdz1iamqu4qq4o6k4xwb643n2lsybtvnnd3kkpmfy22v5t2oqg153tdnkvfu25kvy1xx588ezwern180bqu1tgj6yscmetg8ithrt02vucdhzt\" ]\n    } ],\n    \"service\" : \"fvmin3v84wdxju3t1x1julo9r4dbn76winri6arbm2o40i8q64xp10zluqyxibp2ia5kgiuxe8025bakdcpww9fusivlz2m7i0otq1hef7mxal7xjuc85g5gm9rrq8l7vqgh6l7abvq38ktzo51p219c\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"zgrj1byrtysclyas5wptm9vnbbtmfth6u6p6m5hdxho8m45xen30a07szrfy94mahm7stj11ivoev9nu06rky5dsxxzn9d7gvlxyff8rw15z2zdt829fya7i3gm1l8uet3j3fam4qvzrsoqwdywyr41rr90w2lye7zdm9oiblgz9y6au5u5dzj\", \"oai5eqm496tt1z131krwhnowwwc2usxm8bxnedtu3vg0fi8vke4j1kxcvj2vzatttv04dne90drctkp855anc0rr2sn\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"p2d5gv99ty2xebe2gmmq2bnrjfh6adw1tuoanztsfk5neu4klx6nz5bqpfdj1\", \"ya4eq4x2yqr6d0gehu942zv0kmrbn4i3712lhejay0ugmawcblmm04xpxw9xam8j41hqsb69ffje3pgvd1ngj00fh9203ggdv3w3117sj2mksq5qlnb7ot9r48cxloeq1atu\", \"qa5okimnkpkjnbh9k48z9a0jvc5y8nl0ghck2duc1ejivshj1dt5p9coho01tpg1dg0ekqa55tbxlnzdu897s8xtl7noebtogst\", \"lkjmdgrpkiwdj1ap5utzvlhkmswqe8v0tghoeuf5clwkbtpdd38ax0vzxusiqehvi739ucncy59auqckjyum8y7frdkwfz24vm61pff69y4wa0bw4izjg6f1xfknjv50x9mk3x6o73m6mfz\", \"2zjexco5zd7e9tv1ejgjpg44q5y6klnve9xqgx95hz87buetbto0wnl2n6ni1w8qduoacumyjdv2hwj8mzj47qjrva2ls6so4j5mvqjsq76z174oar6u60k72gh8nfszefbc7u9gtljhkim23opbtoz3nk5uv6ydgqz5u6ec1giku\", \"qldo3n3eq55kvpa3nphj7kgq80xh1ra6ku23euchkbkda0gf4oxhcvcf4kchxzuehstoiyvdnnhpohfn5\", \"3vgyq2qi0zjiza37ekyajpq3e3am0drf4yvqbqoybknfi2jzpuuylyae9ygym2bj8b49zknp3r9k4ytshreevr1n7i80qp7edu8shh3gbxs4mtgx7sx7q0797v5pflqnajxthkkaxx15frwvn\", \"y0nswtd3p5gzb94r8ps7mvwr94q5tq9dawgu7vxfyn14l60cudb55qz2sw94ozk3igq92gm3jfvblfrl13hda1c7pccb2dr42co\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"5aeligfco00u4e64z75ykcutkgkoykmul5q71amtad3td1bnefcznlviqbn161dgwmd85c5z5oapah1hvpv1dgwvb6b4esnnjjrc9pq7h0191xnq1uk0wtjnyd16cy\", \"6hyy7ik2ydcfiurbejghnboplh19m2frvj8gcem36oi8j3cx2ymba6sm3aqqkz0qnh33u5omabn7b96dcrcsdbpiv18br7cs3acii8udbvr3is1k7lybv5xe9yn721j72izqgzch8q5hb4toj5n4eai0ep6jj3mux\", \"btjczivo8qgwoxhy01fge8suz97x3sap3guprjw0ghprapse7i8pyhxdmdsjdg2du4y7eyb2lua5ltmo3pxuybyyob5q59blnzlv58czs75uvtbnvpyrva8dfwv6n3ic7y4m28rmvtvayj4kg8245wy8ndurn7djhtabuiplmpk1c2rmlkipw4clxglea5auis6atf9\", \"9sarty54gvj78y8j72ksw3yn5u40vaa67jxqq4cus6zlzrhvvts7qurpye0y6537ff8ij29hk2wh391602j8ng9qpfzdp7rx4yfn8sxpq376l4ccoskxuk0v\", \"bmwy38l0x41c3x7226oeoywynnefn5g\", \"r0qq42kmq4ib1c88oo7p4eggmogjm860zfuf47gds34ah7hgm0nnoloilpc4dtas0bf3l04fkbomz7npcrcjn6ya8m2g3ug7sfnnxnh6bx3napvwm5sx3fnsziwqkf3e9b57azed4454\", \"e6sohe1lma7rp72k2uwjvw4xgss7jw4fmbw4u88d23avx58yttxl9uwq6p46epua5e3yxq9bqvjdsybcml84fl0763i8qkhjo83mzf5svg0ha745wu1y95owl604no6trsqsj3b39fb970xdkbo\" ]\n    } ],\n    \"service\" : \"t0xuxoytrzjx0mn5k76rspgi873w4coagm7kb4w8lmexydjibhz609i0j9dkbl1bhd355hv9ng8rfaitzrf3o60ujv7k8ejasy46t5d8f48p9fj0ioqqgquktmm2yd5mhwyvj5oe6nqw1qcm2gwm9wv6v24vijwzw754c91tscegpl\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"fj7npmyao1xphgfpuhl1nqlqm2yrqhyuoqlmfvw42rj94hra8q03vljq4qofqg8ppxa4q8k7dbdayz1sos92769s0qc5zvkf18j6syuxk\", \"matfw3yf73uxnd9urq98l3tlhdbrpq0dz9a6rupl1o7mrw1lsy65zmu77dpg9r8p4fxjqimrbkf0j0dbx6f970tlabg5uc9b0zqz46eod4qck6\", \"wrjs4d52mmnngxagn30km\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"vc9mw2yk69wspehbnov7b4jq\", \"dvk67q1y5vcjwr1hr4j0mzc9qp1sxryaqc6eqmjoqn5i9y5ra5fkn83hm91qxi8gx45wngbna55oy14mel4l6oyo7gidruemjc7dg4ifmn4drjjjvzri2ix6zzjdo76bbser3bzj6ydpk\", \"6pgkpkhsfldkui2o3jxfo2aag1jl9dd1k59r8hiqdxfkuasyurjbwaxslu7pntrpwarbaknqy7yafh3th2r6wx5rba37dkk2gs\", \"w9iz11hl0nmq37qg41weii4l2fgt91g0vbj9zlofatrxiq2udhk2y153v3fqlm1qqabgmohiwmllb70aqd1k5lfojsg38p2xb3l3qks224e42\", \"q40tipwxvwvav7spnkee6p59ncb0yb7h2ha423282pkadgpixqpawetjiuo2wwxhn83alwhoqhxjnushn8e4it8mxuasczjsi2jpox6pppqdi83x76b4qsf1os3oil2q5enbu1ga2qgwpr4vey6ur5qi7n6rndyh9a1icwcws1xphhgzsn1v24xxadvpynnqqc\", \"g89wxqnnadn7e4tp2aurfpyvdghclzsxr2armmmwolctyt4c57yy4qpkar7u3xnd7y2nvhap58pciaipnsznd1g3nfvrni6lkudijc0vbbi03778oj9q50e17a2n59p8dsnmeqc9ft\", \"ihd77v0vg4exr8bye8vbowosr3liicda3jzrul6vsg0yuvbw2r36s8tjw3yx0sdb4ze294aq6p06fw37luuqgjedrwix14l6paa0xr4t942r2otdyilit9y7yjgz6s2tr84wa9xa1wv0r1metqo0uy7wpsybr858kc0krnfc6zz81hzpir97uewt27kxssof6\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"mcgn49c6zndvtfee7ta4zsbzfvddezq2kf60dkv4fpbxjq0vz1mqza4ui6ihl773anea7yndi94z8x3a9h3cva5fh1dd1ir09s4t2k3yig0i7x0dfssu37w1wcodwwwjay5xy95bo4noxe9dfbkex6i6er0y18y1alzz8e5krz\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"wc0xa5c3t5lxx5i8veqn7gaj0rec0yn0q9fhhe9ob4gggdbmmjsjputbcow1eynjoqci46nzf5mpjlu7ni0xu1bzjtuekfik901nn1aa76x71x4devzyhgh15gcb9dv7npgwrikvslin3c4qb2axmdbf\", \"c874yw2oj7l0odeheom345nuymxjzipcbblefd9pzhimnha853vy25x6wofr4mqyeayr7umun3fw3e5rpkmr88nxnw06udojglbvcgljvjd33oe3uad45usl087qooy7d8n7auy3bcnml4bgsnzvyqla4ndpziieh3z\", \"d66wucpbom6g9p7mynu33ag9zvb35jl4u81h014mgvw7tv4xo199r4tmylgmy7fergxr8ls2gzg98il80o22knvzhpjzwxv2fvwkuk0\", \"lwwuqo2qatt122httaffzs86hnwr4k8a606l8z4xpn53c740r7iw81ja0y4xmnd420ryka9k99xdt9thi6a3w46wydewapsox43vmyjv91\", \"esesj136v6s301eysovjd8wxxv0wzr9tqrmy8dkiyu7b3jq9op8ewflpc7rx0beg2ncsp5j53rh431xh1nz0c8anb2n0dsnxyqmiezzeo6sjdryoh4e4f0f50xbvd7p02lq5bzp369xjw42vp3zjwu6lwyne0c89dxqplfo\", \"o23de5a5tucoe9pg5ps41v3fbx4u89hs1cbpw\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"8ocmwe6u4mg2mc1n\", \"lhq78pnv2vk4y3ozg3p3r49ggjnxzfsz1duttcnfgtnisoj1w1ejedyxs44n5097j1hzsxn5euzwm34xyoxcvemptfsbcy3190p48cr9w0crptiow46myncxohz2nx73xmowekwme6e6\", \"nrl71gynfwo4t1y28c99tzjg18vxgkoagslz\", \"yod2z3yhnfk4n8p28du1bpcdy9vq9xlrv1k0suic8t2cf0s997t9u30pyfhiz7lyrq9qyvjrt4axcw9o3zbebxczxggd0u1jkj2kviu4b0skb3xw7q5uvf7xncb0tne5co4nhxn46uc436bbcr590aas0v1uxhfm0hj2s\", \"ikyqv4tx2kgq3thmspcqtmhks4z1zfig4eut1ca3rt0xt3h724xpbnx42\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"m3puzakbot60o1lo7tyolayv8zl00950assfn4fm36x72zs0lz3fe07rzin1mbkizob4ayglbzon8utemicw07l66ng1\", \"0n0ydgb8fx6pq1hqwlt1k7ctnb7nct6q\" ]\n    } ],\n    \"service\" : \"pnr6uwcviate21stq8fp03e0otpqwebu23slgyf1ghx7mdbz3tquldiel14qxbxwahpkxsd4q31m9glfnw78mmrmmdzhnd5eag37sl2nymf68icgej7dke0mpuljkj8wvnpv6npoz47\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"6lx1o6haji6w3062yd1hja8h0vlub8wwhsai0xnlvfugwgoa55hs8ytpidjczptwlijwzylyh3\", \"fsiv4kxxjrjdpivj5ol2njvzw7pt\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"omtp9c5i9a39lf942bvetgotcirzh63jxas2tjug5z6px38poqik5o62qd2fdkrvi0d268ie5pya3dxs1hl7sy87z\", \"zmq1b2ctftbpptfl527lvkm0td1v3sxm3pu87reqxo5higplfzdxwsuo\", \"sf07g72yckcbepnbgpr3cyogej90ecfvz848v872cfpguge59wqcydiqwd6uguq383avsujk3hkf329s68kc5sugph4wspjs6oayeogbpm2ghb6fujys2wcmr93yoa4ilji\", \"6584phhmm8dayzpou6dxp0rucklona1557z1tnnuh1embmhijs0lvedfz5v021ml\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"mnialz5j1bfqbz48xaj3yh5jgbzvj1\", \"puz09rzlyvdycs4h78tbafaa19ns231ftqe6n5grtpc5fe3enkvjwfj93dxltvlfpct6mdcfw0q5vde2ojm581mwglpondob4ite0lb50igxkg1ded20e5qic1al0e\" ]\n    } ],\n    \"service\" : \"2eoty24euf77hbmndm9n7avf0i0ozsaxirpfgbocmw1yzytlfp437w4tybikrinai00y368eje7knoopuxhiatb1f7ugf\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"mu1gxawxu6ppqhob3iprrkc3e9o9zixv02inh4d0jav8pcrckizrxgutw03r1lhp62so7i2beg3d7g9xo1oybd1qte7pobv6ok9qyf8yahvdj0r7nrlwhj40ep4ffre2ob0m3k9h5jibatgpggveljcwv4uaqu7hhsxrh4d0l0w4vfdx1pww\", \"mhxz\", \"71bgf319ee67jrvzycltya2fs9htw68bz2mzcucp0b59prbpm2e053rzc7ru6w\", \"7j8qymbb7m3lgobq31exr3vw9wg8x3z7rtusefm2qtnipspj4lagbqhlxqdopd47yeair4cyjkd915hj6f6qjm9qj3p3edjrp2f9ndik3gp6oyucunijzdjtj7rmwhqqbiy04upu04hsm5rfr7hyv5znh8pgjnkiksasrq4pponjbgisx\", \"wgm5kzy4i5zab5v4bc82v6xcgwpzlvj157566t1muu9sgkmqjplq443x1gofzzvyked6ucnihed447hj\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"txv479oyope0f\", \"5b9kjexo88ckzspkfyk2vpc71e5nesnj4tkz7c8zpjjgpp66syfw7gjdqnsgpvgm8t3ltgxdbv49fxzvmc7g1mh6lyvob4gakdyvrelk8uiqxf77cmeds41k1j1rfdwvzj1wc1ylhq438kkl\", \"3b9hwsbinpinybasrsa7fzhgx6dl8dj8jace79czp44k65j1g0blebznbnhf5p5y2zwjhybqtx9bawsdxjc\", \"e2u28c8j14il0rbp\", \"7hhpwduipw0bikycrll44w994ympsrl7abn7wbgb456xardiwzzwyhdopt427fyuah292kbpx7h2kq9q03rcgb\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"lgfqqnezoggn2sgn6u5pfdsum4d1hwh1flkjp9lbqm2qzf\", \"7s13bmmmo2w4cs9isldjx9wluwsy05wy4tj6d4uarbgw0zo16mi2aozszv3k4o1r0yahw1shi2i9ly88t11rm0xc2i6mj03dkcah2xr332aof0g7fivuh8v518ovtxp9zx8hpzsogah8zmiuit8c1p4jmxvvnl07br61lcfkmw5qz8y9\", \"h6974cztyimo7nk2lqkxlt99qohz7bcsh8sxro2id0et9g58wn\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"88amenzipkogqkg1eksu3l2z65v04ogiwss93s9ekpo1ffypdj971b9xbdlvqtehj7a0kcxvvm2qme1ud7yo3519wnrbfneywgyyfydchuxo7p8k9adg7wejf6hvg4tmgvab6c4wi5622bzb92216wcfsfv59p9tek68asz5bctgymikayrzt5f1ex4tq1\" ]\n    } ],\n    \"service\" : \"e4vnedwqvlg8b5vtkaw6uduiwl8fvreqwyoru1lw361tlsbva1e29yc44phbn2vi66v0kgwjo9gp8gqhqz3h7hyo4l8nvsmwuvkrv4qlnq67yc5da8lwwa15odbcbwaymhzn7aund27wmtkpgcy\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"q9syxz0661k9vul76ugbc0s44y8s2tfqh0o2pwarva9ijhsyb6i7a\", \"847l9j8lbr3ft08bty9j9wty8rjtj6qqxushr6m40o0f940gpf619gfzvv7087exsqimyg7wdszk3jt6dzdgklvu7cy\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"58dn41ay7pwtnr9w8gwbb7vdn43aws8f8lwmv0ry7b08iqbfwpabgwrcq3przgbxeljgoaa4vdpmnhwquknayxjbhgu84nv5x39f08094mfogbsgly16sb7iyzai6fhyyns71w87uz27o6gpq6dp2boxhj919d0wcmrmdfu01j2qg9f9plbok7l584r0m2g31op\", \"l7wtt0ubgvxdhrosa9sanu7d1fgw\", \"phq204fjgrik1tgq90lly5mw5rvpqfpvgcxk1i0e75b2qbgdem0aasds7lg5nxb9topqtvyktoq14arm4qqi7qo5qg\", \"jek9xbyqfhxq402ywl8nuouufa4t88s46qsqd5sq2wy72uz4x8cywzp43gngzc07bdu06awydn9dfofazgzzhzt768madd2y368gb94ibllbpigmpflpc7tddet2kxuwxtmse0z7xafedzhns7msn0foqgjk26hg5yykyx1723bpf5u1vbpls2z68klh1o1cwea3y5\", \"sssnyqa17ywghnflzbwixlpqhkfbfft4ax5ajfa2jtq6xyy7uotodwy4jixuwel\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"djcz8kv9plgcz2c9iswemcxurj4gdd042stltdbaz9s8w9jctkqf02jtlrfo124mokdqd9sy98nhtco768gxi9kn2bcumoj86lraf71dximt47z7lbvwlz3tug1mp0a7znzx3jzsmjslnkbsi\", \"3m62ve91psfayaysweewdmdu5wyc71tv8dstgaqyrcgrf11okxkm1yluf7tdkrjqk135k7v2xv9mpyjdpoim652buw52v9f2kw564gxxfm12vl22c8xgpr8xzimbua8syyhf7v3bckg4ie0nz0jyajrl654nyksp4mfumn8gemnn6l51cpqm\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"kuay6itnqhh96l05pekk0xx63laqhh6cu6cepr1jebzma4ywuaxfreu33tzpptyqfgexxckyjvg4zfc6tqz\", \"48ml8petrvssx0eso3t1h7i3dy44ss5q59tdwmpqa6tdg8f16tp6wjyeqf6tx5pfq79gze8dm27yd3mwgges6chxzkazzg8thqtizlv8\", \"7fgimxnzkydtpdsfyy70i81qksdgq6ssrn6ivwvpbf7fsgwm8xfic67it9aqqvsfkhlypay04dzgmbw9170rwu3cf\", \"2lqnxw6akff728cp0kf16c4qmuplih33j2drmhs3sgarmj1a64grldug65f9pkrbhjyr58ezdmooplyv2a2ahnla2y7khr6ddze75lj5l4ze2rv7yu9bsgwd63ci6wq86j4a44a1ivglnwgqtn022elgmtb67294cvl2c1h4zbx5ywphciwzpsvo377ip52\", \"itr8pho1as5lkdxsrdy962qwz9ctvivxdm98pozsjfcpls69mzwrs1uc8prmn3tpwf08myoegxtbcnd16s5fkzqxwkfilpvzbo813bzbnnsy8dvi0ylyrj1nejqhf1poahdy8inraul6dfbvk7kv0jnybkd8wv464nbsqwp\", \"oavbqqgrz6fsw102ohomwhhs1hh8d6noij2ti567pitshcbxhkmokjpegxw1jl1uihusbm4x9qhm2yizw7r5td7sj6u1ggb1ru45minkjkvvj4q47u7i4jqqxfmrzmfg5koeustac28hq1bby1m2tqw8kmd8mweooot1h9nlq3fbp3ll78ldzuzxot9i\", \"d91vg63w51p4d1hq8mbpbsitoq23hx6v5n69mx98wx4ourbif\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"z3erkev8cofnpl4qwf1gmxuvbnsmic1gxcxf9hhdc8uc745u3\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"rqv85xn2sd8abu2kv9fenf\", \"2xejjhxd2l794jh9ubknob09uguh1w4prquet1eql297ogmk2pof5bot18tv94j63mshym22puu7pf2ccf1b8pkyym6dsz5sn4k2zjo95mn82wd7u2ilg3\", \"k86a4qdcww049ai6kxlxp8acizt3652k72k3l3z6995r6spsgte8vi3g2on1uw7pxz4ltz99q6e8mpisl\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"38y4ebidkfz9crb963l3j750wuy8qymndrystzw7r8c5dybnuhzk1iwzsebxkwy4k0fe8mbd9s7bmkdgiup796u287huyb9ap7agifp2tcssxmj4w0aym699lqnviozx6tf0ov31n2orvneaaej097zox52dw68ghoxq9i8p3ry0f3mjazjaio63i9ouqu80\", \"fdfswptha7htvgh5dkvkbwegz95aspfkzlt2pcbv3wmarrf9ppnlu9fwlu8o61s1f417zlf62dcvl8s83vwvwabbq0olcwzjkun75nxrvh2ccr05bu7io\", \"dqml6xmsa45zg3unsgjk2tmmu7bnbsli952hok5vuevslmitjoj8mkixh38p0v58oscug8wvb4df8qfsvinnzpxzlcme3h8ezi3o2jbf1r47r6emxt3dr7mcxkdb6uvogngq5qe5r2rl4ot6kd61nf046\", \"bxiol4sf284qff66keh76mk6k5ouna2pfj7a0mg9uk0i7adov6e2eqkdjs9uhja6rx\", \"lqxf5jc5vw7qaos1z0ow6w72ty8a3ulj87geqhgxs6byrm00rak2joy2ixte6hfdmnnsgdf9djxaxdcbw0j6ct63g19j4xzrip7m78lltfkra0gk13tnrvon72gkb2krh28c7u7xg3tssed2\", \"tazjxz0wbwowye556sd3pct9bneb12ooi1qly8nj4lzvb69heo5gg1r3cjmj25sxe3rw6u16e95op05g74huekun34walz5sh778hges3tzvn0dw5dlwgz1wsbn2z6pqoxcg479t14sox25gdmuk\", \"wiyy2pbgf2ctey40h85ae5kiillqxjq3wfhoguv0z6cuj5tln589a66dtste1zx5mdedzfv618523zj5t8uticia46g8itfks765v60tanbzmu7nxqu1sitrvnyo7deuwdm71164cginz05fhmwublfji8\", \"vkjs8216jw1kiz3ljcz5qao0fyelz82sim3qptdfbsq661c50jnvdur7yzl0lbjnocnqo7wek7crqfkke38yhv6v92sscx3se7rvasgzdabe1iba9o7o1h5mqukks1rhkhnvp8cmjxbdccuoi9pa5wt36ncqajekyunk3r\" ]\n    } ],\n    \"service\" : \"fo7qemxsav81x4vdgunsr9gazvkx1jrgdq9h664j86euu03nswzgwi21opu2zk7hw2aixi37msgie7bjgfdk6umz24pvqhpxqpmebmpnytuiujkdrqwo410ze4ne6hl2pxo1iwvxp90pg8xdvxwtamn7udv6sd4ytwa\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"83ni7yek28pnmm6zwxty6dl0aua62vomz6v3wroejlljozi4984hh13lbozd0qnh73ftu\", \"qy5py94m09set8u0hi5xnpwpqj28yry8on9e4wnihvsd0hv7r3099o0pqvpk9deuycoiq8qsirr0oai8yicattmh9wm3umbsbzaxtusv4tif1nc0m1lwqilxno9r35buoq27b8x8as9ej9b6gmekiddk749qbbaeoeix5\", \"oddkpsd06f10x3bfhf6t018hqsd0k2s82h1dht8g5xmuvnhbfvn4u84ozypeckakwazbzfo7awevltpf7iomiacnski4uqxwzv07gis3815bzwg1umiwyvfpoklahwoiqsnc19myzf5992g7mhsun2tkoc61r638etm7g9qy0egejlzzaavjxcbbnwgp6\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"g79ucwhspg2a63c10vqgybze03bejd5nfco4onp4u2afqi15m3p7ewhdq58n4wosyvb512pfpfo55uvcbups1jygrln7trfvm8ur3mesxim0tc7g7ingj8o5gd5au504yngpxang35hoggz7hlf5gk\", \"9ybzrzjpj36b1kzvm265r6itteqposnor6kjqg10o2c249l0e7qtu3dlife4yacmm23c3y8aeuae2cu7d3as\", \"ez7lj5shf065hqle8xty4m0s47w53bz7iphz7aurs5axnyfoqgkpj7nnqckzas52q1ck6djb7gw30l40qhbqb0zg7isdjhsgb1n6fhj77ablp2yms5jmrg44fs8ldn9rg2qp7u6sw94h2xgexli78cxvi1e5dhg9xdyvyhkqq2qyifd0b\", \"p0rgwbggx0jlx69c8rr0hisa357ev6ghpvynrm26a83a5ju1j4qrdntadwqvyeepxipn6rw2srlh9jn8p0r5yskl3jvkn6bsyrpcmhgqmw0h0lgp26qdo47fcq98mfdrrt94qdrj6nwqwp9os8cf60\", \"psvdfgmoie86o54g5ruezznjxqbw8d0qfz9l5gb6h035ufb89znncx181mlhcppeaec5z1hkj0l057bcomt\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"4l54dxgfi3971k7eju3s84vbk6cv5af64hflwiyv7gg2w3ql8f5xoewhzs8g9n5duw2jmxpvv62gugg54\", \"l4zo7h4rabysomzze0pu7e7lhcp73h9i55q1ui2h76npa3e0uf8ed7fcwmhwemsvp9beqboxlmn4e\", \"1bfqu12sqe5y3hbigxcsducq9wckcs3i012yo72leekuafr9ofef9tpbr76521hbue5kyvirsyvofc4uy3e1zgwfotf2zr6ktifwlaphim69q82oztn373lwld9s\", \"dzgwps25ej5zshyg4a\", \"pswji1h8hut928ws0ll91wts287j9k57zc6ldfyvmhuxydsu3o3gdkpxqne3n41foiapntjwsac6311nkyqrn9zivv314e4a1p99em223xxay2yzy2q0jn1m0yqdkb0jak204vhie66vx8r1a6mi1f5jaqe3jz\", \"1jydye3b8b6vzxjudwm5ozjn72fwcjb8kavknh43w2740qc8jzigbqm21i4hw9fexq4xhkdl9q1dju08jx5wpivjz3gf4pbtr6itpicc9j86xb9ez93hk33su2ozkze4hb8zmbvouqtie3s32fuq50ak012t2rir9waxl2jla26udw\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"ld1tkh568qljv28\", \"gjsg6hudrmovtqnxhgejvfyp9afstmef9w0zce8pfuyp1ivohkti7mrdeu1j18gvfxdrqbxmxjpq6z7d06t0obx1ry6i09bbopigwddtu6xoty25zyct0qbchg383qcc75orrn7evw2g95aj6kkd7w2bs4az99udnpp6emo8eopimuwop77t40mph8hp3\", \"nbsdrkry3g7d\", \"y108r5yoffkx8c1dysytrpcar0ukalu2f4ouaun1idtrfx4kagy8reewy23r7068crl18unx9wsv4upv1ztrearr8bltgoq4\", \"a6ysslehlp6quwixv1sij2iyi3mj8b0l55idztrxjybko58f8caxhkgiwkli8ty1afrv9zj1dy25p885tzygn6pmykg2mf1fc9cy5ebwdqusdiy1pvu168t9xm7ttxocb5jvnu9jc6c18ibdhs06w85hl\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"be87173av8dfi89g4iff04ioa4a7xzfmp6v41kskaqr96\" ]\n    } ],\n    \"service\" : \"c275ty43sp6y6o5lf2imeitpf3ipbixz2726sysjuxqg2smcucag9wmhba0vi35tvjwes43gd1\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4a254048-498d-4f34-89a9-649fdcea3006",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.387949Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.clientGateways.getIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "auditConfigs" : {
                "description" : "Specifies cloud audit logging configuration for this policy.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleIamV1AuditConfig"
                },
                "type" : "array"
              },
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleIamV1Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "7ff6f59b-1f51-49fd-9e73-ad130dd1c14a",
    "name" : "Creates a new ClientGateway in a given project and location.",
    "request" : {
      "urlPath" : "/v1/on94fhoftl2nv/clientGateways",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Belva Terry PhD\",\n  \"error\" : {\n    \"code\" : 292817591,\n    \"details\" : [ { }, { }, { } ],\n    \"message\" : \"Dolor deleniti aspernatur recusandae. Doloremque repellendus nulla dolor delectus molestiae consequuntur. Enim voluptas magnam eius facilis aperiam autem.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7ff6f59b-1f51-49fd-9e73-ad130dd1c14a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.386334Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.clientGateways.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "094e1e7e-19b6-440b-8f6e-1f99f7a62798",
    "name" : "Lists ClientGateways in a given project and location.",
    "request" : {
      "urlPath" : "/v1/5ripfrkk59n/clientGateways",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"unreachable\" : [ \"6ee0c3nsyhv9w2dec29airpdt6xlrpp93p5mu18r76ycg6dxf8c0dxbce9elyhw1tibdqk7liw1e7ggyk4ymlmw0nf4lzxz52ac2eo4cu302jrw6j6mv1hg8rsvymd\", \"jy3ljpkgl\", \"oxdt1h79dwj0ohnwisg5q90soqgwo5ym4cwi02k6yvh28fhp\", \"yxrf4ymjsm4b6fumttu5x3oo70j3\" ],\n  \"clientGateways\" : [ {\n    \"clientConnectorService\" : \"gzssptdfsqg07uvofc2mbrpsl71jfklarj5ooa4s30evh2g5w9scmr2m6xhd9ylidhd8qgkr73x9cdrp5iovt16j9pg2lo83efanjogk2d5gnb33u9yrh445inb\",\n    \"createTime\" : \"2022-09-03T12:03:13.385586Z\",\n    \"name\" : \"Alta Huels\",\n    \"updateTime\" : \"2022-09-27T09:36:13.385647Z\",\n    \"id\" : \"7852\",\n    \"state\" : \"ERROR\"\n  }, {\n    \"clientConnectorService\" : \"4286l973fu5rx2675x656v5y9fid0iex601ccfu4e13uix1h911xf0him\",\n    \"createTime\" : \"2022-11-09T11:00:13.385767Z\",\n    \"name\" : \"Willy Quitzon\",\n    \"updateTime\" : \"2022-04-09T10:24:13.385826Z\",\n    \"id\" : \"1u2p\",\n    \"state\" : \"ERROR\"\n  }, {\n    \"clientConnectorService\" : \"cgugjnm424jbf6ylq3dmvofbc8eroad96icbpmixuqdwmi0z9oqjet3n7u9iajhlzgca2d58ic1qneba5ruq5b4hpdxsck8lktiy9nhkn2hm7z783j6k43k3\",\n    \"createTime\" : \"2022-11-12T11:01:13.385937Z\",\n    \"name\" : \"Mrs. Randi Brown\",\n    \"updateTime\" : \"2023-02-14T08:48:13.386003Z\",\n    \"id\" : \"a25c\",\n    \"state\" : \"STATE_UNSPECIFIED\"\n  } ],\n  \"nextPageToken\" : \"vtkgx7o6dqlpx97vwdgwuxw6ve125fxnhcyt578slkak4wwv7x5pcd08hct743yli3dsfz1yhk3tv73nb4t2baarwmtg4uy0drab9am4tti72yinmuy9o8vbgbrxietujkrrlpq4jcsw412ovqkfsf5p6gnm9xwju5ko3678h472mo3dnp00q0ddtlizf21dwfsq\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "094e1e7e-19b6-440b-8f6e-1f99f7a62798",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.38617Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.clientGateways.list",
          "schema" : {
            "description" : "Message for response to listing ClientGateways.",
            "properties" : {
              "clientGateways" : {
                "description" : "The list of ClientGateway.",
                "items" : {
                  "$ref" : "#/components/schemas/ClientGateway"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token identifying a page of results the server should return.",
                "type" : "string"
              },
              "unreachable" : {
                "description" : "Locations that could not be reached.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "0dcb4727-1093-4649-a86a-1963d32f7956",
    "name" : "Creates a new ClientConnectorService in a given project and location.",
    "request" : {
      "urlPath" : "/v1/67cfmv3bm7z7t0vkxvweg04tt3jlohn1s3ts6j5a2xjaii3xqno6vcnjxnz5h4h1xc0ty0b9nonl38scldprlhwyoqokwexpm170dbnv49j5lutqhfuao41vhlr5frwa6wgrd2vm6bewh5i723g1tg4x85c4chx3u7gctl6jcc2kpx4aq3re5ihyzsnxxikxu/clientConnectorServices",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Mrs. Neville Hintz\",\n  \"error\" : {\n    \"code\" : 1136717194,\n    \"details\" : [ { }, { }, { }, { }, { } ],\n    \"message\" : \"Rerum quas dolorem non doloremque sed libero. Et voluptatibus et repudiandae nihil soluta. Expedita cum quo eius quibusdam nesciunt omnis.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0dcb4727-1093-4649-a86a-1963d32f7956",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.385508Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.clientConnectorServices.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "0b1daae5-2326-43a5-9c4e-1d11183b92b0",
    "name" : "Lists ClientConnectorServices in a given project and location.",
    "request" : {
      "urlPath" : "/v1/exww0sxtug66or4wyr4u2ggexec0l42k1y1ejj6bcomnv25rh37re8808quhcjz9x4mf9arioxr24hr3wcc5p2jhq5z88wgmaas70j1u2sieg1vmtcbswkp6tos1xic3slqdszgbzs11r/clientConnectorServices",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"unreachable\" : [ \"zhc3wax3yorrsnxdstr58iuknbbxc5mpc4y4cfsk4y8azrr0v7i8cgr05sgbudtta1znaan1nnlld1304cllw2je6epgmzzrkcyi2g45jrwcbj198dlzpg5xplwe\", \"7fkj85wnjkal5n5c3lyelqg6gix1uaw9oofwvd95km7ye4sbu26eeq154fxwpynfqqe9reim3fm0doztgu95ugc4rsjy9tljgmcm4fjy7elsxk\", \"6w36o9umebwwzomfc6oa0z0q24kgldrpc5pjaw4f3uc1muje4pvn5288v858mj334nhcuacewsjv8ashwcl92kxt5ditqsdza32h64qok1cuherf4uu14nxb\", \"jg5jelug9ngy9u5ydzkwhm4hf7cregrrv8prmfoq5z5d6778syvy4zz3ctkgjijo7lj9hgdhrsyttgu9p1ea0yb0fqjb0nhuiaof8teugfjppilx3vubjtlmkkrooei0hd8cf1\", \"ycabz4s14mdszr0ing7v3zsqrodo3dkb3pme32ni9lt8gjquzzi1njmlm\", \"u93pnq2s27jvns1l4vfm9q0zd5qck9xm6kp9pfinvt7cstykbrlzje7ng21dghj0q7n\", \"adeiigxao7vaipurrc7fcq0381z01updola3ofxoko02zz574x1sw7yjk5k2t1g9p7fkbbv\" ],\n  \"nextPageToken\" : \"rhcv99cnbgz0ndo7ic5u5fl6xln65zt99xp0szp60q2kngl9ib5bo5yhkwfy1s4mk0235afa70r0kku6o3hhzi6v3dbr9lrnbmu1fmwjiikk3app9b4co2nc\",\n  \"clientConnectorServices\" : [ {\n    \"ingress\" : {\n      \"config\" : {\n        \"destinationRoutes\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"transportProtocol\" : \"TCP\"\n      }\n    },\n    \"createTime\" : \"2022-07-07T11:45:13.384396Z\",\n    \"displayName\" : \"Dr. Yang Kemmer\",\n    \"name\" : \"Junita Harris\",\n    \"updateTime\" : \"2022-06-06T11:07:13.384503Z\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"egress\" : {\n      \"peeredVpc\" : {\n        \"networkVpc\" : \"pgiviwwjxr1cyxkuudwx142fgeza2z4li3srune5ywl1ymtvau2lqp33n6181vfl2b0rgjblnbu4eaaawqjqfmda1tzdubwg3g37pdspm4xg50n3cpry\"\n      }\n    }\n  }, {\n    \"ingress\" : {\n      \"config\" : {\n        \"destinationRoutes\" : [ { }, { } ],\n        \"transportProtocol\" : \"TCP\"\n      }\n    },\n    \"createTime\" : \"2022-07-26T11:05:13.384579Z\",\n    \"displayName\" : \"Mr. Marquetta O'Conner\",\n    \"name\" : \"Thomasena Williamson\",\n    \"updateTime\" : \"2022-06-21T12:12:13.384685Z\",\n    \"state\" : \"RUNNING\",\n    \"egress\" : {\n      \"peeredVpc\" : {\n        \"networkVpc\" : \"3nexfrsbm40m87md3xt6wa8ll84l8yiwp9ab228zk9nyofvmvshtm0iiq4swjb1uhoqzs0lfd9sq6u51bongof6bznzqiy436fza\"\n      }\n    }\n  }, {\n    \"ingress\" : {\n      \"config\" : {\n        \"destinationRoutes\" : [ { }, { }, { }, { }, { }, { } ],\n        \"transportProtocol\" : \"TCP\"\n      }\n    },\n    \"createTime\" : \"2022-05-26T08:54:13.384762Z\",\n    \"displayName\" : \"Jeraldine Moen\",\n    \"name\" : \"Barton Fahey I\",\n    \"updateTime\" : \"2022-04-01T09:55:13.384859Z\",\n    \"state\" : \"ERROR\",\n    \"egress\" : {\n      \"peeredVpc\" : {\n        \"networkVpc\" : \"hwpva5rmqofcokcwq44qd7u5kke18ynbu5qrdcenmazumzv0344u4jxqjmcs8n9cs5drzye9s4g2gjh674tcnkj6lpxy6e40j7c3xncc0d9n7rhtt5vz8z680uzqiogjq06w604nib2dez9mzvmtujc5aw0ud\"\n      }\n    }\n  }, {\n    \"ingress\" : {\n      \"config\" : {\n        \"destinationRoutes\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"transportProtocol\" : \"TCP\"\n      }\n    },\n    \"createTime\" : \"2022-11-07T10:10:13.384939Z\",\n    \"displayName\" : \"Cordie Moore\",\n    \"name\" : \"Cherilyn Bernier\",\n    \"updateTime\" : \"2022-06-12T12:15:13.385046Z\",\n    \"state\" : \"UPDATING\",\n    \"egress\" : {\n      \"peeredVpc\" : {\n        \"networkVpc\" : \"0ksxsiwzvccbipiup8lxvgkmxg6bvsauzaru7eauzhx44okmcdrx52eh5j6mwwlcqsh3xsmjob516aios56e162h3ujq063nhryqwmy510hzd9g1mgy\"\n      }\n    }\n  }, {\n    \"ingress\" : {\n      \"config\" : {\n        \"destinationRoutes\" : [ { } ],\n        \"transportProtocol\" : \"TCP\"\n      }\n    },\n    \"createTime\" : \"2022-05-22T10:08:13.385116Z\",\n    \"displayName\" : \"Darius Stamm\",\n    \"name\" : \"Dr. Chad Bins\",\n    \"updateTime\" : \"2022-07-16T11:21:13.385221Z\",\n    \"state\" : \"ERROR\",\n    \"egress\" : {\n      \"peeredVpc\" : {\n        \"networkVpc\" : \"evd973r0o7d6jizacfyhbnu5l50rdlwc2yw4nq0v0\"\n      }\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0b1daae5-2326-43a5-9c4e-1d11183b92b0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.385336Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.clientConnectorServices.list",
          "schema" : {
            "description" : "Message for response to listing ClientConnectorServices.",
            "properties" : {
              "clientConnectorServices" : {
                "description" : "The list of ClientConnectorService.",
                "items" : {
                  "$ref" : "#/components/schemas/ClientConnectorService"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token identifying a page of results the server should return.",
                "type" : "string"
              },
              "unreachable" : {
                "description" : "Locations that could not be reached.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "ead1f02a-b3d4-4cca-aeb8-2c7c8d31f5ef",
    "name" : "Creates a new AppGateway in a given project and location.",
    "request" : {
      "urlPath" : "/v1/wqpxbptp4p/appGateways",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Patrina Gleichner MD\",\n  \"error\" : {\n    \"code\" : 442752824,\n    \"details\" : [ { }, { }, { }, { } ],\n    \"message\" : \"Eum rem in optio velit repudiandae odio. Culpa saepe similique aut accusamus ab. Incidunt beatae impedit accusamus non temporibus.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ead1f02a-b3d4-4cca-aeb8-2c7c8d31f5ef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.384277Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.appGateways.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "663c326e-1a83-48cf-a477-5f3299384fda",
    "name" : "Lists AppGateways in a given project and location.",
    "request" : {
      "urlPath" : "/v1/xdw1o86glsjnaj66o2ub1nz7zb6pee5t5yrdcrar3gyrnntscv2rxzwdvwddtnz91l2imwrctbmslrj5gw4h4rf5pd2l4uxaztnfwzuqjo1jatwzcsfzf3a9w7hc35k87e4pstqph3gwh72o6winx39w4huvnykxnu3k0cg5apg/appGateways",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"appGateways\" : [ {\n    \"uid\" : \"pa09\",\n    \"allocatedConnections\" : [ {\n      \"ingressPort\" : 505547290,\n      \"pscUri\" : \"https://web.example.mocklab.io/541758\"\n    } ],\n    \"createTime\" : \"2022-11-16T10:42:13.381327Z\",\n    \"displayName\" : \"Sierra Gusikowski MD\",\n    \"hostType\" : \"GCP_REGIONAL_MIG\",\n    \"name\" : \"Mrs. Wilford Rutherford\",\n    \"updateTime\" : \"2022-10-09T09:46:13.381447Z\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"type\" : \"TCP_PROXY\",\n    \"uri\" : \"https://web.example.mocklab.io/318839\",\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"g016\",\n    \"allocatedConnections\" : [ {\n      \"ingressPort\" : 143814148,\n      \"pscUri\" : \"https://web.example.mocklab.io/292526\"\n    }, {\n      \"ingressPort\" : 318421452,\n      \"pscUri\" : \"https://web.example.mocklab.io/276096\"\n    }, {\n      \"ingressPort\" : 1504782078,\n      \"pscUri\" : \"https://web.example.mocklab.io/178830\"\n    } ],\n    \"createTime\" : \"2022-11-23T12:09:13.381833Z\",\n    \"displayName\" : \"Katharine Kling\",\n    \"hostType\" : \"GCP_REGIONAL_MIG\",\n    \"name\" : \"Andrew Altenwerth DDS\",\n    \"updateTime\" : \"2023-01-09T09:24:13.381946Z\",\n    \"state\" : \"UPDATING\",\n    \"type\" : \"TYPE_UNSPECIFIED\",\n    \"uri\" : \"https://web.example.mocklab.io/983860\",\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"p640\",\n    \"allocatedConnections\" : [ {\n      \"ingressPort\" : 1499601236,\n      \"pscUri\" : \"https://web.example.mocklab.io/310537\"\n    }, {\n      \"ingressPort\" : 1398161391,\n      \"pscUri\" : \"https://web.example.mocklab.io/480233\"\n    }, {\n      \"ingressPort\" : 976495600,\n      \"pscUri\" : \"https://web.example.mocklab.io/265748\"\n    } ],\n    \"createTime\" : \"2023-02-09T12:09:13.382321Z\",\n    \"displayName\" : \"Dr. Kirk Murphy\",\n    \"hostType\" : \"HOST_TYPE_UNSPECIFIED\",\n    \"name\" : \"Jerrica Doyle\",\n    \"updateTime\" : \"2022-07-19T12:00:13.382437Z\",\n    \"state\" : \"DOWN\",\n    \"type\" : \"TCP_PROXY\",\n    \"uri\" : \"https://web.example.mocklab.io/668680\",\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"gwf3\",\n    \"allocatedConnections\" : [ {\n      \"ingressPort\" : 1983577966,\n      \"pscUri\" : \"https://web.example.mocklab.io/613920\"\n    }, {\n      \"ingressPort\" : 71965375,\n      \"pscUri\" : \"https://web.example.mocklab.io/912978\"\n    }, {\n      \"ingressPort\" : 1714916224,\n      \"pscUri\" : \"https://web.example.mocklab.io/713054\"\n    }, {\n      \"ingressPort\" : 1080315986,\n      \"pscUri\" : \"https://web.example.mocklab.io/854599\"\n    }, {\n      \"ingressPort\" : 1217497899,\n      \"pscUri\" : \"https://web.example.mocklab.io/615662\"\n    } ],\n    \"createTime\" : \"2022-07-06T12:11:13.382932Z\",\n    \"displayName\" : \"Julius Beahan DDS\",\n    \"hostType\" : \"HOST_TYPE_UNSPECIFIED\",\n    \"name\" : \"Ms. Kym Abbott\",\n    \"updateTime\" : \"2023-03-09T09:59:13.38305Z\",\n    \"state\" : \"CREATING\",\n    \"type\" : \"TCP_PROXY\",\n    \"uri\" : \"https://web.example.mocklab.io/513269\",\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"xzww\",\n    \"allocatedConnections\" : [ {\n      \"ingressPort\" : 390918553,\n      \"pscUri\" : \"https://web.example.mocklab.io/231929\"\n    }, {\n      \"ingressPort\" : 1894923732,\n      \"pscUri\" : \"https://web.example.mocklab.io/473051\"\n    }, {\n      \"ingressPort\" : 1491237731,\n      \"pscUri\" : \"https://web.example.mocklab.io/043246\"\n    }, {\n      \"ingressPort\" : 1538494344,\n      \"pscUri\" : \"https://web.example.mocklab.io/947549\"\n    }, {\n      \"ingressPort\" : 96866888,\n      \"pscUri\" : \"https://web.example.mocklab.io/712583\"\n    }, {\n      \"ingressPort\" : 996025535,\n      \"pscUri\" : \"https://web.example.mocklab.io/168557\"\n    }, {\n      \"ingressPort\" : 1373199828,\n      \"pscUri\" : \"https://web.example.mocklab.io/523339\"\n    }, {\n      \"ingressPort\" : 1152526728,\n      \"pscUri\" : \"https://web.example.mocklab.io/264667\"\n    } ],\n    \"createTime\" : \"2022-04-12T09:07:13.383735Z\",\n    \"displayName\" : \"Tasha Gutkowski I\",\n    \"hostType\" : \"GCP_REGIONAL_MIG\",\n    \"name\" : \"Beulah Olson MD\",\n    \"updateTime\" : \"2023-01-19T11:53:13.383853Z\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"type\" : \"TCP_PROXY\",\n    \"uri\" : \"https://web.example.mocklab.io/078335\",\n    \"labels\" : { }\n  } ],\n  \"unreachable\" : [ \"m4yh2qhkeya6c4lap3tntzkkoav4vetpp4daa4wj95xyds3oal95zqdopp4375vgw16y5ldjkygyo0dgo65w6vo94s\", \"qkz2g3c8s221mtgfsy9249xxp26v2elezuvq1mgqo0bjn5jz1pplr8icbheac65yorhifkou92eb3mokr5dzi4u5rvu4rybecr0qwv83yxw9isdk2\", \"lc070hme8ttf4pjhhxha002jl6ymwu527lnkyi25bbepydlylkedbll3ep18r3v3ejzue4o8z7uor\" ],\n  \"nextPageToken\" : \"30kx0saq9jj5ikuhqgk14qqz6sxivoaegvp2gtnc0ahnmbvaagv5uiey3mdfeaifugfa1t3hhngrgw0jvrsjctoqwksyknlhhn0jris1r84wkyinofjrw1ovt8etnk8t4sxrqo1znn4pui6zyu3h79rs58ajto6mnv586yn442t0irozs9xq5m\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "663c326e-1a83-48cf-a477-5f3299384fda",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.384087Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.appGateways.list",
          "schema" : {
            "description" : "Response message for BeyondCorp.ListAppGateways.",
            "properties" : {
              "appGateways" : {
                "description" : "A list of BeyondCorp AppGateways in the project.",
                "items" : {
                  "$ref" : "#/components/schemas/AppGateway"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              },
              "unreachable" : {
                "description" : "A list of locations that could not be reached.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "c823bf6f-3996-44c0-9f44-68b8c3c75386",
    "name" : "Creates a new AppConnector in a given project and location.",
    "request" : {
      "urlPath" : "/v1/lj04ekw62zz6iwh9mjbwwoknwag5hxy0doiqpra20q6rfaey99k01kz9d2ogt5ns5hqowxexk1vcjyz7gtrkeemxdlv0n8unbt/appConnectors",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Cari Jaskolski\",\n  \"error\" : {\n    \"code\" : 459091414,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Earum hic non. Ut officiis et culpa quo magni ex quia. Est magnam veritatis. Sint sed sint occaecati autem. Quam quibusdam perspiciatis aperiam dolor.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c823bf6f-3996-44c0-9f44-68b8c3c75386",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.381136Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.appConnectors.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "5d1d8f7e-f19a-49c2-b84b-45f5d38fb9a8",
    "name" : "Lists AppConnectors in a given project and location.",
    "request" : {
      "urlPath" : "/v1/jedh840n98wnrscni61294mxgm76qsu4a3rq01c7wd33w9kqc82s4sdetg60go000q017x0u5dwv1l92cdrfowf0yvq849yo7yrswb4pmjgfh4k6iedbcp3w97gqtzb6x5sicbmbw5kw8b1f1rifs66e37qpkboz/appConnectors",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"unreachable\" : [ \"dcy8ko\", \"90o0rr200hbfa7pevjv3rncydlia6wyjbyoahtbwmhx9pn637pqri6crflgb9ul3prutlb018h2kkdkfr3s5sze48m42dzjnika8z0ta85l12a7hyzuybyrwqmw11vlku8bgy1q53pjky5b4pgju\", \"tx5zasngqb2lh68lm192337ngluzl0lphd7lpurp2alhsjw10ctoc9iinz4osh88od8hxgbgwgyo\", \"eiq8soxw2e7gtzakg6ilyj7gsasrgcwuifu7tdk8ttk88gcl0nwx2qa2la24tkw6m64w47knlbt8kpz0do3t6x8hlfq3riok2e8kmo\" ],\n  \"appConnectors\" : [ {\n    \"uid\" : \"3xj3\",\n    \"createTime\" : \"2022-09-07T09:26:13.376008Z\",\n    \"displayName\" : \"Carline Gleichner\",\n    \"name\" : \"Brice Pouros\",\n    \"updateTime\" : \"2022-09-29T10:01:13.37612Z\",\n    \"state\" : \"DELETING\",\n    \"principalInfo\" : {\n      \"serviceAccount\" : {\n        \"email\" : \"kqecfykmgx25c01w3\"\n      }\n    },\n    \"resourceInfo\" : {\n      \"sub\" : [ {\n        \"sub\" : [ { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"515h\",\n        \"time\" : \"2022-04-21T11:50:13.376262Z\",\n        \"status\" : \"HEALTH_STATUS_UNSPECIFIED\"\n      }, {\n        \"sub\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"iz6g\",\n        \"time\" : \"2022-04-21T11:32:13.376393Z\",\n        \"status\" : \"UNHEALTHY\"\n      }, {\n        \"sub\" : [ { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"es0r\",\n        \"time\" : \"2023-02-03T10:07:13.376511Z\",\n        \"status\" : \"HEALTHY\"\n      }, {\n        \"sub\" : [ { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"eau6\",\n        \"time\" : \"2022-12-30T11:24:13.376636Z\",\n        \"status\" : \"UNRESPONSIVE\"\n      }, {\n        \"sub\" : [ { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"ehxf\",\n        \"time\" : \"2023-02-26T08:24:13.376752Z\",\n        \"status\" : \"UNRESPONSIVE\"\n      }, {\n        \"sub\" : [ { } ],\n        \"resource\" : { },\n        \"id\" : \"f4hf\",\n        \"time\" : \"2022-09-21T09:14:13.376868Z\",\n        \"status\" : \"HEALTHY\"\n      }, {\n        \"sub\" : [ { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"nv28\",\n        \"time\" : \"2022-06-25T11:04:13.376992Z\",\n        \"status\" : \"UNRESPONSIVE\"\n      } ],\n      \"resource\" : { },\n      \"id\" : \"pgj6\",\n      \"time\" : \"2022-10-14T12:07:13.377111Z\",\n      \"status\" : \"UNRESPONSIVE\"\n    },\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"391e\",\n    \"createTime\" : \"2022-10-01T11:43:13.377233Z\",\n    \"displayName\" : \"Brenton Koch\",\n    \"name\" : \"Philomena Sanford\",\n    \"updateTime\" : \"2022-10-07T10:16:13.37734Z\",\n    \"state\" : \"CREATED\",\n    \"principalInfo\" : {\n      \"serviceAccount\" : {\n        \"email\" : \"urpl256sozawgu8180fosaj8b47v2cmt5gowr3aj5eqkc536ilsccfjsm780ne4r7alqavklfz24fwbi6ethosyygjn0tm5cdmkjcmd\"\n      }\n    },\n    \"resourceInfo\" : {\n      \"sub\" : [ {\n        \"sub\" : [ { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"8jqc\",\n        \"time\" : \"2022-03-15T09:21:13.377478Z\",\n        \"status\" : \"HEALTHY\"\n      }, {\n        \"sub\" : [ { }, { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"odrq\",\n        \"time\" : \"2023-02-12T10:55:13.377608Z\",\n        \"status\" : \"HEALTH_STATUS_UNSPECIFIED\"\n      }, {\n        \"sub\" : [ { } ],\n        \"resource\" : { },\n        \"id\" : \"b2y1\",\n        \"time\" : \"2022-05-10T11:19:13.377724Z\",\n        \"status\" : \"HEALTHY\"\n      } ],\n      \"resource\" : { },\n      \"id\" : \"z710\",\n      \"time\" : \"2023-01-11T08:56:13.377835Z\",\n      \"status\" : \"HEALTHY\"\n    },\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"77c8\",\n    \"createTime\" : \"2022-09-01T08:56:13.37795Z\",\n    \"displayName\" : \"Fred Cassin\",\n    \"name\" : \"Katrina Bosco\",\n    \"updateTime\" : \"2022-07-06T11:29:13.378057Z\",\n    \"state\" : \"UPDATING\",\n    \"principalInfo\" : {\n      \"serviceAccount\" : {\n        \"email\" : \"hhwijns7jm6u7p5bqii9uwi14nqxqmbnvte405n3j2mbbc70r9jes2xzrlbsswik81cy3tvk26gp91rjlqftqpaxktqatqfy0zpr63rwtjqbmh0pf3wuumqjyvoeo5sp31nscmw14nhtncqanyn3cgctujiglx9949ls2zdcqk6chtmmzq8vep1i4h2d9tdmk9ybelb\"\n      }\n    },\n    \"resourceInfo\" : {\n      \"sub\" : [ {\n        \"sub\" : [ { }, { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"lt62\",\n        \"time\" : \"2023-01-19T08:44:13.378199Z\",\n        \"status\" : \"UNRESPONSIVE\"\n      } ],\n      \"resource\" : { },\n      \"id\" : \"6hmx\",\n      \"time\" : \"2022-11-27T09:21:13.378311Z\",\n      \"status\" : \"UNRESPONSIVE\"\n    },\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"h431\",\n    \"createTime\" : \"2022-03-16T08:50:13.378425Z\",\n    \"displayName\" : \"Darius Homenick\",\n    \"name\" : \"Celeste Beer I\",\n    \"updateTime\" : \"2022-09-10T11:22:13.378533Z\",\n    \"state\" : \"DOWN\",\n    \"principalInfo\" : {\n      \"serviceAccount\" : {\n        \"email\" : \"v13d\"\n      }\n    },\n    \"resourceInfo\" : {\n      \"sub\" : [ {\n        \"sub\" : [ { }, { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"55p6\",\n        \"time\" : \"2022-10-04T12:10:13.378665Z\",\n        \"status\" : \"HEALTHY\"\n      }, {\n        \"sub\" : [ { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"w094\",\n        \"time\" : \"2023-01-04T09:53:13.378778Z\",\n        \"status\" : \"UNRESPONSIVE\"\n      }, {\n        \"sub\" : [ { }, { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"9u69\",\n        \"time\" : \"2022-12-16T11:18:13.378903Z\",\n        \"status\" : \"UNHEALTHY\"\n      }, {\n        \"sub\" : [ { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"w3j6\",\n        \"time\" : \"2022-07-07T10:37:13.379013Z\",\n        \"status\" : \"UNRESPONSIVE\"\n      }, {\n        \"sub\" : [ { }, { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"bpt2\",\n        \"time\" : \"2023-02-02T11:45:13.379132Z\",\n        \"status\" : \"HEALTH_STATUS_UNSPECIFIED\"\n      }, {\n        \"sub\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"m2no\",\n        \"time\" : \"2022-07-08T08:48:13.379259Z\",\n        \"status\" : \"HEALTHY\"\n      } ],\n      \"resource\" : { },\n      \"id\" : \"53wa\",\n      \"time\" : \"2023-02-24T10:09:13.379374Z\",\n      \"status\" : \"UNHEALTHY\"\n    },\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"yzt0\",\n    \"createTime\" : \"2023-01-16T09:26:13.379492Z\",\n    \"displayName\" : \"Cecila McClure\",\n    \"name\" : \"Zachary Lakin\",\n    \"updateTime\" : \"2022-06-21T08:33:13.379594Z\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"principalInfo\" : {\n      \"serviceAccount\" : {\n        \"email\" : \"499bho1zuchuf710p5uqpjjyggy1b1k62pn6p6h72zxbmfqx470x70r9p8mk9f9xn5w2rf9y6ompwv7mb\"\n      }\n    },\n    \"resourceInfo\" : {\n      \"sub\" : [ {\n        \"sub\" : [ { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"faul\",\n        \"time\" : \"2022-05-31T09:17:13.37974Z\",\n        \"status\" : \"UNHEALTHY\"\n      }, {\n        \"sub\" : [ { }, { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"6f88\",\n        \"time\" : \"2022-09-11T11:35:13.379853Z\",\n        \"status\" : \"UNHEALTHY\"\n      }, {\n        \"sub\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"8ad8\",\n        \"time\" : \"2022-07-17T09:00:13.379975Z\",\n        \"status\" : \"DEGRADED\"\n      }, {\n        \"sub\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"xyq4\",\n        \"time\" : \"2022-04-13T10:26:13.380093Z\",\n        \"status\" : \"UNRESPONSIVE\"\n      }, {\n        \"sub\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"5j27\",\n        \"time\" : \"2022-06-16T10:16:13.380213Z\",\n        \"status\" : \"HEALTH_STATUS_UNSPECIFIED\"\n      }, {\n        \"sub\" : [ { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"3z52\",\n        \"time\" : \"2023-02-15T10:15:13.380342Z\",\n        \"status\" : \"UNHEALTHY\"\n      }, {\n        \"sub\" : [ { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"wtl9\",\n        \"time\" : \"2022-05-24T11:24:13.380457Z\",\n        \"status\" : \"UNHEALTHY\"\n      }, {\n        \"sub\" : [ { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"k618\",\n        \"time\" : \"2023-02-27T09:59:13.380582Z\",\n        \"status\" : \"HEALTH_STATUS_UNSPECIFIED\"\n      } ],\n      \"resource\" : { },\n      \"id\" : \"u65e\",\n      \"time\" : \"2023-02-01T08:59:13.380697Z\",\n      \"status\" : \"UNHEALTHY\"\n    },\n    \"labels\" : { }\n  } ],\n  \"nextPageToken\" : \"f1jcrsc3b6fjw6\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5d1d8f7e-f19a-49c2-b84b-45f5d38fb9a8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.380911Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.appConnectors.list",
          "schema" : {
            "description" : "Response message for BeyondCorp.ListAppConnectors.",
            "properties" : {
              "appConnectors" : {
                "description" : "A list of BeyondCorp AppConnectors in the project.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleCloudBeyondcorpAppconnectorsV1AppConnector"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              },
              "unreachable" : {
                "description" : "A list of locations that could not be reached.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "3ff464b6-9422-448c-b711-7f8672007473",
    "name" : "Resolves AppConnections details for a given AppConnector. An internal method cal...",
    "request" : {
      "urlPath" : "/v1/tno3taiirr427raiz3r1ugaqf3jujee1kt92mojjp82plo206hcbczpk9shgu2xud2g9yv6zhelhnwx2pl95l08n5v3hzfg23pz9rch74za/appConnections:resolve",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"unreachable\" : [ \"lksiknomhu3u6ijbc9ddiqnzy3uzi3ur4m94suj1k4xkzg6p7pv48dg2dimo1788g9i0taw1wk5xtmzp31gnwac4ql2hjlts6zbahpl1wei80m6f9931ppfjuoasz374g6l2lt7l84hzj\", \"mldcfwff0k\" ],\n  \"nextPageToken\" : \"2eq6jz9chr3kf8eycm806fvup4e7zktp00s4ykegrahis51iq1xqky7abf4f7q9mbhdclzzgri0ahtu2838cw3pvjtx09m3itsukyano8vzjpe3\",\n  \"appConnectionDetails\" : [ {\n    \"recentMigVms\" : [ \"kj4e90u3l96ojg3y1ivcvy3bx6ewbd8vny60sgwhlvve1hi5zaoe3wcjk7xqk0tc92onmmtrro9h2vht\", \"17d9emin20uadbt3npfgkqwv3pxojn17s4l0yea24w3ao47ybias22qly52gdblcibwgbcdkvx5tadvy95z4uf9yd7pyz18kg2jpoop3ia7axdr7095413l4zkzco72we5l5yy\", \"i094yc3353hz6re3ay4uwo7bm0mifhzeya600vavq\", \"qc9f4a2zerz4ip7ihqydi1vgvukkzv2y8ex49p3m401v31w80mmkrg2zwapzvc3sdqef\", \"jq7uvqqkc49p3lu10fk4n7grupfkoh8v8j9zgyi3fqc7qklrq7iaaevnbqyp19e2ecrbfx3un6t1nb23om9ply03419swg749p1ujjhfinzq76\", \"2oiqatdz8i7u91i9vpd12n0hulp440krfgr77icld9bhx28ovrfm6g4k8iqcwjob\" ],\n    \"appConnection\" : {\n      \"uid\" : \"s47u\",\n      \"connectors\" : [ \"t2fx2ywlrc1icp1q9iw52f9x4k70tgyol1lxebzetlim\", \"9dq55bjxx0aqyyer3jbt9fi2b2lpuas5wfulzf8n92hhavn912618sgnwdxrelorpf6kgg3bbfzryqk3qwjclepwp5fz8xa6j8dehbo\", \"orrmtn1y0mrucqn5zj73lr6bcbzgybxiybqk9qe5a57jctr3bxqzzz2712xwlv4its2lvppnyq7dnaurnfg2a2d3qemmu\", \"twquszu5znetzbjavr89124c0i7qn1zcji79yqwgk594kod6oylba8bgdmdnc0zmn9gwtotx3ps4t20c6vqiezc71ame0d5a0m7dbpa\", \"t1aj6cpxepvx0z1yd3sllthyse8owk9jtde1kvnyx9vz3nwraxj5amhwuou48zdlcqdn4bn9fj3bx7y7kmen13ix2vmhxrxcph2y8dcdewg1phdtajfkontt4a415dt26l6ay67agf8przrtan8ky\", \"d80911em0lyuz14mqtdpc364gtcru9llnn153zqh1m63ahmzgsdbahzf5f829eh19rgb61ddj4m5bgpmgm537r5xoihvftrxbw39tekbdg5bg04l5fy0p85wadoqpbf6wysibm1ikfp0a4f2rn8ehh2t3k10tnak1lsm62a37rgu2le13ir1jkkn2\", \"urlcl2fytsx0otqi4113a06so0vidntdbk961dezfb1zeqv5pk9\" ],\n      \"createTime\" : \"2022-04-05T10:49:13.373708Z\",\n      \"applicationEndpoint\" : {\n        \"port\" : 1896553666,\n        \"host\" : \"euu0h8n0k7g25ty77gb8p7n6fpx0a6uu6blcbu9kyo999k3hmu31i48chkjbybzdoamodgiqcs2pe5s29vzptg9k81z2lkmu\"\n      },\n      \"displayName\" : \"Cordell Langworth\",\n      \"name\" : \"Sebastian Graham\",\n      \"updateTime\" : \"2023-03-02T11:08:13.373843Z\",\n      \"state\" : \"CREATED\",\n      \"type\" : \"TYPE_UNSPECIFIED\",\n      \"gateway\" : {\n        \"ingressPort\" : 1119268546,\n        \"appGateway\" : \"f12zsxirlmdp80bnlm1vip1uo7wdf2svzzpxvuwuek4a9shlwh6ah1q6vvk0s9hqrsmp1i68jyq7woh7a8oxgtrsdb04zy8drydx6sdemf60072v1ntinqxmule7kc4uyjfw1op7eae1m2heuezsb2vzljtreof5ux\",\n        \"l7psc\" : \"9u4rtwqwki24inkz82ey9pjqquq0s9g0uz72ns541xgq0m376qjl3q5paejdm062v7aq5rq7kw8a7x14e8ufewe84q4xbs1u4vnu7lt8bdzf372cwol2sq7tx4947etkowsyihlsrrb6cxt00eeot9oix6uf295nk5j75wz0vhh\",\n        \"type\" : \"TYPE_UNSPECIFIED\",\n        \"uri\" : \"https://web.example.mocklab.io/246913\"\n      },\n      \"labels\" : { }\n    }\n  }, {\n    \"recentMigVms\" : [ \"gfxhq0xyf3eptzopiejp0dw3vrqjbk29cqn6l8hsasfcv702bqfk6oag9j1f0lt7ut396ursy0lbcx7xe0fham1\", \"6euxig1t4f9ts540p6td9djh85t9wi647u550smkx80mejavkz92tkjsomavxnoteg7ulgmm9161pg1a8r9n4mw7akvg6ssk0gznuhtc218p86jxy85203io27ud55tlh30l2bnw3hy4ovcx0qef9nsxgw3xue902wp7mmz4ff27w1ukjoeo4yzs5qcxmjahtk7\", \"6nqqaqa1gz9qrfl1r8u2b3whwmsm3y72kbg8fkyidtq7wrgm8nuqy3927iv42re58errxndg48x33x5t5nda0app3gyyz4aouc3whrsh5ed0tm0gw3a43dx2fcp8giy9p43p7hp66pjsreasclyamfg8sm4nfgqcasc00c\", \"ayhcie3knmx8p64k\", \"p1napkosko8pgo6ark85dh5h7lol8iwn6ansiqqi24jtwq27rq2udn3lwux0f6d\", \"g8pk314qm38l99hpsjfjakvd5us0mkox3ymajat8go0axnme\" ],\n    \"appConnection\" : {\n      \"uid\" : \"76t8\",\n      \"connectors\" : [ \"428v3hi7av4jsllruqzjakeqwlxiyml5628hmpjar8xljq8tqyxa8s41yaemqrczsblvv64vyrv4xdc80ten6nsoivuabll1j0u8vorkx0y9\", \"26w2p6y769d7ik5bfspwm5c9tm7uxolh78v60ldqjin8nu5ph5he2bi8w1uk7fl1kmdjmui2f470vrh4k1g0zd023v1fz3pd240vzt6zz7nz3fkh3acm9rmnk4dwp9gcb11tr3kcbrdm0fa0nxntt6puvv\", \"zfedn7w1uowzh1j5ee1yc5yjsa519kj7itrm04up2iuq08k2qrzomaxomt8jtutkxat12quzucjss1kqldvf5i3cf67z4gtthmxkhxsmhumfbhclm8svwden7xnp7ih69kfisllakvgx7juyd7w7uzlx358duxzflte2lubstjswqfg53vfdu9w\", \"nbb6rdqpgftqc26icdtl3e20ywto0q3mrmdtad6s67rx4jy74pxxc0ocpohwbk5qxcg8j272sgud8vgf2afo7t94edkpl37ne5mqghl1d82as2fucw\", \"0iyulm3xvua185tbmvym0fedbnaj3w3zfteuctydfxnotszx19ajs7mj1ptko1xzdffmkngyvnd88sdkbglqswk2kswkegt6i4590c2ieg549bc03zfav2ucw1vizdb492crq7320x3x02zxyyvccxalmf5vhbgpeb7xkqfj2tzzg4t4q6m7h03rl6fqyfu\", \"nfxna122m2yl9uecth3zocad6f14fdx0qhbu8au5a37e11hpcegs964rj5m58d2il6ly27rz0ruznexmyvf3mgw9283s80yy2kzud\" ],\n      \"createTime\" : \"2022-09-02T09:59:13.374155Z\",\n      \"applicationEndpoint\" : {\n        \"port\" : 1229270362,\n        \"host\" : \"umo0nji9zvdy8nb8o9zocs44u66giorcz8ujew7x6z72nppquw25yx2seq5reyx2sgcr0ejxzdyjd4ot6qocxhwqhn2ooht0893q4t9b5k3qgnue1ysu0t0f7rjhsw759fm2wmns0m1ta89xxuv18\"\n      },\n      \"displayName\" : \"Lavelle Sawayn\",\n      \"name\" : \"Enoch Schuppe\",\n      \"updateTime\" : \"2022-09-11T12:04:13.374289Z\",\n      \"state\" : \"STATE_UNSPECIFIED\",\n      \"type\" : \"TYPE_UNSPECIFIED\",\n      \"gateway\" : {\n        \"ingressPort\" : 1340119127,\n        \"appGateway\" : \"7rt6zcvdqpysw3qkjtpsiwcwc0uww847inyp53bupbjo5cekhomihk7cugviv5pbw6rrf0zcbl6gmk0j4gx1az1ft1stfy51x0\",\n        \"l7psc\" : \"n6a3i02fvlcm69d0jgvalnlqrg5a3azo\",\n        \"type\" : \"TYPE_UNSPECIFIED\",\n        \"uri\" : \"https://web.example.mocklab.io/665460\"\n      },\n      \"labels\" : { }\n    }\n  }, {\n    \"recentMigVms\" : [ \"ixyz5hf9qxb524z6pz3ocphp0xuzrjvvd0l444pdxm89fbyh2x6bvvey3p9y6u0jlyp3rvbwt4e19ne7eccwbnt8h1w0rkbatgaehtw22qykqtm249ld7u9wbv3jatxqahg3ikskyhswov6\", \"nlqe6ku4d9949r00m4etqx9873heu6yqzgz33ng9rdol79k4met5lccrcbtn0c28k4y473my9qiiepxpmkskduy0azuup7hxs8zxstws\", \"f7njfgj3zauvzn1z4ctpplc0rmvyr7lk5uuctiz55fho51h2ya6nf97hn1s95484qlmu40ca7tayk2ct3vuizphbq32griwf3cntz4kmvcty1bd4ulld\" ],\n    \"appConnection\" : {\n      \"uid\" : \"i59d\",\n      \"connectors\" : [ \"q58j9c48rbs34ifjuk49gor3we33hnhvn960wjcd3a7y0u8my8czh4id1qeq5tddw62ll48hx1v6ntptyx9nbcmnux245\", \"36bacy3x1bettkcso9muwt\", \"nv8uk5fncxe4g61dktz7jb1fcf0faxp43wxveqtu3ickcnojt8nqmoy2xh1sjw\", \"1g4pifja94r04bss3m2v8t07gtyh8f1kr4ytrnoi88wtg7yp5sdw2a0eh14di3z648fjgbs07lgtmv1\", \"5vsmixfe6to6k1rt2tv1206yae4u1yj2ujhu4hpmp7s15o5we6bom660xy6qlmwxkbkijhojpwesky19akq51uiantdtca55pd58rrhn3w73l998\" ],\n      \"createTime\" : \"2022-03-17T08:21:13.37457Z\",\n      \"applicationEndpoint\" : {\n        \"port\" : 709765552,\n        \"host\" : \"b29az0r9bm14po5ndbp26pll76ws6h3odyy1ya8rqe20dinkwdrbz9qgeggc3ykf3fiqjmi9xbfscm0tghe6s832fxf2le6kjsm4llbf12slurokqvb3k54d6xgmw6hkn09s9d5hsxeemqbz5rt\"\n      },\n      \"displayName\" : \"Lorine Lowe\",\n      \"name\" : \"Son Ondricka\",\n      \"updateTime\" : \"2022-04-20T08:26:13.374704Z\",\n      \"state\" : \"CREATED\",\n      \"type\" : \"TYPE_UNSPECIFIED\",\n      \"gateway\" : {\n        \"ingressPort\" : 579034816,\n        \"appGateway\" : \"btfmqer39mt27s7awv8epcm9zoxhx1wolqn3aogkl8iz7fjqf1laph22ebe6jv7x56r3zgg2t9sh4u0kur53carh72vl83jo9wgj1nbsw58njwl2ihsquvhz1szbuspr60lq84xe28iygymumw5zqad6wijwkwi02qn1nh74nuxqzzc6zj5lellj\",\n        \"l7psc\" : \"u595cx8i8yfwtek88se619r5qyumu7yqzp4ett8ew95isc4z866psef3kbwva2otwa3lwzvrsxpiyl9etue5zuk6j0vwzagtfn0i7bf4okvxe52lfio1lmzp5\",\n        \"type\" : \"GCP_REGIONAL_MIG\",\n        \"uri\" : \"https://web.example.mocklab.io/162813\"\n      },\n      \"labels\" : { }\n    }\n  }, {\n    \"recentMigVms\" : [ \"60syymwpw612z2hypnghyuz847smb5nog0k9khp7ovp07zx5\", \"h3d68d1rwqtfqrxtmp7l6ged4aau7o15lcwhh5o6rccta8lmmk5syedfa0yo0v7quz2o8tkp5af75hb1\", \"emcpkdchui634jre46c2osvcop1uzk8fyag5cw8c22emyyde8ugn9gzr0syo0jeyrf1y0ym0nttgb6t4fy3yah14wf\", \"3d0x8rc28yavqkf49pmsw3ahbtq8ywwmkanm23dcc9l5534ty63\", \"wxl5jh2hdenm2xomv\", \"58al351oxeu5gsgwftffkp7uyo9svgldotc9lme6j25qmp45daqulv3w9z27f7tlpnatk03uqtc1v3hp13f3s6mr8z5m8ppm1zroh3wl6bc9lb45n7er28mnvwvc130irp90aexbcoli10lg8k3gc9pvyxbuasq2156o\" ],\n    \"appConnection\" : {\n      \"uid\" : \"12xk\",\n      \"connectors\" : [ \"x5r2m1u83qqlcdskaf9ejymym6lsbli3b11f066f3gdcm\", \"0vwwzpskybahzo77vej7ozljfprmj3a6ikc8taubk7xu82xw9pwe9s0cmpgk4j60ha3vqw08pao655fo7ohx2cqk546oxe8uni8gpvipcc3qtuq91nodrigrub7kt59sudpjaebb2ae5owixymf1d31dzj5b18cmja8\", \"oaxmtakpmwj38bzz1xq56j21piwnr5jm5zsk78i8e4br0gebuetq5z77i0t4o6i1c4skw07f6d\", \"a2jl5woqxpjngrpkqb6va7punv674u419a310v2d18hyuhu4nwyqaz9bz8r9yh5q1vc061\", \"6roci81cgzxbjuyl7ujy6u76mct6mfu9dmtk9voneor2s66b7wdtstfelxt2lew4jr6f7um27n64j5n0j9gc7eh9d0rvyxhjj5dnj2diy2p5r9tufe0vl15fhbbe9nsek7bz5qublfbeh3nuqwe7so20ygxi8amhvagky08dyw67fqy\", \"uh7uazd9gi0s08oo3c24dtu2van8dcs80dzbpkljavqeb8t4v9fchnhruc9vaho6k3ecys5bq6vez0olkxpzowczuuc9rsbhe6j58dvcvcl4aqll2w84ya2b0thv4z4\" ],\n      \"createTime\" : \"2022-03-31T08:39:13.375012Z\",\n      \"applicationEndpoint\" : {\n        \"port\" : 1213942782,\n        \"host\" : \"2kyk6egl8l4mdpadu32onmhy1ni95lk6vwu8jyuksqn77uxyfjbebkdwfbg0dpcawt12ozhl5b5qh13f6yh5ohchln0om8gsy2amb591sez7v6qyvibuihzbqh9wmn8ysvq394bi1qt3xxsg7xqf5z45fs59zy99\"\n      },\n      \"displayName\" : \"Kristan Baumbach\",\n      \"name\" : \"Adolfo Corkery\",\n      \"updateTime\" : \"2022-11-20T09:43:13.375148Z\",\n      \"state\" : \"DOWN\",\n      \"type\" : \"TYPE_UNSPECIFIED\",\n      \"gateway\" : {\n        \"ingressPort\" : 267421725,\n        \"appGateway\" : \"jauyhzoej5xbnxp6pepwdhif0ek\",\n        \"l7psc\" : \"e29t8uvkhky4tf614nu25z6zdd4cjr6tip9q18rfrqjmq7qxf410g26rrb59nqjdgxc28gxmhkwznetm6rsmlpzeec2uueaclcsfzb91yorbs5jhmoj7fp87mn8pnc504oaqp50q7t5ydvli675dah5n8ify5bib6fuwykozbe6kbsm8ywv8ehiq43vvy48\",\n        \"type\" : \"GCP_REGIONAL_MIG\",\n        \"uri\" : \"https://web.example.mocklab.io/458853\"\n      },\n      \"labels\" : { }\n    }\n  }, {\n    \"recentMigVms\" : [ \"loujf7xj3v1gogv3u2xs7ui2uqm71543q4309gp20r3dc6ekc9aqg7\", \"vcfp77y1lsdu952i4pw9y1bfc0aguhp7nnuxn1umbdlu1i39ulzylkeu96op8gba0u\", \"j9pd00qgntug1l8wsd9voqoryqokdon8zhf61xhjfirp7vil4lohmfr59zwioaw4ptp2jz0eru3ef6alshkfgy84ix5euns2dnsgh4tbtnem9tgatroygysccicslagmjpfksceevk\", \"ddy11bo8jiyhihisr61d4yauus8y2a85gtdimgugnua439nisyxmbvjn5q5k2xtbvjnc8aj2hguxm31gevjdh6f8fa159fduyn5lbwta8ee2bexdsnbqyww9w6789w9jqxvfbrseh6cpujye7rkxes0n5\" ],\n    \"appConnection\" : {\n      \"uid\" : \"hu92\",\n      \"connectors\" : [ \"edrr04kldnq1ki72g125dtitcjxwmtmcuju\", \"vlezvmq8c5zzz4kwd28ubekbfjxlk0bju9cjfg692a5euv147x5xqx47r45v94efhotefu0f1gndma0tgt7yvqwbnjj8gna3tma6avnl3xele5e\", \"g3t3cwrmwqkuatnjucb1mlpj119x7dwp68o1ftcns987rdn2bj046ryzgeujbfn7kxdyixb3msizzvn80j4ow4h8mlyj995rs9ya4qyeecpngicjnlg5nilf83ylexe1r5\", \"yo7k7a5o1dpn0v3vfezhipmzc1wxjxdq056fw8j2pdzpesotkrwienxx8y2pem6d3nijbwr52f2ko0heqr8h5ponvertvstw2z7yc4u503f4uln7ji27umorlvob2n5mifvq1z9iw2pa7eozh52abja1rc8xfqkgl0cvcjugs6ghgdl1ae\", \"klile7cet2jr2wh\", \"fag8c30k828krq6h1tfl7ymdz32ibrultvhxip3z96lh33pd69eo75g7x53mvk2oqavj11i1qdnxyix44r53qfo1x\" ],\n      \"createTime\" : \"2022-07-21T09:27:13.375443Z\",\n      \"applicationEndpoint\" : {\n        \"port\" : 1933132800,\n        \"host\" : \"xskjin8s1mvh166etqstbvd6jr3qwygzmbuqk2huscn1qoumiqm9natlxipodlqkoo9tmvdqi15ykaici9b9jezre68q0eelzne63v53p11q2zset5sciz7ggj3065ivn4k8whuq60sgt0ei74p76cceu1e3b40i8v8w8ymjyb5tkwt1o80k85\"\n      },\n      \"displayName\" : \"Bo Klein\",\n      \"name\" : \"Morgan Daniel\",\n      \"updateTime\" : \"2022-10-19T11:25:13.375579Z\",\n      \"state\" : \"CREATING\",\n      \"type\" : \"TYPE_UNSPECIFIED\",\n      \"gateway\" : {\n        \"ingressPort\" : 1869237068,\n        \"appGateway\" : \"94zdewdf6klgixl\",\n        \"l7psc\" : \"7vcrboeoef4x1lcu5pqxy1ocfnvi2dg2sizffvp84dmgyk9a5z9kghy6g0pnhf5v3cyjros1aht0f3gd9ed5v874j2xeeeulxd16z2jpvoss98gfq3k4vyaqwj5w12bketo4pyzelr\",\n        \"type\" : \"TYPE_UNSPECIFIED\",\n        \"uri\" : \"https://web.example.mocklab.io/533879\"\n      },\n      \"labels\" : { }\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3ff464b6-9422-448c-b711-7f8672007473",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.375856Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.appConnections.resolve",
          "schema" : {
            "description" : "Response message for BeyondCorp.ResolveAppConnections.",
            "properties" : {
              "appConnectionDetails" : {
                "description" : "A list of BeyondCorp AppConnections with details in the project.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleCloudBeyondcorpAppconnectionsV1ResolveAppConnectionsResponseAppConnectionDetails"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              },
              "unreachable" : {
                "description" : "A list of locations that could not be reached.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "587e3ab0-cc4c-4638-bbf5-7c42fe514639",
    "name" : "Creates a new AppConnection in a given project and location.",
    "request" : {
      "urlPath" : "/v1/f87qxhqzj44tjj9edp68xwuc2r/appConnections",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Freddy Will\",\n  \"error\" : {\n    \"code\" : 1172034040,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Pariatur adipisci vitae quia. Sunt nemo enim voluptatem. Tenetur voluptatem illo quod corrupti et.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "587e3ab0-cc4c-4638-bbf5-7c42fe514639",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.373481Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.appConnections.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "1e05f432-7da7-4fbf-b522-3cc84b7bfdc8",
    "name" : "Lists AppConnections in a given project and location.",
    "request" : {
      "urlPath" : "/v1/an7s1ihz52gtkpljy87qotuno8bg71hssg13txnxsbcerotute2jxd4nxec/appConnections",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"unreachable\" : [ \"uf9ytvgurxj8bucvzhcnrxu99hj1k1l9ti5557z7ozyn0i1t9\", \"ata1t57vdg3fb52q68ee0dpsx21dy9hjlo6kzxfpyqn6ery4sr3hba107kg8bsjn2j5brctxaiqzz4cn215bxv1kjvljdzu3vpagzcc2ecedev49xfgzxwgvgaceik5rhkb11js8yduhrmz5pcjbx1v1nxhosy5srwrfoceo9glrj818l54toy1nwqsfux1x\", \"f1zeurqb1g1kwq5llunh8c942lts2f7kxr0mo7c5oy03yzk8pa5mp6naeiz5qb4scu82ao932yay9ns1tp3\", \"42p2xga7yrgpyod91wujll3lqnq\", \"8h9stmujlu3nj8rva6ki8pzlezqe6syv8dpyr4eec1c0cn2n73g2qszdipv3vbakzgdhp2ntu7ibf3z610um9i6owsfu79xg5023msxo5cmymcalpwbqadll9jr12fpsbq07vqp4k3jn2jbq182m43e0jbnp8f5nk12894ds35qjmqqwv4gu93my\", \"bh8u7n52602dgvn6zj63\", \"dbxibwuo48\" ],\n  \"nextPageToken\" : \"9mg3ey9zalk5s2o2rtqe1cx9v212ezk1yfi\",\n  \"appConnections\" : [ {\n    \"uid\" : \"iv1m\",\n    \"connectors\" : [ \"xsutry4e7jxzyqqrwxr0smi6ilr1yr7hln0ij0vdwuxrsxwwrdu6zo8obvkmwlhc3h0j2mpk2osx7n6deh88btq32bqmlic9wgr25u5dsq3w2tger9zspsu8c0qykr2s\", \"vp6dbppia0ivkvslxbz4t1pmlltzof4brfypvkyi73axu676snp9nb9qyibcc4efmni7m392pirum6l5hkyxq449hzwtvgoa9g8n5uhfbju5pv9hv892iy95nx2o98j5b49l1pel23j8u9abe76ehz2p7gqnyux60h4k400r8p5x0duyqraydyma\", \"8nmsmdksqb4elm41c52bbo8itm5dh4y517wccn63yizfgdpioztskjh\", \"xaone5vq8hqlic7jwhhi7yp1n4oyku24ax8rj8zszykkjxhhz2ycmv1l57s6gwog8zgk2z09twkazldrlpiqmr1grclakegqo71q6trqdh2h56w2kolyhvswqulmusfnxffy977mva6fjuxyxxzl8u6mxjhalb3uoh9u6o5bwjzz0t0ifev4zk0uluw7x6\" ],\n    \"createTime\" : \"2022-12-11T09:30:13.372596Z\",\n    \"applicationEndpoint\" : {\n      \"port\" : 1213767608,\n      \"host\" : \"jz3emwb3ooqivmtl2ewwmtnmxnro0it\"\n    },\n    \"displayName\" : \"Ingeborg Olson\",\n    \"name\" : \"Nickie Nader\",\n    \"updateTime\" : \"2022-11-02T09:30:13.372725Z\",\n    \"state\" : \"CREATED\",\n    \"type\" : \"TYPE_UNSPECIFIED\",\n    \"gateway\" : {\n      \"ingressPort\" : 216761990,\n      \"appGateway\" : \"1dam12i5d5yigm2juai2xs9tkdhvjkp1zxp3ly4rae5gz2boiv5ohzja6lrm8yxya12ji3zgmdaen85vaf1g0832gg1gd1fb7dgkghdb0m2tc9h75ho6sktnwrc5w4mzxrp055t55vds3bfwz63m3v6n7p8cj2neqgrw\",\n      \"l7psc\" : \"1p7x24rnn7zm03tbv1vb2djpvu2pqrezsb67hcqwztjaark3h8krv88tnf6qqcbzynez12uy0fij62pxp7t13etriveqe4241yceut46vhc3w2muzi93p3eqp0y8u9q5cfrcf1\",\n      \"type\" : \"TYPE_UNSPECIFIED\",\n      \"uri\" : \"https://web.example.mocklab.io/823201\"\n    },\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"0130\",\n    \"connectors\" : [ \"mo9l9bgphjan1jh9w3np3vwhdawa8d5dcw0hufum43935vpoxitn6zvg95t4kexutv8tt1rjyxuomzm0q9vq8hf4ipr80ek5wbthsvf4cnllar3o8p7bdj96h\", \"jtkayb75mfk7z5pvclaae7\", \"6i7xm90lzk0ewqkr8fzpa9w\", \"guejbjoigtqvsf4t76pplm4q\" ],\n    \"createTime\" : \"2022-12-13T11:38:13.372978Z\",\n    \"applicationEndpoint\" : {\n      \"port\" : 1971267971,\n      \"host\" : \"eyso0eqqd8b3peypxipjdbco654el9o8famrkebfvo5es161lll07gp1giphzjn3w6yly0slbxylummskyy6pouajb8n6dt4jlxcefkeuzwmvz6fj58izg9s3y57ld9yv8rvzmaevdogy2qtd\"\n    },\n    \"displayName\" : \"Curtis Kohler\",\n    \"name\" : \"Vince Lueilwitz\",\n    \"updateTime\" : \"2022-11-17T09:25:13.373102Z\",\n    \"state\" : \"DELETING\",\n    \"type\" : \"TYPE_UNSPECIFIED\",\n    \"gateway\" : {\n      \"ingressPort\" : 1824305735,\n      \"appGateway\" : \"3b6\",\n      \"l7psc\" : \"krb1bzn506hlwoomyzpptlw3as94odukhsqcqgnui7zf88gfbc7h3hwqa6tcd1wmimbljcv35uthrkah1th9ltjilsi1f6v4bqn632hwtd6fl3qryanfkm4w044dvg\",\n      \"type\" : \"TYPE_UNSPECIFIED\",\n      \"uri\" : \"https://web.example.mocklab.io/528568\"\n    },\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1e05f432-7da7-4fbf-b522-3cc84b7bfdc8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.37331Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.appConnections.list",
          "schema" : {
            "description" : "Response message for BeyondCorp.ListAppConnections.",
            "properties" : {
              "appConnections" : {
                "description" : "A list of BeyondCorp AppConnections in the project.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleCloudBeyondcorpAppconnectionsV1AppConnection"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              },
              "unreachable" : {
                "description" : "A list of locations that could not be reached.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "77e4ed87-edd9-4ade-ac42-2b2239c525a0",
    "name" : "Starts asynchronous cancellation on a long-running operation. The server makes a...",
    "request" : {
      "urlPath" : "/v1/Claud+Heathcote+I:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "77e4ed87-edd9-4ade-ac42-2b2239c525a0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.372401Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.operations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "6916210b-aa0e-4a42-9c88-9214c2998d5e",
    "name" : "Lists operations that match the specified filter in the request. If the server d...",
    "request" : {
      "urlPath" : "/v1/Greg+Halvorson+MD/operations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Alina Mertz\",\n    \"error\" : {\n      \"code\" : 1839352733,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Repudiandae est quis quod molestiae iste molestias. Sed aspernatur non. Cum enim maxime quia non laudantium quas at. Laboriosam repellat eveniet.\"\n    },\n    \"done\" : true\n  } ],\n  \"nextPageToken\" : \"u5sowrnl0a5svaoenj93wug71uvoq5tg2ae9w3bxrjm9n5cuulf2sxd1n5q004o872tw56739lohounp6x7d3v7sqzck17oj2n87fzt\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6916210b-aa0e-4a42-9c88-9214c2998d5e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.37233Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleLongrunningOperation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "596ab01c-e14d-4dc0-8c2c-4cce1650bb84",
    "name" : "Lists information about the supported locations for this service.",
    "request" : {
      "urlPath" : "/v1/Barb+Murray/locations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"judlxoipuu61i3mhtaqrnw44v4cnm2f2teu3ds3eg7aa0j1hyca6tduehxjnvxkulbhvcrqry45qn6szzs9l5isk4o35rlhq8vuyibkdfbvp5t2axeoo67mvsbkvpfl2ubhb\",\n  \"locations\" : [ {\n    \"metadata\" : { },\n    \"displayName\" : \"Elton Yundt\",\n    \"locationId\" : \"u3d2\",\n    \"name\" : \"Brian Hettinger\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Christian Swift\",\n    \"locationId\" : \"sz0b\",\n    \"name\" : \"Cletus Howell\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Tiffaney Lockman\",\n    \"locationId\" : \"q29b\",\n    \"name\" : \"Dusty Shanahan DVM\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Buddy Jaskolski MD\",\n    \"locationId\" : \"776n\",\n    \"name\" : \"Jestine Carter\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Jackeline Block\",\n    \"locationId\" : \"gppj\",\n    \"name\" : \"Everett Harris\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Miss Dannette Miller\",\n    \"locationId\" : \"7z39\",\n    \"name\" : \"Dr. Sheridan Murray\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "596ab01c-e14d-4dc0-8c2c-4cce1650bb84",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.372126Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.list",
          "schema" : {
            "description" : "The response message for Locations.ListLocations.",
            "properties" : {
              "locations" : {
                "description" : "A list of locations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleCloudLocationLocation"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "1711ef05-e3fc-418a-97b6-550c5124afdd",
    "name" : "Updates the parameters of a single ClientConnectorService.",
    "request" : {
      "urlPath" : "/v1/Dr.+Juan+Trantow",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Bob Skiles\",\n  \"error\" : {\n    \"code\" : 1827237145,\n    \"details\" : [ { } ],\n    \"message\" : \"Hic perferendis est voluptates. Dolor et qui. Facilis optio beatae et impedit eaque rerum. Provident corrupti ut aliquam quos.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1711ef05-e3fc-418a-97b6-550c5124afdd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.371019Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.clientConnectorServices.patch",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "ec8de3af-05ac-4ac7-be00-cc72aee88750",
    "name" : "Gets the latest state of a long-running operation. Clients can use this method t...",
    "request" : {
      "urlPath" : "/v1/Hyo+Blanda",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Jacquelin Purdy\",\n  \"error\" : {\n    \"code\" : 1470680320,\n    \"details\" : [ { }, { }, { } ],\n    \"message\" : \"Veritatis molestias quibusdam voluptas necessitatibus et. Culpa natus aut deleniti est. Eligendi quia aliquid provident veritatis odit sunt. Perferendis culpa illo alias maiores voluptatem praesentium\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ec8de3af-05ac-4ac7-be00-cc72aee88750",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.370822Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.operations.get",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "d956e3d2-df1d-4e1e-8839-c85eda867164",
    "name" : "Deletes a long-running operation. This method indicates that the client is no lo...",
    "request" : {
      "urlPath" : "/v1/Barry+Heidenreich",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d956e3d2-df1d-4e1e-8839-c85eda867164",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.370614Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.operations.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "338de56a-39b2-4ff4-8723-c43019b7f4f1",
    "name" : "Gets instance configuration for a given AppConnector. An internal method called ...",
    "request" : {
      "urlPath" : "/v1/i227e2c69285v7k5xb0nco14emiag5e40x5xs5t00c4kr3p3copmqb1jm3uq2lg795kt6vsm0ohmvpucyhvlab508n4wq6k8e3ag45a232j4861ukcb58yt16xqn14w31dsa6madpfpuuyr3lb8lr1inw6io3j:resolveInstanceConfig",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"instanceConfig\" : {\n    \"sequenceNumber\" : \"unov8b4eof1wsu866rv5alc3izq4jz1dc6r96wmsv6sns4u6lxmsw5rer0vrv0n8y9ntkd2oa1vaipq4v0kzgddsnek48e\",\n    \"instanceConfig\" : { },\n    \"notificationConfig\" : {\n      \"pubsubNotification\" : {\n        \"pubsubSubscription\" : \"d98y4gft4wxbihbfi\"\n      }\n    },\n    \"imageConfig\" : {\n      \"stableImage\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/okcoker/128.jpg\",\n      \"targetImage\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/charliegann/128.jpg\"\n    }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "338de56a-39b2-4ff4-8723-c43019b7f4f1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.370534Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.appConnectors.resolveInstanceConfig",
          "schema" : {
            "description" : "Response message for BeyondCorp.ResolveInstanceConfig.",
            "properties" : {
              "instanceConfig" : {
                "$ref" : "#/components/schemas/GoogleCloudBeyondcorpAppconnectorsV1AppConnectorInstanceConfig"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "0495b39b-c823-4c5c-8170-621a43b3baf2",
    "name" : "Report status for a given connector.",
    "request" : {
      "urlPath" : "/v1/0sd9y0nn0a97ouk55k2psmyso5bwf9dhq3y2yczsykjh5ou0kbrg9o5cjh3z286eoak01a25o3xmyqqg4b0ffv4r0w78nx8br0sdv37q9fhqgcam15h3q7bke64dug7r27eoku2slksmtky1qpduiyb5qj2cng3juaixsb33h9ap75gebjxu3uvv3u5n6pd:reportStatus",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Branden Lindgren\",\n  \"error\" : {\n    \"code\" : 1457238864,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Rem est illo nihil sunt voluptatem eum. Repellat pariatur qui animi consequuntur. Enim molestiae dolorem necessitatibus in nesciunt magnam omnis. Est sed ad consequatur illum sed.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0495b39b-c823-4c5c-8170-621a43b3baf2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.370338Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.appConnectors.reportStatus",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 21
  } ]
}