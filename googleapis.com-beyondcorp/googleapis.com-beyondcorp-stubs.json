{
  "mappings" : [ {
    "id" : "49f9fd85-169e-4ec7-8b74-1f95d08d911f",
    "name" : "Returns permissions that a caller has on the specified resource. If the resource...",
    "request" : {
      "urlPath" : "/v1/exu6mr8yeq6jbf8csg0:testIamPermissions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"permissions\" : [ \"00763m0yczt5e1uhr6gkjtu8gb9y7qg74cvwdhigd6imz221hf1f4yw5yxpxvpij8khmvhxf8bj3exq2avxt3yo5kiuau1j2nkwk1q4pu9qqqm\", \"4khzmq5j8g2ka7c2e5xjjsw70je7il4h3hob6c1xhbl692i80e78biyw7dbf0c2faz6ikf6ze6tpyjjrv5iqvjv40ij1qban3x35nm9hbzqkyxuizf76bq8pa7xaxluzjz0f4uxzskr7dwluxe17aoycj6ix47olfll4fvosi\", \"qzo99ea20c6f2u36n2siofn2a14ta4pano65vjat1jww5qtor0q0l8yo34bu4vmfj8e5xphrqu5mkw6fg7p48cyvxfc3q6g9iahqvkq8w06us92aiigfpruc2t5fdc9m8r5\", \"lr47arq24e2nvkigqgj3fvqtzun94qn4b62anbnm8chaxf0ef81oqqj2i0qxcfedth1lkdm9wfdv46xgqfi4rl4clydo815ke8sdiijbhnclo5o27ot5yw1vdy4e6pe280pigqo\", \"nbhtj9j27oia\", \"bry2u7q1v63fkfu56z1o5dfkr1lnv21llevvhsf1h54i6cqkdlssqt4f2dcqnh70xgs7atj7lspn3q3pvos4ocswyrgbl7332fc5xqv5td6w7a4nla995ixtrpfp\", \"qd071hxw4fsinohb1jxgbm9pryhtpp7fg5sanqecn14ml5z024xtc4s4pzqqyws9drim4lws1yn4osok4hew68wh9xdbjzbl9sjro5ir0qu4fld1zfrr28k3f9h7pjrrk39w05y5y2cqn46i34tsv6p2z2ufje5nmx3u4m2a5eupboavpvbc2wwuh4ganptq\", \"ouug7kj6dulmkz40vgebqpo\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "49f9fd85-169e-4ec7-8b74-1f95d08d911f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:34.092092Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.clientGateways.testIamPermissions",
          "schema" : {
            "description" : "Response message for `TestIamPermissions` method.",
            "properties" : {
              "permissions" : {
                "description" : "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f508c0bb-a72b-4c15-8a6d-ad980d82eff7",
    "name" : "Sets the access control policy on the specified resource. Replaces any existing ...",
    "request" : {
      "urlPath" : "/v1/jwb1a9vt3ny53m5mq24gcgg96ttnvxfd7xspai56ub6hrdpo0iri7ymn3byvqhn1551igovcqnjfibin2mkbd9at8ysfapnnc0c50b39lyey0b6if0go8mvyazpzf6c:setIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"vopswcocmktdiub71ff1vqmz4ynvtzgpwwee543rov4oglon\",\n      \"description\" : \"Aliquam ut est consequuntur est. Architecto quia maxime repudiandae. Esse non sunt voluptates. Enim rerum amet accusamus sed velit in repellat.\",\n      \"location\" : \"2o62a00go3qmgldkjtqjympr7r8dx1koint3182iiqzflezsahuagqbwplvfy0tihlf6vh7\",\n      \"title\" : \"Sit placeat occaecati eum exercitationem vel odit.\"\n    },\n    \"role\" : \"efkq9dmf6jeiehblw08bj0ysy78q8vjo13m8dsf54jxsmw3g691o64lrp00nyb0g9ezl9aeupagl3bdur\",\n    \"members\" : [ \"0e09d56kxou2hry6g2i3jeym1lgkh8j5ty8o55b4ppmg\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"ejdlqn5ynanitmyi7biakwtkwul3x4si3ehc0tadmpjvm3rcmnoxn9hkd3v61zgjsb4fqr3zaah\",\n      \"description\" : \"Neque rerum eos ex. Aliquam similique quasi dolorem iure. Quasi similique assumenda. Et quis incidunt aspernatur et. Nihil officiis asperiores omnis et.\",\n      \"location\" : \"vvmwhpko19qo8u9cx94ocp64saocyfi97x37cn4o0cui8ko5knzwrmlirbphzyy3ubglt4fdl0efrckkx5bo57232f5ybt849w0cqar6rozmqjxc8ecri4lhk9\",\n      \"title\" : \"Alias eum sit.\"\n    },\n    \"role\" : \"4ht4h22bw3zmirat6vi2isv20rmmk03srsaqenybl6lunvu1n78dt1ajzd59w6mfilbtw8q7r4jgroy0mawdwv0xp3n3cnpfqpvngdqpid6fo6s3rie3p40wb3c0rsj1iucm8fyx3p6zf6z9v2l0xsazgs08ro01n502qpb1mj6s8ks3ip\",\n    \"members\" : [ \"mesog3kz9iuqp9w12a59jmvy4m43ruxaziwxjwk6hcvxojsvv3a3xc2miv9vtgueh2zt\", \"tz7vidzjtebix3tkfp4ngsi1yp1ly8fmlt4z1eui1zd4mpp9ux5d706u6o1moqm62c250nsiplsxos0cybl3wrefiioois36cuw8ocgw8wovjdbud36co7z7ozatgthr58m4lxnc1g20gvivcwaouyd3q7ke151ogi9xyrsl50wb674ujs\", \"se60tarb1g58m34zpz96zs2o8csbhzbd6wv3kw6qljzjfshc2zolm96qwz2\", \"0f3psvqp0nxegmz83bm9wqu0f8eedy8u73jb77v96fak6m6p2fwghuo0stnexvesl0485s4m4a8wsle946ll89cexfjeftr1vyly1vv3s3jdmjde8ss974s8kw7hub9fetntknp99a0m0381nhpuq\", \"fgsb6iychjv0xe8ogmvbvzdvkxs90doglrly0aj5ijf288u5xbpsncvur17gztx76swer4k2mz1rpl8f\", \"ph29s83vk2sgdfjhz2b5pkxdxdbx\", \"4w5pncntwke1s1r89zuwzxj7xd79iji3pl5okul5tpbb8njhy6tenc384vpbde2dtmwa94o5tq01fh5ea95gu9qrf3xes8n1r5q9bhjjpjweb41fe6pyssf6oeyiqlznjsxbl2oknkbahkjfj\", \"pgdz0meys6hqck3bh71yoz0vw6xsi5owbgg3xd2imywv2t9id8bnum87u8p6sn8c5z6l9qfgy37np8psjjlrk8v7gab1ct19o33g3r97n9t1flfob8taclpod6rweaif73axlh8ppxbiew08m4tq4hu8hu40ez75u\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"rk0ueygxx\",\n      \"description\" : \"Debitis pariatur fuga libero quasi in incidunt. Modi sunt porro. Nisi illo et perferendis laboriosam expedita omnis. Accusamus cupiditate corporis doloribus dolorem quae dolore dolores.\",\n      \"location\" : \"gqm2unu3fzsqq9sces276rct5cuderri4fnypz1rlichmddvips0llsam3s9xmx2j1qch7gha6ejpwsxssosoa2z9ebm0mhgsnysft6qzhyke4rvqbw1i2iodwigsp0no3vm60km19ls6475x0klftrygjpk5hqw0j52blxrqn5fwtsm\",\n      \"title\" : \"Similique distinctio aliquam temporibus sed sed vel.\"\n    },\n    \"role\" : \"ka2wuppxhmhxdc0j5z77xsjq7qyp0g74v7giqoqntnipz2uwre41gv0iyrehadu22s8qt8kyshit1gkvjagfsipprvndxkjr7hhsuz9hjchkbxs068k69\",\n    \"members\" : [ \"68vozb1btoety9qr3o4az9hyhedxdxu2hkhk3p3ic0dgpp8x1mcgrecyt6syftflzr8tm6v87k4lv9tml2ypo0reczt0mil094mbapm7fjdwoxyxudy3q7qr2hd7z2ltn78s5of1wma70pd1pton3z2w7x1ag8ao41veiyb29w8kcy5f2e744rromjzqrfcflq\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"my39oxubjrb68gt3lbe11jjq1qnkunsmz77y2\",\n      \"description\" : \"Culpa nihil reprehenderit nesciunt fuga error. Aperiam non impedit et autem qui neque. Dolores nemo et.\",\n      \"location\" : \"emiw2tk01dpgixijr1a3cj151fxcom1lkkboekwgap9cu65yf8mitg6gzok4nqzrkkj390yrps6hen3orybywlvc06xamgiv95f0ci75jl80cukzff7ytlwd3fsk36qpn0isgmt2ftbbmo81d4rrbmt42lb5b1kdn8l67cy6hyeqpdswgwqo\",\n      \"title\" : \"Laudantium fuga ab non aliquam voluptate odio repudiandae.\"\n    },\n    \"role\" : \"hem5q1hvq4uoin6rpk0t1c0zogsg5trgruv7ff5vm88l589ntsbfbgj4e0etshqkm6jifug1to7v5faw1x7zjfnw4m72mzj8k6wpd9uskyzsvjs0hxpzqnn7j4jb81mpfideaxalt4gelgp71qiu8uc23k64p7a3dpirwt1fxfb3midp1pt7b\",\n    \"members\" : [ \"1oqd8cwzmy7yvh48pinfbeouwr6o6tyg4bsf4gtod4qulws9f5djhx7updweeamhq7d3apjo6ac5c972vixfxm56qdc5kk76ljkc8ju6w2mhabna2axydaeavlh9oxll5n2e8in9gbv1c4i1jkxxb87rbow9teixt4iao9szpd9n2m337orjtuavi3sy9q7yx9x02ub\", \"s6awv3ejttddftyxyh4r32pa\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"c5nrckw0z0p4b4jjsksxl6hdziauyjf78sohhxait\",\n      \"description\" : \"Odit fugit dolores consequuntur. Id aspernatur commodi veniam facere quo. Sunt voluptatibus neque quae. Voluptate amet enim odit inventore fugiat. Occaecati aliquam natus excepturi.\",\n      \"location\" : \"v34niqziqdqrz644zjiofmm8qx4n0jaz9jxmyojp7rcxo2ef2usy9wg9zccq4myz6u1csccuqp32w1hp1u7lg5bpp1mri5pb0jk0xkszd6dr8dopntzb759cwul1hkm7k3umgw3leazfrboad502fczm85j0\",\n      \"title\" : \"Explicabo ea et consectetur placeat rem praesentium sunt.\"\n    },\n    \"role\" : \"oysbs6puycbjzik4pbr7suqf8jsihw5iw8q1qi6kwl4bl5er0iy6dlvl7mkgidl16ubjogzu8bjs12ewq7d0t6u46\",\n    \"members\" : [ \"v12kctzvv5ous\", \"0zi1d017dsfztioi718qukvuxbv89d3g6pcjwfm7j4weoa9vbq8gv9z6xqw052tmtuqyoadgkziopfd63lmx2r3edw4bobg0nvo209zj\", \"invyvyrgyc\", \"zgdxkvjh8646xnv3u46l2lgteo3sz801cdksu33rphcyvr9\" ]\n  } ],\n  \"etag\" : \"aaaad\",\n  \"version\" : 1732331710,\n  \"auditConfigs\" : [ {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"f6q9kfdby2\", \"lj4g9pk44s9y9q7zl01l0eojweqovbrrpzghtde3wu3ncm0ew028tnvnkvuln7byb4474scyse52uz72ubt6npk1dbsr12t0ribmma5coggzotiqhg2md\", \"fz81bynhn3b8x9ux4w3ggsjinc6whk4x1hk2v58bc8o041ypn7vgz9b6d8ztkggd7xhp71ddonz39i36s1uzxbb7yc0nrf4wn\", \"i5z627d5hwtnco7oxn5fp8ngo2ddtxsre5fhlfuls1k9nile03mbptxp6l2eer5hgnbxn9ux6n4o3ho5\", \"73u544ksgedwgt32o1f5fv6w727gzcvb2n4b92c6o5xm3c3jgteom8agjo2zn0squg7z9r2xez8ltnejjk1kouz4p35r1cp51j3gksh3wvx1bcbyur7acbz\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"fvyb2vawvvffum900nmdb2ekxvqyaio3ngr01horrjh7yoiifxasuxvbmdqxkdh3mp3rpv44qwuqju0xacqwcmevgxeytb6dms5khksgh4b5qp93183ggw0ozrswyjn5haa8js9futf7eo35w6o0\", \"euqb7xrs5qxea5sv2tofvkhssafgy0zt897z9p9ukgo5ge6yu1qtsqe5se1tq0o8bkann6bs6cqov27zpcww03qtsyss29c3s34qtsdzy1200wk1whh5y4szma8ycx4lqfvesfk5p86pho3xvhbw23g\", \"1mptygmo8v4k5zv76765uw6ycho64jme26vk0zspuueeq3qctc5tl6et\", \"k5sz39opanm05sfxtn7gt3bjtk6yuoj2ukwh38ijrnlh4cgg7vfo7h5220gf7pl8gbg8s999ecxj040y755n4inarbn3csnnmu6fxc7lm6cqubiscqbomh1fupunkxedo18rvuh8610b9mrazlnb7kihxytmj7ywhw0fxfmerqvuudebg1vpn\", \"82uulov4yc234a27e5kyakatlucft8og38ftk5mbx2kl6fik77xdfc0mumpzbrepbrdig4rrmdqqj9gugb89zdom8ayygg1lxune1zsb1ueyfnoybr2mrzjpqkmafnf6ji\", \"g3xra2i2005ghbech9rkyc79j0ph5wuoqlxghbgb1a18qktpyeao5wz3nzrqbqflh5y7m7tf03gm156ixu4fc6hb26rzlj6wtrqkg30095mbbj3lvp696hitxd0807nzud8xze18vqvmv60sj8kzfu1g8hyy2ytgjs30r2l8g\", \"3rbbu3p2bki40w96n8i1q42ktsm9s9vhdl303dnzyy56445qib1voga02v54onrd0\", \"lu95kawj84d274o439b4yvtk77vdw0h1h7cczelnh6lypnkngxl8s2karonl0sj1as7eptj09yqplyqpdgplyeawjn62dbi6vlmbbjqb6yph\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"i5fsvmw4adoebbgp5n8k4474ftfc0lui8onfeerq93vppzix8992qvf4mt4c9zmi4x6wvahsec70395byyz7z9teyxr6vxpj6o5jan78ttyyjc974sa992gcv3\", \"2h7qyfkd2jknf3juqxdfchh3v9k14vvmwzulsw9zwy4wppms99nx0ajkyvhb4s4zedcj6idt651k8uus32qm2n7kxwb9c6wiw3iq5657y82exijs\", \"4p15eyq2iaglsx2xbdjh3g05awvxlkzwai3yamt29mrgvbwjbpdj7vopfurwzg2\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"12nnztynfg99kkdltct5lvmc2pbuc\", \"nvpwdyoe2tf3c0z6m2dcvdgq8msb46\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"3ldjd9s2xxcd9f9idg35lng2vavyd7p7swf30vkc9cieq8py483u6gaqseoxykuijptez8pnrev0wiz0r8r1bzs5sgn35rrk3pl6l9g3j05b648btolqzqx6xwkgbtgx37\", \"j133eavsvf5h5ymi3vb\", \"6io8q1of2bisr2vg3sz14o151ooeghp345kybvzh4yxoab5oa60eof53rhw5cxpgwtrzb5h2m65rcuph11vs0tdsvq1e5om9kxy7gwsb9oavp78ym6677yx2dhqlyfo86\", \"l4510f395kcj06a6re8ww488gxrruknpg93og3b8yazwy8vqqa9m3zrnl2a2sphldgn1ald97u12qe67qpu68idqrnkwu7jxkxjicecbfdfy8i0bqw8l996cakc7tfdyqbxoswt2nmxc864lvvkf5gb20eu5sssrn3fv1xrfzxvjqkvytdc7crzy395zvxng\", \"wxx7yxaaklbv\", \"trwntenp87w4ad3sn8kv6pf97l92fdb4w27xmbopfbv0ib026ayl6b4x8odfh8zror8bzfmtjze2qwkecsxs7a931prnotkxt09d2aiipfgljeaw4vde231bd0glnsp767tbt903perh48k303ql29leh16nom7wdph5obnly9fp5vvz6w4fss54ej3ojmqt0d7wi88r\", \"a7ynukq78vbeuv35iqipeqqty4yuev7kv8xfsjp7jdcoep01zmmrf17va8gu9raxq4wt5ngn10kapg5f0dr2k3hjjd1z1i76395\", \"ltgft1g9xspq5sdcmpm20v1q3t8jjekfql\" ]\n    } ],\n    \"service\" : \"i8kfdjre55151rszm5ozlaoa5a4tcxaeew37fzffvq948hiibwhmnfczz3d2kagccx6ia1n0yky4qydj2coe10mud7zohl11yjq7nqgfvj03y3te1npmyuu17jvdq5qn2t2zm3ub\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"xdre097ihshizqwy1xei6a46o5yx2m23w4bk39wt7lgm302p\", \"g3og4ql696vwzfp5sc5jevqsmxzfdtjcedqbvk0oy1s1gc11wnwgz8lsnlw6228nd6cvy9ijo79jamjnz3hbtm7azvbshl0d8yd6gul70ljecgj600mgkqggsi0yrbyqdlg6eaubpjt6qqz7li9flfdk4wvqnf04mmr5jddjp5zcd1d9cw5kn9y\", \"bywpwsi1reo3bde0633u26y3500o2ifvxssq7qyfw1iqei2ibw2ciibnv3ptdpv3et1mv052oge1j\", \"px8jvdti2ft5ocdudebbrg1fi1n2nza1fsjjq629t151x5czuob14p67mjprxtxg3agghupg\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"zd7l3cv0a37w07vmrutq17eyhxnt6bp2xfoaiwcfxl2e6jvfpy7silzs2o4b7c0c16cyl4l4kxuolsunx5930stpl63uuqx3i1zhczafsn1yqlmd7ypv0o4jfdjwtzdqyewkeeh35frgzeie2rp1765bvjpcquy9\", \"m8zusfqzosizb182t6u7kqic0tvzc411erpvvbjc68tybt\", \"k4v1hifbd2gtermjwv5f2iz1od754oxj2hd7ozme3ikqc99bcgqsfa6jzq595d3ikijl86qtj5dumrcjbsdqyxlj2nuy6rv3xlgcjnxeyyuu\", \"df00qw1er650b05yo3xi3wwctdmxpo1ctc8q51hsn737d6o4qiw67yxlnykdduy0uxkhscx24x99t0zvmu122b8dsivud55gambavdog6fvmi9b803r13px3o0pzpkji7t9hnws3py61h9sd4yucv6snzsy5o10k3lvp8xf1t9pmhr2gen3ip49h9r\", \"566gcywd110rti7959ina4tzke15uiwaoco3h8qbcq78pjes8q0cbp02m7u7tmnndmntb84caxbckrmwtahgw56migr1tulqmgkh3lq4cxmb5tvui5y4w806ct4h8bi6\" ]\n    } ],\n    \"service\" : \"1v0eqgszksfc3po5njtb18ky0e4ped9815auczsnc4sdink6foqgjzeptfngs7a5s64ioze29ai6zmjk77hv900uduhpyhhxaw5ppbpdtsg3vr5et\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"yt8ib9f8g505h28ofuld30qd6ieveicn6etabvqp6bx7avryq8c6806c7hfqz9rl71v5usp1vp0tfq78d7qcyh8qvj9odg8hs52rce3088xv0tv768ey1ssc4wyfuds7uc93tslzgz0hhp\", \"0vw3iv8s669953lc7t3dx0wg50wljmwwshx99meg1g2n0qlgdlvyshc\", \"c91nuvkzeka2gc1tmszqpq0jvq7m24iy8tfpb1mpb\", \"32rfii8nd218d1k45isz8e8cc5yiv6llcdh9cf8pn1691emylro69w15x5pmn64sk98qs3m94ud5lysaqycyiqhk4gerkvhezc6o4ofl1s041lgzvrwx5hee0xra3ef48ohtm1tuxe1jksc6l2kkwcsrii295y2tkrekbnabpet0onvzgin0tf9\", \"vaqer0xxwp5bmpmk8\", \"nkwkne2zqetbh2v693oyc4tm96m04juqodin0uqhlt3pqvqyjkengyd1mt9jskaunncr46mvk7vletm4qdud61bv9gbq385l64j2oqsxgw8gool2qecmp31ri3tvsj8c16avkr7szwvzzpyyf69bmvimh4e4hinv2huuknjvjewce6\", \"lmtu7jc098ztxog98wsoicn5pk4h2gbttda9zy8vnu3k1f66lsu0r0eytklwwzknxom3rh78hny8pr39o0lsuuy3rzjy04v9c99vja2ioy9\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"qz9zf03539tzgtabtxzgdrc22m3d2zpcpk0vvtmwtz5fows53qlv\", \"frttp3fjoj6n2an5j7skfcsnzhhtc8zogwdf38y0wwjl644uiqohqyl3i1hinqcl6uj38c7c5cb6pcu0j\", \"13pt45ybr82clo9ktnwxtmo12ywp7w6kln3fg241i6ae1xawj5z344gnlx1p7xqn287oans4hbw8hribl60qno8eghm3cpb4abn6nvm6ru10oaxmnfde3asw9lz02855fr1juop6nfwgei3wh79drjwrz15sqez0jglz4lm5\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"t2ma0hr74payha16flzebqqdmkcgqfutr8wbzj2x5a9o5mz4ltfq8zw9zd1jtf3clq8z7rfocvetv8710dfzlz15kfjwbcgrfm2lccehs8trf1qgu2fdz6fck4\", \"ponizvuwz1o0ugr7uhiralnzayrjcblk68kg8drrxe852o54r38u7cmcvij2us0ewulhdt2dt6qifjf87xd9hmxt47m2vylznpu0iy37okrq95khnyj9a0djp30v38m9klq9zquj98e24172i3vhwts3fosues552n3h8n7m5rdpw8enkewi8vwbipz\", \"h3fzj8jid16rj4g53bpq5l24pgmw2jcmre9xn7syv3b13yp0lv1i1gunardt0fgrt6xqhfn69fpevp1p4\", \"gspea2wc8x8p4hnyedtohul83noqcr1owlaf1vaixfkmyxh27ajnr2g3syediupdnd3u2kk4s31j88s8cem2ddyyqt2kohrp7jiruy\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"d1x701lfupl5kc422ijgdiiqqq1yg9d0zt50hw4x6xx5xj90ht586mgbe9pcoispk8amfuj8jx2h83skqqv17sl\", \"16ei5bi1y6ci6opcl37bqghsbxbk2bn6suztftmvp6rb1kfmp9okue660hi93p7yvusqjyp0wjyyxq65swmulhwlbrrkjh119dl9i0cn5oux2kx1o0h7\", \"s1vkt71rda4f3phrm1jdy04ip6ue76wfmdk5oerx3o1mj5r6i8cysj3mmnzg64gbeomsm9xcrk4l5ecg9dwkd6t637ogoshw2sxd82ot69gopy10416iezqx8yca8yts4x7d0n0v68ty9y5qd32tn82qp9gx4uttmxegam9i\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"s7keet341h0lf29orzpiq3amgdokbgtox4hw0wka3xeff1wgzi68mt1wg66jkzklhlbib7ixt1cze5n71tmbquqxaeslysl2x0ydg2row9gpsdcrw2y215tgv4v351anwww4v95h0ezssnauwdynh5ufywrcc8\", \"r19uqehsa6ecnamjrdm5s05l273n0x955oqwq3fv49bgs3rnwuqt0qtxt8mrrba6tzhc4jad08csrndyggu1g2wylzicbwvo8p7uuba6owd88t69hn62ur6c6s8fez05w2j61zrlcj5yqv8k6rvfvqrecyvjgx5b7eeplihgy\", \"wjciafhjaq66fd53l2yvzejnygu6w798yb1z6h8ndke2t0bj3ugkwe7ch6o7h0adic8lh026\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"9jm24gqheu0tjz09ya5976c3qj\", \"5x9hlspgicp5q86rk39uxxsm6asoo5brdy3r2ct477xqixb6k9ns65i300pvd1r2ihub1xznmtrxxx32znc64cc6608fv1vjlk2caoei802fbvwe\", \"upl65hdsq\", \"x6w2w3ma8qnkd4etdp32jrpy4sz2yn9uqau0lwgnfega11louf8vwfy1pfmvdvtbrbwisbihkhvs4h4bgkgbv69jdxpwabczk5bsrseg1p3obbv1ho31qhosxobog94bapyakqx7774legeh4sot6joj7qp702zbbx6hzdv0vfvb9clytenvahpip9qam1bmpiy8yik9\", \"vfh53oipbbifkvd4i2tm674nkyvfxmknke8hi9nik7eun8fsovottludvmg55l9v7v7dpd2ojftpqt4t49z3hkzsjbbjzuj3qv8swk36omtq573xf8kivgo6e9knhhl622p4imdpvxw7d5dxy86\" ]\n    } ],\n    \"service\" : \"w2mkmvwqkds\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"uu0lh9bj0tj4\", \"oa1v0ehwj8d61z1c41955\", \"mn90xdwy7ghur8fv040r4ucypbtp9pr273r2uog6qs23ikexndb70pb1raje03umqd8wqf\", \"x7inv\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"b4g4rho86hl2a1dxsfrd4p92g\", \"7ynk\", \"4zkxx9y360j1fqf5432sz4dhpxcdjfpit860a4708wkh76nxh93cix45hv9arygqmwta7v4sv12kss7aglytig0igzmghvu4d8lfjbhrn6az5jbna6g3n968j7q9awi5sfaaiu1u9w1yqbcwvhw1dwlk9w\", \"acb6oeo2ssmke3gcxg5b2\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"ya4lrd1lcm0n9dgwqfqygbebybyrxedz8b2iypzqkuxwmf1ymeqqaver0dorno8s0sdt3ak2gzkgrb8zcr1d7i5joaisufumku9qdkd8da6cpl3ru771jopd2g0biqf6u2i9ljp9ljleat285m543mjutp6a5luc3dteh\", \"s99x4jd2b\", \"zb3zqvu1t5o1zork6mjbajmmutx1yqxjm53ujfpqk23apk3szidefhule253p9wef8pj8do5dv4pvbfvsmjx98t8d30h\", \"0osgrd5daoz1pvw6014n60amb8a2gv5iqu8tdk29le2vcm691qf0499dqueppgqoqaqr4k3khfj478g01ehob7dz58x1c0a03ghmxohcvnz731zp4ja7gxgacjexupusawizneaawn9t36cdubfar7pcvzrp6zw9la4scent31dps3p\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"216we5flekfgd7ufskiu3ntwiwlcwsrl1963h5axon5zwmqgqohyyzm7ezasabcyyed0dmncffl1e6o6h692o6sctpdbxx9u7yndjny7akw1ykqhg2r43udqle6scb4orvt5mwfm1y84t0y0hwe3duyajml7gtftm7zkwziscu083chsc0ywuozos1r886jdo43nidey\", \"f4l\", \"lsbwolfogqiwsfzhzv8g0potzp92lqjdq8pr2fj09y08cqadewsovasmhncbgpcu4rxcvlobkf5z4v7wvrp3ryc7qw84\", \"0jdrwcko395lr8r4lwns9glo1xa2nnm6dwv7glschm4tpdu57plkw0siqit36szqx9nsiekyi0j4x3i6pejkl6u14q1l4ccgu9xcs2hj765uy6lert2t1xnpgbmkum14q7e3f9rvy0ubl11i6wmejinuwj5pvvimwd13uhyelrnwigbawxurt9i860d3sa\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"hc9iiwvw0fpzmrltnuee64i70kkxiz5murprpb31fcmqy\", \"fi5h\", \"nxuyclje1z59c59f3ovnbg5atg3hx59nmlwl6gikww45w26cwt4\", \"ocsmwbti9do4f7xg51v3tg12ovisb2pv7jse3azh1wivpn4w68dqqtvk5vqi11bmtk7t7eob8yghod17kje9xhegicsi28qvn2afn761pd7382qzdlwaaxxok40f136z3d4f2jihxceopl3n5uc7xlwhyhb680ncwt2digp1jsetu0uno7p4mx8kd\", \"f1ozratltlspdokaiah1cup79ya4xu6u6whi0p49wxfo4gw6vxg8n5bc714p30r2qw61y4zs140k1leffbkwh1op49o5glukbq6o\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"2rmlmwsqcpwreere6stacp9fpmavspcb3t\", \"ndjb0ajewq69w47gtog11fc3cdgee37xzd08ayil0ew19288xsdqkt8y98z994drknnatfdo2h9ckk00wg2jkhd218jp54176hou97heamqah7waaiw\", \"7l95\", \"1uncon0rpviyq46i5tprdxpr9r4qnliw5s3i7ai31jdb26uvm430sfirdc7ymr0g894rb8fv8faskwihvvwvaulc137x8rk0xz9sbxc3vytysnbn1ijze14cb7yab8uv1s311covlotga48r7ut56exibc8utjuknnah4ezzrx7m6u4c6ym5xjv\", \"6foni30usno9pympzldy95qu1vii8asctg\", \"wuxtglcef8i2\", \"gm0e82yqasgoqlej3awc42qghtzvbqhm9lr2i3h007x5wyvzqq0d4pks1lewb7hzmx05ps84nku2nvod9akzq0cww06qemkgi11ivsuhvz7zv\" ]\n    } ],\n    \"service\" : \"yj6glmtalqjdcblts0t7yv9e8c9vmdjix9k4d4xr5sttye69hssaegtq6h0lxd1gh0ho7wjfz3upfhvwpuj0rc7zgucl5bx2eikpuvlxziy6bv0nxav4v5d8jhdsqycy506xgjppmxypq4dubfk57i1tfa56nq88pl2tbtxoemuoj8mfd5dhazymiqh7ujjz6qt1kqzu\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"q6akpmyxockgwfbkdif74uhy1lsw83io54kp9ofwgjcslerbt8dl06vedwve8kekfe7t774m9138tz0x24aw4lzbzoegh\", \"ob3ucq\", \"jgtkf1egyg35kdpub7\", \"uv34536njpf0cuh7ri29s7dpjlg8ur12ixqorvlx4ht1zgf\", \"4t1jlpb1ksli4h9b9anmqokjmxdqpi6mfu1vjil5en3imiczyajfsxzo29o28aaxa2uiuo5j1e0u6pm25zq1hddg93szm1z\", \"0md5rk2fc4vnbnvypyjinmgfmlyrdu3mqpurjv5k6yyyry1tijtsham4znqjph8g1q4al1me7n7xber3e0hnognt562zpmq3rhg8afp7elr5iyqsa5ldc30qwmvswb1b70t96eqddi5u9r1di5hs4h\", \"44m5dbrumn30rc88xle75mbdgfufoaa4rc6wghhqcrc4rip5pivjcsgy22mipr9xzjw51lwt0vm6musqbkmac6vdxvfxnch8ltub4qxofbar1dehi7cgggqq170r3peyx2h2uxfb5espy21zf2d9fdg064w6r7qj6itix9ea1m02qpcndz1xjltn6f49h\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"e1ny962refi7ewknyawmn50x6fe2ovhpf2lu1s9ve1blquziwew6qp84usrdmcgfciojkswhgt1pf7z4t2ruvafmq240b7yp\", \"k4ri7pgxju2tnhb4a2gee7fskoirgxx0axtdjf3cqct3e15s1\", \"s8km3z4y447m40vrpjch1vdf16jp3f6cb1d39d2vpzkwffe7n91ge1htnn06o4998axqilcnpyol46madgmwxdf0ul3gynfr0l\", \"elii85qna04r1ca87pd9dk68idlrj8a8attmazpkfsq2alxv4ss07fn3ynh8nyx3njuxy71scqasfd5acng85ivhqyzg9p4kfr1bsq6jin66zg7ildsxhp1782eewl2suhz71gvyd7p\", \"sqfpolq\" ]\n    } ],\n    \"service\" : \"tyqpzejxn6cj8125oh9gn6yrnod8bqaj0xotxgj58nla7fxgn8z91inw3tt06sto9powlrb4tulctc1nku2e71qdh3p2ghr2y6toirb1dnueqn51m27v0bvb1wt8orvpe4seoxasyl225s6b8yfbl5tlf4p8r\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"x6c2zkdwcg9ar3uovu363h4gn40rj0wvyj0051je8c41mjfhw7zv3aqt3asllz225daa5xf01d2q7zsnhb0sf610z8xv75evgg62mka5l9by3vgyw2sc6vlt3y3x1pj8948gof7v6fzwhwb9a9h0gt9lytqokwd8i2sf72udkzikh6y6rfpfd9xixzm37qyi\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"17kx6yidr27gj37idtbfvamsp9ly8r1oefx3f9f9w6dow0shga7qx4uj9p71ngmxs9lsexnugejjhjmiunod3kwe66a5ftmj3ppvkaj47pky1bs9k4ndqivw4gfv4iwl9wjt8juat4m8g1f7i5excsz5mjyn6e1e014kjmxulxwqfcmp8qz5b498e00sa\", \"za2t6n6zqzuyymstnwtxfaahgcmgnfy2cwp2habrvx4p1w7nfi50vp9fbg5kosfo4mfoibsv2czukdqqnuny7etusc4nv3axatpb3wpumq21z\", \"qk3jxuwraq7tz4lttmjpx3fnne7diku0m69qww2y7obbgr9ggrpfm98ogqg58h20scz17k4az2ti0g7eve0rs7s5m033o76xhop7apydgo79hk2rfxa84te9q3uwmeif1r3hvgh5kjn4erfj4tt3k2rqnp8ffll64qdl09lrwdwgzkxa5b37q77ffp0l6dgh9wbuwn\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"dh9osed3fd6vn7tw4l\", \"vgt33ugf47yiedp0o2ewvjwpedo1usrcmdr77pcq520vbznlx8xh07e9v1fvg1b9zw83mz1w2eaynlqqzc9peb2ixtcto8qg67tgws9m3zss3zyc00gkduwlg1hety8lr79uxgebuibnbd3xq13mkxf5pdj40uxgf0dck3q\", \"f5g4d5rc84r7k0mhode32btsixvg8b7sl\", \"7dd308cpmqe4xc1gx85j\", \"ajcyfn4l1210wkeoy2czv959h4mblialr3z4orz3b0z7lgd3yq5auzwz8r422xn9qw141rpjsje1zig42g7jzve1cv5a7f9h7c48bv207ni\", \"bt5cqbf9nuinkwf6n6anxvpy9j58z5xidtpysiq8kjukpmoai2b6oe9ksjsdm\", \"h4aq1n7wpoiiy4l529mm59h3spo319ag12bilvw1rnqssvmgkw8zubw6btf7qj7xeroe3mmbbhrylep1prsrszf7aeyudsdeoa32a439xefikube1wdh\" ]\n    } ],\n    \"service\" : \"pjbyqqhfznrepsvs8b8p6qk0oezrnrugcvzf3opb3k6vuwqu9pg07zjm7zdpkxzegbqlpa4wpntqy5wy1hn2zqqid5cbqubop1vghf1\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"dchw3d05hzbfkzvx97ihbycqwkl6rusix92yh89do5x61hub6okrqbrvcapmw2jx03luwkbksshsx9500ckejr3xdri\", \"c0wuarnj5madib8fyoth5lpy613dbe4y5fgzhzibew3wqi0aonxc5waa4y54ca7j1ekmuibpx4vx2hvznk4854ou7p49csn4n17zrbqr54uyymdei67knflvcrgv9vttg58vy372wlruugzudj2v944om44m0rgqr\", \"mv6jy84qbj757a6kqemyfmizwnrxar2wa52a98iyuq881yp753xj8k46nsrq99hkt6ygkjt1tqpork2dpxz65klhozrhjk0peilp13cm4mgsl0gi50urox406l1r7jb7z1tq6k0oba4\", \"ypmuoflq78gad5h2ny6kpjrvnrbj3pcg4d112hw5tplmx4eun6rb9gpmvkjxua8u72wd9fbmhxkqfhnxx6p440uqzd9pk3w7yqm81m2hyoj86umbbmtrmzdjabadmnztinxoy96oxfrrgi7pee\", \"szjn51wof9eo8x8q4hpawgxsk67lqp0mla5mt7lbjq6x53iztvlj6zxcl9jyu6dbfgyuijddyb2r5s7w1n7pg195rfcvu8w5e3xtxko6suhvf1gwohpmanbed36u7c1hvxa4zwhhz9srkpdcngzp3umk7mm8i1755uavpr2qx8ys8vjjdpq591yuyb8d0fkokn92mfuu\", \"xzd9imq7mwiyhv573l70\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"h6q7srp9il4c7e9snqlfp4ke4xzx8da8hemlmzzh9vu7ngwtdre1wgtrah4a6tqcy0uwt0pr77l34y8t1b953uxsg77y80c63ohrsdblmzhkoja9szmw573615dduaelt6s\", \"jzs4q052xapvs566jpy8ebt7vijnt9mr1zp902h6jojof852lii0ink51k7aagsoft9pqog7ay76f1351\", \"5lf5t1vayqrok5gv8sshz4tc3q8p38dlib708rif1nx97z05rkr0bd56j5zwyejk8iioipzmyhbpihuicy22odwze3kiezejegne3jlyskcwlqma4ayw6o6g\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"kcw64upxaewtzik8p4\", \"hv6gu7exzxla54x02g9evih5ih1awvm80hlesn708r2e5nrtv7gqvx1ak1iw4lkvkia72l3j70bilmzreul3w5kxtu803ybhkpe5znsngaw7ixlm9mia2a8njl5c393\", \"35yt1i1lehy12jwj8lf9dnclmq8r0bx2b6k2s56jlz7z3y0y6gx3u2f7t54eeeqb0vtazct09lv\", \"ldth2v4kq8k5ch7thvp5jwj2h4ke6yu\", \"65tyv7v8bu2naurqtzz39w6ez6tp4zgyyw7ubrkesfasfuulo1j6eas16qxsrfe21x23t2onesobz20nob1jr221skpxctevvpgit76254vpeaq0yxl1v7p9hosymkvu\", \"6o0fq2m13rizo0b9fvvvkvki5xdxi9us4vrgjx21y1n7cxpsxbjo6w9dqla2pcozrhyaj01428lfwr4wypvy1rgt2fj6v2o4vnf4mwsucna7pivk9gh5q0cjekdzrjn3zs0chzucwjpr1mak7gucvqqlqs2a97zh8tiobakcx35ymuag0ya\", \"uu0pibutkcdz8qey945blc2qoj6vw0ddire4n8i1mc72qct1vqopzpepv476cjvj81joucwef79yq5c2zawr33iasl70l3yxupfoitzdwwjwgpcyj\", \"ekwlym18z526amww7gjjjsz80nofd0ff84l3bn2xfhekwe6tltfmnvcy2s96kjzijy00maod0o6pwqdydtqqm3lm7awfk73yqydsjzfll25ftgmrf9ivej3ba\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"yxlnog2if078ozqfsb17v58mpy0ra4wiycat61k5qey9og5t65qvotxah7cbkewt2vo2jixsbja6g6gj2tedq3cv43dunmz23k65k6atxakbkan5dagbu4f22t1e1qsaduun3nm2h97rx2zzih2qy2de\", \"ov9atbt2jbq\", \"algxkpk7hdyay1p5x7o4oh7ug18xvuxf33cp\", \"a1rrukcvu968u7jn57p8bipi3atag5juz7opwspp3b17alar7hjcyc9g96xnmhcxfikxupsbn9ceqb7txp8dzv0lpgq9ie3ba4pvf6qz3h58mkglpj2ilitsme4cb0mxzf30vphjydhm20ca03zjct\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"79v4gvu1wj89335iz40eeuoa5lx7an3oisuso67193izdp5z8dwcs4nvbmbz0lg71mtt4gxlxati8ostwiu8vzau9wz6g1mi6vb535xdydjybnq\" ]\n    } ],\n    \"service\" : \"0m0psybxym2zq9n4hvh6bfkojug4akkf8hg8k6g2cnkodno4mf5cs33yt2mre5svbvxrbkmrcc0388g1zss2lodjgtgib28irdfcvgdgvptsxzq3fitypjex8xaidcd4wdd9h5h4wiwnloman5uyumqd8n0tdqq4jjsotn7dkbl8dchd691xnty6hwdpx8nj0l\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"8v7wd51nitm1vkw6nuca5nf63u92um0u0lsv6nhqar64qhudko9bt3sq9rmm4nelbla72t7cr8c2xzx0q6l8r43s1lmj\", \"qgl2hn8cz03fw9ykek1jr8qysy9r6tmh3vbfaozfda7ily7lg96m2fjdhvfd4h9bi071l3442xsgwqk9a6fwtzc833nrqm\", \"zcqztpf7u30qe5ztcaslj9dudjp6lg4apx057uptgbcrfxe0l6hxp9dofi8pie04239t2m3szxrhm9qtbubfivp9o8xi7mjtf6h1xawhi56fhid87hmuoewjn78yag488ac1f1cwurl1q3tbpvyrg6fooh87ghbz7a13acg1qr0rj9p8kjy8ag85x06\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"n4ps9mb0utm7f5uo8ovhr7icmo8cik90hpwxnjl78llth5rqeg6lmjzamiq6s7f0rcfp3v\", \"zbhlqmxdnom54edfdb34r4hx4rf6151huzcqasotoqe0t26kppzzi1p0qu1yivb665ulpvu7zyjzy0ff4w4axuntcehgzyckplb2yqol2anken04qnyaghrqsvrzv7w9dsol16q1n14ed8q216p28rf90lfkzxti343r667x7cln03hjjpl3on2zx4xx52ifuzd0u7wq\", \"5aubph78xuoeuy3y5tkrfquggxgezkh05b6tbbnbcidqcxinyyj7gdegwfxk9b8p46vt5dg2ywbuuxv94ja87bmf2eyaphou62cmzzz5plzc1a6tkk3oo7c0f2q1k7bd88eegluxwc4lx57isk2kfglnh66aavvdpf4c5nm5jmvpyg\", \"50xi9o16s6t2jrw4v5bz4fvokz588yguif6d2gt9bolyl289axxbea65gjkei1l9og23avj9hj8z8qa0ogg1ta4l8s1rnimczrdt25bu05o50x381xk9qwyrn8tr618bnunkg\", \"hzl41nx2a\", \"9m8lplqdm5706weu1eavf4hr973ez5kf3f\", \"8fjv3qrypezjsxpsqlqetu96x88qyad8bdxyr1x202q8t7eoy15dmqmp6xs2dresa87r6c\", \"cj4wfczi2a9om\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"pe67oahfsmsxv3xf6sgqdntq9frop\", \"yxh8et7xg2p1clspsantqtcpbzwjgam7q6lr17h56i0vf8l2f6ijica0giv7tk6gehep3kj8sff9bi35ob0bbbuvfyxxcz6rs\", \"4o53i6kzcub5flc7x3gcugz1u1ctlok55hb2d72vj7vk\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"rtsubgjwipx27j0hgz31muk6cc20b6xlypuxky2933f9c860xrnvha42yy2atiqkhuvv22od379vv0o0pzedin8mwy4qtbo0718zvsrvkysyqbwnx2aocn8c2l1355or1hchs\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"zcpa0less9lui5suuaw0elwpltoe5kldut4hzxx6krpgxult3m81derm71f2aw\", \"v4ipqzmi4y0kl12kuk3vh8vsptp54mlmfjm80ox2jyo07vn67nlt9irb3d1n3dy\", \"9gaz2igt4iyvbuwd1awcpq3ntn07jj2ig4nwsl39nub21h4qa20pl7w625xpfk0wg50ify23v6hdep6y6ornst7\", \"kw80pxm82q434g6b8uy88edmwkt42g1ehujv6nsc2fb217dvnriokw8q21sj7xt0\", \"4gqol3n2y23p9y1fitlctq0rk6m1ebo42bqf69xln4zje58gew1g5us5ova2af159njhp54pjkkdqfsy4939rc6ds7q1icemhvzypgnfx9r681y3qtkumiwdtykivkr02no9674ll4ybg7jaj7qozpgvh9as\", \"pytb3lgtunl8zwpfloeem2r3ye8wjho5xhd2apa20eta23ml0zltjgsyyid47jjs5msgb248m4w415imqy8i43wfsbsmdavdml4dqia8u0uqjardq57s6225ywr6ouqlipzlv56las0c0f9fw0brwxr0m3kr5s58mz4z7tysfmlvl7t73qufjkz\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"9mjwtgykj1gk0d9thyz29ey323ignti3cufp2yvbhhd2cynah3w3yuobsjdf6w7p6kkj8dfec3gvvdxe6u3hzhnsssob2obh36booxv6jnl75ica7cu6jc\", \"r4jrspxvr4cfuy6der7tgfe1f1\", \"au1oph3ksyd4uz3oaq7qf6rem6fpp4g4k2gdfh1mydp3iegk9wisp7t4yn8r\", \"ekrtzmmve7tw1cthr4w02vxt2vogzkjol79wd0gz0q2a8xcj5i6x9907zw3yjsdif3942pevdvnxv51y3k6tx956el8vp6d3erldn9bzux52t6m55gsz2qk7mmfpxfsqgstntohuearigzgl4qbpswa9jal7qtz30\", \"nk0gsqc23qq2ownx9lxw440f1bm5bbgxqh6u9h71ulh7bgby2i3l9qasgi06sr1heedv1cpveamcio0sav7mqfq9ecaovxiav2tr533xfy5x66l3grfdd6nsowkdc386o6h5s28urbvqx565lwqkta54mzdfjohctpfbet1fwdy7ddkcgmkpip5e396rlg4d8oibv\", \"gqpqq0irjtw2ax10jyggqcrbtagx50dviyo4zk4kqf2bqnkb\", \"errvzzjqx\", \"0mfifdf6j2fmoo610ncd2ivhcf1f5ydxdht1mn7bpv6ka0zoqg1kd1mv7k1ssdkxwkky73wz6wbs77ux752r0gju3r94g\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"th9qp6fun08zqiu7d1miv3dr4z3lpmiqv77ffq89d2aqr4d5tsakvraargecho7p91ff92miclfnb433mes9kla60grgnadyjzz7t4ltluojs\", \"c2wjocqcrgv0gfuxao9vj75bif5xk4ywyv5oxwhb2t32xl0xxk2i77fj5cvq6vat00zj5k71avl4hhysjuizk9fs0om9uxgkuod50wd34y56qah4g5oomcoy66ki454parluq5qzghffvo80zqm2xqeu4v7h9hnlyz96fpqflhvck2zt\", \"xyvhqidavn55komffuza33n3p51oxde4edcpnv3pyj383l5t4f330um8\", \"8d638yek2kmn82gkity30ljc0il7w6mahwy1jmju5scvlm8lhkffplq8l5o20f54nc3znut12a0ip1ic3h1jutk7m7lbcubyawwr5k8\", \"ezeoqu8g4srtypryvixgro4gubmey6t6w9cxunkfgagox3kd2bzul0s2wxvr4jyz9x2kwvlx0pt5gemtq6v20x6d\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"k3uworttgvzw4kffn4acml07iqtjnrn3e8tq8dxijhwvqdugydhsguimk7eqr6kgcxlchzetgt\" ]\n    } ],\n    \"service\" : \"sl5w4ph5qzqo0o6juv8wygpr9uu2gpimcfcy0amtk8a409mqfhv9ummhddq7wvndwe42wq5qbecvo8taq21hjib6oly6a0k36n5nsrxvakrxy05fu0\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f508c0bb-a72b-4c15-8a6d-ad980d82eff7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:34.091961Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.clientGateways.setIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "auditConfigs" : {
                "description" : "Specifies cloud audit logging configuration for this policy.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleIamV1AuditConfig"
                },
                "type" : "array"
              },
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleIamV1Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f4da8c7f-1dd7-43b9-848d-2bce8383ad9f",
    "name" : "Gets the access control policy for a resource. Returns an empty policy if the re...",
    "request" : {
      "urlPath" : "/v1/4qw6ksm1lduav5kmo84xrnxg1jorivo92k5dm2jteu125bnmu9ae:getIamPolicy",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"7n47hamyu1as8xkkp1xah5qaeow5iyyzb9kg7cztnn1acmbdmgyly0jmmvsvra4iir70rauzk9h8jxdmsmkzemdbkihzg573otdj9hb1pd1bc2dpo9rpen779jxhq8aw\",\n      \"description\" : \"Maxime non dolor ipsam provident. In provident labore aliquid facilis et tempore incidunt. Deserunt nihil eum. Commodi exercitationem ducimus nam qui rerum. Corrupti minima in possimus est.\",\n      \"location\" : \"m5sf8j6ouvwtuwvj4s7n2t7gs1tep8j6xid3aopbnt983a7b4b2ns2dcwl268n5c79vlxi25il26pkj032a8ni6ocq1\",\n      \"title\" : \"Vel voluptatem et non qui id natus sint.\"\n    },\n    \"role\" : \"shd3t1wlzisn3nze4j9x4sleb6npzm8i3rq08rhql4ryapla5f4aahgpuvz8j0l9q33yug3kxpkb1jzwpoi65acs5xv32zigoxmtcrokjd42517xg4r670beskb78sxcm1bhl15qgo6b92rxq5c8xb\",\n    \"members\" : [ \"bve18w66ieptsutib49hso7lh4ok18gvrfdls7nfwl8dwqula6aio\", \"uz4zj8ccsk4xv3k701ispjo84trrp\", \"dulse1bxwbmbrfznfva717687hxtxb5z9ko2a8xhpikyhftid5884g19hq\", \"9t3utvv8fsrae68cmnlhvmarz0vgs2vu9x8fxpm8w2nkf5hgq0k51y8afmusvez8\", \"phnyap0z9uszfukqgf5bd5st5nofqimphb5ni18w\", \"2syao1mzl4k3w46z4fjqgrjb1s4vr\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"kqn4l5n2\",\n      \"description\" : \"Dicta atque sint. Alias tempora nulla qui est. Porro reprehenderit est laudantium voluptatibus et et. Error rem laudantium necessitatibus dolores vitae sint consectetur. Nihil sapiente voluptas aut.\",\n      \"location\" : \"8y9puijge57s4p8l7pz2y1xg21zougescwi44xycyf174sg\",\n      \"title\" : \"Quo culpa eum velit vero.\"\n    },\n    \"role\" : \"q7ims95cjg1z22\",\n    \"members\" : [ \"phmphif5v2cxf6jh02l754vwls9t19lqenldq1rmv9quzsh2syg40rjqlgriy4kielpg3g\", \"uo76cjxn912xernudlczj3n81ac4imbqwkir44qvz5pcrvi0kz84914o78rzpwdpwdx42ld2iicv4tzywrut4emzf5840q7ooxuolmy4x442j1g2ht9lder7i2jn8kvl\", \"fuvpa7ye8rj3ylsljjiu25ln8b8cii0p4lrbpd5p2235yt528w379o0qeri8fpadqh2kxautmflz0cpekfa9kkbchp81jq3p1hawmi7yghokd06fzdwgyhktnotghdxulpn7y0escoslk85jhd4vjj8mq2dwn26e627gieh86pxyezixbby74hrhs\", \"el51qnuzkeclbh3cs3ihvr4wctz78wiovoqslduk2altj42gjcutqww1pzywjwrdljj5e3wad3msj62zkjbompbyqwaxgzlinrmjm2mbdenxvgxo80xevbezr50zse\", \"t9rvblh9azfhysr2sukjl8m4yw3bc2u2jb3yv9wgvuftepnnrgdo0ktzr77hqsq3i2q1b2psxrcxu8f2xp9y5gx9kn2qqa7somvs1h5tdvejey3udefr5r6\", \"2709zsya043ohnny8m9zxig2anq8qfmt1vqm1ysj6mh0lkcirxmnmyy6q5wnpybzd1vgmq3zsxo2oa3eji03k0jkm6ltijwrku8n66az9yzi386vuxwy7ftvlck09f3xdd9jxyoudhz8iuvkaku0z\", \"oi2nqttg0ly7hbkecv4r52msb0gfbnvl4fq0r6otzgmg63ylbg37ryuzis30lj90yeewghm5o63xdmo0c9wn0hng2x3exrrh1mda5ezrvqtdgwl321rguw026hja0oj0pn5uipllhwnh8xlze1ghactd7yhne9ol7202j52q9wiw\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"07gh\",\n      \"description\" : \"Reiciendis ex voluptatem nobis. Doloribus odit quibusdam corrupti neque totam ad. Praesentium et temporibus non exercitationem et sed.\",\n      \"location\" : \"5ix5xy9h3011elw8hcrwa3m9ra5n11yefokvo2po0gd8pb3iadyuhtl2e1fuwmjywzzeto0c3yilwky6wsai9o5x9\",\n      \"title\" : \"Dicta magni velit illo error.\"\n    },\n    \"role\" : \"4xj0xo\",\n    \"members\" : [ \"b4owxgeboczowtexqorjiyfmiajxmi7sb5w8vurq\", \"np6p6b9m1s3jzsa2mk0e2ulqs5puj41vda4es9n6po3q7tjzmcg369cgeysnxq\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"m33s3l65itvlcbi3972f90wp12pnurmcvnhwka1z0a71tq7wwt\",\n      \"description\" : \"Impedit dolores eos quam. Eaque voluptatem quibusdam provident aut est facere alias. Accusamus sunt aut qui molestiae qui accusantium animi.\",\n      \"location\" : \"sd5kvh9rp6942cghr3g48v7o7gtutzvbp1z7xub9u1umoqao2jhs43zk2eefy6wq36y2cmt4ga544knh895ljkl3h\",\n      \"title\" : \"Porro ut voluptas est iste commodi asperiores.\"\n    },\n    \"role\" : \"sfdzmqenv83870hj9qb5z8h9mfgpywtz8fezkeiklg6o068isv5o8cc1killnkgbjhq1lo14fr1e52kx4cf9zs4fgiv5ikgag2vnnynr6xvxnzng1e6h8e4l9vy9v93jll3t32w24z\",\n    \"members\" : [ \"xg218zz8y1yf4lme53kc6rmu0dh8ax95d1gabmhgy4pbq\", \"lu6dmf52fxd1dygh\", \"ya3vq1ipa7o3lpusl6cv1dmddr3t7z5i4atf8qlimz38d4e64598x1wedv7cvqdwshuvvyx57aeaqf81r7b9cp0v7riafp1e0oetzbjp7w9mq1wcnhegix0fa72xweyd5etjl3af3d0k35r0ory2oxwvncsbkjs4iwrxjw3tyfz3vp0n1svih5ny6itd4yyjt\", \"avrkjujhcvw7i8bwgju9kgwquqg106nt5jof0dsj894h6yv73qglloc9lak8mhklxsk0pqkgacgurel79zrcnk0s8q680gh8n70b25mr399326v2n8h58n51wubjs88xxr0xfire7da71ksho4wumferor6ivxggycfeg\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"xl0svgkvap62pdwef84nokj7kh9m9fmczofv1985oojzvgzsyoup051d4n54pwrkl2\",\n      \"description\" : \"Aliquam praesentium error reprehenderit quidem hic ut id. Facilis voluptatem iure eligendi voluptatibus. Rerum qui voluptas.\",\n      \"location\" : \"o78ikptv4vf7hhoj5mtkodsbso1s7m5qi8ylrjj09aou58o09e7cb3u93wmvfrdi17lvcrnv71gxm9ezf25965xmeetnylaa4aqs1g5n7zysdwbtv0ujz2wmfd7x6796bj10jylxgs\",\n      \"title\" : \"Molestiae magni alias minima eos voluptates praesentium.\"\n    },\n    \"role\" : \"jh4aej9rud1qj8n66irou7g0imy23alazvuorlxhlihvjlg0x3jqdrjnaz1\",\n    \"members\" : [ \"ecn7j8covo7ys3lku0ql1o20ipimgtemkuy3gnyfk63cfhcv76pwq0wopga8x18gshjcqgieq483tmq89jermnicekwm71vmk68uhjyrfbstkim0b0nwtba7c5n896esaw7ohsg1wms0xdxii9i1z6v2x295n\", \"pk8zqgyx2oni29zs28z4wng8o7sm53pou2bpbfm87udxfjgxwc4y34x8e71ecdryuync9jdevxq95qsrzpdmogfxilniiq79lhfbmgu7zyvqs4w57bjaubd7on66ywoanycvqarz8repu7cvcplra9t64rn2tuc6oe00mxa3g7962cgaq30gb6pn9dl9y7ho88yxp5ot\", \"turjkv8lvg2z163gg81byajeae2us49fk1oe4j2q1k69zkk9bcqsy5pwtivwo8q7qgiafm12x58wam8vbvmo21bnay7xbxki5rmz7wimpb0pfv9otzderac4ic0amgjj7q63rotcyi6f85ath6kajfp11996w42\", \"ttnrlurto5dh70mpawgswz6r0vro3z0bu3v0p8immbxdum08fddmneeev0a6qmm8qsocz90roona6sew3m3t06n2sy8qhwm84na89lh0tk7j924lw4lqkym9y9npk7039l03grmulz9pakfvty5dgn9y5e1\", \"jrgfb44gpk8lttnfwhdhyewzr2bm42y0d3da0t35whveptmn6q571t66reh5ijssfqgw5b1vudtg6v\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"vzy2gap6v0l2l4dxakh0fszz137kstrpvt8cs0be8bsatnop0j3vwkkzd9\",\n      \"description\" : \"Cupiditate id aut aliquid non. Reiciendis unde rerum in. Aut suscipit molestiae commodi est qui totam ut.\",\n      \"location\" : \"yz2ghpyb84od2c9og5jhf7qznku6uh6xolfp130v136pdh5q3vav455tp1q93gbc44p5wqsp61a9ww0apkcvtsbwxc7\",\n      \"title\" : \"Culpa qui ad.\"\n    },\n    \"role\" : \"fn5skm39v3y58h0v5719s233n3ki5ka7zzf64647njookgprm87gwwc2pc9i36bo1hqe9j7ta14zth3r7f\",\n    \"members\" : [ \"7iwocpwdn6lww7rtj7qnc242zpbqsnz8dd31kcf0cwysx0vs45vgp46pwlmsf6x5a5vn0u0ki94yy9w0muj4hwj7rp54kk3ha0zrwl6sj9g0d4cm9ys5ive7s\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"57afdvpo9j29a7f2uqnyzk6efgjq26g6vas3eh5gfc5v4nz1x6\",\n      \"description\" : \"Dolor odio mollitia et commodi voluptas. Odio voluptatem qui praesentium magni sapiente rerum expedita. Nulla ut eos natus ut qui tempora repellendus.\",\n      \"location\" : \"jxr75qlud7qi32zwn14rine4re261zsdvt0jb5tzccsvyj4s8rs1yx8k59a6dzh6izdoe664eveqc4rb2qpapyesthzd9hb3nro6iadrco4vnr8rsjrukwvem5bgt79o3s\",\n      \"title\" : \"Vero reprehenderit ratione non incidunt aliquid asperiores.\"\n    },\n    \"role\" : \"232vef6sf2wlb7mq1mdf6qbaftnb2zixto3jss7c1a8jq4bgjndcqzj4ezmtf3yixygn3erzujze7lka5mioegr9ef3yhoh1evun8n9gxwmm301vmu0lu1xjlydicuhiczsn3qj8nt53u6ubzoag9y829ohx\",\n    \"members\" : [ \"rdldtqh16v2m8xq9b50dpsf1d5tfzo50ekm8mjzbh23utgwsv099jfagc0dsf6zxks8u983g\", \"xxyfqtar8yu5z3r49rh8k18ks2q6902cszwf5\", \"isvgbos20bba1iy090g3mosm3rqfj04d80enpt3shvuuw1atojad20lgfbeu7rl8t7rk4pznlfp89sk9stctywyt93thv692kyj9hetztc0dhuon4rjgggqxgfl7ffa1acynmy88117yjibfg1fit0m9t4f6zwc\", \"udcu1rurn7sbzgeezn3l0pn0h2lh7jvaxpqt2pmr8h52oxo98zsbvlv47lk8dj8w47n2gh7br1897p5sc3zxo6jttkmk54upqt82pznuhkbf6ktf4ufryefbfnr1lq5o061l6z48p52drq1frwhfrq0m2frcfgqhkvpqj0op4d7u0e7692srim\", \"tfjk8krptrgpd08mn7n5n6kex9hsfntnpzztgmlkbpn2zrqfioykr9wtw78k0dnazmhbtwga0qsz4racxyszuifugg9ipc\", \"9j5ye81n8\", \"9sbov9ipqerm630bbsf273f46icbd5q9g19rymrhvvfallzg0fq6v9b2xz2m66wmsmz1xrbm560uxeejvlvnu1pjatazax01mxr24nbcvn8u6w517l8lzezsy6sr9vv0xcauvqix2x8q4nk681ll5xzxt7n1fjgnatbq6dgnpi06aq0erbch251xqg0dft\" ]\n  } ],\n  \"etag\" : \"aliquid\",\n  \"version\" : 294230804,\n  \"auditConfigs\" : [ {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"vnuzj3ie8z4fjyhjd1e16ws80rd2zrynvpuenyk7quplwn5ue9ku70vd\", \"m9h9w0eoo86p1l64drkh6webqruby85ex9sgmbj5gpuy7y953vkrnwomo4mflsdatdyh32d4hcayol898oxg10\", \"bdauc816g6tqy00gqd7zptenmgwqma86lkuea6t5msyq0ole26w0wupflnh38t7yv2p64zbzma3zj4aigr2k\", \"qzceopu95h2700b48y1wt77q64scd3u6oucaz6rq35sm6y0pcht\", \"4seadya3nss27addekgtwhaacco\", \"pf6al65w30bbvj2c5s0wvgmjrzbdgaze6tggngo0nj56luftk34vo2erb2tqrqz08xem7n25x0glunfxl461agmyf6u9gmd2ih1cjc6a4rl2v3nmk0mg89sfitvkem1nw6wi9y1ho8zsw1w1eb0br12r8psn3baxq0vdie8418vwhy0itt\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"ukkdqmshkqjbvshds39qkvo71dt1r29ow6c2bb4222eef1nszrz537a1n417wf848t23dfp4h00bi6jeubji1rbxufvs1ozczm495138uhr26milyerpu0b5gfray3\" ]\n    } ],\n    \"service\" : \"20rtrctkuuy8iannhlbxq50dq903m4rhzuc1jqmv9wth7imvmn899ghc7r1hh655l812bb4ntydn0zoce59sio5pcu01yuo5w4crq\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"r8bm09k423wp86nnweqdfedpwo0ha4lj4of7rtipycfphg9sc024sk8zsxnhe37k8ww5i3qa3agygxlda79un7u7na2cd76fwwdoqck10mqp4djfh5i\", \"0v1myobmbgdtg753rw2cjvybwq3sfjzis02rrwd9waqdig6r7atq6lxao7y08h2t6los2piiu8k3g8hz12ya7juqlfszcgliz\", \"m1ke9mvt8r7fqwwqid9fmqrw4lpp743ca1b0ys3y7sog9il6ufz67h9vc61jdyem3aljxazejz9fdtzfxdvgs3l4ydcrw3kug6kh8kco99rzjeifiz4t7zjx54yjbstr28a0d3clpr9ccwbqaq0nimw7bs666wui93c7i6mxenlqq\", \"ke4o4ptnj94of01h2m01b09oh0z0kbuodqbr5z8e2g1kr2lze83j72abh5r45huiyu369ysq47xtqh3foqpsv61xf8cffq6pa9tmq0sbv73b0xq4nzkczkmigx9662lnqoge1uohnnc8haqcs06mb3q6ncbl65f5h52bn4wgjzk\", \"sxcqo1zoejw97z0ahp48a8sr518vofvn1gdarhnv6dfmrk52mn7mlbcqnqbr6njfneroz91heajyxs2k52vcorhunp24p9d14jgoqzd8zjhhmhaamtaqo0qjq\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"1n67micxdia5dw91roxomvid41imcnxvs8hjt0rvlag6lvt4dcaa6g9gzkoiv0gbev1wqljdixvpw50i5kac6ylossdbjcl5gel4y5jo4bnwmj3gatruipw8fqo0wu3o9ixtnc0efpk5zi1txqic29d965vb3aycbx883u4ymmpxccnt5kfla\", \"td1wfw1l50t6fqxpmabf20efzoqh7v3xrkvvh9ko7b23efjp2u4me68kwklfvbuwxxt\", \"nhr6j4rem2beyr34xy8hglb3oluom4t83n3puxstt776vtl1471sbhzzuobekvzyv929yp4sk4bs3m0ch2nv9c1unprd2es7f20fmupf4ic48igp8uqpxsoyg9h4b3czaepbr9tu685g3o0qivmnfjalfeu9spejeh60kuolo7yy7qasd2k5hr\", \"pa2ihs7auo6osej24mvyrjbr1rzqzcck6owd7vfbuesxiyprv0on64mahs2to9044\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"o0bdsnxjz9kz4mkrn8p1dhr9axjtwibg4cqoq6fkfnmuzu5a17sj2pn2pt96\", \"12ox0ukrmezaedpads52hxu78kenjz8se5897tv3fhbu57uitljabhf\", \"7bd6drd3cn7fr1wtapqnzu1daptiuuxbupiy42y4xw5frv2opcndvc2fzi02npf1ejhyfvtwvmdposmauuk1ihbt3ar2k6vyds87qmlyyh0squldsdrj3k71\", \"1mndsnm7bk4fxnck6uj7n7127yyj6vvqdfxor7l0sbvorqi9\", \"qb5\", \"cnphjmctcxlwdrl4hcbsz0tkbvxfnrgsmhesxjt5yzc7qdckuwm0viygj\", \"zrocp3u79m6e9ly45k754qxhcyov6s5ftsqjrzx0b7snjc6eesnijjpjsaz5he7p1640gegs\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"hr06l00fyrw5plngubglxxo1x9u8qjlvgm90aunxl6n5nul61l48p8kiv7a7emmlv8s3rwl37oh5a3axecxkbh4qtmo6l2cbv0bmj4g9v6sjpw2ja3z3fz3w3j1\", \"wgrqq33e713va4i99ejdu1ut4nvq299wj2d6m16s0nntxf0n07hzz7bfbyti41c25w4tsgnixfzsqj5dba0d7st2ff9cqb8ib69vjjisnngjudcpn79t3fer6cntgm8tf86pgfn94h1qgpe5drvymxkmnvks8gu37t7yroe36fe2uq8ywwnw\", \"8jnv7o4pmlout75vt0j763qc7lzbun85baolgka7zgkysmoa3tvzm9ajwl80gy6v56eaol178e3mvmaj5draypi6hl2gowoitz5ayhy9421zduqgrsfenzmxci87isv6e2ujmyhq3k\", \"5tjzabkq3if6txazxs68a20eufriktt012qjdwclf7r7e8tpqq44qbwdi24csgef2ic4vp1thh2aq4dm7fzb3bz1q56mvbjrfwxjbwvc8dk3f2s29hrqdt58mr24bux0ghwzfnj9pai8om99airtgyzoc\", \"ld8qv8iffgtfuxcbk68fbi2gk0et0854m227nqvxcva70wsss1j60ek3t3bdhk2kjgap3iyx23yk377azys0v7h64hd8cq4v4ybfrc2ccozmcxgrri9jpcxi2qjivuyjxwo2nx4i7uniifw7xj1y\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"eteatzxeksamkwdxbp4agziopr\", \"8rznypzn6e280ukoxgfat31hj7glwxd4116q2adjsxreawojxayvhfp4k17c9v6vh35d075if1wcgfw3edell69hmnwijollpp0j7h2dvp9rzf2kszochga3z4366h8hrsm0w7246nj5uh8hc7\", \"ujler1jk0ema01t4g5xwo963ecj41cqzemspkyqzr2kh56osh2rrpfsfzv268k700p3d7efyhlsqqe0dljgqmllt7swcg18q3airbypha16\", \"08t13su380opxz1fhg8dt0kt4tjeobyc0qkf5fk3qo1fcq6rm770itvul6ehi\", \"5uzaupx9fzhtpz7c7ox2mmbbpmj0gdvadtbxv0iptbeynkkxehl4esmn28y6qlsnsx88qjwqxkshc5aojc491kzydkmbep8sz7jkr52gwt29wjlwxnzodeyg6yyojnr1t1kcqoo682mbm2hb40umou842n3gkblqnm61v66adv\", \"teb5ve67utwvqnpf7pqci7b866a4vu655o9vbeulrs7o7jgr6968l8bxg3hf5bmog8gwe4yl8tobqqne6odxfzkpopdc3wt4mggi9v6v5wzh133lre\", \"8q3db389\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"0qu41zxy6zlllbe19kcfwuy51gez6jaefi5g93cru0fysi4ipn3vjjp3dovkzmxx2tdrcg6ubgbo03erk3pj3586le0jmoo2qsi\", \"o336bryzm68t47tfwrle9363z0t5hbctiousaz746e8ngujmq572ux6lns9fjzirswye68x06nl75tb0h99otkmj1fl9gp1j1p65i94mflhokb9rawi4zj6by1til94lbm4oacx45orqwdu514efr3\", \"sn86f174ibjv3scedu0hd1a34ldjnk30i01y68sf4ha7a5zw8koztcdkd7fsnbl64qgzz3nb0ls6vf9je6fgw417liem7dkrb9x28ucvac27zqv3jf3tae1kutvj4iy7b1pqw843lsq2hm4038nhreyg10wighc5niyjwezebfaoqep9t33p\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"f064i5ntjkzmplrk4ywciqzheip22bffv5wozbgv13m2dv66zijwn28l83i9anu8qseu86d9k35eus6w57007iqap30ytrgw63j\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"obgrq36nmnnpwuvm0mibpoq0pwb2yvfg8s9rsvqxnpqgtq5xp04pev7k0fd857pdntrbaflaajvujmgy7wny255xk2mqrmwbval9l7mncjmd3xq2fjlp5hvpx3\", \"vt6nq0rxyqj4we6bg14c9tb\", \"nk8c1027i8a3rpkvwl5ttuoi8dv5wo0xmnfe1ub6skloflg6a8gfc8epri9hakgesx34vgjhu3\", \"kaixuhlhw6pd1cmybl9tnjz49i9yoj4usomz5lbdx3b7fnc7zs0yaqe5mnu9z0se\", \"d4b8o1av1lkyhyxk0cff2i4oqhtu30bifoe5eg35pt3ig3ce91lt3bu7byl4bt7ttijlvdiet4x7248kglv8k1y33g\" ]\n    } ],\n    \"service\" : \"sjlxbnoyjikwklq9d97abxv2oonx3z2if038vy8e2hbx5fpvfkx54760htppznyfuyenq7zuzy4bumbbomm65c2gh7fhp00cm1m6jphnstvme1m9nvdhjc3ndcbxkxooh11ac52prafeu1dtgn2ei0gh0y8jha2otqxamu1guh0stpvr7vedi4jehrfh8s\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"dhgv94xbn3oy45eh6rni95ie9bpcoy0zwfpac631dxv99zappt0oj4znxxvyxzhvopcvjszu1ziodwz93o65f2izpp3lpj97sb56sjbkuztcliwjaq4e7rx4l21tjv2x0q12tf5o\", \"uuysiwhhlz2mh7ya71khqshbjtuivrqltkcjj414062drenrrrku0ehb2oibcgw9j\", \"h8pqh1rtd5h2ui6usdtc\", \"efkm3q24g0hfv7y4rfwxkwmriyfxchklgdxrft95fglfyvwq23s5mmn7gpkgf030t\", \"h8jsauxy7hiei6ayjgnmrojlb\", \"hyfro8sulkxg0x1k74kn41cb5\", \"cs91dm5wgqyjbztsjz09p1h7gvv0igkjhtmb0xr9ircrgpa22jdsk97935izohm4qtw7zujk4w4uitj76jefurydmxh45qxtf8kzcopfw0vuvgqidoe0qlkx0a4adelrxtdp9jdtlgxddgksyaidxzfo9uoryouyy0wirjvf8vkglf9ka1drbnx7uahmitlotroiisb\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"7z1n0dyb1w0n214j7guz8raa03391ijw3yeqzwbim1t2m6wnlqeba4532nphcbq7\", \"wce0gz\" ]\n    } ],\n    \"service\" : \"25v5scb0yiwhshoo40whb9ad5pv4ia0y8479ct80x3xesscnp23wfxuj9gu16493i1jgis\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"qahh26y4fsymqjmqgcxnk3mrxi2sqwaxqltn0f2u\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"0sdcm9aqutpwm0jujtcfkf0vszpb2jd6bxx5iqexobgytmhzzatyy85ym60bqe6860cuchthzoh9wzzjq3c7h93wcdbr9xulhnwc1tj23y3dfetjr2euxe25k82dpl7q98pug3oop3bjxkbeed2cxq598n0fm2uvcetof28r4hs67ggqbvpc65eznid0m\", \"zgmmrgggvgj818hcfkukp6nazkz781iqlzqo84mjwaj7pf33t9woajhloe0r8kcw4bko6qdvalgq7yb9y9x12gq\", \"y1nbhzrfcb\", \"xvt7r643394e7ytynnkdc5uxolj54soe9r2sa6l5r6lo0nl4ylyor72jslbw\", \"k4ooz8o4o\", \"e0heq009rp7jaxgfbl0bpssbfvs0wbr2pn9zapokecl5lwa9edbtm315cvzbac03wp7v8jfu3nqqkoc87f4kg0z1xe6z6kkgxf5ae8xjuyonflmf7m8zjfrxivhe5bq2ewbks9n0e20wm7lqa2ugbswrjn0yx\", \"0l4x7pv1pnpmd4i2tnzt79o7syiv8hoxkacgx6699zcnq7m0zw70bmlpf890k5mf6v8d0vqant9ki9\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"78wvwp6ejaovww743igxhousple99xpdb8e26zk8y9z0rzhej8fquvqnw20oypkw19f10s4\", \"eouunuihvz9zjxbgyjx3z5p4mnr1mhkx7ud1tx1zhsdm016oho803a1rtfkmjviamzt07oc5y5plaig19t1f9knh9lxdnmebcexzbemfqdf9qhn6l\", \"xfjrnpf90em8f0syf84uezx9on5pi71i2zbphlmto821w7kh9khhur7s7ho7v2opib92fee4obtyf7q0f8q14l5w0qw6\", \"kq9l5d4yrc4k6kki58q9h38zr6odkcftvctq9how5un13d6u36jo11v37orp7wqkxv9dxeaoktal1wu647pz5yo0aqf1ofogpmqxoopa8acbaxk0uxf2va9coq5ibufh0x\", \"wrg1dojl9frfgcdhfir68va0rr52juzdlltyybpjh13qfhmjfi002lgj7hl1xoknx37a850cy91ts9ddlvwwfvhoyftjism2i82r9al4weczaefj12rzuayhoga06pwwmei5j9vfboelipvkik1\", \"u8psjhgx49jx85zbetefjtf6y0b8g2c2bi00au5rsrll6ue1yll378vyroc8xqvr8dr8o8mmsnheotg2pkmdfb4csof38y5otoj140dxptekx7eku2u1t5zy3c32xvtcn5gujyb2o40g64o4d3swnbmy69xw74ex0b0vlthr0eo1eryeyz0518eholwhj6etied\", \"syzwivtyzufw9wiuwug7jomxbk0wnytvb6jlz6yqvnibdn\", \"63mkvkheo0tx0ntus5ai38bhccxdka08v7w7ifux3ebw8dzbficvfbajxqnkifsj8aakdrbcrw\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"2168ege9yaqh4u1p3cni9mzt7hbrmvkdl2z56en1crktr41wmk3thjvgijz08ip04fzyswmoluq5tkkstr946r35zslk7k261c35wq0j2apt9pihmb\", \"rg28nw40mas4w1aes419cxn5quon4wn7wc1unon1s7vc1z2w1sxwx66fif2yxvx6r1iku3ixcb0jnof5mk7bk3ipbyn2wb6my9kc98tvyengpx5wek6xomgj8eipedqave3y08r6mzpbzl33dg7r\", \"0xsho3p9q2m9x9t7ss0tbig189vitvzr019u4jhf034mfv4oyf1uhc5h8kpqaios5p65ixddcmwnrmo3uxv4z7pjc7vwzk0uf27zdi2heyx43w2sexcrgb49lx0453doajgvx6ga9ffcg1pv1o3itkiexbtaodd1\", \"b9hcxv3gt7k6lepg8zip3veosvuar3bmuqrhf1w7i5h4ayumexfc5rsklm4jids1rxw0nfxx972t5alfbrk0vkahw7w55tpdaszpj5geo4iah75klzac7javgfpkw4fwzx9k0aft6qd9zx05voo8\", \"hm0cg8nflu7bew8xx4fhj7mlji\", \"ughkax95ujmqx4tqtb97rifn1ysvbu4b7n8kqspe5k9h6lb8ogu1izcsah1b7orbl5gldnjo6mx66scazj6etfrvc1h7s2elpd1vi1y1ujyq1mq916trkfyrjk5f6gxarl7bdr6908q03if133vuv1g5qd5nw3phej27p\", \"dk9wl6c1v6klmu90bw18bc8y4me2sya8xa7dvkznwxfu5d1dv0htx\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"u6ubppucmmmdnw66wccmzk0zhw7385kq7k8l16y56ru5kbm4e56rcnyvi3csbdcjb68uw5z9il1guqmk9oooyz96p96i571vhv9wnqv3tj7u886mf1m1uzgve6x20jcbt999geqlgbv7ymc538c3mjf7wdsq\", \"c35b46mlyw8cakfg7r7evdgy3yog5s789fbsxj2xvjmhtnnrvhsyuqrsgz3gx31ndrnkrp6jq8e6bo47weni0mwbowxu6v2jspnpvk9bqiwdv7156pedqlvmlh0k3z95mnt0kpc66ywnid77hbs\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"2nqo4vwq3l6bsewfrk62x3jo6p5150jau3guoxqw898yicwbneaz8z9zfrz4kcukp3ukun69tayaz0rod52he6ogxzka78x5r8n8az0nas66uh46tb9x0z6f6nu9rjid0kn8360w3ydn0rct170i6acvoq4fcijzdk7caz654yhnozcl6w9ljcbi90vclg5tocqeb\", \"bibt6281ynyvlqz6ig3372x8ljvm6up1rs74cy2ctohfvdpd1qi31e5diw8vzdowyevucbhq9alqslqe9int7ksx2wnq9443wh5w5vqztd5y8um7e4losx4qz7t0wqlcp3k1w1p56p9jnucm408wd80p7xtovn7gumexgvmyauqn8iuxkqp\", \"r0csynrhdaa1h5c3l93qr0h1aj4px2jbuftjgxhpas7ut4dv2iu2lyqzaa4nqvozdf8v7ch92ts9bvjkdeen3qyamde92iqx2ll00qv4z0v3cvodcdqebvkraokvj8bfj3lnicozbc1fekw01ci1vmi967w215cvhr639dg34\", \"e3i74cbbi3j74skia2jfno4yl4ylay6ws34rq1q0zwmnvjrcghs0nodsxo3o6cm\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"7knuwthe72n4vq1h1t1uy7e8gpmgvfxtg61ji2iircn4zv100tkov9kurnxzfz9t2ks3rh\" ]\n    } ],\n    \"service\" : \"5retnzfpeidpiq1t0edv\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f4da8c7f-1dd7-43b9-848d-2bce8383ad9f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:34.089631Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.clientGateways.getIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "auditConfigs" : {
                "description" : "Specifies cloud audit logging configuration for this policy.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleIamV1AuditConfig"
                },
                "type" : "array"
              },
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleIamV1Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a628fabd-f1a3-4544-8b31-cbb3d2aa4716",
    "name" : "Creates a new ClientGateway in a given project and location.",
    "request" : {
      "urlPath" : "/v1/698c8na28l5z39g788jdio9f3kdwdo8pcggdv8yloquutsfkw4m7fuxsr119wmlacy6hwsg1rvyjgm66xel2qopvrw2s4/clientGateways",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Raymond Kuhn\",\n  \"error\" : {\n    \"code\" : 1416834208,\n    \"details\" : [ { }, { }, { } ],\n    \"message\" : \"Eveniet asperiores optio. Ab quo eaque provident. Nisi unde consequatur mollitia quidem.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a628fabd-f1a3-4544-8b31-cbb3d2aa4716",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:34.087808Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.clientGateways.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4aabf2c4-0b59-46b1-9069-b2fa8ca7a685",
    "name" : "Lists ClientGateways in a given project and location.",
    "request" : {
      "urlPath" : "/v1/lsmdxu2rj1fodh2gvyq8so7jcn/clientGateways",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"unreachable\" : [ \"kwcefi0w4hvnceakwtbykpw9hz942lak02qfji1b549u1gfrc36heucp436qjohg5ib4jpd0vdi8j1its1cntc6wcgw0no8crj0z3rx6cepgiq5uakqk2eyvvhdjaal6zfkgub5m7avihimdg2rch9bdagc2v2\", \"ctekw9h57v3prnwrz0qjo7ay17wueb\", \"ldsqp18w3sfyvdi1x1oy2qd99q365yfvpypyzc84pgd32ivmqspgq7f5rl3dpaovbg6sax9183ry0ma4cmeh1p9tr\", \"iajs0g8yn7wko9lzoqzofsom\" ],\n  \"clientGateways\" : [ {\n    \"clientConnectorService\" : \"4d2xk8e04c1pz2zhqsuurctcnmxd7lzpojn5co2x\",\n    \"createTime\" : \"2022-10-14T11:19:34.086159Z\",\n    \"name\" : \"Hanna Powlowski\",\n    \"updateTime\" : \"2022-12-13T11:34:34.086229Z\",\n    \"id\" : \"mmze\",\n    \"state\" : \"CREATING\"\n  }, {\n    \"clientConnectorService\" : \"7x5oovj4igx32agmsp5uh9tw7unsxjz9xhy\",\n    \"createTime\" : \"2022-09-30T12:39:34.086362Z\",\n    \"name\" : \"Gerald Dooley\",\n    \"updateTime\" : \"2022-03-21T13:42:34.086429Z\",\n    \"id\" : \"n0vy\",\n    \"state\" : \"RUNNING\"\n  }, {\n    \"clientConnectorService\" : \"73yim8nk7bwoeelzcbekva3w0sq094i61yg4v3bc392eobi7xdygfennzb1qu2wzx7g3nvvciy1hdraohwis0newr919cxmgi0ko1phnzk6nq94xon86o307vsonv3l754xtpj5ifaxzt1gz38xg52pb7xoifaodxqbkjwthh71trgrya2k1lo2hs7e\",\n    \"createTime\" : \"2022-03-17T11:08:34.086551Z\",\n    \"name\" : \"Ahmed Boehm\",\n    \"updateTime\" : \"2022-09-18T12:50:34.086619Z\",\n    \"id\" : \"zuxl\",\n    \"state\" : \"ERROR\"\n  }, {\n    \"clientConnectorService\" : \"6j7ri9ep64mne4o63q5l4cmtphef9p0ga29r3b\",\n    \"createTime\" : \"2023-02-27T11:00:34.086734Z\",\n    \"name\" : \"Stacia Bednar IV\",\n    \"updateTime\" : \"2022-09-03T13:14:34.086809Z\",\n    \"id\" : \"v2w5\",\n    \"state\" : \"DOWN\"\n  }, {\n    \"clientConnectorService\" : \"8rhkixtidu7twgvxhgaia6hlvl2umzr9f8xjhyboumkb7pstluuspcbd6wry4th5l45sceymbhrkq43jvjwyxw1vfzg\",\n    \"createTime\" : \"2022-03-13T13:58:34.086926Z\",\n    \"name\" : \"Sarah Larkin I\",\n    \"updateTime\" : \"2022-07-04T10:36:34.086996Z\",\n    \"id\" : \"zy9d\",\n    \"state\" : \"UPDATING\"\n  }, {\n    \"clientConnectorService\" : \"25v18x2imbqzea3p4g\",\n    \"createTime\" : \"2022-05-23T13:31:34.087109Z\",\n    \"name\" : \"Miss Rueben Jacobi\",\n    \"updateTime\" : \"2022-07-08T13:47:34.087174Z\",\n    \"id\" : \"b99l\",\n    \"state\" : \"RUNNING\"\n  }, {\n    \"clientConnectorService\" : \"7t5tav09bj75oocrh0wzd33d6n6ihxutlgmzm4zpb46qhpk2v8d7e7iy\",\n    \"createTime\" : \"2023-01-18T10:54:34.087285Z\",\n    \"name\" : \"Sirena Nader\",\n    \"updateTime\" : \"2022-03-22T12:27:34.087352Z\",\n    \"id\" : \"ii0h\",\n    \"state\" : \"DELETING\"\n  } ],\n  \"nextPageToken\" : \"731mj410ff5wzmive22h9kiqvv1y5w4zq80kwsajp7ynat5xejq903y2m\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4aabf2c4-0b59-46b1-9069-b2fa8ca7a685",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:34.0876Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.clientGateways.list",
          "schema" : {
            "description" : "Message for response to listing ClientGateways.",
            "properties" : {
              "clientGateways" : {
                "description" : "The list of ClientGateway.",
                "items" : {
                  "$ref" : "#/components/schemas/ClientGateway"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token identifying a page of results the server should return.",
                "type" : "string"
              },
              "unreachable" : {
                "description" : "Locations that could not be reached.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e864c5e1-fbca-4550-8d2a-c14d1961ebd0",
    "name" : "Creates a new ClientConnectorService in a given project and location.",
    "request" : {
      "urlPath" : "/v1/9q93xdx9k9n6o8so30ssh61x756l2lnt73q3ilk114uj14c6hszdgd3uq/clientConnectorServices",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Altagracia Botsford\",\n  \"error\" : {\n    \"code\" : 1311119231,\n    \"details\" : [ { } ],\n    \"message\" : \"Et quis quisquam adipisci laborum accusamus. Sed et assumenda. Ea facilis minima et. Maxime fugit necessitatibus voluptatibus voluptates cumque quibusdam. Asperiores quia id voluptas nihil quae vitae.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e864c5e1-fbca-4550-8d2a-c14d1961ebd0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:34.086076Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.clientConnectorServices.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "02589ae1-1bb5-4d6b-9c31-695c91f0e577",
    "name" : "Lists ClientConnectorServices in a given project and location.",
    "request" : {
      "urlPath" : "/v1/f3v7v9ybjcdxa0mmqhnciac9f4q62y3qown72v3a04g6yi4r79y9id04a8io1cdm552agf2sedfyhct098yvymfw3nds59xx9qdsr2nz077jrlkmwk4y1hzejlmndpinszvanemx6x78zrvl87z787eyg9izearsewgnqf7gkh71ue05hww/clientConnectorServices",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"unreachable\" : [ \"bybvgsbp4mvjm0b3243njn\", \"7750ijyethag3p7h39o0l\", \"omny4io948coyxyvifo03uazayvjracjebb1jrda9u8sszp6lsq81jgort3gmg6vsa7gk2l47e2t537znhqfegm8707xro7qt54nz6jvapp33eylu408xgu2e662e35d4ipru3l2aldygkp6gm5ogkvkx1ttvss8az77nqp\", \"p1knwpkq23a9bqwwe692acz9orzoqm4yr5u56tjopxglzr6s8s14t893nyzfo\", \"8f43yxhd\", \"ol7fn79gywhps9sf1w24tpbe7m52u9gn9byhf21lpx615gtufn76zojl3xure47juljvzmqxi6ycxxzos9t79ej7xue1g3uc3fvcdr8bbphlqwg4zd0glqttnw3nge5m1epquwgqyaslmgj01b3sl633s4hmllkp01iivf0ovjvkem8zx\", \"bcpc5eizbj7o3tng0v93o90v3gpwz7whp9q94fhnx31cnvo2ovefadzwtodch0eh4631lo4zcfpg89khrtds9gjnmdx2i9qng6x0u1yptb2kdlaoh0f5hkg7keppw5lgltsl7q4r8s2cmt7c95cfubj0lw9m13ajmootaz1ksef0vzlncz86wr0ily5to9axrbdcow\" ],\n  \"nextPageToken\" : \"cn94luzfv9mx8ai2rtj1d96t5smmxkmpvsm2x4db6l7ueg30koso6owe1v2xowe9\",\n  \"clientConnectorServices\" : [ {\n    \"ingress\" : {\n      \"config\" : {\n        \"destinationRoutes\" : [ { } ],\n        \"transportProtocol\" : \"TRANSPORT_PROTOCOL_UNSPECIFIED\"\n      }\n    },\n    \"createTime\" : \"2022-11-17T11:03:34.084227Z\",\n    \"displayName\" : \"Hugh Green\",\n    \"name\" : \"Gerry Marks\",\n    \"updateTime\" : \"2022-04-23T10:51:34.08434Z\",\n    \"state\" : \"UPDATING\",\n    \"egress\" : {\n      \"peeredVpc\" : {\n        \"networkVpc\" : \"mte4xjiu\"\n      }\n    }\n  }, {\n    \"ingress\" : {\n      \"config\" : {\n        \"destinationRoutes\" : [ { }, { }, { }, { }, { }, { } ],\n        \"transportProtocol\" : \"TRANSPORT_PROTOCOL_UNSPECIFIED\"\n      }\n    },\n    \"createTime\" : \"2022-08-04T11:09:34.08442Z\",\n    \"displayName\" : \"Mai Dickinson\",\n    \"name\" : \"Bo Champlin\",\n    \"updateTime\" : \"2022-11-05T13:55:34.084527Z\",\n    \"state\" : \"CREATING\",\n    \"egress\" : {\n      \"peeredVpc\" : {\n        \"networkVpc\" : \"j84sokekiiu1gwn7hix4rpadqmbvprlwc2j3xaxqg3szhrlqla8d1epq4ddmh0rjkirll15ea1zdzfcv1cxhlwym4qag6ih8eqyjlqhscbr3abt4vbcail6rptece02x4xakw0a82ocuslozhn1ccyczsbt7w3ijwz5sutn68ze5v1\"\n      }\n    }\n  }, {\n    \"ingress\" : {\n      \"config\" : {\n        \"destinationRoutes\" : [ { }, { }, { }, { }, { } ],\n        \"transportProtocol\" : \"TRANSPORT_PROTOCOL_UNSPECIFIED\"\n      }\n    },\n    \"createTime\" : \"2022-08-31T10:52:34.084605Z\",\n    \"displayName\" : \"Philip Kuhlman MD\",\n    \"name\" : \"Lanny Borer\",\n    \"updateTime\" : \"2022-06-19T12:51:34.084712Z\",\n    \"state\" : \"DOWN\",\n    \"egress\" : {\n      \"peeredVpc\" : {\n        \"networkVpc\" : \"bk8wvegu16l63dit6jximxlk4dbnb7ddyput133gwmj958j4ddxnxci9fgwr8ep1qq263qk0cek309v6qsppzzkxxm9lwmmdmsb611bieqre2om12sdbbwt\"\n      }\n    }\n  }, {\n    \"ingress\" : {\n      \"config\" : {\n        \"destinationRoutes\" : [ { }, { }, { } ],\n        \"transportProtocol\" : \"TRANSPORT_PROTOCOL_UNSPECIFIED\"\n      }\n    },\n    \"createTime\" : \"2022-06-25T12:49:34.084788Z\",\n    \"displayName\" : \"So Rogahn\",\n    \"name\" : \"Mrs. Audie Lueilwitz\",\n    \"updateTime\" : \"2023-01-28T11:52:34.084896Z\",\n    \"state\" : \"RUNNING\",\n    \"egress\" : {\n      \"peeredVpc\" : {\n        \"networkVpc\" : \"v470j3iv8wjf2vdrykvllahwtl8m20k5aqwofctt5k4tl8ewqu3b0sz88k99w61us9kxx0gvznbmcfyu7fxt4gg2domx6\"\n      }\n    }\n  }, {\n    \"ingress\" : {\n      \"config\" : {\n        \"destinationRoutes\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"transportProtocol\" : \"TRANSPORT_PROTOCOL_UNSPECIFIED\"\n      }\n    },\n    \"createTime\" : \"2023-01-19T12:31:34.084973Z\",\n    \"displayName\" : \"Dalia Klein\",\n    \"name\" : \"Marlin Gulgowski III\",\n    \"updateTime\" : \"2022-09-11T11:41:34.085072Z\",\n    \"state\" : \"RUNNING\",\n    \"egress\" : {\n      \"peeredVpc\" : {\n        \"networkVpc\" : \"1m1x843pny0yba39cgaj8yb34qouqg44nzdnlrraosforyxvc1k08hrh0jtvwanly96d8eg68tfgcblsma4sadl0klhqu4wwxd2kcl1swlggc2pmr692c8e7fwwxgphpg326cp2mf05eyur\"\n      }\n    }\n  }, {\n    \"ingress\" : {\n      \"config\" : {\n        \"destinationRoutes\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"transportProtocol\" : \"TCP\"\n      }\n    },\n    \"createTime\" : \"2022-09-10T11:09:34.085156Z\",\n    \"displayName\" : \"Percy Gleichner\",\n    \"name\" : \"Alysha Hessel\",\n    \"updateTime\" : \"2022-11-30T13:10:34.085257Z\",\n    \"state\" : \"RUNNING\",\n    \"egress\" : {\n      \"peeredVpc\" : {\n        \"networkVpc\" : \"eiqklg3b\"\n      }\n    }\n  }, {\n    \"ingress\" : {\n      \"config\" : {\n        \"destinationRoutes\" : [ { }, { }, { }, { } ],\n        \"transportProtocol\" : \"TRANSPORT_PROTOCOL_UNSPECIFIED\"\n      }\n    },\n    \"createTime\" : \"2022-08-29T12:58:34.085331Z\",\n    \"displayName\" : \"Lorrie Sporer Sr.\",\n    \"name\" : \"Ms. Desmond Luettgen\",\n    \"updateTime\" : \"2022-06-13T14:07:34.085441Z\",\n    \"state\" : \"DELETING\",\n    \"egress\" : {\n      \"peeredVpc\" : {\n        \"networkVpc\" : \"0tmgwlyct8ue67nl1ubldh1075va0po0mgq0j0ocnwcxgnmzd24wnwatu8jw7j7o\"\n      }\n    }\n  }, {\n    \"ingress\" : {\n      \"config\" : {\n        \"destinationRoutes\" : [ { }, { }, { } ],\n        \"transportProtocol\" : \"TCP\"\n      }\n    },\n    \"createTime\" : \"2022-08-13T10:50:34.085533Z\",\n    \"displayName\" : \"Virgil Fahey\",\n    \"name\" : \"Maxwell Emmerich\",\n    \"updateTime\" : \"2022-03-28T11:10:34.085664Z\",\n    \"state\" : \"UPDATING\",\n    \"egress\" : {\n      \"peeredVpc\" : {\n        \"networkVpc\" : \"0kqmqjus5p4xlorphoh2irnrxvvfnmnyy651mru2m4c24uduft5p4acw5eh5bczaa2zevqrepkuidxwbxah5hrr6\"\n      }\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "02589ae1-1bb5-4d6b-9c31-695c91f0e577",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:34.085856Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.clientConnectorServices.list",
          "schema" : {
            "description" : "Message for response to listing ClientConnectorServices.",
            "properties" : {
              "clientConnectorServices" : {
                "description" : "The list of ClientConnectorService.",
                "items" : {
                  "$ref" : "#/components/schemas/ClientConnectorService"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token identifying a page of results the server should return.",
                "type" : "string"
              },
              "unreachable" : {
                "description" : "Locations that could not be reached.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5ab4f934-122a-49e4-9737-f4cc4015c878",
    "name" : "Creates a new AppGateway in a given project and location.",
    "request" : {
      "urlPath" : "/v1/tj2vop0a57yxr4sefivx8/appGateways",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Agustin MacGyver\",\n  \"error\" : {\n    \"code\" : 547738113,\n    \"details\" : [ { } ],\n    \"message\" : \"Nam adipisci aut deserunt impedit tenetur. Totam blanditiis nisi voluptas eos. Est soluta voluptatem et quibusdam.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5ab4f934-122a-49e4-9737-f4cc4015c878",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:34.084109Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.appGateways.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2fb6ee2b-3221-484e-b623-9c89aad2003f",
    "name" : "Lists AppGateways in a given project and location.",
    "request" : {
      "urlPath" : "/v1/6j3mq29kcy2j7kmihpybe7k8g1qs7egn8ovew9c8bvb6qu2yu6d475kudmfgnwec6u6d8j5pub2t84ozh7l27gmlt92vwng17jjzrru4jhds1xzouchktyneosagurecdx7nopbb9z3f2u0tp9gsm168l1ve25jhml8r3qa6rnoyudnwep4dcg5w2xpjrc/appGateways",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"appGateways\" : [ {\n    \"uid\" : \"615i\",\n    \"allocatedConnections\" : [ {\n      \"ingressPort\" : 1061857278,\n      \"pscUri\" : \"https://web.example.mocklab.io/953011\"\n    }, {\n      \"ingressPort\" : 717305640,\n      \"pscUri\" : \"https://web.example.mocklab.io/486608\"\n    }, {\n      \"ingressPort\" : 291201442,\n      \"pscUri\" : \"https://web.example.mocklab.io/038699\"\n    } ],\n    \"createTime\" : \"2022-09-07T12:33:34.082077Z\",\n    \"displayName\" : \"Mr. Chiquita Nolan\",\n    \"hostType\" : \"HOST_TYPE_UNSPECIFIED\",\n    \"name\" : \"Carlos Schulist\",\n    \"updateTime\" : \"2022-09-07T13:28:34.082198Z\",\n    \"state\" : \"DOWN\",\n    \"type\" : \"TYPE_UNSPECIFIED\",\n    \"uri\" : \"https://web.example.mocklab.io/073238\",\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"r8lr\",\n    \"allocatedConnections\" : [ {\n      \"ingressPort\" : 1453699216,\n      \"pscUri\" : \"https://web.example.mocklab.io/365533\"\n    }, {\n      \"ingressPort\" : 283576362,\n      \"pscUri\" : \"https://web.example.mocklab.io/266037\"\n    }, {\n      \"ingressPort\" : 111868289,\n      \"pscUri\" : \"https://web.example.mocklab.io/354133\"\n    }, {\n      \"ingressPort\" : 1979017105,\n      \"pscUri\" : \"https://web.example.mocklab.io/730143\"\n    }, {\n      \"ingressPort\" : 1706440816,\n      \"pscUri\" : \"https://web.example.mocklab.io/260656\"\n    }, {\n      \"ingressPort\" : 974169173,\n      \"pscUri\" : \"https://web.example.mocklab.io/941867\"\n    }, {\n      \"ingressPort\" : 14969722,\n      \"pscUri\" : \"https://web.example.mocklab.io/436109\"\n    } ],\n    \"createTime\" : \"2022-12-08T10:44:34.082826Z\",\n    \"displayName\" : \"Sydney Marks Jr.\",\n    \"hostType\" : \"HOST_TYPE_UNSPECIFIED\",\n    \"name\" : \"Spencer Koelpin\",\n    \"updateTime\" : \"2022-08-12T13:10:34.082945Z\",\n    \"state\" : \"DOWN\",\n    \"type\" : \"TCP_PROXY\",\n    \"uri\" : \"https://web.example.mocklab.io/942968\",\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"f15n\",\n    \"allocatedConnections\" : [ {\n      \"ingressPort\" : 1413297276,\n      \"pscUri\" : \"https://web.example.mocklab.io/611751\"\n    }, {\n      \"ingressPort\" : 1225764570,\n      \"pscUri\" : \"https://web.example.mocklab.io/336467\"\n    }, {\n      \"ingressPort\" : 1167673921,\n      \"pscUri\" : \"https://web.example.mocklab.io/797120\"\n    }, {\n      \"ingressPort\" : 1244884034,\n      \"pscUri\" : \"https://web.example.mocklab.io/842829\"\n    }, {\n      \"ingressPort\" : 1579208626,\n      \"pscUri\" : \"https://web.example.mocklab.io/919183\"\n    }, {\n      \"ingressPort\" : 598905476,\n      \"pscUri\" : \"https://web.example.mocklab.io/680259\"\n    } ],\n    \"createTime\" : \"2022-06-16T13:22:34.083544Z\",\n    \"displayName\" : \"Freddie Koelpin\",\n    \"hostType\" : \"HOST_TYPE_UNSPECIFIED\",\n    \"name\" : \"Dr. Arnulfo Kihn\",\n    \"updateTime\" : \"2022-04-01T13:07:34.083663Z\",\n    \"state\" : \"CREATED\",\n    \"type\" : \"TCP_PROXY\",\n    \"uri\" : \"https://web.example.mocklab.io/023108\",\n    \"labels\" : { }\n  } ],\n  \"unreachable\" : [ \"4tsoivqos5ct4gta7oxnovpfcxzwx5qmwrmu4yfclulrx2rtewo49xc3j8bj3kx9b1qdcdc9ag4g1umy71qc65sy41beedys6njgzziv4\", \"2scjv5aghdso2g30q3fjc2g0cvmoto3b2xz5wle2ijuje2z90cybh8qf\", \"hwoj1eeyoim2ozvnuat58rel1dd1tuw07u5ja34rkljiq4zdpvzwddfilvmd2kt6p60yp6gwxn0a8kc8a344rz2owqgrp456n3asyokkz89ftscf2f7pc1ggqpsnp905pi551zow27wrtb5mru1zbv\" ],\n  \"nextPageToken\" : \"tvz1v0l35o954vl27l6m40wcajsnu0px31eq7mstp4n51nzr3zav8s8rm8gjmaa85wfw8qe2a2r7hpasbokwvlmnroh1b9jo1slcfoodymh5fx901cyly0yizcerv0yawl0nn\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2fb6ee2b-3221-484e-b623-9c89aad2003f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:34.083913Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.appGateways.list",
          "schema" : {
            "description" : "Response message for BeyondCorp.ListAppGateways.",
            "properties" : {
              "appGateways" : {
                "description" : "A list of BeyondCorp AppGateways in the project.",
                "items" : {
                  "$ref" : "#/components/schemas/AppGateway"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              },
              "unreachable" : {
                "description" : "A list of locations that could not be reached.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "959d55a0-509b-42ce-b0ee-e296281094aa",
    "name" : "Creates a new AppConnector in a given project and location.",
    "request" : {
      "urlPath" : "/v1/jkwpveo4dsi22vbg6yvxmg4j2ghinr0ebyc4nfqy2ts04hna8sub8nb8w6gzmgy0tdcpj237h6rgzpl4axn942yu2hb1vme0ctbhruabroyhgx3zvym05d9xwgscf06xgn2kc0f2vkad1b3lg2yn949pijg63bcxyydhw4q4tvj4fgj3otkrmely6m245f77/appConnectors",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Arlette Rath\",\n  \"error\" : {\n    \"code\" : 307095586,\n    \"details\" : [ { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Id corrupti qui et tempora consequatur qui adipisci. Et eos corporis similique perspiciatis. Ipsum ullam porro nobis provident repellat corrupti enim. Assumenda consectetur ut autem voluptas ut error.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "959d55a0-509b-42ce-b0ee-e296281094aa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:34.081759Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.appConnectors.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "eb34604b-ab53-4126-81a0-3d04f7ece846",
    "name" : "Lists AppConnectors in a given project and location.",
    "request" : {
      "urlPath" : "/v1/cts4u7ga3t0tsd9ooxdc339rj/appConnectors",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"unreachable\" : [ \"uuormia67903gtx2mhei377hc2x4wajtgqvgopnpk6acfrlddmkqadanpv00vcbt9zv9lkdp8tqmveig74h5sjw6pcng92edrxeirlrx3154orllmqqpfjb0rl3aaslwvbejheueo3fnev4rsdrrlfuspl47aivycx5rgxxzougjt0i3hcrvtm3\", \"g7sowwyun6w08hw69wj1jlybdi8u46z0lrfkk4aqicqajy2vx6vu5xwq31pul98g1ly2g186go7mfzuqy4nu03aoj\" ],\n  \"appConnectors\" : [ {\n    \"uid\" : \"u5mu\",\n    \"createTime\" : \"2022-08-30T14:12:34.077143Z\",\n    \"displayName\" : \"Mrs. Jackie Steuber\",\n    \"name\" : \"Ms. Fletcher Champlin\",\n    \"updateTime\" : \"2022-10-13T12:56:34.077257Z\",\n    \"state\" : \"DOWN\",\n    \"principalInfo\" : {\n      \"serviceAccount\" : {\n        \"email\" : \"506k1l3exzd3v19b9bm0iwvw29jukv3ojqoesx364753itz6xwm3ju8xps503aefg90gxjn8b6hpzgnu1krt80p4lv8f7tkzwzjvvvd3mbh1yqxxl7xe03xonfyxfin\"\n      }\n    },\n    \"resourceInfo\" : {\n      \"sub\" : [ {\n        \"sub\" : [ { } ],\n        \"resource\" : { },\n        \"id\" : \"239g\",\n        \"time\" : \"2022-07-03T11:19:34.077401Z\",\n        \"status\" : \"DEGRADED\"\n      }, {\n        \"sub\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"23hr\",\n        \"time\" : \"2022-12-15T10:21:34.077525Z\",\n        \"status\" : \"HEALTHY\"\n      } ],\n      \"resource\" : { },\n      \"id\" : \"ks54\",\n      \"time\" : \"2023-01-15T13:30:34.07764Z\",\n      \"status\" : \"UNHEALTHY\"\n    },\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"n7ml\",\n    \"createTime\" : \"2022-09-11T11:58:34.077754Z\",\n    \"displayName\" : \"Ms. Kris Armstrong\",\n    \"name\" : \"Vada Rosenbaum I\",\n    \"updateTime\" : \"2023-02-26T13:19:34.077863Z\",\n    \"state\" : \"DELETING\",\n    \"principalInfo\" : {\n      \"serviceAccount\" : {\n        \"email\" : \"h35m7da01md8vfpsvzckg6crkotu8y7ypwvo1inypx0a99zfsk0fnqf3ddoiu42aljx6rjex6ccxv8gul28hr4iy\"\n      }\n    },\n    \"resourceInfo\" : {\n      \"sub\" : [ {\n        \"sub\" : [ { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"8pny\",\n        \"time\" : \"2022-03-23T14:16:34.078003Z\",\n        \"status\" : \"UNRESPONSIVE\"\n      }, {\n        \"sub\" : [ { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"710i\",\n        \"time\" : \"2022-04-27T12:25:34.078116Z\",\n        \"status\" : \"UNHEALTHY\"\n      }, {\n        \"sub\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"2043\",\n        \"time\" : \"2022-05-11T11:44:34.078239Z\",\n        \"status\" : \"DEGRADED\"\n      }, {\n        \"sub\" : [ { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"7197\",\n        \"time\" : \"2022-04-14T12:44:34.078359Z\",\n        \"status\" : \"UNHEALTHY\"\n      }, {\n        \"sub\" : [ { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"1hyb\",\n        \"time\" : \"2023-02-20T12:13:34.078478Z\",\n        \"status\" : \"HEALTH_STATUS_UNSPECIFIED\"\n      }, {\n        \"sub\" : [ { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"mc3b\",\n        \"time\" : \"2022-04-15T13:02:34.078592Z\",\n        \"status\" : \"HEALTH_STATUS_UNSPECIFIED\"\n      }, {\n        \"sub\" : [ { }, { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"vt6i\",\n        \"time\" : \"2022-08-22T13:27:34.078717Z\",\n        \"status\" : \"UNHEALTHY\"\n      }, {\n        \"sub\" : [ { } ],\n        \"resource\" : { },\n        \"id\" : \"9ixp\",\n        \"time\" : \"2022-04-19T12:54:34.078835Z\",\n        \"status\" : \"HEALTH_STATUS_UNSPECIFIED\"\n      } ],\n      \"resource\" : { },\n      \"id\" : \"478r\",\n      \"time\" : \"2022-08-09T13:06:34.078949Z\",\n      \"status\" : \"UNRESPONSIVE\"\n    },\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"k327\",\n    \"createTime\" : \"2022-11-30T10:36:34.079068Z\",\n    \"displayName\" : \"Edgardo Flatley\",\n    \"name\" : \"Weston Johns\",\n    \"updateTime\" : \"2023-02-03T13:41:34.079209Z\",\n    \"state\" : \"CREATED\",\n    \"principalInfo\" : {\n      \"serviceAccount\" : {\n        \"email\" : \"z0umhtuicn0vjoguep6ppvi9f9770vezbigg7is7uh0qkowpbhxxo0vtavxivzqim0pishuygkwuj1syqvkml36cku8kd9gq1okzukf2bm0mi2166d1o4firco5fiq0jwo2voygcueomaf25w\"\n      }\n    },\n    \"resourceInfo\" : {\n      \"sub\" : [ {\n        \"sub\" : [ { } ],\n        \"resource\" : { },\n        \"id\" : \"5411\",\n        \"time\" : \"2022-11-19T13:25:34.079342Z\",\n        \"status\" : \"UNRESPONSIVE\"\n      }, {\n        \"sub\" : [ { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"zg35\",\n        \"time\" : \"2023-02-20T12:07:34.079458Z\",\n        \"status\" : \"DEGRADED\"\n      }, {\n        \"sub\" : [ { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"6288\",\n        \"time\" : \"2022-10-09T12:01:34.07957Z\",\n        \"status\" : \"UNHEALTHY\"\n      }, {\n        \"sub\" : [ { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"v114\",\n        \"time\" : \"2022-12-26T10:51:34.07968Z\",\n        \"status\" : \"UNHEALTHY\"\n      }, {\n        \"sub\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"u5xi\",\n        \"time\" : \"2022-10-06T10:32:34.079804Z\",\n        \"status\" : \"HEALTHY\"\n      } ],\n      \"resource\" : { },\n      \"id\" : \"c8ee\",\n      \"time\" : \"2022-10-10T14:11:34.079911Z\",\n      \"status\" : \"HEALTHY\"\n    },\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"3k4h\",\n    \"createTime\" : \"2022-11-29T13:49:34.080036Z\",\n    \"displayName\" : \"Laverne McLaughlin\",\n    \"name\" : \"Ralph Stoltenberg DDS\",\n    \"updateTime\" : \"2022-03-07T10:23:34.080145Z\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"principalInfo\" : {\n      \"serviceAccount\" : {\n        \"email\" : \"74i0m64zh00njfo1lck3ca4nnp3oq5cy2e6nv43dwwx8v2tc9v284af67i\"\n      }\n    },\n    \"resourceInfo\" : {\n      \"sub\" : [ {\n        \"sub\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"7186\",\n        \"time\" : \"2022-11-04T10:53:34.080285Z\",\n        \"status\" : \"HEALTHY\"\n      }, {\n        \"sub\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"8826\",\n        \"time\" : \"2022-06-12T11:46:34.080406Z\",\n        \"status\" : \"HEALTH_STATUS_UNSPECIFIED\"\n      }, {\n        \"sub\" : [ { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"9l24\",\n        \"time\" : \"2022-08-02T10:42:34.080521Z\",\n        \"status\" : \"HEALTHY\"\n      } ],\n      \"resource\" : { },\n      \"id\" : \"7zik\",\n      \"time\" : \"2023-01-21T10:35:34.08063Z\",\n      \"status\" : \"HEALTH_STATUS_UNSPECIFIED\"\n    },\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"xy5i\",\n    \"createTime\" : \"2023-02-25T10:33:34.080742Z\",\n    \"displayName\" : \"Glenda D'Amore\",\n    \"name\" : \"Lizabeth Gutkowski\",\n    \"updateTime\" : \"2022-03-22T13:42:34.080847Z\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"principalInfo\" : {\n      \"serviceAccount\" : {\n        \"email\" : \"x67nbx8qe26zedxu7p05ieg73urlhg05eke5x26vf39vyv3ug1rcofdxai7d2m3zhwouz1v2xn9m2ecex190jwakafso7tvzod9u6uh96datr15y118c5lrfa394ysd990rgosqjaybfm2oio38p5ehwekwqk\"\n      }\n    },\n    \"resourceInfo\" : {\n      \"sub\" : [ {\n        \"sub\" : [ { }, { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"2dw6\",\n        \"time\" : \"2022-10-06T11:05:34.08099Z\",\n        \"status\" : \"DEGRADED\"\n      }, {\n        \"sub\" : [ { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"04x9\",\n        \"time\" : \"2023-02-02T14:14:34.081109Z\",\n        \"status\" : \"HEALTH_STATUS_UNSPECIFIED\"\n      }, {\n        \"sub\" : [ { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"3bn2\",\n        \"time\" : \"2023-02-19T11:33:34.08122Z\",\n        \"status\" : \"UNRESPONSIVE\"\n      } ],\n      \"resource\" : { },\n      \"id\" : \"17yn\",\n      \"time\" : \"2022-05-09T10:57:34.081324Z\",\n      \"status\" : \"UNRESPONSIVE\"\n    },\n    \"labels\" : { }\n  } ],\n  \"nextPageToken\" : \"806dydf5gjc5ykv969r2ut3dkeyx18hfw1eai1mtd7kwivlboocezugc14o40r3ttfpu9segv5a42tpttiuzk3zkl7c190dhe3ulqdayqubf4mbgnhziqp5akzognfnkqxprh0ro9m4ryriofnh1ob2xx8qxuqlp7ga0b\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eb34604b-ab53-4126-81a0-3d04f7ece846",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:34.081533Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.appConnectors.list",
          "schema" : {
            "description" : "Response message for BeyondCorp.ListAppConnectors.",
            "properties" : {
              "appConnectors" : {
                "description" : "A list of BeyondCorp AppConnectors in the project.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleCloudBeyondcorpAppconnectorsV1AppConnector"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              },
              "unreachable" : {
                "description" : "A list of locations that could not be reached.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0c1c7ab5-c996-4ef3-9d5c-7a59836e06cc",
    "name" : "Resolves AppConnections details for a given AppConnector. An internal method cal...",
    "request" : {
      "urlPath" : "/v1/l4zkkee95yauk8pkmx3pvh1bn24utj17mneiuruorymeja4pzpdj6gc0yhiegc9jrep4b1dwdwj7ebjxide3qqovxk71k9znly83vgvsl8qh4fq2nbapu4dybys86gov6gse9185tim5elsxewnpzhbvs59lta2ek2pdyscvzzb68xf2fdvod62nko/appConnections:resolve",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"unreachable\" : [ \"imr1i3zwjl90nwigu7kj2bv2r0lp5ff8kx69u4jbbmfnaznb0hgn84e0yw7xkmj27vnvecjx6rdwfbq1eocxoil3e762zo\" ],\n  \"nextPageToken\" : \"8z83p68a5z3iochi1fjftqijq7v\",\n  \"appConnectionDetails\" : [ {\n    \"recentMigVms\" : [ \"0dqnw4s0o85uoiscxxpxfjv3dlc73k5er8qqg7111bnrvagkrb15f5rrj0z500tidi2s6fwmibsxcnm5m7qmbny9vql7ysuqu1ya1rwivxfngy402p4oifdxabxu0j5c2rsiavnewzud6r8actgcm90vjcjwf\", \"xfnrknud9ihdleephdkomsne00m56n6sbhw7jb01baqykcrpk7m7g8gmrn1\", \"7ab7hhjfxah73495ylm73lc5jrusvhkwxwxekfv2scr9p9dc4ic5lpim\", \"zejzz5tamo2uqpjfw1i4hegonbrk6uc6wstxkl1kiusw0t269gl6jbavo8eodpupeh9rbba11chwav7y1wmj97c4ho9hy0sf2h5z8e16quvmqk3a6pqnze1ybxj2f3eewoycgioftjizdzxnx75icdtf5odjur8trqc2106f750hg8hcl6n0e38gwx3\", \"s3g9daigxhcqs4a9a4074ecsigbowvq6n97bq7xgmrk2kjnkj6h8fgikoyjdjggxbnfdk3vq6t24wvnuw5otssxovujxu9w6x4q02svt1h55ntvypi5czf4n7h2igslmx2ypgpm5jhxje43kid8iq0k2czkfyjwo\" ],\n    \"appConnection\" : {\n      \"uid\" : \"jci0\",\n      \"connectors\" : [ \"0qfg8hw5pxjo7v9uya130skgvz698nhoj1po7\", \"mmqp0ku5mxe3ll1ivoblt9otc8hmb51d4159cnovdom53foumdswsaq8\", \"behxep817eso16636brh1l58j3t95x5cq2arq3o9j7hbbegpv1c8jomsj6\" ],\n      \"createTime\" : \"2022-06-08T11:13:34.071555Z\",\n      \"applicationEndpoint\" : {\n        \"port\" : 593282268,\n        \"host\" : \"sb5aom20thnr35dea8lhok9eiomez8k0\"\n      },\n      \"displayName\" : \"Mr. Eilene Sanford\",\n      \"name\" : \"Tomas Windler\",\n      \"updateTime\" : \"2022-09-08T12:54:34.071702Z\",\n      \"state\" : \"DOWN\",\n      \"type\" : \"TYPE_UNSPECIFIED\",\n      \"gateway\" : {\n        \"ingressPort\" : 951512677,\n        \"appGateway\" : \"3hoe9gyapsdxwevsmz22box6novyzmxekt9eyxjemehy5bvb2hwhnnh2jcz4f7d37ugqimycuzabqla1dnxq3og3k7bxpg9a850hcvbc97qcy8sac4hxw27zqfk8hb66fp11lg\",\n        \"l7psc\" : \"ku5\",\n        \"type\" : \"GCP_REGIONAL_MIG\",\n        \"uri\" : \"https://web.example.mocklab.io/372088\"\n      },\n      \"labels\" : { }\n    }\n  }, {\n    \"recentMigVms\" : [ \"tpohp6xfs1n8im4lpnu3qsnxhj319scq5fasr7lmwnax5o4dxmdlnw4k6nhrorbzt46fr7iv06g3akgjqqnmni47e5rwtkaw10sudw200cgwnz68pjdl\" ],\n    \"appConnection\" : {\n      \"uid\" : \"c86x\",\n      \"connectors\" : [ \"m2ymoeidch16whnh9mjq51prtd1237hhhv17d7j8uv1cei4gucaenhc1hzu69kr2tkz4p2416\", \"znc3d2ktlho3v7ot7laj45816f8t3gszhxxz8ucyv89z948t2iqf13sf1jcg3ep6nud8naye4jpxogj93vzuznpm6t5migcgzd4ulfj6ys5hc2n1ktgfuyzz94spbio8q6d4yercnhkfc1m2irqvz0y4ugcejor246cf4p1idqy21foadmne1hdzdyp0ayryicl6oxv\", \"sf65dh7gptolqzgz5tta69d93z67b8wiz6juxdj3mk166wrxb1rjatcqlr31iviqx839z70r716pywsld0q0eq3nhfdfumsz1r\", \"onr49ww4sq8vw007llr61ooz31\", \"vlswz10czfzb5echb6pzxzy586g14yce81wbt8t9mjqfjix8kcckqdwkl3u0dnhn364ni3gfkvjefcvxyk2gxpubgr3wl20a0ekrs6f3ckyaobnh7etqzspl7uzbw9ks27ghb9nh8plx7nwg41ns\", \"ad4nbiwo4wk3da3pyebcet036jl32m993vf94nzwvlxd22tio3up2vjjjb8a1v1vegy6ksvhrenlka1lsxyln66ex6hzfuywd784nv5fanl6ie31z37exvwjyytg\", \"87da4lzy\" ],\n      \"createTime\" : \"2022-08-18T13:54:34.071985Z\",\n      \"applicationEndpoint\" : {\n        \"port\" : 1924641695,\n        \"host\" : \"d7rw88ozu2ad39wfipsjqwekd8wnmzywxntyiol2a2xns5kgokajb5k1y2pbs1in2mcpqnxhul1ur64a6zr4myrk5fhp18n5j7k6yo0ctvnpg9ho5jez914klouemmzmdbw801j8jhv5ittklrswqolb63piv999agldag5n1ic5nxq58rxq6so0lnl0gyl8t83lxuu\"\n      },\n      \"displayName\" : \"Dr. Leonor Mann\",\n      \"name\" : \"Taina Murazik\",\n      \"updateTime\" : \"2023-02-18T12:45:34.072123Z\",\n      \"state\" : \"UPDATING\",\n      \"type\" : \"TCP_PROXY\",\n      \"gateway\" : {\n        \"ingressPort\" : 1754612047,\n        \"appGateway\" : \"vo5yqcx3zxjof76kf8qt8x2sxywcc5d7s1m9pm\",\n        \"l7psc\" : \"37130gchrfx6bmu7z0c0eliqyujuy3gxkul01dk9cgzz5wvkq4txl3dzpmrtvg29q889qvcke42i6htcwog4ymrxon24s0mbknv3dio2uva10uhhzbspvoak6xntpw6fzoqs95k6govu9dapqvf4npobg4022\",\n        \"type\" : \"GCP_REGIONAL_MIG\",\n        \"uri\" : \"https://web.example.mocklab.io/032130\"\n      },\n      \"labels\" : { }\n    }\n  }, {\n    \"recentMigVms\" : [ \"duo8roluv01x4qki\", \"312nvlkvd7og1ic2z5mj9f4upzokn1xbvkyg3rxk2ylbtz9exl0okt93tsjtx9z6bdn10973p7j8jqzpto0iplkag6hdgorz\", \"8hb6ro40v335kqjmpsf7902mtd8z4wxmqf5dlc00n83vli6csf8zcbuvxotm9ow4ctd6a806ley0rvksqdhzfl07hy4eojmfn0sxu1x6cpdwoto3z6bq42qgw00vhepfanapsv40s6famaexq8hwter8f860\", \"21faszwyhfisinlazuzyfk0nigxwz16fr3k45grprcjiite2ufqwkbt8hs3mojfi9crr3qhen8vya74osow5jevx0lt5p2za0z2v4fgsa35cj43u1eq2nqjubvss37u2ggvxcf38n5e94lm6lvgexj6nemwblxzfar20wt2qdqhsfi7hpowxtfaj6irf1p0docmp42\", \"igornc180myin3r0sc9vkpcdp82zt9yc1ws1ppi59l5\", \"5h6zw62tn3p74cn42z4pqcj3ryld4nto6akrs0g0em60sp5eo0byoje17sb63szf8gwts61yu3qkj75tv4l2p099qyfv307izju4r4g193mr8qa1mzot97lvdgfsn6xsybzk\" ],\n    \"appConnection\" : {\n      \"uid\" : \"wv3p\",\n      \"connectors\" : [ \"g1kxf2gbdqmtxmvhcx86p3hpmv15cmf2hfujexz5xq3o52gapn5u4lej9d6icsf2hu7vxoy9xfhkafmhyg74o1n6fect\", \"vy4oll3wfu5le5k9akm27ropxbz6lzcqlrz7muzic\", \"ir4j406ataa6afsb1oikrgbk220uocfrirkqhl5ena5kuuhluir8ch1mve2dy8w79czk2k62c50ifwgnmjitjjqs9hgjkprckyq4sl5o7q4vydzl67myz0s06psx8unb5ep39k62hapwl1xfxr0vu5a4x5yl7tcpo37w64u7x42d5\", \"zxe2qk17s8gr55i6x8tqw9yebogxy8ndtud5mybv5leqiou4o078jrnl9rwy7q6d3ny36j6lu36vlq0n1v0ppr24mp808ypjc8c266nb82z6toxpcvrj9v\", \"kdx4s7hfwlya3dn8hqs6z9triqkpt7lv0llglqzopnc8gl3gefcilcpus8iinir72wih0nb90cs5jc4txtf5zr1qib4j9eee5po7hh0d2etnhuhjdr5v09dctke0cipbx67m14nhz3h8nu79crl42nfno7c5138rctab69mtyli374wky\", \"c2t7q40x77y1p1v39cy5s3fw0apdlko4ap87z9hnwsw3hke9qo13b73bxvc0rsctbc97\", \"ie8svnfuwli9ey97446w1beume7a00xbrrg9q0jwavbeqsb32zoslcqk9geshhoxh9gdabs\", \"koqfuu6aqzu3uc0lt44zvt1ea3gqhie06rrxgeuhh4v2k060vrxukp10dviaswnsw4e3ifivk7fnbtfva3axr0t81clx02a3pzjy31ggzqeh3s9u57syjquw8a5r80n04teir411ahd176qqen2llbouwxvu25if7tkagco5d73jgxjt8kwvknf8fqao6f6cxokv71\" ],\n      \"createTime\" : \"2022-08-16T12:21:34.075337Z\",\n      \"applicationEndpoint\" : {\n        \"port\" : 1291370227,\n        \"host\" : \"sovu966vsz8psy5epvrwduoz75ije2sibib1zm31ct4orohgqes7vzkst31i7h7a96u9rt4p944ln5nztoi15wgsdauldstf58guw93adz773805sappm18nutawndp3snwvlg00\"\n      },\n      \"displayName\" : \"Devorah McClure\",\n      \"name\" : \"Sulema Bogisich\",\n      \"updateTime\" : \"2022-05-29T11:09:34.075486Z\",\n      \"state\" : \"CREATING\",\n      \"type\" : \"TCP_PROXY\",\n      \"gateway\" : {\n        \"ingressPort\" : 1097164150,\n        \"appGateway\" : \"u5e0ehqq23qz7fhd5mjwtk181scwq6px0rthzsa11ue7xiqaye8kw2o6lud6wtgalzc\",\n        \"l7psc\" : \"pgw96w75d525v6sjz6zsxfaapweovgeapolgkvkrpcur7tbkpf\",\n        \"type\" : \"GCP_REGIONAL_MIG\",\n        \"uri\" : \"https://web.example.mocklab.io/684064\"\n      },\n      \"labels\" : { }\n    }\n  }, {\n    \"recentMigVms\" : [ \"nc93qf7f5p9bmpw0z62xoxzvpx1fbr4ianwzt6ct1ap3v0l3k5mrsl1vw1jfmnqcebnovwtf0av5hsa69780xipwdokgnc811r2pvia4uu9pqw0pr3o7qt36evssp4w0ndb4f6b9kh\", \"j0b51tao3amwp6plalgc9marep3v8bsmevmxs3b37cewdfziw2467zfrirjoiurv4jiqcn2hswc2zgkr8tqruggspxoo0ea5\" ],\n    \"appConnection\" : {\n      \"uid\" : \"v78e\",\n      \"connectors\" : [ \"kq63orjkgv00slrecswqx9kitcwzlyxl4p6gxw5hkt8lmqs45sdayvo8xq02pewanf0twn0tykabbhreyxcu0j3nmyp2d1wym763p3hdnmmw7qsdmiawdzxs0wp9atodgrcz486wetvkiiwtdty2zvr3akldo2o72tkslfdj43uhcga1w8afg\" ],\n      \"createTime\" : \"2022-04-10T11:17:34.075736Z\",\n      \"applicationEndpoint\" : {\n        \"port\" : 1871573941,\n        \"host\" : \"9v63qf0fluwjn5he73gczsldth55nk0kkdk3fs9ryr13o80akcovyiittv55ffoaob0h5ds3usw94tij9nfx1c7e6c42crcva7w42wcvot91b85td6hd5t71yizyy7dm2ys49klqd6kcdac3hqamo5\"\n      },\n      \"displayName\" : \"Dr. Jessika Osinski\",\n      \"name\" : \"Mathilde Braun\",\n      \"updateTime\" : \"2022-10-15T10:41:34.075876Z\",\n      \"state\" : \"STATE_UNSPECIFIED\",\n      \"type\" : \"TYPE_UNSPECIFIED\",\n      \"gateway\" : {\n        \"ingressPort\" : 1472852136,\n        \"appGateway\" : \"xq9urt31r86s2ngk6d0mgxlm3prgq70ms57ikx14imogdvpooypbvqkucmraext92yg2x02uekzcq0m5i8gysgxsnkqq\",\n        \"l7psc\" : \"koonpy71wj0cwi6ov7cxrx5erkkb3pt0c4b2zv3v8duc3yibaruxuqwjxbw81lz8kcaokdx9d50btgazjhhrli2ytcyvwqaefsn9i05fmmbjdnxdh0atf81vk120z957t5kql7nk38ub8oi78ect9xb24hd8rla7q1xuvfr98uezuzf5dy42z9x6vw22gr3ev19hhfd\",\n        \"type\" : \"TYPE_UNSPECIFIED\",\n        \"uri\" : \"https://web.example.mocklab.io/924062\"\n      },\n      \"labels\" : { }\n    }\n  }, {\n    \"recentMigVms\" : [ \"ikko5crk5rgedf2pj7xla521iffz2lx8ohjexnwuwkiupr68o745r96i5h5tc75w9djqxwh2ollz2d7ytodbucibteu9wq0lt8qaj2f56a9fri6jszo6q67nngykfenqbqetliq15f6l09uijm0argncz12586qp48douw\", \"e3o4etjd75lozi8zlx7wxc0fq9fp56l1b4f0ya7ni4m84l1vxjtwguhbt0i4tkb1rtgtiia2actrpwc1e3eoc0uul26c8z2pht3swcjy4\" ],\n    \"appConnection\" : {\n      \"uid\" : \"vl91\",\n      \"connectors\" : [ \"ec3um2hjb61e04izkza7rjoopmpbrvjsbvkh63ro9c2niup2hvvcf4r7q5k37665xalhzsojuulqx6czaphoamu28g2uyox419i2cqs7mm4rlnu0idmzrf3pihoa9t37jj0sy7mloapqnx42nb91qfobyhhhv9aez\", \"gb5uoj0o6hgqaik9lk0xpswf5c6sv5s0f0n0r5yclonsyi7arp92910uk2k899n2y785299uxjlrjt6yc7lfdg\", \"y7gau6lm3hrrvq6zqhdq8kaevrd4c7xtz21oguw8wb0yp7g2zrrbpstmkdz7u5kqy9vhvva34iwm4m4ucoixrzcw5jq0nuuz6tr2qlxyjbzy5zpg1ctqc1wd2c5do0jn8yquio4t0h80i2rr5a0o7unw\", \"0b62of8rtd8z59awb2r5vj2dj9ks7vb\", \"exx3m8kwh9w52l9z2kz8pglkr9ukm9hoqoz4qkogfce6r3bxu43oxd909xaq864d3becfz1da1mb6djeqzo5pecfqve2mxyyubgnuljn3bnzca5805lqgd2p46\", \"o1p71o2dt4mpqkeotgo3ieozx4x0j233keuhj84mk8djkzc4cr7px2c0gui5bireudzu55v4nj50syoe4aw8v8uop43qj27o451szu7eyt3b07t2x5w3mocyg6j59tr\", \"db5mh7vi989zxsngiag5f0gk1cxoqf1r55chhaun8e8aaxqofime1tt1nk2ekr9gs59sy3bxenjgqh14s205nyi1nulse0ui6qpd5dph4y2f4kphbljkzomtx36ql\", \"dmcqllwb1z3ummgcxgwcltpuzsven7zq4p9yxtgsjtiozty78qxv68rmegj922s3hrrxgvz98szqlzin8beigfr9fnvpf0i4lacl68z6l4w2aoedcxipziiiptlvme98fl2o7zi42k3pn1popxzon6eulhbdjal8kzy5gg0nq2dc51olv3bo0e292dlh\" ],\n      \"createTime\" : \"2022-07-14T12:45:34.07617Z\",\n      \"applicationEndpoint\" : {\n        \"port\" : 273282235,\n        \"host\" : \"ezadc2y72xcpnx54jl30xgx7tj51f12x4eudfbh7xwrouqbkdkxwi485yq1lfwn2rqwrofgze51v4xo49q3qnk9wbim7dhoillf9j4473mzm2gm1z\"\n      },\n      \"displayName\" : \"Quincy Beahan\",\n      \"name\" : \"Sharee Wyman\",\n      \"updateTime\" : \"2023-01-03T10:51:34.076301Z\",\n      \"state\" : \"DELETING\",\n      \"type\" : \"TYPE_UNSPECIFIED\",\n      \"gateway\" : {\n        \"ingressPort\" : 2077534863,\n        \"appGateway\" : \"zb596mooe5h2mz5oijs0ksbx8iaqbqxubjgrkois4wfa\",\n        \"l7psc\" : \"p34sc17kft7xad9cd7coio93ezp6zphpyg9dq8hv9uotzlqhsrxqawokhjlkkypo10nd5ui\",\n        \"type\" : \"TYPE_UNSPECIFIED\",\n        \"uri\" : \"https://web.example.mocklab.io/495844\"\n      },\n      \"labels\" : { }\n    }\n  }, {\n    \"recentMigVms\" : [ \"14vmdms7tgu\", \"ef73upktgm9p4qf7ydd9zcxamg4a8t6oqvi5cb2dzgbpv2nwslf8b0x8yn4zs7k4ywwxnxifc6mwtynkjlwiv4y7g9bxpa35qhj7luho0giu3qro4yicoysq4gd4\", \"e5am7em5d8uep444di1ct5cbrxn6k3ugefpkt7wz5ojsu0dgnb6kvixfxp7lm928ub6n3k59\", \"25ndjoe9xie7is7di6oqtsnl05mguk8wwedcau8qhhr9zrgqt4uxc4ybm8iz5xxuo4pm219qwyan1gi9kkoh37fun0pghvodwvudklugvdfni7kd5ax1ohh5qz1xhl6uyvf3rnjxy967q86caodlqfl0umt85zncvjrar2fs9colg\", \"660a1xto9eox7ttj8wvrkhjiz1geeh4lrg9l\", \"y1bhh9qxhpopm12vx2nuj4ix8o2lm5k95vxhs75wb65mclh75awm8507zyvh3v7jrt3\", \"rrmm062n3jdoxbs5o2n80hrz8xkwsjqo7h09qvsm7fitov0lylv36ls1gq21hjfof\", \"jobrq1csyu6id5gqpe3s99o4rttkokl447bftpcvjjcx4tgaqlmuuiok9gqmy3aoz6l3h7khzoag6gde71dq6qcsc6w05o0lz0t0rzikxr74z3eq33kw232c62h4t948kmxcaxw29eb2v1f1zmwzvswtdxynecbcv0yckl4voarg2e0\" ],\n    \"appConnection\" : {\n      \"uid\" : \"365d\",\n      \"connectors\" : [ \"7j3h5g5hqic98x0zfd5ken0w2tb171lgrekzt1r454ofydz1du917wjsayzzukascdxf9np4cuxzl8ucx47tz985uy6yes9jd0gxi3qw84ae1amokby11dvk40bmod39qt8kvlccqnw0nnjlkw6czmk6u0m\" ],\n      \"createTime\" : \"2022-11-13T14:19:34.076575Z\",\n      \"applicationEndpoint\" : {\n        \"port\" : 1098173652,\n        \"host\" : \"0o8rwf1ptwrmbl9j8lm52d5zh9ou0w08ewh414rwr7l78pmytqxxjjy3cmf23yxhu3p42kiyouq3vaoxtchyir50strzz76gplay80u7wt2mkk4gif2mkcr9dt5ti22ktybfjr7zv5\"\n      },\n      \"displayName\" : \"Georgeann Dibbert\",\n      \"name\" : \"Arnulfo Muller\",\n      \"updateTime\" : \"2022-08-19T11:50:34.076709Z\",\n      \"state\" : \"CREATED\",\n      \"type\" : \"TYPE_UNSPECIFIED\",\n      \"gateway\" : {\n        \"ingressPort\" : 1509970609,\n        \"appGateway\" : \"acdjhtihjhmtgkytpshb6d9szs771y4pap51x5wnmg9yu08iv99auf4r5f9m5i1ze7nan9x0w567evp3qdxde8dipmnpedcn1uise47r7cu6s8ks605n5c4mr91evp753qn06jsc1g3\",\n        \"l7psc\" : \"glj54kt8k0m6ipwek8zovpelb2sev357bikl0zzdng2tuula4ndg41ahi9fomuq2994k685tevxo5mbd62jgl5wurtvhutjwctmbvr05z4zfk6s6ypy27tx98lsnoesw6biku948\",\n        \"type\" : \"GCP_REGIONAL_MIG\",\n        \"uri\" : \"https://web.example.mocklab.io/326017\"\n      },\n      \"labels\" : { }\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0c1c7ab5-c996-4ef3-9d5c-7a59836e06cc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:34.076996Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.appConnections.resolve",
          "schema" : {
            "description" : "Response message for BeyondCorp.ResolveAppConnections.",
            "properties" : {
              "appConnectionDetails" : {
                "description" : "A list of BeyondCorp AppConnections with details in the project.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleCloudBeyondcorpAppconnectionsV1ResolveAppConnectionsResponseAppConnectionDetails"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              },
              "unreachable" : {
                "description" : "A list of locations that could not be reached.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6c964d77-ccd6-427c-a413-7e7c45a34df0",
    "name" : "Creates a new AppConnection in a given project and location.",
    "request" : {
      "urlPath" : "/v1/rv01gb88fyqsa9vadr1uovwq36sfqjhvwbuyl32p0a8sesh8tzd21iujs4qxz09r8n66ze282f3twzvsjuuzo3iwwqm2ynio8p15p9mwoy5iifmqycklulzlenc8l56tzkujrfmpj73nqvp0ew6hdcah2531qcdbq370dps5imlki0g80s9luh5gaq0g/appConnections",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Miss Clinton Marks\",\n  \"error\" : {\n    \"code\" : 275619043,\n    \"details\" : [ { }, { }, { }, { }, { } ],\n    \"message\" : \"Totam modi nesciunt sunt. Voluptatum enim nemo. Perspiciatis perspiciatis expedita iste totam.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6c964d77-ccd6-427c-a413-7e7c45a34df0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:34.07133Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.appConnections.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "41ed6c20-ba32-4be6-845f-a5502e13f2dd",
    "name" : "Lists AppConnections in a given project and location.",
    "request" : {
      "urlPath" : "/v1/scqrnp5c4zzveifho3x9wj11as2ij4sh3fhaizqfsvyyxh3wkh8bww08wmmir0g2wtt4dgtywz3w8o/appConnections",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"unreachable\" : [ \"wdhoc6b2uyxjb2oeoouzvjb70etm0ec7d5yvf\", \"ds8b1znl3roi7drpv05zw3ygb691jdoljluct44y8k7t3w3nmqquidhdnv48dj6p92zf53d4n12uopoy0y5d6au0d2mofxbgv27vaof62nqir56u\", \"jfui72dc0yduznp67ekg5tf0agtdz7xvekliz308e2zwt795f3cznplgei747w9v0xuhzblo9ibh4\", \"dqyxvdecomaswp97pkywzywdvw9j6zuwrv5kneqp0gg2400udt77ufxerpqnqfyygkqzi7xzhc2wu7axk8uzjxr7tli85hgtlqaaesv362ny4id94u95i1uv6d70rmdshy9vtfh9jh88fmgpx3hnka3\", \"gmhbkufptumf8vrnrace77jsp64v22s7sqmkqulgvzk0gnfuwx9hq3sxb7tbpf4h35pr6rwh2kd9j28dzfnet3q83cn21p0iv96m9w42i3h2m1z9wyp4pkk4bu63jlvqunls6e07mlof4u05rcf3tlgalhqdiq6cqb7lmzhfsaedpnymwq125z367tzuvkhw10rw8ajv\" ],\n  \"nextPageToken\" : \"lk84xcp4cr7hivqiu5r8wu52301e4kvunpeprautmucyehenrope1m5va5d1ykl3nbxhs1bji3k87hvd32baw9s2xiief0q3hde96pwp9hzjxjydj61ba7lv5vc7j\",\n  \"appConnections\" : [ {\n    \"uid\" : \"wzj7\",\n    \"connectors\" : [ \"x4j1k2sbq12yiq2iutygi9vuc440esa87b1xzokg9z5sysp0kf3vvo0c9jugcv6efdt96an5k17swovrcmryp\", \"r6zbu3734hkj4c6c2oj90mr2ffffi4ntufxs7f25uk4p46x3m3qaz4ytpgj0395250jhtwir0rki3paasgz02pd7cbp31wn1ym86p9ptn0xooeaj6bx3kk8y6ey4rge4br\", \"s7pwbw34ng8r7xykmuwehzt9b4v2bw7jhj1ryoi61t22bykkztcejd5f92widjhlk31tpep2g96ktd64uofjxuvat3trw3i8rk70m8no6ehkpimkydtfy3vdnhipz35twufmwgx9lcxsg2efq1ujrj8xuevwqv379db2gdvwb1srxce\", \"rny044ofo50kecu2aabqg8djgk82j0074ej9f78lbxdmr5u58jyp7j391cgv3iaxrw9rut0sqi4ocpefvw4ljwbnf2mfmprku23r1882l6r36klciz\", \"uvt6e0223lw5rubgxshz9xlakjgjtbkzmwtnz35odwagbmb4lrq49g2t54qsjt54czg2bwhtp8howajr1iwybjj1i5zjonbr3amwom49kzt3ygl3ls8wg9xyfm2nkajw8jgg521clkhx5l6ibp2vysqdx\" ],\n    \"createTime\" : \"2022-09-02T12:02:33.988816Z\",\n    \"applicationEndpoint\" : {\n      \"port\" : 941707809,\n      \"host\" : \"kiafd6ce93id01lj1zhbc42qoo\"\n    },\n    \"displayName\" : \"Lavern Cronin\",\n    \"name\" : \"Rosemarie O'Connell MD\",\n    \"updateTime\" : \"2022-10-13T13:16:33.988959Z\",\n    \"state\" : \"UPDATING\",\n    \"type\" : \"TCP_PROXY\",\n    \"gateway\" : {\n      \"ingressPort\" : 1776009296,\n      \"appGateway\" : \"zlpdos0oy09zr4h1r1oqls638e0frncbvcp9bkqq2ezdmae2wz9lpox9on14tth7mmys5dpcrcossqlcrlddhso03tz85lfvepqetps6d0haertxwe17md5x44feaz30tp8bjkwr3rp5zmgkzfa9zmpvpogyw18xtgkn04pnbcrrvd3nw4fo0ffjw4ec\",\n      \"l7psc\" : \"0fsg8xza4gx7hv3gsutin3uxrfphpymjn10l0qx4ex9rslgd\",\n      \"type\" : \"TYPE_UNSPECIFIED\",\n      \"uri\" : \"https://web.example.mocklab.io/719364\"\n    },\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"gnt8\",\n    \"connectors\" : [ \"9uf31fvtul0ydmsegey5qzacrd2dvm1n4r5zbrozhazhbtirst9bfsp2b5kswlhztsrbl\", \"dtrl9y5bnur5fuxgb0v49odilnvjcke5zfnhzex7ym1xoy771qr0ybzaup88mrkppc4x0pe0aeyb0m1g4\", \"jin24y93ig1jvm78ux3avqq48pltm8u8y37z36tvysuh2jv42xqyk24lrtej1927v01bvblz1d1j6e5q198jv9n87197j36t6nxvv9pv2kg73vrtknye0fayrg8zso5unlzf2sin21dnhu4pnb1wct26kbt18mza1o\", \"ystjyyaab07avd5iehf9ppts1ddj02e0jy20bpji1rye48xjlnoyz05vvc82n06aqvohzpw1nlr3a9izmhjc76wuyezud2xl1w5dmyiu9nt9wxwjz1rcr4m132hp4psumjqt1tkkymk\" ],\n    \"createTime\" : \"2022-08-13T12:49:33.989227Z\",\n    \"applicationEndpoint\" : {\n      \"port\" : 1880003765,\n      \"host\" : \"tnlk0se84bzvtff75jdiotrgqva1olk4d\"\n    },\n    \"displayName\" : \"Lauretta Lind\",\n    \"name\" : \"Jonathon Berge\",\n    \"updateTime\" : \"2022-07-21T13:13:33.989346Z\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"type\" : \"TYPE_UNSPECIFIED\",\n    \"gateway\" : {\n      \"ingressPort\" : 405810625,\n      \"appGateway\" : \"wwtn3ofc9mehqwcj5hl3s880ajpyp98z7jsbzzqdwnlgl1nohkxfk4ukj2m3wfm5h2zs3xbssdpx67d9n4td14rwz8u0ntpi4hbkjh5ypo7nj0mizv79d5j5i9v\",\n      \"l7psc\" : \"ujimp5mlnrpugzpmfnoa2in0xvcyxpp9vg25nkd2vyw4oc70isw23flfe0l4u3kmki2uczqlkpgog1gtiexp\",\n      \"type\" : \"GCP_REGIONAL_MIG\",\n      \"uri\" : \"https://web.example.mocklab.io/746521\"\n    },\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"90n8\",\n    \"connectors\" : [ \"ztx5i0c2fkszlqhkkq33iszdyol7\", \"h056c92azulgg723tga3zziras8wb35fgpjldh0ci6x403u81q5o4aaa3nt8bw0wntsjpzs3m69ux24wqdepxgxo6lp7iumxc1yhpbb1x2y\", \"5ifvqpq4n050lfqvai7b7ytrsjpdo7ezomb3jtd41istl2necihxopgqmqygtd74kgu2ngmvpf0k2wc8oea1s34m5tyt0k10ergfzbl83itko98qox\", \"axtvgyx251r1jqw3kj8ddaa01vrsrovfffc07mfa9v9k6m32nbyz7omi90a4bwmkxbdr1hero0965qevpvzcbw8zuud0q\", \"2toc53l665waqodmw42n4rh98gxknwi2ar714x98qn790g1bfwquk0enuh0mcwlweziyeywci8n7ioo6w50st63\", \"m30340511hd2zkjdn59plf2h2fpeaopvmhf9xk9dvj0bbrktuxof19l5jah81eoicokwd02y0ghoy2z0g5autkb\" ],\n    \"createTime\" : \"2022-08-19T11:07:34.069805Z\",\n    \"applicationEndpoint\" : {\n      \"port\" : 1829019409,\n      \"host\" : \"ze8gk5lfusc6vqcsqs5510w6yo070o5lyqspsr3oiyjirwcy2yg8z8wmhd05glug4fnftimtd62kgxjq740axwotaui8hj8ztud6ko78h9wkg00hs99jlk6o5f7m9\"\n    },\n    \"displayName\" : \"Sirena Herzog\",\n    \"name\" : \"Tonisha Luettgen\",\n    \"updateTime\" : \"2023-01-07T13:51:34.06996Z\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"type\" : \"TYPE_UNSPECIFIED\",\n    \"gateway\" : {\n      \"ingressPort\" : 400039865,\n      \"appGateway\" : \"zf0han6uhana7vt24vlo0y2ivbnrto2k5ht6n494ffysy71n7k7jnt70em0m6517ark5c8y7gtw1hy1mjnsuf59tqwtnkj5ai9h54lhjo0huc4vejlytra3ckh709j7gzyb8epff88l53u9z\",\n      \"l7psc\" : \"bn9hk1f58ihog\",\n      \"type\" : \"GCP_REGIONAL_MIG\",\n      \"uri\" : \"https://web.example.mocklab.io/749774\"\n    },\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"0us3\",\n    \"connectors\" : [ \"tzh8jc24oatihj9t4mvji111l8i2w8\", \"q3ghyep4brdz4yqn2xuswh7j280fkccfp94dtqdbkx4y6y3s41azf7e1h85\", \"6xwr6nmapdowfhildevsx8decvvy2sh1ne6skbhpkbz3fope6k8ypypxlbe7xtzq0iy4u789dtof65pn5jv9epzp2d2qy602i1efzv5f\", \"tf3cyze2z7bgffv304b95puqje5tfsr1prbl7okayafbnl6z6jy8mmbr1i0hng4l3d9j6axpzgq5k434kgwi7pt6uuchjancx\", \"lqx9bx82bt19y0a8nlfgr7mbnnovwznsqwlq0o46294v2zdhv118twujfj939ynjvqute3k8cydqc3z8emhkx98iqqadbvba9d3bu992nl\", \"jxknqgmjk3nc51lf2965rwcmveo6l3z2bqd6m6sugxobu7lm6vm8u5e5wgpvxf0e9biegvmpftajihjs7wki5r50a658zk3gdhynx44r1a12fjtz3kwfhfz2tkj4jceln82ttjy4r5gi329f034vu3mcilk9w6owsblcwi4t8yr\" ],\n    \"createTime\" : \"2022-03-25T13:39:34.070235Z\",\n    \"applicationEndpoint\" : {\n      \"port\" : 1646301788,\n      \"host\" : \"78t7eexdvk\"\n    },\n    \"displayName\" : \"Maisha Spinka PhD\",\n    \"name\" : \"Monty Zieme\",\n    \"updateTime\" : \"2023-02-12T11:11:34.070366Z\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"type\" : \"TCP_PROXY\",\n    \"gateway\" : {\n      \"ingressPort\" : 2088829667,\n      \"appGateway\" : \"nb7k80x91ptpng74dwa06ge7n85fyocb6359ixptot0lu36qf22o8yy6z4ihyn67tzj46xu5\",\n      \"l7psc\" : \"lequmrda1mjzfj2zuai4k5ee5qbhnoi\",\n      \"type\" : \"GCP_REGIONAL_MIG\",\n      \"uri\" : \"https://web.example.mocklab.io/533797\"\n    },\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"642w\",\n    \"connectors\" : [ \"y17w2vbbfhlibqua7srusn5smbzk7zoy1342qafw5htq15ycigy7o79a8rhpm28z9dij7pgfxav2v0ct41rpkxxznmacnrhoansja260r5xubgwzh9ngf\", \"9qzoiz9unyvy59awsww6zmtopkdg1w2rnydio8b1jd55lxpdwjube4o5l4wlnvx5b6zbyv2xsv99mcadpgdizdoa7myc4m4gdwt8agubsya1wlw\", \"n9fvhh7xyv6\", \"kz1igg8w4v4d514tm7ldltzl8vzft1bx71l69mnwdtk7u3qmm1wurn6v8prk1drolvjv53i6pnyqdx9hb8qn9sr1nx0fuwarygy8er6\", \"3brsewhttqc7aeowdzpja1j5yyhqimq281hs7pci2vhpqek0lrjracr9xg1znq3m4uhp7svftfkn825huv5uxmypntposgeisajazg6u78ajq0k01p3z4pjrzr6pfp0armq\" ],\n    \"createTime\" : \"2023-02-13T13:32:34.070608Z\",\n    \"applicationEndpoint\" : {\n      \"port\" : 1011789082,\n      \"host\" : \"9o7wey86xu6ruj7u6c5r8g04t0tdsc085ecw54w9otix\"\n    },\n    \"displayName\" : \"Bradly Walsh\",\n    \"name\" : \"Mai Collier Jr.\",\n    \"updateTime\" : \"2022-11-15T12:11:34.070735Z\",\n    \"state\" : \"CREATED\",\n    \"type\" : \"TCP_PROXY\",\n    \"gateway\" : {\n      \"ingressPort\" : 424937122,\n      \"appGateway\" : \"gvoahz48mynih6rcmw7vw51r78cnp6azwwqxlabi3einybr7mfplbs533mkqx7qpx90ytqhkjqpy0hbt2klhldim0z4mvn\",\n      \"l7psc\" : \"669i6vtrzqjtktu4yrybvpr4xyx8gqw3e67n41q1rit2ppb7ta5b5apmrmjf4xoodl0ig66tby4xoesu6ymrbcvx3nskw7pi06qnheo351v32qvo86dqx3mjea0927otvabqt5kbm8wg436mg6i143t\",\n      \"type\" : \"TYPE_UNSPECIFIED\",\n      \"uri\" : \"https://web.example.mocklab.io/283560\"\n    },\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "41ed6c20-ba32-4be6-845f-a5502e13f2dd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:34.071067Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.appConnections.list",
          "schema" : {
            "description" : "Response message for BeyondCorp.ListAppConnections.",
            "properties" : {
              "appConnections" : {
                "description" : "A list of BeyondCorp AppConnections in the project.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleCloudBeyondcorpAppconnectionsV1AppConnection"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              },
              "unreachable" : {
                "description" : "A list of locations that could not be reached.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "57c58843-dadf-4a9c-8799-5add9d3ee9b8",
    "name" : "Starts asynchronous cancellation on a long-running operation. The server makes a...",
    "request" : {
      "urlPath" : "/v1/Delila+Koepp:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "57c58843-dadf-4a9c-8799-5add9d3ee9b8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:33.988613Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.operations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e342b90e-7858-4de9-a5e4-39d7ed4703ed",
    "name" : "Lists operations that match the specified filter in the request. If the server d...",
    "request" : {
      "urlPath" : "/v1/Lorenzo+Ziemann/operations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Mignon O'Reilly\",\n    \"error\" : {\n      \"code\" : 208717727,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Illum corrupti deserunt molestias id corporis tempore cum. Alias nulla quo voluptas ad excepturi atque. Ut tempore repellendus qui et voluptatem aut ut. Quasi rerum sint est a quis.\"\n    },\n    \"done\" : false\n  } ],\n  \"nextPageToken\" : \"xwpgweron6jdf4ge1mfmprt1vvsolzqtcdv2axelhf1974agi898qrfh9dnc65merda9qjwg4b3fqtkhsrdhfsexxk2hk0exljwupv9e7z7s41xe3ezrgid1k9kjfedxncntljwyfyb8d1hioqv09dw9ms4e8m0uds958mx8wo1qyl5pfagh\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e342b90e-7858-4de9-a5e4-39d7ed4703ed",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:33.988539Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleLongrunningOperation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4d3813b8-99a1-4d42-9013-f3439c599f7e",
    "name" : "Lists information about the supported locations for this service.",
    "request" : {
      "urlPath" : "/v1/Mercy+O%27Kon+PhD/locations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"rpswj231n6h0fvf3e3ap6v30ppc2922p6\",\n  \"locations\" : [ {\n    \"metadata\" : { },\n    \"displayName\" : \"Mike Bartoletti\",\n    \"locationId\" : \"96wg\",\n    \"name\" : \"Bo Watsica\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Ted Homenick\",\n    \"locationId\" : \"937f\",\n    \"name\" : \"Mrs. Hubert Rath\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Ferdinand Boehm\",\n    \"locationId\" : \"9lh5\",\n    \"name\" : \"Ulrike Beahan\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Sherell Kunze\",\n    \"locationId\" : \"268e\",\n    \"name\" : \"Suzette McGlynn\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Mr. Suanne Kuvalis\",\n    \"locationId\" : \"63p1\",\n    \"name\" : \"Billy Ritchie\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4d3813b8-99a1-4d42-9013-f3439c599f7e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:33.988305Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.list",
          "schema" : {
            "description" : "The response message for Locations.ListLocations.",
            "properties" : {
              "locations" : {
                "description" : "A list of locations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleCloudLocationLocation"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d1e0260e-eda6-4ed5-8c6a-c4082e142ffb",
    "name" : "Updates the parameters of a single ClientConnectorService.",
    "request" : {
      "urlPath" : "/v1/Herman+Schultz+DVM",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Aimee Koepp MD\",\n  \"error\" : {\n    \"code\" : 1996073042,\n    \"details\" : [ { } ],\n    \"message\" : \"Non facilis porro eum ut. Amet mollitia quo voluptas aut dicta nulla. Natus dolorem expedita fugit maiores facilis. Error tempora est inventore porro suscipit adipisci commodi.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d1e0260e-eda6-4ed5-8c6a-c4082e142ffb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:33.987362Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.clientConnectorServices.patch",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e1cf9861-2af5-48e6-bd47-82e30a0f9a7e",
    "name" : "Gets the latest state of a long-running operation. Clients can use this method t...",
    "request" : {
      "urlPath" : "/v1/Ms.+Shad+Roob",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Linda Gislason II\",\n  \"error\" : {\n    \"code\" : 2111908594,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Necessitatibus cumque quo consequuntur sit omnis ex. Similique accusamus voluptates eum consequatur odio impedit alias. Voluptas doloremque quam dolor cum.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e1cf9861-2af5-48e6-bd47-82e30a0f9a7e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:33.987158Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.operations.get",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b4aec621-ab41-4aa1-9228-6f21627f23d5",
    "name" : "Deletes a long-running operation. This method indicates that the client is no lo...",
    "request" : {
      "urlPath" : "/v1/Idella+Boyer",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b4aec621-ab41-4aa1-9228-6f21627f23d5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:33.986955Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.operations.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5f2bbf36-2ef5-4dc2-9bc7-9122af154b9d",
    "name" : "Gets instance configuration for a given AppConnector. An internal method called ...",
    "request" : {
      "urlPath" : "/v1/w618gfvboohcnuhkpdkoov7afp0uy8bvfiswfwm24gr6v3qjjcz64ghcrvqmvwtjhuom9qdrg82lu2lh1l7290qdgi7dq4mshcjhitl500x0ytqrh7ukok6mv0buchrbcq6ine1y7xmkrpkbddjrwbg3klpp8frq27dwn9ag26c8bh0mix2n:resolveInstanceConfig",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"instanceConfig\" : {\n    \"sequenceNumber\" : \"d7vthjhbroqpiysn7yhwbu1w1erheviyc36lssxfap6osbw6mpk05kh89fw0ai554ih2rbekyjx8e8fz8pwndvpe2y8iob504gnjdauiwkpe5addwih\",\n    \"instanceConfig\" : { },\n    \"notificationConfig\" : {\n      \"pubsubNotification\" : {\n        \"pubsubSubscription\" : \"tqcc9azgg1pmrqmx2le7b0k5d00c1n358q54x3hki21ryewtevp3gjr3herruvfcak0wk1mg1ywwafbxm6t2apb6rlkh2nw6bt92342fj2isujxxc213e2b23adzw2o9ro8wlgo\"\n      }\n    },\n    \"imageConfig\" : {\n      \"stableImage\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/santi_urso/128.jpg\",\n      \"targetImage\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/maxlinderman/128.jpg\"\n    }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5f2bbf36-2ef5-4dc2-9bc7-9122af154b9d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:33.986866Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.appConnectors.resolveInstanceConfig",
          "schema" : {
            "description" : "Response message for BeyondCorp.ResolveInstanceConfig.",
            "properties" : {
              "instanceConfig" : {
                "$ref" : "#/components/schemas/GoogleCloudBeyondcorpAppconnectorsV1AppConnectorInstanceConfig"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "782b15fe-cb25-4ad2-ae1a-af62e5abd2c5",
    "name" : "Report status for a given connector.",
    "request" : {
      "urlPath" : "/v1/kd21uxrd9qasdf4qb3k2comtx0cafhwv3m73j3hi4o9dxfca56bcu82ta3g13fwri8h7zi7e92676w5vub0viqz3f17e9dyyap36rcoujc14ie2oqdlrmy9dchnlhtzy6pbren4l3b2xzp8xx5sbc4d580q1vkqxb6vc4hwnsnda4d5vy:reportStatus",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Mrs. Thad Oberbrunner\",\n  \"error\" : {\n    \"code\" : 2092883155,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Harum vitae magni laboriosam mollitia. Et adipisci vero. Eaque mollitia assumenda ea. Modi architecto officia sunt ut.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "782b15fe-cb25-4ad2-ae1a-af62e5abd2c5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:33.986644Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.appConnectors.reportStatus",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  } ]
}