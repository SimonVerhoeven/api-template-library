{
  "mappings" : [ {
    "id" : "3814909f-dd8d-4a61-b1a9-07e0a8add019",
    "name" : "Returns permissions that a caller has on the specified resource. If the resource...",
    "request" : {
      "urlPath" : "/v1/dx9xoybqdsm0p7ibjqq3sghi6wiaaapyhvl2kn6voy4kx4iokumt83ejdz8mnor4qitv8xlc9bepgbr5mibyuk1csn4pgd0xks88mz1m7bt0wzyuoel1k0q6jojstldfif32x19gvednvlp2zymqt2uw12opm1c2pcizckd0d0l03o:testIamPermissions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"permissions\" : [ \"6gw64ttjffoo8l3qktdetmvgfty4wrhj9m5j5f12b8fx46xcikezt89bdbt21di2z7ghwlxmf82gykjk24kehfddh3s8v5akxvwnxq\", \"bab1u2q8ohrdqffuclmrrtnfu54obeudmnt14vyiacr0aylxz0hmla1340xsi7dovync99auqpru1jf9noa961w3zl0e6soj\", \"az9vle1v72yx3zg32vnn9qzgswaotg4v78urrc7foc7zvp6daz5euady43u6gna6a3jxjbu94pu6y5ajhou3udzbp89dt6l4e2oct77smy3lokwtv5igvs402zs4i1sgkrzj5952z49d9xpsh7k4ryc4fg\", \"waqt\", \"qowv2wowpsog1p03f6747ujwu5zxlmecr1ocgqgd6fw6ud9\", \"1v5qqxy89geiubxwgwaxq4ql9zfv78457lssdlwpbr7q0rl383k9jgbk1lod3war38kws6io5ky9pteyuys9vzi5nlihv53r3nm1xs3ybiyr9\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3814909f-dd8d-4a61-b1a9-07e0a8add019",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:26.273893Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.clientGateways.testIamPermissions",
          "schema" : {
            "description" : "Response message for `TestIamPermissions` method.",
            "properties" : {
              "permissions" : {
                "description" : "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c13f3d5c-4297-479c-9cd7-576644b09174",
    "name" : "Sets the access control policy on the specified resource. Replaces any existing ...",
    "request" : {
      "urlPath" : "/v1/jovvrwnhmutbi8si019h4u2qhg8oq43f5o8ivmeax4kjtumwpyzwdx888yzlmkfahdsznon0mrh53ixxhjrjlnuttvyemxt5j9hw7r05ib265gzc9j1obbt9qzcns0ctq5qj82rui:setIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"9pb7nyqspt9y4fxwafd77x71kudw0c4tsyrmxk6nplzxjwa50\",\n      \"description\" : \"Impedit eos non facilis illo. Harum architecto quas velit. Alias amet quia neque aut quod.\",\n      \"location\" : \"mx3e70t7zi6t4aaw21jwd56hx6mvs33x3e09p06sxgu6n4agsp9n7v8ino8umc7au3z9siuy404nxkbbaw6e0ecsrb3lkotohl7f1q6r69gy1molpu1t1rda8dt2r\",\n      \"title\" : \"Ex ut quia.\"\n    },\n    \"role\" : \"r0m2tzsvbozc6vbr65gozoego6e1cqw42aj2grcqcnrx8t689kkjvtv06vf69h8fkj29h38gtnu6cfs934srhsbkyqhs87wkgvk2pet9kak65y7ipp12h1qe7spfsvwuur0hblroruam4d0bkceqt6sccnmgrykeq97y57qmte4tkh4vjnr27ahj78tia4f\",\n    \"members\" : [ \"v8ga0f7qjtx7dfluga0zj5bn0ukynrhub1pijx55bjri6ktwwkou5qtq9kpnr6eyxyeahab0i35ibq7ql9yowsk6ra5wx8d01wqzbmpmkszhb11hh9910bqr2ooxlsgdnn11nqvr6nqxsfx5us25dchufxwq7m2\" ]\n  } ],\n  \"etag\" : \"deserunt\",\n  \"version\" : 2029212529,\n  \"auditConfigs\" : [ {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"ruhd5etsj1coxkfpzle0eeur6lc6q40d6yym0ter6n65s5ys4qjyyo2o5l9x8lcm2x67rwlizuwewtwgfoif8oxz5z8amfs3izx09h272sy9ofs2qfz6wlc58vez\", \"diw16l18c433ts\", \"i3jlf38nb7z6tu6tqqcgdmagii0ir1oj7e58rglfgy5q04j7isr5f2j7e7kjs8tzqzz4p60vgq1ppcz91et2uwgo2tppqe4tz7alq60ae1jl1uod8lytlzsikihym626oadsswh8z0ro4fowylx4zg37dwlvyt42swmnomjr7y0tfej1vegt61tsjhodfd7g9dr0ev3\", \"3hz4v4h7l1knxla29tcwjj0p19pdsetj97qr1e3ozlbfsxadqn7hid1lgihfene92xxusoo85bpvdbgskaq788ezq573g3ji2jnhm2m1n6k8dm90scgzlfvv2w46ya1qitse5lf9hd4l7vxlk8yfjr88o236uxf1179bht5xgy7mwlrim1apsjco06sty8bqy1xn\", \"inbujxvo40wpdcfefaolmt8spsfltda2lzf3lt9il27a2u51snmsqyxy8wq4ukeozzchtnm8be4hp7nsfjvfvlf8oxmtgz04rkq6im3go80kz96eeef6m88r79jnby1qi259d64y509mruuwrs7itzliwtjyu2ghhcy21vobat5jdaydsstdvgdubcr2l6nhqf\", \"51f1pu9qblotrrsucdx3p73it8ptv3mw3fgleyqppo5whw8zd9mb12ml0kxtigq49xbmu1f2msutub91k672pbm0p76se09t2bb47htg\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"menedtd0zzvhoz2dxyz4yz2mwn0tywv3ry\", \"exczyxv07md9w4w1gev9livad0ytag8puzr1n37xcwkuey1pnt1j1zfgzzuc91f7l7xhr0c95cyvojbuczv7q0ek83v5tj689s9xxfq5vscxh\", \"ws2summa4a8qparnyp89l36kufr9gzylev91emtwu5o5zi75ug2xvxi9daerqz1zmfjxurap7zu8ey6zqmmdqf6bs23sv0lvq5t3izq96ecqeh8a5kvurx2y4en5zl\", \"kme5xb5ro6pehmgzusfuatqqxf3go8su9wjfgjq55kcapgq7oat62rp4ff0xi0p9l7iz65lrx6yd1a0xr2f7jexxyl5zdxjb\", \"c84zr2d7nf3q7p42y1vkv078moqcer5ypgbvxd68expr\", \"laoc1muw5m7dmlfqbcyyk7yu0m7x5ip1p0yvt9zhcvwkhgfy3dgvfi4p9x29oo3lyhyrv9r4b8d64h3nb6s8ikvnnh2isxr1pbiqwxe38teoek8jfrcaq8wclm9tp2qhj44fnapnpkzhjcysywawxnuwo85tvjrk5by7hckwra498aww5\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"xb9ae9nl132cec9g1ost0i6ad5taro50udx41rr54lv8378zqd70n3pdqzbcwj87jq4dp291cwol7nlkw4ng6kjylwfgk55lb0mmfpxt\", \"vlp97q8boyf2d1e0le9h6zj7v05mjlohh9l71t6n56edh8zs10ctgk5qivrggstk44lsp18300o6o0tjd108jcdsb6vm2i0vqpzfbxicu6jznmjzsbt8a2axcrx7qseyhpghs67dobq8txit8d4g974w6dp\", \"glqxcj5bk5jhlf27t8b2ue10m4ebo4riz7j14qkouq69t1t7qcayftj0cu8pq71ohu8rj5pewifjd3b16rvql2g34h0tj2vqij\", \"wnpaisrpxurbmdsdmw2wb2tnaa7kvbf2bgl4l965dug3ns22zzekyc9rbs9jx5iuyrexpw76eqfvmqg26jqkvgoawcnx2rzmmth1yzq4g2tn6u003cxpos4ls9egz64u9quc7wjwjad7ccz42qk7z68zgf51f8ajll8u1uetkhongoufnoaq1\", \"dp73w708cb28fbu96zwjy311bd2p8fbkvz9mjxaesu7rg5adkkqr5q0bqxudv03dv9lrrsrxvn2oe\", \"g40g4j1qi5za0zogf5yknj1gybbdv\", \"0980u1vah7dbuowqf6bkgp22h5gjcfsatzvh1oo0xwo5wu51grt7bg3op2hrn41fmm80a1uvv2nft4jlcxcjihf1ubh0r4jg1u4i9mpz7qt1lbgsba6g1a5xe3onrikili5qx1slo3vyb16tpy39opvp\", \"o8lzob7qd6bli1xcrlt34ihwwvjn4olkf\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"y7kzthwhl359qg50nyf4q7xuyirrk7gpg5ltsjqwzb6z0sjcqbuesp1hykqvez6nqzr9fkury19zfhc47ncfgt9cd5ajclzvb928yfosqn6gg9jlagm\", \"gb9u5a48bdua3uiuqkzzjtbj0mm8hu5xnkaadtapq931an39i4lzr5v73wdukcmci76do68hywe8m7ul0vnn149to06nxkbdw3j411oxql0z8vit09lxy428h0zdz48dexn\", \"9ahkm1k9hmgnzbr100zcq2kl29bqmiw1rx21406nwcr4xu4mayw46fgosci1r9kqcfn9byr4ulreyegi7j4ar9t4bjymdr97f5aadd53rkus6ioidofe05prbzpi9nzykhzp67ck7h4v20lxu0u75fyv0f9ti7y1fiwhhimrul3i2fqesrr6njayavauh96m0dr8n09\", \"a289oz27a7aniwpxorw6i5n\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"8bsptpp1p\", \"bcjv6fjizwvw5tj27gbfv81jn0s7b63wcehb5q1r9qrfy5mruag6fdbvlm2oslllihy24fmzd6rskbkh8fy2amaozh6v8ssoadbbzl46vosmbhxm6w6lezpe\", \"4mx6a2ekr27ht5qkcb6ubp38c368k2nwyycxulbf2ivahic0o9hn6v7awh5b6u7hdec0mes9gv\", \"g8xv1f5m1owb\", \"d2iiacwomarjgy290udorxahc96\" ]\n    } ],\n    \"service\" : \"jmrc94um4io1oaf7d5yrhl395l8kavbju28z8abnd84zhv4nyxh48sdh2c4ztuc3ynu2zysnnt52mv61ig7efihvqrzu9gb7r5plbkbtyw0e3az87i74j4t926a9b08jngc5vzhkzcsf7foljv1v75atcm0minyvj3z11fffknqibil8hy6go2l5axen0kf\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"u0m6ugftv6sqfdtiacb4idyrn9sflwfh7mlq65ucnwr8ml6cw2rlflyteya2k8qv2gbpain2mp9eip9221rmorgoq5y3\", \"e5oll8g8wrix8ixcellw71exijuyg5hmgnhv\", \"dn32lp9zskja6wpit1mbkrbqk2t692p1st03f2bdetl2rpo5vluyygcu4fee2um\", \"ffknifee59v3d40srlj6g8zj4uoihbeczgc53nuw920cq9awqnoj9d\", \"yyt4s62cakymhpj2h8ls495b9u9u8ctelmetad7yoxvxc7mi683yrtvi11z9cxu9ifey6c1jxzbyulymwrngb7groo89a1qgdl6tq96glvdd4cm7lckkwd7d7unwh308ur1s8h7h112l1ew\", \"cml4e5yuegsbo3al68ncev777owtskrcdc94vwqkyudt1f1drbvjl2kq978sqsvwqlncxym8zo4p58u6l7j902kjp1ku9c5gmt6429yxgjancirq84fpfo6o0u8f5y2op\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"6c93b8z642vse6sfk63kt4x099vktesxjieax0\", \"f01k402ep5kqr9hqdvpiivll6xlvs2vixruberq0m40vvmakfg2ci0jout22kfz3egg53zb026j4z4ahklek029uey4cpknl5q706e6lhn57mwwqdplqe3nskzikb3c1qmg27tg5yq8i5c5aa1sxoy0vn1crbp72ouurb0yszvyxf19k84y2zyqmzr7w\", \"6evjqbi7emr39i4tnubjhrfwl537ojnp30q1cqhxpzf7nj6ywt2jvg6we\", \"63enp4pzj9n526cmokzwdoufgt0ltyq0s35a3w12qhaio9bc3p3zlz1ytkto1om1emf5n4h3j9ac0dn6h6p3glv7jtd76owownhk791g5bzv23hr97pqvy20j60cv9q1gx0jwapjlsp4r7ww4cyngd4yvgatj4\", \"3cjvzj49jdg\", \"ftk99oxvq8vzwdshke719dxkkjf97k4lqcbot68d1ebgwvxm86kpwq3v0tammf86zey3pjtd89tuoo838jeb5rvdmtjtg3bzbct9k1unfbfzo3xm522ibje4anknoz62ycvey5vmpaf61q3l3i9ju3figvrjidx9k0ybj25of83x5jnemntx73nojxy5zqjdx3p3k\", \"ehu6r78rxlx83y5f3p7zl2cqeblxfpjp1wzovzlpvu07nq3o8jofmauzmw6b3wu41xl2xp8j6qatt5cvztkk9mzohs7ng4a009tbrvlnbm74pm40o8057o1\", \"a2sed3aquh1tt6zcq2v8w5gnpfzsjslw5b86ipjqy9i5iqdpvl6dkn\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"hxarxs9tb8jw9xqkg8b4crzfjadiz38klbb1bldn7fzkip1lfosncoverhuquzwx5d5j1iukzfl20ca3828xep395cyyk6s4kwc64d5gkhlpzzukf63eeruqlhuxuqshvewlbz5u6gfdwusqnkxdses7xm\", \"sxnli756tbx5bvhmpgtryn77col4tzm4xy4sjv5kaarj7da780aor3by1v2ayg5q3a2tcsoh4q8xibgb2xmvhh8yh\", \"ilygjg7jk1ax0iwxyka8f9yoby5j5crdz524b7kfgdhql6es5txs7z5mc5kqvv0qheslspix7v2u7dd1b7vg9y2wdodtxohp99wos\", \"mroq2qw9vlezjp65vngi4p7dei4c7ucwhonk7veq4kwyjupsd5gwnlj90rlv0aok0sg77417sspiqve519r57jp48i2ial7o2nre4okht00kw1o029\", \"t21bn78kxpnyldhb8kpr8aitiktzs49k9mtb7ni68zp5fk51tneibu159bw6tdayktkdmo\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"g3vhqjkh2v57p14k0hfjt9l6zqaqvv2kpp4wjm4qhkmwdbpb9z1i0bppt\", \"l5879ow4ubs90g36\", \"p3fgj6s8ejdmjf31cd9wboj3w2qs3m15fkaqpygr4npn989gbmevqrpha3yjkqbjhg1fi0twryh93t55xxbw37b9otvxshuc87z1rb4st5q0xrfsalang4gzmtcruz2pcgbb7k1y0vvl4h9oaty88v584fmr322hdon8i13ztyba0r\", \"sxugb2jy4ceqfvn697ydg6ctwuzqp7lh1bmb6jqidi33iu52k65f6g850nwcjp9vvg9hb3m34s43bocn5fp166nzefvz887hw\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"nx9tmfg0eniuehdazezq419u9ks2byet9yi62jm1jb3vojbznk6ietqa76y61whu9vdhbc35z0mjw31otqplbss3zrc30jjo89\", \"918toq2jyx5dg8a6o2igxp12ut1hicmtumu1mf6mksvirlj5gsl1i6o4rz8rwbftim6lw18s9bd5yjwg9z4m9a8jan946idfhkxea029id91y7dn7ar8e9g3b0n8l\", \"1xgt9trla5o99ew1m1zatejlc3q2vuo4pzt5vmt77eltbvg5up8skqippt42vps8tyrl0qhlqplj63p67gvktyw2a6222txudhma6leml1rdjvy2iw6eo\", \"m8nhxtvjodcqqs9\", \"uotzvq1kfojs7lxwvmmh8cfb9ej5pvzl8ov9bp8zaf0phy9e8w0io63duxp83l5fckvb1v2wz7l3pmt303764o8fx7lyfx13szyt83bb7zdmgdib6037wmudjb6rnlv1qrna90z9ttgqrwm3xyb2j0pou68a4rrw6dn0oszyp77yz9jeq2j7qf\" ]\n    } ],\n    \"service\" : \"5h8kj5p87z7g1wn84j2qsqhbmhf9qgfkefm8nqz1rsvumpjqxcagse0pohfti5iuzggyxzcxjoj2aniqgafvd87r4f6e7kn6kku2q6r20ghtx1l28ou9quja66g4p\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"0cpft567cs749bkyvewqdkktww6k6g892hqf84oxspbmnqo5ivbccsaxbt71zhmqbec0dmq90fiplt9uj1l8o2epukgwuc7cs3c1k48yxtoal\", \"hv6mp8vwfm42jkhigbn4wnvidfcsx5e98bily9zuglvbd9cnm7bwj2rcuhk8heuo7hgvlv9hyatu1u2l8vojq6grqaw4a1fmgsr1oj9rq5uoggk5gu0ag1xp70m1n7ibpf95hc0d4aih1nudv7ogpc7c7u9\", \"1j2sx71nneojuz0vkvn6f87xycacptmzw7b8tm8aoakjoenfw8iyg7j9vuh2bsxhf2fbotc0ir0pr5r5wd113r8o497ob5t3wb2m3visz30sedn\", \"81ldfnp5oao6mv2x1lpywsy\", \"4bsmq3jhqqbpcvddevhxzdzjdsezkxebg829jcvzhfs4il\", \"9wpi4rlkcouqw3d3ft5fm56y5af72mnnokh9tiebkxve2rzpcrb0x92kndh61a8p\", \"qqbf1p0h34p0r9bae6rngbk7whb5aj5nght2rshy4dfs3ij0miwdgio0ice835cwk8po6t13ggnfluh18dgn756pa0hcgvpvsgfce3tq8ga8ejf7ynb2hj1zr7k5ie5s2gdpbmlvtn35hnhvi8ucrget\", \"kixkwtva0p3d3veo76j8j07bif0zleka819\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"2bi\", \"0ytv774a1u8ku2v58\", \"h6lofx1tnwodfx6vanlizoh6vgsv5ybeyxea5ry47mkktz7li42ylds30kdfu7isrzuyuu8o60oi6n1g2u58yul3ixlkcf02budtlddxg1976p71usxd8df6w7nb0bkw5nfm7x9fo5h\", \"2wbe\", \"hb6dkyc4bm4tghpfthki81z3rokewspcxouxrnhdccmj7d0vsojd9ywalwezwpnzkqcur924lrqo9s89jpt7hqq6h0l1k3fz1cjywgz6pctrc65bgayllq2jfcgolp9sijfor0ryin9uvdi5yh2b8s8ob7jj2z\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"94xt7ia5l7xxyjxy7i3wkwqgga2frmmx9yycrxwniznpljnoaodqpr27gti\", \"2ponfrr1zgtzvpjoyqc420tudiu7wdz6xswv46qryngptptbfeolko6jbinevriw8uf9yj7eogfq2k6xtbtxvgwvkvnezyaf3avlj76d8io6mwmasfkpyye8f552gnjb5kymxzot82a8tkdzil9p60gx9hrszfq1ul296tt8pvwho84btz\", \"1w164hw3xosoqjujynukuv6yoir4jhwkpcani5gweu1jhc7q2c27n6v1wi3h8f\", \"p2etmezdwfosgevxfa4ozk6mk694xn2rjrmzv2xvhawhhrrjzxkv01pwfi9y63a0wr0gx06vuo5fsydfcqcvs1waws6dfqo1j17kwa4s5mqxs3\", \"z0jnivi103fruvtc1ug8qo1x20rpkcxvphqmtq1l7kt4fom0ddfevsnew22s4h5yw7ip2gf7yjmes2es9jh7hqh\", \"1bju3n8rr478blrugz1vogp\", \"kbbgnl95d6t4afjvk\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"6mp0n3kwtyh0j7w5ytiyhwu90izo8ud05gem3op4aitrtax2y59ukgpmbip25mkxzv342nq24ybtq8z3fq1vw0u6gb7zguqvvks90cw6pq9l4sefdxv1u79na3bq9jo9388qa6y0pitkyjrtngw9s2jzmdzj91951w52uql0maxs80\" ]\n    } ],\n    \"service\" : \"aozy2equb4sdykqti5606j8myli0dizwmoi1hf4ya7rqjifvfdourlyv2yh3i4cu9y42rg7ygkkvyd73l1wvz68npwkuz9i0cigtg9c2b0ejxaort5v54h\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"6bjvaiermvcjhrbjpbe08gqj225zsmznr79p6za6i78jikfpo2bn83rwah7gya6jo19dutl6oeoav4bl2w315a2cv59q7zlgnx2bm7ckdo1z98l5b36ysbftsmr876\", \"ll3xxf1a9dxo8tbc7gw61iqk\", \"gznv1qxzpzsye2v0j18brrra2aqerun1zrla6oh07von3s3d7r0ifzde116smnzkv0wj202v82vy5i58ki\", \"lfha7p9rx6kweu8m3sbg\", \"telub3a1pelxi6yh3mtq68ea4xwlbnjy8h87lromn7i8ef1ftmzxi3nd03up184meu201y9n9zmbu8en2xow36a52q5kwuu55453f78ztlllll16wsblkuxmk5d4cpjzk53pgnfbmvokc\", \"qlbixhe1tcfygs1j4e2sn12ch2jkgypjol7ojq0s03t881onulu4g6u80n8btsehv9ek9zeh0wyduujlmn6i0k3b2djkc1tdpb44y43whzw70j7f7pj598d2y64n7sq96lx7kjgsl4h0o5rr21wlht9tkbrp\", \"g8roh03vka2liuzp4d0csm79w7z7heyraqogrpqp3hi22izfc8xbxopshl4l5mu\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"pmqu09dzmaimhuwrmdlmbz2oyj0gsgskcer\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"0cilvoazx2ikf58tdggmdj4sog9cf9c8wd8etgfrlvb9a9ieeth52p27ys2yewil7nbpa1x8q3leyi6oslu9dh2rmp76orxmere635k6b1dtyr8kwpc4pfx7t2b20xjmgshhf240pi6wnig1udyvv4vcegb8o6uppjquc3t2jqhttjacs5ifb2ks672ua20sq\", \"2w802xcrskby7v0idx9ni0yj23oa2e8igp1rljkxmjw1f8jz2ytdnwzdw37kmpur5sahtxn7x8i0sy6kjirbifkk7b40156iabnk9mg\", \"eu5l2mkjxsr2\", \"9oxoa0i75ey9gd1rip2ibwdifes3kzzqujgqi9q0ntaw6t5ll7h1n1ybjy1a6hcf40pibzpqavy79e0qj5hgdirnivnez8a4u889g3atv9je27ahecvcva139nqdxe0i8vcjicx25jz1t5bas8y1zsqyz0clat0kb\", \"5xn79jrsl6ls9fgl8kytjhxj6kxruy5vvgc11s0vfl6dze41hh9lu5r2tyv3nxxws5q1i4g7polhop0lg7yxiep5sev0x2uf5lrfqbdmg60ockko4icmz77pkorl04t3ynkm7h5r8gpx8j7uihx63a2007xgp9ldesqsb9sa81ayebhbudo1jqtka3ybqcybegrbt\", \"7f7ehx1zwloqzg9zltt8aydxd6udc4kxme23vlmg7svkxpda2rai3efek55hjevlhtxlknv7mqj7ipovxk8f0unm5lcgotb4pigqv2mtvplnzvbxapymuevxy9ejyc2ndn8g9jol5iss4je2ut90ddgmat7ke3nax6ciexh2k6d3czd8fffw9vmb1xoxcr\", \"ox2ddcc2oc5omij2i50ghmwr5xoml270rif6xddgy1usgum\" ]\n    } ],\n    \"service\" : \"f90jmhv10d4ay03b4o0iqjfeo3sy64r16krkc16yfz4xqwxpzq2v99sg1j4sb8euvapuiht2rg4aymjushc2m96fk3h13w0pf6lcfzrhq5f8ae1ghgfw818z51bqx17e69njrhrvmqh8fkqurnexs7fo5la2idwikaje70ega23\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"mxx9f4clzdlkztl44aodq20qsqbk6oszt86aku638e4x1sozoci6l3iau449zhlmi5be772t8qjl25bbvexb522cl7m85v8g0xitwi7lmauoew7te8asgxc6lcq9tw27p6l6bdn6048\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"0k0dluaxecmgb3n9zptuoiu5cnnw\", \"2pwdejsyoodlq0xans1t9751b\", \"w5oyo4bxbj9athlotnymvximj6buwh3kaxlsnn8ag3rhdsus319lucygzshaispt9z6hm33988ig2\", \"5wepx7lcda08rt2902d34ahb5rcwl22nuo87bjgih9jx7n3281o18sz6iqnm9y49tztx23l6o4ijh7jy8expazh440ortak3qiih\", \"nrvd9kqy8ob74zjuwa562z4xye6lnleohfahx57qab\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"8mv3gpnsb8urx7mzdr1a6nyxa37mm4811ttej2936ajq4ndmw55vr74ssbvd0t4m0wdbwhwmwdjnmdzfw5dody5w3p31zawi8tllv1sdw387vafom9n\", \"emvjqtwfe0p4bq6l55qx74qezwf21ve3pdqvwgi000ylhlrfneysaygy8s1ogvd2asc2\", \"hb4puy2v6ckiztvlpc2iiacjnnyu4vn8v5adbryvodado38n1ycr9qaa3bcc4eqvyg9gumvhsslcsgrb0y85kj7rwm918je1ynweep1oawq2m67hmdv338uwopurhyl\", \"gajh1ih85vn8mulznmnnba4kvgwdkev0ztdte3ncd62qlscrcqk1ehnksr557apgwhnyc4kf7cf31cqo50bwi73c4ri86zl\", \"22eaeddr36dnm9jmniuka8fmtqcikm8m4q8dsehre0jm39lnbkuoobsx5rvd6t6138fx31h0j9knogoia6qa7gvb1x797h3af0sb8s\", \"ioxcpimry1h4wdzlxuj5gpwjsg0918g604kf9ted1hjr201qx4d1f9smxoezvyzvpghpom84nhootri93jy5fh5hdj0pz53xobsp2m0ngjpwvsmhl80ywutyxcvddysu275jnxij9ujk2uhkr712zvyq05z5xtjmuywfzum0m9pnoqw7egevykb\", \"e12mkvh0vtan4d9opcy6t9dic2a8ad8p7gt6ryfzsa6lgqnxhp9x5eqint4iqhfpb0gy1q4ydok3cqwobt5zuf8yp0aib1\", \"hcrgd39a9tymks93cz5rkj36pn6ztmyl8p24e2v\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"7xqmv54w44240cd3mtdwvsfngj2usnf3fvj6xub88oa6tayht\", \"e2yz9ntbnrabeo403390be9emvaex5oaih4k8hu5wl9grnl3i8jqkuj50xrozd0\", \"gqftup5fg1gkad1ptfzak8i6np4azfwkm7z48ek6vh73w53f94mgncukjl9lpj1p0mmy3epkuz46gdk44hu29kifwid9\", \"zv54tyh1l1hnnzpvbcrgc76juk84h97m2\", \"jhrxpf9llhvaajdec7ei08brns7akj4kl4nmrk2xu6cxkuyo83yaurssupciialzbtb\", \"knzxxkhyg9cxgf3olzuoes\", \"lnz9nat99xxeo5sbv7gzbecy2oedydhxwtzpe4i1118b3c14otv40xob7werha3bh047lum3ne92o8a3a9zn3jtitjd94ubx9ah9lw5y10vr6daponupdbyentnvethkuwm4pvq2mubntjemheinsl413l18ggpzd6opaea1h\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"vc2hqro640ag98pxf1391lw6fc81ssyqkv0qi3mw71p55jc9jhtfuzyxp6ka6g\", \"o84yt5aap8fncochtn4hlesf154go3mlrn43ed4gsm64oiap84\", \"wf60zpqc8s08bwd1x45uj11l1jpkjvvttf9ftlaxmbktho7ybmuudsu7byjkl\", \"zdz66zba9x6112a7sg6bt41c0xe0s55kx5mfmo458jzil0j2x4ikbvhj42c74ljshhc5iusc69uizr4su94zbcy5ozhh8x3pb53cjs6ueg6fxnscyo8yp4f3aap7rrt6nkyvg6k528rfutwnad\", \"wtil82\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"ym8etcvmea3dc0jrdhc4azu0mgitmszm73w0lci4qjopngw0td0jryqxzhd3o42r40vtwjqmle\", \"0864mywh58nacp52jfuyim06wu5kzg6nf\" ]\n    } ],\n    \"service\" : \"lm4vqnylszqtuxanwavdz1yu6kf684l4lgfn\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"ofofxm92m3qiv03fgvqf7nw2qcj5lmtwdp7ymv1vvb6tpfc0beqnp7mhzamui4akurph3rahmw6dqmj79b7al9bm9i76h81m1besvb4jnkuuwp1b18tzins2ec\", \"78bm0bzd8nvl6txx3l0x\", \"3a2v6d8af62nc8j84gsdkxgm26jecab4xv2b1fnx2nbpvy8phuu35cak6qgk4p19ekfyt31vpbufhi9vzf3\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"igr75\", \"wrr52zwfrvrb6i5nl9z1h6c57h3xmv5e182donjdrmj9f8mzyu02mp7xqlxk0w88rfbtlqyf14j7s9hfpfa9vkgezaciwfvswoajwcy5fx2tgtpky54odc0xzg0l9my35eolhb3am4grv1r6o551v8m56yd7j3ws6331t9cierdd50n852crit4vwyz6r12c35\", \"xevg4qdwwjo9tydl6d1ex509xud47neb56vvi9106m15vjckq2xbh8glubtaguo2ht4z19y2u9lzdkg59jd7z41iqgx5duw6\", \"4jpzhiyzx8k056ru9swi8977kzts7mk6u1kwczrnjrt9v7bxjfa4rq9pwf0nfab9xb7hz8jkva7fy5y4ykfabdo2hnuuriogf86wz1lbea6szkpon7xnzm3v3dndem2b62hvfbe7krbmx40cpoeedpq4qig08cqb77g4rl6x59czpai2z31t5\", \"bwlvz5x8taesapzp81cfbof43nl9qf7i7skpalho8psrsl0okyh0q1goq69mhq80glkdnon89psndp6bv7spx7nfmw4psn9z6ysh1qpmd6ge48m76hyvv9xxu53hofl1qrkvob49a8qx944hz62edx6adyhz8oeoux0f1ncl5ot7dc3unqot6eemhq23drycoz13\", \"w47ofe6nggzlehx615u9mp2nkjcd7xdn01ye87gvtmvewis563tzrnbqo6io9veubvddguee2b83du7ols9tfi9tgurwti8yitzbupd7sjezsquadqzb09ccq8v0morjh5m\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"wwxknin14r\", \"5m98381jq7b92pjb9xcvnfsdpz2hrbj2w4ucern2y076hcb28tv16raahkrlh7ybxt4l312eymqi6sda5zxdl0lmbr09\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"0o38yekg649g5ob8sjqbdz587429bq8j7o3lhgl7to2qkfnbtsp6pg4y0cnok4awafzfknza4o\", \"ikyxk2p5rgncvci7eqz13jne2zu3f3akk524v1opd0tbd8frh0147wvevoxnllrrfsz1esrhaktlbu\", \"a3u4rbaw4dkff66u3l8fd2ahiwyppng0pzr750p0wv4qqdro7r0b0izvz698c7w6kc22x8ess6ez6szcewvv5sly0lkkbv9rca73y5l0f\", \"u0pz2e96fnto6ogkddjbjohr5gckv0rrc7em42ru0p4sznln7gwk6hy\", \"pxihn5gy7io0uw5x\", \"j1da864tljsx3n81vvvx15kkevqmaegj0fkfarhx4w8fcw0f0xugx7w1sl0nbge2au4x4jqnir6z6o9543geepzpv7zn33\", \"wnhhggq5zag44l0bx1jbre2myj39lwqntr65flb6kz8ngr1b7qtp8zerye6ris5hsi1njp3socvplxkv33x7y6wrf9q955wnbu41tns1e70wrrb5uk5je1043\", \"gp8gao7b4mqy2gjrk282s1ufsaan3xk5zj045xvnsnqw9on2ds1t1pn8\" ]\n    } ],\n    \"service\" : \"g4yukwxo\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c13f3d5c-4297-479c-9cd7-576644b09174",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:26.273767Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.clientGateways.setIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "auditConfigs" : {
                "description" : "Specifies cloud audit logging configuration for this policy.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleIamV1AuditConfig"
                },
                "type" : "array"
              },
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleIamV1Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b08634db-428f-4445-8251-668f57b3f707",
    "name" : "Gets the access control policy for a resource. Returns an empty policy if the re...",
    "request" : {
      "urlPath" : "/v1/oo4s5icp3gv4n9svxed6pbs:getIamPolicy",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"t2yvg5afbazhqsaqjaspouvfllnacohmw39pnet9kymg71bjiqg4isefnv\",\n      \"description\" : \"Et quos eaque sit et. Qui ut aut. Tenetur eos ut vitae praesentium. Et molestiae natus id magni magni voluptatum quo. Deserunt dicta quo cumque.\",\n      \"location\" : \"ydrwr9ur2m6va50ydne39vs37ov6vfmqefdcqiv3wzzdwiv2uo28ous2dh0ts2no2c8gavs8bdigxwjkwblojhrjt4jcugjr\",\n      \"title\" : \"Aspernatur quae ad qui error.\"\n    },\n    \"role\" : \"sgfht4jp8n6lf5dh60yump1karsyvgw7vb9ir523nlplr8u1ff4tjy4n95r59eqx3qxl0jp0z871bzra7z665hgfw1x2sv7dgx93sp39p7fxfz0fy12rka6p6s\",\n    \"members\" : [ \"x9s6zq2wd0bkv94g4gldng\", \"1el0owsgo3c4ih0ug17w8z429bui6zuzbomy1aooen4s393xglhleliuf7hi28le9bqzh1wklyggow8l9dkbsr2vb32gzy1728c3rnmrpty5f2qlkoez3iparsz8albvwjwub84q518x\", \"nhkg87e0jemy886804erwd4lj8ekfo8jc31gxfus6m6spsa9h8wauao13kfw4zk6hhtgztvlcoyu7n370y53e36ga4r9qv4en82mbvw8ve84s2mwvuvvbesfafvwfmjdrbkyhvur4nz58mf3g5w\", \"qzkr2nv7xdzlwi6vhcmryn0qrfj5bcffquu15zlzregtkhr6ifconki9eu5r6np8oxukdyhbz4wujonadw76ob9bcmcdw4toaugonx33p9zmr0vcvphmsb4v328oc4qn1s7imglj11p4mte2w1nej18g9ddrvy5tlbdu26kz36a9vqdtwce6pkp\", \"93ontqiihlsl6rwvi0tserhsi8z76b442857jk3ldgk0kdmkvl0ema2471qu4hqovxcg2cgiwg2cejgcvfgr9ln8hpqgach1nqu1n6ke9dgcqcy83jt1tnuovf\", \"b1dzhipkykrxuoytdxhmmv03fsp7cxh0thqzq1edmme27rcun8zxjme5lmkjwwvvvsq99nhsjs96gfeneojvll8zydt8edqypl3sawb656qlo24ub48pqh2p12yxxw73qdj1ls3y3nb27ilax4cj4u14fwl4xlpmnfr9ij6oifeqt5xgpi\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"69124tl7eqh0v0lz3263hxhksqcj3uyss4qx89sa9ps65z89m91t8udzng4feygna53hqnexxl9y2sulsz5c3xdx6za6em8uc259vmia33equct0khh62pzt32wx87agm5ba3uuj14mc\",\n      \"description\" : \"Voluptatem eos exercitationem ab nisi. Enim repellendus error sunt aspernatur dolore pariatur ullam. Soluta deserunt neque sunt est ipsum ex nesciunt. Necessitatibus nobis et voluptatibus quis.\",\n      \"location\" : \"t0uspp7slgawcrm7kky8u69f6382d51ooqlxufc1tkozirs2jscbb8fydt0f\",\n      \"title\" : \"Possimus quis tenetur.\"\n    },\n    \"role\" : \"io4w6ip2kmu19qsbjy5byg4eflpdfyp3dc930iabl0e1lum3dr36u02f5945tmb880dvfevma\",\n    \"members\" : [ \"j4l1ye87v00p3jpo3hs9gpxqlt575aixwl5dcfz0pos3mx4nkcffm91l2zj4y1la6fp374te61lw32gsk1xsi1t7kf4s47ycuwtluapdyzziennfdbxddaadmjxx415i8ceomwsmc\", \"3uvd0y2gifx32rtc41xcsjo4r93yoiospqahrxh4zced1qw63e7ructaj23f192vwdjsgp6toxaclyquz0r32g7brjktes5e0y5a9nd8opwr7l7hum4\", \"r4qptbvfc7kgqhvkbuiwrrc84kjnliqw5ivnjj69ev0o8e6j7ca7nycotz4vyl80prs7eaxs2yadgmb4rnhi2qw72lfguplc5e52ig5zklxo2n64ph2almtdiryf0zys69bs0gqdd21kjoj1\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"89u6ujbo3qgibultw95lmxzj2srsr2x\",\n      \"description\" : \"Nisi iure molestiae omnis dignissimos qui necessitatibus. Cumque molestiae non dolore. Enim dolorem non sunt veritatis eveniet. Veniam molestiae et ea.\",\n      \"location\" : \"j9q50qe1l057q6l6u92yh2gzdkhtnpnmwteixw74c9m\",\n      \"title\" : \"Minima deserunt mollitia assumenda et aliquam ducimus.\"\n    },\n    \"role\" : \"5494sv132tyo9r9npfi79s3th8mizy45b7n5yff80t64yqulr0gyi8\",\n    \"members\" : [ \"21g1y7ncu6tmedh8x0pgrs562wijv006ljloljbk18e8f1ffzk5gpdt8\", \"z9mahsyfe\", \"wxhmi1\", \"b22m2n3mef8elqerrw6n36swmfhy0wiynl18i8ni0d7hapztztljr7pn27u43vuid5gjzi9jksvf9mze80h9haqocma62iwgd4nnc\", \"o23nqggztgzv3n9rxhmit6w9sttfyjeligkbdas3wrduh8hpzot1t5b3gozwa8ec8dealougl6atkzca3sbxtw1to8gaiy2gzlp45sar00ucp4jh1o1an2k6iynayjjc23ahfxkf3a8fkb4vi9mggfnmgd1dpxiw9ctdlrwpkk4epc\", \"i45ueq3qzz6ewgz6absfpohem3qg0zfw3mphu5fv50o5mjr9hnztj0e3n\", \"gdo2nn05eh0rl5todytpdvn5smhanw8h66y43a0lgodfvrrc7kti9l6453y23qgeey49hzacxvv0zxhxyuv0pz2l71n0gl1hx4r5vcl8lynd8mjwhh7gj6kgut7tomt761yaur231zpes4tzlgnek6a93afd85igxg3pa0ezgshkttj3ljdlovxwi\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"nk86g9okqbzaewpgwgfht4aki24x9dd5q0joiwmhfv0x5bi2bk6njllx1xv0qtgv6o63r8fftvaa4x6al0ewqs3sg6o6xbxdvyka0q81ibf7go87q2myavp6a93w\",\n      \"description\" : \"Saepe neque libero eius repudiandae. Consequatur est voluptas corporis provident ut aut. Dignissimos consequuntur dolorem sit molestias. Dolor sapiente ut nam.\",\n      \"location\" : \"xe4r0rsif4qlly1lxnzgj8lob3cuhxj90z9iyh2sqcyhd6iwd8kncf9hpwevqi4cz2uaum29xk3hoterziq6dzqyirnqwp47tcyddm000r0fildpn8a0u8vra3ihgt40o0vpy9ttw5j4g40ipjwb7e9h8dt1k4ab6zgm5\",\n      \"title\" : \"Nulla nobis consequatur debitis.\"\n    },\n    \"role\" : \"56jwh3973ekl7gkmryqzj93zj4fxbbx7b8dqwit0oi0hmvqsxe98va45djjfiemqt5zzp33sx21cxv010oqhrltjuwpn2ytn78wtpcg739mt3u8l9ptpih7ixajb7950s1e9ag47hg9dwt4dofahm259wqz8hmqzphrnazx2ky0ks4w0kqoijjj\",\n    \"members\" : [ \"49oi085scztylchhxcbp77k\", \"lcsm1pc97g3kya2hv7raejd2r0md490oirgg8l3hfxku4ebgwd0dt1vkv7lieihjscg47r2tkrh4f1pwjcv7b38bio9hwtte2av5ve1lmhe84jgy4gjtypnh9w00xsv7z2tcc80ai4wmb0rgn\", \"j6oc4hg58xxrkarvmewpwur5fqo2z89go85sfmaynwvnfakdcgfg1pve7zen861086h2ywb81cf\" ]\n  } ],\n  \"etag\" : \"pariatur\",\n  \"version\" : 1162167961,\n  \"auditConfigs\" : [ {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"8oo97943kj1kvvm0f4sb816t5njturd3t6b64sre3f6vxpx3u5btzp5t6aeewy7g4c6omu4lyqc7guhy2rzq9ymw83\", \"d3thpezvyr8y\", \"1zrmfrx4abqnhezcwstnx98cngn3een9n5qt52qpd1rdyz6hu0xbzx4y1hhjlnb42noavna0eaijxjpvrr6j2s8g3z50zitqi7q61pkaihkowxehot1cjndne4vus\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"l8wscpll41ernbsryjfz3iwn2zkfth0tsidmjczk3u94byc5v6q1gh3f3wz7d7q\", \"t52t66h4ewr6y0rf2a3ahtc0n6vk15slozplg9lkkdn03thhrtuoyugaatoealvs3f1ylcxge1xxl2uox3oddley464u59ieh9u5y8fhsbxxf\", \"bzdmytlylf5f48q5o219sonue7cq7fr8dak5qdddt8n09twmhxznjnoe69is4tvlu162y8cuyml02e7jwvyt18n1p4i38267k2vvy7b5g6fw5\", \"lg9tpliqm47q7gapdxrhou2v0pkblnwwp66cplm14634bv7910qdf6lcfcqjj6jtlqhm74fp6jfnsmslauyiq14bdkxlze5h1gz3cl0o9fu975st\", \"7sp0onqmhyfj3ip78o4sc8pkyj2rgs1hgxosc1qoa41kf3c9mvbz891s5amee1ndnmsehwczezge8muyjjwd2tiga99xreij4rnlaq54lqkrjmztd932j703c670cnr47nz0cdx6eixy6sx2yx55egmqaacrsvqegwrhmwjuj3re0fei4r08\", \"9jqbl1rjc8ny0i5uniho8xk3eznt69sr3g5mpqr8psmu98enh02ba5mdcud3dpdt5kx1t4k9wo4urpv2pv3yb3x793nfc8amoj7yz40ldrgargfcfq772d3kdi6caf9tzgv6h86xveue5pm44erw4xdxxi9gxf1n60odo6q\", \"c9xz8xik9oihmzdlny193pmoklg88nxy8ky8v6zbgn69\", \"h1fshkl28s5cn370xwjuco24ylnvryse07gxes1phqmzxmbyq7qr4eys95bpcygbkyxelvt74ilb8dw3almezckggea90yjew8ir1jing5d9e2qlozxexjsumhn1c5i6lwj52bze5n17mheqsd59elb448j7g04x6hf3cc00ktenwhnm7frj22ka6ci\" ]\n    } ],\n    \"service\" : \"yvh55gllevvn2upwgsoka1ho7hclkebixa4s7youwsr97f4yx8x45bfxh8q41k0965dgnlnx7nvety80lzbuwv5beraj86q2eg1ifkbboybd2430jr2x1f1pzd\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"1ycjpucxltif6x7cijjb5npsqbp75ty5ril3am\", \"eip9dl55gsa18a123o72rbxlyb0k9qn8vpmh2w1bpiqvgv8nad11gejmg0q2lwmw5\", \"jr5zefkjs7d608siqukvx7vzjymck8fq4ox8zv51gfbgt9r9ff6f6fc6ly82oc96ett8lvk2cy2i9u8biw57fn2t9u24l3sbj7xp6ph9qu2\", \"yfwv1q47tac0phd6mrkany0xh55jbz54loyzr5brluwna1wdhdenip9qa75s96nmx0tgwl6mo99ra02c44jmlvlljk1m59ej7jtbqqvd9gpuddqkm4i1fp8ppidvpdo7axtquluvwuqnsws\", \"zv1at472l3qibyrty9l3mpm15dpt7149vjkwrz3ln82xf6hxofhkpcg7zt0jupaprtt188wgm0p7zc9pjdsyd0e7syo33zsj7odh7w26iardu6e60fhdpghlc390tpxfa2ms91p4fwk4ku1gv\", \"74ja3c5\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"u05vwtqljj8jrxbi94ni6uuehevu9cqcdfixno31oqhxafmhte\", \"apaap4kzutz0be9dzbcflosubrd170nn3rp011phendlnbv16pj6v87i32gt2bf0x5sxfkyodd9pqdeq89cy9gkeyd67pbzs48g8mqplq97qjqkm5gn2ap90104n9ibgk7gfmvcql7muenrst9p7bz0i4t5k63j1xjc3wss1put14gvds01xjr23\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"lwl9u2ao3\", \"rpt6hvdhclibvt6xy9\", \"ajv\", \"e9123jamutjdc\" ]\n    } ],\n    \"service\" : \"igfrb8f5550sedjmih4mcwwbjy2xnnyhr84jf5ozvoi57q127z5xi85qqqt226t8pd6p45qjrhyvme25pf9p3hi94kvjth0thyuauraz0z4biqk9ma05h\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"w6s47w2rv8cnkv9ncds3j2u253z38v5o43u2uwzwp0rugqzvwkymii0uy4rlqd3nbfpg9lbgy8y4qls51rlpu16\", \"7gim09rjctswl0e809wt1bv7ihzlw8y7jx3ta6lvbxyaxcebzljk4u4ru91vs2v6aqca0v6gyu56atqsfrjea32ag1zmsvmy729\", \"qhl064sh9mtg096jbqh3zs6cqxwcn1aof5u35tub7x7btf3bbhi4zn2rxb8d5xjdzvku8qc9gj6v48pn0o6qviuo2fogqqadxorchl4m1d8mha6p9nddliwk88fenhbxi32uins0maavo7c7a7ujyv7t4aj6s26vt8acd8riuzv8\", \"qoo66qz6q19uqtqbtam4vui3oen0lz88sqz0q6xwe2r3un2p2v7xhcsc6wrmgqsg7zb4rzg657zjk0ksxdjkv5ijx87gg2hjs3o8rqhzlf5dynl3ccivxirw5jvn4yfcu6y61q3wxk8lbl8nj0rsbfrixzz22a8cucs58rm971l7vgdc518p9muqy1zcpf6ykwr9yy\", \"d1kejauw432muu6i9lo35stenrmeihnimm7jqshof1g29tas4onc3illhrg2sucn7m3i58lsoso7hmt95wlvo8g42l3knju5lsd994kev6zs6d4lk5vr44f6n4rk55aj3kgjqmdtezcommp7ajprbc3vi5rmrv2a1s1nflsybco8z5\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"heyt32dgm3vs6s1jhk5ydrz01sbxge73kw14j\", \"hofchzuvegupru17tsmssnjzzrjbi4f7rcwsqspvaku19ogkgdxdwtozd3qj8ncvsi10qdstjhoxc4g1cr5cprfrgtrh92ccosynpd4hbeee77y4dmsszhhv2l8mrd\", \"7cytdsxlg6vvaa29e1qc7hdzlygm9q4jvw8nj27zqkyx3hrfw5psiowj67xscxz5qtuqpfwluliag41mbsu7\", \"v5s2nz6g5sscxf22z6u128jiefqdj1gduj3orcndx0lz7ez3c075iei4pdtgafvivhrvlto59xn89kwwug6cnyb0yn7jzrlt\", \"m5js7wf4lhytatxku41u0xrp69sraniize0pviibyd8i56lny19tcnb8rk21xqbo4wfh31cbdrqbth0dklxqx2h3ze9xmcuy46ekfqu\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"yz20lieo2nqdjzyfwp\", \"5yb\", \"ut39pxz4meheglyp7pbhxz7bd0x5lntm03qyal1n11tvu2a3pi01yrlrkj4nkz1qn6qdpjs0ypi7zwb6m0wp8w1lntxn0ihqfae7ywry1m9jzpudul5qxyt72nmkc28f4hegw5bgx1hftqndh9hkl1qsao6rxhogu5bjs0o4g1iqxjy7rq3uldzo5w1\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"blvzsizmh4p2g1\", \"8uq7gwvkqmjtbsolol9o3vmeox5izof1b4yjiv7xwu9g2b05ye52hzvmymj9rf9nm5mg1azwb0c5frydrk\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"wlkng5l2g2pnizmiynqd8o60452di7mmds9evfknv5pp45jvu86ggk931qgwj7vy6wyhheyp35f159b2xkdhc7codbammwzlnk3wpnz7x7huyc2klerc9iop4s77ay4ps2l4wl3m30ahnqeyc0mlbxtnrdorcgzsp5cwd56\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"pqm6su0sdmhpg0pknczp2d8vt0vrvogf45dk9dl\", \"simeogkxj8ijh4xcyo2obtp9i1e7ib5el9njvmzx7\", \"jr823dmyrigtqid217fklz7rlabvz2zdi5s17\", \"77y3sej8qiiinlmsvki4i8hep8t6ai97n0o1ch205tneq13wy3cob6fbsaiyvg37y2y\" ]\n    } ],\n    \"service\" : \"xbdeo1xyukgut\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"jn21bet2tg63u2yrp8xpoaaelkuqay4muoqp8bv3t50ssfyd9itn447l6tpr263d8pw5efoaxfteqx9n6viqlf5s6idm1d4t5bpkcz0uyku0ar9f1osi84dz1r4cincuazka\", \"cb9ddtv8tcjnm4xgzslighegfxksmjws6knyny4z6y66c0qysvup470l0ih89fe1ur4ziy8uhrnt8n8tov1pzmnj70fnvqdcx47fdx71pzyt2araxj46gtvz0s8haar7d3y36mmbzzvl6xdfjjtapihaxhtp\", \"wh0atppfk64hcnb9a3rynstrpthjb9qnr7bt4u4j17ieca5ebl0ix1db9ee3lus0niqhhgywaqwpxwcoqy7l3l1r54vqdbscmmqw1s6m5bsiwlarrusjmhvsol3t2oe9ev2kcdapom1j\", \"b6klbknx0btgeev7jb6an5wjkjikfr44s4hjkatrxt90k4eduj\", \"jpq0tyy1lt110381cd8yh8vo1zwt0grcxdpfig8s8xofrslnizo02phc1rf6qbc64zfs8xhl7t4lxgej16q13zkchbw8h5rei0dbp0j9v4k8mwf7nata8yshem5jdtqbz0scrjov4vx7forfamnb1xg1f6wyfnfidyaeolscxdkgac2xmjr0nqwmq0\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"n3jc00btymzez2x5a41iw1s9oxenv3jaiem1ydioynamxus1rfbb27t3m0keduxkl1nigpejf5gs4xyhdvkuqyaeyi2gfb7s4wd078gsg1kjtt2xa6krk9yzmolxn\", \"vjr\", \"6a1fbwm95c5boon5ywi0l3a7qh7b7dpihqu3d3553raea3zenvn9xha\", \"wwxlehbn2moazkt6xz5q4jzq3x2cvillkmiwahg8qkwc0ksx1o73h8mwmlpa1s34fg6xh5llxnl84zktw8vojfj0zt9h5hridnanjwntsg3ycfq5cvcwae2q8w5b6d25ozyhwps9u35moaglp1bm5nrofsvaa6cwef1xbiyjb0vo0i\", \"buo29l58ib2olgbemq0fh2qa4xyoq9ouru2\", \"8z4cvz3rvuq4mj3ktx2o21qltpwjyc8z89urh33od2opj14uspiojvu7jdtv7ha97v815ity7j9c9vf6075ost0x2svfeosjhxlhc0msx1hqqgef0qspyr1x3eignk8pp38nuslrixr8kk43sbfpldqsy31b6uiej54v0euqz8gpqgm3u3m2io01indvblckgjyhwfi\", \"jnejefrzk4yccsml1i3taghujsyvdd0yrgdb7zry9b146e70lgevvxpeqkfy6sz2gcpp3qo3fhhi0rmhxq89bvr5u9hoqsyrq674u4sxgm4yusdy3syi4puw9nfzwmr0\", \"6beh9uue1997v0ozf4xji5e637gs7rwgrmlwvdj6wnr7ec9gh07261bp\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"zdemj1iwwmbu6i0rggpzuohre651damnz76z8bcu1ff4bxalz6tsbq785nk36uqzy69hqj8iuuefrz2pqn3wk1p8pxhcuz3ov2\", \"q26n4a19ha6fxiwm5rz9njg0592vpazs198x6clj77o04ujgi7eku6fc17q\", \"npsnq24a77n2cbcf5jclrvedll0e61q7d9a95k51goq6a2xdmiuqlnns85kaimj9z04u\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"bhtfr9xauk2xrpwbtik5y0jojp40yl8b3mpttrxh57y\", \"qd57p\", \"acsxzaamidferv692352n107hzrvt1ul65ebhwcx30nw06v8hf9yrsnblg02vsxbcijqjd1jow71xxtzoy917g84r9kobcn0x3o27d7k4a3b6ckmscvzoyraelq397gf0hkiyp8hbtsn\", \"wv4r0qabnmlm36j8whyyfzul5w4pirz9tw6hecquruu14yx6etd470m607d2zjn6ggugs1kzedbgaitfou06x215wor8sxcxe7krjtifs5\", \"amh4w5089psflhrot52fu9ulki7j3l6of180k0n4gdv0q5fytt0g14n7vaeni572ert3jt5pzbytu1bd9ysl5gvgjltskmuz1lfs54ya59j82kx1uutv6k8v44lrkgd05rnruegcjo\", \"82wj3uz5vihblm19n1yie5iwuz41scooi1codcgcs6ofp5ijwtbh8ban2xs6l2g7zzvezb8nwkemj3act64bf8vfvlt7ocys7ww18jrtwqbd\", \"4bml236ekpmwj2aza70m9my3nqpc3y89wvumtp121bg2e3kvq5vyv1d2r406cwkm551rrjqiwe2o2ck1c435aq4wigqio9peuhjghw4rl40kjtr9lkgauwnhq52uig32w5peqswonuy1kjoaipbghjx019ghji1hcblzu\" ]\n    } ],\n    \"service\" : \"gei4t5n2svx312b88vpvigtujh38f14cztievf3e25vwehneloo95z9v5qzmgs7qrdphb78ghklr3hxy07kv080fi1ccfrml7lzmaja064a5lz2ljxo04cvsvf\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"vu6lmu30rwnsq6xj5ag9sd7lnob2pnyc8aozzf769s3963rdtv4ccfv6w3rm47pz098gny5q2pvdavg4u6\", \"w6xmak8zlfmanw35taked6yr9swr82dyqbl4ohpurteq1w5j6oi6cvhgqt2jbtlbz203goipblmlvf0xaolxjy9e3hugc2kr19\", \"qb116f0et24j9e1ceiqnnj7gw1nnnzzj8fj7mp213r4cn9kg6208sb7evytjg4ubbp8s5s7grh1ox2nkdmvabzai64q057xk3sy0ol2daqmklqowbpow0miq5t5j4luks4fmozrevtw351h4t0qnq5xg5rvc6pwdviwz70v1urv6iz1wuuujj01yxpbq8\", \"k2by7iyaqq79r43vj1iwkq4mydvinqmrxzwu6i1zkpah3853a07oa7h87tiomufyoq26s6lzkj3ayp5v2n3hpzezcapwu5cb1l5i01gpr7e45rtm6cifos3dyzpgwfftobepb\", \"sbhta4cq4ol326izah44k8ax3uujogj7863jirb0fh2p2pv5wne39jq39kgxhud3ijy837hgkmd7w2fdx2bcw9i6mcl85sc0v4uo9flenq2wwqu8gdglxyzjqyk\", \"zxkde6ga3rrhzewem0bi35k729r2v20izqn8dz8tzpi2417c0i29n286y4zvrldxw21t7otq5rp99tzpgzxpw5rp\", \"1wb90mfnsmz5nlkg3w9qfzrlehr9h2hs108vrltryiylbl8e255uka4zlgexmijptwibkia8z42stepnz57jhpfiq2ttamb87xd9e7c1sglbh2ms\", \"ioma6nvtpfee523jgsq7du7ib2l2mtwyvwt1792sk2bu1079gyl91w45bz1ez7owcotg7kqsypzjwn9pq8f6l4fbxue1d0s307ng0muttlpdi3oit922dq48u77c84v\" ]\n    } ],\n    \"service\" : \"sn9we04emg2ngfwii2lpf6qumc0xk4azr2j4t41186win72inp7i99iy7lygiyb7eq13ansocurt9g6ouvys68omol30h20bj2rlhsjhjbnbuos8hucqbp9s5gnm1csociil9sz7ructd0k6mgtxg6tii3qtdf8l3n1kz83hd6qfb0xev53lk8zbj9xi554emc4ey\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"85q2x1te7wb0zpdypdfvrbu5w5oqvze4\", \"zm1xrbju50aing6av1nb9aw7hfq2inv\", \"egh0ytfnkj9339de1jbv6kijg1u08v72\", \"j8diw9md9\", \"xzuf36z7aeeoskhue299u0j7bz49poev9jljtwzi4c9yl9eg\", \"ep6rkposv\", \"wis97i0jv4ai42aweclsyv94c1zwqli7pw3jp7ksmxqzau8c36tze3682tqes4\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"ljdiec0761e3hhq6bdxlvl1ms5k8vyrcm3yih02mkxzil5s4cp1up8b2d\", \"3h8laohokrb1zoizju5xcrorm5dvcw93qqw3k5n04ftwvoyqtgg78kg7syxyphse0i9ej251ta1haqnk5fgn8iazktv93kzqyukx0ng4a21ekss3m8jmkmipbq1f\" ]\n    } ],\n    \"service\" : \"6i7azho4aa9sjh4t0l1x91883rgb97kos9dl48nbcz963iz65k396150lzos1322qug2euztkjf2lexh65kk2xdxtpxgrk1meiwgv403z3mcng6kfukl3jo554th1x8dsa57tsi1h3w13k4gvgrqoun2lqh6\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b08634db-428f-4445-8251-668f57b3f707",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:26.27215Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.clientGateways.getIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "auditConfigs" : {
                "description" : "Specifies cloud audit logging configuration for this policy.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleIamV1AuditConfig"
                },
                "type" : "array"
              },
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleIamV1Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "33f9a1c3-9aaf-4460-8ef4-05cb1bf7c7e9",
    "name" : "Creates a new ClientGateway in a given project and location.",
    "request" : {
      "urlPath" : "/v1/2t34d4mhapcu6cifg66ugzjldz5thz3c4a2l9zfg92y66juexu921a0hz1z7j6bs5u6p1fdckvtnvdncfjx4gxnuc94jnxrd0159bejyzkdk062h9a/clientGateways",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Rosario Gibson\",\n  \"error\" : {\n    \"code\" : 1004263852,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Ipsam eos provident. Et delectus facere quae debitis est consectetur. Aliquid cum placeat et non quo officia facilis. Consequuntur quia atque aperiam. Amet dolorem et cum eligendi.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "33f9a1c3-9aaf-4460-8ef4-05cb1bf7c7e9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:26.270391Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.clientGateways.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1d34cb75-5ec7-4373-b556-dd7be20170fe",
    "name" : "Lists ClientGateways in a given project and location.",
    "request" : {
      "urlPath" : "/v1/3cfc456p2ck3hfotrqe6liv8d1c36smco57wu4etuudl62omasj6bnk2ovvi40bqe6dg1yd3cx2v7oj284kv0huinvft3dmyl6i9yhokosqiulry6a1jy4uemncmzgjbi7a1wjp4nd9qzi39vi0ojiay1d728vux86k9x7pegmpr0tuwv7a0c0v2xxfd9w7xzes0/clientGateways",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"unreachable\" : [ \"m586ue2920vh90anmruvhjtbl6spo3u2c49rp0g68jr5hgtzdz48co4sachnpc3gy780h916s2ia57ov4d6uftoh7pw44mm3uduhobp935pgjmw7ll8upqpq5g4w3drgjoe\", \"7ai8iv5kha0nyqyngd4bge1ehknwlsaihcrl0eid1f8cqt0x5p9kirlprw1l9iyqe6kip6miuf5unqu1c4jracymotzyqozigmto8lx5s9clebk2iuptx98zgh012b2yerzid4voz5oealye1n41ykz2c5cs2ywepqm1\", \"hrccnqstklfgoig7hx5rcmiz3yh5t6dc9aro9tmynmqxisyygwwvrn2ynrahjrtrkna4qy31xmautpq1qb8nl9tbbx9rc9n03086gwugpr2291ak8s1gwasl4kwes7264326a17qb7r\", \"dxtio38iqv3760cgc70g137xu2mwdjscsjh56qd8xukdm2j4gtm43dhihx6yj3tpy624i4ko38j3f91joubqitz7mv67eda3anxigvd7kpxv24q9g4wet34o8eaanv42bm90dpkz7r5vld6e\", \"umd2bwdcmhl95j8kmgd6illong5u1nmyxe6c8xosgg1tek7pl2d7r3wstffsubh5wndu70o5zczh14g3vrappl2ojh1vg9sk1d3d0f93tyy5ygnkciv0xgaqhbacqh\", \"ti8ygytj11qzgg3a3hd58wqev76qlmtnnwceye2vghps9gl450ltdfw2ggfq7xy6l9l2bd6wo5dapw45n887u0stnw1bqvbma10ft1nqwu91wds0k1wnb32bxen\" ],\n  \"clientGateways\" : [ {\n    \"clientConnectorService\" : \"da4k1hg6za729olwu71qu97c0u9sxaf72db1dukyxpo5a4tytpxwmywh52v7644voy0l9474sbngydoyiz838fyqwjw0g2q5yyrhvw0opdws3tu16qv0xfjxr\",\n    \"createTime\" : \"2022-11-24T18:35:26.269736Z\",\n    \"name\" : \"Aleen Johns\",\n    \"updateTime\" : \"2022-06-25T17:26:26.269806Z\",\n    \"id\" : \"t2co\",\n    \"state\" : \"UPDATING\"\n  }, {\n    \"clientConnectorService\" : \"pm74x0jcwn56pnlteupc561pe\",\n    \"createTime\" : \"2023-01-14T15:01:26.269927Z\",\n    \"name\" : \"Domingo Thompson\",\n    \"updateTime\" : \"2022-09-14T18:20:26.270002Z\",\n    \"id\" : \"02g3\",\n    \"state\" : \"UPDATING\"\n  } ],\n  \"nextPageToken\" : \"fkoz8t22e00ldibybd4wwb0078sc5ylot131zd8et\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1d34cb75-5ec7-4373-b556-dd7be20170fe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:26.270189Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.clientGateways.list",
          "schema" : {
            "description" : "Message for response to listing ClientGateways.",
            "properties" : {
              "clientGateways" : {
                "description" : "The list of ClientGateway.",
                "items" : {
                  "$ref" : "#/components/schemas/ClientGateway"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token identifying a page of results the server should return.",
                "type" : "string"
              },
              "unreachable" : {
                "description" : "Locations that could not be reached.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9a581ef7-2e6e-4730-ab25-b7ef1775d956",
    "name" : "Creates a new ClientConnectorService in a given project and location.",
    "request" : {
      "urlPath" : "/v1/ilhpx0p8ztf6xji6k94dc1383n0i8cgbb0zwsof51m3twu5mm96cuxks6lid0dcz8568im4so5kun9kubluuwfmsz4jd2ry8xmwia7bes99v4oatlqntytg061qrw7dylwma0s5i8o4et33v1ojjhlus9zw0smuph150wc58miznxtc82yxpk5x9/clientConnectorServices",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Chas Dooley\",\n  \"error\" : {\n    \"code\" : 1929269276,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Facere soluta id voluptatibus eum. Consectetur sit aspernatur. Soluta consequuntur temporibus saepe quia accusamus. Velit dolore repellendus architecto et aut. Accusamus aliquid debitis quis magnam.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9a581ef7-2e6e-4730-ab25-b7ef1775d956",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:26.269618Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.clientConnectorServices.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b5437468-5a52-47ac-a605-a5e887918125",
    "name" : "Lists ClientConnectorServices in a given project and location.",
    "request" : {
      "urlPath" : "/v1/yvtjhqiojnmg7t3qaxx7p35wwqu2or5ssslep4pkzjy3c8u2rzji5l8a67lh7jzi5rdee4xabqmoamqc50980kbk5lr9fw4clrz34un9r4jnzyi0shltzqg1ej3fae6v0d9l0t2mus3fymraj554gguq9a1y9pwe5dxfcfa/clientConnectorServices",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"unreachable\" : [ \"bk55hxg70iqt3m1vfjvyv5r11ppfxrfwj2ole79hgl8iedopst8mimooafttv8a5z1bqkx395oy\", \"xdlaq3z3x0zwd3ia9ccup9qnpc3wen7buqa7uia37g5vfoxc\", \"xh8ver9zw61ok0shne42ysiht2hzj07om9ku\" ],\n  \"nextPageToken\" : \"wexhmd0amotf2dj1texzv6w96s8aailb39uzfp9w7xnc6q3i566bvn9yd4us30\",\n  \"clientConnectorServices\" : [ {\n    \"ingress\" : {\n      \"config\" : {\n        \"destinationRoutes\" : [ { }, { }, { }, { } ],\n        \"transportProtocol\" : \"TCP\"\n      }\n    },\n    \"createTime\" : \"2022-05-08T18:27:26.268728Z\",\n    \"displayName\" : \"Sherri Leannon\",\n    \"name\" : \"Dr. Antwan Stark\",\n    \"updateTime\" : \"2022-04-17T16:57:26.268854Z\",\n    \"state\" : \"DOWN\",\n    \"egress\" : {\n      \"peeredVpc\" : {\n        \"networkVpc\" : \"k9de1\"\n      }\n    }\n  }, {\n    \"ingress\" : {\n      \"config\" : {\n        \"destinationRoutes\" : [ { }, { }, { }, { }, { }, { } ],\n        \"transportProtocol\" : \"TCP\"\n      }\n    },\n    \"createTime\" : \"2022-04-17T15:49:26.268951Z\",\n    \"displayName\" : \"Nolan Kuhlman\",\n    \"name\" : \"Courtney Bergnaum\",\n    \"updateTime\" : \"2022-04-07T16:27:26.269062Z\",\n    \"state\" : \"DELETING\",\n    \"egress\" : {\n      \"peeredVpc\" : {\n        \"networkVpc\" : \"6m3mrfoeoc0qj9coijme23vpj9swulu48q3mzbh32syg4j2mmjyh8yd5e1c6cyvprvbgf\"\n      }\n    }\n  }, {\n    \"ingress\" : {\n      \"config\" : {\n        \"destinationRoutes\" : [ { }, { }, { }, { }, { } ],\n        \"transportProtocol\" : \"TRANSPORT_PROTOCOL_UNSPECIFIED\"\n      }\n    },\n    \"createTime\" : \"2022-08-01T16:43:26.269141Z\",\n    \"displayName\" : \"Britney Strosin\",\n    \"name\" : \"Dr. Ngoc Schultz\",\n    \"updateTime\" : \"2022-07-22T18:00:26.26925Z\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"egress\" : {\n      \"peeredVpc\" : {\n        \"networkVpc\" : \"ssjge83t0eyua0ukmdtnr5u6mfdr6smz265tdp6yej1oaih4w973r44x7anhum6th6gl0n14y5dsmwnag5bxs2zn7h0j38fj8m2eo7envtfk2jdxir9tqcws2owceybhzwqnwkeehkv\"\n      }\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b5437468-5a52-47ac-a605-a5e887918125",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:26.269397Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.clientConnectorServices.list",
          "schema" : {
            "description" : "Message for response to listing ClientConnectorServices.",
            "properties" : {
              "clientConnectorServices" : {
                "description" : "The list of ClientConnectorService.",
                "items" : {
                  "$ref" : "#/components/schemas/ClientConnectorService"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token identifying a page of results the server should return.",
                "type" : "string"
              },
              "unreachable" : {
                "description" : "Locations that could not be reached.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "55c3049f-cc8d-498b-9e6e-8688e3852272",
    "name" : "Creates a new AppGateway in a given project and location.",
    "request" : {
      "urlPath" : "/v1/8832lkumemcfcx0b4vj5q57904xrufo6op14jywo2ed7vi8n5w6ihhksqi787575jy6pse0v5j4iuyqyb6djp61okvl3y4v8ln0fkhrm0dihepsmm6v4ykmsgjkmnkgq9jggzmkvarba/appGateways",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Andrea Schultz I\",\n  \"error\" : {\n    \"code\" : 2103475330,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Deleniti eveniet a culpa. Aut consequatur voluptatum enim quasi. Aperiam quae illo.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "55c3049f-cc8d-498b-9e6e-8688e3852272",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:26.268592Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.appGateways.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f83fe8e6-c7a3-4ea3-a527-41f318877ed0",
    "name" : "Lists AppGateways in a given project and location.",
    "request" : {
      "urlPath" : "/v1/ftv5mdvpnblzg2389ziudusknqoyue25377s1zl2s47g7m5s333f99c0fqiydn04fbt9z4kftcdhux88ubwims3yj24khh6ivg5yw24vrye6koxgw3xd7r15tch9294yv8g533syiwyb26wprn2utixyuee3h/appGateways",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"appGateways\" : [ {\n    \"uid\" : \"5km1\",\n    \"allocatedConnections\" : [ {\n      \"ingressPort\" : 387944368,\n      \"pscUri\" : \"https://web.example.mocklab.io/623550\"\n    }, {\n      \"ingressPort\" : 943416520,\n      \"pscUri\" : \"https://web.example.mocklab.io/769412\"\n    }, {\n      \"ingressPort\" : 382041871,\n      \"pscUri\" : \"https://web.example.mocklab.io/891791\"\n    } ],\n    \"createTime\" : \"2022-09-01T15:59:26.263788Z\",\n    \"displayName\" : \"Maurine Schaefer\",\n    \"hostType\" : \"HOST_TYPE_UNSPECIFIED\",\n    \"name\" : \"Warner Cronin\",\n    \"updateTime\" : \"2022-05-27T17:25:26.263927Z\",\n    \"state\" : \"DELETING\",\n    \"type\" : \"TCP_PROXY\",\n    \"uri\" : \"https://web.example.mocklab.io/826661\",\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"yq92\",\n    \"allocatedConnections\" : [ {\n      \"ingressPort\" : 660420401,\n      \"pscUri\" : \"https://web.example.mocklab.io/021196\"\n    }, {\n      \"ingressPort\" : 15876608,\n      \"pscUri\" : \"https://web.example.mocklab.io/153437\"\n    } ],\n    \"createTime\" : \"2022-07-01T17:58:26.264273Z\",\n    \"displayName\" : \"Jefferson Predovic\",\n    \"hostType\" : \"GCP_REGIONAL_MIG\",\n    \"name\" : \"Nery Emmerich\",\n    \"updateTime\" : \"2022-08-19T18:29:26.264396Z\",\n    \"state\" : \"CREATED\",\n    \"type\" : \"TYPE_UNSPECIFIED\",\n    \"uri\" : \"https://web.example.mocklab.io/042988\",\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"n228\",\n    \"allocatedConnections\" : [ {\n      \"ingressPort\" : 1257966553,\n      \"pscUri\" : \"https://web.example.mocklab.io/055485\"\n    }, {\n      \"ingressPort\" : 500655520,\n      \"pscUri\" : \"https://web.example.mocklab.io/032586\"\n    }, {\n      \"ingressPort\" : 1782089992,\n      \"pscUri\" : \"https://web.example.mocklab.io/871345\"\n    }, {\n      \"ingressPort\" : 1218423639,\n      \"pscUri\" : \"https://web.example.mocklab.io/331218\"\n    }, {\n      \"ingressPort\" : 1820215749,\n      \"pscUri\" : \"https://web.example.mocklab.io/824863\"\n    }, {\n      \"ingressPort\" : 420903444,\n      \"pscUri\" : \"https://web.example.mocklab.io/325084\"\n    }, {\n      \"ingressPort\" : 2048796343,\n      \"pscUri\" : \"https://web.example.mocklab.io/499718\"\n    } ],\n    \"createTime\" : \"2022-08-12T15:07:26.265031Z\",\n    \"displayName\" : \"Adolfo Smith\",\n    \"hostType\" : \"HOST_TYPE_UNSPECIFIED\",\n    \"name\" : \"Chelsea Schoen\",\n    \"updateTime\" : \"2023-01-17T15:24:26.265153Z\",\n    \"state\" : \"DOWN\",\n    \"type\" : \"TCP_PROXY\",\n    \"uri\" : \"https://web.example.mocklab.io/160386\",\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"856v\",\n    \"allocatedConnections\" : [ {\n      \"ingressPort\" : 961889527,\n      \"pscUri\" : \"https://web.example.mocklab.io/696096\"\n    }, {\n      \"ingressPort\" : 1285664117,\n      \"pscUri\" : \"https://web.example.mocklab.io/032975\"\n    }, {\n      \"ingressPort\" : 574261356,\n      \"pscUri\" : \"https://web.example.mocklab.io/091068\"\n    }, {\n      \"ingressPort\" : 2026338942,\n      \"pscUri\" : \"https://web.example.mocklab.io/794699\"\n    }, {\n      \"ingressPort\" : 1681582333,\n      \"pscUri\" : \"https://web.example.mocklab.io/505115\"\n    }, {\n      \"ingressPort\" : 1007165400,\n      \"pscUri\" : \"https://web.example.mocklab.io/159957\"\n    } ],\n    \"createTime\" : \"2023-02-10T16:44:26.265726Z\",\n    \"displayName\" : \"Olin Gottlieb DVM\",\n    \"hostType\" : \"GCP_REGIONAL_MIG\",\n    \"name\" : \"Dr. Miriam Barrows\",\n    \"updateTime\" : \"2022-06-14T16:38:26.265851Z\",\n    \"state\" : \"CREATING\",\n    \"type\" : \"TCP_PROXY\",\n    \"uri\" : \"https://web.example.mocklab.io/547202\",\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"i7id\",\n    \"allocatedConnections\" : [ {\n      \"ingressPort\" : 34696497,\n      \"pscUri\" : \"https://web.example.mocklab.io/962071\"\n    }, {\n      \"ingressPort\" : 626727551,\n      \"pscUri\" : \"https://web.example.mocklab.io/875413\"\n    }, {\n      \"ingressPort\" : 1566034409,\n      \"pscUri\" : \"https://web.example.mocklab.io/563884\"\n    }, {\n      \"ingressPort\" : 1262992740,\n      \"pscUri\" : \"https://web.example.mocklab.io/810795\"\n    }, {\n      \"ingressPort\" : 1180994485,\n      \"pscUri\" : \"https://web.example.mocklab.io/381320\"\n    }, {\n      \"ingressPort\" : 1878187196,\n      \"pscUri\" : \"https://web.example.mocklab.io/530868\"\n    }, {\n      \"ingressPort\" : 1846016687,\n      \"pscUri\" : \"https://web.example.mocklab.io/092174\"\n    }, {\n      \"ingressPort\" : 1626597920,\n      \"pscUri\" : \"https://web.example.mocklab.io/007309\"\n    } ],\n    \"createTime\" : \"2022-10-17T17:34:26.266543Z\",\n    \"displayName\" : \"Sonny Streich\",\n    \"hostType\" : \"GCP_REGIONAL_MIG\",\n    \"name\" : \"Isobel Borer I\",\n    \"updateTime\" : \"2022-11-28T18:17:26.266674Z\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"type\" : \"TYPE_UNSPECIFIED\",\n    \"uri\" : \"https://web.example.mocklab.io/624197\",\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"28o8\",\n    \"allocatedConnections\" : [ {\n      \"ingressPort\" : 121660564,\n      \"pscUri\" : \"https://web.example.mocklab.io/725410\"\n    }, {\n      \"ingressPort\" : 735454746,\n      \"pscUri\" : \"https://web.example.mocklab.io/975153\"\n    }, {\n      \"ingressPort\" : 585114659,\n      \"pscUri\" : \"https://web.example.mocklab.io/378134\"\n    } ],\n    \"createTime\" : \"2022-06-22T15:29:26.267059Z\",\n    \"displayName\" : \"Woodrow Greenfelder\",\n    \"hostType\" : \"HOST_TYPE_UNSPECIFIED\",\n    \"name\" : \"Jae Bosco Jr.\",\n    \"updateTime\" : \"2023-01-12T15:08:26.267179Z\",\n    \"state\" : \"DELETING\",\n    \"type\" : \"TCP_PROXY\",\n    \"uri\" : \"https://web.example.mocklab.io/523706\",\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"dh5i\",\n    \"allocatedConnections\" : [ {\n      \"ingressPort\" : 1222590674,\n      \"pscUri\" : \"https://web.example.mocklab.io/011201\"\n    }, {\n      \"ingressPort\" : 1271416639,\n      \"pscUri\" : \"https://web.example.mocklab.io/436156\"\n    } ],\n    \"createTime\" : \"2022-06-05T18:08:26.26752Z\",\n    \"displayName\" : \"Mr. Sung Tromp\",\n    \"hostType\" : \"HOST_TYPE_UNSPECIFIED\",\n    \"name\" : \"Enda Little\",\n    \"updateTime\" : \"2023-02-08T15:37:26.267643Z\",\n    \"state\" : \"DELETING\",\n    \"type\" : \"TCP_PROXY\",\n    \"uri\" : \"https://web.example.mocklab.io/457068\",\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"3xr0\",\n    \"allocatedConnections\" : [ {\n      \"ingressPort\" : 188833600,\n      \"pscUri\" : \"https://web.example.mocklab.io/710024\"\n    } ],\n    \"createTime\" : \"2022-05-20T18:18:26.267879Z\",\n    \"displayName\" : \"Shirley Ebert\",\n    \"hostType\" : \"GCP_REGIONAL_MIG\",\n    \"name\" : \"Joyce Heathcote Jr.\",\n    \"updateTime\" : \"2022-12-26T17:28:26.267997Z\",\n    \"state\" : \"UPDATING\",\n    \"type\" : \"TCP_PROXY\",\n    \"uri\" : \"https://web.example.mocklab.io/890361\",\n    \"labels\" : { }\n  } ],\n  \"unreachable\" : [ \"cp1ut58zkdtwrve2ubuowmkyqa00m5alp3ir7h9wxsf69zm4ero9n1qydxjcdiso59p1bk5wsk0h2qrd5sikpot7xzocdcg1dif2xs5adxh2qpzm838wsrxb93yii3ynjfzfhffyhaij5akme7\", \"h8odgp9gm7ldxdb9jisunzm7usuledvlaj2jbftu74cnao09l0pezp\", \"ehngtg8nd2amsmt18h8tzkr2q6p5yffgdhkacmwm0zsjjsn9x1bsbq0saqq1yjvdzimnm8eburo4t21t1tyx4t193q314x3gjw6ormb2qdva3dx453bzpb1v9j4ifqs7143hikgvedwx0pkaedw7\", \"ppzqspxm\", \"k7rauwcbb1ytrhb14hvqhu6734j1f9qbky33jcsvq61t4ms46r3lizz68329to1tlbd7uuek7iribtttyd373z7loqzzbg8ny\", \"wonbsjfiics2tgkoclxmj2lbm4e0y50sbszxcuk430tmsb9yt5fokttjdjdvcuc8bqn8xqt1dbb42zv3hu6wxzgfkrbkeyobf273mq3xd1lri0avru72lzqwynjpg1gz8k32t3psvp0nnr78vbaj8xxp416tj5fshkmt\", \"fzls99cqklmzw2gtbjhonamrbawkogypzienhxrgs8ae0xxedisfwmzid6dv10ovy05m5vz25c4tif8\" ],\n  \"nextPageToken\" : \"gp98lvkhbetnlbldvlf88smzby40qoq7qgtpyd3zaej5p8ziqnbu8trglkqht6jhd7i1uifror23jl3ipsi5o3jbjensk73s06r439sbo63ocewk7nys7ym6t2wlgt7i1ewp949ppal9buk4zhh096b37vgn013pzmyh1ewgp70md7hyvx7507jw6i03cr681rcv\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f83fe8e6-c7a3-4ea3-a527-41f318877ed0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:26.268331Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.appGateways.list",
          "schema" : {
            "description" : "Response message for BeyondCorp.ListAppGateways.",
            "properties" : {
              "appGateways" : {
                "description" : "A list of BeyondCorp AppGateways in the project.",
                "items" : {
                  "$ref" : "#/components/schemas/AppGateway"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              },
              "unreachable" : {
                "description" : "A list of locations that could not be reached.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "72ca653d-54c9-4897-94fb-bf1938dad27a",
    "name" : "Creates a new AppConnector in a given project and location.",
    "request" : {
      "urlPath" : "/v1/empfdbbxnokqw7f1tov3hzcolgeq62og72o8vqjyegaqulixq49vl4qz0svgpcfttpu1bqldvoevpyl3laf5gogaflow5b6qjiptfjo5x453h8ncz8wbq/appConnectors",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Dr. Dahlia Nicolas\",\n  \"error\" : {\n    \"code\" : 1647594962,\n    \"details\" : [ { }, { }, { }, { }, { } ],\n    \"message\" : \"Cum consequatur praesentium. Ut sit eligendi ut. Omnis aut vel est.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "72ca653d-54c9-4897-94fb-bf1938dad27a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:26.263428Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.appConnectors.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1797bb24-10db-4d34-afa9-4a411fc03faa",
    "name" : "Lists AppConnectors in a given project and location.",
    "request" : {
      "urlPath" : "/v1/hxhej5qtw5k45qod261ui51kr0s8lymsqj9meq9t07x5h149na04rt2pytyge8uk5bovi193rcmkffh7aewo342gavrzr7nl742gfq3xannswkpvh1946bez0xp6ofgyovzrlh21spwbyw8ak07mp3ugwb905c9ob7zm4ezqfp4ff3l/appConnectors",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"unreachable\" : [ \"gzp3anhkz24fsxl1pwtbn\", \"xplqqy04jv4n1j4g055vj31xl5bfc3240eb6mswru8uce0czqrqta3pu3b29en052wg6dkg7n8ckfoxnaof39rrhnemhekl1w5ahqys5wug8mb8bod0fdkfprpc6jmnz2rfz2ux0igzgilswzluwu5myxqa2pqgntv6wsdf598e1s\", \"sydnycrydv93dgoknsb9vhi7o937vz1tcoykp1x5x2p9647hc4nh3ogdv7rirhpsb9uyb23yldvordm8by66jok1t8wtwp5gyhf5uvizmtf4eef56ue7r7\", \"8h672kfjc6adr3qb7xj9e7nq54j1phgu7wir1yfurstc6m8i4fvoax70sk3qtfb6rlza2abn2z5r8491q\", \"zbvz27u8p52y4avccbzsdz7tbfy1yfmfumykzhzx2poxxqdf28a6gydj1f2l4c01zr689qs9j9ffcm750z4q5t5nivuwxbnyrjfcc9vp7zgretxz6xhzqttx7ddpbcdu194zff1erq7bp9b61\", \"fbok\", \"aou1kxu114u5qyzsj6m05t19ja0uog9lgop8dzrokxe3puaus1w4yskj0yxhyw\" ],\n  \"appConnectors\" : [ {\n    \"uid\" : \"4a38\",\n    \"createTime\" : \"2022-08-19T17:42:26.257109Z\",\n    \"displayName\" : \"Mr. Dewayne Will\",\n    \"name\" : \"Roderick Heaney\",\n    \"updateTime\" : \"2023-01-14T18:38:26.257231Z\",\n    \"state\" : \"UPDATING\",\n    \"principalInfo\" : {\n      \"serviceAccount\" : {\n        \"email\" : \"9shplqcirlvky9k2az5purlju52l14cpc4yvb2beiqxnccvnkpbrgdx2rmpist0v1069moehu037gjergox3a4n546rujvzrvfsjf9git2d4cypn4wcoj3919k91zqfv6i9pyrwl6liqi38qgn0rl75xf1ubcy\"\n      }\n    },\n    \"resourceInfo\" : {\n      \"sub\" : [ {\n        \"sub\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"6699\",\n        \"time\" : \"2022-11-13T18:33:26.257405Z\",\n        \"status\" : \"UNRESPONSIVE\"\n      }, {\n        \"sub\" : [ { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"io13\",\n        \"time\" : \"2022-09-03T15:04:26.257532Z\",\n        \"status\" : \"UNRESPONSIVE\"\n      }, {\n        \"sub\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"go5t\",\n        \"time\" : \"2022-07-12T16:02:26.257653Z\",\n        \"status\" : \"HEALTH_STATUS_UNSPECIFIED\"\n      }, {\n        \"sub\" : [ { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"sfwi\",\n        \"time\" : \"2022-10-03T15:26:26.257823Z\",\n        \"status\" : \"DEGRADED\"\n      } ],\n      \"resource\" : { },\n      \"id\" : \"nb50\",\n      \"time\" : \"2023-02-08T17:46:26.25795Z\",\n      \"status\" : \"HEALTH_STATUS_UNSPECIFIED\"\n    },\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"myrm\",\n    \"createTime\" : \"2022-07-16T16:55:26.258085Z\",\n    \"displayName\" : \"Man Hahn\",\n    \"name\" : \"Dylan Homenick\",\n    \"updateTime\" : \"2022-08-28T18:24:26.258342Z\",\n    \"state\" : \"CREATING\",\n    \"principalInfo\" : {\n      \"serviceAccount\" : {\n        \"email\" : \"a5xsti5jgq4a7vspu9h2bki8mwa5a85xii8sq5tnxo7olyr75o1lmjm6oxm7dzt7uj3jd96ayntmpnn5yhsg5d4etluq4z1qkm3wti2jzdhvn3n23ub3j78hswrennfulxprmti64cf3o4czxl1z9clqsosb3n8d1l0vht28hdn60c63wvteas8zzjchr0j0kesaumxp\"\n      }\n    },\n    \"resourceInfo\" : {\n      \"sub\" : [ {\n        \"sub\" : [ { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"5ec0\",\n        \"time\" : \"2022-10-03T15:23:26.258507Z\",\n        \"status\" : \"HEALTH_STATUS_UNSPECIFIED\"\n      }, {\n        \"sub\" : [ { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"81m5\",\n        \"time\" : \"2022-11-22T18:20:26.258636Z\",\n        \"status\" : \"UNHEALTHY\"\n      }, {\n        \"sub\" : [ { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"2cik\",\n        \"time\" : \"2023-02-05T18:31:26.258754Z\",\n        \"status\" : \"HEALTHY\"\n      }, {\n        \"sub\" : [ { } ],\n        \"resource\" : { },\n        \"id\" : \"caf6\",\n        \"time\" : \"2022-10-24T17:16:26.258865Z\",\n        \"status\" : \"HEALTH_STATUS_UNSPECIFIED\"\n      }, {\n        \"sub\" : [ { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"3r10\",\n        \"time\" : \"2022-10-08T15:41:26.258984Z\",\n        \"status\" : \"HEALTHY\"\n      }, {\n        \"sub\" : [ { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"j8k3\",\n        \"time\" : \"2023-01-02T15:42:26.259106Z\",\n        \"status\" : \"UNHEALTHY\"\n      } ],\n      \"resource\" : { },\n      \"id\" : \"0p79\",\n      \"time\" : \"2023-02-08T18:29:26.25922Z\",\n      \"status\" : \"UNHEALTHY\"\n    },\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"8ssc\",\n    \"createTime\" : \"2022-03-15T18:55:26.259346Z\",\n    \"displayName\" : \"Jamie Parker\",\n    \"name\" : \"Gaston Dibbert\",\n    \"updateTime\" : \"2022-10-20T16:30:26.259452Z\",\n    \"state\" : \"UPDATING\",\n    \"principalInfo\" : {\n      \"serviceAccount\" : {\n        \"email\" : \"r39e9n6ayzcjzmxuzqsqk8b00mj9s87hkw49d3963mpyinyo59dzmzottzaq001s8yql2e809fza7fth34cfneko8pmaw5nnmeamcbmbmrozjennmuj2w54bgglucr9yf4qsc2kfi5535wj86gwcnwa9evia410ay7cb4eswz\"\n      }\n    },\n    \"resourceInfo\" : {\n      \"sub\" : [ {\n        \"sub\" : [ { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"1l8w\",\n        \"time\" : \"2022-04-11T17:15:26.259595Z\",\n        \"status\" : \"UNHEALTHY\"\n      }, {\n        \"sub\" : [ { } ],\n        \"resource\" : { },\n        \"id\" : \"375k\",\n        \"time\" : \"2022-11-25T17:55:26.259707Z\",\n        \"status\" : \"UNRESPONSIVE\"\n      }, {\n        \"sub\" : [ { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"7518\",\n        \"time\" : \"2022-06-25T18:06:26.259826Z\",\n        \"status\" : \"UNRESPONSIVE\"\n      }, {\n        \"sub\" : [ { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"3d69\",\n        \"time\" : \"2022-07-12T15:29:26.259993Z\",\n        \"status\" : \"UNRESPONSIVE\"\n      } ],\n      \"resource\" : { },\n      \"id\" : \"8400\",\n      \"time\" : \"2022-03-11T18:07:26.260138Z\",\n      \"status\" : \"HEALTHY\"\n    },\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"009o\",\n    \"createTime\" : \"2022-09-11T14:57:26.260267Z\",\n    \"displayName\" : \"Coralie Dietrich II\",\n    \"name\" : \"Luann Wolff\",\n    \"updateTime\" : \"2023-01-04T16:38:26.260385Z\",\n    \"state\" : \"DOWN\",\n    \"principalInfo\" : {\n      \"serviceAccount\" : {\n        \"email\" : \"mjwr38tpn12yhrhz7miaqh5j8vthju43s7hyl42vs6ivyg681ht4req8r036xoo0eidsio4avnz1rpeiu9eold3dnevqedwkujnvr3090sgs120y1mwy513viay5lg5824x1fpdlntoknjarfbvm6qrx9h2fzprojzus2ip9cy\"\n      }\n    },\n    \"resourceInfo\" : {\n      \"sub\" : [ {\n        \"sub\" : [ { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"tzr7\",\n        \"time\" : \"2022-09-06T17:50:26.260548Z\",\n        \"status\" : \"UNRESPONSIVE\"\n      }, {\n        \"sub\" : [ { }, { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"f161\",\n        \"time\" : \"2022-05-26T18:18:26.260672Z\",\n        \"status\" : \"HEALTHY\"\n      }, {\n        \"sub\" : [ { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"7336\",\n        \"time\" : \"2022-11-04T18:55:26.260794Z\",\n        \"status\" : \"HEALTHY\"\n      } ],\n      \"resource\" : { },\n      \"id\" : \"q783\",\n      \"time\" : \"2022-08-01T14:59:26.260911Z\",\n      \"status\" : \"HEALTH_STATUS_UNSPECIFIED\"\n    },\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"06j1\",\n    \"createTime\" : \"2022-08-30T15:42:26.261028Z\",\n    \"displayName\" : \"Mrs. Goldie Stroman\",\n    \"name\" : \"Elroy Leuschke Jr.\",\n    \"updateTime\" : \"2023-01-28T17:51:26.261145Z\",\n    \"state\" : \"CREATING\",\n    \"principalInfo\" : {\n      \"serviceAccount\" : {\n        \"email\" : \"tfnhnj5mlgiseu7afjbz55bn303yq7ylwh2i0065561uvo0bus4z9a233z4c6n4atyp2glmw3nknjbhxa1ajqdx2kj7dvipngcb02ga8j7k827impylbnnist\"\n      }\n    },\n    \"resourceInfo\" : {\n      \"sub\" : [ {\n        \"sub\" : [ { }, { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"6t2v\",\n        \"time\" : \"2022-06-11T16:23:26.26129Z\",\n        \"status\" : \"UNHEALTHY\"\n      }, {\n        \"sub\" : [ { } ],\n        \"resource\" : { },\n        \"id\" : \"k2bc\",\n        \"time\" : \"2022-03-30T16:38:26.261413Z\",\n        \"status\" : \"HEALTHY\"\n      }, {\n        \"sub\" : [ { } ],\n        \"resource\" : { },\n        \"id\" : \"876i\",\n        \"time\" : \"2022-07-09T17:08:26.26153Z\",\n        \"status\" : \"UNHEALTHY\"\n      }, {\n        \"sub\" : [ { }, { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"h031\",\n        \"time\" : \"2022-06-15T17:15:26.261651Z\",\n        \"status\" : \"UNRESPONSIVE\"\n      }, {\n        \"sub\" : [ { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"gq95\",\n        \"time\" : \"2022-04-25T16:40:26.261767Z\",\n        \"status\" : \"DEGRADED\"\n      }, {\n        \"sub\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"p0ne\",\n        \"time\" : \"2023-02-14T16:57:26.261891Z\",\n        \"status\" : \"DEGRADED\"\n      }, {\n        \"sub\" : [ { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"o929\",\n        \"time\" : \"2022-09-29T17:12:26.262015Z\",\n        \"status\" : \"UNRESPONSIVE\"\n      }, {\n        \"sub\" : [ { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"t2p1\",\n        \"time\" : \"2022-12-02T15:50:26.262137Z\",\n        \"status\" : \"UNHEALTHY\"\n      } ],\n      \"resource\" : { },\n      \"id\" : \"nmk0\",\n      \"time\" : \"2022-06-25T15:58:26.262255Z\",\n      \"status\" : \"UNHEALTHY\"\n    },\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"4rm5\",\n    \"createTime\" : \"2023-02-20T18:36:26.262378Z\",\n    \"displayName\" : \"Nathan Kuhlman III\",\n    \"name\" : \"Andrea Hammes DDS\",\n    \"updateTime\" : \"2023-01-07T16:31:26.262488Z\",\n    \"state\" : \"UPDATING\",\n    \"principalInfo\" : {\n      \"serviceAccount\" : {\n        \"email\" : \"d4fkw34ga6fcoikgqsl7ad9wjmtqvxu8fgay154qdb50dh4h65eif1kdd27cm52offja1nrwvc06y6szfz8waf9ps3c4ysojh3ro2zunorv9y0acn0gkosqkzym6nyla5qu9u6cjbu9ud5f6jlgbuo\"\n      }\n    },\n    \"resourceInfo\" : {\n      \"sub\" : [ {\n        \"sub\" : [ { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"93zp\",\n        \"time\" : \"2022-05-19T15:35:26.262638Z\",\n        \"status\" : \"DEGRADED\"\n      }, {\n        \"sub\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"w51v\",\n        \"time\" : \"2022-03-19T15:56:26.262758Z\",\n        \"status\" : \"HEALTH_STATUS_UNSPECIFIED\"\n      } ],\n      \"resource\" : { },\n      \"id\" : \"epdj\",\n      \"time\" : \"2022-08-03T17:38:26.262866Z\",\n      \"status\" : \"HEALTHY\"\n    },\n    \"labels\" : { }\n  } ],\n  \"nextPageToken\" : \"4rma30jlvevvtbvt22fotvls1z7klyf6q5inafb9qwf9cs6qejzfv1siw9d9yn89ojzekubd7jsnfrp7s2ykm2ptzynglskqfsdkhx2pa7zwu71t9y49jcfxmyl9hklpr445ickrej5udjmfkspr45rbkn\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1797bb24-10db-4d34-afa9-4a411fc03faa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:26.263153Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.appConnectors.list",
          "schema" : {
            "description" : "Response message for BeyondCorp.ListAppConnectors.",
            "properties" : {
              "appConnectors" : {
                "description" : "A list of BeyondCorp AppConnectors in the project.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleCloudBeyondcorpAppconnectorsV1AppConnector"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              },
              "unreachable" : {
                "description" : "A list of locations that could not be reached.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2d23a854-5f2d-4ac0-9b62-85ca98144761",
    "name" : "Resolves AppConnections details for a given AppConnector. An internal method cal...",
    "request" : {
      "urlPath" : "/v1/yhyrp8cjms66r3dewadc8c6ovy7j89n0032kifnje90c0lopajllrslv7tqowrb8vmv/appConnections:resolve",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"unreachable\" : [ \"9v2w793ddhrl6122ydejgykw37n066cskqpb8rwxfox1qdsfb69agnx22ah6\", \"5ew6tzqihykb803wdp8rm8ckeyb1atocwopncg910l5rgjf8fga\", \"lnz8\", \"jic7tr4sdnfykutac8lgoc\", \"fkg\", \"f7kb9hnvg759u7nkt507ywwcjkousiis4ler18zq\" ],\n  \"nextPageToken\" : \"cb59wzdpzt4qxrtte0e1du1x719tzeq9ng32ispa536j92dc6e6zeamvimw6q6obp0wfbr5li84cwnq5bkbjsl3c7hzp7ytp6yqnvnqabqoegr51l0z8wjtlhu4e3e60p8cm31gos0osoyhor18m1ejuxmlihoj4kpq0m9yhl2yvxn\",\n  \"appConnectionDetails\" : [ {\n    \"recentMigVms\" : [ \"daysbuzo9g5nuo71yy1pi7pk1ca5fxhef9xg2n\", \"ltug56u2ow86tjxgr6xdr6wt5r8spem79pxskr296six7c5w6srg8duu5u0gnmjikq4vrdgdxphx90st7tcdpwxdoooiuej0go77w2pxh9ajfywh7l71bi1wqun0j7km43vjcfg7q7495rw2ccpup42pzd9hi1bndf33e6rpsz8pyq\", \"e2yjk3ipo7vnf0bvmmc4anx6gb1rpg22kjh3qqzp3f54c3d67d4n3qz6xs2cov02q0j77enuj3a2wfbvetghsbf1ogj1jt5138tgdpo4jclt3svpe6ji1hpzmytc7elw7vu1\", \"u0luynl26m7teop7fb1pcq7arq6zmz2zs3wg63emqr9hbp\", \"1buxpkggdhq9wnipya5plc03smt7n58gw35585vv9po3s0r8s54zt1uxk0fbwlmcind3qv641hnab7equa0bqdz6h3gqnd7dypwqf2uu1ta9fyzw24vtptzfs58rhu84hjbjkrqjoevdoe10i6wc5ox0deuqt08zngaxo\", \"bpb4b5asn7gmztodekfuqoizf9sdutx7rad025a5f5s1hjz9hud0q7vwjz1o10pv4m7x54cwk8bhbw16beh5xfja2cu20t1wrb3yg27uxozu3itu20lc63a2b4rs2ge4fogw\", \"btlnhub9ek9o5imxl33opxwzlbv1jc424mv7\" ],\n    \"appConnection\" : {\n      \"uid\" : \"5m71\",\n      \"connectors\" : [ \"pmbmgxroi1daycakscb9k2\" ],\n      \"createTime\" : \"2023-01-31T17:33:26.255037Z\",\n      \"applicationEndpoint\" : {\n        \"port\" : 634287622,\n        \"host\" : \"j7f3j569qw6xzsj8q8cf19lodrznyxtow4ssypw0hiaft0qd5769dime\"\n      },\n      \"displayName\" : \"Deloise Harris\",\n      \"name\" : \"Mrs. Wen Goldner\",\n      \"updateTime\" : \"2022-09-01T15:40:26.255184Z\",\n      \"state\" : \"CREATED\",\n      \"type\" : \"TYPE_UNSPECIFIED\",\n      \"gateway\" : {\n        \"ingressPort\" : 1711439702,\n        \"appGateway\" : \"r65j2qq0eu3xnnx2514kmm36v39sllbgte0z61scr0k5hf7yamg2k0549cr3kuzn2ajgrkyb0vszaq2x0uvk9l8jpoaz4v18mzr81\",\n        \"l7psc\" : \"pw5c333av7wyh0qfil05g2sr0rbsi32rsuou097tfoddze9fxiqvgi\",\n        \"type\" : \"TYPE_UNSPECIFIED\",\n        \"uri\" : \"https://web.example.mocklab.io/337969\"\n      },\n      \"labels\" : { }\n    }\n  }, {\n    \"recentMigVms\" : [ \"mntivk8faf0drwm2of5evholg9oaycf6qdhbr394yceaq9pj5oyj1mqht1e2s1btk3fl1y1cxoacn2uagk3weoo7m16huvssia4lf9f5peaavkc1b4z474rvuh6xk1zhtn6qn3sp7a4t5ixegu8vj2uxzqw5ztnxx1bdxevdz0as\", \"spdrivdoubs1ur512ysktija97nodx3ukrtoq3t8b7\", \"84zx6lfusdbw7pk1dancbdvmelzs76yvcbowocqouyhchpczhvoxhnn5fhtngqpz1jwpnezlmuwvyd01zhkjwauku26jrvqzt7079vr7iisl\" ],\n    \"appConnection\" : {\n      \"uid\" : \"6v8w\",\n      \"connectors\" : [ \"sj6r5jle2m7ro8kzykhaof81daxxfa2e7w8hns5s1f07big0noe8mzhh42714ja9j3gg209fl0odm35bv3uteko1v0\" ],\n      \"createTime\" : \"2022-06-14T16:14:26.255468Z\",\n      \"applicationEndpoint\" : {\n        \"port\" : 171802951,\n        \"host\" : \"6046qbla2la\"\n      },\n      \"displayName\" : \"Idella Steuber\",\n      \"name\" : \"Dr. Kristine Ritchie\",\n      \"updateTime\" : \"2022-07-08T15:03:26.255605Z\",\n      \"state\" : \"UPDATING\",\n      \"type\" : \"TCP_PROXY\",\n      \"gateway\" : {\n        \"ingressPort\" : 1722000699,\n        \"appGateway\" : \"oyanlnvfcw4vr12j30bmbnm2pq0a572ka4iueayni4vrfzw7bz6b8w4igs\",\n        \"l7psc\" : \"9msodgewennju1ko2xa1cjeqy0crq8iach9hzhv8ow7gerr171cxk87eec9xdxx2nqmq2jcmwn8ycbnp94kcfza3qwurf57vf9neyxxghxdpw04prrb4ll3x29pce007va8n4v3f03npqvngbmqr2p2k9g7tsrtbz44pee524nqamnm3lh8kj\",\n        \"type\" : \"TYPE_UNSPECIFIED\",\n        \"uri\" : \"https://web.example.mocklab.io/731648\"\n      },\n      \"labels\" : { }\n    }\n  }, {\n    \"recentMigVms\" : [ \"wsn0nzhpms2w5whwfveskorbcc\", \"t1bjoyqd6dd6z14g92d2mknjce2pwfme3hrysm29i89spsskw833maa5ni9rnoe29yceqp4l4hvoq885qlisazdomdppikbpcj0s1bl9881y1lf77k84l5py8di92ixb0iq7dyldq66byeyi7rus081dytsouzuccymwibjld1eaugdeduhj5xi2cdv82\", \"by2o34w1sy6284anlprfjfwzt\", \"k0pedhlsopq1etorqg6keab6uylv35qaz39b30rqavofqf3jizvf9o70pnsm8485d7rxwxvpwftci7d6e5j2aqf96fsiz0v3pjr99w1dpcwdigf1ro3prcoohtp3p1cmk2wckiddutfk1n3bw9z1lex21zeuoohv\", \"yeacas484deo1xrttkx6k4q0p8q85bihs2mrfcskv05iiuu6gfwfnnkcgpjs6y1kd4\", \"bu4mkhru3t79j8f7kk5hajmr709iwag2hak6yc71v37p66p7w2rli5no092v53ah10dbz2mlp45jun3ywtg5x3utobnrh9nlpofq3ia4dkawzzrvj7hfcef\", \"1t2nt2ew26x2r9tvtmhz92c3axfr0cpxp0pyvr7vrh4p8kotp1m09njilexi3jr62b9dueu8nxy9j7nv8x0mx9naruwk4b3h8ddosbcf2d0yi9\" ],\n    \"appConnection\" : {\n      \"uid\" : \"osk9\",\n      \"connectors\" : [ \"ij5uwl2hqfljcjffec01bqb7xlcm4jj4dgyu39je73wu9xwtn63nwexd2q7c6br2d2kvpfjd4y57mjswymos3xglp7iwanmwgpendaicn2foq3dhflkuulbsof5gromh0egt063on\", \"bghr90g94ue40n8nc86135awuycowat3nlhtp8blhd37hswsm7dcyl26jqgjo2tk173ms2w6ytzxqx6bo3nv\", \"i88d1vja0fz5379vtiota0z4o2ac8x9kqzb88ehf79x9j6y59x6hh33zgg1m8ipu80m9g3sgl8ii9yygpykz8ifblwcoe4xnn1fm2gxdp6kev2j0wfg4zw2xiqqzsm9nsowl3kjybtgojnj176vle2s5rtl18cet6je09giipf5orrdu1hpl5yxud7foc\", \"lzsqy9kxqrfcb8152njiqkf4pd4zl7z858a6dmk\" ],\n      \"createTime\" : \"2022-10-07T17:46:26.255956Z\",\n      \"applicationEndpoint\" : {\n        \"port\" : 240854430,\n        \"host\" : \"wm92s1bmtry12n7hiasft8h5an5d3vguir7osdu8muiyz1fshq443r11svbmbr\"\n      },\n      \"displayName\" : \"Ardath Orn MD\",\n      \"name\" : \"Mrs. Jacquetta Schaden\",\n      \"updateTime\" : \"2022-12-14T15:17:26.256101Z\",\n      \"state\" : \"UPDATING\",\n      \"type\" : \"TYPE_UNSPECIFIED\",\n      \"gateway\" : {\n        \"ingressPort\" : 1625835318,\n        \"appGateway\" : \"1y34h66pay1pvy6fq5fuvg6tcu496zyxqsv1b33tft82xotb3kfiqyvhwb2gc3fachd80zxbbsaxcicijsm12liachgkx4\",\n        \"l7psc\" : \"ch5leysxypaai24aizelpjz6ylkx789k9gmlmgd1xfev8fnij9mhsu05fm1ba2acbtrimdfc9lllhrdb3n44pe9v4l0vz7psuqn7dif4fft9j012qyj8n4\",\n        \"type\" : \"GCP_REGIONAL_MIG\",\n        \"uri\" : \"https://web.example.mocklab.io/743632\"\n      },\n      \"labels\" : { }\n    }\n  }, {\n    \"recentMigVms\" : [ \"rth3wichnoqgrg61805edxsec09hqlogdyn7a5rnwmgehowzxeczpubhtafbhjjd337f5i4zbaf5fw1ht7l7nsyous1s7ezoshb48mmbqekuzc8uqqt1kro5ls25lomhie197tdly0swcjqztjpafqumn4cu2qbgforavev63r50yvq8ya314u\", \"fkbckfs8h1gsa1xs8pueaf5tinq89o8b7itnf3zq7hy1wkpqp5kl6i734fy70y34l36tan2z2l3mbbjj6rba97x5ft1yiz9nmzc0am3zrxnmdvn03afuvm5bbk4krjfnt6yezdcubqrlkj1x5qz7w6ljp6pa45xqmwxbobevbaqzgckam7robgffjm4axtsix\", \"hkp2y3ov3he2uepb57uh2ecwc6kqphuikpf3vu8zm367a91whdsszxqjutz2jk89ee2h4ygh8hgyfiovhxsrdbsltr9t8ndd9idh562xcojo987spb2cymjb5oq9lx7tmn0xv7220orztj\", \"r8j5qtz48c9yqbrgms64ufrvx6pbpyjnislad3vj962crisdohbjpmyb6trtxgh27rmxo5tlgsbp1nz39c0bqw78l2jfoki3ai5a5vvez2aaq8kkznmu2avd1uc\", \"aankfcydtp617479m365ot5j2qmrhf48bfxzk6kq9fwkd5aztgvfmzhjn0rayb61d7r8t1na1aeh917370ak75j5j1zj2wahjqgijmuziegd38owmgllrn7av4l\" ],\n    \"appConnection\" : {\n      \"uid\" : \"c578\",\n      \"connectors\" : [ \"ojwfeon3qb1fh3vim7vg0l6ds6tlfbbwcwwm48bzb0gi0hxxrxfr2q1h5ff6akxx6dnd36j9zidmeu8m2a634jcxvc0tvuufwyam1r0scyklyzcmh9gji9god7c9s3vpggiafkpg73ngdsz3muv7j10abvsndikrcyud4zk919weilvq3y9h\", \"fvy6af5zakddv9mna5u4s7y1ze4idwkbnzns349q70wtl46fgcvvwg7sezf1ge0ykqal82kyyvgot90yo3xff4ofhu3qq0qy9\", \"k3bso23m7cvdlmiwusf7ptx8flvoo9v3onkpfwr5sfis4z0a36qh024zxosnzjn7j79uz8kp4zegorge98rh4249xttxgabpl576d1hjdqv08656c06zm5kcjo0dolnb6rsizckb9yutgz8w0hjp90d66ayn\", \"5bnzxeaeu9vzuuq23g2ybpqlfxp8sf7u6y9qyok30uhvylogljz4aclx\", \"t7cgy6ttwy89iv2ni5r26xj01h5hkc0cxs1yex7do36xynn38rbqssj8fmr9u37zx0l531miso\", \"vfmmfadswdwe2onns16aogiyouzliurk3jg8kjsrdquajsgvuow040k6p6n5su6gjz3mgwx8grl6soeqeplepb7z2x7adgj802v6rhma8cfh5ikm\", \"b3i1ouzfrnt\", \"t2v6craqmmx51p9m5aoqy4t53cnyqzqiba0uavpqywpw8x7hq63anvqpfxuvl6xkpwzb\" ],\n      \"createTime\" : \"2022-03-30T17:03:26.25646Z\",\n      \"applicationEndpoint\" : {\n        \"port\" : 453005674,\n        \"host\" : \"pw8pcdw55ugktfhs8qce2dkhj46t9a7jnt4qcfk7w9eyzqh0slfuacegj1qfxnkcvmjhowhbjkx8ny4s9ta2w98r5kothmpjticbldj7h0y8sid7ua6exrwn4lvh5ge4dxfnfmrxt30wrb3je0q6sqr4gvjyglzbbf9d92rp12scn4fejb372455ps91\"\n      },\n      \"displayName\" : \"Eric Vandervort\",\n      \"name\" : \"Evelyn Ebert III\",\n      \"updateTime\" : \"2023-01-20T18:00:26.256604Z\",\n      \"state\" : \"DELETING\",\n      \"type\" : \"TCP_PROXY\",\n      \"gateway\" : {\n        \"ingressPort\" : 202369361,\n        \"appGateway\" : \"229bun2vax4d3baa1jkwkggpfcfkc8ezk7r398f7i4ua2je95k9k8fq04sbgi2tir9tavjv7k1te92dzco8niikc9fphcaduzxywqvldp442u3babco0yt7ivjiohiyodl68wl\",\n        \"l7psc\" : \"aki2ftafk3vrhdd5tme0s5f1ldeb7sue3gffbiq65v5mb4kabtbv5eslsutm6uv53n6098pjryeyvtftb80eou1fqd9bx0\",\n        \"type\" : \"GCP_REGIONAL_MIG\",\n        \"uri\" : \"https://web.example.mocklab.io/993380\"\n      },\n      \"labels\" : { }\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2d23a854-5f2d-4ac0-9b62-85ca98144761",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:26.256918Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.appConnections.resolve",
          "schema" : {
            "description" : "Response message for BeyondCorp.ResolveAppConnections.",
            "properties" : {
              "appConnectionDetails" : {
                "description" : "A list of BeyondCorp AppConnections with details in the project.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleCloudBeyondcorpAppconnectionsV1ResolveAppConnectionsResponseAppConnectionDetails"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              },
              "unreachable" : {
                "description" : "A list of locations that could not be reached.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6df1ad2a-2314-4917-9d39-acb45c99409a",
    "name" : "Creates a new AppConnection in a given project and location.",
    "request" : {
      "urlPath" : "/v1/9is7rbvbmszxrv5bbqxb93qa5ibu743ejxw2gbh3yef8vlwg3fccljfqeq4zf67und6em8v2j6adt5rd/appConnections",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Cristy Kuvalis DVM\",\n  \"error\" : {\n    \"code\" : 1546889323,\n    \"details\" : [ { }, { }, { } ],\n    \"message\" : \"Quia cupiditate facere et non. Temporibus tenetur quos distinctio quaerat consequatur. Vero dolor nam.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6df1ad2a-2314-4917-9d39-acb45c99409a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:26.254781Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.appConnections.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "26e023e8-7b9c-4f14-a3e9-d1c881c571a1",
    "name" : "Lists AppConnections in a given project and location.",
    "request" : {
      "urlPath" : "/v1/06o3gdxeap3l/appConnections",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"unreachable\" : [ \"eplo11f0n4tosqxbqhbm3phv82ptadabawzmdgcx5wb8anohsqmkme1wyu0rbmzr4obsfmz06lblv1xmznbngkwiov306q9tl542r9kdb96fcs122zw0cw3obf6syp4p7c28qk\", \"lbvqplum41xxfz04mw1xne8s6j46ub76vfwqo\", \"iex1yze3h1cqhq6pm9al0z2vjqehfcta3ngq2c87wizh399t15x531v8c0mhtk2th6obo5n0aughdya1wcffqmvo3rtp4mt2umuzpzxcq9fhiv3vsagfylukfqh70vsvhbkzd8kmm6xyrpm\", \"van3lbve3z3027lzh14e7p03u1u07xk1ip36bw61b5eophnx49y2lpbkjaffjdzhj2847oueyync\", \"fi3zocomyit0s8wj5b6d0zps1ol8kv8au0n9wg1fpkyl5lqs0vyqlogw\", \"pmcb9xkdjtr77imn\", \"u774158idiu9yp65c4maeh0jhp23d1mcqm8prywmd55iqi9axked3ugmgj3606wj40ybc8uwkdmh4te4d697qp1sr6siqqbusunzmu6jtao2ow4y\" ],\n  \"nextPageToken\" : \"8o8q9b3j78v6irgmdi7f1ocr0qm1t6jpvqu3j84s6s3cgv9y8plkuubrkmnf0kq1lvgakn2gy7rrp3qa6p4h3prkhlgiw0hqybbny2vuzmwy6niu55iaok342djpayqp495pf0jf00b3trxkhyu3m9rltzhxoth002zd6thhuiynook2w738b7\",\n  \"appConnections\" : [ {\n    \"uid\" : \"4057\",\n    \"connectors\" : [ \"7kb2iwob9ur358a8mcg32hbqk823cnzqt82kg1ocyzqvpxaixrtbfogqoa4ff5g2s3dr87yci\", \"b59swfrtxmbu4a8il503tb60ajpxhp5ixkq8doz7q02xryngyb6382p34989krxt92ntvlbnyrx2zrhw6bv69b61yupkfoqzvlt7s7llcbihhhrvj1ucgefveiy4tdhnbbmaytuwaczmplc43kfpy0sl31ef756\", \"wftdqm4plasom9chvk6obuq8l4yyi51ghp2twb0y90oyacvztvzsvl94lrh8fi1y1in6j8nh152u87pt9bpwb1ck7fugphjg1y49lc0je\", \"k37ezdhdglbwukqrwqhxmz7xxeudzqs3llaqx5ys75ayoih0jxg3jyfdfxal804cip9g668ff9vw517qezxeqmj\" ],\n    \"createTime\" : \"2022-06-04T16:03:26.253324Z\",\n    \"applicationEndpoint\" : {\n      \"port\" : 335311304,\n      \"host\" : \"tzucj7693j1w8nbp7ngeuxf5ulfwrt1mefb8rfgl094hnx04kzzr3234t1j6hkt9091b52u57guldrg0bp5t5xsl1wv29e8qycs2z644sgxe8iy8d1p00uvazi7o48lultw6ke8ye1mazz8t6axo4mnyym28wwc84noagqpn6xhiesuy\"\n    },\n    \"displayName\" : \"Freda Schowalter\",\n    \"name\" : \"Jody Franecki\",\n    \"updateTime\" : \"2022-11-09T16:30:26.253476Z\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"type\" : \"TCP_PROXY\",\n    \"gateway\" : {\n      \"ingressPort\" : 932699146,\n      \"appGateway\" : \"30hbq0r1cvjtwe3f58qgcu9skip1wj28vkp4z3l8w64ksyclvh63habp4vmphzvpridqjms7zveeysrj2to2rh44vdnt4y8\",\n      \"l7psc\" : \"hlfmbchif9tofcabukrne3f5vz6fk8haj23e03qayjd2scs6a5eo0vsphc2020jgrp2p7ibfrc5v8qyjmfq5m26kcmgn6s3q0f0a8ekh44q84lxre9zncs12n94\",\n      \"type\" : \"GCP_REGIONAL_MIG\",\n      \"uri\" : \"https://web.example.mocklab.io/628406\"\n    },\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"56tq\",\n    \"connectors\" : [ \"0aj3ie7tdqrhr2hhp0926mmsp5t788w0jq8xo8kedcdhxtmdklhnxwdeun7hq2czg6t3pb2egi5fln6p7fk4khrxfrycyod9\", \"q0ciry75hhkacpnacrb2q967buv\", \"9ogs74kwxb62bjlup1isve5tml69i245x7t5z0p40ab5o8amy6q8tjl1crhykfmlfn\", \"uy800tbnf64zfwt4\" ],\n    \"createTime\" : \"2022-11-28T17:00:26.253757Z\",\n    \"applicationEndpoint\" : {\n      \"port\" : 979380375,\n      \"host\" : \"w3o9t5fbmc59ddkmg4t2fu3gjb5esgk5otoq5p421hovk5cfzb4i8g1irrmz8ujt6dbdg3jobj5z9n7wh8peb378rkyhypn0daiffn9s6oyc6k9tupnbc95ofap8gwg9mswjrpxsp3zrlbaf367gbzv1osf1gd3n4v3q68fbloujwivgzxx6rduneuj4reyk08hwt\"\n    },\n    \"displayName\" : \"Penelope Hermann\",\n    \"name\" : \"Mr. Elin Grimes\",\n    \"updateTime\" : \"2022-08-31T17:44:26.253899Z\",\n    \"state\" : \"UPDATING\",\n    \"type\" : \"TCP_PROXY\",\n    \"gateway\" : {\n      \"ingressPort\" : 403407208,\n      \"appGateway\" : \"4x3mh27us3rkwot2g07lkps4fhrzya8ynlbonscj6kxtd8n0ekfz00u5if5fdtfm6a57euntqippostzbvkg79co4q44xbcmy8t43wpug30j1824z9tpy8nwq\",\n      \"l7psc\" : \"r5bvjdbvhy95k4bkjovoxzbkyi5snib19tp7r7k4b8bnsukstz8jx6skeb1e8ez9tg6nnldm6pdmj9zdenadan8w2\",\n      \"type\" : \"TYPE_UNSPECIFIED\",\n      \"uri\" : \"https://web.example.mocklab.io/691120\"\n    },\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"x2z4\",\n    \"connectors\" : [ \"pv1pootdsi7xji032uvyqxkgoqclzthbndq3053lsurlqlz3gztcogdv3ekiq7mefeaiktmtb7gwjgcy25j2w6ebf8dkylkr0igsm0hv6jvqlwkiooe53gy8lcgzkkeik1ghkju43fvvhpoh7gxwpp4az65w3rf2r7\", \"1ekk2hx30b2yo3ovkjtp1une6u38y3a9y3ak676hij3pvbz8clbwa3lbv5m82wqv1g2nhw6qrzfcw21wjhaln8h8kct032wrp\", \"fonq1hmtl1yu9h9wcu4vqskmt6nygf94\" ],\n    \"createTime\" : \"2022-06-27T16:35:26.254151Z\",\n    \"applicationEndpoint\" : {\n      \"port\" : 529993928,\n      \"host\" : \"lfg36c05eclbvcwecg344yx0bwrglds5bepmnc5w59k6xt5ldqeddo4sur7shv3\"\n    },\n    \"displayName\" : \"Frances Heller\",\n    \"name\" : \"Shirley Gutkowski\",\n    \"updateTime\" : \"2022-11-18T18:22:26.254283Z\",\n    \"state\" : \"DELETING\",\n    \"type\" : \"TYPE_UNSPECIFIED\",\n    \"gateway\" : {\n      \"ingressPort\" : 1562218529,\n      \"appGateway\" : \"uhrliy51dkx7zr8ki6yymwrt6kmxrg1ty6cheepx4qlb3fwgc2nui1v5r4zkzz2fndv0ufuz0803ou3e02k8kwjxk2wdbrxy4zbdge59yidar72ifrg6eu20wdisa2g9hb\",\n      \"l7psc\" : \"6bwn965nw1el46aj3hnd8x7u44jd7374pxm6jdq1xi8fjmi6x7tkg69s3rz7bvcbf\",\n      \"type\" : \"GCP_REGIONAL_MIG\",\n      \"uri\" : \"https://web.example.mocklab.io/313615\"\n    },\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "26e023e8-7b9c-4f14-a3e9-d1c881c571a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:26.254544Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.appConnections.list",
          "schema" : {
            "description" : "Response message for BeyondCorp.ListAppConnections.",
            "properties" : {
              "appConnections" : {
                "description" : "A list of BeyondCorp AppConnections in the project.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleCloudBeyondcorpAppconnectionsV1AppConnection"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              },
              "unreachable" : {
                "description" : "A list of locations that could not be reached.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "db61a449-f19f-4e69-8156-a34c39d40281",
    "name" : "Starts asynchronous cancellation on a long-running operation. The server makes a...",
    "request" : {
      "urlPath" : "/v1/Dr.+Larry+Orn:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "db61a449-f19f-4e69-8156-a34c39d40281",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:26.253096Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.operations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8a63267d-f0e0-4719-8bd3-25843df662ac",
    "name" : "Lists operations that match the specified filter in the request. If the server d...",
    "request" : {
      "urlPath" : "/v1/Lenna+Haley/operations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Mrs. Garrett Sanford\",\n    \"error\" : {\n      \"code\" : 1955759821,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Quia eaque dolorum repellendus a sed. Repellendus quia voluptas. Ipsa commodi minus perferendis autem et et maxime.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Chris Bogan\",\n    \"error\" : {\n      \"code\" : 1167436088,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Inventore rerum et quia voluptatum impedit culpa et. Dolore deleniti libero qui suscipit quos velit. Quia perspiciatis quas autem quia dolor voluptatibus aut.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Werner Heaney\",\n    \"error\" : {\n      \"code\" : 1172015241,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"In expedita perferendis sit sint. Impedit qui nostrum asperiores quia voluptas quos itaque. Et veniam pariatur velit reprehenderit quia numquam.\"\n    },\n    \"done\" : true\n  } ],\n  \"nextPageToken\" : \"lxjlwu24ztjo311ef77hkiu4agivg4u5hieb6iksk94w6d1qw75a6whtgpeq8co5vdsp2yd6p4c2leyj9rojqg165kn80lbj1spxbs909bbp\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8a63267d-f0e0-4719-8bd3-25843df662ac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:26.253014Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleLongrunningOperation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "09a0b687-8715-4b3d-b371-f05aec620cf2",
    "name" : "Lists information about the supported locations for this service.",
    "request" : {
      "urlPath" : "/v1/Rolf+Lockman/locations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"uj4974qrqtqb1dj8b1rjh3pzegfnr7cz1swy3fi6858g7cnau0tsdrojz64invivtag1j39nleaadmepk24m2ejodxo75bw0atge42q4w2wi1j1buvpcqtrayve97dz0et\",\n  \"locations\" : [ {\n    \"metadata\" : { },\n    \"displayName\" : \"Billi Tillman\",\n    \"locationId\" : \"kf8m\",\n    \"name\" : \"Annalee Rodriguez\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Mrs. Miquel Russel\",\n    \"locationId\" : \"6avh\",\n    \"name\" : \"Denver Ferry\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Mr. Lawerence Lubowitz\",\n    \"locationId\" : \"4kr8\",\n    \"name\" : \"Ariel Pagac DVM\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Cassidy Kub\",\n    \"locationId\" : \"cq73\",\n    \"name\" : \"Broderick Schuppe\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Kraig Ernser II\",\n    \"locationId\" : \"5821\",\n    \"name\" : \"Jo Kuphal\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Leona Lowe\",\n    \"locationId\" : \"24tp\",\n    \"name\" : \"Iesha Hartmann\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Shaunte O'Kon\",\n    \"locationId\" : \"c99e\",\n    \"name\" : \"Tyrell Ondricka V\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Sid Anderson\",\n    \"locationId\" : \"64bl\",\n    \"name\" : \"Rochelle Goyette\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "09a0b687-8715-4b3d-b371-f05aec620cf2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:26.252542Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.list",
          "schema" : {
            "description" : "The response message for Locations.ListLocations.",
            "properties" : {
              "locations" : {
                "description" : "A list of locations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleCloudLocationLocation"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "41b7b667-32f0-4cfc-b66f-8adeac1463cf",
    "name" : "Updates the parameters of a single ClientConnectorService.",
    "request" : {
      "urlPath" : "/v1/Candie+Hartmann",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Dominick Schmidt\",\n  \"error\" : {\n    \"code\" : 1979441212,\n    \"details\" : [ { }, { } ],\n    \"message\" : \"Quia eos minus iure modi maxime odio architecto. Quia voluptatum velit reiciendis rerum non est. Consequatur quo doloremque ad quis.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "41b7b667-32f0-4cfc-b66f-8adeac1463cf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:26.251085Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.clientConnectorServices.patch",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9eebe09d-3314-4b6e-92f0-d9709fd2e7b7",
    "name" : "Gets the latest state of a long-running operation. Clients can use this method t...",
    "request" : {
      "urlPath" : "/v1/Alejandro+Ankunding",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Dr. Martha Hyatt\",\n  \"error\" : {\n    \"code\" : 1900681499,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Vero ipsam et laboriosam est consectetur. Rem inventore eveniet odio quo minima commodi recusandae. Nam est aut quia qui modi distinctio. Et quas a veniam.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9eebe09d-3314-4b6e-92f0-d9709fd2e7b7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:26.250882Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.operations.get",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "82de737c-2def-4349-89ea-f729f27de537",
    "name" : "Deletes a long-running operation. This method indicates that the client is no lo...",
    "request" : {
      "urlPath" : "/v1/Derek+Dach",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "82de737c-2def-4349-89ea-f729f27de537",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:26.25065Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.operations.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "bb9ed2aa-4fe5-4d98-a394-8d3f63df9f2a",
    "name" : "Gets instance configuration for a given AppConnector. An internal method called ...",
    "request" : {
      "urlPath" : "/v1/10gklhsqwfwto9935gn2by4gacnueogmdloidqn6rvv96jf96ru5q4ivx2pzhwrb8xgno2l0u83d45xx1agw2eg6etpeq2:resolveInstanceConfig",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"instanceConfig\" : {\n    \"sequenceNumber\" : \"m9n0uo5o3cgil0ygf1q78b8jvt4wa9lkxpa993gu8sryv2f2qsvpdv5i9q6kb6tlpgr925dzz9pk3nonth1127stzi5gw80nabjiwldy42n338xky70rr37wtxzavg8fxa1eoutzso8y9je43za7cw3wz35oe4uslw1\",\n    \"instanceConfig\" : { },\n    \"notificationConfig\" : {\n      \"pubsubNotification\" : {\n        \"pubsubSubscription\" : \"uncpm5hytn5jv9yiozprtwd4aba7riqsi9egjqfquuhyuh0wju1qfvpan0h31j3r1d1zog639kjkbv9clpd989hfgkoc2ct6y8u8u74p9u42i4cz9xci87pj85w8z1k1qqldgz45iwnlarzo3uv7jvdbzwkqo6g1rnlo8dyy0ttn1rxfz712w7xvp\"\n      }\n    },\n    \"imageConfig\" : {\n      \"stableImage\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/borantula/128.jpg\",\n      \"targetImage\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/alexivanichkin/128.jpg\"\n    }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bb9ed2aa-4fe5-4d98-a394-8d3f63df9f2a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:26.250562Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.appConnectors.resolveInstanceConfig",
          "schema" : {
            "description" : "Response message for BeyondCorp.ResolveInstanceConfig.",
            "properties" : {
              "instanceConfig" : {
                "$ref" : "#/components/schemas/GoogleCloudBeyondcorpAppconnectorsV1AppConnectorInstanceConfig"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6cb02ddf-77c4-45d3-87aa-18faa5aac3c9",
    "name" : "Report status for a given connector.",
    "request" : {
      "urlPath" : "/v1/koe83gog9uep67o4j8vpru6acyad913pd5zxvoyztq8p47er2uvxzp762eruoz8kryr1ofu63gws1k7r0jrwfmkw8alzbkn6y5ohz7x4n00pn9cbpczfidqwbzz5u376p843z6e7syvl879h0wz5wx0ysg:reportStatus",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Raymon Schiller\",\n  \"error\" : {\n    \"code\" : 468343170,\n    \"details\" : [ { } ],\n    \"message\" : \"In in doloribus voluptatum necessitatibus cupiditate ut. Maiores vel libero eum eos maiores ex. Dignissimos at blanditiis aliquid.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6cb02ddf-77c4-45d3-87aa-18faa5aac3c9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:26.250333Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.appConnectors.reportStatus",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  } ]
}