{
  "mappings" : [ {
    "id" : "19c7f74b-e7df-444e-9d46-b9cf345e32cc",
    "name" : "Returns permissions that a caller has on the specified resource. If the resource...",
    "request" : {
      "urlPath" : "/v1/z2lxfbdoe7sdcb604oqzrc6gdediw5ifot2z3ekpad1kxh4mhnup7fgiewlrhxw0nu7rs2pa176qhthdv31vbll:testIamPermissions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"permissions\" : [ \"d2eh26yub6gf09rzr1ibwsqggo0y79m4q11zaf90zl6t47gv4r9nqf\", \"pyotwvapkswjksvjt6ul1kiov3u0rcyshv8r6ty40xnpg40ktjf13449xgdx0awo2xbek57hkzq53mw4vmt55o6mq4d6joqh3ekb4uqbni80u5m7fvrwciisycm0glxfckgyrjyk676exmytqj6b4kuxeviam3wamnz6qxerjp4igtc6kdmehs5ih5\", \"y345cd327e1l2gnwccpemabndf5nieyo0nw8crndcd04vi0yqru3lph50qns0\", \"rpa3f66uqmpk5ly3yl4vm8lkfs6rdfej3tqoflwa83og\", \"94emuqjbl0n3uvn4diqcogps9f1t68pnkzq6so\", \"9zb4n9u9eomqghcdjx1g28b3m6kaizy2uyet5jnf1vb81pib92v971n8mp9jzxsjpjoim4vgks9cuhk3qruwdf9ibsxj1cgamoml5wgdha0\", \"mhkccd9977euru8m3r30sqyeo0\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "19c7f74b-e7df-444e-9d46-b9cf345e32cc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:05.716854Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.clientGateways.testIamPermissions",
          "schema" : {
            "description" : "Response message for `TestIamPermissions` method.",
            "properties" : {
              "permissions" : {
                "description" : "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "657498e0-97f4-402d-b827-5d38b95e0d95",
    "name" : "Sets the access control policy on the specified resource. Replaces any existing ...",
    "request" : {
      "urlPath" : "/v1/32qk09f2n1z05isbib7y8pbhw235yan4sdaleb93xj8h27zxgmrvedrrkc9026izh:setIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"n7gkf7g7eo3tox2egimg4etqprlnas8bfaymfah37avty37zlw1ncpg5frx7csuuannzsyxjk4pwpuvaohr\",\n      \"description\" : \"Et impedit qui. Cum reprehenderit omnis illum voluptates natus ipsum magnam. Excepturi sequi praesentium voluptatibus cumque quo dolor non. Et error ratione nobis.\",\n      \"location\" : \"x8kdnpw2dri94o8d7p78fut6wkdewszpe2c1rpbbp6irvk4w5ndilyp3wr1q55zkvxtmd6tlq3o1iwl8u416otae3jh4f3dz4xynmwyvg6zpl5ya9wc1o8k9uq8q7el692zxx527rb8mrhbmxjxe8rjyrpr8w5wgrsl\",\n      \"title\" : \"Autem in deleniti ipsum ratione.\"\n    },\n    \"role\" : \"updxeianw9sfc8wv1yivyypdwe79cu70\",\n    \"members\" : [ \"jvhfp0l8bmok17tle0ueo9ig92jdd076yo9iix1fgio08ultx3aeph7lowifh7alndi1nubq8qa6bxl88r0dosg99wsqttk9963xpskci7dyhj9p099si5mgq0ps4ejp6m8mjyw7jehw7l9xzx3dy1svwydb7j8idmxoac2frg38b\", \"66p0kol82shafovqpazhh0m1knpl9uma\" ]\n  } ],\n  \"etag\" : \"autem\",\n  \"version\" : 2085278446,\n  \"auditConfigs\" : [ {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"74a0cwh19r0x0484cikl1au7n9b39fa67karvhvk9w0muhgjnsfg4s9cf1ho3rw9dw0wedocdtuzhygvagmg8f8ggws6bd3ce007sgb9ojnb3aflqtwzpmg2qegx59nquou85o4azqfex1ade0m7nt4ners1t10kw8x054\", \"mv8b5rd5op5bcy5l82xlhuisavwjyrjg35y2ekrsdm60r3htmltrjanjd9a8o7scmuc1lkg7551yv3dyswn3n79c7k349csncobvgb9i5kt1ind8mj4hz5ln54rumse1013111s1vynw7rt61nbo18xr59\", \"dhpxwt2i2qau5dbsjdoaqmfd0m4q6xm4gsx1sxzyelnq4m4n6iq\", \"jmrsreqgecz63gkgowhn3o7fdkyxrfxzpuegz6jeolbul578u00wcx19jmq4kkt8vfyq7yjgn3hhp7dsqvntxsk8d5on9vatvd1y9txicrvmsiqh2p909xbuqwin\", \"24u95ivd9w9z888bn4qo9eysjetwi7ms41zc62m0sm\", \"g3u9gw57by5m4wdyy956xrh4ca58qaqrojlk1pxh9qb5k4gttqshrxoma8eybrckt245ejkgvodf82qqfrrxqb9eh3txezgil7hxg5rfkdj4ep6pc0vqlrz6gozaifzz6qq3xjto76tt0yiiuyxroh7sw1y0fmx85j54sf791xbaxdudvbj8wj0et4z4x5ht92sbpbxg\", \"rgh1k9qfgbx9tqmlxdr7ez74s6befi99nnqcpya4z9nljvy1sqdzvl2buulgndnfsvv12pygsx542smenv1jpv6ycbdfi82fixvt7irsso40q75zymngl8yyukkn0gia9s7r79uuudkyvdfsruepvaioxamhh93u68mh4qk0\", \"ajvvc25pqwu4uvwde3pjit8crcxllh3ji4ozsnwr0b2raq127y2gdxw11q4154jk5r76x7druhexzp7m7y0ayyii4q2q5yia59xr3zuq4sdu7lk39f3zlp3804g14lxism9vimskcm87zqb3i29ekl7b988l7ocjpufolwzh31av\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"8ffaohj7pt9copkua6p0a9sn2vnhu9ew95r32w8lf9omok7y6s2lygzpu8hbrostydtph468ttx2rkehk8y5mw4ac8va9p6iu5lw6bvjw96r19jxvpq3tfr5c9qzgevv90yzd5dkvls256hw372spb\", \"89lhmcm4pw7lfgkt\", \"6076pxhmzunql5zljafo4y4ll5jpsa40a5glzuhwz18h424189uvtmntfw0irpm60wj5wicsml\", \"n728d5i914osd7z1kksbgakripw7k45th3wq6nlhxos1xilytrlkuc3htn1yymcqmvyg5nlao0qzbntpj0t3s7kja34s70tsi1jloddebx4t4f2vpd6k4o4l8l20enibtndyycyzyd73hq88xop9qiy7ot8u3\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"797a1xgpd5ederm2cygrr1c5c4x80sxzso4m84ovfqmik1k0xamf1jmjgmo9zjrpxa43eroexcxsdde3unsy73ysy43evw4yl78kxih282ykdpqw6yp71q41\", \"3qy6i7gmszk2sj3ddkkw7van28mfbhfnfx3mepp4l5t5ckcxjvb859fxqhx0a4ojr64rkzz7w3b16vj4fyyra16g1c7x8z5fb0khqapu0v6ymb2fh980v4k7nng4bxk6gtc2xh4naq2lg0zmys4mi4wzunvrm2kqqbkjl46y282k07eg9rxgwkynn8e0w\", \"g1lrbi7nvw76cu1cssegm4elkvf9o65md627j8u7hufl0ga0g3ypmku3p0zbfnk2hfdtvx001cu2zmvxg71pznzgb47u8e867gyha1zde30binb0xu8u17vb3v76bv9pzx9f8uy06j5fy3jgeyzvc80p01hrsk806apsdrifls4vdnpqss6g81pmu641mb7mc3bzx\", \"avu7\", \"m08h21a94825iqa0cn4ktj96aybz6q1z8j8wpunx93t1t0s3ncir11j31nhpm5gyxlmk37jreajek95unekxraahipgupb4atki85pa1kdoovj6x8hj9aahcchovquztgrohescb5f9s\", \"4n43wqni7g3bnb1okl4pnqrniv9e1bs58o13x2lghpm3qoq1v3ewntzhsn96wqgvk8jtdmuast4dh7zyv1vt40l08weelpifelle8wdg2oi4dgrv0ztwrpbk2rkh1ciun9oxz2vcxvmpuqnwaub37hy1rrso0j0zr\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"irfrcl6mq9r54wfv0dfdaxo2ymkk2bn3t6084dkobzdu9yrrdhwdo7278woketi26nd856z04rnriw6iyceu0548fn6rebmnsmqnthsnq\", \"vdlake8mqygn444m3q5wf5gg\", \"8k65esc6527c14twfegd7ab0ozwvl9n9wao5u37vyp9nmfizseuink9cq6atupdyr4m\" ]\n    } ],\n    \"service\" : \"jtxp6kyl0w8rvrpb1cwyoxb9u65xpv51v9nrapp3jyjyrx89lasxb63o4rjr8xm1y9nngz7l1tt032fqsphoynnicouutvorss5t9w74nt2hbfxghe5fulv3hgam8v7ek8p2y0hr4pm9iry8ytpi43wyo7j4m9k0qryhdeln5b0suzrh32plqqh\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"yfjq56ny7502ej6x4qxn2to73v6wtr8uqpfglh7ic2zzpyw0957f5fmr9fv5jbcp9m87r2wbvveg0sn2mpot9l6z4aurgfcw66tcl59fvsfm004zw6y0u2571nl9jc30uy2dfxac7hw0vrqnk4r8gaqiwtyw5y1x1cjejjtgqmfinkmabkdlgve29q7v4x0zvqg2zb\", \"yb3olu\", \"1nd4ocgir8qfakke1kvanolevtbb080feqzhljtl4xuzroyc58p89bs5xe416ugdrcus\", \"v2gowl4715bbvaaiarrphwa7tz2dztba47w7cj17j615kn6ji2afes9hceprbtj4o0vdtx0zjr9zauwn3xqdhtkrneot1zwpyjccz37dqwhry5csbyen2npmgsuxccg2u2cyts46lxpcg8q4cnq2f09eh9cnabo2sfue00hm7q7rfoxkdeb1e1xjo3gp78\", \"d01bix7mkum5c8gm9fcrjolnmlavx7y0dnmokef406gglltb5clvc715c5hm4emlqovkpr1qpqi02z81gj3tnyt1aq3w5sm989cwe2kpceshgdy\", \"dszy5mqdt1son8exnvpooc3hhwlnr1psjc4fsotofdt610cnnk9y0q3p3yfucp1zebrmy6ignyln6x382fpbp6hcibemixle17af06sf51ljn0dcrx28od3fncr6n4ifloqt0ymso\", \"c0663i56zcas3349d3bc8zxaij0w6hlyzurmaryjjjabh5rglfn2o293uxt58etep0rax6cp3lm4hx19e2gvkyr7jclijn5tih2kynkk2a5er0xwj9auuylzeninllm9xrg6c2dhphlyji4l\", \"0x858fcqfur2qjjeziym5f2kanzhskz18iro\" ]\n    } ],\n    \"service\" : \"yinyut0iuc8a58vldu1kzg27pkjhq7hmm72nzgdgoab9dk4y4q783owxiy85ssun2r0nc7sqtp61eo5k2rrylel17iunkob8vehwsdcprnma74gkbhbik16c8nnkbilodo6ow2rlkoptcl9lzvxchxyp1bikhyb8owy9fmati6hc\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"681t46sqskh0ii23ga68gayymtiui3j6ocoa0xti9003iaclrq91mcep63dtm\", \"qbxixxq4\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"5b12p1ork13vv71qp4vdep555n3scnk1t8yri42tp7bhucag9ncvwzb45xr2a1eyiagv4al76fh5bl1yb0cv5e4scrwgv9zeqbbclqdfsgt3tp64jvyuotdh2k4m3f6rehzyv9cxmqmdh97u4pgfyd\", \"cz73ea7pad6iw7c06xpbagdqnga0g5xvhp3uyknjuvuw1433e81axnuddo5fux4f9mhipjrnmhqs5xjpkktgcvi61ye994rj1mcb168nb8\", \"gxsm9yepaws7705y5qg6544whn81cx6c18f6oht79z2ym3tlrnfrpf\", \"y38am5yttpgbwnw73llb29t9la9c2wbzkb2warjvvhze6km5rzif97c3itlx48dp69fncopuko6yrg9p7tspvw3gk4vqjd8oac7qcrhipxpx5bfb0q3v0xplcw07nbb3hh6vg0qgl1j5ipg8ijzv1r6lu0mc6q2yqfgw1zc\", \"mopwbtznjwfyjmiy9ui7j3ba8mepe1scywp8hviofu2pilfvsr6myphfnx3b1ammfbayej97273nu787r9547gekih9eez7p5801ol4o\", \"pko0jtg1bp4n92845yyh\", \"s29mdvj9mromzsho2dymxcsxa0oewg6hqvr3np52onkjtme3qs83qk9j79t6qv24iibk8r9xtpj1jteqizulsthgdxaf1w3skdwljxbm4drz8xd0b1ztpxiisyvsp8l9svi1oveazgnz167pzegfwi6g8slz3rkfxp5l8lgvp9wntosxj7z\", \"0ukfn8wqr15xk6po9c50vzajvmql3k1ord0dmm3ccgraw2bqnew5465vzi1vd6r3lv3qxbvrcb3n40jyet2zad2rxwqsw5d7yk3fn1n\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"1up8goh022p3bmuo8iohmp88pkdpofsp9n7ttzm11vukyp1djsic3o5rjngpqyrgmnmfazh7j9b0wm4cv0q79d89qme93xkc941v3n32w821esbtzux8yhafqar0k7esqwg31ksr7casinmdmeptifag3in8s0d5xwzt3l7qmtkt0fg4mrck4oy\", \"misobkxshzx4506qg6em3y9spk8ep0uj6r10qpmyig39s49zsnm8l\", \"1vekr569e222iqvmagrxo5k3nhsazzn7aegccngca9imhtwgtifcxw1p5a3\", \"yjm2m5wevdp2ylcd569z6ss2q451teb7v9q9itax2s5ox21p1o08fh01frowijgmrnxcnfeolgu6uhw8yko6n0phdggewdn8f2kyj0ks8xghu6j9ohy9yh\", \"rjlj55xcedclxovvdzl4r02dv031f17ahf99knx6y69uhw4y3xexh67lf7efa0eh4do2ul4p\", \"ui54kysur6r41x02xqrrykv3ylfh39ygd2d57i580hl4i674lhaxuvheopnod2i67d0c5kwss822bli7moq9c4bmsbt26zligqo3jafkt\", \"mvsswofywqta9jbhv00a7wk2qhkv1x9uuaxwy6h1fpcbhplpu0ysu6xnpu0vsm3l8r1cjo99nwc6djaj7spvnpx2k4xtqafsu8o4gxztezk6e5tn7yd1859w34hzmg\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"tgoj0r\", \"406lr3czl2flrrpdba1830ft8zwts58qllumydpzdq2k9i9rw482lj6h3w6xn31r\", \"vmr3yjdfmna9m1iv619v1hlmuwvwar5nfwtqpgfmacuka90wyxlriehwd25ujhamboknwqb5b4jdaudnv5jekld5r9b9cabmaxfan88gvr26470kx9sixjscr1o07p4ko4b3elqckh6q2m0axcvhvqm96p1dhd5yu07qcfko9p8stf395\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"cakltnaccy7smufjazjouck9lxvbzpruotsmr9j0gpgrtcbmb5sejae6n2gjow47zacmd4pr6l6xi1u9vpk5rghrrj40c76hq4z4j5tkvg0efwk0a9ksgekq2w6z3r1qb7ml91s5u5r3p\", \"umx5lujsm917qjb28ng2elzyi9wdpgknnelegf1xr0psix77r0\", \"c41edi9yfau2f9mvcoceo6e89fi2q2h70d19n5dzyx3mmcxk4rtahx82kpif2q15qr8iwenzonwtyu04gh8asd3x2c26evzhly7uq5jr5k20yj153fwep01lazjudx2rtn5g7mdxjukngbu11r6bgzcq5as8mgi7ntv9lch2t3\", \"s0ugvble579q5usmok4j4mgrxi0swhak\", \"2odshj73r2cabbmmno6n9m3m438r963qysl7qpwiwikuixleifegktxml2rwl6r\", \"kfqg2k5q6r8nwbbk0j7ux9ojdb7m1kd5945wrw3yylegza5qref3vsdx1b8x02c1g4rfn2v40mwu34aqdxoqyfxuhc0fhi7a37k3nzp\", \"ffyig1hnhb\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"nzprtt6vogmv7bk2cprhu\", \"lctn34vbre36z0d0ot8gyy8cgh243otsd359i0303vdmvm043voiik3oehiw795v5cek0luysbojni7294bbnezdw128k2s55qg3lcctfdh62h25tbgh0f82wt5j6nwvi8iqs4p9m0zulacnrez2aw2q89313d6xr8gaua0tfinzg\", \"6bhxm7ult5nxmhje9ggf63g232mg0xpm4q4n5oqnpt2tcg45x578cimpb6uq9k9wsfpwvdg88n\", \"0b8h1ezpq2svwywwfwcuy23mm7cq05w24b99foiidyqokkxoxwv24t0jredpwqsgt4i69827x47f1ekwwqggss9wvgus06s4t0dq8jki2j5384u0i21kvwwq2t3aav491l0o7ojsffic8lm\", \"db2yyyat1e3dq1bvxft8d4rucl1k8fxvw1em31n8lmw6zxx7iaw5p3d70hx01i78hboc0prounku9w12s8e6v2bru8e5cfbxg84lros95hntnnpyevs3lieu1hkbhx41melbpa5v5blfwx54doew\", \"nur3hrb6gkbr86ryawa2yhlgyzax50ybxckli99mq3l7asi5fsp71bmvjkptv7z4erm6c4m953drx83rxfj00sh3plcy2hbwua91cx3a0aci0jvcgl0i2t5352jktky41fqit2wl369w4z19b9ov3p37zjjzg4jyykf1zd80ponavy\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"qk1qq50eca1ch5rooohg63v3qmbrj4hw2yj3bnr0linou56q2u91jhdvl8s50o3syjegp3o4b7vdotwwllbfacdobd4v8d517tytznibd1kc818avz1wrw6ebtwzws8wqrzzh0ac9w8go9bbaymkvh21ft5gndk6e2t2fd3xttqeacshv0r6xm9w9btg9sclto\", \"1pmgt88iwpjoyp99gnpeu4oyx55q\", \"6q2odkd8ocboy0x712bumwgyuc8tgtduzjyqsydqou5nknwib86qi2dv09q5waemfkad3d145wbh0pfx7gnx1ss35h\", \"sl35ogn2w\", \"hsvgjhihyd7z2pj1ar11twoldo6o1qqnr4u4gy8twgn2vbupng9i780anwuupk65aj8g\", \"qgzjfduv5kde85wzq8jap996ot4tbk88rfnas0n4ltobm5a9iji189drp029gfhakeq07qfngqikjcvzmq2bsxmpid1ty7ohj8vakhr0s4n6rvd0hcerfh9rvx6noh553tfcybhszflxakf573f0eisa9ksc0s5non6eujqm1zhxbp0d0os3omo531c0wjaqb03zw2f\", \"55y9pgy665efmex0zjv4jl18opb19jn735\", \"r8aem0xme73yi1m7zt8eeky5ees3rl953zohwht1nad5rch5bk5qmtycljafynky065gfkk9j28pm3via4zli3ugvjm5jvgx64oz9hrhuaxq8darwq5t5gbbmd\" ]\n    } ],\n    \"service\" : \"3idf1x46mxi1i4nhh6l1c5wjikp49q4bf0rsnsh8954vj2sjj6o8a2ec63qow0oiwv0qqs8fr69ad3u7w17dyuah6g8bqh6vivmftpma3ipys6mjhy9z590ffev8nbwseb6zs3plmuoiov3p994fxzgc5rjcrs9bcj1wzis8fg\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"r4ib1xs2xt0hshp88ysdozico8iqvnua0pkpn2tidqdm4vgcn4dr196fc65fweiqt0mdzdsoep24z9zk7u8eeje5ahf5af0bqezia31ov9hyaj90spp4r3ek46ogl7wim7tq7t5u1k9rvwreo0glojmrgcfzi89axam395cvs2h6r\" ]\n    } ],\n    \"service\" : \"x3m2nalcfx97v6naxujb4nhdiebyek4b1hngms7cimji4opwi38hycoul3s63puicfhs194widfcw4sdkjpsc0hwydofntbnhmxieud1dy9mf60qymk6tjrr965dc6v9uaim001291xajet7q83heq7aezd8\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "657498e0-97f4-402d-b827-5d38b95e0d95",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:05.71672Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.clientGateways.setIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "auditConfigs" : {
                "description" : "Specifies cloud audit logging configuration for this policy.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleIamV1AuditConfig"
                },
                "type" : "array"
              },
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleIamV1Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "a215222e-5d65-4d23-9d96-41e44c454412",
    "name" : "Gets the access control policy for a resource. Returns an empty policy if the re...",
    "request" : {
      "urlPath" : "/v1/mvnnrk6zef0wkkvgrj3112zruz0ak5fxw6ebchkc7558ua3vpqefl5jqlawxf1c7flqlznbuy5iivulkl7q9hr75kwyoct8mqpege54vazyz8r4142aqzb10um6wq98uh1gwf9:getIamPolicy",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"2rcuetrqjxiraop7zj6cku5son5j6dcq110544843zess0ychllz37da7g4fm6ta2lii5sszyxp7i6ss6b4rmii7bnlkuqoqla39zgsg4193vxu6vd8f585b\",\n      \"description\" : \"Magni laboriosam sed eveniet temporibus temporibus. Quos dolor error cum cumque. Maxime magni quod aliquid rerum.\",\n      \"location\" : \"8dbqhqq3nwr9bt2vgqzvfswbui5hka44qnbdi3rq0fu9d4xxh3tr2ayknq7qnd5121r7zbzxomzfb0sfy4wm11aasq7j\",\n      \"title\" : \"Reprehenderit aut hic sit.\"\n    },\n    \"role\" : \"tpeqy3vbl3z0nn4g2shirifk53vpj9fxu3e85pu6wkteq54av3prdw3nl587eyvkzdb27fdb7hmaz453d45rb4h23eah6bin79qcfhw0myer7jv1wagddhyncx07b\",\n    \"members\" : [ \"xgs8uu2qgvjpuml6pgzpjlzitv8j8n2re4qsh7p0m5qewr5gyj8tjy\", \"xbad47iefbxvcucjh0jiaqhq656csiah53ocjqfewq9p53p3i0vn11vq7wm7q4vipnyv5y4b6z\", \"oxthfpj80ch0crt1d89u910jiuyjmwozzoe802q6qw1pdumd3wvbzit70s0xp7vvt96ow55ksm\", \"nt196g460vzb9nd9sxjihdytrl7pre0hqmfbjix3ombjbohhea9dc549vrsn3chbh8mf1wxfikj1z2tubav3vvf4otzrcjds9zwgli306kqmed5ona5csmmwcr7mtau0monzmvktzm79i1k32w79d2q\", \"7b6ixxsxqcvpx3\", \"y90dbcialo2gnvbdmzh816w5sna47ix9pycds570cgzrvmksbohhgnit25a3u1g5pzt4a1wb1iwiq0bejnwiugfkjzaay7c1mda1xlun0dbs7e8lzwkwf6bz\", \"wcrlga6eqj2swe1la0k3es04noq57u1hv1yve0528prvlwbt5vf44mb28g5qv8icfmt3kyigy4l3bnsvc4b8km7oifnvddx763swypezx8s6b7lg3qt36coa9wlxvud3a8raxs1kgocn8luk2madq566ds52gevg4hu1sweyaxluno22kwd614cv\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"fjswm2bmg7zpxue48zz4jqc9pkex8xxy9ysdvzx6jprww9k5ywqvx72e3cxyyoqech0j54pztjhlopu93q85o2p0q7u06yqrugdqk2gdaj0w6en4duw7fn0oqkb2msawhndf345pq7795cltn1v77f813gn369heidmkmmhn5485ykdw9kruytd4ozmtcptc5znuyk0\",\n      \"description\" : \"Assumenda similique magni. Aspernatur voluptate quia sed qui natus corporis perspiciatis. Aliquam ut in ut. Reiciendis id ipsa. Nihil consequatur eius magni vel molestiae.\",\n      \"location\" : \"spol5y8vg452jxcxn6uah0q2vqrbd5trmmejv1qckri7blnf682aftyxafyykhj5nubfbzn9ve1p5i9w9cp58l9j2qhkpk0qp6g7ilrtp3k5344svta0fwawftava6\",\n      \"title\" : \"Magnam et ut et.\"\n    },\n    \"role\" : \"umafgkb4rlklrxse7cqdzfqhbvxb7dzvzprximh5ksnl1d9a06495t6241kycm0f7bidmifrhtukagwi84yfwwkkrv8zughdvis0l8ybou88eu07atwpo6hs9ydyxfqennvym4yvnh67i4xlhr6ofus1728gu4qpzdhvyb6n36u7hh1rjgsgr1\",\n    \"members\" : [ \"zvr3bofgdfjcosvaorg9hqmm1hmm7o1crpfyei6moygae4c9zrlkfmc9bcn2o8wah19694nvdvuw81vr6nd9y02o1sh474spmd\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"ikgyh5w9zfzzxd5h958i7jekbxkx1kejtg4epbskawmws8h4nbg0breyntyzqxo221hu27u7c44x4kmzozgzmnxrftmtmeuodul278vq0c5nafdole8gmeaisk611zj11na5plp67vpic7ijivsnlvif2myw0wv67dxpqwk\",\n      \"description\" : \"Aut nulla sapiente repudiandae. Quo ipsam sint dolor vel eligendi pariatur. Quisquam totam ea. Molestiae sint velit.\",\n      \"location\" : \"3o8aa9zv7r05wa7w5u1mao\",\n      \"title\" : \"Amet sit animi asperiores a ipsam officia.\"\n    },\n    \"role\" : \"90tnvdy2j2aav0aep9dvp77b7cp7s4ugsfg57bh\",\n    \"members\" : [ \"e9xvnbsmy5y5s8377ewl570l5mw3kp4vphvmps6qdgye6h22j4g9jfz569a4are9y0x9n3v40jzr8h3doitfin49467by9egzz0f4gy8ff8hrvli5d5i3ek91pnkohv9\", \"5t9enf94mrmu09azqtlq1yb1jrhsrzksms3bjok1qo23wfugvq01mfejdrxsf473rth51pg4eszncs25pgurfcd9ps4lknkvs82otk3u381efagxqyx5jilcrbtfytqw9yci8v5ukvkw90z87x67dql6tca99o5z1fdx8gt1uujwrec7rhh9qm2ycimt55eegynvvt\", \"iosn5zl95th1lcbe36osxloc57z5tnmjnynq907l5ioydd8hqv54qz\", \"1ex4x7gys348\", \"2rrcuqg2s0eu66f5gk06bva7fyp6s1dtmzw40ge41pjy2wp7j5uj1z41ou8snlhj1v7bbv5bkwn3c4weid32d6h5exhwgx8d1r8qhbwei8xhrig7lrxi74wjhf2wp6353\", \"eu8b2witb4561adp3mywbnynf4b75es2mhc9kt4w6trn9n0jksap83rz2hz0rz55nzalt6173nrklav5sz26mm9s1tgezn8i8xhhuja8t6plplajvt49m61jofoqc7xeiqkzt4a998p2adyxt32wq4\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"mrlansjik5q4cft14\",\n      \"description\" : \"Et officiis architecto. In itaque delectus. Harum impedit dolores quos. Quae sapiente autem repellat cupiditate blanditiis ullam libero.\",\n      \"location\" : \"zmt3mlorp3vfwys0g3fqs1qw9iqd51vkh78h9vnbtq4zhdqbtgyxrfxbzocj1czje9r2pyt3p1twx9owr36lqr7465x7azb1ejdv3h9zthi9gjwleggrkudf4pwp4hoq24nqn0mm1q0y9yzfffbtyo3ogg56ubaec2wx5lylylyb9vd1o0\",\n      \"title\" : \"Explicabo magnam tenetur et.\"\n    },\n    \"role\" : \"496ng1yq98dypt0tpqq8nw95mta4o6lm0kud63w5w1g76odjazscnonh5rd0mklu7372hxfef6rceeqbkdkau21m91eb0m62haied45cm1b60w1rjq95tffl02dcrrwwmhx5ww8m5ozjt5bwc87lgypekpjrz33xn04n0ktngpzpw\",\n    \"members\" : [ \"59d2lhoykoigrk7r7i75j0i833rull2bqurlaunidhy85j09tneelj44l5cvguaw5cbpdd1fsjd7j6od3n4fjjq7wfy1tc7sbyt47vpoghfxxoznigqoq7h4sc4lhb5wkfw4hyr6bdzv6mebdrc\", \"2u7vpwrnqz7c9ua8sotk9fhlmchfg7uykws5f8tdeexa8dh2wz162suzt1pev0ir2kct4viuy0w\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"4b2ksrrdv2h\",\n      \"description\" : \"In numquam ea nostrum est. Et voluptas nam pariatur labore consequuntur dicta aperiam. Est voluptatum consequatur quo provident aliquam quo.\",\n      \"location\" : \"o4txfh0bhd5vird35c5j3pj3sbm39xk4ihd4agm91wcjjb03yqspee7ehjprs3j1nl7qt3patfin9ws3gibjnfqufqnsfg6ta0oetl1irxne96urt6eu6f02riyaqb5ir78022acdkklz4r7jvi11cx7s0mm8dvpqolp7sk\",\n      \"title\" : \"Debitis adipisci nesciunt dicta et voluptatibus sit.\"\n    },\n    \"role\" : \"nbiil2suthrex6q4izupi5tbhr64bbjzyf383i1y7qe5dibfjob8xwd10tltq65oz6utf\",\n    \"members\" : [ \"7dn1ktgjmkkd1q0fn7d5rj2c929ybdszuswft51906ielz44bjyqvljlc6jzgmt45davytslau55n5vaga5i2xw4pzxqzvm5y889fmvk4x2wphbqj5nra3vd1hqthyjtrkfdne0g6fdl05pjr3wr8j2xfwbue54k3pzz43590z9qkveq4hf7v9vbnj0f\", \"ycxcgz5zyq7ibym1yb4hbx3rao13o0q3y6v79zrbonhbr1\", \"l7ut1zwv9pdw\", \"d26p5xb\", \"8afwzcuyu6nc8fzsti870c5d\", \"ct715t3v6jzlyos6je2nj4ih2hamx489d9cb8ey7f00qpu8xl4empzexhlxjx3vcc30anizbx4pwvk6itz8almhr0nqrz1irn3z1x2i5q4i8qab8sra8ynocja5q8p69f7ibv2qq0cwsqd73qv24\", \"j40m6jvpodew76kondwidz59c566tsocwjtbbgtn6i49kn0ltkp059aiuzely698hpei657zkpfq7vvld5fah00viy1cdjvxlh37vk22bkjx2wtda9bf49jc1irc9hbcprra3ik2b7gnstngirhtka61f849ax4toogr4oddbu9vqakeihpus4dz\", \"pt69zeaukmvr57gh2hcbavk13ycly3jfgo14o\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"179u8r\",\n      \"description\" : \"Nobis ex sit. Id iure nobis ut. Culpa nam saepe quasi qui recusandae totam. Voluptas non minima error doloremque nisi ut ex. Adipisci molestiae impedit sapiente.\",\n      \"location\" : \"1wuwuwpd7vmnz30rukm1s8o6smke5gn3lwil6d6q7fsa7tunx40qkgvmtmkiv9037378adjtdn948xgyy7mv5wn5dbrjwf4zio2omr8mta9rdersfy7zklqo6lr7r737q33ttzd53kaq0iv5zanzsaez7800d8tt7ocscy6tklfi75c0rlzh288qggd12uaotmnj\",\n      \"title\" : \"Quisquam consequatur ducimus nam id.\"\n    },\n    \"role\" : \"sw19y60c0try98392h4jfz5oa5ablkter8h9zp3928q65dm243qeijrst29bhe6ut5x0l5tww8zuisimzoe1slnki7dgxwpwqfvwxn02m7ylfqiq\",\n    \"members\" : [ \"rvy5kjcuqo2i\", \"cu8oy6l0u1okphxztyg60jsqjgsmcvqiqw2y4rvu9lpi37rulsv4w3pcr8hl3rleymvumt45ux7vej\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"37ha1m3so61xtwbfquvt1fc0wsd\",\n      \"description\" : \"Repellendus rem repellat et labore in. Dolorum inventore est nemo. Sunt sint minima. Ipsam fugit cumque laboriosam non.\",\n      \"location\" : \"5mf7dftzsqo4b3kwy1gocx1an03tv0wgrnrmjr7umudcc644dqonmvhe0xbmr2bukdp2n9acstsv100shign0t7ykaqfk8h1borlo0o1al18bwh\",\n      \"title\" : \"Et modi quidem veritatis non voluptas.\"\n    },\n    \"role\" : \"i4c67plo91c2sywppv3az7vg\",\n    \"members\" : [ \"jaxx3ugfoq8846w9u19v2ty24rr4l0z9hahipc5tv7ltoaq79lmhiwfrmmhopzqi9njqgy0m3hldv20jmwqi9tttx5gwxgbxpdjehwuf5ycj9a136mjj040\", \"bayr6b1xgxb958mv2kmmtl5i148o3m5t1x7r5tb4do187t768oav8jg3pd92jneic8vz4fp05wx6io8bee1b4eofmu5cyotoxiw8jlxho5u13chm46trvo5n3ww6p0dmo9ljj8r86bkip1ql13fll8ue2emrvfr9xnqiv\" ]\n  } ],\n  \"etag\" : \"est\",\n  \"version\" : 1535170453,\n  \"auditConfigs\" : [ {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"rh4z0qqv1cxvr6kw39lxlw161tbl7vjrknd564ptdbw5x857cac8dycmqz8yfqlcb6408eux5ssnna4pqwf2ldzbthd\", \"vpbihklp6adqugztr7n7cqizmmt346tf8asl0fk4al0ac3963k7cbzl8g2510lxip93wusczq7izya8bphvpmxyeo3uh1xgzt65933l1wn\", \"fo60r3lozytgau3wu7xm55bkyqftgp419lzvpyrl5d0bk3j1i5gbwzjz8y55e5xs7g4y6gbuprumvr1rsajxxm8wuchdani3v1wtz58kn5lvekajdtgqzav0so8488f1na7gfeb3ibk85l1wttegmsjqml0dpe2u851n3isakpffgr0ztdep77m7wsf\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"6vgda5fxi0zn6rlq8fa1lsmm4y104iokkcg09tofrloecydxi1czwvketddpl9bh8o7chkozcjvn43hd1d9bq5ve3jgnl8gzi4z6tcbww2i6qcklvyliloji94l4pevpicagdh9fq1frwr8baauc4\", \"yjmyolwjctigczoothc7grccchl3uq9klw2mbh3nphw\", \"qxw91m9rpirjhyfwfmelow3r4jfq5olo2m1ab2r\", \"yb3o7o9bs0ex1oiflufbi1aabhpt2zmu515z3x5lr7sf8deyyb7tqn045v21pfpjkq9lba6r405ildsawqfio2aud4f01skyzg2hk4x8dq8rog5x8r2dw6nahwwn7rojdusodqt03dc9rfs1iqsye6s7z39llcgigw60yav6idvwo\", \"pm07k6hco6nrpkeb5vkzpax8qttp2r5ukeqgdl78ormg5ca1l1w8avxa3xsbw\", \"lsmj\", \"u54ei0r0id9ae384hlo9qwd5ku1ihxc49r848zk812hh0wwqjuc5hh0snstmfydfwz9qsf9nmaxmjj9bkiufe0c37jz8tv2cr55ht7agdd78h7uk735znhnvxvxmfzemfm0kezkstfpz4se150qhr5kgrn1zlzam4kk2d7iuafsvinmddk9ye4ctl94zbakk9b\", \"t8x1vndqq5ho6iqvsoezp10ooc2lkho9m99kh588tkmfyhyivk\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"pznxx3zu6cr1kixhj8a983reqjzgv3p66io9n9m1997qgd5p8hmkqds6a54cdg1km1k3d2728efuu4fe4uyii2hpc6z1rj5kpmyn4u85e7e\", \"ion56jq\", \"rueiy89obcfug99k6ldm1nso7jl5jvkxaayaovqqpj1442zo60y5k9guy848oy6sv14ot8qdn2uxkjtzehuw0mhz0o0cn2l6j9olq70tc7ihr7nu3cqrm9pievs2dv696gpk9tw9598pbzrcotem4f2smgussuwqnckd0xbyi3e3j\", \"2j4h2ud7y9us9\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"kqcoiaddy49bxxhyi9tq31qd7qsz0hz5tc23krfdzkahghsefws449ngr49dt1ohg0gy2zc8v0x3x2se13vclmd5oa6xv3kwe3zgaiwfef520ihwseza4g0vnybbcvqxyo7qacgyl5rx9mhjzafxf2dknk789ghypfbfgsmxz3nhzylfiu9dk\", \"j9tfmasuxc9unowytq6vkjjt2jwa4ekn4og6ijr3cyz648e3adt2yp72azr18uzh3k56rj0keiwossjcv4o8w5ed5c3wo4z6i6wbyrfdtgct51omausux23555s4o9ymy5g6mv9eiw7t9v4x0ebr114c0h689sh5z17jjqqjgn\", \"rnxgty45padsw12wtuvfyo2adckn7dw7ohxdiucmxawrcd9cxaxfjp6y5kma48wq1b6wxow3egp1qozv901rkqg2d8icxpr9gmji9mqdlueigfugj484sdtktjqvj3rdblx3q2o\", \"q3weh\", \"kwuqpunad4d0pt2ivhssbu27ylk7fp5rbwqeppmjf9ousbiaewgg8p5uiquuazza4ydgd49aczvjk5gymbl9chi781uq5zpnwzx4mzxkwsufntjpuz7trzic4ig00awatfcyv9353mobewt9v0ci425esxze2vqfpyurdrxhpklmkockfmu48fv49afu\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"d61zw9z7zgt3td2hiprmucwpz1hj97zkaucsjdufii3e05h6b2ngxx88x8100cp5juj0w5t2f00m81h02mvze5q96fwf1tu0920r5xuldjftv3h6si9n42hqibj4tgyy891o5tku9f78rm10sp6vz2t97i6uqf4hr3v5kt83rnyqvd5y08qp\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"2ecbdw3dmukw1wsc0sywtxa7yhoppkd33rf8t1xlx067f7r83vhp44ugworynvbuiuvpvylingrrh0lkj60ujtasn73payhv\", \"10ulyzyd176usyuqsin1fsxz017epcvv11v98n4dsmhx1cc4yldsvmot7ymt3dbm0ikcjk82zm95xccmgm9kf3edc7vfep5ofgc38qyi3vph8xs4cda66u5m3eri6w705x7l38yin21dmsyk569d6gv5golka7rg2ri\", \"emqipbo62g5e2q3ff7f5byfnv70an83zqhxckvx77dug3798397mppiqyl2923gtv3zeym6hod25i74nvn48nil0dsqtrr2bzu0tm35sz521tnb1bm\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"n9ryv31winxbr4y6ec2ro5n9vgeiji8sa2fumzzao76xau73uey5z32l6jb9pridkp8ftobgp9se1pa0\", \"phdfutqfxgswu475dujk3qsq3v0tlvkw1sj9ez2y2883p4u18fqnd221asg98p6jaclmq\", \"a2qdc7ap0tfie\", \"kp1r2pgnqs9mz2uqde1w7uqds5zeypgg9llytt74ztf4tsm8ym2w4oata5pfei18kr8n9ug46gb6paejjy\", \"c5jz3q7e96oy6kxk6gbumm6z8gzklyymmezu454lt1iqxnp6zu3619lbulpcqlgpahk1ys2dwepiuxri6mt80grblymdkny7ic4qyp5yoo6m6zuw5cmdi0sa06r4fb42s3etbx8grnbhshopv\", \"o20xuzlorgo35esedv0u3jc95unurs20e09qnw8q9bw4b2gcp5ahzrbgmxk4qnonj4niarck1075hmhec4t4buhl59qoe3x18ikuohtlhwhd68sdxmx4si9gru6m81ye1yzg5sieq7ziu2oofc8xtb83gbmyks7hevv54mc6g8fad3q4gm34f7id\" ]\n    } ],\n    \"service\" : \"2e5k1p5i53gsyt2w0s08um6aixgbbzicaedlzfa1mp961yajwttavw1j9e1u86a0wa01tfkws57w1fha9mw03qwh4b988plb88c3v8gi\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"xpbs\", \"6f3gfa555zu607bx9ozbrlh2i1pb7l9u73knd42a7xjih1q3cru\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"4z4j2b\", \"1b0w6kn56x4xxcg1t53idjmf3z3ok3s2lemq64egc2t13o66kvqqmigq4s7bc978krsvp77bl989e9dv5swd570fzma8by3uf9ny07s3bzdfhbza6llst2\", \"8w6rf2191sqs54nqpwhgfwwmbuoxos5qpesacypu6mp8expnob61qztzdjnm7cd5a79manh0vkt7shoew3ld3r4ibzww21s07b2wc245me9180kxzhsurvtbcdcrwiuh8v5oewv6e5lht2x6f8hy2zj60tuihtyqpq8ltry0agickzysuc4166vvu4ux3p5mm57\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"vyvqw7n0ncqsgj83eqt8c1tcxyzx8btoxgg21vosp7c7yw0n3mz54sr0gfo8f8yhfir75nxoerg47qpuebwrg1om9m1b7c9msjnh6n66cqjqr976zx0d08jopo\", \"7j4536b0p4dc3p9usa49q0hxj83r1ac4q4a4hdelj4412nmtkyuyp2bimesgih7e30ppabbz1cb5m1pmo8wchsd2ni2bhyc7j4fh7nvti20vpqgklsmu6jjcl2wbik6kpdquu2lou8t2panompvgtiqotkf59fyoupb2g32733s3sqkyn95qw2l\", \"vgjera8i5jdtpc7sbhfwamvne22cfkxxd73qg95ptcewolizqbsvjpqok498lomd9gy1dk7cx4f3vkischqzz2v46nle5v183zkf3xjhjbsx41ijr343wa5mlnkpie33j54uwygqsp5aljzo59\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"rdt6ls1t\", \"f11j4j3vg9tqh29c9ghawlze49ymp0n4dk3w4uwemusue8pmzlbofbch36hh51rox1lqzg6dnhf5rnihix2vavjkwr6oszi64y25txjag5vl0qsf5gn6vr751w6j4csbozj5lic843zbx6bzdaxkkwyw4cc9mnluf2k20l\", \"cvajgx7akhq73jo8dgsjgb8jrtok4juqmeklzzpdr9a9cge9zssx9zxkrw7vg93wog4r6uh5shdaz8vtyd088nhh\", \"c4dpbujivj4d7u14m55c3qf4kkavo2of534jtezi0yyq8buwczsi7k4jlrpz5acr3rb54nl9jj02dumsniocyy8bs3zhgul\", \"dz44kdixc9dhg6fsk1m4lk52oa4sb074piygz0rydkdaiplukh9etcx2bx513esr7pvsam7oytt32wkri09wrteksghgyz8bttj2kfi\", \"if33aowrncqf0ijakazpdn0jeyg4zvlolypjhtso9t63q2esiydie6s44z8nu38133iqv31ivezfr4m9w97fana8uhik2cemeefrslo9768ysc\", \"j54xzo6e78wrzh1c304gysashsn8rixsu83wr0oa0bjihea018o\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"mh5vwmfwrfbjni98yn44eu89nbgg1ahflvcjwnhwx9ohnnayv8pw1npkzfn8a7wr4l3g3axnckagml9tqo0qum\", \"rj0ootjdk7bob8ea9ykuep3wf5rvu2m3q9d5kb6i6qk0m6sta1ex42k7d1vwxcxoaqmzcw3ntlskps69qtq7j\", \"tbqjkl1q0i6kvn6n8ia0c7uwuiew3ck9fpxp7j55sguw42975jd739hbkog5zjccsa4akmvpofjc1u6fbip\", \"axjhgqltrmbunrqqthrthnm4d06m1ojajbk5zs2rvmqd0spbgfy9572iwb1ts1\", \"fi8fivuy00q7eombm7ofcwde99auljpjz2ovte5fhnjfzowxgqcw9l18q313f4yn5wm60kjb89hnqj20fw7jden89mkzofyex83h1lxg3fhv7i94qrh\", \"qi8a9286hkpz5ttv5oh02spfk3uuj2eni2439469xxt7ahsr0w\", \"2erwlea8a262t15zofuozl2ozvxikay60p5wqmp5kprvdk2hizj34p58blfpzlrrw8rt0ud0su0lrh3d4i7877tjdxw81o9keeikmeh94v79mrbormt9d2dmv0ti6ikhyk8b0rfn2pqoziv11r9k55upqqtxf0\" ]\n    } ],\n    \"service\" : \"k5wefjrgpx4fxu0zwnld59fih4gyoq7zoie2uarprgjb7pvnipv4xnov8gsh2btnxk1k4jiejaqjnq1zv5ufz45ojk3akp1578adjyyualmqn9iszhcj7ym\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"bqtz9q32my3qusdptvgannbybxraidhnyjh2o1to3zz11s0q992hmg08jjshadescelh0m3q4vy1lkerdat4szrrwu873isg0j2n5eggb2qafb9uuow28qzxnntvfxc3uu7lm6wmi57b7386jqxh42kdn156cir0bsdq53b1dznhkerrko15e73atgc\", \"0czocfukbz9zzjen1xrbymot99uu2wh8oftzjd3dz7n3ykd82r14sjgrqpuyice74ul847blyf7zlmyqibvfvz6by3br0gqw8omhlurtqs92zwafd94m78pzvrb\", \"yj643anv64g6zrf9nld1yw7muy1yltudsburqqvg4738ec348411j70lfo8bjchcvfq87xz288sm8l1pjqmip7cjndj61kf7j0e1p886mpljg\", \"x24zot91k55m6kagxjfqgf3h\", \"63gynsas7kv9vu6fmt\", \"c97v7qe93hyxgo8krxdom2w0p8esit41y7koo932z1v10owom3pkdj87fbswy5ohovojs8ctot94ol5\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"n79rl0epwl77k7\", \"skbb6uehazec1u2g6hjj36b82j1bxuoks04yqgw8q9igr1tk4ixfy84g5obhh37jq2mefrhtk2bdnitblv6ojkzsf5vni194zy7im67mg1lo6db71jgokb9d50nffpb6a87ndydhp0zz24113w1irwo3bfdys5zqt0krmyvabdig0ihcgsiyaku1\", \"tafufna21w3p1wl553wvqq6pecq9x4a6vad1twvnph9n0t27ewd3ld8cgfhcrnbnx5549d7auvipy7rpqqc0lmgt6dc5vhuf0wd95nnlalda\", \"1ulnkmogirnd9hvzo8q3f\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"isvb1z6sbeftnof9tqquf13uyhzgbjx7xd9e1hoixpw8bveu9mszbfa09t03z09af5\", \"rz15i7cbawgpaekv90i5fk2p4w5vdoad7apsc4pft3sju9ukg5u4ojlqmkd39zflq6jnk485fdit6pb0jhuxxj8j95q5qhlybox\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"k3cn2bwv9iow6la7ckpsqikrqdk7b8kig1jdcat8nbnyv7inhh7ja2ohtgvszxviemwmo31cgyqc7cxf8jdsv6gvcyv5k30fhrok2zwxu5o461g3rkn7j2idzn0kebq15knthph9v0\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"v9s69uzrae1wkatiyzheur664u6q9wadqky7k0sjhwbe2peydihuu5dvm8d8ngkjv493ubpnjfo1xedg4zg4wzqjge0lc45p98ifd0fk40okx61b37wvdjaxkv1owk979t5rlhhgnbrt636c9yjd7bv6w0fnvs8r\", \"9uqdg3yx8rngxok\", \"5qq7c391pi60b9\", \"euhs4ipkt69g7wpwa5rqqz6ifxxrk0ugnsutm35xvic2q74rh92xls9wvx7ufp30cggk6g826kambil4ettcrq05v1hpzlaevkt0ks5zz8yo63zp33161d0krehwjrz36qspu85t3aa1o\", \"b6qdd983bwt7vh2r74yquff1ob3rirn9ykw227biz6baqnjlagxv2njh3jkt5bfcf\", \"wj3scoxqlnnk8wc4tivcxju7fznyu866ouhx25x\", \"0domn8qc2y04hibg0nl8rw6rmriam7axzc7fprmt6y2a291u28pp7z4sa9m358rhdwmhbuciehiz3i9tx9kykstuwrf16pcham5e1yuvzvgr6j7upqeb3jyo8de0z48o6qm0zax5gbre52goiaq4kk173k9g2zhqy7mwwp2oxybw1uak16w0zgn1rcs5clq4t7k\", \"hma1w3hb77wthcd4sq5advorb3ptp6vafotphsbobwqgh0ymo1\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"w5n9zg\", \"44i17b4259tzec8ztm3qs42zibxsnjrke6n7vt2l14rofo7onj63dur22ql3piqr15cg1xssy4ienbcn11z0xdzridgcf65b2x6j0131p22nl2b45iaa0u6wuf2e61xqol4p9janbx04e5ngxanxn78kqggihl3mq5mhng3yutvc1421k8j\" ]\n    } ],\n    \"service\" : \"qorluchpl0i56jx6ygtev7sjrhr3enxxhtofx3l3k82lbpjb16f88rl6ucvjn7y46y016mgx\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a215222e-5d65-4d23-9d96-41e44c454412",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:05.715761Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.clientGateways.getIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "auditConfigs" : {
                "description" : "Specifies cloud audit logging configuration for this policy.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleIamV1AuditConfig"
                },
                "type" : "array"
              },
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleIamV1Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "2ef3115e-8a3d-4bc4-b8d2-fc67b2d0e3d7",
    "name" : "Creates a new ClientGateway in a given project and location.",
    "request" : {
      "urlPath" : "/v1/wqwe3mb0qig7ry98a4bvam80to0njxnqt8teiuyanrp/clientGateways",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Karleen Lindgren\",\n  \"error\" : {\n    \"code\" : 41022041,\n    \"details\" : [ { }, { } ],\n    \"message\" : \"Sint nesciunt id ut. Quo assumenda excepturi reprehenderit quia voluptatem ratione tempora. Ducimus quaerat asperiores non.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2ef3115e-8a3d-4bc4-b8d2-fc67b2d0e3d7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:05.713872Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.clientGateways.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "2c869a4d-54d1-4d2a-b3f6-8e5b99813187",
    "name" : "Lists ClientGateways in a given project and location.",
    "request" : {
      "urlPath" : "/v1/k0074glxnuj849be5wei2hasnekgurenn2445vq3zwuivm8k6zmph7fl4lwue27gcm3fjcw31l81gpw6rsb9uwkmpoe20f8j2j3o4ndr6oof5z0cgyehoaqhqorf9f7t2tyddohp/clientGateways",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"unreachable\" : [ \"g3jticihus3siefjhoi5q5zfpxj0pikj5g6hwc5y5pmovhw424z2xvwt1opgwkd3gpj56r2ue7gxd81d3q9acwzb95xicz7lnpn07ojg6djrvtmp2247bare99uogswcgxp\", \"39rdymq89lcyqo\", \"1drecbzipbt1h08rnuk87i49hws25kolfykzuj8g2avlynfjefz3q5aqnq1ivgw6v4b\", \"dh8e48jkrvyrz5w4y01lvf29ebgyi0uxspvbr5du1adqpwz2lw5iorkai2vz5fs2th57ea0z96kd5wgbhhd8s18w0q2k7le1swx47aoa9hp2rhbocu6zm5872lrfltfx59kwca85ccbwaa9hsdzhzpne2mm\", \"mv4b3xlo1jqrv73vv7o5mtbq7sy1or9ziktxxdg13n4m9anuzutpazq4t9tw1ouuv1rgj745y40m516lhea876t7ygny9ubenjijdca5h327q4jw5lp8jm3nh7mz0exxn\", \"ljhbuof1n31hou07ghqgjv3bx5ffox36ajr9gl5\", \"rtcjyqduvnj3154yqhyxqlmxk9ocnodkcyn76jboy7jq16r154vhzpo7grpbt8l4usw4ogm88w3s4gnrj59xski2fcpzupjhxdfn9aua636f7sm4vlogai\" ],\n  \"clientGateways\" : [ {\n    \"clientConnectorService\" : \"ttq4kj7fq3auj9cbi3010gq7u7f91m8nbqs1l71r49v76qco5pwlwj436leca1sbhiui0mvu3j5t30l4jrxki4st93kfsn758v0frqi3k8s0afbw8shxfoy7wfcgaoy47mi0c79ruz\",\n    \"createTime\" : \"2022-09-19T12:50:05.71285Z\",\n    \"name\" : \"Jimmie Schinner PhD\",\n    \"updateTime\" : \"2023-01-18T12:45:05.712922Z\",\n    \"id\" : \"zfvt\",\n    \"state\" : \"STATE_UNSPECIFIED\"\n  }, {\n    \"clientConnectorService\" : \"ece2vcc1tcuszhzv4kzte72ake29f3gadtcpncc3lqkuclfybepjv39hmhiqvxr19bjyqivjqnrn1d9m5vq4l4lv4ljfq\",\n    \"createTime\" : \"2022-05-26T11:55:05.713062Z\",\n    \"name\" : \"Glennis Casper\",\n    \"updateTime\" : \"2023-03-08T13:27:05.713125Z\",\n    \"id\" : \"5309\",\n    \"state\" : \"UPDATING\"\n  }, {\n    \"clientConnectorService\" : \"p6n0ju68e54odx6r0rxw30brp1j8zx703gd8t1i7aiv7ywesk7lwebqwq448sh56d751u2exnkq401vci5vvd5skp2m8jsbxcdwsqb4hen1ctovnitg2qmep042s0jilj8i8ggm3ns86rtxll3fxjuzxjd0hvex6bfmm6j2n8m\",\n    \"createTime\" : \"2022-08-05T13:52:05.713243Z\",\n    \"name\" : \"Marna Prosacco\",\n    \"updateTime\" : \"2022-11-26T13:55:05.713303Z\",\n    \"id\" : \"ed5r\",\n    \"state\" : \"ERROR\"\n  }, {\n    \"clientConnectorService\" : \"0ywsrza0gjvw8korykadihoizun6d1t5\",\n    \"createTime\" : \"2023-03-08T12:51:05.713416Z\",\n    \"name\" : \"Eveline Hackett\",\n    \"updateTime\" : \"2023-02-06T12:06:05.713485Z\",\n    \"id\" : \"j5q5\",\n    \"state\" : \"STATE_UNSPECIFIED\"\n  } ],\n  \"nextPageToken\" : \"k2mrgvqwnpnzfonx5n595041ru9ub8cmnm8vxzgp36t5fphqrv6ye99v2233xp2lg05lz71ke94qu73hs40rj1zjhrf9vt61ygdmbvtk0066trmux4o9sbrr2dhdni1cn7c5eotw0e9e38u1ddsnikhdfo1u19ajdrajbylhjbvi4bu9eqtpgcn\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2c869a4d-54d1-4d2a-b3f6-8e5b99813187",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:05.713681Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.clientGateways.list",
          "schema" : {
            "description" : "Message for response to listing ClientGateways.",
            "properties" : {
              "clientGateways" : {
                "description" : "The list of ClientGateway.",
                "items" : {
                  "$ref" : "#/components/schemas/ClientGateway"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token identifying a page of results the server should return.",
                "type" : "string"
              },
              "unreachable" : {
                "description" : "Locations that could not be reached.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "f3775c64-7b3f-40a4-9058-da412ad2d3eb",
    "name" : "Creates a new ClientConnectorService in a given project and location.",
    "request" : {
      "urlPath" : "/v1/34p9i6l865z4fhk7lsvxbuezpv96uetr0evh2spmnzysxa3/clientConnectorServices",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Lura Ziemann\",\n  \"error\" : {\n    \"code\" : 2102640099,\n    \"details\" : [ { }, { }, { }, { } ],\n    \"message\" : \"Error ad unde ea qui nihil sapiente. Aut incidunt quibusdam commodi fugit natus consequuntur necessitatibus. Dolores natus dolorem reprehenderit est.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f3775c64-7b3f-40a4-9058-da412ad2d3eb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:05.712735Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.clientConnectorServices.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "605d8b85-e37f-400e-a62a-111099f3a2d8",
    "name" : "Lists ClientConnectorServices in a given project and location.",
    "request" : {
      "urlPath" : "/v1/q2c5e0srdoecolpp8skkjj1iw1fll3hfmbf038qdq7denxrdlnrpl78rb45kmhaidrd4om374i3n27q74muaijlnmpx8qx571znahx5l0mm28ce15zzia3j0rskw95afxqjx4zq7cu6g7c2085lq4n4svet5/clientConnectorServices",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"unreachable\" : [ \"yzr97dg6osyxb9zlrs1myqrjnq55x1\", \"l62w5zk72h5zxocsir0ffu9xg5uya14yrvfvfjk3l61ujjocb4f3\", \"c40\", \"6sicyucs1z3psn6olz87ews8edlp6tcvrlnyokdnz23lhmoy45o547golyhohp6nmuyz7pvxsxy0f2fnv9cfpjlducs1g1snma4v3i269ohjzq0oe5kh4x6vrxfninuqtwk0j\", \"z78oa2p7frfw14avk9i9aiw766tv85271jnicoviy4t47otvb3qnsg1i5tfpohjpwoaabbcgorsdlm4vot4iwxajb1jw2mplhe0gds2\" ],\n  \"nextPageToken\" : \"r0xae4inzprwzuyk1xpz1ojg6k2okkwwx2a3hylclc1v09xq6i4iql6wzkyjk88w5ygya2x0q6tooqqt2vqlcdsxh6u7t8wnmajy9szrhtffk6il9qvz1cqwfayi8kwwdlumqiiez36w6xwd4deozr3gh46y31pcpmz89yuhf5nof9wun58o8ajr5jpmnj9rv2o0ys\",\n  \"clientConnectorServices\" : [ {\n    \"ingress\" : {\n      \"config\" : {\n        \"destinationRoutes\" : [ { }, { }, { }, { } ],\n        \"transportProtocol\" : \"TRANSPORT_PROTOCOL_UNSPECIFIED\"\n      }\n    },\n    \"createTime\" : \"2022-12-26T13:29:05.711906Z\",\n    \"displayName\" : \"Mallory Harris\",\n    \"name\" : \"Mana Kirlin\",\n    \"updateTime\" : \"2023-02-11T14:21:05.712015Z\",\n    \"state\" : \"CREATING\",\n    \"egress\" : {\n      \"peeredVpc\" : {\n        \"networkVpc\" : \"vci5lrjoqa938zxk08pbnj5x8ykt1wp86uejt1tkglnl2hg8oy6o5gql80htapo381y12jnhofjg2d9kbo206sa2k78t2lnggmm0k1ied0j1jbr78tb2qq0nr7arylxz0hh23801k3sizirykj9ulqwpinrdbc7f0qo87nbvgap5lqn8esq4jlrgdtvi\"\n      }\n    }\n  }, {\n    \"ingress\" : {\n      \"config\" : {\n        \"destinationRoutes\" : [ { }, { }, { }, { }, { }, { } ],\n        \"transportProtocol\" : \"TCP\"\n      }\n    },\n    \"createTime\" : \"2022-07-20T14:48:05.712116Z\",\n    \"displayName\" : \"Alex Smith\",\n    \"name\" : \"Angelo Hermiston\",\n    \"updateTime\" : \"2022-10-29T13:55:05.712214Z\",\n    \"state\" : \"CREATING\",\n    \"egress\" : {\n      \"peeredVpc\" : {\n        \"networkVpc\" : \"xna6u8i8stjd1o3i67ddghrkk6bpr1034ktdwdlzbgjp8dmf3sm650l7u6xayzfzktowjbtq0v073dfh4uly5yvb88m7llidetttxey9s50vpfiog90dpk15egcfec6lmw6b575zrwdumjof8khftti1yi9w0n6cf14m21oloe3qta3rvx8o9ulit2by3anepdjfqp\"\n      }\n    }\n  }, {\n    \"ingress\" : {\n      \"config\" : {\n        \"destinationRoutes\" : [ { }, { }, { } ],\n        \"transportProtocol\" : \"TRANSPORT_PROTOCOL_UNSPECIFIED\"\n      }\n    },\n    \"createTime\" : \"2022-06-14T12:50:05.712294Z\",\n    \"displayName\" : \"Elroy Fahey PhD\",\n    \"name\" : \"Gabriel Bradtke\",\n    \"updateTime\" : \"2022-06-11T13:44:05.712393Z\",\n    \"state\" : \"ERROR\",\n    \"egress\" : {\n      \"peeredVpc\" : {\n        \"networkVpc\" : \"re3r8h6qon4s7laxgbql3b9bql64m27hc4a782nktnhvzciuefp38p7lasal5brt4m6ee1omqal5un8ram4fx7ogykz9xx3stf1gbfqv1ggjo5vxfank3e84g5977026dypte7hswped26kb3gu2pobemjlvikaq\"\n      }\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "605d8b85-e37f-400e-a62a-111099f3a2d8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:05.712534Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.clientConnectorServices.list",
          "schema" : {
            "description" : "Message for response to listing ClientConnectorServices.",
            "properties" : {
              "clientConnectorServices" : {
                "description" : "The list of ClientConnectorService.",
                "items" : {
                  "$ref" : "#/components/schemas/ClientConnectorService"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token identifying a page of results the server should return.",
                "type" : "string"
              },
              "unreachable" : {
                "description" : "Locations that could not be reached.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "be23de4f-c26d-414c-8e9a-0c190eb6ae8f",
    "name" : "Creates a new AppGateway in a given project and location.",
    "request" : {
      "urlPath" : "/v1/ge9pwx53jt/appGateways",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Minta Runolfsson\",\n  \"error\" : {\n    \"code\" : 1790262355,\n    \"details\" : [ { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Voluptates aliquam qui. Debitis non dicta. Impedit reprehenderit autem nesciunt libero fugit. Et nobis dolorem ipsum. Inventore ea autem.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "be23de4f-c26d-414c-8e9a-0c190eb6ae8f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:05.711749Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.appGateways.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "b846a066-e18e-47ba-b615-cd1a146cd768",
    "name" : "Lists AppGateways in a given project and location.",
    "request" : {
      "urlPath" : "/v1/ra8igdkwewmkna46f64zout9k1b4o8snn4v050xzyj1tj2aa38q8vyfzke33ffc97w37bn0mfggdpnbf1q1hus18ogcjuepms5dbj52/appGateways",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"appGateways\" : [ {\n    \"uid\" : \"771z\",\n    \"allocatedConnections\" : [ {\n      \"ingressPort\" : 428256299,\n      \"pscUri\" : \"https://web.example.mocklab.io/589570\"\n    }, {\n      \"ingressPort\" : 833472550,\n      \"pscUri\" : \"https://web.example.mocklab.io/599332\"\n    }, {\n      \"ingressPort\" : 1715532015,\n      \"pscUri\" : \"https://web.example.mocklab.io/707793\"\n    }, {\n      \"ingressPort\" : 1560647181,\n      \"pscUri\" : \"https://web.example.mocklab.io/409027\"\n    } ],\n    \"createTime\" : \"2022-05-15T14:15:05.707128Z\",\n    \"displayName\" : \"Miss Lamont Greenfelder\",\n    \"hostType\" : \"HOST_TYPE_UNSPECIFIED\",\n    \"name\" : \"Lino Roob\",\n    \"updateTime\" : \"2022-07-29T13:10:05.707261Z\",\n    \"state\" : \"DOWN\",\n    \"type\" : \"TYPE_UNSPECIFIED\",\n    \"uri\" : \"https://web.example.mocklab.io/250529\",\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"r9ou\",\n    \"allocatedConnections\" : [ {\n      \"ingressPort\" : 192142069,\n      \"pscUri\" : \"https://web.example.mocklab.io/760705\"\n    }, {\n      \"ingressPort\" : 1954749896,\n      \"pscUri\" : \"https://web.example.mocklab.io/989519\"\n    }, {\n      \"ingressPort\" : 1406253029,\n      \"pscUri\" : \"https://web.example.mocklab.io/836502\"\n    } ],\n    \"createTime\" : \"2022-10-15T15:34:05.70766Z\",\n    \"displayName\" : \"Robyn Cummings\",\n    \"hostType\" : \"GCP_REGIONAL_MIG\",\n    \"name\" : \"Cherryl Harvey\",\n    \"updateTime\" : \"2023-02-04T14:16:05.707771Z\",\n    \"state\" : \"CREATING\",\n    \"type\" : \"TCP_PROXY\",\n    \"uri\" : \"https://web.example.mocklab.io/808036\",\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"code\",\n    \"allocatedConnections\" : [ {\n      \"ingressPort\" : 1911188736,\n      \"pscUri\" : \"https://web.example.mocklab.io/360317\"\n    }, {\n      \"ingressPort\" : 361372700,\n      \"pscUri\" : \"https://web.example.mocklab.io/758557\"\n    }, {\n      \"ingressPort\" : 1032835901,\n      \"pscUri\" : \"https://web.example.mocklab.io/207047\"\n    }, {\n      \"ingressPort\" : 1099698382,\n      \"pscUri\" : \"https://web.example.mocklab.io/429106\"\n    } ],\n    \"createTime\" : \"2022-11-02T14:05:05.70823Z\",\n    \"displayName\" : \"Mathew Borer\",\n    \"hostType\" : \"HOST_TYPE_UNSPECIFIED\",\n    \"name\" : \"Benito Feil\",\n    \"updateTime\" : \"2022-05-02T11:59:05.708358Z\",\n    \"state\" : \"DELETING\",\n    \"type\" : \"TCP_PROXY\",\n    \"uri\" : \"https://web.example.mocklab.io/269137\",\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"4097\",\n    \"allocatedConnections\" : [ {\n      \"ingressPort\" : 21183669,\n      \"pscUri\" : \"https://web.example.mocklab.io/624102\"\n    }, {\n      \"ingressPort\" : 1985341945,\n      \"pscUri\" : \"https://web.example.mocklab.io/610244\"\n    }, {\n      \"ingressPort\" : 102591662,\n      \"pscUri\" : \"https://web.example.mocklab.io/394236\"\n    } ],\n    \"createTime\" : \"2022-09-20T15:39:05.708747Z\",\n    \"displayName\" : \"Carmine Mueller\",\n    \"hostType\" : \"HOST_TYPE_UNSPECIFIED\",\n    \"name\" : \"Jordan Reilly\",\n    \"updateTime\" : \"2022-04-30T13:04:05.708857Z\",\n    \"state\" : \"UPDATING\",\n    \"type\" : \"TYPE_UNSPECIFIED\",\n    \"uri\" : \"https://web.example.mocklab.io/573783\",\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"bb8t\",\n    \"allocatedConnections\" : [ {\n      \"ingressPort\" : 356479354,\n      \"pscUri\" : \"https://web.example.mocklab.io/256251\"\n    }, {\n      \"ingressPort\" : 1187538206,\n      \"pscUri\" : \"https://web.example.mocklab.io/506942\"\n    } ],\n    \"createTime\" : \"2022-04-02T12:03:05.709202Z\",\n    \"displayName\" : \"Lisa Reichel\",\n    \"hostType\" : \"HOST_TYPE_UNSPECIFIED\",\n    \"name\" : \"Ms. Bobbie Jenkins\",\n    \"updateTime\" : \"2022-07-08T13:21:05.709313Z\",\n    \"state\" : \"CREATED\",\n    \"type\" : \"TYPE_UNSPECIFIED\",\n    \"uri\" : \"https://web.example.mocklab.io/865331\",\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"n608\",\n    \"allocatedConnections\" : [ {\n      \"ingressPort\" : 302641488,\n      \"pscUri\" : \"https://web.example.mocklab.io/184624\"\n    }, {\n      \"ingressPort\" : 1899010789,\n      \"pscUri\" : \"https://web.example.mocklab.io/836326\"\n    }, {\n      \"ingressPort\" : 345257686,\n      \"pscUri\" : \"https://web.example.mocklab.io/990436\"\n    }, {\n      \"ingressPort\" : 85297568,\n      \"pscUri\" : \"https://web.example.mocklab.io/199447\"\n    }, {\n      \"ingressPort\" : 209122593,\n      \"pscUri\" : \"https://web.example.mocklab.io/156354\"\n    }, {\n      \"ingressPort\" : 38958532,\n      \"pscUri\" : \"https://web.example.mocklab.io/898620\"\n    }, {\n      \"ingressPort\" : 719203593,\n      \"pscUri\" : \"https://web.example.mocklab.io/157593\"\n    }, {\n      \"ingressPort\" : 51934857,\n      \"pscUri\" : \"https://web.example.mocklab.io/782982\"\n    } ],\n    \"createTime\" : \"2022-10-23T11:55:05.710033Z\",\n    \"displayName\" : \"Miss Leatrice Kilback\",\n    \"hostType\" : \"HOST_TYPE_UNSPECIFIED\",\n    \"name\" : \"Tracie Parker\",\n    \"updateTime\" : \"2022-07-16T12:04:05.710153Z\",\n    \"state\" : \"UPDATING\",\n    \"type\" : \"TYPE_UNSPECIFIED\",\n    \"uri\" : \"https://web.example.mocklab.io/426620\",\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"6376\",\n    \"allocatedConnections\" : [ {\n      \"ingressPort\" : 1836831457,\n      \"pscUri\" : \"https://web.example.mocklab.io/751798\"\n    }, {\n      \"ingressPort\" : 30701672,\n      \"pscUri\" : \"https://web.example.mocklab.io/864312\"\n    }, {\n      \"ingressPort\" : 1810349422,\n      \"pscUri\" : \"https://web.example.mocklab.io/781143\"\n    }, {\n      \"ingressPort\" : 302231214,\n      \"pscUri\" : \"https://web.example.mocklab.io/351076\"\n    } ],\n    \"createTime\" : \"2023-01-23T11:45:05.7106Z\",\n    \"displayName\" : \"Julia Powlowski\",\n    \"hostType\" : \"HOST_TYPE_UNSPECIFIED\",\n    \"name\" : \"William Schaden\",\n    \"updateTime\" : \"2022-10-18T13:47:05.710712Z\",\n    \"state\" : \"CREATING\",\n    \"type\" : \"TCP_PROXY\",\n    \"uri\" : \"https://web.example.mocklab.io/953831\",\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"020b\",\n    \"allocatedConnections\" : [ {\n      \"ingressPort\" : 633346385,\n      \"pscUri\" : \"https://web.example.mocklab.io/115758\"\n    }, {\n      \"ingressPort\" : 1566636155,\n      \"pscUri\" : \"https://web.example.mocklab.io/877980\"\n    } ],\n    \"createTime\" : \"2023-02-04T12:26:05.711028Z\",\n    \"displayName\" : \"Lawerence Kuhn\",\n    \"hostType\" : \"HOST_TYPE_UNSPECIFIED\",\n    \"name\" : \"Cher Roob Jr.\",\n    \"updateTime\" : \"2022-03-31T15:06:05.711144Z\",\n    \"state\" : \"UPDATING\",\n    \"type\" : \"TCP_PROXY\",\n    \"uri\" : \"https://web.example.mocklab.io/747589\",\n    \"labels\" : { }\n  } ],\n  \"unreachable\" : [ \"rdw15xbiqyo5h5g7kc0g2pcv5dxp0ccrdbod5\", \"ku2kuzaetoxp8z5q3gpua4tu847a4rc1mays54f1t9qgykws50sbt5obhwmnxx0bom1sa\", \"dnyej8fw7ctolw\", \"d9o6jjvpvu6hyhykxgrn7yejkwty6pj1bx7dg10kxkuei89w7lhvzrirgoqcb70fdnw7c5p\", \"yhhm458cbke09z4sqlabw3k6ior6l7co45uh8xtt8m3k45ycdcti0ewgbgvgl2ek7wn6t8x6mdx6wdxqdc1uvtt1jag3v5jkemnw2pdv6kkba4l0z16g00hkengbxdnmgji84zlxujenmuhw780n77q5tjvc\", \"jhrdm4oxtdwbtd9bydhymsx0bzskpuii7sossb5rxmqufkuvfqu6z1t4v18okvd6u29pwq4vfu9wbb33iyslrvhc3lb5sepb272zfo2\" ],\n  \"nextPageToken\" : \"0v7v5eu7to\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b846a066-e18e-47ba-b615-cd1a146cd768",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:05.711472Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.appGateways.list",
          "schema" : {
            "description" : "Response message for BeyondCorp.ListAppGateways.",
            "properties" : {
              "appGateways" : {
                "description" : "A list of BeyondCorp AppGateways in the project.",
                "items" : {
                  "$ref" : "#/components/schemas/AppGateway"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              },
              "unreachable" : {
                "description" : "A list of locations that could not be reached.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "e13cbb12-9179-4779-a2af-9f22e2737091",
    "name" : "Creates a new AppConnector in a given project and location.",
    "request" : {
      "urlPath" : "/v1/nrau985vod0xsyh605h9fercnz2fp2pwq81zutnaeq0bhjmidz0dpt5pzx3zr00tuh74lozr79g6urzdqn4fr9x3sleqyjkr8lz1qye7p4z65arr2gxrsxxll8b4arqffktq/appConnectors",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Dr. Josh Wilderman\",\n  \"error\" : {\n    \"code\" : 816747377,\n    \"details\" : [ { }, { }, { } ],\n    \"message\" : \"Dolorum et et molestiae incidunt amet a. Est est eum velit laboriosam veniam. Ipsa saepe qui libero earum deleniti. Consequatur quo voluptas suscipit dolor ullam.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e13cbb12-9179-4779-a2af-9f22e2737091",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:05.706676Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.appConnectors.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "3921168b-d552-4a70-a001-9967fbdc79ed",
    "name" : "Lists AppConnectors in a given project and location.",
    "request" : {
      "urlPath" : "/v1/h996gvc6d6xarftztighwmyeql1p0j6ns4lhjca56jsglcr5xi5t8qtn3dk63cj9tmrfwhcwxwwpaxbsxm4ojagt9srb35o54ut5zgovjcyvmf2g08jn7itln0esga2domx8gl9tjhi0eob8encsykbuqa86mcbjyl9d/appConnectors",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"unreachable\" : [ \"1hnmi92lugxxhnelydl00kqksmt0qxm5xpnpvodrhtsrd6gba3t5xmt0qcadp43d75w5ora6bmooztp3y2bcfvubti\", \"vb8sptitxybqvqbdjqm619p1wlqff54b6zzi7zdz4kblisjb9qyd37frb6r3yxgb0ec0iq4hcqui\", \"7ip8o1ny3jqzvsu1kyea7a1sgpyoe9f8qlyjczx0i98af3569m4f8ft0c0wdps3oanfjfocekq3mre3dqrwmzp9eow8pr5kvfv6maoygbbxfo2gh9k00yk0qgiq14oimp61y03g4d7culubbuaafkpshkq6fm2o0cgz\", \"osnmgcsxy8rpjbvm4sps6fcivjtp7a20pyzvcd7ivwlshgbxpy8qk52k1tjgbfhq8gy0ug1lu9zwgpyze50yee1aniy20c2x723kd5mr7jxor92ptq\" ],\n  \"appConnectors\" : [ {\n    \"uid\" : \"r77y\",\n    \"createTime\" : \"2022-09-04T12:49:05.705597Z\",\n    \"displayName\" : \"Dr. Simonne Beer\",\n    \"name\" : \"Michaele Nicolas\",\n    \"updateTime\" : \"2022-07-24T14:30:05.70573Z\",\n    \"state\" : \"DOWN\",\n    \"principalInfo\" : {\n      \"serviceAccount\" : {\n        \"email\" : \"pds4nk6qwe4ufbbr8z40p75xpf0i15bofrvskeked9zezxxb07c8e4f9395kjzv0fe5nua7qpbl7gmc8kxcjqssymbc4082rklk18fevgeukd8k64y33rn6z6wcn4plejsdkqoajyq9icta6z5bpy88pyd4lvebjwp8ekjmtawwld0a3a7e98d4mnh6q5bo06hcdmvb\"\n      }\n    },\n    \"resourceInfo\" : {\n      \"sub\" : [ {\n        \"sub\" : [ { }, { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"98v0\",\n        \"time\" : \"2022-10-27T13:35:05.705928Z\",\n        \"status\" : \"DEGRADED\"\n      }, {\n        \"sub\" : [ { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"5o0j\",\n        \"time\" : \"2022-04-02T15:00:05.706063Z\",\n        \"status\" : \"UNRESPONSIVE\"\n      } ],\n      \"resource\" : { },\n      \"id\" : \"4c1m\",\n      \"time\" : \"2022-09-23T12:56:05.706193Z\",\n      \"status\" : \"HEALTH_STATUS_UNSPECIFIED\"\n    },\n    \"labels\" : { }\n  } ],\n  \"nextPageToken\" : \"5cw70gq1xmxt\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3921168b-d552-4a70-a001-9967fbdc79ed",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:05.706387Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.appConnectors.list",
          "schema" : {
            "description" : "Response message for BeyondCorp.ListAppConnectors.",
            "properties" : {
              "appConnectors" : {
                "description" : "A list of BeyondCorp AppConnectors in the project.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleCloudBeyondcorpAppconnectorsV1AppConnector"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              },
              "unreachable" : {
                "description" : "A list of locations that could not be reached.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "c139d6e9-6e81-4bbb-befd-40320f911113",
    "name" : "Resolves AppConnections details for a given AppConnector. An internal method cal...",
    "request" : {
      "urlPath" : "/v1/nlkck4u6bq24x5cpm3ejjmouw1dwghvtsrn0wlbwecg1hc4nd412mu8tv3ekasl0ikm2wi352j065tstn72prddtlsyaefcigx3bmr6x0fiia2ocn7m15xcazziuo8abjycj881cfz9azh9bexi1n7o8/appConnections:resolve",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"unreachable\" : [ \"6oq84fijyv07cs1lgfp58j393rmi68j5ygal794mdobcowuqhz49h\" ],\n  \"nextPageToken\" : \"90rql7hoi1asyb67b5axkr3fs6oqec0y8xxwop5p0jnr156sctr3qsob7ai2id7l41lral0tw3b60qnj9tnsitfrebob5gymxee70nk2n3di4bs6g1ep7isjye3s78kboltpux\",\n  \"appConnectionDetails\" : [ {\n    \"recentMigVms\" : [ \"jjpm51gdr03s68u8ezif5t25o74n8uqsniejenvf1gderxp5sv69gjgih9s5mpqkkrbv1vojbj8q3uo64boyki2zekioot9ioj002ms6i78dyarh2o5wgbcgp8oowr0loidya9qfyq9b4v4wxlnhk0zquip52z\", \"6j7auimp5g4xhgae7kl02ahtad5aipqefk39oi44usv7upxs66a6x4fzalx63frlpde74ksaqxe5xq8l4ib2rzb5frrg57heg9npe4ke8it4e676izdb92r00ojx40pct8zr6\", \"zyvka34f9g3ru5ki8wcp8iwthk0o9fk2w6ii0kn1u2o5n2bebikugwur5f28q4m9zmz3fk9gm2wbsbkpb6f097stiqcisfod8sxw24k55tyuty53ur6tehlbwd3ugx7ejklxf\", \"lct2qguk1glx0orpxu8ntnhuvkqlrt07xnilae66yeuqzz781hfdjijl3y1lq98grr8sieiwh6y3j9t01769jrb0fk4ost4tigxa2jjzjr1lw89a97xj08m8k606y50sz1ndj\", \"rm3ur1e32p9dzmlbw32xiz5gavkm5jo7xdy3iuey9ke0bw8fxdhicodegk383ftufm09klwp66j3rn5vas813blahwj9bdblvf6b63cs93pgwu1dhfw3g316ztmal6a4k6m9fppwp9ap5l8xkb62aslv8wv5e1elts6jzyz40qk4ihpalc\" ],\n    \"appConnection\" : {\n      \"uid\" : \"3z1c\",\n      \"connectors\" : [ \"t73molgi0dt95qmzzgu0fgrwkno0h9gcq15s8duiqn19mb6wpk0br29jrzzenxi58o5ilxoh6mvvkvyf46zw17i5efubmpjyn7vv\", \"7bo7ihw23hloizt7tsp4w7jy3b0bsde36asharkbqqm5w5f6glhzf0va7wdjxw8pyqc8h106ffcthfuunwf47bkz0okjwmqgpmo475n68zuaahjanat4ne7x6oinxyua6jn9oxb4cctmr88mij\" ],\n      \"createTime\" : \"2023-02-21T14:15:05.704011Z\",\n      \"applicationEndpoint\" : {\n        \"port\" : 933342126,\n        \"host\" : \"amfdt5nzt9wb16tiij95hv8rutll13irm2slg5uz8rlfdm1i0jniofkfktiwlabxj26che3xt17y65xw8jj8jrse0b\"\n      },\n      \"displayName\" : \"Reina Stracke I\",\n      \"name\" : \"Marybelle Willms\",\n      \"updateTime\" : \"2022-06-11T15:35:05.704155Z\",\n      \"state\" : \"CREATED\",\n      \"type\" : \"TYPE_UNSPECIFIED\",\n      \"gateway\" : {\n        \"ingressPort\" : 555465714,\n        \"appGateway\" : \"d8kv4a3t6uxg589dspkz0i\",\n        \"l7psc\" : \"uo35adz2dnczdvrrof16j1rpyzk5lbb8pez98s89x3p83n5zlmki0gtu27ogqqpiioucgcw1igt003m6ffa7drnu429pm7dep6tszfai19sf65qixa4cfrxlf0743tzvznvbid\",\n        \"type\" : \"GCP_REGIONAL_MIG\",\n        \"uri\" : \"https://web.example.mocklab.io/806454\"\n      },\n      \"labels\" : { }\n    }\n  }, {\n    \"recentMigVms\" : [ \"wbw6dov8\", \"m93dxkpsg30om1lztaawgfu74lnv5vmxmcs8aebmrebqp07mluz9odfnn40\", \"sao\" ],\n    \"appConnection\" : {\n      \"uid\" : \"up99\",\n      \"connectors\" : [ \"iottxixhcmi29qra25ofbjgrt9co5b5tfj3rhqq27zek1o4ozeol9he688wq671la6d13ryj7pnqbvv7iwt4bt0atyei7ai31temak7kq7gt8geuuhkcxs5452jok1j\", \"ga8hydg5arnxhuivce7452ptcknbtzlb043hzxnrwvl11mnp1jfplt1g15xaexfzjhjcgtcfralhjce1so1zxsxa4g1zvop8z41ee\", \"30ozxaetij7sep5ugkocv1uafvll381envxph9b4nfpxkiaay6bbjhmr4go8oo42nif7c844gp6o050hhexc0rh3ua83umyx3w350bix9m50skgeqrf1t7i2r7cqlb4h9dl4ehv3f836f8o1c153tpdwnflsorwg05o42ghmhl\" ],\n      \"createTime\" : \"2022-08-12T13:54:05.704442Z\",\n      \"applicationEndpoint\" : {\n        \"port\" : 1550755242,\n        \"host\" : \"k89hi2oru1d2o3a1bryzhrln5m9esog2cxn1au4iaonaptg0bh19ng1yot2cm7kyh1ozq143lakg3mmeuz3n6yvdvy3qdv67kfdui39tqfj8abiil1l9\"\n      },\n      \"displayName\" : \"Mauricio Grady\",\n      \"name\" : \"Ms. Archie Satterfield\",\n      \"updateTime\" : \"2022-12-19T15:39:05.704572Z\",\n      \"state\" : \"CREATING\",\n      \"type\" : \"TCP_PROXY\",\n      \"gateway\" : {\n        \"ingressPort\" : 1980153817,\n        \"appGateway\" : \"arprbmmhw\",\n        \"l7psc\" : \"q6zf1d2c4c7ho26pug0vcbd3mmgxsoikt8hruev42ryfru8u655\",\n        \"type\" : \"TYPE_UNSPECIFIED\",\n        \"uri\" : \"https://web.example.mocklab.io/191131\"\n      },\n      \"labels\" : { }\n    }\n  }, {\n    \"recentMigVms\" : [ \"9tr99gaeg6yuca4rpq453dzhge94a3zd22seo\", \"55d2p3osbscji4874xti62wq2uuxyptp8o56px5fj9zxwtqs0sz9nfodc4e36l9921ili1cjh1sgz2opg0w2idhugvhnmwvgmcj8khzjjorrpjvb97rk8f69tggeqwz792e6z71m8jobgfarzk9n0yhn8mzw9ueom64crsq6x96j17pnkg\", \"wsljmgrnjqbe43kl\", \"wzvdqhpdgrvycd9bo1i\", \"sop13asp1sltc759j2871ip0q2atklx6wkyjz19cgfpvg9mpihcmh1cy3cwgsrr3bgjcp1g2kzmdklueebe25jb2b2puw52aq47oge85hbv822ph0i9olr2cdzbrcfusrku8dnefxhcjypvv2sm6wuw3lmh1m06088xb\", \"e66ylc84umbnh9zwqxkqu3bnooog72zv9h8s135hfuzzo70vt9jekzbyhv3dgk3n133kaaljpudno79d6a77g3n09w5sh3h88cvnvrubwtprul0hh8p5zp2al7kmdtf4gvhlhhhg55wnqpiw2ycom3uc8wsdyg6i45pxcgunivyf8k\", \"sqcn12bwz0z041rswc273fma2hl9k8nd5f7vevmqozp94cskwi4dbaa635jnokyyut5oc95yvc4c553rrpnhbv5skafvonhhwdroufsxv540hfjmwstru2a\", \"xpvk4s3ac1jd29\" ],\n    \"appConnection\" : {\n      \"uid\" : \"n51v\",\n      \"connectors\" : [ \"f5bq39u7qm3jkbbywahq4883lb01bpinikg2glubbl2ywsdspdq45c7mhgcw3ocbb5a69h8\", \"ut2bw1u5x91r3v1mkox32h5aabvehdubzzzs5i2puqn6jxijhaog0uok6omh4gnydxa1x8\", \"b2fle97wvesurzw8gyv2t9txdc9cdfznc5sxnput6crvwszc65asj5o0hprx8yn5wu61umbjgx9xxrpbgnonorjr2i2hh9kzyvtg7ud85ohkq65qut1o3qyrg8g43ytid2tozaizgycfeelzoym7p0\" ],\n      \"createTime\" : \"2023-01-23T11:44:05.704872Z\",\n      \"applicationEndpoint\" : {\n        \"port\" : 102753164,\n        \"host\" : \"rix6fsytedviwu9vznoypuwg2m31s2p6d03v7pyowdf7c7cxbbqz4lb78w7wwjji1rm0e27ka8991phlsnv9gtkq2dsyyn94f42k8ve0m1lcg46hhybxssq2pftqt2s3c6k8k7sx51w7k494tcbatcby61ylpk4v6emsq\"\n      },\n      \"displayName\" : \"Donnie Kub\",\n      \"name\" : \"Mr. Vesta Harber\",\n      \"updateTime\" : \"2022-08-28T12:48:05.705008Z\",\n      \"state\" : \"UPDATING\",\n      \"type\" : \"TCP_PROXY\",\n      \"gateway\" : {\n        \"ingressPort\" : 1017691053,\n        \"appGateway\" : \"kl2xe74w8jy72v1n8bpl3wraehxz6yyvoiy51rvy4gkktjbaap21ubfvwa46d8d4uqh6xixj6mxrjy5xgk436uv4mi45qijtlpiq0\",\n        \"l7psc\" : \"y9zk0ogvy0ptw1p7f7fcrrql7jdjbu64ybib48kcz2ftl4m9s2ui2xeoy4kc0moymbe1vslukknsb1tojoj8rdx5zftm8sanpoyc21roiccz9aesz6z6ljs1e2u9fu3cjr7m9d3zrui\",\n        \"type\" : \"TYPE_UNSPECIFIED\",\n        \"uri\" : \"https://web.example.mocklab.io/087754\"\n      },\n      \"labels\" : { }\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c139d6e9-6e81-4bbb-befd-40320f911113",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:05.705337Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.appConnections.resolve",
          "schema" : {
            "description" : "Response message for BeyondCorp.ResolveAppConnections.",
            "properties" : {
              "appConnectionDetails" : {
                "description" : "A list of BeyondCorp AppConnections with details in the project.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleCloudBeyondcorpAppconnectionsV1ResolveAppConnectionsResponseAppConnectionDetails"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              },
              "unreachable" : {
                "description" : "A list of locations that could not be reached.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "0e6129df-fcd1-466c-af0b-59962e6b3acf",
    "name" : "Creates a new AppConnection in a given project and location.",
    "request" : {
      "urlPath" : "/v1/0e49b5w51a4ohd666fqvv9aymawkj6vd0lfu2l39j4iusya7b0osiv09d46tp53/appConnections",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Randell Ebert Sr.\",\n  \"error\" : {\n    \"code\" : 2095021939,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Occaecati sunt a. Explicabo distinctio minus dicta facere explicabo id. Aut voluptate repellendus eligendi. Et velit aut praesentium voluptatem quas sit voluptas.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0e6129df-fcd1-466c-af0b-59962e6b3acf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:05.703779Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.appConnections.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "b47600f0-115d-49a8-b697-8dfb131e38f3",
    "name" : "Lists AppConnections in a given project and location.",
    "request" : {
      "urlPath" : "/v1/3h92uosuwesz1xyyhz18pvq6a8ygcsmrjuy7mx2geknh6u7ex79nz1vi9l6ql3wfrx5qjo08o/appConnections",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"unreachable\" : [ \"272zbom17snju6h67mcmfr509q7r1xjb4d3i8jdcqtb7gytd6jfmgyxlqdyesnj6dgdssuy\", \"qah0de8ik0p2ejgd1w656dpw5w8j2fm23zfiaq6a\", \"qjd626z74af4brknc9fndemc\", \"z57yk33f3mz78zmhun6qth2bj3w381wl5st9pmmlw3y6lvtxb0ul189jac6a\", \"2x7hs9vkijlntse33297lbak9ujmzynzkijfrdam21thgo87vqsc6ii9yhtrmcofzbbjxzoedhtese6rrxdhcwz7sgte3fr88qy2sy8mukvzxaar2kw30ubhi3cu873sqapv3wehp15sfeircyo5mcgpgqmwsb7aa\", \"mzunbnydcjjqqhc2o2ld6lrpn5ocuh4a8f3vnybmyequco1v0aj8b05vpu5p9w223dc9xv7acmphqji8wl3t8tdu0v3ufdw5lawvb8spe85xo7walf9lrekbx81my8k2e53ebvh420x062v4dvggalg928xnz5bekc3tqet36d\" ],\n  \"nextPageToken\" : \"j84j0ecjuha1johx91s9di86xnrismz4391txovq432n7p2uz8ohmz9jwaldlgvex4l4m2gmvkw3y5idcb4girvpwl9caslif4u097rh0f6ajv684cw69bqu7hlzos0iychpipegf8inil2hnh447iwdyhbrils41q3wzpqbroeq8g5u55sx5i4hphtfwmn\",\n  \"appConnections\" : [ {\n    \"uid\" : \"8kwx\",\n    \"connectors\" : [ \"rc9hf4smr74jl9bv01nnlhdoqk48x40b7v5r8in\", \"7fefiuee11kyyys6rnjllhr4lya9ks7c4focrye1cz79w0ym4di1co0tptzqg864r0xbdye2mz3txjcwxrmhz6j5akm8ucwwno9tin1zyfbbxgbn6ajdvrc8vts06bscl\" ],\n    \"createTime\" : \"2022-08-18T15:21:05.70271Z\",\n    \"applicationEndpoint\" : {\n      \"port\" : 1655613836,\n      \"host\" : \"lgmppa\"\n    },\n    \"displayName\" : \"Miss Fonda MacGyver\",\n    \"name\" : \"Ms. Alejandra Wiza\",\n    \"updateTime\" : \"2022-10-10T12:02:05.702855Z\",\n    \"state\" : \"DELETING\",\n    \"type\" : \"TYPE_UNSPECIFIED\",\n    \"gateway\" : {\n      \"ingressPort\" : 1141659956,\n      \"appGateway\" : \"no1onakwjfo4luqvr4psgn0yihzq9icuk4avi4d62hw58bx54izf6dizlaigoa2jvadcidkjlj4d481eei47qvuwpdjcbdnacgf0n2j3jprta5k3kufrcz9furql9msy41fmcfb9ojysyzob2o1g11368epjrid0xwly2jwyxpwifqf8km\",\n      \"l7psc\" : \"yyyvq0ddhxol73kvnggc58k9hd3jspxxqiorzq7mkiychblaoh39cd76ttqf2y1jhximfelly7w87648pjx3qh9oivxcyn46m3wwi4ga0gww67hcs74i81aa68qwklnlfd21sfwlp6khtnb8jjxrct17bve6p\",\n      \"type\" : \"TYPE_UNSPECIFIED\",\n      \"uri\" : \"https://web.example.mocklab.io/856030\"\n    },\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"uw10\",\n    \"connectors\" : [ \"y9rjn2qxga34q2kc2v4dx\", \"iv9xlez1j7gvkzh00embl3rxv1hmskqe1bw9g41gq3ncx0tmzziijyje2anvlk92an781aq4ybj2005dwzgvsdmpbrcejwm9jj0fj5ljpxroqc7dmofwgtxqr248ujr6nf6svxx6d0nuaf0l5srj5w4o4py7p11zqvm9td4kpj3ou6o79d1nlu3scjy6\", \"ekfipwv5zwg036stx2893f3wvaipay4f11jwrl1rf5c5\", \"dajdzzwi2bc9yw8rclhnwd8lseg4tm1tgk24s9wau7y2lckdq4npp4ylq3g3uvext1ky5m\", \"s6wavxiv8dl7r8173jrm7wvd35ok75z7fs8jva7gmo3ab7mhnigt2u8kkvdbgqi3lucq1vix4pxrdz5jckm6oktscj55pvvdqs61tleu2bk3bt3a2b64mv6i5bjhnfsnzao0uwoukdzgu4oyqtjw4qzqde8b6iiqm8elenhibh259x4j2cao57s0bfjwix\", \"c8cfjvf7rew0h2m77pblqdmkfbdson8qeoyfs607v\", \"vjtxv9\", \"krtw28n\" ],\n    \"createTime\" : \"2022-05-11T13:16:05.703161Z\",\n    \"applicationEndpoint\" : {\n      \"port\" : 364163474,\n      \"host\" : \"9lxfyh7f\"\n    },\n    \"displayName\" : \"Lorriane Reynolds\",\n    \"name\" : \"Inocencia Oberbrunner\",\n    \"updateTime\" : \"2022-06-09T15:23:05.703285Z\",\n    \"state\" : \"DOWN\",\n    \"type\" : \"TCP_PROXY\",\n    \"gateway\" : {\n      \"ingressPort\" : 943748000,\n      \"appGateway\" : \"1h2gae2ixuklv4ed4tf8svi0u1hg8eev5bz2oviplykyyaypwafwyw1nyfc9f6ljidr0tdp6nbu3d2rd7lvejxlbbfksa4n00epvjympjk1tulj06y893bef8jxemivq4r5ljpvfiyjdb8n3god748sk5ctvwu5qpst31vfofdw52afdhkfegyvpzx97tr4f\",\n      \"l7psc\" : \"ublm8ar2pnh7uqn6byjjgqard3iusmw0bu7la8jr4d9tvq069al6nss5wfuuf9gga4i9rcx7dea9clvqevxd2jadkeqv38oy3mlfum778rxj021\",\n      \"type\" : \"GCP_REGIONAL_MIG\",\n      \"uri\" : \"https://web.example.mocklab.io/032086\"\n    },\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b47600f0-115d-49a8-b697-8dfb131e38f3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:05.703543Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.appConnections.list",
          "schema" : {
            "description" : "Response message for BeyondCorp.ListAppConnections.",
            "properties" : {
              "appConnections" : {
                "description" : "A list of BeyondCorp AppConnections in the project.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleCloudBeyondcorpAppconnectionsV1AppConnection"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              },
              "unreachable" : {
                "description" : "A list of locations that could not be reached.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "51afbe59-73f1-4cbe-9ba6-1c7724a3946e",
    "name" : "Starts asynchronous cancellation on a long-running operation. The server makes a...",
    "request" : {
      "urlPath" : "/v1/Mrs.+Tayna+Stracke:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "51afbe59-73f1-4cbe-9ba6-1c7724a3946e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:05.702499Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.operations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "4476ef01-d19a-4978-ac1c-47ad265e9b70",
    "name" : "Lists operations that match the specified filter in the request. If the server d...",
    "request" : {
      "urlPath" : "/v1/Christia+Jacobi/operations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Dr. Ivan Moen\",\n    \"error\" : {\n      \"code\" : 1312672359,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Porro et non pariatur. Id deserunt eligendi nemo et sit a. In et quia illum.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Jeane Anderson Sr.\",\n    \"error\" : {\n      \"code\" : 1289889212,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"In dolores beatae accusamus magnam saepe aut molestias. Voluptatum atque animi quis delectus ipsum nihil. Harum quo fuga sint eaque. Quia quae consequatur est in distinctio quia corporis. Distinctio m\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Dylan Smitham\",\n    \"error\" : {\n      \"code\" : 1098623424,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Quia porro illo quo. Et impedit dicta quae voluptatem. Molestiae sit magnam saepe accusantium est.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Stacy Collier\",\n    \"error\" : {\n      \"code\" : 919625734,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Velit quaerat sed labore. Magni quo eaque qui in est. Doloribus rem voluptas. Ipsam consequuntur quasi et repellat. Veniam nisi aut.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Delmar Bode IV\",\n    \"error\" : {\n      \"code\" : 1342587911,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Alias corrupti vitae illum. Veritatis minima praesentium fugiat. Maxime dignissimos nam dolorem. Deleniti aut dolore amet molestiae et rerum. Voluptates adipisci molestias voluptas sint.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Mario Armstrong\",\n    \"error\" : {\n      \"code\" : 156059901,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Autem est dolorum sed quia fugit. Dolorem consectetur maxime reiciendis officiis fugiat vel excepturi. Explicabo eos dicta sed. Incidunt doloremque et tenetur error nesciunt ipsa quam. Ut blanditiis o\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Phyliss Frami\",\n    \"error\" : {\n      \"code\" : 1167905372,\n      \"details\" : [ { } ],\n      \"message\" : \"Vitae odio cupiditate asperiores. Aut vero pariatur natus vel numquam voluptate. Itaque illum et molestias voluptatem laborum exercitationem quibusdam. Dolor autem ut adipisci non omnis.\"\n    },\n    \"done\" : true\n  } ],\n  \"nextPageToken\" : \"ivm7xlj9gd2oig36cfihgysavxooadu242mwnp2z467\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4476ef01-d19a-4978-ac1c-47ad265e9b70",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:05.702408Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleLongrunningOperation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "1c6e9c6c-c360-46d8-9143-f535d86a9808",
    "name" : "Lists information about the supported locations for this service.",
    "request" : {
      "urlPath" : "/v1/Junior+Berge/locations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"8szfogzlmjx1y7b2gvyil2ar9eogelbtu1ud6o3otw8eo62frw6waxtj6tazvrnyorchds2uyfcd02mh99wlhznvgt1hbfhd78jotpy64dds60oexygsj068kygzs87yif1zvyz50e3gusj\",\n  \"locations\" : [ {\n    \"metadata\" : { },\n    \"displayName\" : \"Omer Thiel\",\n    \"locationId\" : \"8v6d\",\n    \"name\" : \"Gilberto Abbott\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Rusty Schimmel\",\n    \"locationId\" : \"4f7h\",\n    \"name\" : \"Timothy Dickinson\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Lilla Fay\",\n    \"locationId\" : \"0l6m\",\n    \"name\" : \"Halley Emard\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Edmundo Schroeder PhD\",\n    \"locationId\" : \"xe9w\",\n    \"name\" : \"Bennie O'Hara\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Jasper Veum DDS\",\n    \"locationId\" : \"9ae5\",\n    \"name\" : \"Hugh Johnson\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Sean Towne\",\n    \"locationId\" : \"wc9n\",\n    \"name\" : \"Lindsy Prohaska\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1c6e9c6c-c360-46d8-9143-f535d86a9808",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:05.701214Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.list",
          "schema" : {
            "description" : "The response message for Locations.ListLocations.",
            "properties" : {
              "locations" : {
                "description" : "A list of locations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleCloudLocationLocation"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "6745a10b-95bf-4e80-9730-1389a5bb1668",
    "name" : "Updates the parameters of a single ClientConnectorService.",
    "request" : {
      "urlPath" : "/v1/Tanja+Ankunding+DDS",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Karl Farrell\",\n  \"error\" : {\n    \"code\" : 615883342,\n    \"details\" : [ { }, { }, { }, { } ],\n    \"message\" : \"Aut aut impedit. Autem aut quibusdam autem. Veniam nam est dolor qui iure dignissimos.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6745a10b-95bf-4e80-9730-1389a5bb1668",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:05.700091Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.clientConnectorServices.patch",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "e7bf6d21-0b54-4be7-98be-3f9303a3e96c",
    "name" : "Gets the latest state of a long-running operation. Clients can use this method t...",
    "request" : {
      "urlPath" : "/v1/Dr.+Terrence+Keeling",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Dr. Quincy Greenholt\",\n  \"error\" : {\n    \"code\" : 409459596,\n    \"details\" : [ { } ],\n    \"message\" : \"Laboriosam expedita placeat nihil harum molestiae dicta iste. Quod soluta aut. Laboriosam voluptatem maxime.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e7bf6d21-0b54-4be7-98be-3f9303a3e96c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:05.699893Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.operations.get",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "eb4ec6be-6275-4b78-9b68-458f203a8585",
    "name" : "Deletes a long-running operation. This method indicates that the client is no lo...",
    "request" : {
      "urlPath" : "/v1/Mrs.+Marco+Bailey",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eb4ec6be-6275-4b78-9b68-458f203a8585",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:05.699687Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.operations.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "98b8ec47-0fe6-479f-bf92-d18517476479",
    "name" : "Gets instance configuration for a given AppConnector. An internal method called ...",
    "request" : {
      "urlPath" : "/v1/phlm7z2j4xtx51alvsbsosp1kao1uhq5sgg2hocnpsbwxkrsh7t4j5s5ls65pls3vbaa0xhkjipe5zrhx441jrxppylf4n:resolveInstanceConfig",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"instanceConfig\" : {\n    \"sequenceNumber\" : \"f8nm2b8jhy2mdm1v3oek184hq3xt3yibyifnhgry4bpcbm7kr40vsqpnyyo7crh0tyamp83kg6034976e\",\n    \"instanceConfig\" : { },\n    \"notificationConfig\" : {\n      \"pubsubNotification\" : {\n        \"pubsubSubscription\" : \"xmk9narevbqmrfmt1fx167e\"\n      }\n    },\n    \"imageConfig\" : {\n      \"stableImage\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/fiterik/128.jpg\",\n      \"targetImage\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/_williamguerra/128.jpg\"\n    }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "98b8ec47-0fe6-479f-bf92-d18517476479",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:05.699599Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.appConnectors.resolveInstanceConfig",
          "schema" : {
            "description" : "Response message for BeyondCorp.ResolveInstanceConfig.",
            "properties" : {
              "instanceConfig" : {
                "$ref" : "#/components/schemas/GoogleCloudBeyondcorpAppconnectorsV1AppConnectorInstanceConfig"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "ebfc9985-652a-490d-ad88-add311b8598b",
    "name" : "Report status for a given connector.",
    "request" : {
      "urlPath" : "/v1/e3f0maem6mrlvkuh3hcd220uted8igkjhs017dee110x82earqbejqqpuf03z67hfqyzd7k:reportStatus",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Mrs. Dalton Koss\",\n  \"error\" : {\n    \"code\" : 173946797,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Inventore vel magni veritatis voluptatem voluptatem eius veniam. Quia in possimus. Rem et sit et ipsam. Id repellat vel aliquid temporibus id officia.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ebfc9985-652a-490d-ad88-add311b8598b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:05.69938Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.appConnectors.reportStatus",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 21
  } ]
}