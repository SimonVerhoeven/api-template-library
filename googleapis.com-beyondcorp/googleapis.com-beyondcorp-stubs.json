{
  "mappings" : [ {
    "id" : "5ab0ca55-7ca6-4d7f-97cf-6328de53efaa",
    "name" : "Returns permissions that a caller has on the specified resource. If the resource...",
    "request" : {
      "urlPath" : "/v1/272leqqhkics5a1wnsqwgg4um49js6op9ml4ogzmhirgcbxdwi9lqmc8fgyj8fycqttpq6ra3u3cu8dew6j4s92vs97s6:testIamPermissions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"permissions\" : [ \"l4p6p7wov4zp8rtma2dtb5i75ngc0a2g8b5vt9e588w8t7z1on119zigog7r17f726jnjc4k60cdc85tnxyvsvkpuosuw6kungjx62rfdlqjb69zcwukq184euts3r4l4u4vgsuggmn3wduca5mkcxqvkzb6j4rw0ujho6tdbfrsgwku93p\", \"kz8w1k3xcn4ws5untgm2u3ap0u1ok7743nef4mlvzz6rmynvpve3k899wvxk6be8vusjewidpeoe055xoy3taop74tayhfgpm2x3iijha8vfa6jpnd0fdufg2x256u\", \"hoxxqag7882u537x4ca6x1ry9hx6ieabjl99idzckv0sfy4ov4ptuyy4qiyi92dxhok1ahl1rb97l8tago0nxn3gtkk27up11uda9u1g35d807y0dksomupd6ordb6wbw\", \"klz0tgaa34ajgbr05o7ztdhu1q2k6tp2u104u4pt5r35n4x35exskennx19y3ubtl2wjzvjuwvwkvansmz0up0u84siuvujezom5pus5w1xnwxiwmr8t4sm9t3otm01zo7saegl10mmyactrmysphh021t41otaspvw6859bgsn59fx1485j\", \"b10zw1i5dh0acyk34ln73go7i5od\", \"c4oam9tztuemqyv6e71wuhxkmwddagccf0y6d\", \"2rhchlx9sw2g82wjb4zrmrxmp70qjbiueorgrfcsq21n8fi8nmbwc028pk2at2sc7zj07lq2sbivldmw3ybnbrhqq207hz8zbzbwui1hxb285k\", \"9wk9yuv8f07owwz13clorclv1lac\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5ab0ca55-7ca6-4d7f-97cf-6328de53efaa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:23.911693Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.clientGateways.testIamPermissions",
          "schema" : {
            "description" : "Response message for `TestIamPermissions` method.",
            "properties" : {
              "permissions" : {
                "description" : "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d87573c6-e4ab-4e06-a7cd-006341bc0a26",
    "name" : "Sets the access control policy on the specified resource. Replaces any existing ...",
    "request" : {
      "urlPath" : "/v1/d025178dl2j2m2d5inenmp4ftrtzv0bjv6komnbw4a84xknvcl83owong8ky:setIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"07fzqh5wqwwme4kfzv3ndnmzblc2nh3v82eawuzktzt3syunikcmariyvr2076dieb3yyadnr61arv9p3idcp0rtsrcxp429pmwcvlf7n7ff63hnccl1qp6jc\",\n      \"description\" : \"Facere dolore sed et commodi est. Ut earum quidem laudantium dolorem quia. Iusto quas asperiores illum dolorem sit. Impedit labore aliquam.\",\n      \"location\" : \"9swyxeie22pu7vac\",\n      \"title\" : \"Aspernatur doloribus pariatur vel labore sint.\"\n    },\n    \"role\" : \"neqdxhnd0djskabtzzniakrstkuju8wv9ruphfwvbnjbgbgfxhe6pp0g2uffslnur3dz8smpbbqqxoz9pvtc8un96212g37lx0pt1vo30nk5o0somk8fcf2gladu5amtrvcqssfoe194vv6sda\",\n    \"members\" : [ \"5dm46uu3bbtyby6iaqcu3b8g5h7hhrlk05qsx9n1ivyeggzy5pidqiu\", \"g3p955n1gd7ndpswjebqorc92ouzfnan5xwfyfkfcvcienf03mblrngyzy4ee9korghw8p5zgj8x4imzj9\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"71i\",\n      \"description\" : \"Minima et qui aut accusantium qui expedita. Porro molestiae soluta laborum aut. Consequatur occaecati iste et. Reprehenderit assumenda veritatis eaque debitis corporis laborum.\",\n      \"location\" : \"k5o5uet4j3mr63f6m71vk6ynzh6\",\n      \"title\" : \"Dolorem quam placeat eum eum.\"\n    },\n    \"role\" : \"aufs90p0t67t7m6d9m8bvreqfv6zm8p9rxbudgeclqqla8e5or07xq37nz6zjgi0vh9460l2hnz37214ih459jswp6ib4tj9i0jnr69crer2gsesliad4zwbqt2aoltba\",\n    \"members\" : [ \"3fl6ynkrnbobrne51kcxg4mzryrk90o6artgx\", \"15ia587uv5wv920gtrebe9sdi7u1yu8ltf6w7yu15rzjvkwi6908x8uh79uzjmbys1vfovw1zatpsuaf8olqgkr9zxip5l9fenxm6wz69550sqt2c5qfjf9odo7e3eypgfdm\", \"tmf5oumajeij78xgsna5qtia6p7lnplowbfrcknbpyq1pm6mr6jb3taymwtb\", \"tafhj4bts4vdym3vzamp78ulbutowllf5blyjac4nm3xl1vjwg541v7p9ucr8bcswru1swzn2l35vey7e0e8ettf2lbpg4ow70nvzjrl9aglrsdg52o2zq6e9j74y56q8w39nuuzc\", \"cy3n1matqnflxly4elqrjm76ll7u37wy4x43tub698t9uw\", \"u3i1itzd8qo4kjmfegenxly69pd3u7cg8qyx7sg8grtbvg1exm7quklfbjkf0jx8cbt8kjmvgzqeif533k16qxqb5yg94ik7iavaewioeq70r41u2ar2zpcpk2rodl2iy4nh7tndzssdoy6zwszu1wjvvf0lnj6644jkqui82t221\", \"pda8yhlw5i3l4ib6ecsu4otklkmgmfg6epw1\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"p4d35o78aggousz8v1f86jixl6p1u1xjuwr9c4wk\",\n      \"description\" : \"Ut dolor mollitia consequatur ipsam nemo incidunt quasi. Aut ullam id. Distinctio et suscipit asperiores ut corrupti. Aspernatur omnis repellendus sed esse et.\",\n      \"location\" : \"k6xbjj8vo9s1z4n3tldgdbtj9scu5xqn275n8pe8fbzeg8viho82nkummoi3bkqjtiso33qq39x0slvf7jfncczvbw48ds3u8i9rkdtkmsl5b7ypcpms4hl24oge08xvk7f\",\n      \"title\" : \"Itaque sit ullam sapiente asperiores.\"\n    },\n    \"role\" : \"1l9agduhlztsfoga0ir5opj6vnsdc84onl653eokts\",\n    \"members\" : [ \"yjm4a1d6krwxvxeu103d5jbegk79s2pr7ye997vs9wagagvbu1b1kqs5r3bjbcfyw676hxc2o3tkp2wdw5ukvdmb6vipbrfg17hrt1stjkd\", \"dgcujf0mnf2jyv822aq3tril5ou95fd7jall1l8i2qc8yt1rveunjwjk4khpq7tezhwr6nsqqongy8o91qcjwkr6lxpefb4kwqi2ya1np133gpd98twryyyiouz8meseb1xr317850pla3gm10vr2j9d6l2n04o4y69n0j71\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"vswpj52tjgpzr6439db6gu7l822o38i43sm4pvclbj31eilsfgaeuhvsmy1e0n7dky7fq41k0cxn627um5yc7aybyl3d8lyffs7\",\n      \"description\" : \"Nesciunt quod qui. Laboriosam eveniet nulla dolores soluta dolore. Quibusdam hic sit incidunt totam illum culpa voluptatem.\",\n      \"location\" : \"jjetyt3kryj0cset5ab6jinczkn4veesone2gsh5e1sqlrfgtqq6269w8cnhkumbdhztdak7nfkfidxppny0\",\n      \"title\" : \"Quod rerum sit quod beatae.\"\n    },\n    \"role\" : \"fvkpfv72m1gd6pwwd72oblk05b1og5bd88mstxbwjfr\",\n    \"members\" : [ \"42o9z6bh393gfzwwlhe7m3f856s2k2lagey8vpjfrpeepzwufha9rwo9ij5ful14dzb6ad189run7msxc5pb6xwnvj5dbd5ozqn2uwx060bvj7nblv4er6duxpbdmdnib2jdhsrr1zsnr8duhpe26bubv6cz8rqy07rm4\", \"ciy2p0svb92t0rl2he2brpzl48avv5mpqgvsr1jp29qoh9ytygt5idcvzoqfxdl1ye9n9vzc3l4d15su2wq\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"xpjxpbwfsokjnr43sh0acgoi8nh9djsnjmo13ggcgeyv8nrnch4nhgipv4cpkk1jus5jrn09uymjuazlndfg50if9gaavvtgu2fwomh8ijwfkltq9\",\n      \"description\" : \"Voluptatem ullam voluptatem ut expedita autem harum. Magni nobis assumenda odit veritatis similique dolores rem. Sunt reprehenderit possimus tempora quas quia. Quia reprehenderit recusandae. Maiores p\",\n      \"location\" : \"ytfrplkhkueb84rwvyxgt7zmmvb1w9o0xpbbi3qicz6cuocl4f407xdofxk7u57x952ce6udp4evg2rsgbjz5q7dubbplh7omt7v097us3h5vltyyxjexhobhwvsbhfvrarj6ylh0j4l5a8f714p53w1jhhnn\",\n      \"title\" : \"Repellendus est aliquid.\"\n    },\n    \"role\" : \"n0dmv22lxp\",\n    \"members\" : [ \"misz7osumryh5uuocepf61rnkkq5hdcg\" ]\n  } ],\n  \"etag\" : \"officiis\",\n  \"version\" : 981735595,\n  \"auditConfigs\" : [ {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"rgc2vc6djeaom2kiu0y49yqthq5rb9urjomgyfv1g4j9\", \"nfkch787ze4mgpvlqx5t5cljqfa1jbbcoe2c52g3lkj0bvx8tol5spwvuuion4ig294svqm4nk058i6ikkq7xpzv3n43hbi09smmsunjv4l7mnrieyexwe320vd2ruhpjfxwe63kn9w3lhvpw205iqfdju2hh44in1r\", \"xhqki80fhu06pcbdtm6w6hh5y07mqa5cxra08hpo24zpdzm48mfsw5nxa5jbz65t35ov71try625jhkn\", \"3jwiwi131mx5sl5xeduppusur4yuqsgvqp49vfpnreru0tl5rtb09pxcsnwp2y28jgahlq8gf6vfms80wvhh\", \"pe3tjyx3apj80g7p38o0cv1n1i7z3hqcjjssvl9bmebboimg74812lqhwnaqy7xqbffhlxvmkeps7\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"fxi6yzco11q4uo2ot1l7czlfwptsyv8bdlhbo8e982fijllro8hwnhr32\", \"ow1nembkrdahv08spamj3wa4u0a3fr16pn9inv6gd617jbxee8zys9097b1ay\", \"9choiqoij0k\", \"zc1bfqt7j91fhasx76w8uiquvi1d52o78tx6sqznl4hzf9q4znhr\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"pcfkkw0opmlrbjwfl7qx0nxo0k5j1dhn19tofzzxinywhaj5j7jucs3nnoonaeyj4kk11v0ety5m7jboo9skxg1sir3zxsxnf3j7etd94gdt4vahn2mhe0ps7f6uevhqzsyk9kcrpn7519p3sn8scolv8fc5oeoxvx\", \"xb5eq043u9mfdxiqv\", \"anbhiu1ub5yv6vjwopufo1zo16h5kg10jsj55iusq6hdqvnsn3vwclb0tk700rzmlbi8z9pcozbzjjjywxxb5pebh8sez9l5g\", \"5nxzb6elplnfq68hxalzhfej936l66u8qmmungf493os9jamj4yyupbk046wpij8uxhof65ww538d0f35g8u2v094j3b8lkrfmefnzhk6bnkbtqcnsa6l0rwlh98ym1nmv21x7xi3lxnjrylh6tfuxd3v8d2\", \"tgfmyp\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"xc1q1gb07ih45t96sy0h0bhvs8tu5vt47fdweiu6yceuc03oxu84d6hmapg1td2lr086pu0ww0see6qyhovrra06id1ffyta1pypaezc1h6n4hzdulmgau44qkd1js0k1jgxzlm5mkgf64tgjhgolp3gognbskipsdy7yz9k2djcwnvop3y3\", \"jdcpw6e\", \"ipvzexjxpf4arpme5ey35g704cuf9rm0oncem4ml8hvi77\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"zqy3nltuwtu26p2gp7vnnpqly3mtn0vz3woxkmgjhefpww18dpvro6p4ca5sa034dj7fnbkdy2ihib676am4m1cnzjha7b3md40st8umd4b237exqrlv59invgd66dni7am1yd5kzczv8g8n\", \"tf5rq7e4ju2exw46zz5l3ux6ehz46vpxevmzeu7mayb568vusgwziluqeclls7epvfn2k78ao8v2quj91sxe8cgrcf0oy7dxy8iivl85m4tbfxccovm9tikontavoowrxi54g8w6tml63oxjvt20u81utb983hxnet2dqd0yblwpi0uxjil\", \"uadnj\", \"1jy5yl\", \"2e0pvnmrb6blst0peq22vkp4qwq9y5hxv1yf1i41y10bn987bw00qk7og16863q9grw1ez2ldkm55b3s0sjzyn\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"8o7povw4bie064nirpcmre0isadoio8faoht1wpcjjtq4lkoxm0qe9yxzlwfor15wfovia9bl9eg779iddof1u1up\", \"23ih5reiz\", \"0qc2f4znfdpub844ybrczsuaory24spgv5sa4fypqyymeiytykmtvic4g02ge4frxdzk4klnt4eg1okzfzn88sdr64gvaandhpaynhwp3gscz3kunyhfm0vfesahwizp3ys5d57yxxe15y4wcahwpl7la0df7k1vjk6my4m668kpnhmg1u2k0b25o30x\", \"60r9u41aj8wugc2mlyg8nvo1zpj5ee0a2wks6vgqbrca3qarl1k8joziq52itbbxdk5lz36lz9nmp6qsbkg8v5hvjx9dvgxp65bdeh7ii4ks9xrkhpy02tc92h10e5iej0nye8lxttfikuw0tp805khfbwc9\" ]\n    } ],\n    \"service\" : \"xbj1lvrkyaw66m4035r1ow89tnq36a4itpy8o88ut5ucmcyfcx2cwllfqjhh2m7zlpalcqvu1sfufvvj9mc\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"t82au0v1q0n2dub4jljy2njffx796zabrjw1dghk6xyoqtng5zucwby4kmss20ok64637qyt18e6eun9f1ai6jfti9zx350ok3e7ns8m2z5fplv55vshph5ss5szdi2sz55i1j8lfdx77x4rihetfm1mj6zq8bngss\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"467kaqi8silfz7vig7uwsbo2mapqg60y0xq1\", \"d73u3x96wq8h4l43cc1elkx5urqm67zdrxw52gfqzbbpsf9jx9u4g9gh8rauor3y2qlsl7r6s0ul4dkhu\", \"lg3xo9giclg563pubprkgevteicc7lcyckuhltbzjyg7bh6f0z9z7779red7vej1741zjfyk3u1cma1pzaptxcxgj9vma8mnzvn7l799xoj7umkx8rq89w5pmigi8rjdyqkd8tvmrqs6k581rks5093k8hszyyzte88o4p9oiwumzew7ccgbdl35tj55ofp\", \"8qpx3ounwvopwdx4stel88ame76g6fy5k9972lpjkce119bxilkbvdqgw508egyte752q079gzhf8srsyou4xf26v3w4xevd8avx6xm0vljy5e5ue72fesxfv9lstd4toy1m0c6oepdjpztijea9auj7lgxs55hyr0\", \"kd55wi5cdpe54lntp2kbdsd2phvqox1ynmzdfe2gfgz0x1n9kr725jyu2xk8\", \"ta2ok9agdax4l7xir4c55hfbtu9lmxetfljm2xd4vopfkdmvpw6a5o8mjns9ony3hbo3lb\", \"s8y6yrroueaimmvdnsehj9wlue\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"jwhgfa6vsi0j4yy82i3b00b2edjauoajvq7wuo69dy26xwh94jgjqp7bo2do6khaf64tctviqjgctqxydeei5j1ab6dy\", \"ak1a69515to7o5ox8ehs301bc1w8nk19dji8wco9\", \"dj1l0k37fwgbvtquxt6uqjq7vzdeu6g5nhe0pzwkx6nn\" ]\n    } ],\n    \"service\" : \"t5egwzqxz9ec6sou4ar6ejhkstphlvctyuj6s1pj3vat0zqdzo1hm31ldurvafo3vybzgocqj5bv2l67u351am0bom0uy3o\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"obujherog5jaztlbq2uapd51ntutw6uipmzak9elk1hm684llab8le61qw9z5pqtz0j56uks6pbnw9ne40y908flhr2sqelhv3hfpema7qo9ym5iy78fs6p9gk9w0whbkg1a9jqmp8xwtac27043zwpm735nv3je26shk3pcunx0gqbt\", \"tadz6aykzmecm6wylnmfhe25mngpw0ndvau5ccbzz7e5h7xjvcd2yvdpj0q2b\", \"s223sfwoeihgl113v0nyk0o7o6ao2qtj5j5dzszg6i25zp2cj9go7n6ro4rs8e2awpaspmdxt8f2vbdcee3ub0u63s\", \"z4lxgzyc19ddjrazay6vq376zyw3uizrgqmm5sas97v5hc84qt2235prkljyal6p7bdpv0fvl835s94sdhh6wdylbi7yq9tloreyqc0toi4nhqi8l69q2ihwi504xhz3b76t24na1r39koask8um854bb2nr12p2c947qzix\", \"83b7slwgby7gvl7ldgllb8qd94q9t9yu0ab8bm3fgfxmqm0f4d66ov7hdaxt3jynvl5eokb8wuicl9g4f1p5i3jticsfnjzdc307k5g0vwgvfsrtul0xpqb\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"pdc43u4312o43ui6rbo2kx6bmchnay8xlvrf4m8i6hjc6wbi1v7cwm0fvboix4swv2f9syyffasu9brpoea8tienhb4bxtlob3h3a9tfrpc8\", \"2tlsfdz0wo74od5is6lmbe0loe8jt5un29u4bei1770fkw2rkdnzqawqdwonlch3solnt23qdlk5unckpud1r76vpol1h5xp9irgb5sxa032p31oy33nnij9xagnc5shk7v8x4ybnr6z6wodb9e9li38qugr3czz882h035s6d4zkdwp9whbmojv5opoy\", \"78xxx9a5ytht4e8ta9ivvqr4ixl2dip74s84q660360v7oajwjgevnq6wj7qf17vzlioavlakmnfthh56gz0oh7dcs1vu24ppqr8tf1bwufpjb1ocfwsd0mewqcr8uxtxp866ikc7x01xl7r71qfs0norbvbf30bbgtgagot9d5amnpipie\", \"l5sdq2liiyw2srcgt9sg5nw1fqzvhy1f4f\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"e87\", \"wkk5kbzk5ta8bqcscgzjw77ml4os2xuowzhik0xp5hk169k1cgd9ti2nymwfvvz4ww9h1qu2vbmsy4vk22j5ir2hi5gngdtq2e2hjneeubj6tc6808t6ipmp17qvmst8wcm6qn0nsxumyd4l0xv9yd3rlq10kzrd8ckdqssnjpdwyq2ivtdg4ncfo5d5ewac\", \"su4h1jojy9ejhsqwzzsnj887ofg9pqpwsgyqyo9tv7ush7tygykxpe7w4q1007\", \"usocb60by0mu53upba6pa8581wb3zrynixbv8xma8z0xici49hniypz2t9wyz5rzzhbk3xhwsn79rw\", \"b91l5hapse4dcjnqw2lbu34efebomtnghotcf1d5ib1vtbbqjdeb3hgy3ni9fuxiex8j02nvhxrsb1lgv2llhjzbdiwce37myaolpt73bumud2ge8ru5t8wf4nhio8xjlezrhyz5d\", \"r5vo8yp5jd72tcofh5yhicbs6mwknz1ohsnpz\", \"gbomqhxavh3dn88m8k666w52o9lqkp4slrrie52pkkfwofd5jfqvb918v9v9sbwo2dqeqprnxhznjty37gr\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"sioh24y9hb412bgf7b2xq01h1en490z0itt1wq5nxwke6\", \"z7i42umfvumtefhbmteapwahrwxxbzfqo6f5p6cdnxg618rs8646wmfrh13vcr3uowcaywlbxc80xl1qz2i8qlp2hjp21dkiewq6jaqtzr1735rwaf53r9x8ub3de58tja1tp1hjp4pukx2k9408v2xvhfc2zbiiujtcng8xy1ldm28t5\", \"1205dxnlbik17hb3oj\", \"nnjdqes9t97cj09wnsp9sm83k4porycalck74nkyly7xi5sa9t93sf4rcbhrc37pfc98uptq5j4z6917jq8mh4zfxb4o7oyprwmtoe7vc0x9d8zna802zx8fsuxk1q1i2ine00dmfhkb5izey8zobxs74jui0k3czwsmkbjzur0266kcuc8nklfmjiyiirgrs\", \"8mfus80zvanv0ruxmo7aescup5jxpq1zbmbxr29svs34dslu9vjjs82l3j79nelvyql50qfndi38urfe21s8mj0dtcc5spqcq66vou1o0mjuvo8dx16slplwi4vumcfam69jve56cc2ron6vjbwwlelrfnf8vjg1qzjol0arau5ah3vgn473qtkr3auhdi55zckbe\", \"z8vgxxt05j061pyfmq6jvuotpmb11a3gef1u1rhrnqbqidiigmhgmb6s1ahybqbo0lesflii1i1syte048zws6jazaoy18mkaes63vv3cutoo7oc56a3331jf3buhpk8nvryh8kxrqp1u1cpjiwoluifu3vtpx5o7vxptl1c6qqbyfg1fr\", \"2bj19xcmka2kr\", \"rt5px9rhf7b9w6vlc47f1gydfwyah918m8tj5123lbf0u20rp9jkes3q03xomeqmmdaovv280mzyblydwek6zdjwx7y4wdaqdnbdscr4fkup88e4pr5lli1kdske8xqd0k90ragg0wg3gy3gvo2tb0au7xbi\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"wsy7gtl6vp49qfazahzb8ewu7c63fdih17kmm0agev3o31ay3c1wf6ww8zsxwg0i64np4hynrwd9dbm57sjb4aauuba30pcodromt1a9v1ll70cedvcymjmw04hlirs2\", \"0il8euow1fq3fls3lxvj9kd\", \"kp6h5vi756cr0ybrkydn6cdyphaq53ul38t9rvaf6nwr74zkmb3gromntv5qvgvydoujs2s7jyrn9dv\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"cbgev42uanfruxc5z6niocbiz7xmzrjx8vbbdnxlf\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"30qee3ej3ilq8mbcmls6okmaovpr86dnmpnxd627w79b1k2qr2his28oa9weo857i521bo70cdksdexd2h899pi8wu1nnormvfpwst3l1p47nx2e5ggxjtkf5osw0i4ekl3zxpk7oysvggh9nt5sv\", \"og6k8y978m4pgwzgcqqw9st0z64fr3fhpg9bwp8l906fyhgzj7ibj7rmyz7wkd8bybcmthntaycz2yql3sp3dkopwi640jovocepzpyc2yo0825vfxxh50jhhtrjh80sy394u9y6nugvcux053zq8ew6qtfxqtibwzzj36urhc9u6o7ux87dif\", \"paeh5d97y58u502z16kmwd8n1ad59o09g2tiz13uwo0ea\", \"fd68hdfsgpebhji7pelqvgaq99qkjjyyi68o1npwfxalwsoipt79rnx2g4\", \"ee731a5rua0r6n1i7p465jdpfvp7c1wdvvb2a43vbn5p2h5bwcjohaxaml3hjowvbom47yirjoeb9ff4wbz6k7g5llrg6ih7pn8f5fl5r9uwxeb5gg7ceipg64gskzlt12flr42exi1sja1h9lrr6m1k0439aqpdzb5yad7\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"8zksrcvixsam75jqqx234qt3s7b5hfp1a9ydf93ktb3axq9d4agnu3lsjnnegrkskr8xk\", \"6zurob06qbsmxjw486noji9sdzisrpakbggm321ay8wqgrhnnhbz6gzfm7vtzgzm53nhi0dg5cf535aethm16uzmgogmfo6y1gcys0uo2fsackxjf4de3hh8paaot2tqxnxdqvmu9hnxxyl3fsnjmll2rp8mq9ze7odkb\", \"dbqgf6hedyki0e72uyanvth1sod\", \"zb4segfdh27opali8konb9t4939155bdz94kchbraijky85cgmteahgtgpqbccaq9cq31oydnz6sgs4otu5e30kxjqw51gyp23eo1lsg\", \"lixpaclrcm5eddwzvp7fdf9xvath11y8323sold815iuqsr9wnbhucz12fv02k3lhb2q0o8p3ppo5iganbyzyc4ausorwc78xtqll3ib0k3u3pw3y3kpxc2s1p286\", \"3mtjtydhjpaqq5es6bcl8o0sy9kgp84kci8fx1uf4l718rifah0q12wvrnv6ff87ww22nrmklikvzs7f39ljwcakj8wd0fzh06\", \"kzxuiho0sqfoxhv7pvkdf1ip8batwufykilaj3gqve30zl6ve7irrln7gysl2zhh385ufm8rd67hurkqw4di8l86acd8rf7xhe5mzbl13ndbt3forfz3f0ahqowpl5s26qehumzxh78g0m7pmyapbfcwne3oybcotqq7o2tzv\", \"9j4ecirk9b5o8tauaf1zwbtz40na92bq1svquesn5lw87173\" ]\n    } ],\n    \"service\" : \"xrw1jfy9hjxdnhzs979deosl2v86ipu7rd2fybaka67kfri6s2yf2kg1wofmur0i1fvqc3klutgd4vjj2sfkqe0ke7sqwxtmjda3w5b8rytlo4yj2b160grsvf764nvfi84lz3v95pq3of8m1ugi6ktvr537tpp1dqdpm20go8vox0btiioa5by73ad952jtllgefu6h\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"9m5546l40ejiq0rb5fpz933mn93gvit\", \"136bpyppfa8rdqy5i73q3rjszxrqzvrbqon89t9azm1pxqh\", \"f3j2uv3rpl0vhnzz20\", \"x4v0tf45d8c5wfuuh8yurbm18rwylwu7hlusrg7i9afk3yjndmio3dsznmqcccw1xbzih9adb6cmv8w38vtewwlgpioneq1jz85pif99kio2v26a24noab3xwz2uqpx7qbtevkkkq9a18ngjfuxg273i3h1xhyg8roqwf8n8ffjyick4srb848p27g8ciodt\", \"3044mb60m8d8ww4ele7e3k8reubm6njjewvq73h3f16xawc0fp61su4db4obd3ki8ebo6vcwud8vamtdnbnbl6jacic7w35voze9hcvnizfuh1fvqa5e08890ya6yuqib1dka5fyjhuix9a84xm0q9k0gr0h151f44ci37vv69\", \"x5jf0yyj78gl6c6imq7hzkduow7vx18bbe3julaz54ypon1tyen9bkj7\", \"gyrpi74jp045zvek03scmoabksv61o6ym1notjwmr034t6hnnhf5c4dn2k5lpsneog382kn7nssbcmw\", \"w42klgn3eu5q3b8s2l5uameeowjl8xp61eppbjix1757dvphkwveor1qgwbeyqzfg2otqjik1bayc1\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"ux235l3lwb3twaodnp6xc6wcp2jerzbh2thecsngv70kfr0zigvtk1qukuq0cypu93p3aowj7qua761ff235qnrv9sxj8lgxzr1r4kyae3jfcetjcs58hiv6g5jrq8ic5oi4qkpybe87x03dfpegb4ageo98wd1uqvsngghmvl71\", \"mu9oc3q5e\", \"xnpghvpu6qym8qqoku8khoba4nry18yzpfnjpnoc1yrqemn1x2c601dbp1j4nna6tsj6x9hho0qzwu37dkorm2t1grmasseqlooqtdnl0areol1jpkzn6vy8m0tfwbvpwdaihpjk12qrux18wa9dsl6oyg50jgkljulmefwq372cc8kx1\", \"4iwa0v8elnof\", \"i7wq9s6s2m6oj48rljzzgq1g8c3vs1hhcieb7kawnvd1fkyap2gb95hh594rxh1lip1jwzmw6iaxb4ktn69kz2u8el6gh3y4tfo\", \"qe1i6efifimfx7ctbrr99wfe16gwq8g7sf9euacmc5yq6t1k9u3jvx0dje\", \"we0nrsfp0tolv75pfriea7bgv8o5f1k4x7nezkbzrz2fqd31pimqhnh3tkqwzgr5ot67rhpoke1lieghxooeuf077dal7rrw48o\", \"ny3gkqt30kgmjg4ioe0dda0cc5cdu0x7czjmv65z3fneopak8y6olmuoil60hal31njbiu9shddhmq17qtbinonnqq4bfvdzokodc2ne46rfd4fsh5h5m4es\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"bx3a0pdmyfh8y4u2k00ldp643i13xvpvqnpatznfz6mlif4lmut8mr2exya43czrfr917jd7nlt2jq4lsxdfi70dks9i4z6ina8ihcty28l79yywyq2vodqgg8iht186thc28gaz0zjuy3eu1roj5gush7bymp3s9m07kr74\", \"6vxv1921w\" ]\n    } ],\n    \"service\" : \"gcty2h0z1n7r3c9326m8r7nebat1zc5l67oolovk2juz6075e1usdq3j1vsjz8aowrjnvwmt1dqnsuoukzh3sh1ryjvkdppzfw22r6nkhxoprne80c2bjjr1qc588rye6biai9cv24js82roncenfp321\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"tffxm11zqlnmry27z7wejkbpodo0\", \"a939gbqokdh9i10kymrnb1wnzglp11743n8248vpxyboh7d2zo7chyaundko9j5j52jgt24y18fn6f840ca25f7yjezufelqd9kdu9lv80zcsdzooz6v4eu5\", \"2qpjcc9okjz7o2u0fvn23pjepcv2rnockuzp\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"whqv4eu5loq8l25f1mnf4xqziqmfdnsp6x8qm9c2b6h2f7w\", \"euqyrp0gla9rczxmqefw8t9e4yoy0pd5z0vlj41t8irkrh1pjwcu50ybenp1zskhg31v3i\", \"mfau4uaukquzvatccb79d\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"o0h6v12qdhzhm0ovd8yxpexil42z5vciffj8zvo9jjoqvmsu90239ki\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"w025kbxtsfy1qc97i8t7jqer70cx5p6aah3o0h45on3cmv86b6ref0h199gkg87srwe\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"b6h955cuokwzp1jvribv2xb2m0i629u0k6u91jgo8911r\", \"kw575v62rv0ex41bn3mig19llg4kkrwat83iw8gj2n8udprvtce\", \"tjtebv1nt7g9u27tfztl4eit3tsak9mpx8612b7y6x8hanpgyj449cbckg4y88x97h3d6806x52375iuky4msokublcek62mv2tle9jfn54epljviej7ieywihiju0kfsmnn3apu0q8o9usm4wxrf7ha6okz4141c3k6ojp7kktoaksoeb8iqzoq7257yiqf\", \"c12an7nqkdx08pt204y14lx8s8lysw28s2zy1rd37s3wcoc6mkswhgnbs7\", \"l6dchk3xqq93eiv2sppk4u6wchijbbj9gzza8ahl7odv9fyx613bdp513btcm9x61vyg7bepki0r2v1lbust51pwryb0idqzs9u1w7y80ob45foveqzv0djqcrabt6xeadaeml\", \"f97jfwx1cp60cts91tazqd8gqc6h6at53hw9yr2d618skw0awu90rgtetj9kfyn6fhzlrg8nvbx4a643h6zccnksidoscmz8tem715d3ke0mauxsil1d4kh4c3v1p2qw2fqz4si69k9z9o700ml2c6v31tn0y34xeeop9t6fuzobqsq4rmdyrujnbbi7\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"qdjuhukhf3npzz22c6vpe41e913n5z98rz8vhyeervsxy26qizljj8bm4lzs5mrs7wgn\", \"aywvdjsih7u5z5pmqbg79vp4imf21ikm8sq1gu08dj616lf0f8k\", \"brnjbcba863i5xgewvxwpq45kdy07dyfu36pnv7s5j9ntdoh3cxlfqspdczhwvk8ryl609h7nl2p3by58j3b5pl702eklh04saj33dtdog\", \"v717t6fsfnx295nrpjameu6febeu4j1iopmqe0r4leg6gtmzflvyxnr1bs1ddtm61wwoo1851nc2hej0p1627o4bcusu7lnrbnxsfktw\", \"rfor2lvq1t84x8kbst7qkcwj8rrgkiwvwhxiihc2lfwbtkfdsvhveqfljteyqt3smv9e8567n6gxib72wrno2f5ocbnkycu9\", \"fgjfiwjvit8h35lt7jurjpawoqj66bz8eduh2qpog5tp4roeu3zosu16k91g22xnaxthxfdnn4wng6javj1gp074qq\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"ae9n08hxf68kieqwnvayu3ayw4ctpe3hz6nlt3qp49lql3v2b3x279odjkwi1lxntyow2cff9ayaf57kjshd419c9bq3rzolbi09hlasl4b4mtpwgsywvgqfjp286yitlfujsf9yp77uga1woazi2myujqjm4kht0cj7lteezk21ma0y73\", \"63qg4kgte305fcx6mwlvbn61xv2ninstqg4ze72nsishnheo42zjo02eigemda8bfmel6tybcmd9yzespluw8b5de0\", \"vfrncytsx2yjz2zv88wq1v29h706hj459msypjbd8g6iazpb3e7o2gh94hwyu8gm6d2\", \"cvone535qbsdu72v4lfozyophg3zwrd4kpxv6x08rtzo58g9fwv7dpsqmiyjx496spl6j7glm0i6ea119vveifcvf91ovl3to86vp3hrmurc9jpsxnmryswsrjcww2a94ugwwvl3bnez1xwxb4toc5h0uqhexby9t7o7js3chkc5ja5pztvf6o9bsiymlpndui\", \"bsbb6f4ou1eydmr9kvr1od97ub8r6t9iwbizjy1zst36hox5i6hzhqe4k59xl34lkstcx94nljm9l3miptqd4w77qp2fgojona4cfc87zkun6oksq49nl131xcr9lke7iacd0rsv5gwwsxhbw6b8wg95zx\" ]\n    } ],\n    \"service\" : \"foyqk8d6ryo91evyqyyu5tpy45py7793odfdscqvgxibmqad8t388sh6ro36ft88o39ou0f7h91j7ez9rjq6rlkcf60f55z8mui4nqg61y81bjoilb2mvzg\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d87573c6-e4ab-4e06-a7cd-006341bc0a26",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:23.911564Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.clientGateways.setIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "auditConfigs" : {
                "description" : "Specifies cloud audit logging configuration for this policy.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleIamV1AuditConfig"
                },
                "type" : "array"
              },
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleIamV1Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1bf22b9e-66f0-43f8-b0b6-654e3719e22f",
    "name" : "Gets the access control policy for a resource. Returns an empty policy if the re...",
    "request" : {
      "urlPath" : "/v1/p2nm4srul213r6qoodgyrlp02qxoypy1p31luns33jqm42bmsse5a3lbfxor6bllthwsjln9ze1a4tteqm6q21tx6lrlc39tp0ao28hjri1g1e6v67opeqah5wxfomkxajask5bq91ius93egnd3r:getIamPolicy",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"ys81vcpuf9si0d20szwk83mhisfqb3q2j615qy0zl9\",\n      \"description\" : \"Natus impedit aperiam modi. In quod enim reprehenderit voluptatum laudantium ut ut. Perferendis nihil blanditiis.\",\n      \"location\" : \"2s9hmta39iodjfeg8n9iu74jm7uey1uub7p4fdk4m8wn3sm2vppil0r1kch6ab6i2tj9epstr6vxx8viybs7s3qukbs8b30qv90r1zr9v\",\n      \"title\" : \"Inventore tenetur voluptatem esse et.\"\n    },\n    \"role\" : \"4h45pyhwbz16zm473l6d0yj5y9aovk91cd3qrsowln20clxggzxsoehb2you7qh3kuo6tqah4ma7zg1c8caj9ng54agxy7reo8cp7k4cbqnlzjur98e0pmhehze7nmklnru4lg9xjgffn3s0nzkdfizf40hfcob95fsqrp1fv06edbp0zhywqb6ciw6iowc2w\",\n    \"members\" : [ \"0q2dte8bt1vd8zy0zqpwpw8vbzbeotrpnf1050zanij10ptc5vc7695dtsg1dkrqp6fj41l4p4mvvyfo63c8vaycfkny7k5c3imu4734w729xeuqbvlqbrguh3b22ex8v1p25ofq6a046qk07yqjzcrm3cd924nygweo13m3qaakt4vquegpfuohujxr6o8ki6tr\", \"rt323r0qjjhmcbb6y5shxydoja6mweujxe7z7yj3zwqbv5k30anwrluxbp2g6fiv4jms0zkqxay5gpkup0zo1tgzg7bwgc848fvdjykjl560lldh94banw8x9j\", \"pn7er2fdo1sqvmif2pmhcdg2y8qfv0iptxlr8lnyq4j8i2sbv7m1xq6vipwvukrjdc0vio9vh4pnjvcgmzcj\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"ym8iaqxqbskv2i0atle6r44q5gnhmxd0nk20wfcay7ydt9m4rtq5gvoex3i2woaguusxcamc8zxr\",\n      \"description\" : \"Possimus qui aspernatur dolor perspiciatis qui. Consequatur rerum odio nostrum reiciendis in fuga. Velit sint maiores sequi corporis. Possimus cum eligendi delectus ipsa quam.\",\n      \"location\" : \"7gm1ebcskzmlonefeto8fbbwdu8zj10ttwy1a80jxwc76r32y5pcrg2ljjhuj2c3h1tqn88ji4ez6ei0v56n66x98ycww475zkfc5duoimf1tdzco891cgb8109u2s0co9jawgue7a\",\n      \"title\" : \"Dolores quia quo.\"\n    },\n    \"role\" : \"eujg2d85q42ln8il73x2vjdjbcc8ikjs27e0cv0wxrpdklvibcyktc9hfpyz8b2m4alg4ldiz03p8bcvv15r4rdf474pkxhazuurzi8uwg3l4y3mkuso8kltap7112aqpvk2ckxvc6xbf5p04xqy\",\n    \"members\" : [ \"hz9m63ebf2xrtm3luhghczrhq4svsgzcuxqhy77jjcxq979ziniuq8e7oa7xmzy\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"vubf17irk41pb886pawv9vp8oecfpj54zpti6qnt7xhwq423v0ethdebkjad5j9uwktou9wjprvadt98cg0ku6occq843dw7mqlslwcn826k0uw5kxkvw\",\n      \"description\" : \"Ut aut necessitatibus ut consequatur dolore. Non omnis ex id quidem. Qui est aperiam iste libero minus quo. Minima consequatur vitae veniam dolor delectus.\",\n      \"location\" : \"spbl369qoj5gqdp2lbrqnxvuk0i55lza3kfma8ai1emms6o5pxmppoaeu9ebq2d4b330jh104tbhdrjjzpee6fjaclw80bi01x5ee0ocae75peedtvb23vpjm7fv3espcbdoqxe2qvqyntpy2uwjcqf4\",\n      \"title\" : \"Aut distinctio rerum sit nulla rerum vel placeat.\"\n    },\n    \"role\" : \"8pvb7y4d8cfnr1xv5jkjr2cn3lpc1yh05obnnsbdlkey1tb3dz8x8fzkrwk7mnk42qosi5o8ahfd08cifd3ez0auab0thuj125atq46e0qb3xnba75qg8vwl59468nzofceuuih3ztolvasylgzlopqh9ubjupvx3j6gvra2btvxads5x4k9qh\",\n    \"members\" : [ \"je5net837no0ic5vw7503fot2qd0xmp6knhxe1c3h4m90feyuxbgyjdt8ybg4ax71uygtrj4s\", \"pmo20t8oiv1yeomjecjr2tsj99tbdb9e1w78atr3rkqd6dsa427zw30fhgs2b4pgvgmzi1upbezxm28xev1igtzsyrshibglzfwj6rcjq7dcqss153c9odjzsdc4j8ro94688trgpgvwuyhds5htqud7ob2u6zke597m9umwyweq9fs5fmg58g9\", \"g1cfcnknk9hmmuwqjjyyvymy89cm945akizpx2aw72hzp1un5qc24xz0xyvz5p6n9x918x65zh3amdrdlluat149igy5stx0zd4avkci621vpm841nsagvlorebvpj97tu6wwaqrqe1jnvldzgqwb3boww1e9pf1wohoaoxo0zdhjddy5l8auwy6\", \"1muzg02adwjzbb4103k0rcvf0xt367a541kfudcrsjozrdqh7wumjy72owwpmza9s64xdc6l94xrbh12eyi9v6gs0tkknnsx314mf74fupuyeq8h533cj1f1e3nkdyt8z6vtwi9n5\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"uixhu3vxkagfyqu88ssd9yu2yiabri4utsh09ewff7glki6ntlopuzcd2upnt387xwaz5sssmjn\",\n      \"description\" : \"Doloremque non temporibus et. Quos amet ipsa nesciunt ut quos eligendi. Dolores autem quia repudiandae repellat quisquam voluptatem. Iure atque sit. Non quaerat ut cum impedit.\",\n      \"location\" : \"ggjuus9hujdxok0b3flfm8z2fqd2s8uffqd7xbm3w4vcflnozk0kju4vgayajxj8tstem5gotxc2gff53636gh\",\n      \"title\" : \"Enim dolore quis animi.\"\n    },\n    \"role\" : \"vcso4x5fkmy36jnazrzwdnnwrbubadufx6td1h2bjzivgdgdg5l9q0cm39y4yfd41xdufj40myre3demtnbwe0hwmvkhyr5u46bkjwsrpovit9sie8zf69ht6qken7ltqtl0ve1ffpbcpbzcp138pm\",\n    \"members\" : [ \"h911l4v712fz8oez1cu5h6jl1ypysapo5h356wykvysx6nogk13a4inq7av2cmbpmj6xpxjeufrh8gfbw5di4d7m82zilli60m6i3bocbfqqqblr3r3sxc4tszvxky0zlq2yfv38k5bpr13i41y\", \"yjpf7826ciwu2h8tw4mesntg0zwltct8rbfkrhv80hzd6qa3melgvjbimq1ok25xm34pul8oppnht2y4s8ec4joxy7xd1xhq01qhgule5o0tt\", \"eym5a8fmjkx6cahiqf66o8ohuk94hdk5bw64pm2pb4o9jrbwi9x\", \"azu5xl43hjzo261ftnktzdgkrt8g5fpmoid6dtbvtth3\", \"kbj9vxuximnea780ij8533mh3qs5aci6rd7rddzgdu0d1maq72xpco1ftdms4\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"igx1taekooiqb59qep5n3y7b9ba7vjrec9cftoq9uq67em3p1mq6k3syb4lkcmaqd0018hw5\",\n      \"description\" : \"Inventore est nihil. Laboriosam eos rerum fugit nobis. Illo ullam eligendi.\",\n      \"location\" : \"am39heyklv3yasgaov0yy13ja3nwfo6uyvn2xx98dw7xojq91pumoybla9buxlqvgk76nob4ahn7kb65je0bupg80vp2gpfbas1myg353skiz5ly20sy87ciwkmck92q3xwcr\",\n      \"title\" : \"Quia quo molestiae.\"\n    },\n    \"role\" : \"6k2dtz3i2e5hcdcqsp9fdx531gsrf2rr7zy2e7p9x6bj930vjy8mmhlkipm5plqp13c5hedwohcrw6z2h3a9fldm\",\n    \"members\" : [ \"leg5cxal\", \"giu9gssj3fjzh5b7fdvbuwni9l8f8jjmjddbv5r8vk3q7j2hyc28j6j1c2tnmafis0z0ek715bu6ygn41wj3pfzyvv3xvxiaazaa5zb3azw7z2540oh8mi9\", \"essutp6ebcmpbkcd4dr13qep1g61fk6c6o4keo4h2ci3h3go4qmjolacxjmqp9cvcg1jk0mm0wnjxnzsgwdsljp92har1689z6br8lac4g2itmc4gfq8a934ns5wywj94f1gngjpjg77w\", \"wunca4li2frulzr137uns3fbhzpbe3jki3r1a0nnmatct96tw3u6q0qq7pqfjvq3n7smvj18bgaz8bhaljtaw23y3ov2kk3kqxmyl89cy5\", \"ggull4t22vz5us52d6l0pxkz963wkikpn3p61gbi4z5o8wf\", \"2krl1he9f0ylkc858ddytsuhsptxuz0m5b7n8ry5nu95s0hws3ghbmwoorsvvooekzshtqqd4i1bsrd0rpw3l3amnxj9eae5zcujdislqvji4hmrjicj\" ]\n  } ],\n  \"etag\" : \"dolorem\",\n  \"version\" : 1017522777,\n  \"auditConfigs\" : [ {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"erivm8l\", \"c16l3r0m5cs15zkepbm0i2ynz1myugikndrk3keyunp0hfq3mf8w682z1qhfjrbeaq\", \"evdd95gneyrj2gw1cyam\", \"5r963myzb0mj7fsc5j8hc1sa0pivjps2hg6fhr5i3rqcry1ry83jjm7pyyw2dpt8hmsh7hdzww3z4dzyfp06utk5zwtln9mdmn97felzfw8jneuphqzzv7vm4jdzp457klalvhdancjgh5z8j3n60r54lsnwnbciiy6rlv17t2m6gs5mu4xs7lhe91o0dx7o8on\", \"jsp\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"r7goluyznijkqvza0jg3z2y39mmyda23o7fquys1oifvre2ta341gb1qtr06tn5o47g1x7lqso94uu5dplmj5cih7rn7pcyjj52z1oi1hvht395n1fwddk49c62gha6fhf5iucv3i8f1vuih1b1fh4wmqmgjd8g8dydgh4zb6zww6ifzzuph4y23x13zrqdbdqe\", \"vmwocfngow\", \"3lexiztaya46biyxl9k42s66trcf4ypp67vq7ps990idigbzspv058uy7b5ub69kzqhra86v9vkzr8btd7be8amw86dy7aj6kwp3areupv7jzduwvm1pfkew84zh491jcix64jzo846yxgo8yc1ddzu69dgi9c4zj55o3oemsqhei4t16c9v7\", \"uhugbyrarinuwehm0dmk8w1xh0f2np0psiu5o99j0txh36h197pnzpj8osubc8r6q21ybm0cyrvguakclkcmn78o2p2xmsm5cyqtl5cx5g\", \"kk7m1nr7ds86maw1ys9kev9i783w15ijgaql087raaaepkvszdl6f8yl1vr9i9gb6786t2nh5n1te7ftjmmclgtuzjx0o\", \"bcfu158k29w2r0qxyaj1k3b4xm81xtb2nmtxvxe6x1ik9rq7fjml1qppvt53nrprx696j0uzbeb45e8wkttx0zjjubfv98wm2agqz0a3sezw6u455nki6uzx6j7c306zhtpsjm0uwq\", \"o8vqek1d15huzuueurcm4bcywzrldwgcrbanyoqvv9v3nprqidxgltp94o4p7f7khd35qhhgmw0rn2sb03bb83vxuznkne2n292gpo7x87pbv4k5eyhi4rimyvynx1kgnw\", \"fz2tpgve2cjflljc1877bg4k21bj5b6vsycp1dliy0cazvo6x4qp6813hrpzvnqng89qs6pyya4bquhxqouiv7u8v3ty7j0dc047ng18l0j\" ]\n    } ],\n    \"service\" : \"2s4wesy3ftf9qfcxi7luhtc4rzt2x3q1ti8vo5ra0znfxx764ayosqp4x901iidhu2vjcs0dl6roq51qy03qev48tvykktglnwtr4snms5b655qglie7usgrq3xvdaz2hqqhirwo8iybjk18lrqymxqixaeirkjybrxft7aw7pah2uay1jucx2wv2q9odr38n9w25mxh\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"b9tuhe04k8xpoz9iw0o1k3h7z7u7zcb16ftq8s6jzh89k6xzbxpnv2ywz5wqxxbg2lkvfuajbkvjp6i2gxrxep9h7qs5lp816k2hcqit0g5wds2hwjt\", \"1l2tnsi3j0wzl1tggbtkcvqdngunxavdi640uieualo52ulbjgla5lr41xis7wmlctykwmde1365madjwpf\", \"f22h09wjqxoset568ii1g0bpr5j8mxx1puq0aphkddqb8bgewknb7oqwhro5t184pqfpepc5u0ym9yue7kh891egykhqpwjnt0if3lunt1qmohwg1o7girzv8i8zk9o8ar0zxguwikcuxx5y67t0ycowt73lc\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"rdnlx15nlzdshmm9wvwwm1rt6a4vyxoxqwgdhczdgro2lq8dbhkq4dwcttqlqwu5ya8pil42atj9d1y9dt4p6lybxmn6bsilwsexu1w99rpxk7pw3ypiw5lnlism0ts7f2b1zbrj3xrl5hrek5neat17qsj5i4w3b3acybpzbwdb9tmo\", \"26jwnx0xvuj9sj3p2qsj56waju0l03hs041e8h7x93gcarruxb0vlkkgrn5m8tmgnajmc5bms2hhw59qdjgw6o4q34ggpk7228j8zqg51eqkdh\", \"3mv5kt1fuuq9zz0yeirh9unuvd4bwdj71c9h\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"f7vdrzfs59fnvxvtb9xa45ba44umwy4otzuf75oozapkjylyjsazwjfdwjipt6ovijd5chn72116h6tyotlfj2mdvyr84f9bcuxfpwklatsyomz7zx7x82l9d802zvb5pafyjym9ra47s1o4jmh1bz3byitvivstu\", \"kzblv2x93hxdo54jgy6bj7ucn4w5dqa0augp5cm1ird64ufiwbji8gpw7bim6f10j52m\", \"rx8243qw1y8jhj0nx6bbwiblmyoyj9d34i2p3bfor8ko0lvpglylstuymdvr3lvxq01z3u6zf9mqdjloazi6bxy5zny83f3qxre51dzfdfrbdmv034i7hnez7m7qk7gahb9d174vp04nbp9lvkmfi\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"bg4kacavxqknmmwsl3ygqaqbp975kjnbjn0afml1l611sacsu83orbja713oac7f3edty3auv92qzud5y4dv85pjmi1f4899wfs2yw1wb91ph70fpf728dfjkbjfe78fmptg7cnedo3\", \"6qf74\", \"m6t9nn6zd4lnp7lb5owvickgt4devy996ih7o80blwbdh0lmv2nh28z4bl59ouhcczeqzdrgp3fqgx5fnp766fyo30nw22o42mlp9aujmvrgy47jo6etyniq2qdi1o2wc1dlwio20f5jif6gzc562o437howp9v4073hd6z2qgxoaqq7vvzetclwmc\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"o3nrsg5jhqjwnpqkvr96eokgpjprrao1np0nqgclpz1c8shjq55943sm9zvs8r13akg61bntunzcak9cqum1go6wjuqks2p1p86o7qcy3k9sxgxoftj2iyc6068ifrmfvtc6hxph07bolglyfop52hsbfmjdajmy024ukuqeywgoq5ez7ecw0a2g\", \"k605loebxsc2rrqg408ozs0zetgpn9trz565z7nvgl7l9v0gkrvp6t2tyfr3kh8or5b9jd5odli2bstpwjf5y9ld5vnfj7biz5bt8q9kgtt7ll0njgoejtvnx0yel0z6xobg3jiutto2ry2bgt61ur1g43zh664zf5xsuypccccxa771xv6nyimg3wui4ndjftr\", \"24x5p62su3g60labt17mqs78sxd\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"glk2vmrca9rfsoeygjdsbyx71ae5p14lbfn402yqmq4jluo2hng5dyacxq2ldketvfrcw0mf6ylbd38zwrrejndzgq7iv44o3k6nms6ggo0npw6s1jn528nz5se55eulizby6vrsmymuw0tqsay0t13hia53mpw5l4uzxgswam86a7l1x9ep0vvg5peqztlfgb74i36\", \"eg9biir4bfezcx2870io06fct6cxif6dtgfr1ierke6xh188ke4vl83sfijd1zogjes6gj4x9w5cmg54l99wb9slznzcikl29yf7idx\", \"hsnes6n0jiuiu3nhvuho29oueun0vrrnlv97qa8rjv0grnr5mdt2e7ji8i8zx2d8ztnm0fk73kihrtww45verfwh6p1aroxebb2lenue1qe3bp0pyeje39xjezppba345m1uxgjtew7o\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"nrbqw7tpewoms0xrq263epcs086932izwsn746rjqjz0btuh2pnhcb2z1juvdw8tdeh3m72wnn5802dnom3xlyvcg12au0dk9wgg3we0dj1ybya8cia409oll6vvaywi5mo65nsr4afwyaymxr052hgyqefoa171tct43lopbpfob59w4\", \"uz8vf3ktfvogjbav0wehbhit3xibfuxab2e0a71rrdqug0xlh6lmigvejhurwkb8xsreymuasvpmn08ckitvvfdw2bcsa3pluukilabliygscq9hsfrzqil5cb9ejrh9\", \"da1vtp7jg3lxh8641270yythcy\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"uqr2iuahudwofn8tskgi4j8kh4j36jx0xpba7tzud40a61zxntlhf8aj79e818jq2sy1h1jo100j2a9ynjru5jwwcw8818afab8wpps50gs96siw9o738\", \"3130iotuppfbvmx0p99eokujf93svjutazxthlns3y1rofvjn1xu2tq73q01was77d1zwy4eb5itqhxyrfhksf0kkgmt2s7x0t7vlrjchym1f82made2t3lckllqb4n5ee3pz3smdhkkubnnwm6k5tslwblk5vuzcg8jvvlciry\", \"ejnpmnesnk66xxef11hd1iqm1w9obg4crhwnu8v\" ]\n    } ],\n    \"service\" : \"8a7onzllmqio8m96oj8fpz349o3buq5whxyvtgguxdr1xx91bcb7y2uw\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1bf22b9e-66f0-43f8-b0b6-654e3719e22f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:23.909536Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.clientGateways.getIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "auditConfigs" : {
                "description" : "Specifies cloud audit logging configuration for this policy.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleIamV1AuditConfig"
                },
                "type" : "array"
              },
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleIamV1Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d793a9e8-26f1-455a-b603-bdba03988206",
    "name" : "Creates a new ClientGateway in a given project and location.",
    "request" : {
      "urlPath" : "/v1/d3hh5oemayk03qdhbvms5vktkuvtc6vt92yy7jktvcntiai204wq52ljwgissuzdw36pmeibofaqf78q16zsze16l1ejjpuq8r1bhdxs7e8ueopenaqfsw4qcb3waehqru23/clientGateways",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Milo Morar\",\n  \"error\" : {\n    \"code\" : 480753340,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Beatae laborum sint eaque id sapiente eum. Excepturi dolorum ut quae dolorem. Sit et dolores aperiam nemo ipsum ex autem. Deleniti autem neque explicabo ducimus eveniet dolorem qui. Omnis unde iusto e\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d793a9e8-26f1-455a-b603-bdba03988206",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:23.908294Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.clientGateways.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "68918d80-333b-4c1d-afc5-443fa2490be5",
    "name" : "Lists ClientGateways in a given project and location.",
    "request" : {
      "urlPath" : "/v1/8zmqgrb7iix3r8eadec9i6my2ab5sg15lbpampvt0cyz/clientGateways",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"unreachable\" : [ \"l9vodg43yhse9bg7yu1mwbxk52wxo31i4jqtuiagqlucnib692n9lgbv0kc7063wg44njc6i132pyrtfwvrr80mekpgs45mufqnelu567pao71y7j2t8dutc5dr1fzf1bzhirk2oxog160jaqy2wpequz89r6kuky883i\", \"g2irezbcqridkfmaqhuy1p7ssv7qcy9xsatagqzxq5sv0iib532e2qbttjl2277qbnqkyuo3lou3tnqxs75ouydcrbra8086fcl6s7lsypu8kd10aisjch9lpiqowuoasaen3du6yodl8asloof0obwps5ia87kt84w\", \"k3znqolip225zgky4xzq6uuzqksl7rzwpycrgy3zqu47jy7ko1oqkhoq89lkhphspmjce36p6pivlalo50zhps68ofd2gtgpzx5qeda8resld61mi2ifk3f51pr8b225wk317q89u\", \"qhtv7hwy8z7v7xhul\", \"y5ak0o124iurhhpdb0eehecvjj8gv\", \"v798w24kouwt3\", \"m7azwmgfe7861sz7v9g7pnkdq4z1vl5owht5i6hyzr7qkrpn5g1u04jvwivbt32r33hibyi09vsvqomky5we0zf2nqeqefd62k2un6i5dsfnmd1dd\" ],\n  \"clientGateways\" : [ {\n    \"clientConnectorService\" : \"94oxkmb4rznxs32l0whw6ot8t1xsbc10kuwgumjun3hetcfe3zpbskcnt5z8hr1hkfdkiq04lu9y5ri0xrghjfl8i6pkgn1xazytk0jq5q27wtoan\",\n    \"createTime\" : \"2022-09-12T15:19:23.907443Z\",\n    \"name\" : \"Miss Bennie Schaefer\",\n    \"updateTime\" : \"2022-07-18T15:08:23.907509Z\",\n    \"id\" : \"h4b0\",\n    \"state\" : \"ERROR\"\n  }, {\n    \"clientConnectorService\" : \"eem6qwihcoox0r0v0cvg4ahxwfkvn1chrylw2ckubsy33z2g5b2rpn685ypxsn90tb97od5js6\",\n    \"createTime\" : \"2022-09-28T16:26:23.90765Z\",\n    \"name\" : \"Chrissy Morar\",\n    \"updateTime\" : \"2022-12-21T16:57:23.907718Z\",\n    \"id\" : \"g824\",\n    \"state\" : \"STATE_UNSPECIFIED\"\n  }, {\n    \"clientConnectorService\" : \"hu9zhk41yy4g9\",\n    \"createTime\" : \"2022-11-20T16:01:23.907844Z\",\n    \"name\" : \"Ms. Vanna Pacocha\",\n    \"updateTime\" : \"2022-11-15T14:13:23.907915Z\",\n    \"id\" : \"b9ui\",\n    \"state\" : \"CREATING\"\n  } ],\n  \"nextPageToken\" : \"j2lha16xobdd\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "68918d80-333b-4c1d-afc5-443fa2490be5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:23.908093Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.clientGateways.list",
          "schema" : {
            "description" : "Message for response to listing ClientGateways.",
            "properties" : {
              "clientGateways" : {
                "description" : "The list of ClientGateway.",
                "items" : {
                  "$ref" : "#/components/schemas/ClientGateway"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token identifying a page of results the server should return.",
                "type" : "string"
              },
              "unreachable" : {
                "description" : "Locations that could not be reached.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b5918e33-c764-4695-b330-bf83a7a5ae13",
    "name" : "Creates a new ClientConnectorService in a given project and location.",
    "request" : {
      "urlPath" : "/v1/ahseuvzygs10n3qt8su67ov514hhbd56w903e3wyfx6uqnbgnwlsdx5o76sbrq7c8b4u3qmwhhhio6vmfaj6nv9roifyh9fvlwwnfwjkpt4txe7odrvf1ag6zosufe04dz92wirjldojx9a5c9gonvtthfgz/clientConnectorServices",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Florencio Ebert\",\n  \"error\" : {\n    \"code\" : 1943445784,\n    \"details\" : [ { }, { }, { }, { }, { } ],\n    \"message\" : \"Ab ex non assumenda non amet sint. Quos atque incidunt. Minus culpa quia dolorem nihil tenetur explicabo et. Odio ipsum est magnam accusamus fuga.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b5918e33-c764-4695-b330-bf83a7a5ae13",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:23.90734Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.clientConnectorServices.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d0a204a8-3a4d-4e98-acb2-845c8612ddc4",
    "name" : "Lists ClientConnectorServices in a given project and location.",
    "request" : {
      "urlPath" : "/v1/r0q3ogzdb3vnd2vh689y4a6zhwgzehdfcczv0uzufdci9gho8s8blki7ycw2v1wnflgn09gl7l8lxndah8xqjsqbhpojizb8ooreh70yhvids6dzfz2iapumoq5ryd7ajk35al9y20i2iuzrkhz4pppnoryuwd4pg9hjpbsbub8ctwg2i3y41zhnxlj/clientConnectorServices",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"unreachable\" : [ \"33u4w8gchr2dcb6gmrbzu9zwk53wyaq3mtlkxd3qc42va88ymgvgzqwj1tn3er6qvp0jq0kwy47w\" ],\n  \"nextPageToken\" : \"pj7ndi14o32idn5wyroklq9e995ucixwxgytc4j18t9g9izemscu\",\n  \"clientConnectorServices\" : [ {\n    \"ingress\" : {\n      \"config\" : {\n        \"destinationRoutes\" : [ { } ],\n        \"transportProtocol\" : \"TCP\"\n      }\n    },\n    \"createTime\" : \"2022-04-11T16:33:23.906708Z\",\n    \"displayName\" : \"Lenita Zboncak\",\n    \"name\" : \"Miss Teisha Hodkiewicz\",\n    \"updateTime\" : \"2022-04-12T15:02:23.906826Z\",\n    \"state\" : \"DELETING\",\n    \"egress\" : {\n      \"peeredVpc\" : {\n        \"networkVpc\" : \"s2bruas2xug51hikeautkqzadh07pzqj4o4xsh4s1n62cx7qgd854c1id3xfsb83p69zbwtu4fg9fenh9hgmqcjs\"\n      }\n    }\n  }, {\n    \"ingress\" : {\n      \"config\" : {\n        \"destinationRoutes\" : [ { }, { }, { }, { }, { }, { } ],\n        \"transportProtocol\" : \"TCP\"\n      }\n    },\n    \"createTime\" : \"2022-08-17T15:06:23.906918Z\",\n    \"displayName\" : \"Dr. Alec Champlin\",\n    \"name\" : \"Luanna Daniel\",\n    \"updateTime\" : \"2022-08-19T17:09:23.907028Z\",\n    \"state\" : \"ERROR\",\n    \"egress\" : {\n      \"peeredVpc\" : {\n        \"networkVpc\" : \"ebm8md00hws6oyww961eb80gxg1ben24hezz8kkel3pfxvxumfykghee9g7\"\n      }\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d0a204a8-3a4d-4e98-acb2-845c8612ddc4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:23.907152Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.clientConnectorServices.list",
          "schema" : {
            "description" : "Message for response to listing ClientConnectorServices.",
            "properties" : {
              "clientConnectorServices" : {
                "description" : "The list of ClientConnectorService.",
                "items" : {
                  "$ref" : "#/components/schemas/ClientConnectorService"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token identifying a page of results the server should return.",
                "type" : "string"
              },
              "unreachable" : {
                "description" : "Locations that could not be reached.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3e40b81d-00ae-422a-b451-44b2fe5f498c",
    "name" : "Creates a new AppGateway in a given project and location.",
    "request" : {
      "urlPath" : "/v1/ivf95k6q4d84prkpzkbkjfyt1ttzwnjtdrn6vm3yvov1b0ea1zmux0aw9f161z5y46a2ekqdejuqzp2w1pux349l0dkmqzgimu0duyexms9kb0ejdk7hw6gsy/appGateways",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Miss Wilda Yundt\",\n  \"error\" : {\n    \"code\" : 1599105906,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Id alias ex quibusdam tempora in. Error quae voluptas quo enim voluptatem similique. Quaerat hic quia quae consequuntur reprehenderit ipsa rerum. Ratione ut eos totam veritatis porro. Velit impedit ad\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3e40b81d-00ae-422a-b451-44b2fe5f498c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:23.906604Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.appGateways.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a4cae443-4305-401f-ad4b-5487b89dc410",
    "name" : "Lists AppGateways in a given project and location.",
    "request" : {
      "urlPath" : "/v1/gnxr34hsy6r2mt254uo7omc9x91pb953rprfwz6576y9wvt6oe6ekebz4ledt1e4kl7x78giksez6u9lczy5k0wgz316396iwjjytd0k7alhfv1h0zj9wcm4vxmh740yg32q56tjtrsyzmm4bwl5owursl9y9ggz75w8bshb5fkrmjn/appGateways",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"appGateways\" : [ {\n    \"uid\" : \"1qt3\",\n    \"allocatedConnections\" : [ {\n      \"ingressPort\" : 1971377745,\n      \"pscUri\" : \"https://web.example.mocklab.io/697920\"\n    }, {\n      \"ingressPort\" : 426569615,\n      \"pscUri\" : \"https://web.example.mocklab.io/876169\"\n    }, {\n      \"ingressPort\" : 1106329756,\n      \"pscUri\" : \"https://web.example.mocklab.io/089400\"\n    } ],\n    \"createTime\" : \"2022-04-22T17:04:23.904796Z\",\n    \"displayName\" : \"Emmy Runolfsson\",\n    \"hostType\" : \"GCP_REGIONAL_MIG\",\n    \"name\" : \"Benny Gislason\",\n    \"updateTime\" : \"2022-12-30T15:09:23.904912Z\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"type\" : \"TYPE_UNSPECIFIED\",\n    \"uri\" : \"https://web.example.mocklab.io/200371\",\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"3bm7\",\n    \"allocatedConnections\" : [ {\n      \"ingressPort\" : 46555240,\n      \"pscUri\" : \"https://web.example.mocklab.io/312515\"\n    } ],\n    \"createTime\" : \"2022-11-08T16:54:23.905156Z\",\n    \"displayName\" : \"Latoya Larson\",\n    \"hostType\" : \"GCP_REGIONAL_MIG\",\n    \"name\" : \"Pierre Huels Sr.\",\n    \"updateTime\" : \"2023-01-27T15:46:23.905275Z\",\n    \"state\" : \"UPDATING\",\n    \"type\" : \"TYPE_UNSPECIFIED\",\n    \"uri\" : \"https://web.example.mocklab.io/742963\",\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"a5jl\",\n    \"allocatedConnections\" : [ {\n      \"ingressPort\" : 1718452027,\n      \"pscUri\" : \"https://web.example.mocklab.io/191092\"\n    }, {\n      \"ingressPort\" : 484979224,\n      \"pscUri\" : \"https://web.example.mocklab.io/933294\"\n    }, {\n      \"ingressPort\" : 212019983,\n      \"pscUri\" : \"https://web.example.mocklab.io/311471\"\n    }, {\n      \"ingressPort\" : 2026773677,\n      \"pscUri\" : \"https://web.example.mocklab.io/507931\"\n    }, {\n      \"ingressPort\" : 781017556,\n      \"pscUri\" : \"https://web.example.mocklab.io/429458\"\n    }, {\n      \"ingressPort\" : 343700389,\n      \"pscUri\" : \"https://web.example.mocklab.io/424547\"\n    }, {\n      \"ingressPort\" : 375797681,\n      \"pscUri\" : \"https://web.example.mocklab.io/623280\"\n    } ],\n    \"createTime\" : \"2022-06-07T16:54:23.905929Z\",\n    \"displayName\" : \"Terrence Herzog\",\n    \"hostType\" : \"GCP_REGIONAL_MIG\",\n    \"name\" : \"Mauricio Hegmann\",\n    \"updateTime\" : \"2023-01-21T17:20:23.90605Z\",\n    \"state\" : \"UPDATING\",\n    \"type\" : \"TYPE_UNSPECIFIED\",\n    \"uri\" : \"https://web.example.mocklab.io/225208\",\n    \"labels\" : { }\n  } ],\n  \"unreachable\" : [ \"1uqaouq45hsxip5a5pjtkms3d71u\", \"dmvi4wpcrgvd4ctznruwefzen1pghy4vdigr80h2iyo3u5h1x5wrd\", \"yhgb9k084ee9q4latm6tjwjqp4\", \"182blvcgmw162hn0pbuqpdv6xw3tj2cvs2gpch1fcbel5tysio8mm8yzf2mb77u1hprvke63h1giad5cc88f97qzb1o3aj65psm0hdvzhygbdp4561byokb8whudys59vge96wez4nlcmhoopm5u\", \"l83qmkiu6ly47120px1dfqboe3p5gjqocvtnhtw9i4qsa8mgqioz512ejd4i1o8xkn9ocnvs1htwfh727unc6nurs6rrym1t6gggkmevm7iqsc9d7wqut8liii0m93a8d1opbuqvzjbkz9t9rxo9y0\" ],\n  \"nextPageToken\" : \"5zfu6tv12klbjhx22spptmqbfen9r948cawmq7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a4cae443-4305-401f-ad4b-5487b89dc410",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:23.906291Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.appGateways.list",
          "schema" : {
            "description" : "Response message for BeyondCorp.ListAppGateways.",
            "properties" : {
              "appGateways" : {
                "description" : "A list of BeyondCorp AppGateways in the project.",
                "items" : {
                  "$ref" : "#/components/schemas/AppGateway"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              },
              "unreachable" : {
                "description" : "A list of locations that could not be reached.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5b3ab5be-201c-4026-b174-5926c3394586",
    "name" : "Creates a new AppConnector in a given project and location.",
    "request" : {
      "urlPath" : "/v1/qzg9vugxb7betz6c2xpfa3lcao50zxfzwvqn6wun8p0f30vbgylw2e378qhh2qx8sr5lzdh2w5b/appConnectors",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Barry Hodkiewicz\",\n  \"error\" : {\n    \"code\" : 539844215,\n    \"details\" : [ { } ],\n    \"message\" : \"Voluptate animi rerum qui eum optio maiores id. Mollitia molestias eum qui ullam dolor sed. Qui enim consectetur aut et. Ipsum qui tenetur adipisci occaecati.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5b3ab5be-201c-4026-b174-5926c3394586",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:23.90446Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.appConnectors.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2b7008f4-deab-456d-81b9-dab84a82bcb2",
    "name" : "Lists AppConnectors in a given project and location.",
    "request" : {
      "urlPath" : "/v1/0h9mq3x5hd185oc4zlkr4eg4qfeiqz071z8bimy498ic6n4yw2dj2pr5cxoqcygmvphv27ojbcn1pb9h5ef8xc5jrwcd82f1r4g72pni8haf0/appConnectors",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"unreachable\" : [ \"kgu0qdq3p1hsqkwla5hbobq6mv2vmzqlouax5c7dm5thvjm6vxgu039kdndg1pakw4t0gqw\" ],\n  \"appConnectors\" : [ {\n    \"uid\" : \"24j6\",\n    \"createTime\" : \"2023-01-31T15:44:23.901171Z\",\n    \"displayName\" : \"Maddie Lesch\",\n    \"name\" : \"Zenaida Parisian\",\n    \"updateTime\" : \"2022-07-08T16:21:23.901292Z\",\n    \"state\" : \"CREATING\",\n    \"principalInfo\" : {\n      \"serviceAccount\" : {\n        \"email\" : \"g3vhag49805g1u44qgbm68z5zg2w9kndrnspq5eyy\"\n      }\n    },\n    \"resourceInfo\" : {\n      \"sub\" : [ {\n        \"sub\" : [ { } ],\n        \"resource\" : { },\n        \"id\" : \"264r\",\n        \"time\" : \"2022-10-10T16:34:23.90144Z\",\n        \"status\" : \"HEALTHY\"\n      }, {\n        \"sub\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"26po\",\n        \"time\" : \"2022-09-07T16:22:23.901572Z\",\n        \"status\" : \"UNHEALTHY\"\n      }, {\n        \"sub\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"7162\",\n        \"time\" : \"2023-02-20T18:04:23.9017Z\",\n        \"status\" : \"HEALTH_STATUS_UNSPECIFIED\"\n      }, {\n        \"sub\" : [ { } ],\n        \"resource\" : { },\n        \"id\" : \"l1i3\",\n        \"time\" : \"2022-05-25T17:46:23.901822Z\",\n        \"status\" : \"UNHEALTHY\"\n      }, {\n        \"sub\" : [ { } ],\n        \"resource\" : { },\n        \"id\" : \"y92n\",\n        \"time\" : \"2022-07-30T14:48:23.901938Z\",\n        \"status\" : \"UNHEALTHY\"\n      }, {\n        \"sub\" : [ { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"7fg3\",\n        \"time\" : \"2022-10-26T17:44:23.902063Z\",\n        \"status\" : \"DEGRADED\"\n      }, {\n        \"sub\" : [ { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"64jw\",\n        \"time\" : \"2022-11-19T16:56:23.902186Z\",\n        \"status\" : \"HEALTH_STATUS_UNSPECIFIED\"\n      }, {\n        \"sub\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"ctzr\",\n        \"time\" : \"2022-11-21T15:57:23.902309Z\",\n        \"status\" : \"UNHEALTHY\"\n      } ],\n      \"resource\" : { },\n      \"id\" : \"2p53\",\n      \"time\" : \"2022-03-28T17:34:23.902431Z\",\n      \"status\" : \"UNRESPONSIVE\"\n    },\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"319g\",\n    \"createTime\" : \"2023-01-23T17:40:23.902556Z\",\n    \"displayName\" : \"Elvis McLaughlin\",\n    \"name\" : \"Ms. Mohammad Ondricka\",\n    \"updateTime\" : \"2023-02-13T15:38:23.90267Z\",\n    \"state\" : \"CREATED\",\n    \"principalInfo\" : {\n      \"serviceAccount\" : {\n        \"email\" : \"svump13kld5jgc8c5ddp1wpod55uecaaawbv0tboyfwhycl3buwt6jlh5d0b93mcct2nu8hxj74cm\"\n      }\n    },\n    \"resourceInfo\" : {\n      \"sub\" : [ {\n        \"sub\" : [ { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"js6l\",\n        \"time\" : \"2022-07-13T16:56:23.902818Z\",\n        \"status\" : \"UNHEALTHY\"\n      } ],\n      \"resource\" : { },\n      \"id\" : \"mbw9\",\n      \"time\" : \"2022-09-17T14:52:23.902933Z\",\n      \"status\" : \"HEALTHY\"\n    },\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"x831\",\n    \"createTime\" : \"2022-05-12T17:39:23.903049Z\",\n    \"displayName\" : \"Georgianna Langosh II\",\n    \"name\" : \"Jeanene Lang\",\n    \"updateTime\" : \"2022-07-09T14:34:23.903159Z\",\n    \"state\" : \"CREATED\",\n    \"principalInfo\" : {\n      \"serviceAccount\" : {\n        \"email\" : \"uths89snfj2e72lby6jlnvd11n3yt2lfd1yc1hwn4rh5kga2zhxbk5oqqltjkmktlmatv2k4bg8droopw9rvf6u88zgw7q77\"\n      }\n    },\n    \"resourceInfo\" : {\n      \"sub\" : [ {\n        \"sub\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"ou4g\",\n        \"time\" : \"2022-04-23T15:24:23.903306Z\",\n        \"status\" : \"HEALTHY\"\n      }, {\n        \"sub\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"8o35\",\n        \"time\" : \"2022-11-16T16:33:23.903432Z\",\n        \"status\" : \"DEGRADED\"\n      }, {\n        \"sub\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"z18t\",\n        \"time\" : \"2022-12-31T16:08:23.903554Z\",\n        \"status\" : \"UNHEALTHY\"\n      }, {\n        \"sub\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"0703\",\n        \"time\" : \"2022-06-24T14:24:23.903678Z\",\n        \"status\" : \"UNRESPONSIVE\"\n      }, {\n        \"sub\" : [ { }, { }, { }, { }, { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"6i29\",\n        \"time\" : \"2022-06-05T15:17:23.903804Z\",\n        \"status\" : \"DEGRADED\"\n      }, {\n        \"sub\" : [ { }, { } ],\n        \"resource\" : { },\n        \"id\" : \"4tdh\",\n        \"time\" : \"2022-08-01T15:40:23.903925Z\",\n        \"status\" : \"HEALTH_STATUS_UNSPECIFIED\"\n      } ],\n      \"resource\" : { },\n      \"id\" : \"z3tx\",\n      \"time\" : \"2022-08-06T16:28:23.904041Z\",\n      \"status\" : \"DEGRADED\"\n    },\n    \"labels\" : { }\n  } ],\n  \"nextPageToken\" : \"6o4eub7vqovfflolbe3phozvjn1m225kz5dlnaq0wwafgavu49j8l21y3rghycovq6x1cgwkv61q1ff8l6cz3t97k769sxyo3oh7zlrno1xzto0af6j8lxva2ylswnvgeig5xtdqgqmhahnh5wf4srbim2s7mcfbkx2kqp4k\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2b7008f4-deab-456d-81b9-dab84a82bcb2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:23.90424Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.appConnectors.list",
          "schema" : {
            "description" : "Response message for BeyondCorp.ListAppConnectors.",
            "properties" : {
              "appConnectors" : {
                "description" : "A list of BeyondCorp AppConnectors in the project.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleCloudBeyondcorpAppconnectorsV1AppConnector"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              },
              "unreachable" : {
                "description" : "A list of locations that could not be reached.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d493477b-d87b-4f6d-853d-499a22035f31",
    "name" : "Resolves AppConnections details for a given AppConnector. An internal method cal...",
    "request" : {
      "urlPath" : "/v1/nfat9dx634o22kzgrjjh0dn75gek8y8hin3juh4fjx3dpj4rprg34sgwm00zgh91fppaww08735iz7y441xcn9jfyhradeh9trpd5f0r79eoh7twcfl323tyotb1regtlkntflg2fkp8x4xte891/appConnections:resolve",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"unreachable\" : [ \"hhs6f9m65okyq3hei9rdgitglckg7muzz5r6iv14mu4nq5groy4xv8z75hsixta1yyyoe3jxubpf4qqdh7iucyh217beflvavk1gdsv4wmvjmqjq6b2zfwb76903jt691frjk0hnlntipkwj6fo97qelne1xenxp0\", \"qketeiqrq7fvp9xi3g5clstgkc2mtt8j1xbouhhea352im6q0c0uoedipq0tcyt3gldgdvjk4qk3sb828c3x8w7sma\", \"yw5zm27j6c061hm2f1d3urz4hkdsr6h5p2o9iaqogki5vdgrqplbi0h1n\", \"fqjuaxm9l225yweatwn9flhfxxna3chl1va0cdn2eqobl1synof1hjw30ep4o4trfco823myhs1818lc8rcmnwrrj6oar7g2et1qedlnxr3ggt8aq8l62ksz65hgjecbazsxi0iqrbsujk963fftfbl7w7nvie7tatie0bwwi957m45qv0\", \"yfxz61klp4zpzxyfn4x4t4w15\", \"bmugw5hg4zcfdxqekoskp2f7qjy3avmz\" ],\n  \"nextPageToken\" : \"23sjwavaqphd4c9vl2e87ikt5k3vhnotnp9kuikotb4jeic\",\n  \"appConnectionDetails\" : [ {\n    \"recentMigVms\" : [ \"uiorrlsutdouw2lsnsftkx4tcyu5elaspqjandi99j4tqpdtplogv5jfd7bcubxflb8lvk\", \"3ei6d6\" ],\n    \"appConnection\" : {\n      \"uid\" : \"4p5f\",\n      \"connectors\" : [ \"f2giigq3k9txtukwr9k\", \"q8f9t9l6pro12rbi2rw1okb57qgtd55jhrhpoy8dnt4g9fp8jtrsdmol5txe85xsds605fwr5u05r5ah42txf6hlz8bjvxrmvjzj43f3td529odqsv3zd46ennl24gtiwmmeejv996hwqzg11b8z44qe3nrvrd8nacu9z49hnazenc10\" ],\n      \"createTime\" : \"2022-10-01T17:32:23.899731Z\",\n      \"applicationEndpoint\" : {\n        \"port\" : 1681943311,\n        \"host\" : \"c8j5st9wp0xcne5uq5pcenox6ev9l7327tqkm4wsks006guvnf5wgjxo0hnazcuf1tvcstp0fjua1lurim4crd85p5pi86k3t0qoxui67h3elw5fyh0abira4mreon7dxhc9uo1gqnczdw1871d\"\n      },\n      \"displayName\" : \"Clair Barton\",\n      \"name\" : \"Sheldon Jones DVM\",\n      \"updateTime\" : \"2022-08-18T16:56:23.89988Z\",\n      \"state\" : \"DELETING\",\n      \"type\" : \"TYPE_UNSPECIFIED\",\n      \"gateway\" : {\n        \"ingressPort\" : 2012672221,\n        \"appGateway\" : \"wp9hbg5\",\n        \"l7psc\" : \"glykx0c17pyquhfpj3p6g0\",\n        \"type\" : \"GCP_REGIONAL_MIG\",\n        \"uri\" : \"https://web.example.mocklab.io/095410\"\n      },\n      \"labels\" : { }\n    }\n  }, {\n    \"recentMigVms\" : [ \"unhh\", \"uxt7d0jwwigi7dsxvub7gdg0w8ftyl7e8sd8y8\", \"7raofcwibb4q741i1l8sopzw9zcnoy3txbr\", \"k835r54v2v0ppyhisckug6zpytt0n15zss3bt3esv3tnlidfo73u8s03pbtqvx5vsbm5sv3r731uk1izu0rrkmitvby7b13tm7b61wb1dhwyrgyrtyb6\", \"341ljlhchexycg\", \"zibgim067svle53wlqtguq73tf9w1vmwkr1nzfohheirdqhduwzv6m2hr9o4e1kvvznbngjnt9e7fsckw0\" ],\n    \"appConnection\" : {\n      \"uid\" : \"t8qd\",\n      \"connectors\" : [ \"zzu86x8lnu5xdo2t2eup2rqldai7no04fosbmu7u56ijtc7acvma4v9164u6dd6q9dffbdk6lzdv8zy7asxqfycvngxh520\" ],\n      \"createTime\" : \"2023-02-14T16:16:23.900175Z\",\n      \"applicationEndpoint\" : {\n        \"port\" : 421981057,\n        \"host\" : \"2hk9nx8ox2i2qo2z6k29vg9llzlff8xoc3zwj2r60xsrawn26e3nivw8b8kkuw43x376f52xdlo9h4pztlaes0sch3nkp5d64x4ok8k0e7235jucd8xfhd46ayhu84wnu2tl5pp3a5xm7roapva\"\n      },\n      \"displayName\" : \"Tenisha Parker\",\n      \"name\" : \"Gussie Gulgowski\",\n      \"updateTime\" : \"2023-02-20T15:43:23.900313Z\",\n      \"state\" : \"DELETING\",\n      \"type\" : \"TCP_PROXY\",\n      \"gateway\" : {\n        \"ingressPort\" : 331046978,\n        \"appGateway\" : \"2odt6blojixtgt6mle87saaurpjjkzlq9p6lv48i9l7e5isd6p6mez6m0s7h7\",\n        \"l7psc\" : \"14me98ute\",\n        \"type\" : \"TYPE_UNSPECIFIED\",\n        \"uri\" : \"https://web.example.mocklab.io/844020\"\n      },\n      \"labels\" : { }\n    }\n  }, {\n    \"recentMigVms\" : [ \"uzlsx5vw78tt6ooo3k0bb7f6pabzwg177pvthzf7z0q9x17scng07q3xumi7cp9ll3pqeo331acw2bc60xy9rddk26o6oww84qoht8cx95b3msbm7mijamtdmxqi0x7ugdr75q\", \"bgfkf34ctnumwqdgb4kz7b63l1iqrc01juxnbbzrx11tn3l44lavh0ee2ei0p9ybxhd4cbgmn5fu8xwhvfteen66uv0i259xv5nzf7ol7soug0jkdbnx7kjpf0mx8n15uuzrv2fwhlp5df2v6263jn4ub9107g\", \"2h2g531gmburltj8g184gtm80rv7prplh1ar5q6km21irxhrhq9z1icbylznc4h\", \"wioj4nnja7q0v37du94c7zwy9xnn25m7ca56hsmdpfmdxzwugxm01dtmag19w0p7xatq1fhre1z0qma36rxkbvjfxm1udhbil70usq4cgww1a6loskurz7s9a7043skbb1sc5s7h4xes7eoefw9onwyhfph93hn2ojyzt96dc4gljmpkyi1dwm7jyqx\" ],\n    \"appConnection\" : {\n      \"uid\" : \"en6a\",\n      \"connectors\" : [ \"e1jqhx14cnqmj3wxxojzocjrj1trmcwzrahj2d398cy4xsdpw\", \"y5a3gykv3s1dn3ocnpuijwk6dl6b23aunmrnjm7hl3g5jvq0y5rilptki1yxo7i1yshj564ppdly6w3c2f7b8div31hqp6wib4o2\", \"it0xustocqe33ca0e5bq0hnn0zi6mz7j12qwgr10kkvmry6x72lru\", \"is01s3gf4gwy28n6qkajov7a2h5km9ukz3lp53va9p9b7qcpfv5urm5vqesem4z4gwnou1panacorqpb9zkdsrfj6g06ufwwu47txg44ev280ktnvs2iwkdbq0hcplrp0u1a0kq6bbipvlwlyl0jrkra5qu49wj2ezopshqf43htsb92orde1oxwndgyg088w7\", \"is7z9kv5fue26h6xpp1lz7k2v563aj8uwxgcont9uov80m29ftc052hrjoqobkcxr6a924vks17e67nkxf4cj679syoguhvm8jsp9jf9lw2lyq035fovl92rgmvbdon49zkm6ke1jjy4114q1o1n2lf9utrktsx\", \"5rri5q4tmi4ufafw2847e80llkgn3mefo408gz1s2cexuoxqvi4iuf01k1migp8k835catyto5gkdvfjf8e0ucq3zft\", \"2xtecwhzfxc6iq8ynopd07zughbpwrq9mt8zdtkc5g28qlqi8vzqk23rqpx7wjyubfa3m3j5b2wejq81mqq6c7icfm1gk6plh0g7h9qsc7k6vw8k88ct7m6\" ],\n      \"createTime\" : \"2023-01-07T16:13:23.900633Z\",\n      \"applicationEndpoint\" : {\n        \"port\" : 1857861942,\n        \"host\" : \"7jcm878dzslq118deb8v50gg4mv3prg9pc4ryrod4y1pg95n34j7bjcolraccdcimuvf0ayb9qokn68dazz8ebisc7ra2uhcg09n6ok2fw77w0y07ik24hpkpvujftun0j15wqlbtk6eie9rhj2qk457lnmm3jkid81bnbeqox5hpsgsgjcax\"\n      },\n      \"displayName\" : \"Alexander Koelpin\",\n      \"name\" : \"Lannie Carroll\",\n      \"updateTime\" : \"2023-01-23T15:32:23.900777Z\",\n      \"state\" : \"CREATED\",\n      \"type\" : \"TYPE_UNSPECIFIED\",\n      \"gateway\" : {\n        \"ingressPort\" : 738813920,\n        \"appGateway\" : \"o2uv5p4tz11crcrguf1zvk9klb5a0jpkckpfyw7iv3ki4ojr0ds4uqmjbrcgo1v8185xo2n1xychgkhpp2511xe6l7zjgkt4bnxe\",\n        \"l7psc\" : \"9mft1y9slqxghzy46qnzxu7enlp6fe6he1uby0eaztafade44rfe3jj8wvxmd4081ignz5wf48iwa\",\n        \"type\" : \"TYPE_UNSPECIFIED\",\n        \"uri\" : \"https://web.example.mocklab.io/859195\"\n      },\n      \"labels\" : { }\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d493477b-d87b-4f6d-853d-499a22035f31",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:23.901039Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.appConnections.resolve",
          "schema" : {
            "description" : "Response message for BeyondCorp.ResolveAppConnections.",
            "properties" : {
              "appConnectionDetails" : {
                "description" : "A list of BeyondCorp AppConnections with details in the project.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleCloudBeyondcorpAppconnectionsV1ResolveAppConnectionsResponseAppConnectionDetails"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              },
              "unreachable" : {
                "description" : "A list of locations that could not be reached.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "051316d2-f942-4c45-a0c4-6b3f576274c8",
    "name" : "Creates a new AppConnection in a given project and location.",
    "request" : {
      "urlPath" : "/v1/56pid10zf7nm178hlfv1mcreb7xgtozg0qmgsb5cfu52ay5tddze0aa8wtzb8qz3sejnkefs2chkbclp0f2f/appConnections",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Sunny Ankunding\",\n  \"error\" : {\n    \"code\" : 674201411,\n    \"details\" : [ { }, { } ],\n    \"message\" : \"Maxime nihil et voluptatum fuga. Porro quas asperiores. Molestiae esse cupiditate quo eos minus.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "051316d2-f942-4c45-a0c4-6b3f576274c8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:23.899526Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.appConnections.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6fb57414-c109-4814-996c-56cbf9d527fb",
    "name" : "Lists AppConnections in a given project and location.",
    "request" : {
      "urlPath" : "/v1/y3q0y6opvym7jur37l17ij7kb310ybst6ei4n5sknskbuswsu4s2i1t0b8eq2mrh9q57o7gq806v6f9jju469dc0u4wp048skf7hl5zhxu330xjs9r5b/appConnections",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"unreachable\" : [ \"71umz9ok09e3qh4gy4lfbg7lgrusmihoowj73frdx3vvlfv2oj61583wjvqv1dzvlzc7s3qv3el20qszaj1g6hjuifeswbw2c3l1r2eyk7890zbhznezbzxz5qqe\", \"3b3w4wmg31ba4xgwwgxk1qdqfvf8nxfxbpwd2mz25yi4zn66wq2nsezkzspxp7dtnzkkjzy6zzd8mdojccaqoo53h6zagr4tijww6vw03zxczsyzn\", \"upxej1vl8mx391nfe8qd6ngydtpxn3hxqn1o4l5f6rrdtzxevg96umqgwzr2jm8yxa1p80no\", \"fajai188hcs510z5trwhxqv61ih86r3bhekr5o0w4zkct3w25zu5d8clc77j22vadniir13n91l3jq\", \"i4mhxmlhzxhlnamhr4rmi8huh3i3l21kqim7me2bq28qem4nd04r7j596w0g0bahbc7v8db83tzl7qxpqmqr7vu63qwykv9h5s7ksjdl5i8q32ak5cwiblcc\", \"a7v506hfo168jt2y79h7fr91tnl0qfefa16r4ws4mtzi6drv519cx305atgftvkxzldjyjpsjiua1o20qbwkbmvjnxom84auuxpx\", \"3j1b50drm2h1y10tuj6v74hp9ul9fboe92zva8f40fcgcu0k7srmf0uzrunzwcpnhw9hqxpc7t\", \"92lxd8ba7a5x7bhrj9wn0kxw3pugentt6qifoktdzl4dkg491d93szrdxdv4b87kjrn7e71mrz8w6p9o30vkuttk3ti0qp5wfpbidf3j4v4bksy3h6ehxf\" ],\n  \"nextPageToken\" : \"qhmve12358y8g9pris3n31jkd6bx5w82yl5bh7iy4tukqsinisjz89kb1dojunqx2r6ddhdy28u6rcbdwgfrlq2s0s3qrxea8dusjnmxd18elxkbl2b6s177co2x8qkje9302868isuhqjkz187k8yiwvzr4alzadda9elwjd5iimlfbch2uq\",\n  \"appConnections\" : [ {\n    \"uid\" : \"3bcf\",\n    \"connectors\" : [ \"h31o5mpf6nf4plpwcq525z85d1zzi960qv2watjmstnoelz0gu458b1hcbjk0zll2znswxfv1v1uxy07cbog5ayswrih9ht276te6lup52b7d4pwryby9k7yxadyhl30rly08pw5k22a\", \"fpo2tmpdb7k4gxndnpuiue1su5b1wxuqv9ot531zsmspewkdy2j42ua4qww4q5t0ho0ramsijyocyi61wtug6ywgqhbjm6qqkjexhz6hp2nzuzfs52kaapflqx84eo9fs26c73g1hzi8krhitkf51t8jvsxszjf4ttluq4844s0x5az81\", \"iaacvdx5vi1hjb0m3xi228cr3zn6a6fqkk9dvri6oob7abrj04khr867bblm4gi712duem6\", \"lkh87oaextls9lp8larx6cdmxmdokl7bfr9m5svcvsf0rduylk9zr6kq4gws48w36p2t7bkwf\", \"fpjh7lfswvc4mtnu6ei1ckpy16bgl6u36p0orge383f9flzhf37ndhdrq3o8zhplrf1uq8ocner6akjv4ep5gyatjc0nfxm5et9uib\" ],\n    \"createTime\" : \"2022-09-03T15:08:23.898096Z\",\n    \"applicationEndpoint\" : {\n      \"port\" : 1242203532,\n      \"host\" : \"jiofybka10j3snp9iwuukzi0gniy089una5lhrjeqmdz4m11e7s6tb6q3ym8nwabglgpm39rrvfn7iav62fvb2ffyu4uo4bzb1zj5pz4mvxu6rbbxdq8d\"\n    },\n    \"displayName\" : \"Rebbecca Borer\",\n    \"name\" : \"Jonah Funk Jr.\",\n    \"updateTime\" : \"2022-09-16T14:43:23.898239Z\",\n    \"state\" : \"DOWN\",\n    \"type\" : \"TYPE_UNSPECIFIED\",\n    \"gateway\" : {\n      \"ingressPort\" : 2146841072,\n      \"appGateway\" : \"teaymsnx30089ajgfmmxfhe0qef6qycyvhdvhxosml2rgbv5q3cvs4hk5am3p6ogw9bwurmkld8gsz0ouzbcpvjuhy8d4ap6ff46jo6ufqxezx06ib3kwq1g6q7eg8qo1i\",\n      \"l7psc\" : \"h211kf37f5ud5bz1tg9wxk5q1ftugwftwsby0in97g3tr820088y8fodkgdjo2bv87ly3fibysgde044ifcgorkynm9eot7yl76kyuwffoiwrfsoctffjqkf7rz7ydpz5x6ptfr\",\n      \"type\" : \"TYPE_UNSPECIFIED\",\n      \"uri\" : \"https://web.example.mocklab.io/227689\"\n    },\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"4bod\",\n    \"connectors\" : [ \"1wwqgkz1z4xgkihanhxmo27bldhbcp2cksoed0g2xg2fcn278gkxyt3akqhe8f6tvanss40v8a6kx0n5zlfynvz3sih\", \"uf1d0a7jspr5ro8vzn5maot1xrcf4987c59gyszkshozy8ml047o3k6d2ntetgm5pxr0j8r8j5rwnz13gpkyxd6974bqt9rv60y94zr57kcfsa5n4e5ci7z44x9x8vrikcmntczsuhg9m5u6yvykolmb5wfdi7ie8bcf1o7kriq00zg7skak\", \"1ssb13t2l756xq64lq9sqmxju4r9gb066j5gxj7208v9tp905eldrdbnrr8fp9e0tthbkhl09b4a4wdi4663wqni9cbe8w0mypl4sfn2o1qozaxl73p9lmrog5dik1sgcj7on2wh3bkgittv6v4g7xyxr4oc5by2pfkbwuddw0dknyz2xs8\", \"v98ul596qzo0g6m6jx3w47xqe8cevmrnjo4948njagvbk02ili7p8u98dd6msebaokbd6sw4dy9t66qll6aurjvkkm5mgcowe\", \"wdvy29\", \"lmx2aigpalpp7yh5g2k0w503nqveeloyy6\", \"72s4gvx9j5fcc7btsz6tcjd2wafkjjupwe2s7k6mx\" ],\n    \"createTime\" : \"2023-02-24T16:43:23.898528Z\",\n    \"applicationEndpoint\" : {\n      \"port\" : 935145250,\n      \"host\" : \"vg3913jj6xeb9rjh5z\"\n    },\n    \"displayName\" : \"Carter Monahan\",\n    \"name\" : \"Walter Gulgowski MD\",\n    \"updateTime\" : \"2022-12-19T14:14:23.89866Z\",\n    \"state\" : \"DOWN\",\n    \"type\" : \"TYPE_UNSPECIFIED\",\n    \"gateway\" : {\n      \"ingressPort\" : 910859337,\n      \"appGateway\" : \"v8wwtat48d1uov8lehorc7foltvsc\",\n      \"l7psc\" : \"pocr9a3p7gdv85d7yxdj19x2bi5r7rhrp49pvh0pc16rhpqn5a11r21uztmym8uhrzquehg24pwmi4kg7in5tqj58qtma42i3zp502osn4m1a8mzdf5tfh2iet3gjh4kkmce4sfrtes3het0n09dyye3ps6s9hd9kmt6ui2a9km9kxobpe\",\n      \"type\" : \"GCP_REGIONAL_MIG\",\n      \"uri\" : \"https://web.example.mocklab.io/808720\"\n    },\n    \"labels\" : { }\n  }, {\n    \"uid\" : \"w19b\",\n    \"connectors\" : [ \"kl7ee42loylngjbvvrdhx2k516bn3q2u1d19tr38deaw63\", \"qg3efvy55v\", \"evaeo8ldby7uzvod7yxk2p50ru7g04ensmk7pzozhez60eq68zmgcrw6j8wfh\", \"7radg1clwwj1ybx2v6y\", \"bo7yrmw56vacnnsh9he4wk8rhzp1ucj2qizw533v1xlu2h6ggafirwv8zdv5mmr9zrz40kmzgbvbzzpnowt9qu8aa0ihlq39ie4e74nf9lkv2m76jnr07ycwbim7ss7nn9sjnkkp6w9rapvx3rivvfrjhy8iz1vj\", \"ktui8djtl78evy83wgkhblxwy3yzp1gs0pfd7dmuo2krd4bj13ez76at6xt07wks3bjr0ovj1cn4jy8r45oejba6swtm2dr2zn0css872ddq1nm0tbedjc5ye7ub7rp2e5\", \"a5vqukkuy57450zdg1fmp\" ],\n    \"createTime\" : \"2022-04-29T14:31:23.898933Z\",\n    \"applicationEndpoint\" : {\n      \"port\" : 205483222,\n      \"host\" : \"zesu76ou773sw8i48jdjtjv3dg8hsibceqivsq0cxc5k2xpn3sasgmoyu311nvmw52hlmlr00lq96n0s77w7of7fokuhanvws56zrh70wft5ma1ot4paj6okd7ol7e08xwgiuoaacp310uvd0x96\"\n    },\n    \"displayName\" : \"Zoila Mertz\",\n    \"name\" : \"Darryl Gorczany\",\n    \"updateTime\" : \"2022-08-05T18:05:23.899067Z\",\n    \"state\" : \"CREATING\",\n    \"type\" : \"TYPE_UNSPECIFIED\",\n    \"gateway\" : {\n      \"ingressPort\" : 1290709464,\n      \"appGateway\" : \"c9lug4s71g5qw6fo2fhrosj5lwajcel5ytdvuhb4kld044wh2ta3f1cxtgq03cyq43rnf9\",\n      \"l7psc\" : \"m62d0d740ghizofu\",\n      \"type\" : \"GCP_REGIONAL_MIG\",\n      \"uri\" : \"https://web.example.mocklab.io/954374\"\n    },\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6fb57414-c109-4814-996c-56cbf9d527fb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:23.89932Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.appConnections.list",
          "schema" : {
            "description" : "Response message for BeyondCorp.ListAppConnections.",
            "properties" : {
              "appConnections" : {
                "description" : "A list of BeyondCorp AppConnections in the project.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleCloudBeyondcorpAppconnectionsV1AppConnection"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              },
              "unreachable" : {
                "description" : "A list of locations that could not be reached.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1cb9feed-f018-49bc-b169-4db8be8f1bcf",
    "name" : "Starts asynchronous cancellation on a long-running operation. The server makes a...",
    "request" : {
      "urlPath" : "/v1/Mrs.+Raleigh+Cummerata:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1cb9feed-f018-49bc-b169-4db8be8f1bcf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:23.897871Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.operations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1b77e657-2988-4c89-913f-ff148ddf4c3e",
    "name" : "Lists operations that match the specified filter in the request. If the server d...",
    "request" : {
      "urlPath" : "/v1/Jenee+Gusikowski/operations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Inge Auer\",\n    \"error\" : {\n      \"code\" : 2069291170,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Aliquid ut in ratione assumenda consequuntur architecto dicta. Ab unde quis non. Magnam reiciendis quidem aperiam. Exercitationem odit voluptatem eos.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Merle Spinka\",\n    \"error\" : {\n      \"code\" : 1223686603,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Ut ut dolore iste est dignissimos amet. Suscipit ut sed voluptatem. Fugit adipisci totam. Nihil ut aperiam et.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Mr. Claudio Carter\",\n    \"error\" : {\n      \"code\" : 122472840,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Cupiditate repellat sapiente unde totam distinctio. Eveniet eius sed. Dolore repellat delectus odit temporibus qui ut quasi.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Ashley Bashirian\",\n    \"error\" : {\n      \"code\" : 1440927191,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"A quidem quo minus consequuntur quos facere voluptatem. Consectetur nihil optio in. Error ratione et quos esse deleniti qui natus. Eum tempora quae in corrupti.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Minda Reichert\",\n    \"error\" : {\n      \"code\" : 120108507,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Delectus consequatur rerum. Odio laborum aperiam. Totam doloribus ut qui quidem aut quas repellat.\"\n    },\n    \"done\" : true\n  } ],\n  \"nextPageToken\" : \"8nsjq0omcdg9ht6u949vc3b4fe5a4eomqzd0ayukh58ud0126lsnrbn1qr4in3kywky35298b70aql3m6fju2umqxninjd46u59kay52ri05vkm4cozpjcwizm5ghycv532yremj3ube3kop43bn51tn406udbwm01n5nsgx2fz58jnebcw58o18kpsgfwc18n2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1b77e657-2988-4c89-913f-ff148ddf4c3e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:23.89779Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleLongrunningOperation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6a362690-9c44-45fc-8bd8-3d243aab459f",
    "name" : "Lists information about the supported locations for this service.",
    "request" : {
      "urlPath" : "/v1/Quentin+Kshlerin+IV/locations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"ad890dg82hfnhjs3sou9svv3el7cbzpxjnetdahn3bjwpybdcrme2ehchpcynvsq4tp1i3ysxixdtxyvrx0xye9r4b4ysn1yai4jtcmltclq2tmt5728q0yveztc455g03kw0gpxvgv67fffpje0k5lkp7d03b783\",\n  \"locations\" : [ {\n    \"metadata\" : { },\n    \"displayName\" : \"Dr. Xiomara Hettinger\",\n    \"locationId\" : \"0uy2\",\n    \"name\" : \"Eleanora Hoppe\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Charley Mraz\",\n    \"locationId\" : \"af08\",\n    \"name\" : \"Youlanda Kassulke I\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6a362690-9c44-45fc-8bd8-3d243aab459f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:23.897136Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.list",
          "schema" : {
            "description" : "The response message for Locations.ListLocations.",
            "properties" : {
              "locations" : {
                "description" : "A list of locations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleCloudLocationLocation"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "88851598-dcea-45e2-a58a-78ac9a0548c7",
    "name" : "Updates the parameters of a single ClientConnectorService.",
    "request" : {
      "urlPath" : "/v1/Reynaldo+Goyette",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Derek Funk III\",\n  \"error\" : {\n    \"code\" : 1031050752,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Deserunt dolores non. Voluptatibus et incidunt quasi impedit beatae explicabo. Et aut et nam magni tempore ut.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "88851598-dcea-45e2-a58a-78ac9a0548c7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:23.896658Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.clientConnectorServices.patch",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8f291036-414f-4844-bb63-f1f4cc8176d4",
    "name" : "Gets the latest state of a long-running operation. Clients can use this method t...",
    "request" : {
      "urlPath" : "/v1/Forrest+Feeney+Jr.",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Dr. Mirna Hudson\",\n  \"error\" : {\n    \"code\" : 81061751,\n    \"details\" : [ { } ],\n    \"message\" : \"Repellendus modi assumenda. Temporibus possimus fugiat ex enim eos. Voluptatem rerum molestiae. Dolorem officia numquam neque.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8f291036-414f-4844-bb63-f1f4cc8176d4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:23.896447Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.operations.get",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "62690922-b1de-45a1-805f-3ff42eb6acb2",
    "name" : "Deletes a long-running operation. This method indicates that the client is no lo...",
    "request" : {
      "urlPath" : "/v1/Grover+Volkman+Jr.",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "62690922-b1de-45a1-805f-3ff42eb6acb2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:23.896237Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.operations.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "08c24b34-681a-4736-84ae-2a938ac05071",
    "name" : "Gets instance configuration for a given AppConnector. An internal method called ...",
    "request" : {
      "urlPath" : "/v1/939ta35rws44ocrm6srof1lg31tm4zmfd:resolveInstanceConfig",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"instanceConfig\" : {\n    \"sequenceNumber\" : \"qd8odo577w10dasx1rqrx8ev6pkfv9rv3bztittxvmvdzqb4my19ndt66zjkazxta4bg96yelw7qlgtsjy2lx1qfkedxnmf3q0bsai5r26d05d4obnu1m83lh7o186pzfrcpae\",\n    \"instanceConfig\" : { },\n    \"notificationConfig\" : {\n      \"pubsubNotification\" : {\n        \"pubsubSubscription\" : \"jt7v63losdh9k5pt8tak8t61ctpmmo6pzue1bejp316llw7zxgmdy5cvoshv3qshtzdducdsdx5o4eyv1hh3nuw7snbmojyukp8g655fdn9vd1stj1\"\n      }\n    },\n    \"imageConfig\" : {\n      \"stableImage\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/atariboy/128.jpg\",\n      \"targetImage\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/elliotlewis/128.jpg\"\n    }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "08c24b34-681a-4736-84ae-2a938ac05071",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:23.896149Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.appConnectors.resolveInstanceConfig",
          "schema" : {
            "description" : "Response message for BeyondCorp.ResolveInstanceConfig.",
            "properties" : {
              "instanceConfig" : {
                "$ref" : "#/components/schemas/GoogleCloudBeyondcorpAppconnectorsV1AppConnectorInstanceConfig"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "97c4e832-eb46-45b5-a1f8-ec3365c88f4e",
    "name" : "Report status for a given connector.",
    "request" : {
      "urlPath" : "/v1/mjbenibv6sguj9i7fqc03mmwu9hzhdr443gjzq3ey7jundz3a9ga8qmw66sn45m26w359:reportStatus",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Domitila Crist DVM\",\n  \"error\" : {\n    \"code\" : 204953783,\n    \"details\" : [ { }, { }, { } ],\n    \"message\" : \"Nihil architecto ab enim velit. Accusantium et suscipit ipsa corporis. Nihil necessitatibus non aut nobis quo et accusamus. Architecto quia esse incidunt exercitationem non. Dolorum omnis minus.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "97c4e832-eb46-45b5-a1f8-ec3365c88f4e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:23.895942Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "beyondcorp.projects.locations.appConnectors.reportStatus",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  } ]
}