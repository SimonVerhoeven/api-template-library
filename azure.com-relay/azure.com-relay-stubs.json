{
  "mappings" : [ {
    "id" : "6891c774-53c0-4265-9b80-8560e4f687c2",
    "name" : "Regenerates the primary or secondary connection strings to the WCF relay.",
    "request" : {
      "urlPath" : "/subscriptions/z6z2/resourceGroups/Marcos+Mann/providers/Microsoft.Relay/namespaces/Wally+Lind+V/wcfRelays/Damien+Stokes/authorizationRules/Antony+Gleason+Sr./regenerateKeys",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "oeo8ahagbxus722lzmwj5vbqbhvwczbozd44mtvpuaqhafnyyluabnmoofchjhp0y5i3uihmn2pbmqe9w2w"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"secondaryKey\" : \"dc7u0cnpsc17iwyr1ip6e7m1b0bjla3bngr0wjrlh4nfk1ca9yjngz95405gvqqz6gsyd1inggq28gy4lf00xa5tuyidetnoskxeyh82mq2yakfo53u48uhtx8au3iulfgu28w0n3kf1dp0bt\",\n  \"keyName\" : \"Angelyn Hayes\",\n  \"primaryConnectionString\" : \"g72uh4muzr2x874yd4qzlx2grwzixqr43qjv52ikjpojjmec440ttfnyx1m1buwqzosnsz9ykk5kx2kfu6p378hxard1oq8qju6ea83g67fponaa\",\n  \"secondaryConnectionString\" : \"aosfr2a95l4llfnq35w6tcjb46uflzoozi4bbd4t48cnjq584tyzbl27hjmyqky1oj4av1y1hoadtnbjzxikyo7kbf20ts253\",\n  \"primaryKey\" : \"tyut7kjeeg0xyuab4k46sv\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6891c774-53c0-4265-9b80-8560e4f687c2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.405741Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_RegenerateKeys",
          "schema" : {
            "type" : "object",
            "properties" : {
              "keyName" : {
                "type" : "string",
                "description" : "A string that describes the authorization rule."
              },
              "primaryConnectionString" : {
                "type" : "string",
                "description" : "Primary connection string of the created namespace authorization rule."
              },
              "primaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit primary key for signing and validating the SAS token."
              },
              "secondaryConnectionString" : {
                "type" : "string",
                "description" : "Secondary connection string of the created namespace authorization rule."
              },
              "secondaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit secondary key for signing and validating the SAS token."
              }
            },
            "description" : "Namespace/Relay Connection String"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "4199342e-1c57-46c7-b7ce-49d4bc7a9082",
    "name" : "Primary and secondary connection strings to the WCF relay.",
    "request" : {
      "urlPath" : "/subscriptions/9686/resourceGroups/Ms.+Irving+Dach/providers/Microsoft.Relay/namespaces/Denny+Larson/wcfRelays/Mrs.+Wilson+Bartell/authorizationRules/Augustine+Aufderhar+PhD/listKeys",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "w06v"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"secondaryKey\" : \"ru1pwsabb\",\n  \"keyName\" : \"Joaquin Nitzsche\",\n  \"primaryConnectionString\" : \"e7t2stet4brh0r78w02obw41igifi5s3k923mtxgix9v78w8rf2n75xkuaku25f9\",\n  \"secondaryConnectionString\" : \"tyx4hm2gyd4aac5uguk1n6bctrlxvpqde2w2geq65nc5de11bzt09vvgztg2auy8p2wa24vw\",\n  \"primaryKey\" : \"czdu1wj69vjlbi528qandk8an0qf0t3drjwy6qz57g5bxaka51rrpsqm62t0ayypt2v4v2qwjhno4mwz9hhf4xnho3vi790kz49f5j2zcv6k0cd9n3wiex2ttqzhss96xu247j8m2xwzmur1f2w2i1mgl4tswkg033e\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4199342e-1c57-46c7-b7ce-49d4bc7a9082",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.40537Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_ListKeys",
          "schema" : {
            "type" : "object",
            "properties" : {
              "keyName" : {
                "type" : "string",
                "description" : "A string that describes the authorization rule."
              },
              "primaryConnectionString" : {
                "type" : "string",
                "description" : "Primary connection string of the created namespace authorization rule."
              },
              "primaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit primary key for signing and validating the SAS token."
              },
              "secondaryConnectionString" : {
                "type" : "string",
                "description" : "Secondary connection string of the created namespace authorization rule."
              },
              "secondaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit secondary key for signing and validating the SAS token."
              }
            },
            "description" : "Namespace/Relay Connection String"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "5a4fa7d4-8851-4829-945b-1de403ac1b55",
    "name" : "Deletes a WCF relay authorization rule. - 204",
    "request" : {
      "urlPath" : "/subscriptions/lmr7/resourceGroups/Francis+Murphy+Sr./providers/Microsoft.Relay/namespaces/Etsuko+Streich/wcfRelays/Daron+Luettgen/authorizationRules/Arlyne+Gislason",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "6lze3ex74cmvg35ubsekcdx3ab8dseh3wt50lqdna5v17h1bg7wz98g1opapf2hol8ut0cozlqz5j6dtz3xequ5gl2e69ez4v6mrbk0bx7kgxz60kk20lgs62tl4gbkjwciz3pjbjh91t2"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "5a4fa7d4-8851-4829-945b-1de403ac1b55",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.404965Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_DeleteAuthorizationRule"
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "2bf5ab25-4822-4244-82a6-d80f7c489e78",
    "name" : "Deletes a WCF relay authorization rule. - 200",
    "request" : {
      "urlPath" : "/subscriptions/0t12/resourceGroups/Haywood+Murazik/providers/Microsoft.Relay/namespaces/Fausto+Bins/wcfRelays/Mr.+Rachelle+Greenfelder/authorizationRules/Taylor+Hirthe",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "g002vr2av3yehvegi9feypylipvkqvu96cwd41fzcbzikyg2arjh84da7"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "2bf5ab25-4822-4244-82a6-d80f7c489e78",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.404734Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_DeleteAuthorizationRule"
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "3c6c61f5-f221-4113-b3b5-fc961495c0b7",
    "name" : "Creates or updates an authorization rule for a WCF relay.",
    "request" : {
      "urlPath" : "/subscriptions/sj37/resourceGroups/Ms.+Roscoe+Runte/providers/Microsoft.Relay/namespaces/Andreas+Hyatt/wcfRelays/Bret+Graham/authorizationRules/Miss+Joanie+Schroeder",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "g9pgmb5yp67sy5j47n0a9opqsbcfl360b2smpzx184k8k8gjx0c4x5dbdyovlniepddd6umt21suc3ox45cx3u9vi52c2pul5dilcmxaw0gluoyu3l1p9j86y9qgj73803hezhpg66kjadfwitrsmwy5nqfowrwflqvffpqk7mwm1pq9nhjxqh8vdnjrlryey"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Laquanda Baumbach\",\n  \"id\" : \"n4gr\",\n  \"type\" : \"lmxgsedqe5pqg5jydbx\",\n  \"properties\" : {\n    \"rights\" : [ \"Listen\", \"Listen\", \"Send\" ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3c6c61f5-f221-4113-b3b5-fc961495c0b7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.404483Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_CreateOrUpdateAuthorizationRule",
          "schema" : {
            "properties" : {
              "properties" : {
                "required" : [ "rights" ],
                "type" : "object",
                "properties" : {
                  "rights" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    "description" : "The rights associated with the rule.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "Manage", "Send", "Listen" ]
                    }
                  }
                },
                "description" : "Authorization rule properties."
              }
            },
            "description" : "Description of a namespace authorization rule.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "09cfe3ea-2cbc-45da-9885-2b4acb9debcf",
    "name" : "Get authorizationRule for a WCF relay by name.",
    "request" : {
      "urlPath" : "/subscriptions/0u09/resourceGroups/Miss+Alphonso+Wolff/providers/Microsoft.Relay/namespaces/Oscar+Lebsack+DVM/wcfRelays/Philomena+Welch/authorizationRules/Catherin+Harber",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "s1n1n8w9wl2rbp9t6dvpe0un9fv388au7s7bickqpndjguaw8x"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Josh Padberg\",\n  \"id\" : \"k2f1\",\n  \"type\" : \"9fks9r9mgm0t3gxauvzigkinuz701fq366sttmup1sh9v8xomb6hspmi0b1zwc1v5sjfpug2571kt0mqeg1sng0q74cviztgyp3dy5zpot8qtgykuilok0dbr4ldgmxwy174kr38a7fsidf2u9wknqsoce3k5q9t3cg6npk9f65hdaaoix9h25\",\n  \"properties\" : {\n    \"rights\" : [ \"Send\", \"Manage\", \"Send\" ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "09cfe3ea-2cbc-45da-9885-2b4acb9debcf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.404067Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_GetAuthorizationRule",
          "schema" : {
            "properties" : {
              "properties" : {
                "required" : [ "rights" ],
                "type" : "object",
                "properties" : {
                  "rights" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    "description" : "The rights associated with the rule.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "Manage", "Send", "Listen" ]
                    }
                  }
                },
                "description" : "Authorization rule properties."
              }
            },
            "description" : "Description of a namespace authorization rule.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "2c1eed76-a604-460a-ae27-012caa3e57d5",
    "name" : "Authorization rules for a WCF relay.",
    "request" : {
      "urlPath" : "/subscriptions/8ta4/resourceGroups/Loren+O%27Conner/providers/Microsoft.Relay/namespaces/Cordie+Stamm/wcfRelays/Dr.+Hector+Luettgen/authorizationRules",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "p1utwvvw9p6aztdv8f74abiwe89u49g7rtla"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Lina Greenfelder\",\n    \"id\" : \"n6c2\",\n    \"type\" : \"sqs\",\n    \"properties\" : {\n      \"rights\" : [ \"Manage\", \"Manage\", \"Listen\", \"Manage\", \"Manage\", \"Manage\", \"Manage\", \"Manage\" ]\n    }\n  }, {\n    \"name\" : \"Linn Bins\",\n    \"id\" : \"8s66\",\n    \"type\" : \"lpefmk6rkx5muvqwdzoggruo488f0i1zxfuuhzuzy0i7tas7kk9qade3bmtbxl9pxi2j669zb51zwv36hj6fvrrfgn71a0f9zv\",\n    \"properties\" : {\n      \"rights\" : [ \"Listen\" ]\n    }\n  } ],\n  \"nextLink\" : \"5wczfc2m6zqicur2qq0ux4kq54g4rxkt5lnsdzps73nfs61rcm\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2c1eed76-a604-460a-ae27-012caa3e57d5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.403638Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_ListAuthorizationRules",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if value contains incomplete list of authorization rules."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the list authorization rules operation.",
                "items" : {
                  "$ref" : "#/components/schemas/AuthorizationRule"
                }
              }
            },
            "description" : "The response from the list namespace operation."
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "21c856c8-b5a7-46ba-af14-d4b99a37e38f",
    "name" : "Deletes a WCF relay. - 204",
    "request" : {
      "urlPath" : "/subscriptions/r9l4/resourceGroups/Miss+Pasquale+Klocko/providers/Microsoft.Relay/namespaces/Edison+Considine+IV/wcfRelays/Lindsey+Heathcote",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "gcxulgue9wnkj6fsrymmqb7d77sp02ldsw6rv1p58nc2bndenl00"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "21c856c8-b5a7-46ba-af14-d4b99a37e38f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.403076Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_Delete"
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "6721b816-84e2-485f-9ccd-951a1fe5a39d",
    "name" : "Deletes a WCF relay. - 200",
    "request" : {
      "urlPath" : "/subscriptions/y377/resourceGroups/Alden+Pfeffer/providers/Microsoft.Relay/namespaces/Mack+Orn/wcfRelays/Marisela+Walsh",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "wh7tno"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "6721b816-84e2-485f-9ccd-951a1fe5a39d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.402868Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_Delete"
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "b90db3f6-41c8-453a-909f-8a512f4d7e58",
    "name" : "Creates or updates a WCF relay. This operation is idempotent.",
    "request" : {
      "urlPath" : "/subscriptions/g7d4/resourceGroups/Miss+Donny+Welch/providers/Microsoft.Relay/namespaces/Miss+Margarite+Ward/wcfRelays/Jessenia+King+DDS",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "ehkkwymci4yije3o16qtwfgf3ja1v8szw1mkliuc9ak0wekf7y07jqi2a0tz8i10i82dg3trovlvlb0b6kzcgd256u5cbbbrblkbzgut3g6ca"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Janetta Reichel I\",\n  \"id\" : \"i2jv\",\n  \"type\" : \"vpr3mq8knu7ienefz452ab8t6sunyr5rb1drp6645p1ikd20evm3ptwf9ahky59m20dppk4dlvu56303sadvao11sg9u0fg75ce0o5mocfpyxk6tml4as8huf4pbl4i05fs5m88h9n72dkdiqkvp0kmkjpe9opnmrbsm1\",\n  \"properties\" : {\n    \"createdAt\" : \"2023-09-07T08:00:52.402Z\",\n    \"listenerCount\" : 19,\n    \"isDynamic\" : true,\n    \"relayType\" : \"NetTcp\",\n    \"requiresClientAuthorization\" : true,\n    \"userMetadata\" : \"201vxl65pax3ve5je8xtv0xk065d7k1pe575\",\n    \"requiresTransportSecurity\" : false,\n    \"updatedAt\" : \"2024-01-09T16:34:33.402Z\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b90db3f6-41c8-453a-909f-8a512f4d7e58",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.402657Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_CreateOrUpdate",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "createdAt" : {
                    "type" : "string",
                    "description" : "The time the WCF relay was created.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "isDynamic" : {
                    "type" : "boolean",
                    "description" : "Returns true if the relay is dynamic; otherwise, false.",
                    "readOnly" : true
                  },
                  "listenerCount" : {
                    "maximum" : 25,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "The number of listeners for this relay. Note that min :1 and max:25 are supported.",
                    "format" : "int32",
                    "readOnly" : true
                  },
                  "relayType" : {
                    "type" : "string",
                    "description" : "WCF relay type.",
                    "enum" : [ "NetTcp", "Http" ]
                  },
                  "requiresClientAuthorization" : {
                    "type" : "boolean",
                    "description" : "Returns true if client authorization is needed for this relay; otherwise, false."
                  },
                  "requiresTransportSecurity" : {
                    "type" : "boolean",
                    "description" : "Returns true if transport security is needed for this relay; otherwise, false."
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "The time the namespace was updated.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "userMetadata" : {
                    "type" : "string",
                    "description" : "The usermetadata is a placeholder to store user-defined string data for the WCF Relay endpoint. For example, it can be used to store descriptive data, such as list of teams and their contact information. Also, user-defined configuration settings can be stored."
                  }
                },
                "description" : "Properties of the WCF relay."
              }
            },
            "description" : "Description of the WCF relay resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "5286da3a-d748-413a-955b-e65665c69c5a",
    "name" : "Returns the description for the specified WCF relay. - 204",
    "request" : {
      "urlPath" : "/subscriptions/n443/resourceGroups/Amalia+Schulist/providers/Microsoft.Relay/namespaces/Domenic+Nikolaus/wcfRelays/Alton+Schowalter",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "nxg1ojszo8c7y"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "5286da3a-d748-413a-955b-e65665c69c5a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.402213Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_Get"
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "e615cf7b-d751-4ad0-acb2-772c313af20c",
    "name" : "Returns the description for the specified WCF relay. (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/88qj/resourceGroups/Sheryll+Gulgowski+PhD/providers/Microsoft.Relay/namespaces/Terrell+Boyle+V/wcfRelays/Mr.+Rodrigo+Mueller",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "z3euyhc22bdoznsz9ppymzb18v7vdyabpyo83oe71e2vmn4b5994cidrn1ybvzh8gds3bb1qknv0oezevsy5vsawpxajb84yes2zm4y7pxnkby480dka7wam"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Mrs. Rex Smith\",\n  \"id\" : \"8r1y\",\n  \"type\" : \"t253m9nbhve86r80xzh80freiodbhyn974flxs765s8myn0ay6kac5vc42jt8y5y0\",\n  \"properties\" : {\n    \"createdAt\" : \"2022-07-18T13:30:21.401Z\",\n    \"listenerCount\" : 8,\n    \"isDynamic\" : true,\n    \"relayType\" : \"NetTcp\",\n    \"requiresClientAuthorization\" : false,\n    \"userMetadata\" : \"20w0bktso8uic358tq33whlxridfgv7ou2uezy7ols49z0e9dapj19dzkc2pr0aa3ak8w1tejk2t8e0ubzow0gbmwunw74l28rpybowqvu9fbd8mczp0etklpx6hewa457v02kvm5rlpket6wnk9zw328pn56vbw\",\n    \"requiresTransportSecurity\" : false,\n    \"updatedAt\" : \"2022-09-01T07:10:12.401Z\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e615cf7b-d751-4ad0-acb2-772c313af20c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.401994Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_Get",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "createdAt" : {
                    "type" : "string",
                    "description" : "The time the WCF relay was created.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "isDynamic" : {
                    "type" : "boolean",
                    "description" : "Returns true if the relay is dynamic; otherwise, false.",
                    "readOnly" : true
                  },
                  "listenerCount" : {
                    "maximum" : 25,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "The number of listeners for this relay. Note that min :1 and max:25 are supported.",
                    "format" : "int32",
                    "readOnly" : true
                  },
                  "relayType" : {
                    "type" : "string",
                    "description" : "WCF relay type.",
                    "enum" : [ "NetTcp", "Http" ]
                  },
                  "requiresClientAuthorization" : {
                    "type" : "boolean",
                    "description" : "Returns true if client authorization is needed for this relay; otherwise, false."
                  },
                  "requiresTransportSecurity" : {
                    "type" : "boolean",
                    "description" : "Returns true if transport security is needed for this relay; otherwise, false."
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "The time the namespace was updated.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "userMetadata" : {
                    "type" : "string",
                    "description" : "The usermetadata is a placeholder to store user-defined string data for the WCF Relay endpoint. For example, it can be used to store descriptive data, such as list of teams and their contact information. Also, user-defined configuration settings can be stored."
                  }
                },
                "description" : "Properties of the WCF relay."
              }
            },
            "description" : "Description of the WCF relay resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "1bc29c40-c5a4-4415-b05e-2927999cff4e",
    "name" : "Lists the WCF relays within the namespace.",
    "request" : {
      "urlPath" : "/subscriptions/t7g7/resourceGroups/Gavin+Weissnat/providers/Microsoft.Relay/namespaces/Lorriane+Russel+IV/wcfRelays",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "i665ixwqt43a66zzxzc63mkzeurc9h0vg1g5fq8gdgzusr5wz6h158urdmkk7dy739gmwx"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Johnson O'Keefe\",\n    \"id\" : \"51up\",\n    \"type\" : \"h1xkaw1kkkie5i72kgbfwqhsnyr3bydmfuwgg6i3a9s8m42xx2s7u1z\",\n    \"properties\" : {\n      \"createdAt\" : \"2022-08-18T11:48:59.4Z\",\n      \"listenerCount\" : 6,\n      \"isDynamic\" : true,\n      \"relayType\" : \"NetTcp\",\n      \"requiresClientAuthorization\" : true,\n      \"userMetadata\" : \"6402ygvldataj7hzkttdu1s46euax914i4asva9kw51959wgb88t78wqipl7561w98es0rjtgd118s50w2mt9aeruo7w32shlv41wefsl7h5eakbkt6t7us9yi9ife4bacesueg9kh0uh96pa7ion6dqljit9dwy\",\n      \"requiresTransportSecurity\" : false,\n      \"updatedAt\" : \"2023-02-10T18:34:45.4Z\"\n    }\n  }, {\n    \"name\" : \"Elaine Wilkinson\",\n    \"id\" : \"686i\",\n    \"type\" : \"5ghsumqvti19rymv12hml1f6d20j6nut5m9kpxoya2db9u9mmzvevz322d3i6w2b7fhl4lk3jo9p8ezquzymzizy34psxyg6iwx2r7l0lsqb8vpvxqr4e4w8gv97jx6\",\n    \"properties\" : {\n      \"createdAt\" : \"2023-07-21T12:28:17.4Z\",\n      \"listenerCount\" : 14,\n      \"isDynamic\" : false,\n      \"relayType\" : \"NetTcp\",\n      \"requiresClientAuthorization\" : false,\n      \"userMetadata\" : \"u9zrwfx5vx27ddzzkuyscg50gz009ngu3urxlz10c8js7p7k2q4bqi\",\n      \"requiresTransportSecurity\" : true,\n      \"updatedAt\" : \"2023-08-05T17:49:35.4Z\"\n    }\n  }, {\n    \"name\" : \"Mallory Towne PhD\",\n    \"id\" : \"g9b6\",\n    \"type\" : \"lqhieoa556bdpbgvfnctwuvv75mib1bs6ge3x27s09pkqukd8p5yf5clocirbw8zr27bpqza0t4nafow2t7ta2rlb2d5fw6gbtvezac8\",\n    \"properties\" : {\n      \"createdAt\" : \"2023-01-17T00:22:28.401Z\",\n      \"listenerCount\" : 13,\n      \"isDynamic\" : false,\n      \"relayType\" : \"Http\",\n      \"requiresClientAuthorization\" : true,\n      \"userMetadata\" : \"pq2m5o4061wpxb3mqnnbuwco6grgpv7v6i2jkws7y84tfs0e9brhqb2w9xf76uqb8qbqbjl7x9p4wtuh3t1bijfkwyufr6loj27wkdvcuq7nvm7ls\",\n      \"requiresTransportSecurity\" : false,\n      \"updatedAt\" : \"2023-11-27T03:41:06.401Z\"\n    }\n  } ],\n  \"nextLink\" : \"d62370n7s1k10pj1ocwvv3ne38tpry5glpc55zh6md\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1bc29c40-c5a4-4415-b05e-2927999cff4e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.401481Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_ListByNamespace",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if value contains incomplete list of WCF relays."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the list WCF relay operation.",
                "items" : {
                  "$ref" : "#/components/schemas/WcfRelay"
                }
              }
            },
            "description" : "The response of the list WCF relay operation."
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "9cb3614e-7f11-4617-bd20-d5dc89a28929",
    "name" : "Regenerates the primary or secondary connection strings to the hybrid connection...",
    "request" : {
      "urlPath" : "/subscriptions/96k0/resourceGroups/Jerica+O%27Reilly/providers/Microsoft.Relay/namespaces/Voncile+Howe+DVM/hybridConnections/Vanita+Bergstrom/authorizationRules/Un+Pacocha+IV/regenerateKeys",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "fjxz6dwe8jnizya6ui2v7pszp41h6q51essumgat7tji0fmr"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"secondaryKey\" : \"h95nnh60dk4rppwhc9g7stktjcm5rpafvpomw7qy6o3tuqyw40dpekhszi3zahllf5bjscaiaxb\",\n  \"keyName\" : \"Mr. Chuck Stroman\",\n  \"primaryConnectionString\" : \"g6qtbgybz29ysuixx20a5fkv5krf3s9ribplgdcf19ph1ptx1vkvef8wokzt7y5lle09wy3glf9iyvruody3ix4pf2x1y65v5ot1rdwl059sr2vpmkg4a0jgi2x9rp38q9a92ojukve2tampnjs8swuhwz74n69lc0mt\",\n  \"secondaryConnectionString\" : \"rqlr1g0sywq82op5w9l7uwnfbbeth63ivcpybjwnythchv01ckasyk6gk8ge6\",\n  \"primaryKey\" : \"059sd7anztajszht8idnpwa6im5bpbmacsdr9ryebnka90djvramkl1dtgccc78ipkz6gownqjgax5z3h46qflktlubkazj45muhl4oic5jn078bj898b6uxuyiac5fvzlqbxz60ka1srugimcvsrec\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9cb3614e-7f11-4617-bd20-d5dc89a28929",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.400649Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_RegenerateKeys",
          "schema" : {
            "type" : "object",
            "properties" : {
              "keyName" : {
                "type" : "string",
                "description" : "A string that describes the authorization rule."
              },
              "primaryConnectionString" : {
                "type" : "string",
                "description" : "Primary connection string of the created namespace authorization rule."
              },
              "primaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit primary key for signing and validating the SAS token."
              },
              "secondaryConnectionString" : {
                "type" : "string",
                "description" : "Secondary connection string of the created namespace authorization rule."
              },
              "secondaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit secondary key for signing and validating the SAS token."
              }
            },
            "description" : "Namespace/Relay Connection String"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "c79a72fc-02c9-43bf-b441-3aaa06bb4ec2",
    "name" : "Primary and secondary connection strings to the hybrid connection.",
    "request" : {
      "urlPath" : "/subscriptions/k6uw/resourceGroups/Miss+Alvina+Wyman/providers/Microsoft.Relay/namespaces/Ethyl+Russel/hybridConnections/Tiny+Kris/authorizationRules/Miss+Waldo+Orn/listKeys",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "i9iyxmo1pkuflkokjtbpgaihzi5450w34ltktgdjp4cx0pblmck9uxt8joc2bs7og9qybo0znhbla5223qirswinc5v7yhvu0legqi3xrbx9z01u0phayy3ul1go1ntlaocq4j4eeli6eq0205gk0yedb37nuq621fxcz9pyn4r8orbpj8nvdt6hw4cpv"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"secondaryKey\" : \"0htiu41frhhthr1b6w0qhie0tyysw5brytrn49bswhp3rzkrau87a9e7nuzfwh9qh7a954eng9r4l8sem97g1l8i52876j3qmkucmtwfxz4wokhbcwi7t9wxbgenbyjuzi09jevlxh7hofin\",\n  \"keyName\" : \"Jermaine Corwin\",\n  \"primaryConnectionString\" : \"9hr9swgcx0ow3naoqma4z2hq5tovz23a2r11b9asa9syxl7u53cnanl9qd0xohp5779k3zlj8twkvf6y1zi3xkoqiqsszeauk4rxyko2vsjywr\",\n  \"secondaryConnectionString\" : \"cjv48ocf9mi4a1agciv41grskd8bsrhde4x0y3x52kxgr8don7uzc31oumt7ys4l62f1iz7xid9p8ob3dkdyfkllxo2t2f1ngq7dx2kz2wkegwjdkzf4\",\n  \"primaryKey\" : \"c3bxhu69ofy0q8ahgcz0s0xchypt3pzamgrw37wfffcujrfh3nvuuhdhzw7nklduwex2blfoeeaso1zili718jor001mharl66lvpvid6j7p8y77\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c79a72fc-02c9-43bf-b441-3aaa06bb4ec2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.400254Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_ListKeys",
          "schema" : {
            "type" : "object",
            "properties" : {
              "keyName" : {
                "type" : "string",
                "description" : "A string that describes the authorization rule."
              },
              "primaryConnectionString" : {
                "type" : "string",
                "description" : "Primary connection string of the created namespace authorization rule."
              },
              "primaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit primary key for signing and validating the SAS token."
              },
              "secondaryConnectionString" : {
                "type" : "string",
                "description" : "Secondary connection string of the created namespace authorization rule."
              },
              "secondaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit secondary key for signing and validating the SAS token."
              }
            },
            "description" : "Namespace/Relay Connection String"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "1285de41-eaf5-4419-9231-b532524f3fab",
    "name" : "Deletes a hybrid connection authorization rule. - 204",
    "request" : {
      "urlPath" : "/subscriptions/0q3f/resourceGroups/Eleanora+Hayes/providers/Microsoft.Relay/namespaces/Linh+Hammes/hybridConnections/Nick+Swaniawski+Jr./authorizationRules/Frankie+Ferry",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "ei85wus47mzjmyqcfykj24r09k5rhvdk2x9aq7r3c14m5ypus2azap2wtqck6xnl"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "1285de41-eaf5-4419-9231-b532524f3fab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.399824Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_DeleteAuthorizationRule"
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "956b5916-2e8c-488e-aa56-0501d0b6fcf4",
    "name" : "Deletes a hybrid connection authorization rule. - 200",
    "request" : {
      "urlPath" : "/subscriptions/8qis/resourceGroups/Crystal+Haley/providers/Microsoft.Relay/namespaces/Gabriela+Bosco/hybridConnections/Kristel+Hegmann/authorizationRules/Reginald+Mueller+Jr.",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "40rclibxy2clmzpxxvkbipg9mhetbjjvlckfpdxqgc8vydhtkxv49721ctwkza85vaa3oq4qemxzm9vymlx7owvnyivuztwqr74kcgdm"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "956b5916-2e8c-488e-aa56-0501d0b6fcf4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.399576Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_DeleteAuthorizationRule"
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "8dd365a6-6ece-4670-bc73-47026ac5ca8f",
    "name" : "Creates or updates an authorization rule for a hybrid connection.",
    "request" : {
      "urlPath" : "/subscriptions/q959/resourceGroups/Julianna+Zboncak+DDS/providers/Microsoft.Relay/namespaces/Ms.+Flora+Wilderman/hybridConnections/Suzy+Parisian/authorizationRules/Dick+Johnson",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "tnkjzmw9x9bxn8qhxl75j84s4mckxvnn0ikl6bbprkl3yf1tpt52zk2cwmtq6p"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Mrs. Marcelo Corkery\",\n  \"id\" : \"dsm4\",\n  \"type\" : \"7urn1vooqbn0ysnnmparqtq5tumu02qeeivuet9w7ob9wktvbsyxtped1cfhi\",\n  \"properties\" : {\n    \"rights\" : [ \"Listen\", \"Send\" ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8dd365a6-6ece-4670-bc73-47026ac5ca8f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.399316Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_CreateOrUpdateAuthorizationRule",
          "schema" : {
            "properties" : {
              "properties" : {
                "required" : [ "rights" ],
                "type" : "object",
                "properties" : {
                  "rights" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    "description" : "The rights associated with the rule.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "Manage", "Send", "Listen" ]
                    }
                  }
                },
                "description" : "Authorization rule properties."
              }
            },
            "description" : "Description of a namespace authorization rule.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "1ef09579-3893-4206-abaf-7a038fa4cb99",
    "name" : "Hybrid connection authorization rule for a hybrid connection by name.",
    "request" : {
      "urlPath" : "/subscriptions/whj4/resourceGroups/Christopher+Bruen+Jr./providers/Microsoft.Relay/namespaces/Mrs.+Madaline+Walsh/hybridConnections/Mariette+Schimmel/authorizationRules/Clair+Buckridge",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "uexwv9kxq1ws0o"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Mr. Tommy Blick\",\n  \"id\" : \"180r\",\n  \"type\" : \"q4xn34ttzvl7i4b3m4i3mnf53jnxetwjspfb4v0vhg7sci71pdlmjjr53nh357dh97bx1ydpsoi4g\",\n  \"properties\" : {\n    \"rights\" : [ \"Send\", \"Manage\", \"Listen\", \"Listen\", \"Listen\" ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1ef09579-3893-4206-abaf-7a038fa4cb99",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.398899Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_GetAuthorizationRule",
          "schema" : {
            "properties" : {
              "properties" : {
                "required" : [ "rights" ],
                "type" : "object",
                "properties" : {
                  "rights" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    "description" : "The rights associated with the rule.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "Manage", "Send", "Listen" ]
                    }
                  }
                },
                "description" : "Authorization rule properties."
              }
            },
            "description" : "Description of a namespace authorization rule.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "01fb0459-57cf-47d3-909c-ad3427296242",
    "name" : "Authorization rules for a hybrid connection.",
    "request" : {
      "urlPath" : "/subscriptions/y353/resourceGroups/Robert+Prosacco/providers/Microsoft.Relay/namespaces/Rosario+Smitham/hybridConnections/Vivan+Kessler/authorizationRules",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "hq3tl3sjwku2x0av9tvar8v1gdxzzkoq7o9m5l2w1h9ky3jbeeug5hzphg6ramksw8vy2ndlvae404fo"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Demetrius Deckow\",\n    \"id\" : \"6gwh\",\n    \"type\" : \"a1mm3gshyrsga4qbfz9jntwj7g6sbms2yvl69ytqbsyn\",\n    \"properties\" : {\n      \"rights\" : [ \"Manage\" ]\n    }\n  }, {\n    \"name\" : \"Caridad Beer MD\",\n    \"id\" : \"013h\",\n    \"type\" : \"kuz0qfvicrq2g2uby9m3pfnqccx03mmehg3qsm28zqft71rttlehwnc8oaxj6y3tasp48\",\n    \"properties\" : {\n      \"rights\" : [ \"Manage\", \"Manage\", \"Manage\", \"Manage\", \"Send\" ]\n    }\n  }, {\n    \"name\" : \"Dee Baumbach\",\n    \"id\" : \"xtma\",\n    \"type\" : \"67far2xw9ly6elfkovy462l0rm82r278uv2boqcif9708xau5znys9wpi00kbtis51pbsy1bwnniujsoanr5rn3rtngwoz3cp0y7qiny3f95gq89jyqrumehyilz3gcu0sdvjlzsiq1llio\",\n    \"properties\" : {\n      \"rights\" : [ \"Manage\", \"Listen\", \"Manage\", \"Manage\", \"Manage\", \"Listen\", \"Manage\", \"Send\" ]\n    }\n  } ],\n  \"nextLink\" : \"qq1llu6wi6z2i625gp9gtlnr89h3hpnpawfq6p032jsmj1whb32ixzucuhmypi3efzs65eibo1fib5kcsryoolghprf39g4cppnwuil45prllk2o81b4bolksivdfpg5dpxtntk3jb0vuny7j2zjxc87anqaoz\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "01fb0459-57cf-47d3-909c-ad3427296242",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.398453Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_ListAuthorizationRules",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if value contains incomplete list of authorization rules."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the list authorization rules operation.",
                "items" : {
                  "$ref" : "#/components/schemas/AuthorizationRule"
                }
              }
            },
            "description" : "The response from the list namespace operation."
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "1df19369-a7be-4020-b14d-0f427e74451e",
    "name" : "Deletes a hybrid connection. - 204",
    "request" : {
      "urlPath" : "/subscriptions/9b00/resourceGroups/Ms.+Eldridge+Kiehn/providers/Microsoft.Relay/namespaces/Goldie+Gutkowski/hybridConnections/Tiesha+Osinski",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "cu8g4xuy2h3suom4u6t3egcq5se69zvcll5p6vij3awvf343yfty9bh2qaetffztipa3idanyfenf8kx54sje1xabaqfgmrnb479vv2uu"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "1df19369-a7be-4020-b14d-0f427e74451e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.39773Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_Delete"
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "6b03d030-b1e1-4c9b-b15a-b75678fd48c4",
    "name" : "Deletes a hybrid connection. - 200",
    "request" : {
      "urlPath" : "/subscriptions/8fjb/resourceGroups/Collene+Torphy/providers/Microsoft.Relay/namespaces/Miss+Lance+Lind/hybridConnections/Leeann+Reinger",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "k0opqh676575zips1qdy6iydmrnfj8smoidlmlnwmd94ay1ja417b2j5u286smkqbms5hua3wzi8xeudfiw2ks49kwdg2qtn7no12vvtu4l0vk7e"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "6b03d030-b1e1-4c9b-b15a-b75678fd48c4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.397505Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_Delete"
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "fae6168c-f129-4001-b769-7fe1edbbcff0",
    "name" : "Creates or updates a service hybrid connection. This operation is idempotent.",
    "request" : {
      "urlPath" : "/subscriptions/o01b/resourceGroups/Werner+Lebsack/providers/Microsoft.Relay/namespaces/Evelia+Wiegand/hybridConnections/Sharice+Klein+Sr.",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "ebzu3el4vf4vkmqh"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Ferdinand Breitenberg\",\n  \"id\" : \"1yby\",\n  \"type\" : \"5gwfu75m0li8zmb6b\",\n  \"properties\" : {\n    \"createdAt\" : \"2022-12-09T02:10:52.396Z\",\n    \"listenerCount\" : 5,\n    \"requiresClientAuthorization\" : true,\n    \"userMetadata\" : \"mj216bn6dw5xqeuk38n5f2k96zgpl8upoc6g2xhskex43szpwmiut7hgfd5p7xaxiwdfkaia1y8bzo644gtchco2v1v3qrpvgddklhh726iye0vzp9g2gt20qhmc3qk0iwwpkqs88k3pyf5vx3nacjv9s6ry1a73s9g\",\n    \"updatedAt\" : \"2023-07-17T21:18:55.396Z\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fae6168c-f129-4001-b769-7fe1edbbcff0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.397273Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_CreateOrUpdate",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "createdAt" : {
                    "type" : "string",
                    "description" : "The time the hybrid connection was created.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "listenerCount" : {
                    "maximum" : 25,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "The number of listeners for this hybrid connection. Note that min : 1 and max:25 are supported.",
                    "format" : "int32",
                    "readOnly" : true
                  },
                  "requiresClientAuthorization" : {
                    "type" : "boolean",
                    "description" : "Returns true if client authorization is needed for this hybrid connection; otherwise, false."
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "The time the namespace was updated.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "userMetadata" : {
                    "type" : "string",
                    "description" : "The usermetadata is a placeholder to store user-defined string data for the hybrid connection endpoint. For example, it can be used to store descriptive data, such as a list of teams and their contact information. Also, user-defined configuration settings can be stored."
                  }
                },
                "description" : "Properties of the HybridConnection."
              }
            },
            "description" : "Description of hybrid connection resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "95580411-bbe4-43c2-b9b7-3832adbd93e7",
    "name" : "Returns the description for the specified hybrid connection.",
    "request" : {
      "urlPath" : "/subscriptions/5m97/resourceGroups/Mrs.+Broderick+Rowe/providers/Microsoft.Relay/namespaces/Marcelle+Terry/hybridConnections/Asha+Zboncak",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "bgr8e7vwv4yb7wrq19iwtfrnj8cr5zl5m53yjfvqg42wc248r2osw53kj261tpc9nml1m4kbcdvzomgmw7y3k6e6gy0uqcava1bt7mi8a56dflehwpqlvmgzdwatwbxvlvumqpedzxrk5ybdltxbfq"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Cherelle Langworth\",\n  \"id\" : \"2066\",\n  \"type\" : \"r9jf3omh29z06cx40uze9wupqgj7q4r7taqlqjaujtlutrawzzz1o8v9d1vg97ldffcq\",\n  \"properties\" : {\n    \"createdAt\" : \"2023-08-30T11:37:17.396Z\",\n    \"listenerCount\" : 1,\n    \"requiresClientAuthorization\" : false,\n    \"userMetadata\" : \"92vv6fkr98tvavw0mex9qf07io2\",\n    \"updatedAt\" : \"2022-06-16T18:51:06.396Z\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "95580411-bbe4-43c2-b9b7-3832adbd93e7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.396849Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_Get",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "createdAt" : {
                    "type" : "string",
                    "description" : "The time the hybrid connection was created.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "listenerCount" : {
                    "maximum" : 25,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "The number of listeners for this hybrid connection. Note that min : 1 and max:25 are supported.",
                    "format" : "int32",
                    "readOnly" : true
                  },
                  "requiresClientAuthorization" : {
                    "type" : "boolean",
                    "description" : "Returns true if client authorization is needed for this hybrid connection; otherwise, false."
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "The time the namespace was updated.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "userMetadata" : {
                    "type" : "string",
                    "description" : "The usermetadata is a placeholder to store user-defined string data for the hybrid connection endpoint. For example, it can be used to store descriptive data, such as a list of teams and their contact information. Also, user-defined configuration settings can be stored."
                  }
                },
                "description" : "Properties of the HybridConnection."
              }
            },
            "description" : "Description of hybrid connection resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "f4160830-cfca-418d-a819-259fda88108f",
    "name" : "Lists the hybrid connection within the namespace.",
    "request" : {
      "urlPath" : "/subscriptions/5zb1/resourceGroups/Theron+Medhurst/providers/Microsoft.Relay/namespaces/Vito+Gerhold/hybridConnections",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "upds10pdk0eglwza8csuunbq2wtgdzi96lmd6sv8c74lnp5an4y"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Lisabeth Heidenreich\",\n    \"id\" : \"7x86\",\n    \"type\" : \"evv8khbktz6qz1qdnf029h4pmv4amk1oq3h0axrxduxjtyryj0dpcvm\",\n    \"properties\" : {\n      \"createdAt\" : \"2022-05-23T14:56:20.395Z\",\n      \"listenerCount\" : 16,\n      \"requiresClientAuthorization\" : true,\n      \"userMetadata\" : \"3gzmmuh6an183521wvwj5vizuartitmnh71fgasif0k298689567pzgenkacxrmwpl8ay485n9osydfvuc68a7qyx59ieg2t0muuc7ou4m9m0km449s3ca6l5f6q1n1vamhpo\",\n      \"updatedAt\" : \"2022-05-11T14:10:39.395Z\"\n    }\n  }, {\n    \"name\" : \"Shelton Brown\",\n    \"id\" : \"1217\",\n    \"type\" : \"dtzofqwg854ujkem2t8nekkl2voishbaskn66ke1z8uaj7in7l0gqd759b0xk7urc03384ft\",\n    \"properties\" : {\n      \"createdAt\" : \"2022-09-07T05:04:04.395Z\",\n      \"listenerCount\" : 11,\n      \"requiresClientAuthorization\" : true,\n      \"userMetadata\" : \"pc6wlksk2l38tgcj7uwiiy2lnde1mz302so5n\",\n      \"updatedAt\" : \"2023-09-20T22:08:18.395Z\"\n    }\n  }, {\n    \"name\" : \"Scotty Hamill\",\n    \"id\" : \"q6z9\",\n    \"type\" : \"g5hqo6ar5vjynbuxx7cvsxlw5dkl0tdqhcp57kij4812r94961dpon1cap647zqzyu8q95w5wpjgzod\",\n    \"properties\" : {\n      \"createdAt\" : \"2022-06-01T12:27:15.395Z\",\n      \"listenerCount\" : 10,\n      \"requiresClientAuthorization\" : false,\n      \"userMetadata\" : \"jy7\",\n      \"updatedAt\" : \"2023-04-13T04:13:16.395Z\"\n    }\n  }, {\n    \"name\" : \"Boris Stanton\",\n    \"id\" : \"fq3q\",\n    \"type\" : \"qxwdxoi70mf2yjghqv4f6vu1ysdh2ylfmqq1e57rzu9c1bbl2zcj8jndbb6gm2qewa7ijipmt9rty70czkrf99s1ikdk9wff8dvi0q0ga44hl0ezvyroo93qyjxp554en\",\n    \"properties\" : {\n      \"createdAt\" : \"2023-08-24T08:38:27.395Z\",\n      \"listenerCount\" : 5,\n      \"requiresClientAuthorization\" : true,\n      \"userMetadata\" : \"jxfquvoav71j418wumdcf78r0swtwbpt8fn4ptk0ky9kghx67l64ne0yogj8co8w635z86g47s4bho33vru7te9g79a8eu2055tnmy0qcdk4qby3mhx256gi7bxkfefcd9tgks8p4d8r0x6144o7unyg46t0j4zimvozxl4mxctdz3bat6a4h91dwqa4mvmwgfbnncn1\",\n      \"updatedAt\" : \"2023-06-04T11:59:05.395Z\"\n    }\n  }, {\n    \"name\" : \"Matt Simonis\",\n    \"id\" : \"76gn\",\n    \"type\" : \"pq4zw21wsghl3948gtce2udxj64vby5fhttosjje44re8hp48658\",\n    \"properties\" : {\n      \"createdAt\" : \"2022-11-03T15:34:05.396Z\",\n      \"listenerCount\" : 19,\n      \"requiresClientAuthorization\" : true,\n      \"userMetadata\" : \"6oxhf8d2erqu4y69a0kgkj20ycybvdgywim09qrbu0hdnmiyadbdd7spxvcy4fll0379hde4pxvmkdgcfrc2xzhr1fiej85umze2jm6oveyhwm8qiu5d2i6yh1st62y3x6pdnw40fvvaki72umswjs5omypdi83ep0x95sz89gmi6ooxsb66gegjj0yt4v\",\n      \"updatedAt\" : \"2022-07-31T08:21:36.396Z\"\n    }\n  } ],\n  \"nextLink\" : \"99ocxnn1ma6qbdfn6za8q\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f4160830-cfca-418d-a819-259fda88108f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.396409Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_ListByNamespace",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if value contains incomplete list hybrid connection operation."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the list hybrid connections.",
                "items" : {
                  "$ref" : "#/components/schemas/HybridConnection"
                }
              }
            },
            "description" : "The response of the list hybrid connection operation."
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "038272b0-b657-429f-b823-409a506b4eb6",
    "name" : "Regenerates the primary or secondary connection strings to the namespace.",
    "request" : {
      "urlPath" : "/subscriptions/4s12/resourceGroups/Christopher+Macejkovic/providers/Microsoft.Relay/namespaces/Elise+Harvey/authorizationRules/Eufemia+Effertz/regenerateKeys",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "7i99n033yx9zdr1f"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"secondaryKey\" : \"3w9h2t1wv2akm3xnvdt542uchpinpx3as4v89gyz71nhjmyn520zkrrbv512zuew\",\n  \"keyName\" : \"Claudine Ebert IV\",\n  \"primaryConnectionString\" : \"vvr5ick2xram3vysl9j01xysrv2ywefpss7d4by8u0os0vrzzf72w8daebj9vxa92sr3d8gb4u6wifoywvf4pb6iw6aj\",\n  \"secondaryConnectionString\" : \"vg61ifpxkkbtats1ffd7i3\",\n  \"primaryKey\" : \"gvzicikmpkpno85pd1dlccg9g607ygsgj1rtjcuipcb4h1utu30x5h4gbwm39381mtfbcyl8459ngy97q42ymbvp6iiw2gn1rkf0ayev50x7ynm3goekqvpehzr7bmymd8v89pue0ln6741929oe2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "038272b0-b657-429f-b823-409a506b4eb6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.395344Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_RegenerateKeys",
          "schema" : {
            "type" : "object",
            "properties" : {
              "keyName" : {
                "type" : "string",
                "description" : "A string that describes the authorization rule."
              },
              "primaryConnectionString" : {
                "type" : "string",
                "description" : "Primary connection string of the created namespace authorization rule."
              },
              "primaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit primary key for signing and validating the SAS token."
              },
              "secondaryConnectionString" : {
                "type" : "string",
                "description" : "Secondary connection string of the created namespace authorization rule."
              },
              "secondaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit secondary key for signing and validating the SAS token."
              }
            },
            "description" : "Namespace/Relay Connection String"
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "45910030-72e2-4c8e-a289-fbf1acd6ad2a",
    "name" : "Primary and secondary connection strings to the namespace.",
    "request" : {
      "urlPath" : "/subscriptions/ia54/resourceGroups/Raquel+Turcotte/providers/Microsoft.Relay/namespaces/Tammara+Gleichner/authorizationRules/Leanne+Purdy+III/listKeys",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "p7uvknlmwnrhcepwm18iiz4sgi5if4q9ydvv0huap26czki1jl5neyma0fus4b68ky4n1omos5rx8w540m84o2l5wmby1xz8l0m92k9kfpx9qplhyldjxt1z6orjmues0hf73nqpc272e"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"secondaryKey\" : \"0gei00qjo5eau4ew1vsy14oe2jdgu4scp335vqxh\",\n  \"keyName\" : \"Dr. Maegan Morar\",\n  \"primaryConnectionString\" : \"7tcgy0prul33fzc4p4yh56h8nepaoj\",\n  \"secondaryConnectionString\" : \"la87gs8w4kwhi3ugrslzixca4zlee6u9688lzmv83or6ivgjxay2li1bvgawxoglqr1xneqfa6r7xs7e43hszqvcr043kypryucv83potumy5gvg8yczcl7mys1fnl93gf3f39o7gz3stngep\",\n  \"primaryKey\" : \"uah4irmtpqhwt1apsze3vtrq4kkxerhfe1lpenolw072c9z8csifqs60h04gw2tura3gw32\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "45910030-72e2-4c8e-a289-fbf1acd6ad2a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.394998Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_ListKeys",
          "schema" : {
            "type" : "object",
            "properties" : {
              "keyName" : {
                "type" : "string",
                "description" : "A string that describes the authorization rule."
              },
              "primaryConnectionString" : {
                "type" : "string",
                "description" : "Primary connection string of the created namespace authorization rule."
              },
              "primaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit primary key for signing and validating the SAS token."
              },
              "secondaryConnectionString" : {
                "type" : "string",
                "description" : "Secondary connection string of the created namespace authorization rule."
              },
              "secondaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit secondary key for signing and validating the SAS token."
              }
            },
            "description" : "Namespace/Relay Connection String"
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "e67ec959-e801-4f50-afad-cf2477f20cc4",
    "name" : "Deletes a namespace authorization rule. - 204",
    "request" : {
      "urlPath" : "/subscriptions/e81s/resourceGroups/Miss+Zaida+Legros/providers/Microsoft.Relay/namespaces/Melba+Funk/authorizationRules/Lillie+Marks",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "b6v7na16xfm4bd9mc8z6aescm17a1w4htjum2th1nelsoqe0phl8u5n2zhmggswce8h9o5peolugu9sxzay74btw6kx0qsco"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "e67ec959-e801-4f50-afad-cf2477f20cc4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.394613Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_DeleteAuthorizationRule"
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "f9804d28-09b0-415f-bc43-118221cd08ea",
    "name" : "Deletes a namespace authorization rule. - 200",
    "request" : {
      "urlPath" : "/subscriptions/96qo/resourceGroups/Thaddeus+Jacobi/providers/Microsoft.Relay/namespaces/Dong+Harvey/authorizationRules/Mr.+Arnulfo+Kreiger",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "do4f6l4kg4sg9fbixo6henur"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "f9804d28-09b0-415f-bc43-118221cd08ea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.394409Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_DeleteAuthorizationRule"
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "6a6e1481-5b83-40e7-b453-dde526164342",
    "name" : "Creates or updates an authorization rule for a namespace.",
    "request" : {
      "urlPath" : "/subscriptions/316h/resourceGroups/Nicol+Jakubowski/providers/Microsoft.Relay/namespaces/Ms.+Jody+Purdy/authorizationRules/Qiana+Carroll",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "5fnstl8phsudm9jduqce1xvtl0k7w6kkvo1zxkynyu74ao762eyqlo6vocepgf4secs5hfehghfrv19hsj033hk8byg9kh2cpmhay4shkbdyudan1s"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Mrs. Wilmer Bednar\",\n  \"id\" : \"62wp\",\n  \"type\" : \"yef4oxfehvv3bnhh15fzpc4xyv9826qiuodhejd5hc47gun1vy0lwprb1y6nqqi78yi5pxrpzb3jk9b4kesgz89nft7cbhfgaxwz5pqy3fjanoxxxpdnivayaz3f8yv5p8r8not9hw45b3occ6ln0jll9pi7y8\",\n  \"properties\" : {\n    \"rights\" : [ \"Manage\" ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6a6e1481-5b83-40e7-b453-dde526164342",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.394192Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_CreateOrUpdateAuthorizationRule",
          "schema" : {
            "properties" : {
              "properties" : {
                "required" : [ "rights" ],
                "type" : "object",
                "properties" : {
                  "rights" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    "description" : "The rights associated with the rule.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "Manage", "Send", "Listen" ]
                    }
                  }
                },
                "description" : "Authorization rule properties."
              }
            },
            "description" : "Description of a namespace authorization rule.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "7992e833-fcd8-4670-a19f-333141c30dcd",
    "name" : "Authorization rule for a namespace by name.",
    "request" : {
      "urlPath" : "/subscriptions/bv5w/resourceGroups/Mark+Boyle/providers/Microsoft.Relay/namespaces/Sidney+Kuhn/authorizationRules/Mr.+Cary+Weissnat",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "7m0raqz7thpdob0mhknd97mmgqqys86ru19015ncfg6b61s54f8jws7926ii9wufnq3rl9xt2xdk7dpfdp40asl4tqiiq1gtnfmwbm04ksbw2g6i6asew8dsn"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Jonah Swaniawski I\",\n  \"id\" : \"51gg\",\n  \"type\" : \"q3w5wwmn05adoocr6ftkanr1ditohir5zaa30keufvy41lu7jl40lyl6x5yhq665esg2vkaupfxca9kg4bd0xcju1w1roq8pbkos05df6r1uqqrs56awotgxv1ejvtlo9u34r2ct5ht865elews14wav1f5s4gcslyp7842wb7gdxlusyrzn8u\",\n  \"properties\" : {\n    \"rights\" : [ \"Send\", \"Send\", \"Listen\" ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7992e833-fcd8-4670-a19f-333141c30dcd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.393798Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_GetAuthorizationRule",
          "schema" : {
            "properties" : {
              "properties" : {
                "required" : [ "rights" ],
                "type" : "object",
                "properties" : {
                  "rights" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    "description" : "The rights associated with the rule.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "Manage", "Send", "Listen" ]
                    }
                  }
                },
                "description" : "Authorization rule properties."
              }
            },
            "description" : "Description of a namespace authorization rule.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "8ca290d6-bec7-402f-863f-9b6d4f76a149",
    "name" : "Authorization rules for a namespace.",
    "request" : {
      "urlPath" : "/subscriptions/zb4w/resourceGroups/Billye+Lesch/providers/Microsoft.Relay/namespaces/Candis+Sipes/authorizationRules",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "y9jdcfc8bg21m5i0b0muo1vd387oo0oemspsuhn0wxosj3g4nnk0vxk2lme47gp1wcdevto1c6l6wglngc7eriqol0yxvk34kbmyfvzjk594xpduhnd842jaagagum72z62c2nkhvsf8y61kbrafioxy4rcvb23w1x7wcyz0eg0wwhr71esd5175cxewqj"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Curtis Toy\",\n    \"id\" : \"1w71\",\n    \"type\" : \"cnwxe99t01srqoma4u8q3muiafi0831wnkxzi79i0olimdlvnmxieqkusm7epelgnqou5mxay8ulp8j0w2vaahsay0xx4hlamjyagt3n52b10k6rofedgvguvydp0ctdr23pxyyv1xfljar2ub272j464bz1r7lojkigdvj\",\n    \"properties\" : {\n      \"rights\" : [ \"Manage\", \"Listen\", \"Listen\", \"Manage\", \"Manage\", \"Manage\", \"Manage\" ]\n    }\n  }, {\n    \"name\" : \"Damian Dickinson\",\n    \"id\" : \"68ws\",\n    \"type\" : \"738la4mkstydhoyh0b5doobego9e5wvyrwea0v0ux3uv3519q2pk3nnlz7c5vrpy89e982r3vvtfb7oq7op7wf4melgsis68asoq0k6lkt8iux3zn4qelpx91wp8ihjyos4jm26uypljbdtahonclo7a4bvk1cfar12y14ebfodn2lqdnb39wt5x\",\n    \"properties\" : {\n      \"rights\" : [ \"Send\", \"Manage\", \"Manage\", \"Listen\", \"Manage\", \"Send\" ]\n    }\n  }, {\n    \"name\" : \"Roosevelt Lynch\",\n    \"id\" : \"dg78\",\n    \"type\" : \"7tomz562ilruvkibjdqj4sl0kugknk2aiets242k1t36sm0k6zsltk6rnxk4oc7hnzlerz5686xrfyl1jbb0afnxcufy2pxigvxrpv10cxqbo4xcopgwy908fecqc8crbososrjeno84l7cjzpqyil95cms1kso\",\n    \"properties\" : {\n      \"rights\" : [ \"Listen\", \"Send\", \"Manage\", \"Listen\" ]\n    }\n  }, {\n    \"name\" : \"Miss Aleshia Stanton\",\n    \"id\" : \"0220\",\n    \"type\" : \"3zvoh1tqic0ggck1pm3cl0f74a5owq509vur43yoi07mg6hvp08t0h3ura3vd6ii8hvfsliyh2hqbxnaj625u4owqbydr80z3by5hyl0567c5lfu0b4x7tlb1fbspaovfz78gb657sv\",\n    \"properties\" : {\n      \"rights\" : [ \"Listen\", \"Send\", \"Manage\", \"Manage\", \"Send\", \"Listen\", \"Listen\", \"Listen\" ]\n    }\n  }, {\n    \"name\" : \"Petronila Pfannerstill\",\n    \"id\" : \"69s7\",\n    \"type\" : \"mdti3\",\n    \"properties\" : {\n      \"rights\" : [ \"Listen\", \"Manage\", \"Manage\", \"Send\" ]\n    }\n  } ],\n  \"nextLink\" : \"am6g1gji01socciub7uv4cv1idrpgoiashf\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8ca290d6-bec7-402f-863f-9b6d4f76a149",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.393361Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_ListAuthorizationRules",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if value contains incomplete list of authorization rules."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the list authorization rules operation.",
                "items" : {
                  "$ref" : "#/components/schemas/AuthorizationRule"
                }
              }
            },
            "description" : "The response from the list namespace operation."
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "27f4236c-5811-4bf8-bce8-d1a7575c00eb",
    "name" : "Creates or updates a namespace. Once created, this namespace's resource manifest...",
    "request" : {
      "urlPath" : "/subscriptions/h5b3/resourceGroups/Burton+Dietrich/providers/Microsoft.Relay/namespaces/Genesis+O%27Reilly",
      "method" : "PATCH",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "e7djza3fyozeqyadqolo3mkpbpt13co0m"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"location\" : \"wzmu3q5ef6kp132kbs6tcspu4g0ltay6cnuvsyx1kjj9sgd2kbyv5uqap9t6tpd6mb4yubw7dmchkn009hu5tf1acvj5rt2j4c3wyxbje7bj300usetflgdfs4x81pa\",\n  \"sku\" : {\n    \"tier\" : \"Standard\",\n    \"name\" : \"Standard\"\n  },\n  \"properties\" : {\n    \"createdAt\" : \"2022-06-20T08:09:31.391Z\",\n    \"metricId\" : \"v1an\",\n    \"serviceBusEndpoint\" : \"onov9tu60mu1p2fr83jr4wt74xwbw0n7ah3igzll0knn3jrfesh5n15eft4wqzp5xgh3ok0lbf\",\n    \"provisioningState\" : \"Updating\",\n    \"updatedAt\" : \"2023-06-05T11:03:55.392Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "27f4236c-5811-4bf8-bce8-d1a7575c00eb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.392307Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Update",
          "schema" : {
            "properties" : {
              "properties" : {
                "$ref" : "#/components/schemas/RelayNamespaceProperties"
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Description of a namespace resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "6a0254ef-efcd-41bf-9420-c5fd0bfffba9",
    "name" : "Creates or updates a namespace. Once created, this namespace's resource manifest...",
    "request" : {
      "urlPath" : "/subscriptions/2208/resourceGroups/Dr.+Leighann+Hickle/providers/Microsoft.Relay/namespaces/Collin+Corwin",
      "method" : "PATCH",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "nmp7p7k8lpxdwbdrg9cpqrpge3wpdrwjuc0ixzdwulvqx2uyzir1npqcohfxcbmsyupr2nxspesl8nxmoebo45gdtf3pbp9gn9suo3ig56wnd3or5e3b8er1ym82b19jwyqp7nb870go09vto92tox2mq93b79jpygxffau3vl22tzdsmv6a39uhzvisfjbqxvq5x1nz"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"location\" : \"n5feu5hw1m4bjqlsp0b9bo9erl8opd8kvusll2ubipgv6z2gbdq4guetgng\",\n  \"sku\" : {\n    \"tier\" : \"Standard\",\n    \"name\" : \"Standard\"\n  },\n  \"properties\" : {\n    \"createdAt\" : \"2022-09-29T04:39:28.391Z\",\n    \"metricId\" : \"tdn3\",\n    \"serviceBusEndpoint\" : \"ovxlh4qotoeudj8o19f46naiun0v1q1eb6nzpkd3y4dqbkd7z4g2ebotkn9pizrdoyl7igxvipdik29ruk7i5l9m0qo\",\n    \"provisioningState\" : \"Failed\",\n    \"updatedAt\" : \"2022-07-23T09:02:48.391Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6a0254ef-efcd-41bf-9420-c5fd0bfffba9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.391961Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Update",
          "schema" : {
            "properties" : {
              "properties" : {
                "$ref" : "#/components/schemas/RelayNamespaceProperties"
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Description of a namespace resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "86ab7c08-7803-4975-8257-6338a78a8133",
    "name" : "Deletes an existing namespace. This operation also removes all associated resour... - 204",
    "request" : {
      "urlPath" : "/subscriptions/725s/resourceGroups/Cassie+Stoltenberg+Sr./providers/Microsoft.Relay/namespaces/Miss+Terry+Davis",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "c5rdc3v6ovfxbh9sz7z3qogsqqszbx9kcxxy9mymfvwp34x3i5clioke9mwy6370ida2hwjnb"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "86ab7c08-7803-4975-8257-6338a78a8133",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.391582Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Delete"
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "d5cadf0f-0ff0-400f-bcb7-29b11fecd271",
    "name" : "Deletes an existing namespace. This operation also removes all associated resour... - 202",
    "request" : {
      "urlPath" : "/subscriptions/z6lc/resourceGroups/Britt+Wilderman/providers/Microsoft.Relay/namespaces/Lanny+Kuvalis",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "2zlvlrk3i9a3zkavfl1m557hy3nld5g8rqr4035c0z9o5lkkyo88hr7r3a9awik5y5plerztltibmnm1adet62wnluh79x2kr93gn6hxqavvr0mvud8eg5bshwk473stmuznacvs24o2syi5mw19mi569f567qhhgcojdll25byq9cc"
        }
      }
    },
    "response" : {
      "status" : 202
    },
    "uuid" : "d5cadf0f-0ff0-400f-bcb7-29b11fecd271",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.391398Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Delete"
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "106c7b6d-2dcc-4e94-9529-e2a8d8713fd6",
    "name" : "Deletes an existing namespace. This operation also removes all associated resour... - 200",
    "request" : {
      "urlPath" : "/subscriptions/e56f/resourceGroups/Seth+Fritsch/providers/Microsoft.Relay/namespaces/Leonie+Gorczany",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "wes4kpfk0feda1yzdkmsfbmc17v776dqqrq9gia8o8htn9x776jle7ttmde5dirfs6jx3mi3k86q0xfye3s4l0z7vo645jheje6c04ji96i67t9nkoug5c8vef0qyua8x8zyk5o0k4ae3jafwgztq9jxk06ak5nt38u3676en0oi59w9d5hjurl8mtykom"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "106c7b6d-2dcc-4e94-9529-e2a8d8713fd6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.391219Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Delete"
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "ce0ba202-e32f-4f34-9752-ebc070a0a63a",
    "name" : "Create Azure Relay namespace.",
    "request" : {
      "urlPath" : "/subscriptions/50k0/resourceGroups/Mrs.+China+Aufderhar/providers/Microsoft.Relay/namespaces/Porter+Boyer+PhD",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "4iimspepeixxod6ec1g2rzsrymaof3i10fqxgk3yrlmgh6w7ubaz9pn2nb3h70d1pipl0rtol0bsmvt635oao114vdp9ejdke4gobtx6dr05v40yigrzx63ochawrwp65il4mabpn5uvhiio5w0untdb5b1i6r6gh5uzcr6xf"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"location\" : \"hxm93e9hrcpdbjoloet2q4s096pj7p1b5cp2cjtvpaa8od91mqto23z202h4e24v23zi0s5m5fbgae4qg25ocs5qzvekbubfuvn2tj64406ltkgd2bmq1dqtv71as3dqnnoayqfkpb8a1hpd3kmx7o5u3yc0ogf0q4kyzftzq4dw6bkeo2i\",\n  \"sku\" : {\n    \"tier\" : \"Standard\",\n    \"name\" : \"Standard\"\n  },\n  \"properties\" : {\n    \"createdAt\" : \"2023-09-04T17:33:36.39Z\",\n    \"metricId\" : \"4wn8\",\n    \"serviceBusEndpoint\" : \"8hujaslb4ystsbdj1s41w1gplmwk5jlcsawqepslb4295u7znd4u8vg3o9u23e5c4p7u60uwfdej9b40jmbdgo9r78dc36s4x1my05wr9cgd1ydn9ywrhxn3l4yw42h7qmyuhrc74dz55ky0htbr7\",\n    \"provisioningState\" : \"Unknown\",\n    \"updatedAt\" : \"2022-06-29T04:13:37.39Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ce0ba202-e32f-4f34-9752-ebc070a0a63a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.391025Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_CreateOrUpdate",
          "schema" : {
            "properties" : {
              "properties" : {
                "$ref" : "#/components/schemas/RelayNamespaceProperties"
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Description of a namespace resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "b20cf82a-aeab-4ba0-8603-093e6f3a9e4d",
    "name" : "Create Azure Relay namespace.",
    "request" : {
      "urlPath" : "/subscriptions/4ezo/resourceGroups/Ami+Stamm/providers/Microsoft.Relay/namespaces/Adah+Leuschke",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "nmh6og4pu77gkvfvjujmn7vm7uuxxz89kx4oh49qpuvbc8pwrlps8lc4oc2s79p0gt24rl9hmdfegn3qf0xz2ad8ukv466pw1c4r8vh8a3fd38hneglzz908xsa6mfn7jakszpgh17b2a2c2t0fuhzdypi05zk8"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"location\" : \"xetnajfn1r6xuurr6qea07fw0ehjgpv654y1yo01oggb2ry1g52fsd1vk0hwn7zhu9umjg1622iktzj7i47kzwf7lttq2oufy9c5hss90nusdpmx0d8mg1j7oozporpionofr7vogwffyyu3vj1k80icjcniq80j49fmym71g5uqpx58d6i2n8o6cz0ozk7\",\n  \"sku\" : {\n    \"tier\" : \"Standard\",\n    \"name\" : \"Standard\"\n  },\n  \"properties\" : {\n    \"createdAt\" : \"2023-02-18T22:57:19.39Z\",\n    \"metricId\" : \"uq10\",\n    \"serviceBusEndpoint\" : \"28m40lbtrx2hc3sd9qwx9j3o3jp3chlrj3eq9odaa1nyetze3fe2smeqjllp54bku8ansrrns95nb34pc507wncrwgq5zcjxvb0\",\n    \"provisioningState\" : \"Unknown\",\n    \"updatedAt\" : \"2024-02-20T11:31:11.39Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b20cf82a-aeab-4ba0-8603-093e6f3a9e4d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.390676Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_CreateOrUpdate",
          "schema" : {
            "properties" : {
              "properties" : {
                "$ref" : "#/components/schemas/RelayNamespaceProperties"
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Description of a namespace resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "518a41bd-ff53-45e9-ae4c-59666919bca4",
    "name" : "Returns the description for the specified namespace.",
    "request" : {
      "urlPath" : "/subscriptions/lh10/resourceGroups/Cora+Osinski+IV/providers/Microsoft.Relay/namespaces/Zenobia+Lynch",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "459dyy1fyrx61uuxpgswcztwrfooa299hbyhbq3wkvu321hulfmhgbu0sqj1fofrxgd1rffn2izp0bjvn341havxfifurpz8x77qndi7gtrtf6yghjzgorkbcs46dv46n83jusv1xnar13w18jxd9gbeoo2exwg3h46ddzcmv5pn9a565rshjoevdkmywyxih7u4jwr3"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"location\" : \"7kp5t3kgc0pxx9pw5odt1emgmu\",\n  \"sku\" : {\n    \"tier\" : \"Standard\",\n    \"name\" : \"Standard\"\n  },\n  \"properties\" : {\n    \"createdAt\" : \"2023-03-05T05:48:39.389Z\",\n    \"metricId\" : \"04yi\",\n    \"serviceBusEndpoint\" : \"apc51620konytpu2jhtkzn80efjr5li6c6b3dwuigdegspxk5lycqqv3r91hjxwy3a0pzh6mrytnuxcprmo14wo9\",\n    \"provisioningState\" : \"Succeeded\",\n    \"updatedAt\" : \"2023-02-22T02:11:32.39Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "518a41bd-ff53-45e9-ae4c-59666919bca4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.390317Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Get",
          "schema" : {
            "properties" : {
              "properties" : {
                "$ref" : "#/components/schemas/RelayNamespaceProperties"
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Description of a namespace resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "2741de1e-7b02-40c6-957f-425af72b077d",
    "name" : "Lists all the available namespaces within the ResourceGroup.",
    "request" : {
      "urlPath" : "/subscriptions/bexq/resourceGroups/Caren+Abshire+MD/providers/Microsoft.Relay/namespaces",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "9umeqphlrw3ahfr9ueyydmbr3rvf66"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"location\" : \"u6azr79hdawq1i002pd706s295rl7iyb652kfs1z34j13j0hcw65mclzmzh2qn5cqdvw140p186d8y3gciy9qlen6ija3lmmfuz5igmshq7upoztmj17aix6\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\"\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2023-07-01T19:55:51.388Z\",\n      \"metricId\" : \"n4q1\",\n      \"serviceBusEndpoint\" : \"q315fpdz4cwsx4f1vwqqykcn5jfbxsl5f93vi9sclwt71opm2wchxi7vrl3wkeh9mne5xf39kpyafng8yqe7\",\n      \"provisioningState\" : \"Succeeded\",\n      \"updatedAt\" : \"2022-03-17T04:15:41.389Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"y6bi3nomczv0uupu7meqadqh86swd9dwaoa4bxvufa\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\"\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2023-04-01T22:38:29.389Z\",\n      \"metricId\" : \"34qo\",\n      \"serviceBusEndpoint\" : \"m96luap1vo60860z5f3p658l6l9n9b9cmk0nf8sdcuehry8d\",\n      \"provisioningState\" : \"Failed\",\n      \"updatedAt\" : \"2023-09-27T03:24:41.389Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"gcsw575jlzwgoqan80u7yd7rszbquvfxu6utbi4shi90wwcfhf7zyk02quxmqt4idtjdxp0t73xpoku3zrsccqfy6ljt5jhfpxplg6r2o1nuqli5gr44oig1qgju6d1fkl5\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\"\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2023-01-06T21:28:58.389Z\",\n      \"metricId\" : \"aeuu\",\n      \"serviceBusEndpoint\" : \"cg4crzmje\",\n      \"provisioningState\" : \"Created\",\n      \"updatedAt\" : \"2022-09-15T00:55:35.389Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"453rw4dwz3c86p1sdy6rs50ndc07calo4f7zl46gofd104kzx6puqrghriv8enam8mjb52iqdhzcpg0o65i8t1l3sdullc9n5i7vbhckft2gan0vaba8w\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\"\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2022-11-16T04:19:21.389Z\",\n      \"metricId\" : \"3l66\",\n      \"serviceBusEndpoint\" : \"jb1cdmn2oxwvptj30tzz75w6ii43a2co538efz71po4cov73oj5xeqg0vfptokr8swl5p68p74goe3ppvgyvqrrj34krneaur\",\n      \"provisioningState\" : \"Succeeded\",\n      \"updatedAt\" : \"2023-03-19T19:04:28.389Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"bcmo690tk8cqu62qpxj5s8xt3uudnwc5iq2dh658dc1pj9eloz892ngz9m7ru2kjadwoa0vivper5vtcuj1o51ydwxgy7g6ryjehfyqxe424iyphia73g5wvl\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\"\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2023-05-27T02:51:19.389Z\",\n      \"metricId\" : \"lj4r\",\n      \"serviceBusEndpoint\" : \"8n9nat9nw9rmvd2dqvog55zinq6ap76i4x5loj4jbgchy6jdcy9pk6b0014z0e9bimbf1zhdk4xljn11h3m9bb7zqes3gtbaoncxz6la7s95nn75m14yhrc7k6i2l6ibok0bz2llhpl3mapoytitjwfq3p1wb1759segcx7q92digo2apr92xhifqq90as\",\n      \"provisioningState\" : \"Created\",\n      \"updatedAt\" : \"2023-03-17T16:03:17.389Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"zoq1c5e8fab6jnstwdushhoa0uh0l6e435mun43smo4ujf4ecc7tb46nhp54deqqumt0kikimekkmkx9w4fopzf2wbi4f9t49ypqbots59r30i7zeho6e9polbsjyrberdrtwi6k6rs8csq62f834c2mhe22qv8rhkyk3cr4uaouswrbenkq\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\"\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2023-02-15T21:04:14.389Z\",\n      \"metricId\" : \"7q22\",\n      \"serviceBusEndpoint\" : \"s29zn0ottc9pa4yhaavzvdhl8zbf3uc65ofywn434nnenxt7ewz3sygnp04s1frqpd4rfnuzdd5a7nev2nhj16c9wbs99g5nqfvrg8s452ze6zip9yozv49ejbi89olr9vi2o1q9wmt5t1b1hlsc\",\n      \"provisioningState\" : \"Created\",\n      \"updatedAt\" : \"2024-03-05T05:37:12.389Z\"\n    },\n    \"tags\" : { }\n  } ],\n  \"nextLink\" : \"t5g64kf3wtgh4jxj3awuic68oxam1kjteay6ow7o37fojgwr\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2741de1e-7b02-40c6-957f-425af72b077d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.389952Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_ListByResourceGroup",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if value contains incomplete list of namespaces."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the list namespace operation.",
                "items" : {
                  "$ref" : "#/components/schemas/RelayNamespace"
                }
              }
            },
            "description" : "The response from the list namespace operation."
          }
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "66c6d352-63fe-40e2-84db-281f95d6cd56",
    "name" : "Lists all the available namespaces within the subscription regardless of the res...",
    "request" : {
      "urlPath" : "/subscriptions/563r/providers/Microsoft.Relay/namespaces",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "mt0qwbagi4pnayvab4cp8tx3kk0v2i8pvoblee3tkhrobsh8emxt2k8cimqb8t9b47ok47ogg4bb75qv2jpkojr9k0wxvwshevcf41zfg6f2jksclcz8ilcw0uhjos5ub9h6isajmh2bu6pf6j4b6n9iog1kbxvsd7vxgxn09m16hyik1yv96k"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"location\" : \"lkzzhw9k2yh0iyzlkf8mgoj28elhw4k21h2r9comaxzhmpa0rw240038px94f8shkl0fudo72aty11ksbu2mkigakgjd76s76y2qpiilmvwsj34xs6frgzd7exfw7l2frv3oyki2qmn93b0ryhl4bntlxl25gbh7wori0e4yelvzicj1m5dv995dz5gxa4o5vdkzc9\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\"\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2022-05-29T06:37:35.388Z\",\n      \"metricId\" : \"mui1\",\n      \"serviceBusEndpoint\" : \"2r8humphm3sfn64q5fggc0qs6skr9vc24b3gyczak6bwlrcowc53ccng3ljgm7mstjciopob1komxkwuzqy6km1qeyqv2yysgk5kfohvqmq0f1p2qo5vz8tr95p1emgwx4rt63wkmnajvp1q6qa\",\n      \"provisioningState\" : \"Deleted\",\n      \"updatedAt\" : \"2022-09-25T15:47:14.388Z\"\n    },\n    \"tags\" : { }\n  } ],\n  \"nextLink\" : \"glv25y8orcui5c4xctsx7ssmqdxwq1ir36wab5omwnnolw39b1im28mkr90kw7zx6uywktehe118y\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "66c6d352-63fe-40e2-84db-281f95d6cd56",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.388868Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_List",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if value contains incomplete list of namespaces."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the list namespace operation.",
                "items" : {
                  "$ref" : "#/components/schemas/RelayNamespace"
                }
              }
            },
            "description" : "The response from the list namespace operation."
          }
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "8b4bc875-0ea9-47fe-af09-de54325d4808",
    "name" : "Check the specified namespace name availability.",
    "request" : {
      "urlPath" : "/subscriptions/0510/providers/Microsoft.Relay/checkNameAvailability",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "iixmtjap0ou4gnfve1aww1hj401r253volvn5jptnakdmzs9aq87lml1v5q6gvcb8ee95mj29jgrx"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"reason\" : \"InvalidName\",\n  \"nameAvailable\" : true,\n  \"message\" : \"Vero ipsam qui. Natus maiores voluptas facilis quas excepturi earum. Asperiores eos nostrum.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8b4bc875-0ea9-47fe-af09-de54325d4808",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.388493Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_CheckNameAvailability",
          "schema" : {
            "type" : "object",
            "properties" : {
              "message" : {
                "type" : "string",
                "description" : "The detailed info regarding the reason associated with the namespace.",
                "readOnly" : true
              },
              "nameAvailable" : {
                "type" : "boolean",
                "description" : "Value indicating namespace is available. Returns true if the namespace is available; otherwise, false."
              },
              "reason" : {
                "$ref" : "#/components/schemas/UnavailableReason"
              }
            },
            "description" : "Description of the check name availability request properties."
          }
        }
      }
    },
    "insertionIndex" : 42
  }, {
    "id" : "5285b76b-a9e5-4d6c-9588-01f21c47416e",
    "name" : "Lists all available Relay REST API operations.",
    "request" : {
      "urlPath" : "/providers/Microsoft.Relay/operations",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "4nr3c7pag0ty9sb94hfzw9auki2y0b3ft9t8k6s8egeu7um"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"display\" : {\n      \"provider\" : \"nv34woeknb0iqxpxxoezl0tndqr44xai3socgf03r2calgdzgqw64u52w7a88rlta93s66isx6qzz4d3hh1k2zrxd71g8p37003oexhtumrans6hvmhg99im0gwnix\",\n      \"resource\" : \"dmvwc8ljkaihxom3s9gys1r6xgb225jafl5g0vzutu596xc7jrmjqe3et3c1gk6\",\n      \"operation\" : \"vy884u5obduspnu09861hq6ffv5y0c00w52h4gjtkefbn1bkedvczuiw4qng71ps31ry4dnk550t0j12o5h5njae6mk6e7fxdqrxmj7dhmp4brje75sprwp2eqekqjw21dyc97dyhe6plyykas05u5bibzq16rnb0hcsx1txhpysg10ly35ecl5\"\n    },\n    \"name\" : \"Mason Pacocha\"\n  }, {\n    \"display\" : {\n      \"provider\" : \"0k0p1eymui2v324ixk1\",\n      \"resource\" : \"rjt2kc5ugx3i47563dpe257m9slqrt7gvzpwzamn6beprj8t6dbfm6w9ceq7ixh214vdm1pyrrunfzjcrcvtd525zxinkax2cmigtmikut7sg\",\n      \"operation\" : \"t372a2tgd77kcmn38exsqivcq6cy4ki1nwhmzo1dbmwpksis5tjazu\"\n    },\n    \"name\" : \"Rosario Quitzon\"\n  }, {\n    \"display\" : {\n      \"provider\" : \"g6rj0m1tv56th8d7p545ggwsx0ln\",\n      \"resource\" : \"i0gesxlhyk68y7ofg71oqmcvqrs7g1wg8dp7cvlbbwkq85ex6fbldmnzngf7j5qdqt5p4jdmksxl474stwql3ftdns8s5aiiwxghol8dvkzglo047r72s7k6mjbx6fh26gjuy57crhpxo3n5jjtyzw88nv93gmzutr9m3f3fc3khdy4jw5klok\",\n      \"operation\" : \"1xpn990uckrgufemehuelu8m2zj5p9x2k0xu6ezt6ll1l9lj0f4ecb5qt24uilnjnq7191cjbi6i2igbeijsoxnq0vvtg7bos87fmq83e0fdqaqfj0m8vvvz46f4v3dvi1eywic1b2n9kl5aremiupf0z54yebes62ok9sammlvtivk\"\n    },\n    \"name\" : \"Kirby Gislason Jr.\"\n  }, {\n    \"display\" : {\n      \"provider\" : \"pc6umsf2d7ztnkd0kv2o533sbf5zi4tfrrwm0udbdmthsdddilihhe823cymugg\",\n      \"resource\" : \"aq27z00ciqr6klwuufh4k1wkgrr4qs5o7zrc6h5g3yxync2aptcmkqm2231ut3n3kigkt2rxmdsvy7nwvf4mubknbe1rq8v5jhstry2bfnz2iiuvb7hklbma8msjifyfmqrd\",\n      \"operation\" : \"vdltiz3sscjn4d9nj2ej7zvdcxh6qujqhsvyxpuagcrzihwpay6foim0j3xipggula9u5nrzwl0osdm4d8ncx4q81wjwdd3tddqm3hiwdjxtfgygag53eshj6o4l9tei0fy1j8jhqv2eyj2d4elv6blnkfjw3qnvy62zhsam7ngjjtgqbuy4qk0m8i1lgdcuzky084q3\"\n    },\n    \"name\" : \"Ms. Maricruz Hickle\"\n  } ],\n  \"nextLink\" : \"o8ng83cv007zhwazuxeehhyrl05v5h5qvfkbue92euloduk27iuzzj20lnet26imy3s3l5d6d3hsrq1j6i2zx7fn9rfnuhhl785g67kp3hphsyi1d5a6580o9q2afr5i0vgjgd95yu7emjeny451lr2z1dxplsrvfyy3jy5ordg4nsanitpg\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5285b76b-a9e5-4d6c-9588-01f21c47416e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.388246Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Operations_List",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "URL to get the next set of operation list results if there are any.",
                "readOnly" : true
              },
              "value" : {
                "type" : "array",
                "description" : "List of Relay operations supported by resource provider.",
                "readOnly" : true,
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                }
              }
            },
            "description" : "Result of the request to list Relay operations. It contains a list of operations and a URL link to get the next set of results."
          }
        }
      }
    },
    "insertionIndex" : 43
  } ]
}