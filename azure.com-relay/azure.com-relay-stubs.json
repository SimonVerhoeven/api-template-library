{
  "mappings" : [ {
    "id" : "a5b20a14-91a1-47ed-8673-86821f760ab2",
    "name" : "Regenerates the primary or secondary connection strings to the WCF relay.",
    "request" : {
      "urlPath" : "/subscriptions/rp2j/resourceGroups/Laverne+Johnson/providers/Microsoft.Relay/namespaces/Weston+Pacocha/wcfRelays/Leonard+Rippin/authorizationRules/Tobi+Koch/regenerateKeys",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "v5aw5kz7wnpj7n0la34r76eqm1dydh5cmzbjtznwmmlhlg462e2ss66paxr4k69xcdqi55znmb2g3lglgowajjusx870qomkjjos0mls5qfje2wb4drgwhgrfs13chai175pc7r2ycjiz4089lbhg9327scb01cyus95kj1djr390q1jgzvq"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"secondaryKey\" : \"3uy075rv\",\n  \"keyName\" : \"Rueben Bins\",\n  \"primaryConnectionString\" : \"73hcy0rqbkl6vaaey44siz5hagfeurz0w3iyz0ckop2nrmbbs3ku78qnt9lrxtn93m1lwj2qzmex9nr50rki6nzn4bpvepj\",\n  \"secondaryConnectionString\" : \"nr0nymhrtaylzreuf7io9ioklmulb2l989xuktfn5oaox8pwxb2fcvj5jp5m6\",\n  \"primaryKey\" : \"78zpq23n6t6nreezrw01s3homjvuc8kkr\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a5b20a14-91a1-47ed-8673-86821f760ab2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:29.82024Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_RegenerateKeys",
          "schema" : {
            "type" : "object",
            "properties" : {
              "keyName" : {
                "type" : "string",
                "description" : "A string that describes the authorization rule."
              },
              "primaryConnectionString" : {
                "type" : "string",
                "description" : "Primary connection string of the created namespace authorization rule."
              },
              "primaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit primary key for signing and validating the SAS token."
              },
              "secondaryConnectionString" : {
                "type" : "string",
                "description" : "Secondary connection string of the created namespace authorization rule."
              },
              "secondaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit secondary key for signing and validating the SAS token."
              }
            },
            "description" : "Namespace/Relay Connection String"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "50763387-b338-4773-b1c9-01b26e6851aa",
    "name" : "Primary and secondary connection strings to the WCF relay.",
    "request" : {
      "urlPath" : "/subscriptions/6414/resourceGroups/Isaiah+Kemmer/providers/Microsoft.Relay/namespaces/Louann+Jacobi+MD/wcfRelays/Catharine+Mohr/authorizationRules/Oswaldo+Brown+Sr./listKeys",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "rwjh30mhoxeku6rusiykc3610dz1qkduxikcvd2v3er9kri"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"secondaryKey\" : \"6n7r55vewkult6eceqwwiuytdgu9fehdv72tg0k2\",\n  \"keyName\" : \"Todd Gaylord\",\n  \"primaryConnectionString\" : \"w12w5p0ikcgtn9rd1hg102methba9gro458kzrm0sbqya3kba7fapxnhoe9cegt3azxatzudi4evqt1kq9k3przxfw3ce4p49lunz9wijoefupp2l5rxyiw3mqzy5lmbytbnhd95atfzcwgwcpf7lcd5mpxln3kh8mwh2vr4c90qzlqu2l0yiya1qsvxzxc\",\n  \"secondaryConnectionString\" : \"zpda0iyf3krdancapu68r6aw7id0vjbqt98xbbxp3by7u6836na39ehpepdk0f08xem4rffdprw6qt0nmfjzorme\",\n  \"primaryKey\" : \"0m0dh7bmpejoqag6dslbb75pihedqhc3ed4lewj4uea7jhjga1l5fayoz5iw9pc47p9d089s0omiozxu184tcrm\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "50763387-b338-4773-b1c9-01b26e6851aa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:29.819872Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_ListKeys",
          "schema" : {
            "type" : "object",
            "properties" : {
              "keyName" : {
                "type" : "string",
                "description" : "A string that describes the authorization rule."
              },
              "primaryConnectionString" : {
                "type" : "string",
                "description" : "Primary connection string of the created namespace authorization rule."
              },
              "primaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit primary key for signing and validating the SAS token."
              },
              "secondaryConnectionString" : {
                "type" : "string",
                "description" : "Secondary connection string of the created namespace authorization rule."
              },
              "secondaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit secondary key for signing and validating the SAS token."
              }
            },
            "description" : "Namespace/Relay Connection String"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "93945980-79a2-4974-8185-08be8aaffdb8",
    "name" : "Deletes a WCF relay authorization rule. - 204",
    "request" : {
      "urlPath" : "/subscriptions/d0wj/resourceGroups/Patrina+Langworth+II/providers/Microsoft.Relay/namespaces/Gus+Davis/wcfRelays/Kendrick+Towne/authorizationRules/Palmira+Lebsack",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "wtgxx779wry6wgsljonuj39zvfbgku6tgghth8ucwmwjsaerhgnw586hhu6230qadfqbaatz1xcoi81rx6xa2t46rjbidqsqhxeqw705j5v35og8"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "93945980-79a2-4974-8185-08be8aaffdb8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:29.81944Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_DeleteAuthorizationRule"
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "0e8138aa-d751-4600-9d1e-d1f9d4ac5143",
    "name" : "Deletes a WCF relay authorization rule. - 200",
    "request" : {
      "urlPath" : "/subscriptions/1b94/resourceGroups/Deshawn+Cummerata/providers/Microsoft.Relay/namespaces/Troy+Cronin+V/wcfRelays/John+Braun/authorizationRules/Clayton+Schmeler",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "p7pt4g9t3zdd1zuxf33n6m8z"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "0e8138aa-d751-4600-9d1e-d1f9d4ac5143",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:29.819206Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_DeleteAuthorizationRule"
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "e444f50c-e7ad-42b3-9a78-48f8f886d01e",
    "name" : "Creates or updates an authorization rule for a WCF relay.",
    "request" : {
      "urlPath" : "/subscriptions/t159/resourceGroups/Roosevelt+Maggio/providers/Microsoft.Relay/namespaces/Dewey+Schiller+MD/wcfRelays/Annika+Walter/authorizationRules/Sal+Swaniawski",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "xp4edzc1acp71v6l2u2it1m50v4kqgbat07qx8tckr4dncn7nb3wuia986ib1b00tgffjx9rs86uoe0znbgd5c6ft51ikoie2umha17dqe39ncpsava61rf3195iwwivg8v1mlww67bm8nlugtzejo1"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Nieves Schaefer\",\n  \"id\" : \"1mmj\",\n  \"type\" : \"w3bhwc1lai6abtlldnt8873altkl3gs6vsfyj5fr7p1lm8pvcypm5ndf18iiqb\",\n  \"properties\" : {\n    \"rights\" : [ \"Listen\" ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e444f50c-e7ad-42b3-9a78-48f8f886d01e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:29.81895Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_CreateOrUpdateAuthorizationRule",
          "schema" : {
            "required" : [ "properties" ],
            "properties" : {
              "properties" : {
                "required" : [ "rights" ],
                "type" : "object",
                "properties" : {
                  "rights" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    "description" : "The rights associated with the rule.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "Manage", "Send", "Listen" ]
                    }
                  }
                },
                "description" : "Authorization rule properties."
              }
            },
            "description" : "Description of a namespace authorization rule.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "806ba173-a417-44c4-8547-fc20c4d94bcd",
    "name" : "Get authorizationRule for a WCF relay by name.",
    "request" : {
      "urlPath" : "/subscriptions/h745/resourceGroups/Dr.+Lenora+Bergstrom/providers/Microsoft.Relay/namespaces/Shaun+Corkery/wcfRelays/Agatha+Kuhn+Jr./authorizationRules/Vince+Morar+IV",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "i5n9tct8jr57wfoqxni1xohseezq1p94saa0y2oppdael5d64u9umm5e3yq0ozeztf1kgl5a6807b0fcjnt6qq5slgcdvtt2704tjke5qwfyzlo6axjxchqy025y9x1yzdfb2f4ml4njgf4tlhkrtpw3j2yk2xnftueap6yce1wy2ywbrvv40wyns911n4bgx2ty5yi"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Lillie Bogisich\",\n  \"id\" : \"6iq3\",\n  \"type\" : \"gm0zubo5iqebhkt75vyuuekh76n9yxdxmy0rizehmxqyenivfein33d7d1971z91fwqmez6ms65eddj8kf06yui\",\n  \"properties\" : {\n    \"rights\" : [ \"Send\" ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "806ba173-a417-44c4-8547-fc20c4d94bcd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:29.818503Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_GetAuthorizationRule",
          "schema" : {
            "required" : [ "properties" ],
            "properties" : {
              "properties" : {
                "required" : [ "rights" ],
                "type" : "object",
                "properties" : {
                  "rights" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    "description" : "The rights associated with the rule.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "Manage", "Send", "Listen" ]
                    }
                  }
                },
                "description" : "Authorization rule properties."
              }
            },
            "description" : "Description of a namespace authorization rule.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "188a5e3d-c740-45cf-9af9-e096be5612e4",
    "name" : "Authorization rules for a WCF relay.",
    "request" : {
      "urlPath" : "/subscriptions/kb94/resourceGroups/Kathrin+Turcotte/providers/Microsoft.Relay/namespaces/Charlie+Schulist+DVM/wcfRelays/Josephina+Senger/authorizationRules",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "bvme3rr5n1l56u9ej1p8l5m0keg6ok2s1nuua"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Roxann Klein\",\n    \"id\" : \"j7ea\",\n    \"type\" : \"s13hsntz4degt5d9us1pklk68ljgz5qk1flelom153mll7krjr5fyzff3svr7lh5q1sl6gfnn5giqbftmok5i4qaiajjxlu\",\n    \"properties\" : {\n      \"rights\" : [ \"Manage\", \"Listen\", \"Listen\" ]\n    }\n  }, {\n    \"name\" : \"Miss Juliet Okuneva\",\n    \"id\" : \"2aa8\",\n    \"type\" : \"pappul1btge4b1zlumn6abyg833dnixw3w0c74rv6j5jbgl9aaabb00zmlh35ztsfrtrpzafzlion082uc2dybw99jon1sw7smkyy8tjh4zd93skyxqh3en5dgnfh9b9zhxwk2xwjczjw8motgxzfs5sh1o\",\n    \"properties\" : {\n      \"rights\" : [ \"Listen\", \"Send\", \"Listen\", \"Listen\", \"Manage\", \"Listen\" ]\n    }\n  }, {\n    \"name\" : \"Altagracia Kuhic\",\n    \"id\" : \"42d9\",\n    \"type\" : \"6i9sowmwfprjgyn1ryocva3mhyqo3is8m05hj9fvgntmf1nxlvnw9unrygf6r9ydultpqpo6jyegadsxh5tdg4thrw8yubvl4xmszi0o3182lbpx81iq9s4cc7tnf4lr2uk5034h54d49tqiqn6dumhk552qi5fjglb677fhp9j2hw4zuu58tnv9lhbvbg\",\n    \"properties\" : {\n      \"rights\" : [ \"Send\", \"Send\", \"Send\", \"Send\", \"Listen\" ]\n    }\n  }, {\n    \"name\" : \"Lucas Willms MD\",\n    \"id\" : \"9n16\",\n    \"type\" : \"6w3innqbpvtfudr1n2hj50k14tnazmu8nbbc57me76grbqodlivpiom5izmoitw9m6j0fczopcso5vkpeu282gkenpco00j1inrn5nfhkb5wsu7y6lz4bbac2bw1okbv45uoq85de5yvcc2uibe8qf9fo648k5pbjs9ccvdx7e8yw1z7hpesz\",\n    \"properties\" : {\n      \"rights\" : [ \"Manage\", \"Manage\", \"Manage\", \"Manage\", \"Send\", \"Manage\" ]\n    }\n  }, {\n    \"name\" : \"Mrs. Hyun Bednar\",\n    \"id\" : \"q9qc\",\n    \"type\" : \"t4yfogamkdhl8gj58cnxg2khad5c3a336wi709tn7hkimtubflku63qse6vwlefwrj5v0ejgc5chd6079mj55cb1d90u154xak033iy23k7g8jxpp8ib9ndhkefogqhpt8letx3hs0bxrpkss3vebcif0t8k5l7\",\n    \"properties\" : {\n      \"rights\" : [ \"Send\", \"Listen\", \"Manage\", \"Send\" ]\n    }\n  }, {\n    \"name\" : \"Elayne Hettinger\",\n    \"id\" : \"qgv2\",\n    \"type\" : \"ab8chufbdxhesq7jgsj813ree3rngl06wczxmq652oafbq74j0sn3x76zp5y2qy5o8svtvedsj6lsioqfu2hkdwe7dvgku7sssfdqbimm6g5lfejco3h634hocq3cxr743nwp82w8p\",\n    \"properties\" : {\n      \"rights\" : [ \"Listen\", \"Send\" ]\n    }\n  }, {\n    \"name\" : \"Hannah Wolf\",\n    \"id\" : \"809t\",\n    \"type\" : \"8wwaz9b9wm000mqje822pebocuz232vibsed940bnniv7l9ryxj6l8zs\",\n    \"properties\" : {\n      \"rights\" : [ \"Manage\", \"Send\", \"Send\", \"Manage\", \"Manage\", \"Listen\", \"Send\", \"Send\" ]\n    }\n  }, {\n    \"name\" : \"Erick Cummerata\",\n    \"id\" : \"pp40\",\n    \"type\" : \"v14qufep2w60kepk2wgt32xe97cjcs1c8hadh6t0lp5a8sip3zoja3j54ct3lpdsbj52a9gk5z94zpog4s28ag93b154fgusz0wdlf9lg7nt0nkd4rejgb5we11e992s\",\n    \"properties\" : {\n      \"rights\" : [ \"Send\", \"Send\", \"Send\", \"Listen\", \"Send\", \"Manage\" ]\n    }\n  } ],\n  \"nextLink\" : \"hock3ecvxwtqz8ur7ypszkle1r3uh8p0uuxhrv4b9mg4fhp4flot4sugc12feyixtblm1rjh0h2ki2wfydm04gwzvu86869wlr8sxdd1xxgoc5cekfawwcvlr1bkqip4rkp5e9qn4lpl8szcmnt\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "188a5e3d-c740-45cf-9af9-e096be5612e4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:29.818014Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_ListAuthorizationRules",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if value contains incomplete list of authorization rules."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the list authorization rules operation.",
                "items" : {
                  "$ref" : "#/components/schemas/AuthorizationRule"
                }
              }
            },
            "description" : "The response from the list namespace operation."
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "2833fed4-6932-4d6c-a2fc-401f7830f80d",
    "name" : "Deletes a WCF relay. - 204",
    "request" : {
      "urlPath" : "/subscriptions/nt8q/resourceGroups/Kieth+Johns/providers/Microsoft.Relay/namespaces/Mrs.+Joya+Wehner/wcfRelays/Coretta+Smitham+PhD",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "obs7gi28n07jub2kr31g0wbq3k3n593zogq89hemcj2mkgoxv6r8u651hy8h3t3el2kdx2gllkmmi0ab19br9zg"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "2833fed4-6932-4d6c-a2fc-401f7830f80d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:29.816384Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_Delete"
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "2813871f-e335-4b02-873a-47c3d9a1c5db",
    "name" : "Deletes a WCF relay. - 200",
    "request" : {
      "urlPath" : "/subscriptions/vbw4/resourceGroups/Dr.+Hubert+Berge/providers/Microsoft.Relay/namespaces/Pearlene+Williamson/wcfRelays/Kelsi+Haag",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "9rha6w2vbf1mf0yiozr7o4hkyzwx0a654e6h3f1f69n6p0uqjmbev1evos128ne2w7uvkvdpmyfuw6u9fnjx4hjo6emuvc7z776szo8cv3uadzcbzs6tssod8jj3fl8d72lcyvcgh4j1oiaqoece3ft2kldmu37ozkhnhibtdo39xvjhj0untsaeogwod0rz7sype"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "2813871f-e335-4b02-873a-47c3d9a1c5db",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:29.815978Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_Delete"
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "20ae405d-292c-4420-8923-55888bfd66e7",
    "name" : "Creates or updates a WCF relay. This operation is idempotent.",
    "request" : {
      "urlPath" : "/subscriptions/h7br/resourceGroups/Mrs.+Winfred+Konopelski/providers/Microsoft.Relay/namespaces/Nina+Hahn+DDS/wcfRelays/Cira+Bartoletti",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "mn3x0fhbel0swxf3284ray4jtqzl62u4jys96guzhiyf3d9fmmhp6nex08nhoo6ppwg3a2u4yaw15e8xnp483nqaofs6waga9ruoot1qu5ueflj2zvcc0e2i94co03dbexw3549w944jgeikjtkshv1wm1p1uk4zaapskkrwa2uno0n4fc6oavlmlwhamxag"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Staci Auer\",\n  \"id\" : \"2f2x\",\n  \"type\" : \"8pjrsv6llr8vutgj1c4d0lnkb398bofvb3jdvqrtlmith13xewzpwrv6p3efeyl9n2l0bg7dvnru6yasmfl5irnprykb2gpy0m51x259ej7di44w0p7kgwoet3j36bri9zyf3\",\n  \"properties\" : {\n    \"createdAt\" : \"2022-07-02T02:19:51.815Z\",\n    \"listenerCount\" : 12,\n    \"isDynamic\" : false,\n    \"relayType\" : \"Http\",\n    \"requiresClientAuthorization\" : true,\n    \"userMetadata\" : \"kqceo5s9fi63fee9i66yrbhepwh9ptjxo6enzybh76h1d296sukjiz4ykkd05cebzu1pn142rrxllp5mqw5oo1ta24y7fbwaigpilx2ab7jpwhdhhyp1yvgzdkj4k7sbzi607m\",\n    \"requiresTransportSecurity\" : false,\n    \"updatedAt\" : \"2022-05-05T21:52:37.815Z\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "20ae405d-292c-4420-8923-55888bfd66e7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:29.815739Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_CreateOrUpdate",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "createdAt" : {
                    "type" : "string",
                    "description" : "The time the WCF relay was created.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "isDynamic" : {
                    "type" : "boolean",
                    "description" : "Returns true if the relay is dynamic; otherwise, false.",
                    "readOnly" : true
                  },
                  "listenerCount" : {
                    "maximum" : 25,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "The number of listeners for this relay. Note that min :1 and max:25 are supported.",
                    "format" : "int32",
                    "readOnly" : true
                  },
                  "relayType" : {
                    "type" : "string",
                    "description" : "WCF relay type.",
                    "enum" : [ "NetTcp", "Http" ]
                  },
                  "requiresClientAuthorization" : {
                    "type" : "boolean",
                    "description" : "Returns true if client authorization is needed for this relay; otherwise, false."
                  },
                  "requiresTransportSecurity" : {
                    "type" : "boolean",
                    "description" : "Returns true if transport security is needed for this relay; otherwise, false."
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "The time the namespace was updated.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "userMetadata" : {
                    "type" : "string",
                    "description" : "The usermetadata is a placeholder to store user-defined string data for the WCF Relay endpoint. For example, it can be used to store descriptive data, such as list of teams and their contact information. Also, user-defined configuration settings can be stored."
                  }
                },
                "description" : "Properties of the WCF relay."
              }
            },
            "description" : "Description of the WCF relay resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "3c4ca3ed-432c-42f3-b266-9d1e6d72eb83",
    "name" : "Returns the description for the specified WCF relay. - 204",
    "request" : {
      "urlPath" : "/subscriptions/2wkl/resourceGroups/Anderson+Hauck/providers/Microsoft.Relay/namespaces/Mr.+Winfred+Wolff/wcfRelays/Dinah+Hermiston",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "3k5si5i66gdxyoca4jf2qxxu0nrf2zr4xp1bfro7ofsuht88not4vyev17y4v7w1q0qd9oi755w"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "3c4ca3ed-432c-42f3-b266-9d1e6d72eb83",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:29.815258Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_Get"
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "fd3db6aa-9d09-4fd6-af91-1da68328028a",
    "name" : "Returns the description for the specified WCF relay. (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/lut2/resourceGroups/Shenika+Brekke+DDS/providers/Microsoft.Relay/namespaces/Shanita+Lemke/wcfRelays/Colleen+Vandervort",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "3aubdiko0chtgy4qebmofgksntpzl5v118nhhxigp8zvy6y1q8zeqrdtclmcc9397xsnkxvnj9fp3jpz0jykqwj3h3urqoar2p2v2wblc25fet02smcbjfmves28t63cymq24gjj1jk4cgs9k8h7icbju02zzkyeu96sgjm4ttmtexk8qb2gp7mx9hi7f083z"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Alfreda Jaskolski\",\n  \"id\" : \"ru9c\",\n  \"type\" : \"npzxl78u6d6f1gp8i0m0sym5jic7jg8kbz3zmkcbrmqzvfdw5r3nsz35t645kvwm739btfuriu090z31j1w9fu4jy2qshlerj5qg97rcqr1pv7qegakil32vrewff122pbcevmv09zm05swhvi563hc1cuwfhovp7ig261ph5pl1o6xlpyee\",\n  \"properties\" : {\n    \"createdAt\" : \"2022-09-04T21:57:35.814Z\",\n    \"listenerCount\" : 22,\n    \"isDynamic\" : true,\n    \"relayType\" : \"Http\",\n    \"requiresClientAuthorization\" : false,\n    \"userMetadata\" : \"g247hwkwnbvn8hms01iyj2pjthu5e32zpass7pckr8now3v5rkn2lv33ld2mpln0fkihsdg\",\n    \"requiresTransportSecurity\" : false,\n    \"updatedAt\" : \"2023-11-22T15:23:54.814Z\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fd3db6aa-9d09-4fd6-af91-1da68328028a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:29.815027Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_Get",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "createdAt" : {
                    "type" : "string",
                    "description" : "The time the WCF relay was created.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "isDynamic" : {
                    "type" : "boolean",
                    "description" : "Returns true if the relay is dynamic; otherwise, false.",
                    "readOnly" : true
                  },
                  "listenerCount" : {
                    "maximum" : 25,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "The number of listeners for this relay. Note that min :1 and max:25 are supported.",
                    "format" : "int32",
                    "readOnly" : true
                  },
                  "relayType" : {
                    "type" : "string",
                    "description" : "WCF relay type.",
                    "enum" : [ "NetTcp", "Http" ]
                  },
                  "requiresClientAuthorization" : {
                    "type" : "boolean",
                    "description" : "Returns true if client authorization is needed for this relay; otherwise, false."
                  },
                  "requiresTransportSecurity" : {
                    "type" : "boolean",
                    "description" : "Returns true if transport security is needed for this relay; otherwise, false."
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "The time the namespace was updated.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "userMetadata" : {
                    "type" : "string",
                    "description" : "The usermetadata is a placeholder to store user-defined string data for the WCF Relay endpoint. For example, it can be used to store descriptive data, such as list of teams and their contact information. Also, user-defined configuration settings can be stored."
                  }
                },
                "description" : "Properties of the WCF relay."
              }
            },
            "description" : "Description of the WCF relay resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "3861c24f-40b5-432c-ba35-0bb443c12ef1",
    "name" : "Lists the WCF relays within the namespace.",
    "request" : {
      "urlPath" : "/subscriptions/o035/resourceGroups/Onita+Aufderhar/providers/Microsoft.Relay/namespaces/Corey+Welch/wcfRelays",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "bm42s4terk1ct3w7n62f5u5it15se42fxb65h6ec7ybp5zqp459hlt"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Shara Denesik\",\n    \"id\" : \"f7f0\",\n    \"type\" : \"3upr92cqpmrmgvx566vretv0c9vqwo9oorsbqooiwtwdp1aax4hjgzn47ixm4yoei3dceym0x5sepkt2edorbbztanw2zj8qowezlyls7bwqmx7uabziaamulb2vbp02y91sye9yzq4d7g\",\n    \"properties\" : {\n      \"createdAt\" : \"2023-08-22T21:28:50.813Z\",\n      \"listenerCount\" : 3,\n      \"isDynamic\" : true,\n      \"relayType\" : \"NetTcp\",\n      \"requiresClientAuthorization\" : false,\n      \"userMetadata\" : \"usv34z5o2v5im8ksd1t0sm9alflpq8\",\n      \"requiresTransportSecurity\" : false,\n      \"updatedAt\" : \"2023-01-15T20:34:57.813Z\"\n    }\n  }, {\n    \"name\" : \"Jesse Bradtke I\",\n    \"id\" : \"461k\",\n    \"type\" : \"nzu3j5590l5xfjjuuisyjr6kz36aj\",\n    \"properties\" : {\n      \"createdAt\" : \"2024-03-06T06:21:48.813Z\",\n      \"listenerCount\" : 1,\n      \"isDynamic\" : true,\n      \"relayType\" : \"NetTcp\",\n      \"requiresClientAuthorization\" : false,\n      \"userMetadata\" : \"y6wu31xsot3sihy83o207p5pm3agi55s1vftq5y1d1xp64qv26yc1njpb9twipy1his6rtpx8uvc9kinomlb2jhm0b6klzt925fxp1j14evmmt940ylyyow61qjdk7psvag48l\",\n      \"requiresTransportSecurity\" : true,\n      \"updatedAt\" : \"2023-06-10T22:58:28.813Z\"\n    }\n  }, {\n    \"name\" : \"Noriko Johns\",\n    \"id\" : \"b5m9\",\n    \"type\" : \"z7qib3daop05e9psucenm0ez63b12fa1jnewjh8mxgd33ceh2sc3t10yeam16zmi0mckowx0qi7tqe2\",\n    \"properties\" : {\n      \"createdAt\" : \"2022-09-13T05:24:24.813Z\",\n      \"listenerCount\" : 1,\n      \"isDynamic\" : false,\n      \"relayType\" : \"NetTcp\",\n      \"requiresClientAuthorization\" : true,\n      \"userMetadata\" : \"fzgww821dz0ktgtkt32my8knbfrfh6ify66n4rkdrde0u01507280d1h2sgl5vxw5nhqmjhnf2mstv1s93ej5hm28rlglsayg8mv45zi0bdonv4h88t3monrpfqh8mbsgz4nfj8qr0205ixhp6j0kfsk658tn7eyo88h7mm4y\",\n      \"requiresTransportSecurity\" : true,\n      \"updatedAt\" : \"2023-02-11T06:45:15.813Z\"\n    }\n  }, {\n    \"name\" : \"Humberto Aufderhar\",\n    \"id\" : \"y0h0\",\n    \"type\" : \"jsa2qgng0hs1vk1lsctg0ot522nfvuvfx2vfaye3pjr3jhspof3t9cqzh078w4zdwfbh85dxo69f6tk5mb2olgkt959fu72vkjtigvf9xq3nw4ncxlppxl7s8c49wvrg9jmvlzk4su08kbmiyx1rh5bzg6s7oddxw3uko5o92jt\",\n    \"properties\" : {\n      \"createdAt\" : \"2022-03-25T13:31:23.813Z\",\n      \"listenerCount\" : 9,\n      \"isDynamic\" : true,\n      \"relayType\" : \"Http\",\n      \"requiresClientAuthorization\" : false,\n      \"userMetadata\" : \"ajqg90fm0naiybvinw4vows6skftjzurxm11p41dglzthiagoc0pj381x9m49w04wowifivdvy8tcpn5hoqa6dmk047m2hpl953i556jrwetnu2sjy67f3m215rulz6ctphmi3tfqe\",\n      \"requiresTransportSecurity\" : false,\n      \"updatedAt\" : \"2023-10-05T11:42:24.813Z\"\n    }\n  }, {\n    \"name\" : \"August Bednar III\",\n    \"id\" : \"7i3r\",\n    \"type\" : \"ezftl\",\n    \"properties\" : {\n      \"createdAt\" : \"2023-10-09T21:06:19.813Z\",\n      \"listenerCount\" : 16,\n      \"isDynamic\" : false,\n      \"relayType\" : \"NetTcp\",\n      \"requiresClientAuthorization\" : true,\n      \"userMetadata\" : \"l6ic08qztoptewpoturzny22pcvcfmscu71cg3x4brxssuvd8eg5me6bfs8huh2ujtkkbw7y61k0mbig4urpi9mfw0gd7d2nw0botrjxrpvhgbs0fpcffbkp9kg8e13o9nb12vmc0jpr192qc77vgmqjs8rbze3h60vupctt7ibnihornw1yak5nb5y0xjg9oi\",\n      \"requiresTransportSecurity\" : true,\n      \"updatedAt\" : \"2022-05-28T23:54:28.813Z\"\n    }\n  }, {\n    \"name\" : \"Tamar Morissette\",\n    \"id\" : \"2891\",\n    \"type\" : \"af6ch0wjyt7vpfte8ckqx1az74au8dlhdcwgmjy1ka2ohl1ts1aaqeyulxjwr1o6uibd4aoeq96c8ch9olrie1zyw2snqmq9rtotk32qp9trtyt3900vu9e2qnpzyai56phv1erwb8msxbfywl3n2z73mwqkqjhe8lgjbtokh0h1ydl\",\n    \"properties\" : {\n      \"createdAt\" : \"2024-02-09T00:13:36.813Z\",\n      \"listenerCount\" : 20,\n      \"isDynamic\" : false,\n      \"relayType\" : \"NetTcp\",\n      \"requiresClientAuthorization\" : false,\n      \"userMetadata\" : \"esr2iuza4d3h5basg8uxi6sk17zuh8jplo1cb3mb7hi5ive2gbhsn5s5zrh247vcbo9cix4zeq7jale0hebecce88by4w69lkx5ya5axwly8vlzlzz8x1h\",\n      \"requiresTransportSecurity\" : false,\n      \"updatedAt\" : \"2024-02-01T03:57:53.813Z\"\n    }\n  }, {\n    \"name\" : \"Faustina Simonis\",\n    \"id\" : \"zqw9\",\n    \"type\" : \"d03axqvrwlpchgyrvmzoer4kfquszsbmnotof2qucvj0gj6ttiyurrlefvgmdrjaay9cvp9qdofqqacc2qgwn2azbwr678th6wreowm8hzabeiygp43i\",\n    \"properties\" : {\n      \"createdAt\" : \"2023-05-21T00:29:49.814Z\",\n      \"listenerCount\" : 21,\n      \"isDynamic\" : false,\n      \"relayType\" : \"Http\",\n      \"requiresClientAuthorization\" : true,\n      \"userMetadata\" : \"wbjpub6wnz9mtwyjh65a4f01toxry3gowpf6ssxxko3psk2djym4mn2hfgqw2tii50aevf09ow0qfhfw58iotmffyskwt7gc4bmv5bvqjh0u4tut2dfabbmkxfjigd0t5bwn37v4k7jw5rybr8otzkozt1bkm3tpz7kimt\",\n      \"requiresTransportSecurity\" : false,\n      \"updatedAt\" : \"2023-09-10T16:19:23.814Z\"\n    }\n  } ],\n  \"nextLink\" : \"cp3tmj5lsyn719fpwo9oy1e520cauos7j740lkh9mk6d5m8snw5wgcsvkz2s223vn2ou0y5vpo5sixyfkgiqx5reybr16yd97r0h4o2v6ckgplh98jyzesy1zj6p5nup8uoxy2zvl3ptn\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3861c24f-40b5-432c-ba35-0bb443c12ef1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:29.814515Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_ListByNamespace",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if value contains incomplete list of WCF relays."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the list WCF relay operation.",
                "items" : {
                  "$ref" : "#/components/schemas/WcfRelay"
                }
              }
            },
            "description" : "The response of the list WCF relay operation."
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "9a2efe3c-7106-4a92-9889-6250e29f3c0a",
    "name" : "Regenerates the primary or secondary connection strings to the hybrid connection...",
    "request" : {
      "urlPath" : "/subscriptions/8tq3/resourceGroups/Dr.+Nadene+Robel/providers/Microsoft.Relay/namespaces/Rosaline+Klein/hybridConnections/Sean+Watsica/authorizationRules/Ezequiel+Leannon/regenerateKeys",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "jzk75pzbs9bblpl4is40lww"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"secondaryKey\" : \"g3fktk7s9ukgbxpt2nxjiabyeak8cna0mmpy9n4n9sq41lft9wqf2xxfdi8r8wv8uxza6b0ncb9y4gco7zquc2j381fi349bo012rn24lnxz0n1mynw1d9ibtu99ekyk4n8w5\",\n  \"keyName\" : \"Ross Lakin\",\n  \"primaryConnectionString\" : \"4h7th3vylz19r7gj945v5gkahyr5aldwgy0h3g43yqpkl0r6ys5d2sjrx0la0l98ep4xzr\",\n  \"secondaryConnectionString\" : \"12o62ywa0o3e9t802vqc2p5v531494tkc2sy69pgewc531sso8mqpc1kqqgsjishygu2x0gxnfpyevcwfpzahxxy9ekejd1df4u7vh71plewp30kfegw3dqlu7a1qrcajvkk1a\",\n  \"primaryKey\" : \"qf1ieqyayvmro907r4gcgghx7q8is7w\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9a2efe3c-7106-4a92-9889-6250e29f3c0a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:29.812989Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_RegenerateKeys",
          "schema" : {
            "type" : "object",
            "properties" : {
              "keyName" : {
                "type" : "string",
                "description" : "A string that describes the authorization rule."
              },
              "primaryConnectionString" : {
                "type" : "string",
                "description" : "Primary connection string of the created namespace authorization rule."
              },
              "primaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit primary key for signing and validating the SAS token."
              },
              "secondaryConnectionString" : {
                "type" : "string",
                "description" : "Secondary connection string of the created namespace authorization rule."
              },
              "secondaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit secondary key for signing and validating the SAS token."
              }
            },
            "description" : "Namespace/Relay Connection String"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "ba518dd2-e7ab-4806-a943-2b2c1af05384",
    "name" : "Primary and secondary connection strings to the hybrid connection.",
    "request" : {
      "urlPath" : "/subscriptions/o795/resourceGroups/Leonel+Crona+I/providers/Microsoft.Relay/namespaces/Charley+Gerlach+PhD/hybridConnections/Miss+Hermila+Simonis/authorizationRules/Dr.+Emilio+Koss/listKeys",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "kbvhutuai5s2g2f3kojr8590g5phbhbfvk8ngtvbqvf4iu8"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"secondaryKey\" : \"homp361c60ug3nnezakywhq702226kwnj138ww8k14k1v64fv646v34aqypa0g36sx9i9qlo46v245jqx95qbjs8b3wzokf5cic5ulu5sabxtmgt95yqu1j4no7lk6fr\",\n  \"keyName\" : \"Tama Hayes\",\n  \"primaryConnectionString\" : \"owvh3g6m042e7j9vekapw2n1a3lc90ax17q5gg3au2omeug7b1x49vo1f0dw10gey8loxft364y4tgji20d1715nn82jbuvf8owkyp1k4xsmgzbq4fbcnwx8\",\n  \"secondaryConnectionString\" : \"5s5lhivx8eb338afup2gjzqei8exu01p7w64w07j\",\n  \"primaryKey\" : \"qh83gejhbkizffbcoylqod9p67s157j4zw28h2y4gfche3ahvwcws3d4tw1vj8nbdegyczvzfz410evbx36uzksg9nxqmufd8vj1dec2cv2cqvr2bbjnb16upke9b3c6mrn55akc8flweyx2coz8ndfmy05ssy814p\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ba518dd2-e7ab-4806-a943-2b2c1af05384",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:29.812606Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_ListKeys",
          "schema" : {
            "type" : "object",
            "properties" : {
              "keyName" : {
                "type" : "string",
                "description" : "A string that describes the authorization rule."
              },
              "primaryConnectionString" : {
                "type" : "string",
                "description" : "Primary connection string of the created namespace authorization rule."
              },
              "primaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit primary key for signing and validating the SAS token."
              },
              "secondaryConnectionString" : {
                "type" : "string",
                "description" : "Secondary connection string of the created namespace authorization rule."
              },
              "secondaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit secondary key for signing and validating the SAS token."
              }
            },
            "description" : "Namespace/Relay Connection String"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "05154452-08aa-4179-ae03-43cfab0ed040",
    "name" : "Deletes a hybrid connection authorization rule. - 204",
    "request" : {
      "urlPath" : "/subscriptions/mp95/resourceGroups/Shirl+Osinski/providers/Microsoft.Relay/namespaces/Amira+Legros+I/hybridConnections/Dwain+Marquardt+V/authorizationRules/Terese+Jast",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "1synub08izd55vqzhzaz9q6cz"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "05154452-08aa-4179-ae03-43cfab0ed040",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:29.812193Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_DeleteAuthorizationRule"
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "80354779-7fd8-4116-bc8c-ed500b978d5e",
    "name" : "Deletes a hybrid connection authorization rule. - 200",
    "request" : {
      "urlPath" : "/subscriptions/3v1b/resourceGroups/Lucile+Wunsch/providers/Microsoft.Relay/namespaces/Ozell+Abernathy+MD/hybridConnections/Ms.+Porfirio+Wolff/authorizationRules/Luetta+Jakubowski",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "d86u2l9yjraqx5p6p2dkrixy3d7xu098zpaigjrn7bsafz3oodklm1ykjfy53nuo2f1x57titge0tbzabfn2u6vmjk3f7pa4ttu5pz17ozv5bhla764m72rcbp58cczp07iuw0azdnsdcxiy60gah9ep5xtn728gwu9x5yowfw0ju3o888qx8ns"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "80354779-7fd8-4116-bc8c-ed500b978d5e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:29.811951Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_DeleteAuthorizationRule"
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "177c4da8-60e4-4f14-a285-b175ef8bb375",
    "name" : "Creates or updates an authorization rule for a hybrid connection.",
    "request" : {
      "urlPath" : "/subscriptions/a02m/resourceGroups/Rozanne+Bradtke/providers/Microsoft.Relay/namespaces/Merna+Murazik/hybridConnections/Gayle+Nikolaus+V/authorizationRules/Evan+King+MD",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "gfpntz2ezr50vgreo0d7xwotwuuizrykwduk6ymj2eazg2wpi2gmw4hjinxqm49624nvalhj52r5a425tjos7m8yektqv4w3zcv2hi1768hxvaqckeli2o9zj09u29pfiwre7u5i7zjmwsixkw0innsi1cv6v9l8b1i7oyoxvspyxrrdv141t0xe"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Micheal Jones\",\n  \"id\" : \"352j\",\n  \"type\" : \"ihhwrewc2xmwg3sq8lxt15tlb8t8usgc7wxmar46ia7hg7l4i3a6yve6gq0aq63ojq83zmbu8fp9w9zxvpkzcrpxtmdl7kd746iin5u6um65nol7pcfp3q9f3n8e4e5qvp7jk4k75xf0xhw46ffbhbm0qlptsffpr17nlwe9gvpr2bje\",\n  \"properties\" : {\n    \"rights\" : [ \"Listen\", \"Manage\" ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "177c4da8-60e4-4f14-a285-b175ef8bb375",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:29.811685Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_CreateOrUpdateAuthorizationRule",
          "schema" : {
            "required" : [ "properties" ],
            "properties" : {
              "properties" : {
                "required" : [ "rights" ],
                "type" : "object",
                "properties" : {
                  "rights" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    "description" : "The rights associated with the rule.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "Manage", "Send", "Listen" ]
                    }
                  }
                },
                "description" : "Authorization rule properties."
              }
            },
            "description" : "Description of a namespace authorization rule.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "8a1a9c0f-5f27-495a-a6fd-d8ce5e646767",
    "name" : "Hybrid connection authorization rule for a hybrid connection by name.",
    "request" : {
      "urlPath" : "/subscriptions/i4nq/resourceGroups/Mr.+Conchita+Prohaska/providers/Microsoft.Relay/namespaces/Elfrieda+Bartell/hybridConnections/Alphonso+McCullough/authorizationRules/Lionel+Connelly",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "nr9pc2e9lqlfykhkmt92orx7fqe3x4917ukbzj9lr480y2sftntbo411b94tbbjf66i9oqqrh0vb8j95pmanrtkjnnh223h6k4vcezxyibef839dtgcmlfztur"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Mr. Mohamed Gerhold\",\n  \"id\" : \"d0wj\",\n  \"type\" : \"ok6dsd7sbahzast05mf1ea0dknulgtmxue99n3o8\",\n  \"properties\" : {\n    \"rights\" : [ \"Manage\", \"Send\", \"Listen\", \"Send\", \"Manage\", \"Manage\" ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8a1a9c0f-5f27-495a-a6fd-d8ce5e646767",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:29.811241Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_GetAuthorizationRule",
          "schema" : {
            "required" : [ "properties" ],
            "properties" : {
              "properties" : {
                "required" : [ "rights" ],
                "type" : "object",
                "properties" : {
                  "rights" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    "description" : "The rights associated with the rule.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "Manage", "Send", "Listen" ]
                    }
                  }
                },
                "description" : "Authorization rule properties."
              }
            },
            "description" : "Description of a namespace authorization rule.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "fdb62b5c-0bf6-49ad-9692-a5fd32b01222",
    "name" : "Authorization rules for a hybrid connection.",
    "request" : {
      "urlPath" : "/subscriptions/y46p/resourceGroups/Whitney+Zieme/providers/Microsoft.Relay/namespaces/Rodger+Leuschke+V/hybridConnections/Ezequiel+Larkin+MD/authorizationRules",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "6swyqqdxhbuw65ryplvbq0ibr4fp7kyrhq7862rxsg7vdfjugwjir222wzo124ia9ki9ir8hdm61oqb5ylya5qy"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Mr. Jarrod Ledner\",\n    \"id\" : \"kw6n\",\n    \"type\" : \"n7iydsfcaybzax4jvgpdy2al06wmzy3sq0eabqxf4kuz95q8fm2eri1538h1auv9zt91wy7pxfejwbk8cud89qj5bcq7bfeaso93k3mkqtk0ov93pniwk6w5dilbexpcnntlvqt9i8e5grbtzc5hhh7clqfmkzjqld4ba6l5nvdig9eai3\",\n    \"properties\" : {\n      \"rights\" : [ \"Listen\", \"Listen\", \"Listen\" ]\n    }\n  }, {\n    \"name\" : \"Ashton Kuvalis\",\n    \"id\" : \"hek7\",\n    \"type\" : \"ku2tkogy49p1neul54a1w8f7dlgjsi20qxee8dlyg9fjty15xz67n0apv4yppw0cl1aeixm3mrp8y\",\n    \"properties\" : {\n      \"rights\" : [ \"Manage\", \"Manage\", \"Listen\", \"Listen\" ]\n    }\n  }, {\n    \"name\" : \"Millicent Schimmel DDS\",\n    \"id\" : \"38q6\",\n    \"type\" : \"9fdv88dd9dwf9nktopenpwa7gllvobqwkutrpsy1vy1uier2rpfp28w5bl0vicaep367xwhaopsz5mgq7s4lc5hnnp3t5o3l4m4zis9mgnh3wnhq37sufdqm0ard1r4eahvjrs7csg01jho5i9kl6iqlnfj1jxustznear7ley9v9gmfuyrlilb\",\n    \"properties\" : {\n      \"rights\" : [ \"Manage\", \"Send\", \"Send\", \"Listen\", \"Listen\" ]\n    }\n  }, {\n    \"name\" : \"Felipe Kub\",\n    \"id\" : \"0fxx\",\n    \"type\" : \"t2etslu2hpu2nbk7yov1eqlrrfzyx8ffat3ql51n4m79mzhaaat74l2opgiobmaram5dqx89mdtu34423rjg4290lvh7fnxze9zuad93e7djn2cbeozmays9c63qdwlvx9y1uh\",\n    \"properties\" : {\n      \"rights\" : [ \"Manage\", \"Manage\", \"Manage\", \"Send\", \"Send\", \"Send\", \"Manage\", \"Listen\" ]\n    }\n  }, {\n    \"name\" : \"Rosalba Mann\",\n    \"id\" : \"4y13\",\n    \"type\" : \"bi0trobzp17ec15s1lu3zwpaqnyyacrzvv8v6uo5z9m0bz2bkwitbhx5qqgw8pesmpptoxo81kr\",\n    \"properties\" : {\n      \"rights\" : [ \"Send\", \"Send\", \"Listen\", \"Manage\", \"Manage\", \"Manage\", \"Send\", \"Listen\" ]\n    }\n  }, {\n    \"name\" : \"Nancie Nicolas\",\n    \"id\" : \"7d0g\",\n    \"type\" : \"afmshtnla9fgwqyx4kf5ioeosdwjvnxtyocwfyn2x91rsxlkhrq799x2m50i9y8up65c5m20xmcv9cxno22ev9qkx9hwya\",\n    \"properties\" : {\n      \"rights\" : [ \"Manage\" ]\n    }\n  }, {\n    \"name\" : \"Lanita Greenfelder\",\n    \"id\" : \"2t22\",\n    \"type\" : \"f6hmhs9fd93meb3wlzacpxq1m46srvm29v2g1353h99nttqzpvsu4htt7n4terhqwvjauxk9hmkhpfjx98oicohl56luceeby30mvxegvokdyn9plnfqn9pds39vy0901ql7xo6t\",\n    \"properties\" : {\n      \"rights\" : [ \"Manage\", \"Listen\", \"Listen\", \"Send\", \"Manage\", \"Listen\", \"Manage\", \"Listen\" ]\n    }\n  } ],\n  \"nextLink\" : \"tm9xyd7wydly50vls1w2p8g43qunurh0klyvzr2g6kn2ka9akcr03o81k9cqulos5jhhj1hv2tlk22ualqf9bq538em4dwpn6jqpr5m5mih0xkgf6lbgg8ziisiepinvy2i9yhyq6rdthg55953qe4q7pcjnh0cy9f4x1n03njcs9\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fdb62b5c-0bf6-49ad-9692-a5fd32b01222",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:29.810781Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_ListAuthorizationRules",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if value contains incomplete list of authorization rules."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the list authorization rules operation.",
                "items" : {
                  "$ref" : "#/components/schemas/AuthorizationRule"
                }
              }
            },
            "description" : "The response from the list namespace operation."
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "27f6b822-8132-442c-9690-e191c1f07eec",
    "name" : "Deletes a hybrid connection. - 204",
    "request" : {
      "urlPath" : "/subscriptions/ixcw/resourceGroups/Tyler+Beier/providers/Microsoft.Relay/namespaces/Yolonda+Torphy/hybridConnections/Antonio+Kovacek+II",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "arko08eu5j477p2y"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "27f6b822-8132-442c-9690-e191c1f07eec",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:29.809498Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_Delete"
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "8973a515-a0b2-4159-9918-a7e0749d5332",
    "name" : "Deletes a hybrid connection. - 200",
    "request" : {
      "urlPath" : "/subscriptions/h1j0/resourceGroups/Shakira+Koss+DVM/providers/Microsoft.Relay/namespaces/Buddy+Howe/hybridConnections/Antonio+Fritsch",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "5jg5kxnkcqofainsnettevc79b4wdx167xxf015xgrwrwqwj5d24t34fd5qx8zfzs2q7bfd9tbhqtn41q8k210lrwpfrxfyixsrhc4cfj0r8u3bi88hsc3bwabbxjljj5iwkjshnm3ik6wqqwkb90i"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "8973a515-a0b2-4159-9918-a7e0749d5332",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:29.809301Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_Delete"
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "4dfe68ca-8cf1-42f0-8a94-131b75739b4c",
    "name" : "Creates or updates a service hybrid connection. This operation is idempotent.",
    "request" : {
      "urlPath" : "/subscriptions/yv79/resourceGroups/Linwood+Kemmer+IV/providers/Microsoft.Relay/namespaces/Peter+Hammes/hybridConnections/Eileen+Howell",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "1ilzd3mgbg7mnrrwmdyxw"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Kaye Jerde Sr.\",\n  \"id\" : \"9th1\",\n  \"type\" : \"fedtxag73y5on0pmcsvz2k2gksc5r0j5x520267ktzgbetcdh69pa80hy5pgzx06ljhzu7lgg95dhwgw8d95f2f18ke02xw1s5o8tzqwdb088r5s9u8hx7sp2ej6akq2l\",\n  \"properties\" : {\n    \"createdAt\" : \"2023-03-15T18:13:16.808Z\",\n    \"listenerCount\" : 0,\n    \"requiresClientAuthorization\" : false,\n    \"userMetadata\" : \"gbrx8b5tuazihudkj8ztdld6b8hawduz7dicgs3y6ojsjo127llwnwv0l75m8y71tz0slt7rftnb2rl8gfv2baz85vqejgflm6jttwqi352cqgh2qmtf8vf0zhc1wu0q6s1qsc40c54bubo\",\n    \"updatedAt\" : \"2023-02-21T08:02:46.808Z\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4dfe68ca-8cf1-42f0-8a94-131b75739b4c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:29.809083Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_CreateOrUpdate",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "createdAt" : {
                    "type" : "string",
                    "description" : "The time the hybrid connection was created.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "listenerCount" : {
                    "maximum" : 25,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "The number of listeners for this hybrid connection. Note that min : 1 and max:25 are supported.",
                    "format" : "int32",
                    "readOnly" : true
                  },
                  "requiresClientAuthorization" : {
                    "type" : "boolean",
                    "description" : "Returns true if client authorization is needed for this hybrid connection; otherwise, false."
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "The time the namespace was updated.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "userMetadata" : {
                    "type" : "string",
                    "description" : "The usermetadata is a placeholder to store user-defined string data for the hybrid connection endpoint. For example, it can be used to store descriptive data, such as a list of teams and their contact information. Also, user-defined configuration settings can be stored."
                  }
                },
                "description" : "Properties of the HybridConnection."
              }
            },
            "description" : "Description of hybrid connection resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "f17a62c6-4ee1-4669-bbeb-7d75cc3324bf",
    "name" : "Returns the description for the specified hybrid connection.",
    "request" : {
      "urlPath" : "/subscriptions/eit1/resourceGroups/Oscar+Beatty/providers/Microsoft.Relay/namespaces/Branda+Abbott/hybridConnections/Chin+Torp",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "b67r7mvkdz4m30zgna2jxdht78nexudmtypvwcbmjxdkas62ueq2y9kfg7d5medti84um4zkwvg721sy2fdjeelufwedr47nhlndtuha1n1vg13fu1ahlo28juf5sf3j2sfs80zw"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Douglas Miller MD\",\n  \"id\" : \"3ehk\",\n  \"type\" : \"iiq8s1ygtab2wonjeci4xqxuw2zg1ditiznyim8pr2f3f9n5cuinndq72528ezid3aoi95latpq4a8wgyromdfxmsx3yk7wd20jh07md1vyp1wl2s52to00ozq22ogthvvxecjyc8h1x6eeedo5dzvamfdjvdctlm\",\n  \"properties\" : {\n    \"createdAt\" : \"2023-03-07T06:48:27.808Z\",\n    \"listenerCount\" : 21,\n    \"requiresClientAuthorization\" : false,\n    \"userMetadata\" : \"m8uzfu9sp6l0za\",\n    \"updatedAt\" : \"2023-10-18T19:54:45.808Z\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f17a62c6-4ee1-4669-bbeb-7d75cc3324bf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:29.808666Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_Get",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "createdAt" : {
                    "type" : "string",
                    "description" : "The time the hybrid connection was created.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "listenerCount" : {
                    "maximum" : 25,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "The number of listeners for this hybrid connection. Note that min : 1 and max:25 are supported.",
                    "format" : "int32",
                    "readOnly" : true
                  },
                  "requiresClientAuthorization" : {
                    "type" : "boolean",
                    "description" : "Returns true if client authorization is needed for this hybrid connection; otherwise, false."
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "The time the namespace was updated.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "userMetadata" : {
                    "type" : "string",
                    "description" : "The usermetadata is a placeholder to store user-defined string data for the hybrid connection endpoint. For example, it can be used to store descriptive data, such as a list of teams and their contact information. Also, user-defined configuration settings can be stored."
                  }
                },
                "description" : "Properties of the HybridConnection."
              }
            },
            "description" : "Description of hybrid connection resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "afcfe7c5-dfa2-4b5d-85d1-1074764f7209",
    "name" : "Lists the hybrid connection within the namespace.",
    "request" : {
      "urlPath" : "/subscriptions/6l61/resourceGroups/Allen+Haag/providers/Microsoft.Relay/namespaces/Miss+Wanda+Keeling/hybridConnections",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "6h7lrmksjfjs"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Dr. Keven Bernhard\",\n    \"id\" : \"h050\",\n    \"type\" : \"l5fjotp2cvbp6c6ivtj471a0joxah0m8wxa47hjtxbe5jl7mziemiqmu5tp\",\n    \"properties\" : {\n      \"createdAt\" : \"2023-02-23T23:17:56.806Z\",\n      \"listenerCount\" : 8,\n      \"requiresClientAuthorization\" : true,\n      \"userMetadata\" : \"vqtf6khcq5g2l0iw\",\n      \"updatedAt\" : \"2022-08-13T06:55:55.806Z\"\n    }\n  }, {\n    \"name\" : \"Ms. Romeo Heaney\",\n    \"id\" : \"e686\",\n    \"type\" : \"enb9gl2ifdkvukcknwqxsaykxk9hwqubpwx52o09oyysh8njxd3uzywscleach5t2elnb67yn2s5alnkiigfmg8ilu94pd6alndgaupv16ua08nq0c3s2h5\",\n    \"properties\" : {\n      \"createdAt\" : \"2022-09-24T00:44:16.806Z\",\n      \"listenerCount\" : 14,\n      \"requiresClientAuthorization\" : true,\n      \"userMetadata\" : \"m49vz3lacuiae6laa\",\n      \"updatedAt\" : \"2023-02-06T12:32:22.807Z\"\n    }\n  }, {\n    \"name\" : \"Buffy Torphy\",\n    \"id\" : \"2fb3\",\n    \"type\" : \"rr3eyr2d960ce2n3104vhxnel0wecg87oqlzw2rb3jlwdes9zbm5gyalb1z7u7cucus2siosatnv\",\n    \"properties\" : {\n      \"createdAt\" : \"2022-09-22T15:13:42.807Z\",\n      \"listenerCount\" : 21,\n      \"requiresClientAuthorization\" : false,\n      \"userMetadata\" : \"e738mg00u288rj\",\n      \"updatedAt\" : \"2023-09-05T01:44:50.807Z\"\n    }\n  }, {\n    \"name\" : \"Emery Zulauf\",\n    \"id\" : \"8our\",\n    \"type\" : \"ojoswddet9wgrx4stpjzuzgu9fe16ef3pj4nl906bd\",\n    \"properties\" : {\n      \"createdAt\" : \"2022-10-18T09:31:34.807Z\",\n      \"listenerCount\" : 4,\n      \"requiresClientAuthorization\" : false,\n      \"userMetadata\" : \"fuknhn4az6hhluzch1d37n7meq30s75023a0t9o4m03dw88njnjk5ioshu6v2xb9x2x2furxawsn1k4zk3gsjbhj03e97vrth22x9ngfkit8x4h0hzqrvmr\",\n      \"updatedAt\" : \"2022-07-25T19:35:10.807Z\"\n    }\n  }, {\n    \"name\" : \"Lucien Powlowski\",\n    \"id\" : \"78u1\",\n    \"type\" : \"31d5z4wdlvg2e2aww2w70asepesbunc83j\",\n    \"properties\" : {\n      \"createdAt\" : \"2023-12-12T01:02:36.807Z\",\n      \"listenerCount\" : 4,\n      \"requiresClientAuthorization\" : false,\n      \"userMetadata\" : \"671qp1iwuvrjeg2ggen5p49x4k7ti22c6eu8zvrmyp143m11tx9xm4g7y5ru3wfo1rmqsfhd770dpr2lv6d649qh24atm8khzs2oscsibsg7nqc8y8nps9mvjmguwk078hjlkwb2n3dwts0u1cz91cdpit55zcourcjpjhyjmhnv30hap8hv73aa7j\",\n      \"updatedAt\" : \"2023-01-30T16:30:22.807Z\"\n    }\n  }, {\n    \"name\" : \"Ronald Leffler\",\n    \"id\" : \"9187\",\n    \"type\" : \"lxnttdbrawuzmulwr47aeymctdg17eoxl0dwiccxvifhtthe4nmn2mveyr95324cxs0vuhvcdmdsvmd68ld6bu1ju9lwdutukdvzwk9sfjck2xpc56uns54r1s8v4e1wgfnnd4ykknxpgwov9ypyavchbqrouvi6wqnrp\",\n    \"properties\" : {\n      \"createdAt\" : \"2023-10-23T15:31:57.807Z\",\n      \"listenerCount\" : 22,\n      \"requiresClientAuthorization\" : true,\n      \"userMetadata\" : \"y9vaofs2j7ai7p5yblbmptx09qyqm\",\n      \"updatedAt\" : \"2024-01-17T03:18:53.807Z\"\n    }\n  }, {\n    \"name\" : \"Reed Larkin\",\n    \"id\" : \"95e4\",\n    \"type\" : \"s2fv5bphzpkbyyvi36pzbeg0si9pj1u00sqjlvvjjjqzjtqbkovn16g\",\n    \"properties\" : {\n      \"createdAt\" : \"2022-12-16T18:44:00.807Z\",\n      \"listenerCount\" : 7,\n      \"requiresClientAuthorization\" : true,\n      \"userMetadata\" : \"jqksihrxfs6aoo5v6h2ybk0byuzs2wy10rui8nl45gra6sjklglzmrddvpf4g6o6y5yrmwtubyf78seqlzcl6vkkrswm7hidrxlvhn0vifq7ywbwk9zlyjh1bciq3do3sbp6btd1rnpk2uqit3yxzjiz\",\n      \"updatedAt\" : \"2022-09-07T11:46:05.807Z\"\n    }\n  } ],\n  \"nextLink\" : \"bf2zt0aki86tte2bikofj9b4lifukab1k4n06rd0riqtzvl7yt1zdltpp1imlc86xfxb6uzupwdshn6ieaqmomhp8lmx909480pgiemaigzusj84pou1p8zpszuhstlfnj39hewn6fmt832dmh6n4qr1vpuiasv6o8h\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "afcfe7c5-dfa2-4b5d-85d1-1074764f7209",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:29.808167Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_ListByNamespace",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if value contains incomplete list hybrid connection operation."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the list hybrid connections.",
                "items" : {
                  "$ref" : "#/components/schemas/HybridConnection"
                }
              }
            },
            "description" : "The response of the list hybrid connection operation."
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "628e9971-6d93-427d-b137-e5f05a983d80",
    "name" : "Regenerates the primary or secondary connection strings to the namespace.",
    "request" : {
      "urlPath" : "/subscriptions/0283/resourceGroups/Tommie+Hammes/providers/Microsoft.Relay/namespaces/Sanford+Leuschke/authorizationRules/Mrs.+Marvel+Simonis/regenerateKeys",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "cr8nq1pog7bit4r04rsu2hlbzl2p2pzl9h9phwf8mny4bmiz6i5sndhqwd"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"secondaryKey\" : \"zox58gnxcei23n75y1poys2bm72y5y6sqf9it2zvfybpmpbtf7fvesn5voeq8xr2ycnp8s9lc5eutx6ybx9dhbb457htz80ygtx4axwr8gjhqg\",\n  \"keyName\" : \"Ceola Veum\",\n  \"primaryConnectionString\" : \"5k4lic7retm9znkfaxvzy8hydm8tzk42m9qsvbpmpv9zu1now6sn7z71u7a6gst89vpyam8kkw6dagyd5qrh9\",\n  \"secondaryConnectionString\" : \"0ya4ryn5yflp3p4kn6pju2yd5a5aol18ea7aythu45lnpnh1jsa6pq7pg906we88iedb2wnvk8w37nbmg0j32y3f3lshfz\",\n  \"primaryKey\" : \"51ohhfhiivgje67tu87olp2nl5dg65ktld5uxt6tc0eo40ilq0yb5uv1t92h\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "628e9971-6d93-427d-b137-e5f05a983d80",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:29.80674Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_RegenerateKeys",
          "schema" : {
            "type" : "object",
            "properties" : {
              "keyName" : {
                "type" : "string",
                "description" : "A string that describes the authorization rule."
              },
              "primaryConnectionString" : {
                "type" : "string",
                "description" : "Primary connection string of the created namespace authorization rule."
              },
              "primaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit primary key for signing and validating the SAS token."
              },
              "secondaryConnectionString" : {
                "type" : "string",
                "description" : "Secondary connection string of the created namespace authorization rule."
              },
              "secondaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit secondary key for signing and validating the SAS token."
              }
            },
            "description" : "Namespace/Relay Connection String"
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "02166219-c475-4182-9d6a-fe77aa43baa7",
    "name" : "Primary and secondary connection strings to the namespace.",
    "request" : {
      "urlPath" : "/subscriptions/h08l/resourceGroups/Ignacio+Krajcik/providers/Microsoft.Relay/namespaces/Bernarda+Adams/authorizationRules/Edmundo+Christiansen/listKeys",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "qcxcv17aroe"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"secondaryKey\" : \"euxrbv3qmu2g8vwy8ht8i36b45wlox1k1ctc7gtci391zuncdxytj39oz21ws197he0mdna1cgc78s7022kgnvhyihsl0egrv3h3dw29dvrxghu05oe1sr1s1zcqd4xwiodhfs9m7yxlryp0wx4ssfb6oghdfcfemtkeaea2opf9g5o3fvgpcz6how8chwgnzhd7\",\n  \"keyName\" : \"Dr. Ulysses Mills\",\n  \"primaryConnectionString\" : \"v3hjq39v06vqeky25nhad1owwwob33h5ue358nrg5drpb2h7o8qrasegj7c8s2f8g21rxepw9xcmd0sp88hf8wxlu23da0xhbneikwz7hfq09h53ki1m61jzfsc27b551oeifxph4fsx2cjahgv4qzu3924j9tpw5mirstvbykefruxtivm5u6gkl\",\n  \"secondaryConnectionString\" : \"wa62cd3ac8t64zdgeyweubfasniqpomd8pcm0og3gofvai149aunpckmt6uc56cems8i0wd47ezgdjzef9o6nkjgj0bx5nahqnldst3to1e\",\n  \"primaryKey\" : \"6yfgzxchymre4g7zobyh9ytnvlssdi7z9pjz57smb70548pxdo9ge3jb0p94355p5dxbqf0i133xgo8bttehhkqvx973ryara4corq8futgdxvkzsef7t9gqardbaw2uhowy0f0qljsmnppayrszj7v20y7b7g52svie0nwqioaepwvnokwv3e81dx\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "02166219-c475-4182-9d6a-fe77aa43baa7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:29.806376Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_ListKeys",
          "schema" : {
            "type" : "object",
            "properties" : {
              "keyName" : {
                "type" : "string",
                "description" : "A string that describes the authorization rule."
              },
              "primaryConnectionString" : {
                "type" : "string",
                "description" : "Primary connection string of the created namespace authorization rule."
              },
              "primaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit primary key for signing and validating the SAS token."
              },
              "secondaryConnectionString" : {
                "type" : "string",
                "description" : "Secondary connection string of the created namespace authorization rule."
              },
              "secondaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit secondary key for signing and validating the SAS token."
              }
            },
            "description" : "Namespace/Relay Connection String"
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "b6edc81a-6bfa-4c15-96e5-71ad68a2e558",
    "name" : "Deletes a namespace authorization rule. - 204",
    "request" : {
      "urlPath" : "/subscriptions/u6u9/resourceGroups/Cherrie+Casper/providers/Microsoft.Relay/namespaces/Miss+Marlin+Collins/authorizationRules/Dillon+Lindgren",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "n7kctx2mlyc0vppyp39zt3qie1auzbg5y8p6kzvnypqyofr822y5tekfnqrcf6argn0jy0ods2n9whbr8mg"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "b6edc81a-6bfa-4c15-96e5-71ad68a2e558",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:29.80597Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_DeleteAuthorizationRule"
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "f7a65f57-1e3d-4a10-ab02-5a849445bf57",
    "name" : "Deletes a namespace authorization rule. - 200",
    "request" : {
      "urlPath" : "/subscriptions/r871/resourceGroups/Calista+Bashirian+DVM/providers/Microsoft.Relay/namespaces/Julian+Parisian/authorizationRules/Ms.+Leora+Langosh",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "dkuv3kj59sklz3210ktloyfpuj683jg9vfdsr08d5qt05prp4vug72tl95w1mm91ias1q5vedmg9uu0iih94q5cccb4mbmrhc7gyzb63nvorz50mi9br2"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "f7a65f57-1e3d-4a10-ab02-5a849445bf57",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:29.805759Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_DeleteAuthorizationRule"
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "0fa68526-ca10-4f0e-8788-6b84438bee38",
    "name" : "Creates or updates an authorization rule for a namespace.",
    "request" : {
      "urlPath" : "/subscriptions/up56/resourceGroups/Lesley+Moore+II/providers/Microsoft.Relay/namespaces/Tony+Ziemann/authorizationRules/Maddie+Schneider",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "earn6ssjqx75opxhy"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Lon Keeling\",\n  \"id\" : \"p70t\",\n  \"type\" : \"5a89ph5fo27d21epmimatp1cnrjk9gcee34csl90apzh7lcj6mrhdpq1xjdn078mefwkyd1xdv\",\n  \"properties\" : {\n    \"rights\" : [ \"Send\", \"Listen\", \"Manage\", \"Listen\" ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0fa68526-ca10-4f0e-8788-6b84438bee38",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:29.805504Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_CreateOrUpdateAuthorizationRule",
          "schema" : {
            "required" : [ "properties" ],
            "properties" : {
              "properties" : {
                "required" : [ "rights" ],
                "type" : "object",
                "properties" : {
                  "rights" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    "description" : "The rights associated with the rule.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "Manage", "Send", "Listen" ]
                    }
                  }
                },
                "description" : "Authorization rule properties."
              }
            },
            "description" : "Description of a namespace authorization rule.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "fee6b068-a51a-498a-a02e-bd2caa928088",
    "name" : "Authorization rule for a namespace by name.",
    "request" : {
      "urlPath" : "/subscriptions/9327/resourceGroups/Modesto+Zulauf+I/providers/Microsoft.Relay/namespaces/Man+Hermann/authorizationRules/Shante+Schinner",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "u29ybulz2aqdca0fqy4xewb8i7a385dqygrwznvionf5maupw148pdi3vw61b6it38pp69c9ru0zf4c60eep9ye40iuukva0gsorrh0pig71ohq83qjwdm68ssenqdj28xg5jbfurjcxhhwo3y6a"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Mrs. Hannah Krajcik\",\n  \"id\" : \"783h\",\n  \"type\" : \"fvmw9mrtwto813i6axd1a87vgdqbz5c0lns6p4sigd32kwx8sda10byx5845gd6cw7yofs737nlaxrgs6yw3aprgqp0uvyfypvhqbmmhbsv2ui7x2962w0ofnk1vbsturz04ojriar1bhsic2epg2b7rca4qfbi7uq8evpo9rye9n6dj6ot\",\n  \"properties\" : {\n    \"rights\" : [ \"Listen\", \"Manage\", \"Listen\", \"Listen\", \"Send\", \"Listen\", \"Manage\" ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fee6b068-a51a-498a-a02e-bd2caa928088",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:29.804986Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_GetAuthorizationRule",
          "schema" : {
            "required" : [ "properties" ],
            "properties" : {
              "properties" : {
                "required" : [ "rights" ],
                "type" : "object",
                "properties" : {
                  "rights" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    "description" : "The rights associated with the rule.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "Manage", "Send", "Listen" ]
                    }
                  }
                },
                "description" : "Authorization rule properties."
              }
            },
            "description" : "Description of a namespace authorization rule.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "5ef50aaf-b89b-4bfa-8e56-1ec09bd3eafe",
    "name" : "Authorization rules for a namespace.",
    "request" : {
      "urlPath" : "/subscriptions/1263/resourceGroups/Chance+Gulgowski/providers/Microsoft.Relay/namespaces/Bambi+Reinger/authorizationRules",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "760mwdoln4gxgtvogxwfymvpewcgwxxge0qa7q8bkgg7xhjhpndl0f5ltq0pofbumid2ojy6jddohi08939fts3w5f7zt3xb7dvcba8qsv35ne3602fa9m3e8v586dbidsq46gnvjqf60u05ubsauuu8snvxjwc88cd84tra0rnqoefjw6qm9yg"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Dr. Bryant Conroy\",\n    \"id\" : \"9f6d\",\n    \"type\" : \"8gxuuaptdg44wseyb05pfpe6wufa5pf8ksiwfyn9bpjrbjjox9ewhkbcfgqr4s9l9b5x85r6rdqj7nzcxbp5x8bphcv3xp8t25cbov40xhe8fj2xdypsneqc\",\n    \"properties\" : {\n      \"rights\" : [ \"Listen\", \"Listen\", \"Manage\", \"Manage\", \"Listen\", \"Manage\", \"Manage\" ]\n    }\n  } ],\n  \"nextLink\" : \"2mdugrlkclqledrkyuuexl8kqol9i3hw9yz96avg1xw2r9n5u1rggpqzzjwdjg33k6g6e1qqfphxsd0rwyc8qzeci5g04k9qepab4o00kl0qb277bcs7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5ef50aaf-b89b-4bfa-8e56-1ec09bd3eafe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:29.804521Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_ListAuthorizationRules",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if value contains incomplete list of authorization rules."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the list authorization rules operation.",
                "items" : {
                  "$ref" : "#/components/schemas/AuthorizationRule"
                }
              }
            },
            "description" : "The response from the list namespace operation."
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "48352519-e13a-4954-8117-faa77bd01204",
    "name" : "Creates or updates a namespace. Once created, this namespace's resource manifest...",
    "request" : {
      "urlPath" : "/subscriptions/t8q8/resourceGroups/Rudy+Ruecker/providers/Microsoft.Relay/namespaces/Norene+Rempel",
      "method" : "PATCH",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "7nq5c4evw0eypo5tedvvw7m5x3a6c85e"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"location\" : \"jyt4h4w05riun6etkd1bnx0\",\n  \"sku\" : {\n    \"tier\" : \"Standard\",\n    \"name\" : \"Standard\"\n  },\n  \"properties\" : {\n    \"createdAt\" : \"2024-03-10T15:32:53.803Z\",\n    \"metricId\" : \"4994\",\n    \"serviceBusEndpoint\" : \"ls69bl87035753tf9jbjhfbzcfj7ivtxhjwtjabd73f0ypwaq5093ys9qek3js58vkxa0o3dx56vt36ajue6sk47uci6xa9n0b5gm0\",\n    \"provisioningState\" : \"Succeeded\",\n    \"updatedAt\" : \"2024-03-12T13:21:13.803Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "48352519-e13a-4954-8117-faa77bd01204",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:29.804002Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Update",
          "schema" : {
            "properties" : {
              "properties" : {
                "$ref" : "#/components/schemas/RelayNamespaceProperties"
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Description of a namespace resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "6d7fa3d0-122e-46a5-9403-d11d36ca0b55",
    "name" : "Creates or updates a namespace. Once created, this namespace's resource manifest...",
    "request" : {
      "urlPath" : "/subscriptions/y0j4/resourceGroups/Emmanuel+Kovacek/providers/Microsoft.Relay/namespaces/Marcelo+Flatley",
      "method" : "PATCH",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "jcti"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"location\" : \"pw6dphghr\",\n  \"sku\" : {\n    \"tier\" : \"Standard\",\n    \"name\" : \"Standard\"\n  },\n  \"properties\" : {\n    \"createdAt\" : \"2023-06-20T01:46:14.802Z\",\n    \"metricId\" : \"gzq7\",\n    \"serviceBusEndpoint\" : \"s02utz6rlfzkzbupru7vqi1o9nfxcuzco0vxd3txexgbq0pjvqk53lfmr2i5149dytuvw1sku7w9alswsj2npkuvf9du145anpfa\",\n    \"provisioningState\" : \"Succeeded\",\n    \"updatedAt\" : \"2023-11-20T23:13:04.802Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6d7fa3d0-122e-46a5-9403-d11d36ca0b55",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:29.80352Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Update",
          "schema" : {
            "properties" : {
              "properties" : {
                "$ref" : "#/components/schemas/RelayNamespaceProperties"
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Description of a namespace resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "f539f317-64cc-46f8-af5a-76cec870809f",
    "name" : "Deletes an existing namespace. This operation also removes all associated resour... - 204",
    "request" : {
      "urlPath" : "/subscriptions/386d/resourceGroups/Chantel+Runolfsson/providers/Microsoft.Relay/namespaces/Miss+Nancey+Kirlin",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "kzdg3xg261btfti589zm0jd3yxyaz104x0yr8zky5b8cnh5tx2qe7pts5829q8q3rit9qe8s6ipjho88ula0mbttdu4qy07keryg7gep25owj6jbl1q8xyvbdn7niyxt3k6a94nh"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "f539f317-64cc-46f8-af5a-76cec870809f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:29.802372Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Delete"
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "8f2e0282-0ae8-41c8-995a-c3dee188549e",
    "name" : "Deletes an existing namespace. This operation also removes all associated resour... - 202",
    "request" : {
      "urlPath" : "/subscriptions/0azp/resourceGroups/Hal+Schulist+DDS/providers/Microsoft.Relay/namespaces/Weldon+Kozey",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "fs5iyotmm8rcnaid97owfdaoqwuv3u8cxxyea7hs8ea2vqu2qizh33rhdlmq19chdccpx51142knw53f9axhsqrazyrmmu3eh9so9xd3690b509uwqfpvxs2ik0ylohgz8d44097akn072ogyllf39bzlk9q3nezemwaz2d1oh8sq4otrdx91t8zcc7"
        }
      }
    },
    "response" : {
      "status" : 202
    },
    "uuid" : "8f2e0282-0ae8-41c8-995a-c3dee188549e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:29.801719Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Delete"
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "16b7ea1d-c631-40de-8ec4-cc5456692740",
    "name" : "Deletes an existing namespace. This operation also removes all associated resour... - 200",
    "request" : {
      "urlPath" : "/subscriptions/bpe7/resourceGroups/Luise+Waelchi/providers/Microsoft.Relay/namespaces/Mckinley+Weimann",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "6ezgllp0z9hgp0c2uy8zsavqfemggkjklrmrj69u6gvrtsnlg7quiwqg14ram91mz5g03rcc8yclwh1qugx7devtr4jp8tt7yue0h2zkorm"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "16b7ea1d-c631-40de-8ec4-cc5456692740",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:29.801338Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Delete"
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "1426b42d-7a65-49ef-af30-73e38d704976",
    "name" : "Create Azure Relay namespace.",
    "request" : {
      "urlPath" : "/subscriptions/vooq/resourceGroups/Jewel+Price/providers/Microsoft.Relay/namespaces/Osvaldo+Braun",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "wqb212j3cjhj6rwnmiguc7er4owksp3bcf3p8epn7x7pamwre3y417itlvoy44cwphhfim4oodc3fyafyjwbvth5bl4mzvxxgk0tlwzpfihfdxmdxx2srny8m25up94h9zq2sebzd1crkpis4a4nazdl1zzg34nozu9g"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"location\" : \"ezfqf17vql4i06ug2egzcli6y8zpte4f3jp\",\n  \"sku\" : {\n    \"tier\" : \"Standard\",\n    \"name\" : \"Standard\"\n  },\n  \"properties\" : {\n    \"createdAt\" : \"2023-10-18T08:03:11.8Z\",\n    \"metricId\" : \"zimc\",\n    \"serviceBusEndpoint\" : \"1bfnvs5vscmkorwxzv5z4vlzoex0bhheirjb6f8xxdtpzufi\",\n    \"provisioningState\" : \"Succeeded\",\n    \"updatedAt\" : \"2023-09-19T22:04:22.8Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1426b42d-7a65-49ef-af30-73e38d704976",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:29.801124Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_CreateOrUpdate",
          "schema" : {
            "properties" : {
              "properties" : {
                "$ref" : "#/components/schemas/RelayNamespaceProperties"
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Description of a namespace resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "c88100bb-a2ac-473b-a79b-7bf7ce6c487f",
    "name" : "Create Azure Relay namespace.",
    "request" : {
      "urlPath" : "/subscriptions/s06k/resourceGroups/Jamee+Collins+DVM/providers/Microsoft.Relay/namespaces/Inga+Mitchell",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "jkzovrsyl792syd5ulbrshk05iuh41sysqpjr47wflwquxng6ahjklgita2dq33suv8c4d0wvvpnlmguf8zzbl7k9qa3kt7nt2ttpcnckkx3fxoifugksk3hs9q6ajkazwb0cwcrmhfr2nfllxgngya1i9"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"location\" : \"hlc6bwhyd8icqfwvwwowyl924c8h37f3a04lrx5ivsujtpz7mnwqihnl0ysdvp9axjl25c4q5h8lbixt4zsjrtu012p15ll8v6g9yi0sifdlyyfc3lr5apapb6j7ub11sk9urqr9f6l9tagdm1art2hwr96u86wzz70maw8w4qshndggij1xiftbdnybgy3\",\n  \"sku\" : {\n    \"tier\" : \"Standard\",\n    \"name\" : \"Standard\"\n  },\n  \"properties\" : {\n    \"createdAt\" : \"2022-11-04T23:46:15.8Z\",\n    \"metricId\" : \"e544\",\n    \"serviceBusEndpoint\" : \"fm3p9a0srpjsf3pcpg\",\n    \"provisioningState\" : \"Failed\",\n    \"updatedAt\" : \"2023-10-26T18:46:22.8Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c88100bb-a2ac-473b-a79b-7bf7ce6c487f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:29.800531Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_CreateOrUpdate",
          "schema" : {
            "properties" : {
              "properties" : {
                "$ref" : "#/components/schemas/RelayNamespaceProperties"
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Description of a namespace resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "4ace55ff-cff8-4f07-bc5d-6eba5627f73e",
    "name" : "Returns the description for the specified namespace.",
    "request" : {
      "urlPath" : "/subscriptions/9owb/resourceGroups/Ms.+Heidi+Hettinger/providers/Microsoft.Relay/namespaces/Shelton+Hamill",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "5oievj8mnxkve0"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"location\" : \"jex6rgxszdd574t5tiz1qp85gsx60t6id6a9pwnwwg9iycu7pimalhcbdpttkpjakw31ul6h60mgm4xv83epxvnca8jrtn2a84zwmk2ff3rrvx3sigzmrpazjg8k53l5x4u36341leov8yon7f1dmxslcr2cwaocn2tju8cztkts9ofj3m4qrifxoznjhn\",\n  \"sku\" : {\n    \"tier\" : \"Standard\",\n    \"name\" : \"Standard\"\n  },\n  \"properties\" : {\n    \"createdAt\" : \"2022-12-14T15:31:39.799Z\",\n    \"metricId\" : \"x3h6\",\n    \"serviceBusEndpoint\" : \"gaf2fvkjqe1qgj7pxj9zc8qg49329uq9tf4f6rkkhf18ihahx9q9gjn1zvol8hu9pkvs\",\n    \"provisioningState\" : \"Failed\",\n    \"updatedAt\" : \"2023-07-14T05:05:11.799Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4ace55ff-cff8-4f07-bc5d-6eba5627f73e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:29.80017Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Get",
          "schema" : {
            "properties" : {
              "properties" : {
                "$ref" : "#/components/schemas/RelayNamespaceProperties"
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Description of a namespace resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "4eadbfde-dfe9-41c9-9a7e-6740f53eb876",
    "name" : "Lists all the available namespaces within the ResourceGroup.",
    "request" : {
      "urlPath" : "/subscriptions/031v/resourceGroups/Enedina+Prosacco/providers/Microsoft.Relay/namespaces",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "52i3zjprnso0slj3jdktsmazdhwv3px37z4t7so4x7ybxh8gon6pfzsj7gyj78lyhv73m6y5waa854siqqc3ngzcjwaehf6z5y9fw6n0acqa2wsjh9u09jbraxn52e29wb1a367nxyl3gzs06hlop9"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"location\" : \"g15zog8p46j7b6ijf7g902mfjj374xeb02die2adhvltjt8c98w7canu8xr8szb3p09o8p\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\"\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2023-05-01T05:20:55.799Z\",\n      \"metricId\" : \"i9up\",\n      \"serviceBusEndpoint\" : \"pr7nj1d0rmv94wtw3rkn5uvquqgzyhofj8jprs3k84b6r0jfdjb1dixqm4x4jahi2kebfnas0y7smwszq835lj7kls10e5bg6zgeqcnhx8vvmg89at43f65g9pq34z1yr0h84li24ufrm8awsvjzbey0p8q2kfx4p4anelrw1f\",\n      \"provisioningState\" : \"Created\",\n      \"updatedAt\" : \"2022-06-26T16:28:26.799Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"684pi0xp8s3mbsnf0bbg9x6yf33svrzon0kv6bnzxnromcw73mjc7m5ah15nilk22qg1n55qu2tme3ecfttlgfesmtvtpssr4zluw3ipf8c9orw3b06rzlkkry1q3x148dnvzqukqdhckqay83ejigfvqkvhibk7b76wbhtii1soqxcf9z0xcz7nf4g\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\"\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2024-02-17T15:21:10.799Z\",\n      \"metricId\" : \"166h\",\n      \"serviceBusEndpoint\" : \"c126xfy3jcgrlywkfv88yutjx1aywjb2vi5b3tlglje8k4hgaasbqiz7tpv5g\",\n      \"provisioningState\" : \"Unknown\",\n      \"updatedAt\" : \"2022-10-01T09:26:23.799Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"1btq52y69mzku0kbrzsyi08gy5zcfc1vkl9298jr2lakz9uuulihz3nimwebcig4cbvtt4njqxn8dkrj999muwra77nioj2safal1s9stzb58x4wzk7d4cy1xd8bkxkgmucgl1bd2mvf5sfnlxx24v49rn2qi39ec6s32zxyer16mhfnnl3giaog681x8wplvbt2\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\"\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2023-10-16T04:46:40.799Z\",\n      \"metricId\" : \"68px\",\n      \"serviceBusEndpoint\" : \"fnsixpadpk3882as\",\n      \"provisioningState\" : \"Failed\",\n      \"updatedAt\" : \"2023-04-08T02:12:02.799Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"kqph716e\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\"\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2023-08-17T16:40:13.799Z\",\n      \"metricId\" : \"kji0\",\n      \"serviceBusEndpoint\" : \"q7pkqt5vi9lyeiltcs250ixvc8w1l20e959lqkhmh5fhcbso64yrt8tbijf0ho4ok3xi1rqc4dceckmyv\",\n      \"provisioningState\" : \"Failed\",\n      \"updatedAt\" : \"2023-01-02T21:09:46.799Z\"\n    },\n    \"tags\" : { }\n  } ],\n  \"nextLink\" : \"z6n5sjqrwckksxnmoyon9rbt9g2sb42xva25e36kvrjabeog3fxmgdhkkagrsybvzgyk4ozuwh4n7q1zxoli2272nmurl8g2vdk676ji6r4v1ndadyl7k7h1yv8axajh4dbf720gaxuspvzew5l1oab2ri7ayoi8t04n428ammzxv15yooc02hiz07joabr8uh6q\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4eadbfde-dfe9-41c9-9a7e-6740f53eb876",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:29.799804Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_ListByResourceGroup",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if value contains incomplete list of namespaces."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the list namespace operation.",
                "items" : {
                  "$ref" : "#/components/schemas/RelayNamespace"
                }
              }
            },
            "description" : "The response from the list namespace operation."
          }
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "aff91374-98a5-4f71-a480-39b07e7fd01b",
    "name" : "Lists all the available namespaces within the subscription regardless of the res...",
    "request" : {
      "urlPath" : "/subscriptions/1zud/providers/Microsoft.Relay/namespaces",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "av18qvw9dn6rr007ppc2qojxfyogvhwnc71g9zl0t8j25u3tmxvrewqzlb7h7istlz0oa8zid189lg90oujix7ty1fkzhwx5qrzfda34y0645puo4i9qo984b1s078v5af1lhw1uiw4s6jq8979rbpy3vfuz601v1z3a7f5f78ngzqkx"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"location\" : \"ma7coyar7e0htmfjlkcdu1q5hmpau6hm88ub4q2x3l86lsgsnxgps3uh4l3casd7o4swhxru\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\"\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2022-08-07T00:14:34.798Z\",\n      \"metricId\" : \"6k4u\",\n      \"serviceBusEndpoint\" : \"d29qgpwfnnaaf4w92edvxf5v98hw494mm24pwr9hrfrqnowuwbn8vhrgjstd2ri226vep6emgb86h64dgt3lofc3nawbge6di80cysikm8x7gvt4ypsezlho72lehq9bv\",\n      \"provisioningState\" : \"Unknown\",\n      \"updatedAt\" : \"2022-12-06T07:18:21.798Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"6n6v808bn0iifjf50a3q844wxilba2cv0vddpggqd62l5w1cbalbzma5ff335z27r5q6i47a5o8wgjm27jehc3xptb6hh10bzudygansxas7lwjeedr7jngpe0dikr78a2dkz2hb8fohvw2gvfjrui7kib9g7pw1qc7qm69nbx98km1d2brs0omn6r\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\"\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2023-08-27T23:54:01.798Z\",\n      \"metricId\" : \"5j57\",\n      \"serviceBusEndpoint\" : \"yfdwrra90b0xb0mdack3je0vdnajbe30ro8t32v30tecfwa5xh8rplihuag4sul51uu0xn3ul2m8miljxlaw1op211fwysq9mii\",\n      \"provisioningState\" : \"Unknown\",\n      \"updatedAt\" : \"2023-11-27T05:56:32.798Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"slh0bhjmzkn61pepknc0i7edcwh2ruz0x2pznydbkmpfc323i1ziw6e62edey61dqtdt3c603akcv8ca8qgo4l5\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\"\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2023-11-16T18:19:46.798Z\",\n      \"metricId\" : \"6n7z\",\n      \"serviceBusEndpoint\" : \"ff02ugkcbyk27zheb07r1733pqxytl5gxe\",\n      \"provisioningState\" : \"Updating\",\n      \"updatedAt\" : \"2022-08-11T06:33:32.798Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"wmismizv86834lpbzocwugzigg5gvcjs3qowtdtgcg4qvrfkm9bwvkqhka2ybsohbawab6f9aerfde014j0g7zct5dnncg1w100gjpvmqpnah8q3qegifyq3a3zdi5iq8p5ohlgbij5zhgfab6fs48vj0q83dizegpb9kuenngg\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\"\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2024-03-11T03:08:07.798Z\",\n      \"metricId\" : \"45j2\",\n      \"serviceBusEndpoint\" : \"mpb4nf19r5cpxg9l6g76xjwy2iya1uu7m79tjtc5ewesjysnmp820evxg8mp2e8ae8rlar8y3zpgilmolubog3io1l43slfgok02ogifi2b9y8652p3gu9cc2vp5atevaukquoqkqlqfacdtqckqd8\",\n      \"provisioningState\" : \"Updating\",\n      \"updatedAt\" : \"2022-03-24T03:00:34.798Z\"\n    },\n    \"tags\" : { }\n  } ],\n  \"nextLink\" : \"iwms45sr3jrs2ao7i88outznr6y0iiah5m6ar3vhbn8bfgcqkpifev0djrlrhz12ne41paa8khiapsm7vlb5snf594viybozpniz7pzjtyun01jdwx3z412bqi1mvanv1awfxowyyannnrtwqo955ajw1ozzi8ezdrj03bnxnkee\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aff91374-98a5-4f71-a480-39b07e7fd01b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:29.79895Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_List",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if value contains incomplete list of namespaces."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the list namespace operation.",
                "items" : {
                  "$ref" : "#/components/schemas/RelayNamespace"
                }
              }
            },
            "description" : "The response from the list namespace operation."
          }
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "52963a8c-ba5a-495f-9f79-4e8bfd78888e",
    "name" : "Check the specified namespace name availability.",
    "request" : {
      "urlPath" : "/subscriptions/yb2b/providers/Microsoft.Relay/checkNameAvailability",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "s67jicv3m4nr3ri6lspnb8dltlfhsbig29poxsogsw051zilb23n4ojzoqi0kig31bxsi1c55yh7iqvqh1zjufrpsjz56xprju5q1704sbb42ugdj7skn8g54hhv6f"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"reason\" : \"InvalidName\",\n  \"nameAvailable\" : true,\n  \"message\" : \"Aut sunt incidunt harum. Reprehenderit ea et esse adipisci. Dolorem ducimus quia aut.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "52963a8c-ba5a-495f-9f79-4e8bfd78888e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:29.798054Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_CheckNameAvailability",
          "schema" : {
            "type" : "object",
            "properties" : {
              "message" : {
                "type" : "string",
                "description" : "The detailed info regarding the reason associated with the namespace.",
                "readOnly" : true
              },
              "nameAvailable" : {
                "type" : "boolean",
                "description" : "Value indicating namespace is available. Returns true if the namespace is available; otherwise, false."
              },
              "reason" : {
                "$ref" : "#/components/schemas/UnavailableReason"
              }
            },
            "description" : "Description of the check name availability request properties."
          }
        }
      }
    },
    "insertionIndex" : 42
  }, {
    "id" : "ce34e951-23ac-4854-a07c-2a047262dfbf",
    "name" : "Lists all available Relay REST API operations.",
    "request" : {
      "urlPath" : "/providers/Microsoft.Relay/operations",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "ewgb70452q7rwt8w3kiuhnqpic644mfe4p6m909czx5cizjixqrpei08earvapget0fdfwxcgta6a4fu7ewlhn4vpvy4c74z6rzr9r1i5sb8en7gzl"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"display\" : {\n      \"provider\" : \"m9cvfb9z5mb\",\n      \"resource\" : \"nw41vq7jwdycb86ddpgz5p25ues0k211lqq8xj7qdmi0mi57xx6g9016llnsy8alyq22q8qto8kdgfw30k7gs25x47cnv5gtbqlca44ynw63jba0djifp3eopq5t8vdk1n9zglxv0qj39p5v5woneds169tbo2vs369r5r1lqi88v1ccq\",\n      \"operation\" : \"f2nyvoazimse68nn3j72uzbo05pvttlheca6q5kvcia0e281t5dap4as9frr914ywo425misiosby1h6128yxafbthyu30gw68xhfay7o3aqkke92bj0k5h7j7gedw7ikd4neqiwfd0xicvsdu3g02k2s5r9lc4hxbipt56mvst4uclh9sw8bw4snbj\"\n    },\n    \"name\" : \"Mrs. Amado Rosenbaum\"\n  } ],\n  \"nextLink\" : \"r7obum1sfbncg7v17n0z1gdlrx1oqzwc3z2i6bov55nqgnrh9kda2ptx6tevt4rh32rr\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ce34e951-23ac-4854-a07c-2a047262dfbf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:29.797766Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Operations_List",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "URL to get the next set of operation list results if there are any.",
                "readOnly" : true
              },
              "value" : {
                "type" : "array",
                "description" : "List of Relay operations supported by resource provider.",
                "readOnly" : true,
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                }
              }
            },
            "description" : "Result of the request to list Relay operations. It contains a list of operations and a URL link to get the next set of results."
          }
        }
      }
    },
    "insertionIndex" : 43
  } ]
}