{
  "mappings" : [ {
    "id" : "dfe13637-d3bb-4d0a-a0b8-7be0610209c6",
    "name" : "Regenerates the primary or secondary connection strings to the WCF relay.",
    "request" : {
      "urlPath" : "/subscriptions/l7k9/resourceGroups/Conchita+Lesch/providers/Microsoft.Relay/namespaces/Cornell+Tillman+MD/wcfRelays/Miss+Basil+Nicolas/authorizationRules/Tracy+Gislason+Jr./regenerateKeys",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "zprjf4zqchevdbndbitdiry40dk8wpkjqwh0wne0pce46439z5hobl4x8qj965tzchgkih51dvnugci2nh42nb88u3bcc68ur5nn41vb94m4j0yonh5hx3t9sya6r618abcmwxo8s56yhouz4aptfrj0lyhmdfpp6z0hoj0ayadm5rij2j8jr8uxycrhvaz"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"secondaryKey\" : \"ojnxzotd9hf85inucvr6llorq29xzz9yktueyry8jcgszs53wm5eiqc30k5mbm64wlv22b2kiuwoblhmy1yraiskpwqh3tbyx9ikbxr96kjjootcat308moretnav4mgqia207u4oaobft\",\n  \"keyName\" : \"Zachery Hammes PhD\",\n  \"primaryConnectionString\" : \"fqky6mia5tsq39nvhsx2a7o2c5inud9knyx9jtdfcyb4b0hgxlt3jl8ey8fncoygcqy8sofvqg7x0jj1lwr2eik5x9fg1ep1kp71i8j33qk7blk7d105f1d\",\n  \"secondaryConnectionString\" : \"6bn1tgxszi7w0gw6d2e2v1w9qz8w337ycqiyoaqwtw\",\n  \"primaryKey\" : \"zz2hhqqp86406gcxyg7vtx0jpd58tp5jddcfbe6igy43vu4ozr007ea0q2ni4c6bquccm2ri3loy5kiu4rcdj1zb0gyqj2vm46rbu9x0ykz0layth06uz532rpyrtirillgkebft3cqxilwvvyb\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dfe13637-d3bb-4d0a-a0b8-7be0610209c6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:00.857627Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_RegenerateKeys",
          "schema" : {
            "type" : "object",
            "properties" : {
              "keyName" : {
                "type" : "string",
                "description" : "A string that describes the authorization rule."
              },
              "primaryConnectionString" : {
                "type" : "string",
                "description" : "Primary connection string of the created namespace authorization rule."
              },
              "primaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit primary key for signing and validating the SAS token."
              },
              "secondaryConnectionString" : {
                "type" : "string",
                "description" : "Secondary connection string of the created namespace authorization rule."
              },
              "secondaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit secondary key for signing and validating the SAS token."
              }
            },
            "description" : "Namespace/Relay Connection String"
          }
        }
      }
    }
  }, {
    "id" : "9e880732-c5da-414c-a4ca-6e250a1bc447",
    "name" : "Primary and secondary connection strings to the WCF relay.",
    "request" : {
      "urlPath" : "/subscriptions/go0t/resourceGroups/Wes+Marquardt/providers/Microsoft.Relay/namespaces/Courtney+Langosh/wcfRelays/Toby+Willms/authorizationRules/Ms.+Neda+Hoeger/listKeys",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "kinszsxg1xyv2zvst7sqqxflr4we"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"secondaryKey\" : \"mt83p5vg2c9og25ee0w0wb34yp4gsokhi2ns6434fcm8xu4kzwa7k96suk7fxukcd1gl0txlnqclb4l40n14iuovwqcdupgq2ehk\",\n  \"keyName\" : \"Antoine Kuhn\",\n  \"primaryConnectionString\" : \"damv4ifs\",\n  \"secondaryConnectionString\" : \"29ygpifuuz785aos7x05f89gqb59twyiozeyxj50fig7vujuae2h94u2mcyjzb1x9b8laap8sfkozcwvimhwnbxg46u8lehgsw5l1ry4sekj4hbxm6i\",\n  \"primaryKey\" : \"nb7mfg2wkszfsreu\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9e880732-c5da-414c-a4ca-6e250a1bc447",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:00.857149Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_ListKeys",
          "schema" : {
            "type" : "object",
            "properties" : {
              "keyName" : {
                "type" : "string",
                "description" : "A string that describes the authorization rule."
              },
              "primaryConnectionString" : {
                "type" : "string",
                "description" : "Primary connection string of the created namespace authorization rule."
              },
              "primaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit primary key for signing and validating the SAS token."
              },
              "secondaryConnectionString" : {
                "type" : "string",
                "description" : "Secondary connection string of the created namespace authorization rule."
              },
              "secondaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit secondary key for signing and validating the SAS token."
              }
            },
            "description" : "Namespace/Relay Connection String"
          }
        }
      }
    }
  }, {
    "id" : "b0e73040-d1f5-4a33-abe9-9516e8466aa1",
    "name" : "Deletes a WCF relay authorization rule. - 204",
    "request" : {
      "urlPath" : "/subscriptions/9r43/resourceGroups/Rodney+Mosciski/providers/Microsoft.Relay/namespaces/Mr.+Brittanie+Smitham/wcfRelays/Louella+Hartmann+I/authorizationRules/Aubrey+Roberts",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "50hb96cs297x8v3mgwd0x0bbe8de1k359g"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "b0e73040-d1f5-4a33-abe9-9516e8466aa1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:00.856662Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_DeleteAuthorizationRule"
        }
      }
    }
  }, {
    "id" : "2f09d333-296a-43b5-bca6-f50cc9aabe4a",
    "name" : "Deletes a WCF relay authorization rule. - 200",
    "request" : {
      "urlPath" : "/subscriptions/mlik/resourceGroups/Major+Schamberger/providers/Microsoft.Relay/namespaces/Keiko+Lang/wcfRelays/Vicky+Schuppe/authorizationRules/Jamey+Wehner",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "jtp7icwz3ih3mpvdos6g98dt0crogxvn0fnrdnrw4bo8j3ncgegc9g8oozi3venbh1qjnlvnxnwehkwvmh49mo1zmzl5ggbhsi8784voh09xmof8spijxk9niuu9om2ny375ph3quer7dmkkv2zvdz3uceizlu1av2e8dfdrqjfvrf5n65"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "2f09d333-296a-43b5-bca6-f50cc9aabe4a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:00.856305Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_DeleteAuthorizationRule"
        }
      }
    }
  }, {
    "id" : "823a5a04-310d-4225-be06-58b336677adc",
    "name" : "Creates or updates an authorization rule for a WCF relay.",
    "request" : {
      "urlPath" : "/subscriptions/4z2z/resourceGroups/Felix+Bruen/providers/Microsoft.Relay/namespaces/Oswaldo+Bernhard/wcfRelays/Brittny+Bergnaum/authorizationRules/Isis+Miller",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "vgru527r5sa8dxm4ax48eb5niwype1f3zl2xo1dj4t9gv0uhn2cazygih69zu53hv7q115ioodmut32dv6gldc0xvgsx7m8vzyhdgbd197s5yruec91z4y"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Kaye Dooley\",\n  \"id\" : \"4mg0\",\n  \"type\" : \"hnq6s7mntk4phr19ca6snxcjsyinr1mtjmmwfyvx6fxoy93ddzzlvsp8l73fyycz3rb5xah5b0kbcle1yqxz9fcsrfkewriqnj4q3pvfsgr32ojc5xtf0aapvh78z9fh5ndigla7logv8aapcm00c4vhtx2bxj8eu9i543qh5x\",\n  \"properties\" : {\n    \"rights\" : [ \"Send\", \"Send\", \"Manage\", \"Listen\", \"Listen\" ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "823a5a04-310d-4225-be06-58b336677adc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:00.855943Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_CreateOrUpdateAuthorizationRule",
          "schema" : {
            "properties" : {
              "properties" : {
                "required" : [ "rights" ],
                "type" : "object",
                "properties" : {
                  "rights" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    "description" : "The rights associated with the rule.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "Manage", "Send", "Listen" ]
                    }
                  }
                },
                "description" : "Authorization rule properties."
              }
            },
            "description" : "Description of a namespace authorization rule.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "d146c2fe-a9de-4149-91ca-a79fdf0cbb4e",
    "name" : "Get authorizationRule for a WCF relay by name.",
    "request" : {
      "urlPath" : "/subscriptions/v7a6/resourceGroups/Angelina+Hamill/providers/Microsoft.Relay/namespaces/Jerald+Bailey/wcfRelays/Georgiann+Wunsch/authorizationRules/Casie+Lubowitz",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "jkr8opn0d6wszj26sd2lxmy5vdxluifzq7lqkczp49v05raamzmyonm6t2nxbv3kvocye1sa2l06mesa7mduad"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Hiram Kovacek\",\n  \"id\" : \"dii0\",\n  \"type\" : \"o6e8eachqr5wcnw46bsjf28f3b50kvnfa8yi11ubzbyrxd21ug4cwl5wfdioow1s7hb7vqrng3527la80aj39k9s2pj3thn3aaoflcmxpr0y90vvaufvsv3he62w13xil5dv6w9190dy0q94amx00lo5o\",\n  \"properties\" : {\n    \"rights\" : [ \"Send\", \"Send\", \"Manage\", \"Send\", \"Listen\" ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d146c2fe-a9de-4149-91ca-a79fdf0cbb4e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:00.855352Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_GetAuthorizationRule",
          "schema" : {
            "properties" : {
              "properties" : {
                "required" : [ "rights" ],
                "type" : "object",
                "properties" : {
                  "rights" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    "description" : "The rights associated with the rule.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "Manage", "Send", "Listen" ]
                    }
                  }
                },
                "description" : "Authorization rule properties."
              }
            },
            "description" : "Description of a namespace authorization rule.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "5e659ed8-b949-47f4-a269-b0a5a5651cfd",
    "name" : "Authorization rules for a WCF relay.",
    "request" : {
      "urlPath" : "/subscriptions/bp6s/resourceGroups/Lyle+Langosh/providers/Microsoft.Relay/namespaces/Jane+Schroeder/wcfRelays/Lincoln+Carter/authorizationRules",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "y79jhnpcc8o69ind24uscz80v11etumra33uga7sxyg7mg8dkcyda5n81s1uwsi8q4p93mvt8nhir0u7vn8otcy717dpk3h86ystf7mj3m8m46zftlwtxlmxw2wbe6qca4ycnettv64jwz0wd9ekt7opb6uoq6lsfgig9zyt5x"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Mr. Enrique Ryan\",\n    \"id\" : \"3e6b\",\n    \"type\" : \"jdvo8w7jo1oabm67qrr9h0ig1vyy3y2at2q5n3o0yoghv7xrcue5xh6wc0xgmuvga4\",\n    \"properties\" : {\n      \"rights\" : [ \"Send\", \"Manage\", \"Manage\", \"Manage\", \"Listen\" ]\n    }\n  } ],\n  \"nextLink\" : \"lep0uk1qhxc6vuttdicp0x53jv2abcyirwpiqnnf2ylhuge8z5fp14ndei2vlzpumlyddjpq0boalpw2loa9nwiayuq56nr3uzc5r\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5e659ed8-b949-47f4-a269-b0a5a5651cfd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:00.854834Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_ListAuthorizationRules",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if value contains incomplete list of authorization rules."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the list authorization rules operation.",
                "items" : {
                  "$ref" : "#/components/schemas/AuthorizationRule"
                }
              }
            },
            "description" : "The response from the list namespace operation."
          }
        }
      }
    }
  }, {
    "id" : "9f12a1c8-2bf4-4c25-81d3-17075d6afeb4",
    "name" : "Deletes a WCF relay. - 204",
    "request" : {
      "urlPath" : "/subscriptions/6m18/resourceGroups/Josphine+Hickle/providers/Microsoft.Relay/namespaces/Priscilla+Pagac/wcfRelays/Mrs.+Ilana+Lehner",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "df8mebwnwvf0v3bkir54nt9lcnarn7h"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "9f12a1c8-2bf4-4c25-81d3-17075d6afeb4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:00.854266Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_Delete"
        }
      }
    }
  }, {
    "id" : "f32fd9c4-a9dd-475d-bf49-4dbc3ccfd1f7",
    "name" : "Deletes a WCF relay. - 200",
    "request" : {
      "urlPath" : "/subscriptions/n6il/resourceGroups/Ramon+Grimes/providers/Microsoft.Relay/namespaces/Fernando+Heidenreich/wcfRelays/Rossie+Brekke",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "61epp46h6wxgpv59onw7c7xmx0azpz6k9ipuzcv1krgyxlf3mfbzz3rgv0t3b4ooj28zk5l26allym3814n"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "f32fd9c4-a9dd-475d-bf49-4dbc3ccfd1f7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:00.854026Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_Delete"
        }
      }
    }
  }, {
    "id" : "c361cb46-06a1-4a43-a277-324566167493",
    "name" : "Creates or updates a WCF relay. This operation is idempotent.",
    "request" : {
      "urlPath" : "/subscriptions/9200/resourceGroups/Iris+Dicki/providers/Microsoft.Relay/namespaces/Mr.+Parker+Parker/wcfRelays/Dorathy+Stamm",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "zsl02jt245bmuqjsl3xqz9ylt2sv71heocb5utfyaqbh1pfjqomvne7uw0c5jrzyynt70zmym4cifm0326j7c"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Jaymie Parisian V\",\n  \"id\" : \"gy3a\",\n  \"type\" : \"gjsca2lp2sye8rwktw5ce68jp8sne8sad5kwekg5j3ike3uglwauf3cc108d6hytq4i1t1gwgof4lmuwv2huqlyq0ar7q85ji6k1xsyyaymtee1w7abxrfdxbkrl5xpaj9jv5yaax9703sfs9t16b2i9n97t\",\n  \"properties\" : {\n    \"createdAt\" : \"2022-03-08T05:22:33.853Z\",\n    \"listenerCount\" : 18,\n    \"isDynamic\" : false,\n    \"relayType\" : \"NetTcp\",\n    \"requiresClientAuthorization\" : false,\n    \"userMetadata\" : \"s33d0d40ntjqso70nfaj7xf6i5es8y4u49vpf6uwaqn5rhyygh6o0leos06ym\",\n    \"requiresTransportSecurity\" : true,\n    \"updatedAt\" : \"2024-01-27T03:11:55.853Z\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c361cb46-06a1-4a43-a277-324566167493",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:00.853748Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_CreateOrUpdate",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "createdAt" : {
                    "type" : "string",
                    "description" : "The time the WCF relay was created.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "isDynamic" : {
                    "type" : "boolean",
                    "description" : "Returns true if the relay is dynamic; otherwise, false.",
                    "readOnly" : true
                  },
                  "listenerCount" : {
                    "maximum" : 25,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "The number of listeners for this relay. Note that min :1 and max:25 are supported.",
                    "format" : "int32",
                    "readOnly" : true
                  },
                  "relayType" : {
                    "type" : "string",
                    "description" : "WCF relay type.",
                    "enum" : [ "NetTcp", "Http" ]
                  },
                  "requiresClientAuthorization" : {
                    "type" : "boolean",
                    "description" : "Returns true if client authorization is needed for this relay; otherwise, false."
                  },
                  "requiresTransportSecurity" : {
                    "type" : "boolean",
                    "description" : "Returns true if transport security is needed for this relay; otherwise, false."
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "The time the namespace was updated.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "userMetadata" : {
                    "type" : "string",
                    "description" : "The usermetadata is a placeholder to store user-defined string data for the WCF Relay endpoint. For example, it can be used to store descriptive data, such as list of teams and their contact information. Also, user-defined configuration settings can be stored."
                  }
                },
                "description" : "Properties of the WCF relay."
              }
            },
            "description" : "Description of the WCF relay resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "aa2b954b-0d07-4791-b5e6-16968ea7b8ac",
    "name" : "Returns the description for the specified WCF relay. - 204",
    "request" : {
      "urlPath" : "/subscriptions/go4d/resourceGroups/Margie+O%27Reilly/providers/Microsoft.Relay/namespaces/Miss+Elvina+Boyle/wcfRelays/Jesse+Prohaska",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "inaf4n6vgsz9b6zz4zulfh0fbaryfxc9q0dczd0k86nub2fqounmuomvsn1kghku729cgauxjlkba6wivv6nh0in5srhqmjbg04jy29jfligfqf5orwdwdhhy1vfwta8ryopu5hv6buojmnyhhbrmjijv5jiuq52bd957nlfbinouhi5h5hmr"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "aa2b954b-0d07-4791-b5e6-16968ea7b8ac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:00.853153Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_Get"
        }
      }
    }
  }, {
    "id" : "16237be2-0849-41bd-97db-1c3a8b2bccfd",
    "name" : "Returns the description for the specified WCF relay. (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/21e4/resourceGroups/Delbert+Thiel+DDS/providers/Microsoft.Relay/namespaces/Robt+Emard/wcfRelays/Walter+Yost+III",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "h3ydy7438a9r6cxp0cte0bkr5cq04t2okb12t02tyl4mkglmjo9jp42klfg564khljfi14pymkvtg82kjlm5gt"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Madonna Quigley Sr.\",\n  \"id\" : \"063z\",\n  \"type\" : \"tbb45e7b4\",\n  \"properties\" : {\n    \"createdAt\" : \"2022-05-14T01:46:16.852Z\",\n    \"listenerCount\" : 20,\n    \"isDynamic\" : true,\n    \"relayType\" : \"NetTcp\",\n    \"requiresClientAuthorization\" : true,\n    \"userMetadata\" : \"xo1mfcdivouoyntbfj4td\",\n    \"requiresTransportSecurity\" : true,\n    \"updatedAt\" : \"2022-04-08T06:46:27.852Z\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "16237be2-0849-41bd-97db-1c3a8b2bccfd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:00.852874Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_Get",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "createdAt" : {
                    "type" : "string",
                    "description" : "The time the WCF relay was created.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "isDynamic" : {
                    "type" : "boolean",
                    "description" : "Returns true if the relay is dynamic; otherwise, false.",
                    "readOnly" : true
                  },
                  "listenerCount" : {
                    "maximum" : 25,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "The number of listeners for this relay. Note that min :1 and max:25 are supported.",
                    "format" : "int32",
                    "readOnly" : true
                  },
                  "relayType" : {
                    "type" : "string",
                    "description" : "WCF relay type.",
                    "enum" : [ "NetTcp", "Http" ]
                  },
                  "requiresClientAuthorization" : {
                    "type" : "boolean",
                    "description" : "Returns true if client authorization is needed for this relay; otherwise, false."
                  },
                  "requiresTransportSecurity" : {
                    "type" : "boolean",
                    "description" : "Returns true if transport security is needed for this relay; otherwise, false."
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "The time the namespace was updated.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "userMetadata" : {
                    "type" : "string",
                    "description" : "The usermetadata is a placeholder to store user-defined string data for the WCF Relay endpoint. For example, it can be used to store descriptive data, such as list of teams and their contact information. Also, user-defined configuration settings can be stored."
                  }
                },
                "description" : "Properties of the WCF relay."
              }
            },
            "description" : "Description of the WCF relay resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "a5e6aac3-d026-44af-843a-ed2de107f81e",
    "name" : "Lists the WCF relays within the namespace.",
    "request" : {
      "urlPath" : "/subscriptions/gbbi/resourceGroups/Miss+Tristan+Kerluke/providers/Microsoft.Relay/namespaces/Roscoe+Renner/wcfRelays",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "69jb6qoh3owj7dr275aiub1vjbitvg7uuh8ycr4t11y12dx28z71mcfxududx2jak6wxkh8yfq0k52z101"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Iesha Denesik MD\",\n    \"id\" : \"1ts8\",\n    \"type\" : \"bneya6ex2pfyczpd103fznfuao0y6nytgxyl4vxww12pcno67v6lns0pisfu7e\",\n    \"properties\" : {\n      \"createdAt\" : \"2023-10-20T13:38:03.851Z\",\n      \"listenerCount\" : 1,\n      \"isDynamic\" : true,\n      \"relayType\" : \"NetTcp\",\n      \"requiresClientAuthorization\" : true,\n      \"userMetadata\" : \"f6j1yxp9qz6opziwyzolp31wx3q5n7qfkr9k0jfbp3odc4cemawhcat1l0dnii8yhd4d1w17hiwqrazp5nj1gqqfib4wich2ymrm5lnv37aue9fhbl0jql9euie619w1lekxt7fe6wq3mlu1btpko6t222lly9pvj22rn8bl81cz5yqsh2\",\n      \"requiresTransportSecurity\" : true,\n      \"updatedAt\" : \"2023-08-25T15:43:25.851Z\"\n    }\n  }, {\n    \"name\" : \"Modesto Moore\",\n    \"id\" : \"v135\",\n    \"type\" : \"18hjxfyat2xmazufx434gvdfod8qi2ihhq3nuaj0cohov0xskwwimzrzw7muvgcdfuh\",\n    \"properties\" : {\n      \"createdAt\" : \"2023-10-22T22:57:06.851Z\",\n      \"listenerCount\" : 16,\n      \"isDynamic\" : true,\n      \"relayType\" : \"Http\",\n      \"requiresClientAuthorization\" : true,\n      \"userMetadata\" : \"nialggxy9pbgwm9zr6b62r0hq03jbbkq78wrtwtztkqhmjg3i33yl08dtanahwo1u723vmdniljkxdvup2db781a9f3ykyzq7zm63dhm7gjy3e7tags4h30rf5fc6fxwgkju0lxbn5ck4l7j0st1at5dfavamp5fwya0enoa0vswbu\",\n      \"requiresTransportSecurity\" : false,\n      \"updatedAt\" : \"2022-04-29T16:25:44.851Z\"\n    }\n  }, {\n    \"name\" : \"Eldridge Nikolaus III\",\n    \"id\" : \"1475\",\n    \"type\" : \"uzyjacivsxx7i4jyg5jd70ph\",\n    \"properties\" : {\n      \"createdAt\" : \"2023-03-15T20:01:44.851Z\",\n      \"listenerCount\" : 15,\n      \"isDynamic\" : true,\n      \"relayType\" : \"NetTcp\",\n      \"requiresClientAuthorization\" : true,\n      \"userMetadata\" : \"dfba9y93jl143luz17f6tpa8ku7vo55ou472e236v5noaim8hr802wyemb1y89xofxpg2niv0bajolzg0h5yzcpb4u1htc991e7f6pqu72856uvkm644\",\n      \"requiresTransportSecurity\" : false,\n      \"updatedAt\" : \"2024-01-22T04:10:58.851Z\"\n    }\n  } ],\n  \"nextLink\" : \"jiue\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a5e6aac3-d026-44af-843a-ed2de107f81e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:00.852215Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_ListByNamespace",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if value contains incomplete list of WCF relays."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the list WCF relay operation.",
                "items" : {
                  "$ref" : "#/components/schemas/WcfRelay"
                }
              }
            },
            "description" : "The response of the list WCF relay operation."
          }
        }
      }
    }
  }, {
    "id" : "320d0ccb-c387-415f-a81d-ee3e6ebdfa73",
    "name" : "Regenerates the primary or secondary connection strings to the hybrid connection...",
    "request" : {
      "urlPath" : "/subscriptions/yb32/resourceGroups/Mr.+Julius+Bednar/providers/Microsoft.Relay/namespaces/Gregory+Berge/hybridConnections/Dana+Von/authorizationRules/Perry+Tromp+II/regenerateKeys",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "et0qqb281oc52a0c1x0vbfyz"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"secondaryKey\" : \"jlmqpv0bkdat2d6up6pe1opq1bc6e0rsl6mvms02x4jahxmicqvxzywrad19g1hg5jjx9wku7zelqlrdwgwywi17m2k4ihazhetze1sahegpvixe131iiox6bwbq2sbilpu11h0obx1y2s1gzjut333j312o21ytks89y9w3itp5\",\n  \"keyName\" : \"Dotty Orn\",\n  \"primaryConnectionString\" : \"r3er6w9mg8dc8mhx2pvcvotfy8glt7z5gmh03e82fzumyhq400tlnrfbv5went7685qyrrturraed\",\n  \"secondaryConnectionString\" : \"ch2fa00x8gi436xgzvfvrm3w7uljlm4nu0h42dra6jk7iyffygum7gkdtf5232big1a37w27dbo2k87osi2rwasu2972zct8lsdyf6f3hb4hqm103vd5542m27tdozzgb0igyqgv6ui\",\n  \"primaryKey\" : \"4vlvpx7sdz73jz4j616vnovb5q1zlmba3n29dsch3qwchrrkiljeu92qqqgcnozbxxsqbyinellsi4h1ky299qaxzgdn3k158u988j4kp342y4jxnk\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "320d0ccb-c387-415f-a81d-ee3e6ebdfa73",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:00.851096Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_RegenerateKeys",
          "schema" : {
            "type" : "object",
            "properties" : {
              "keyName" : {
                "type" : "string",
                "description" : "A string that describes the authorization rule."
              },
              "primaryConnectionString" : {
                "type" : "string",
                "description" : "Primary connection string of the created namespace authorization rule."
              },
              "primaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit primary key for signing and validating the SAS token."
              },
              "secondaryConnectionString" : {
                "type" : "string",
                "description" : "Secondary connection string of the created namespace authorization rule."
              },
              "secondaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit secondary key for signing and validating the SAS token."
              }
            },
            "description" : "Namespace/Relay Connection String"
          }
        }
      }
    }
  }, {
    "id" : "b3328f57-47f8-4633-8e64-8ec08ae997e3",
    "name" : "Primary and secondary connection strings to the hybrid connection.",
    "request" : {
      "urlPath" : "/subscriptions/zaqx/resourceGroups/Gabrielle+Waters/providers/Microsoft.Relay/namespaces/Mr.+Deshawn+Deckow/hybridConnections/Miss+Alonzo+Powlowski/authorizationRules/Hunter+Mraz/listKeys",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "yh11mvvmqa0fxarxpro10qa1r13zwsmxp1ewgl2exthcxnkm9kzmnfhoxtoz"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"secondaryKey\" : \"jp6c6wbjd7vc28ib31qn19evp9p3fbaq0lkkkomduxe5glvzuie1ummpufoif5eruvmd9i84ccabyhchkh0dgi7vmt24oftzp1tdldl47y\",\n  \"keyName\" : \"Mr. Sam Metz\",\n  \"primaryConnectionString\" : \"1027y9bb6y0rg482orkl6v2lb4t58o19pm7qg0siby7wwaklbhe6a0hq6kfg24milocysg5uq3x3lqmmpp9m3kfrdo20ek2tyrawrck56mephzafu0xameo87ubl3sjhbqkbx2wdj\",\n  \"secondaryConnectionString\" : \"p31f56vdvx4px3bts30pu7elrnjdu3rr8tvsr2niu30ifwwvss73exqyerk4iot74wgrr\",\n  \"primaryKey\" : \"9j062eynvyx6d1a5mrcsqgourfefjirmctyw4tcgyxd2hbgb89ru8whhrbpwudkv6oq7j6mu\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b3328f57-47f8-4633-8e64-8ec08ae997e3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:00.850563Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_ListKeys",
          "schema" : {
            "type" : "object",
            "properties" : {
              "keyName" : {
                "type" : "string",
                "description" : "A string that describes the authorization rule."
              },
              "primaryConnectionString" : {
                "type" : "string",
                "description" : "Primary connection string of the created namespace authorization rule."
              },
              "primaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit primary key for signing and validating the SAS token."
              },
              "secondaryConnectionString" : {
                "type" : "string",
                "description" : "Secondary connection string of the created namespace authorization rule."
              },
              "secondaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit secondary key for signing and validating the SAS token."
              }
            },
            "description" : "Namespace/Relay Connection String"
          }
        }
      }
    }
  }, {
    "id" : "e3b5bd20-7ae8-4950-a25c-79ec4f7df8be",
    "name" : "Deletes a hybrid connection authorization rule. - 204",
    "request" : {
      "urlPath" : "/subscriptions/21ry/resourceGroups/Keshia+Larson/providers/Microsoft.Relay/namespaces/Jenell+Durgan/hybridConnections/Ms.+Riva+Dach/authorizationRules/Dr.+Lorriane+Champlin",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "w1figd34967vh7bhlkdzjumz8as"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "e3b5bd20-7ae8-4950-a25c-79ec4f7df8be",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:00.849955Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_DeleteAuthorizationRule"
        }
      }
    }
  }, {
    "id" : "d4a189f1-3ed7-4b68-b7d9-53648c4abb0c",
    "name" : "Deletes a hybrid connection authorization rule. - 200",
    "request" : {
      "urlPath" : "/subscriptions/54xk/resourceGroups/Kandis+Schinner/providers/Microsoft.Relay/namespaces/Telma+Rutherford/hybridConnections/Matthew+Goldner/authorizationRules/Miss+Precious+Armstrong",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "qsdvvvzzehwvg9u24cfgn9iwlwq4ymezdar3wyfixyrmy2oudva1ibl2t29db6xcxn0ux0l7e2ymvms7grik2yvyc25eic0mqr4apxxf125sdboxno3lza54orwh4gdj7tkype2da"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "d4a189f1-3ed7-4b68-b7d9-53648c4abb0c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:00.849565Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_DeleteAuthorizationRule"
        }
      }
    }
  }, {
    "id" : "6c9257b7-985b-44b7-8a24-dcb3e14f38d5",
    "name" : "Creates or updates an authorization rule for a hybrid connection.",
    "request" : {
      "urlPath" : "/subscriptions/ztew/resourceGroups/Carisa+Schmidt/providers/Microsoft.Relay/namespaces/Prudence+Jakubowski/hybridConnections/Tandra+Satterfield/authorizationRules/Tuan+Cummerata",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "nqnhdn7k"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Don Bednar\",\n  \"id\" : \"sn61\",\n  \"type\" : \"ndfuqntnhrfn7vu5vm21eqdj2egh\",\n  \"properties\" : {\n    \"rights\" : [ \"Listen\", \"Listen\", \"Listen\", \"Manage\" ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6c9257b7-985b-44b7-8a24-dcb3e14f38d5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:00.849183Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_CreateOrUpdateAuthorizationRule",
          "schema" : {
            "properties" : {
              "properties" : {
                "required" : [ "rights" ],
                "type" : "object",
                "properties" : {
                  "rights" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    "description" : "The rights associated with the rule.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "Manage", "Send", "Listen" ]
                    }
                  }
                },
                "description" : "Authorization rule properties."
              }
            },
            "description" : "Description of a namespace authorization rule.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "0dd9de31-6622-47c3-a1f9-b38c2d8c917f",
    "name" : "Hybrid connection authorization rule for a hybrid connection by name.",
    "request" : {
      "urlPath" : "/subscriptions/35nj/resourceGroups/Leslee+Langosh/providers/Microsoft.Relay/namespaces/Mr.+Salvador+Swaniawski/hybridConnections/Carmina+Terry/authorizationRules/Lorinda+Fadel+I",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "2bvxrd9m07wavr1qjnl4wruikybsi3pzuaoptonxjzdenkltwktsz6r68zduiczfx5jmzbd2oct6jj6a8310j0bans0g75xz2xp9v04tb29k3kqah0mf09rpmohan240i8e96i5evxs0fici633dukad0c4qgfmnn8x3w8ziwifznydkwc5wd2n5xfkp"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Garry Weimann\",\n  \"id\" : \"vo3w\",\n  \"type\" : \"yhmzeprgz29wtipb5r19j9sw7msllfxvkenvuxt98efloqvfha29m7pm3qf7okx23cpnwxahhk09wzcfxxa2omy1t6vnkn7rswdbg5ovcwbnql3yob55ckrrf7rbeoppndda7xcsiv55ls\",\n  \"properties\" : {\n    \"rights\" : [ \"Send\" ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0dd9de31-6622-47c3-a1f9-b38c2d8c917f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:00.848512Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_GetAuthorizationRule",
          "schema" : {
            "properties" : {
              "properties" : {
                "required" : [ "rights" ],
                "type" : "object",
                "properties" : {
                  "rights" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    "description" : "The rights associated with the rule.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "Manage", "Send", "Listen" ]
                    }
                  }
                },
                "description" : "Authorization rule properties."
              }
            },
            "description" : "Description of a namespace authorization rule.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "89b15da8-74ab-41ff-affe-5c15b4f18f4b",
    "name" : "Authorization rules for a hybrid connection.",
    "request" : {
      "urlPath" : "/subscriptions/60e1/resourceGroups/Dr.+Julio+Ankunding/providers/Microsoft.Relay/namespaces/Evangelina+Champlin/hybridConnections/Buck+Monahan+MD/authorizationRules",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "vhjbog9ys0dbk3w66dl4o17520jnt3xmiryyitgbgdiss6a27vxx1ujlzmw7rszy5ady0vqcpgp7chxgq0w8cqfc"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Randell Roberts\",\n    \"id\" : \"6wi8\",\n    \"type\" : \"c02awa97kakmio8r2jwlzm72eew1zh9g5mfvs9fd3au2kuz4xnp08uzkz2xa3juiq4s9p6l0777xo0q1tbf6l11rz8g3vp1bbsp1etzaogh39kr3sh2dsccxe85ymskwolgj0dt8itjnrnwr5lzmmbtlg7tll81\",\n    \"properties\" : {\n      \"rights\" : [ \"Manage\" ]\n    }\n  }, {\n    \"name\" : \"Kelley Boyer\",\n    \"id\" : \"7t75\",\n    \"type\" : \"fsjdzjgq38zpjc2et\",\n    \"properties\" : {\n      \"rights\" : [ \"Listen\", \"Listen\", \"Listen\", \"Manage\", \"Send\", \"Listen\", \"Manage\" ]\n    }\n  }, {\n    \"name\" : \"Margery Hagenes\",\n    \"id\" : \"k2ct\",\n    \"type\" : \"7hlj7rhxc3kbtn3gqbrmhqlzrue4kp7jdifmscnj9ewy7nog\",\n    \"properties\" : {\n      \"rights\" : [ \"Listen\", \"Manage\", \"Send\", \"Manage\", \"Send\" ]\n    }\n  }, {\n    \"name\" : \"Freddy Windler\",\n    \"id\" : \"v8o4\",\n    \"type\" : \"8829rzao76gca6fvf2wnj31kl3y799wzz37h6eyt47dx1ruiw006zkav2c13kpidi3vc1mg03ia95g8g8fe1m13fs96477917o36pstesv0t3vxbn815jtkkifufw1pfqea9gsvz82mohxhl28mmla1nlt47wsnree24ze03z0pigmh8oc872222\",\n    \"properties\" : {\n      \"rights\" : [ \"Listen\", \"Listen\", \"Listen\", \"Listen\" ]\n    }\n  }, {\n    \"name\" : \"Dong Mitchell\",\n    \"id\" : \"l16d\",\n    \"type\" : \"rbb1v06eqe2p8jqno1tjrmzu8l3kf1z1lpaohuubl\",\n    \"properties\" : {\n      \"rights\" : [ \"Manage\", \"Listen\", \"Send\", \"Send\", \"Listen\", \"Listen\", \"Manage\", \"Manage\" ]\n    }\n  }, {\n    \"name\" : \"Gordon Monahan\",\n    \"id\" : \"d5ee\",\n    \"type\" : \"a3wb68593zklak3zpg782balasi9noihrkig0dcf0\",\n    \"properties\" : {\n      \"rights\" : [ \"Send\", \"Manage\" ]\n    }\n  }, {\n    \"name\" : \"Phoebe Conroy\",\n    \"id\" : \"q2m1\",\n    \"type\" : \"u3lutk1r0kqcqw78jr9a5wce0udy87p8ffr9uqn04mjpe80pvguykwbzpr93acn4o7poc6fzykxb0rgt60zlat1y4v6rke5e93l4ehkmgzt7vyeq2yeqljq2urjjp3cmtbtwwnj\",\n    \"properties\" : {\n      \"rights\" : [ \"Send\", \"Send\", \"Manage\", \"Manage\", \"Manage\", \"Manage\" ]\n    }\n  } ],\n  \"nextLink\" : \"39qqvjzx1yo1za6ar3neci0kk1wjrw3fa\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "89b15da8-74ab-41ff-affe-5c15b4f18f4b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:00.847798Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_ListAuthorizationRules",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if value contains incomplete list of authorization rules."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the list authorization rules operation.",
                "items" : {
                  "$ref" : "#/components/schemas/AuthorizationRule"
                }
              }
            },
            "description" : "The response from the list namespace operation."
          }
        }
      }
    }
  }, {
    "id" : "820bff2d-97c7-488d-b34e-df7671985a49",
    "name" : "Deletes a hybrid connection. - 204",
    "request" : {
      "urlPath" : "/subscriptions/i104/resourceGroups/Clarence+Williamson/providers/Microsoft.Relay/namespaces/Randell+Bashirian+Sr./hybridConnections/Chung+Hane",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "umdp7ab8v1jnembfw5coo6osng4gymahylkxmzx9sstt345w15hmc7ubxh0lkes78ioukwckp9ijqzlgywuaohfrgvd"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "820bff2d-97c7-488d-b34e-df7671985a49",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:00.845575Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_Delete"
        }
      }
    }
  }, {
    "id" : "f323bb77-d7f9-4e17-80fc-fb390b40180c",
    "name" : "Deletes a hybrid connection. - 200",
    "request" : {
      "urlPath" : "/subscriptions/xsj1/resourceGroups/Mrs.+Geoffrey+Hagenes/providers/Microsoft.Relay/namespaces/Delbert+Hirthe/hybridConnections/Mr.+Billie+Cummerata",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "pue8wrce1gae2jevv7js7glbcxdmay2es8rn8p8i0mfrtbjx3p"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "f323bb77-d7f9-4e17-80fc-fb390b40180c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:00.84526Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_Delete"
        }
      }
    }
  }, {
    "id" : "a716f7bd-8bac-4eed-b46a-877f36333e01",
    "name" : "Creates or updates a service hybrid connection. This operation is idempotent.",
    "request" : {
      "urlPath" : "/subscriptions/86lu/resourceGroups/Savannah+Mitchell+IV/providers/Microsoft.Relay/namespaces/Travis+Bins/hybridConnections/Mrs.+Morton+Batz",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "127daa0r6fg2rp57tc2epf843hwzkq1oecxkyzo3smn99ikuwynab4eukjvmd02k7fu6owtww3fxb2lkp2eemmb75497jon8ma0mcs6vzah0arr8tlsg00u4m876li45li2px24afubjkjfuhqvptoxjfs3u0iphiukrw80vdfbt9k5yzaxw20eej0ofb7h6zi770go"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Laurence Hane\",\n  \"id\" : \"0jro\",\n  \"type\" : \"77mdz8ywjsqyyrzlerycizwssh5skf276bbrcf60k4ecumfe5l3x8ouu777qo5wmd8hm4bgt3lsztc79myqlbpaqe6lvpj81593gidx2a9fflcgxdys4e1uir0vw3m900kd7olt1zr31w6gnmxk4e1b4gmf349de8k4znm14l\",\n  \"properties\" : {\n    \"createdAt\" : \"2023-09-17T21:55:07.844Z\",\n    \"listenerCount\" : 7,\n    \"requiresClientAuthorization\" : true,\n    \"userMetadata\" : \"x98kt7ghxovl44r6jvod6s4rl8hkzzv2m1hvrp4ktm3yli3tg9nm0o8axf2bdw44gymxeux0f6su881e0yg9xc\",\n    \"updatedAt\" : \"2023-07-31T03:10:50.844Z\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a716f7bd-8bac-4eed-b46a-877f36333e01",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:00.844776Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_CreateOrUpdate",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "createdAt" : {
                    "type" : "string",
                    "description" : "The time the hybrid connection was created.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "listenerCount" : {
                    "maximum" : 25,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "The number of listeners for this hybrid connection. Note that min : 1 and max:25 are supported.",
                    "format" : "int32",
                    "readOnly" : true
                  },
                  "requiresClientAuthorization" : {
                    "type" : "boolean",
                    "description" : "Returns true if client authorization is needed for this hybrid connection; otherwise, false."
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "The time the namespace was updated.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "userMetadata" : {
                    "type" : "string",
                    "description" : "The usermetadata is a placeholder to store user-defined string data for the hybrid connection endpoint. For example, it can be used to store descriptive data, such as a list of teams and their contact information. Also, user-defined configuration settings can be stored."
                  }
                },
                "description" : "Properties of the HybridConnection."
              }
            },
            "description" : "Description of hybrid connection resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "8da33202-470b-4c27-a1fa-98fcb7ee892d",
    "name" : "Returns the description for the specified hybrid connection.",
    "request" : {
      "urlPath" : "/subscriptions/bm4p/resourceGroups/Kenny+Stamm+DDS/providers/Microsoft.Relay/namespaces/Shawnta+Donnelly+Sr./hybridConnections/Laverne+Ferry",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "f6os3yk9w71as8kp023w3lpvygfy4kj55mvizquxojkwvrzel5rz8zaxkb0866npz3f19rbuhhcnphmtwiwvxk02de5e2txskakcapjovh1wvy9qafg6rduyh9orbsmjq1kget1ric0ro1zpt2v3xhah4r"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Leandra Kuhic\",\n  \"id\" : \"v2u7\",\n  \"type\" : \"qzp1ti97vgl75v7qsc4mxrx7g66cd5lefrr9ek3frvcp0zsmm3z6o6ii2huy681fnpo3r9wmcve8zf9tice81ncty8gx1bg9fnrw1usutq8uwczufs3y8pkf5nnn876fieqhqirj7f6kaa1elogycxs5ruofeu1a5b707yi2x1vj9nz5ayq3n2u6j\",\n  \"properties\" : {\n    \"createdAt\" : \"2022-11-07T07:06:47.843Z\",\n    \"listenerCount\" : 19,\n    \"requiresClientAuthorization\" : true,\n    \"userMetadata\" : \"dhg149x7h4e4doefs0co6dcehgnuaojfn261bn8ui5a0paqy6iqj9ggp15ndaahzhw0yj98kgwqd6qc1mx1j2e47ug9k6smt88qzgjw1jr8nmambgzm1vrxf5gqyqd3d3e3ohr8swlxmcdmhpylun15j8si83djebpk14m0231wibsrqp89xi3zrb9pojdelrjdaoy1\",\n    \"updatedAt\" : \"2022-11-20T03:00:51.843Z\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8da33202-470b-4c27-a1fa-98fcb7ee892d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:00.84408Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_Get",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "createdAt" : {
                    "type" : "string",
                    "description" : "The time the hybrid connection was created.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "listenerCount" : {
                    "maximum" : 25,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "The number of listeners for this hybrid connection. Note that min : 1 and max:25 are supported.",
                    "format" : "int32",
                    "readOnly" : true
                  },
                  "requiresClientAuthorization" : {
                    "type" : "boolean",
                    "description" : "Returns true if client authorization is needed for this hybrid connection; otherwise, false."
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "The time the namespace was updated.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "userMetadata" : {
                    "type" : "string",
                    "description" : "The usermetadata is a placeholder to store user-defined string data for the hybrid connection endpoint. For example, it can be used to store descriptive data, such as a list of teams and their contact information. Also, user-defined configuration settings can be stored."
                  }
                },
                "description" : "Properties of the HybridConnection."
              }
            },
            "description" : "Description of hybrid connection resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "59e31dc5-09f6-4e3a-8c78-4cec48acc127",
    "name" : "Lists the hybrid connection within the namespace.",
    "request" : {
      "urlPath" : "/subscriptions/e1b5/resourceGroups/Dr.+Moon+Runolfsdottir/providers/Microsoft.Relay/namespaces/Benny+Doyle/hybridConnections",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "76shj7nehrs9spzb5fe5j861bwzwiamsqm5hm422e1xraas1neexktb547u5t51818fglxqbn6sz483oj0b22okwnm93zo9zv4eg8mvt0y4zfn8kkb47u8z90u4ixts682966wdmy42ergny7givof9ovf65ciokkpgegh9kswh3gag622"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Annamae Marks\",\n    \"id\" : \"syef\",\n    \"type\" : \"gy1nugyx8tmpq22u6j34mi7u0jwmjjg5uv1z1954\",\n    \"properties\" : {\n      \"createdAt\" : \"2023-12-28T18:32:34.841Z\",\n      \"listenerCount\" : 8,\n      \"requiresClientAuthorization\" : true,\n      \"userMetadata\" : \"hla3ioir1uymypibzqjlp5qmerer2i5rtgqvima4eocdfmh415wiczvz8esw5ogl5kbf9pd3dk3twt9bljga3xlzos6hlmxa6t3sa2imwu4vh7wsb8f\",\n      \"updatedAt\" : \"2023-06-27T10:06:27.841Z\"\n    }\n  }, {\n    \"name\" : \"Nevada Hauck\",\n    \"id\" : \"0o22\",\n    \"type\" : \"f8ddsnq028sdf0e0ixielhyakaeojyrfoyorfacw7uu6p8pitjcpmjj4bek88z8hamr7r975i2heq1ihokowmmy9byqa13m0amirsm7cbjijyxgbdonpdujab9rew0r6ai5tnyofa\",\n    \"properties\" : {\n      \"createdAt\" : \"2023-09-29T19:46:24.841Z\",\n      \"listenerCount\" : 13,\n      \"requiresClientAuthorization\" : false,\n      \"userMetadata\" : \"j6ht6f85eivlo4v4q05vaihtq7o901ynmjheeh\",\n      \"updatedAt\" : \"2022-04-23T01:12:09.841Z\"\n    }\n  }, {\n    \"name\" : \"Valentin Ankunding\",\n    \"id\" : \"964l\",\n    \"type\" : \"4tu97gdbc26gf6cwua3r921f38t6zxzytsunh9zlzsea2jafnmvbx2jpuii88sih2zjd41ygbv9um4by9s6dzbpojoge9ou9ze94v0bjj36zgdztph45shtg38xv92rv81wbr\",\n    \"properties\" : {\n      \"createdAt\" : \"2024-01-03T21:03:29.842Z\",\n      \"listenerCount\" : 0,\n      \"requiresClientAuthorization\" : false,\n      \"userMetadata\" : \"xixot45ca126fxjsd77pm4k57edudrodj3f99fyck00zh8ntxklb73mb9rtnd2\",\n      \"updatedAt\" : \"2022-06-12T23:21:35.842Z\"\n    }\n  }, {\n    \"name\" : \"Lou McCullough\",\n    \"id\" : \"23d2\",\n    \"type\" : \"tz1206pc81lrm5ak4yp0j4wgg87nv3zuk3ack5lnsqkz5hay3v1e\",\n    \"properties\" : {\n      \"createdAt\" : \"2023-06-08T04:23:25.842Z\",\n      \"listenerCount\" : 8,\n      \"requiresClientAuthorization\" : false,\n      \"userMetadata\" : \"ykpz0sw9zime51dp7fmt77w1im7kjq0za8tcb4bj3rk8o5k4ud31jakew7y07rg3cgcs4bpgc95iisq7405r6tpjrzq2bumlz0psyn1n4gixzaghxdnvpsb9y6wj1t9gbvdc621onzeaagaem4q8royjlfg\",\n      \"updatedAt\" : \"2022-06-06T21:21:36.842Z\"\n    }\n  }, {\n    \"name\" : \"Kristopher Reynolds IV\",\n    \"id\" : \"jtf2\",\n    \"type\" : \"kuq1bzemvz1715pi6voqtt4senrk8nb42panbcwg0dqmqkwslka23k57q0saql6ffw0e0r8gk6ezijd9og9dscc8w18rk\",\n    \"properties\" : {\n      \"createdAt\" : \"2022-07-23T16:43:13.842Z\",\n      \"listenerCount\" : 10,\n      \"requiresClientAuthorization\" : false,\n      \"userMetadata\" : \"n8jroxslq9ce0ftmee8rnozexqdzsgn4eqs8dy3e411mfaq6aixp52slxefbpj0djpg82749mbi6ydsh7s88xifkna394k0vh4as33lhdbjm7pzj26rpc872k3pdbke\",\n      \"updatedAt\" : \"2024-01-11T12:55:51.842Z\"\n    }\n  }, {\n    \"name\" : \"Gerardo Collins\",\n    \"id\" : \"7hfj\",\n    \"type\" : \"chntxyu57arbyx0mrpu9znf6lrpya4djuc1jokwpu5gybt2eag6kvpyoe04ps2p8ylxgyvh25q39vuk4omup49t6bloujz1xlbp1ul32yxthmfw2v8hjsezp63t542awpizlsbb0bfx9dinye6v\",\n    \"properties\" : {\n      \"createdAt\" : \"2022-12-18T04:25:01.842Z\",\n      \"listenerCount\" : 14,\n      \"requiresClientAuthorization\" : true,\n      \"userMetadata\" : \"q1x41ylp3ccf4ohjog7q786a9we8a9s9sigqpa9rldlpdbhxdwpd5800iu6dlb78pqw7yw66qo8mfbbzsbkwxrdwm1hbfbpr\",\n      \"updatedAt\" : \"2022-12-12T16:07:16.842Z\"\n    }\n  } ],\n  \"nextLink\" : \"58sofzkq05kj3r4itt0r2puvsemhts2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "59e31dc5-09f6-4e3a-8c78-4cec48acc127",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:00.843202Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_ListByNamespace",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if value contains incomplete list hybrid connection operation."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the list hybrid connections.",
                "items" : {
                  "$ref" : "#/components/schemas/HybridConnection"
                }
              }
            },
            "description" : "The response of the list hybrid connection operation."
          }
        }
      }
    }
  }, {
    "id" : "c24a94f7-bf4e-402b-85e3-9cd93c8737c6",
    "name" : "Regenerates the primary or secondary connection strings to the namespace.",
    "request" : {
      "urlPath" : "/subscriptions/o071/resourceGroups/Ming+Jaskolski/providers/Microsoft.Relay/namespaces/Meghann+Shanahan/authorizationRules/Robin+Lynch/regenerateKeys",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "yr576q58tae3k5r"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"secondaryKey\" : \"u3v6yf7g\",\n  \"keyName\" : \"Leann Aufderhar\",\n  \"primaryConnectionString\" : \"y5unxehrax4aqpu81so3u0a1zaixh1119xjw9yqned06y5y8fidzekqrbzfric97bzxgvrv13wp6683o2qwhgv6ixa2v63pholaotyalz083ypemiv9zbyrg0k0tbss9bucb62o2ucjoytv8\",\n  \"secondaryConnectionString\" : \"x2vvmfswfqki62yqv70znmkkqeop0cjasvog0o454s631kiw0lgpwyh11bk1qcxfa3akxbc8ytw4lpvu0rxxz51mi2axckmm7psc6zhwr70ak52ma38mmskcc3kq7dv1rfq3xxzjktool02x\",\n  \"primaryKey\" : \"4n8dor7huk65qjsbosq3x0kxbnlf2s5ggmsy7sq56l96cbzn9a0sumhntufxojnqrpg8lc7bvbrvfes0zfdnv5er68art4tyacu18mxpgf7q3akkbyd198mbpe0wuagcpot4348hu31n59zouf4lhoq8zuider0jv3dyubhghpg5gbws922b0ty20icp1dnt5ja1xi\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c24a94f7-bf4e-402b-85e3-9cd93c8737c6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:00.841622Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_RegenerateKeys",
          "schema" : {
            "type" : "object",
            "properties" : {
              "keyName" : {
                "type" : "string",
                "description" : "A string that describes the authorization rule."
              },
              "primaryConnectionString" : {
                "type" : "string",
                "description" : "Primary connection string of the created namespace authorization rule."
              },
              "primaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit primary key for signing and validating the SAS token."
              },
              "secondaryConnectionString" : {
                "type" : "string",
                "description" : "Secondary connection string of the created namespace authorization rule."
              },
              "secondaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit secondary key for signing and validating the SAS token."
              }
            },
            "description" : "Namespace/Relay Connection String"
          }
        }
      }
    }
  }, {
    "id" : "6918b88b-a1f9-4055-940d-f53ae5f344df",
    "name" : "Primary and secondary connection strings to the namespace.",
    "request" : {
      "urlPath" : "/subscriptions/l396/resourceGroups/Astrid+Hilll/providers/Microsoft.Relay/namespaces/Keva+Luettgen/authorizationRules/Chi+Pollich/listKeys",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "0nke70d9hcds4"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"secondaryKey\" : \"8sv1rr0yoqa9iz9neoqjq4v33x6y82kdagp0nb94vm2ej1fbuy9blmstnb1deysldl66jbmr5fdk4sq06uztb3m5g8djvenxeugxb9jmx62fzqfflxa\",\n  \"keyName\" : \"Jimmy Dietrich\",\n  \"primaryConnectionString\" : \"ov9x88mc7y98dp5g9kk3ce841imnvzc8590f2a0qgatow2wyc78oarhsl5vztb6fc9ui0l86pp453hrrpqcq5s2ac95fa7uo3o2214oqukusy6xtvyh4t8oph7dqxu8kh65yitmp7mgx7lonu6m4v2f5b2d5zd\",\n  \"secondaryConnectionString\" : \"18ocwqo9uaib0hnk0171fxdnpywk4xcru8kwjo9901x17xbenrcg7rkubkq9emodwirqxc3gf3fm5tp50davvu13j2x1epclmhnwgqxz6rhsvzwt7nnk015df2xuzx0cjeu0rfsxnyh685998sc9kgkp927dhynewx74favn8w9c\",\n  \"primaryKey\" : \"0oe8wi3bng03f3wm43g0kn4posaix4tzpnu2vz042\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6918b88b-a1f9-4055-940d-f53ae5f344df",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:00.841192Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_ListKeys",
          "schema" : {
            "type" : "object",
            "properties" : {
              "keyName" : {
                "type" : "string",
                "description" : "A string that describes the authorization rule."
              },
              "primaryConnectionString" : {
                "type" : "string",
                "description" : "Primary connection string of the created namespace authorization rule."
              },
              "primaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit primary key for signing and validating the SAS token."
              },
              "secondaryConnectionString" : {
                "type" : "string",
                "description" : "Secondary connection string of the created namespace authorization rule."
              },
              "secondaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit secondary key for signing and validating the SAS token."
              }
            },
            "description" : "Namespace/Relay Connection String"
          }
        }
      }
    }
  }, {
    "id" : "7fa62550-ddb2-459d-ad57-14dadd052e67",
    "name" : "Deletes a namespace authorization rule. - 204",
    "request" : {
      "urlPath" : "/subscriptions/q1do/resourceGroups/Wynell+Towne/providers/Microsoft.Relay/namespaces/Erline+Barrows/authorizationRules/Erica+Hayes",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "9yits8dej4v20bhoouy7yyaelmpso3jgh0kca0nosp473qft41tn6rhjmtwo2id3lf95drkaf3pyox8nemgah5t7w5kgbaatqvb7ihzc844wwxoynqvc4pt0xccc5q820l0bzchij3f4ppoxiiu6pfhb2ce98cf6j8206mu"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "7fa62550-ddb2-459d-ad57-14dadd052e67",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:00.840721Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_DeleteAuthorizationRule"
        }
      }
    }
  }, {
    "id" : "53fdca96-f6c7-423a-a8f3-53c8a4873751",
    "name" : "Deletes a namespace authorization rule. - 200",
    "request" : {
      "urlPath" : "/subscriptions/8946/resourceGroups/Sharda+Lemke/providers/Microsoft.Relay/namespaces/Frankie+Gorczany/authorizationRules/Crista+Bayer",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "f8mpadrasitvfr4mdiwc227pc2lmtgrjzxi0s93bwbc9v7yf41zncwbw0vral7igyazkas59pxhtsv7905w22dkmmb14fwy4sj6galh848uphyjdcoi25b5ulmc3oqgo0jkltxwzws1cl4zet8b6mpm55ogfuq64q46c83pvm03m2ailmm9uf"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "53fdca96-f6c7-423a-a8f3-53c8a4873751",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:00.840475Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_DeleteAuthorizationRule"
        }
      }
    }
  }, {
    "id" : "b9ddfba5-f162-43d1-9030-d405349cbf61",
    "name" : "Creates or updates an authorization rule for a namespace.",
    "request" : {
      "urlPath" : "/subscriptions/zjdt/resourceGroups/Hunter+Howe/providers/Microsoft.Relay/namespaces/Larhonda+Keebler/authorizationRules/Theron+Watsica+PhD",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "yfvnicr9gjar0pg6ruef333x0h0hi57gahhbj8xhmetun7jjvnte22y3e5pa7xghjxuyq82qydw8s7f53vdtigytijzr2l8aubmr8dnxh7fyps8yukedu5shu20uad2jjrpe3rn8bzvz1rwch8c1ngwomqvm7ozsimfgm9rsc46nob2xc132czt2g7csubel2es0eo"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Casandra Wintheiser\",\n  \"id\" : \"u380\",\n  \"type\" : \"za0ipgbqf8g8xg8zd1kps7sqnwosut6iwi7zp1uso7b60r\",\n  \"properties\" : {\n    \"rights\" : [ \"Send\", \"Manage\", \"Manage\", \"Manage\", \"Send\", \"Manage\", \"Manage\" ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b9ddfba5-f162-43d1-9030-d405349cbf61",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:00.840114Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_CreateOrUpdateAuthorizationRule",
          "schema" : {
            "properties" : {
              "properties" : {
                "required" : [ "rights" ],
                "type" : "object",
                "properties" : {
                  "rights" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    "description" : "The rights associated with the rule.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "Manage", "Send", "Listen" ]
                    }
                  }
                },
                "description" : "Authorization rule properties."
              }
            },
            "description" : "Description of a namespace authorization rule.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "e1a949ec-3d17-4d8e-808d-c32b3c5ff47b",
    "name" : "Authorization rule for a namespace by name.",
    "request" : {
      "urlPath" : "/subscriptions/gm0t/resourceGroups/Man+O%27Hara/providers/Microsoft.Relay/namespaces/Kerri+Kuhn+Jr./authorizationRules/Benjamin+Spencer",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "0xrws8en9p0cncicnduasvw9syewkya7jh1v9557r4xk845xdj94ewvhyp11xehy7unwk0lgi8qsmtu3fsvmrbhs4n3hbvw5v8x4xqyqwyyo41h48ffkwuhr21ctt3b5xe8m3oz98tq"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Jimmy Schowalter\",\n  \"id\" : \"8p16\",\n  \"type\" : \"apbv8y129hoiq6ag53il4syb\",\n  \"properties\" : {\n    \"rights\" : [ \"Listen\", \"Listen\", \"Listen\", \"Send\" ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e1a949ec-3d17-4d8e-808d-c32b3c5ff47b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:00.839531Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_GetAuthorizationRule",
          "schema" : {
            "properties" : {
              "properties" : {
                "required" : [ "rights" ],
                "type" : "object",
                "properties" : {
                  "rights" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    "description" : "The rights associated with the rule.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "Manage", "Send", "Listen" ]
                    }
                  }
                },
                "description" : "Authorization rule properties."
              }
            },
            "description" : "Description of a namespace authorization rule.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "b71f7f82-0886-43a3-996b-e2b97ab3d9d4",
    "name" : "Authorization rules for a namespace.",
    "request" : {
      "urlPath" : "/subscriptions/1y01/resourceGroups/Reinaldo+Spencer/providers/Microsoft.Relay/namespaces/Ms.+Kimberli+Steuber/authorizationRules",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "5pb6a4trim101n1w7mlddtgl8vgplebzy8ngwzoborai4scni"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Ms. Dominick Cartwright\",\n    \"id\" : \"msif\",\n    \"type\" : \"wyenvhq9ziikrezpyfl86prxlzvxr0d4h73n26orfv7t9et5bsob85a1emtblrokzbkugnqafzgar57n0kbjesb0d5hr4imxnh7gbljx13tq8x671sgr0ie18ic00sz9ll6rx782uxqtcj21p5lvjma9g8gzpaippzzdqm5renzgbqew5yw8mt8102yn78staf\",\n    \"properties\" : {\n      \"rights\" : [ \"Listen\", \"Send\", \"Listen\", \"Manage\", \"Listen\" ]\n    }\n  }, {\n    \"name\" : \"Marielle Gerlach\",\n    \"id\" : \"a0by\",\n    \"type\" : \"ki0xrpn8ozqhzbo48x7bgcu0vcakp9ao6m9prcy0j0qxa4oplfm8nwbt1nb1ez8a9bqk3miz8vvoqhraiwidkndebjariea75qjxr014kwdqvjyn794noqahhzjjkmd5\",\n    \"properties\" : {\n      \"rights\" : [ \"Send\", \"Manage\", \"Send\", \"Listen\", \"Send\", \"Manage\" ]\n    }\n  }, {\n    \"name\" : \"Hosea Lang\",\n    \"id\" : \"m181\",\n    \"type\" : \"wy7xgjpxewgxc2k8y0xmzv3zwui1vabi8w1b56n9dzjmoxt899ihhy\",\n    \"properties\" : {\n      \"rights\" : [ \"Send\", \"Manage\", \"Listen\", \"Send\", \"Send\" ]\n    }\n  }, {\n    \"name\" : \"Lupe Nikolaus\",\n    \"id\" : \"w701\",\n    \"type\" : \"zxb9ry9iyka6rqrjxxbshrrbgloh1nidz9kkhjrrreccfa3e\",\n    \"properties\" : {\n      \"rights\" : [ \"Manage\" ]\n    }\n  }, {\n    \"name\" : \"Tracy Parisian MD\",\n    \"id\" : \"1059\",\n    \"type\" : \"nizecvrt102vda4m47us3swuuxhaw8hjqfobr3sjw2p3hoxusqh3au1e4fsgf8dlcnq8scm2ndaxog8gtvo0th899borrgb4u2eeajnvjvidylfp4i3n0vxrcphwwu9zbo84ynpwjmomb6k\",\n    \"properties\" : {\n      \"rights\" : [ \"Listen\" ]\n    }\n  }, {\n    \"name\" : \"Alline Stracke\",\n    \"id\" : \"7301\",\n    \"type\" : \"fqj99ppcay8ncydjlojaofwp485mahwu4265be25hukqg54r00rb4\",\n    \"properties\" : {\n      \"rights\" : [ \"Send\", \"Manage\", \"Listen\", \"Manage\", \"Send\", \"Manage\", \"Listen\" ]\n    }\n  } ],\n  \"nextLink\" : \"hko0d9lr5ikn5jaalpp5qeil29sm8ns5ghsdbmhjuxq0adqdxxqdg2x6oc05y82efp9lpz42atmsnjfgczh2ntlk\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b71f7f82-0886-43a3-996b-e2b97ab3d9d4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:00.839026Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_ListAuthorizationRules",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if value contains incomplete list of authorization rules."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the list authorization rules operation.",
                "items" : {
                  "$ref" : "#/components/schemas/AuthorizationRule"
                }
              }
            },
            "description" : "The response from the list namespace operation."
          }
        }
      }
    }
  }, {
    "id" : "7772136a-4ab3-4f62-922f-5d08abf89477",
    "name" : "Creates or updates a namespace. Once created, this namespace's resource manifest...",
    "request" : {
      "urlPath" : "/subscriptions/9b30/resourceGroups/Dorie+Ankunding/providers/Microsoft.Relay/namespaces/Zulma+Kreiger",
      "method" : "PATCH",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "0jredscfgl40t77jzwokc347tjiukr4a6zpc4etmp4hklkzd6viv0780pi9i2vkub5hkikenv1zluk8"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"location\" : \"vztcj7aqckkyd3tfr7imk6tn0ujv62afjt24ipooai7uxadj503nrx90h39dojavan4lp3zxqsyciyffj8l5qstwx818wje3ulqgyq0bfwop6wjdm23mj9vlc8vjagrt2kq8aeq8uiv4u41j9a2awopyjsmn5c4ffedmyj5euww22l\",\n  \"sku\" : {\n    \"tier\" : \"Standard\",\n    \"name\" : \"Standard\"\n  },\n  \"properties\" : {\n    \"createdAt\" : \"2023-03-30T16:37:19.836Z\",\n    \"metricId\" : \"2m37\",\n    \"serviceBusEndpoint\" : \"4bvlabsjcglk92uz5esogdv82v2kdpggcbs4qvbsx3napu81gmpejrse3oi272pirt4ue7rkoqd02ybaowigxe8giqvttnbb4rb2v7gmz9qxmo82sfvn6jawmrh5b2hx4csch2yoxojhrlf7zed2y90kji1vszex5n30rd\",\n    \"provisioningState\" : \"Updating\",\n    \"updatedAt\" : \"2023-01-02T18:05:17.837Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7772136a-4ab3-4f62-922f-5d08abf89477",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:00.837537Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Update",
          "schema" : {
            "properties" : {
              "properties" : {
                "$ref" : "#/components/schemas/RelayNamespaceProperties"
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Description of a namespace resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "7298e7d7-7bcf-4162-b906-d80df5c6849c",
    "name" : "Creates or updates a namespace. Once created, this namespace's resource manifest...",
    "request" : {
      "urlPath" : "/subscriptions/dt9j/resourceGroups/Mrs.+Broderick+Cruickshank/providers/Microsoft.Relay/namespaces/Pamila+Rosenbaum",
      "method" : "PATCH",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "ldctm9w1wwl55q2jymsf3nfgk0d1lym2vnmgecb0eq75ijedutgf895iq221bj6uqbfq9gmk"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"location\" : \"w29cwy74uce8jtn3clu2\",\n  \"sku\" : {\n    \"tier\" : \"Standard\",\n    \"name\" : \"Standard\"\n  },\n  \"properties\" : {\n    \"createdAt\" : \"2023-02-23T00:47:53.836Z\",\n    \"metricId\" : \"5x2p\",\n    \"serviceBusEndpoint\" : \"obe2fotx7oq6wdrom743pbamv1pifufygxnvjh688s9oobcso3kxcc86vt77nf5a5jvf2v9b513ps5tyjc4j4pdd949ttqgypxp8ctijprbplucp2r4h9jrrtadwdmhtgjwsxsuoxui8lqvuh9ovbui36qhgr0bd58teta8xt9kraeish4nia0kyxuai\",\n    \"provisioningState\" : \"Succeeded\",\n    \"updatedAt\" : \"2023-12-17T05:22:26.836Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7298e7d7-7bcf-4162-b906-d80df5c6849c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:00.836893Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Update",
          "schema" : {
            "properties" : {
              "properties" : {
                "$ref" : "#/components/schemas/RelayNamespaceProperties"
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Description of a namespace resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "94e86018-c953-4e61-933e-50191cb49d58",
    "name" : "Deletes an existing namespace. This operation also removes all associated resour... - 204",
    "request" : {
      "urlPath" : "/subscriptions/ih6w/resourceGroups/Shonta+Boyle/providers/Microsoft.Relay/namespaces/Cyril+Hegmann",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "tzsg83tmz4u3uc2lsotkwrv43azsrvc12mot1lqugfmfdbd"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "94e86018-c953-4e61-933e-50191cb49d58",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:00.836417Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Delete"
        }
      }
    }
  }, {
    "id" : "462b394c-5500-42b3-bf6c-72c126f58c8c",
    "name" : "Deletes an existing namespace. This operation also removes all associated resour... - 202",
    "request" : {
      "urlPath" : "/subscriptions/d753/resourceGroups/Dr.+Aaron+Labadie/providers/Microsoft.Relay/namespaces/Mr.+Neil+Abbott",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "nc79dn19ehuv8kjuqgwe3dorawf5m72n5gsdumjwnyyo9pvdffd3a5wc90to7ttkumi8v3pbsumyo9rp511xgtp3s9uah17022wqebnz8ux8hmr5bt35"
        }
      }
    },
    "response" : {
      "status" : 202
    },
    "uuid" : "462b394c-5500-42b3-bf6c-72c126f58c8c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:00.836202Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Delete"
        }
      }
    }
  }, {
    "id" : "6ce0e417-f8f5-408c-a6ac-781cc733f432",
    "name" : "Deletes an existing namespace. This operation also removes all associated resour... - 200",
    "request" : {
      "urlPath" : "/subscriptions/6d5f/resourceGroups/Dorian+Donnelly/providers/Microsoft.Relay/namespaces/Romelia+Gleichner",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "dy4o80y6327aqsol1jkqmhspiqacqdvag9dwlz6yzj3vgvlx9rls128nj9mqsk1q6v265v7ab9ovmasrzn"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "6ce0e417-f8f5-408c-a6ac-781cc733f432",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:00.83598Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Delete"
        }
      }
    }
  }, {
    "id" : "b919d47a-b63b-46d1-9439-618b3c994dd9",
    "name" : "Create Azure Relay namespace.",
    "request" : {
      "urlPath" : "/subscriptions/0db4/resourceGroups/Alisa+King+I/providers/Microsoft.Relay/namespaces/Carolann+Block",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "8pp0f5vndbkkmcajbiykgn5arg7owjk0rf8edjpt6q8xtux5iyzn6r87dn7xcp5z6zy3kp3emnliq94ibj70nwt8qcyo7rssq1kh4fxpegetdehjf30o3tlaz9znvkbn70lr5qb3"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"location\" : \"r9vtljv8g43liqvk80y02ccdr5687q1o8e9vubl3bvdzwhkwyl0h9vai74v\",\n  \"sku\" : {\n    \"tier\" : \"Standard\",\n    \"name\" : \"Standard\"\n  },\n  \"properties\" : {\n    \"createdAt\" : \"2023-11-02T22:22:30.835Z\",\n    \"metricId\" : \"0zp0\",\n    \"serviceBusEndpoint\" : \"wli7aqxz50m7nbjlztb7ikun17eifxja97x6boyvrbvoa33qb6gmj9y53k2zpbgf247jx8jbxih5dz5wlpp9i1ldr7bcb674ylht76ckpdnsaej8ms0ogt5vzc3iol2jb12duq0k5d5tdjq1sm07h2z3p0dktmnesoy\",\n    \"provisioningState\" : \"Unknown\",\n    \"updatedAt\" : \"2022-07-12T10:20:50.835Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b919d47a-b63b-46d1-9439-618b3c994dd9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:00.835717Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_CreateOrUpdate",
          "schema" : {
            "properties" : {
              "properties" : {
                "$ref" : "#/components/schemas/RelayNamespaceProperties"
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Description of a namespace resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "1e8d188e-48cb-4094-80ee-3ddf7904e151",
    "name" : "Create Azure Relay namespace.",
    "request" : {
      "urlPath" : "/subscriptions/m4mc/resourceGroups/Mozelle+Grady/providers/Microsoft.Relay/namespaces/Darren+Jenkins",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "lvqh31hi4xc9whejlaxuo6ot5dsodqakd4zhrybgyxkk4gah4mksil22uqm4oeq8nk8rpwmyvkxmjyo7mfpepjntnl4k"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"location\" : \"q07t3gcsry7bfpuxpaedprdryrwshwnh3zh736rru689vo3zvw4o5yue4a1pqtdixd440q\",\n  \"sku\" : {\n    \"tier\" : \"Standard\",\n    \"name\" : \"Standard\"\n  },\n  \"properties\" : {\n    \"createdAt\" : \"2024-02-06T19:06:52.834Z\",\n    \"metricId\" : \"vla7\",\n    \"serviceBusEndpoint\" : \"5bts2fw7wtyx7ut6czzp145ldd1hmtij9di669cmtm7vkss7fgstavep3ts40wk20eksa63hhbedcm7di54yii4jjr0nqp1bhwiq3d9g1znom0a323uh2unc7ibzslswc9lfpravk6hwd1pvm1b5n7gui3mv2xooy950cszu7\",\n    \"provisioningState\" : \"Created\",\n    \"updatedAt\" : \"2022-08-19T11:13:34.834Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1e8d188e-48cb-4094-80ee-3ddf7904e151",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:00.83517Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_CreateOrUpdate",
          "schema" : {
            "properties" : {
              "properties" : {
                "$ref" : "#/components/schemas/RelayNamespaceProperties"
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Description of a namespace resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "f451e5e4-4ee2-49c6-b0da-8342aba85994",
    "name" : "Returns the description for the specified namespace.",
    "request" : {
      "urlPath" : "/subscriptions/4pfw/resourceGroups/Miss+Donya+Spencer/providers/Microsoft.Relay/namespaces/Melanie+Hansen",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "txmvujzbpubx10m15xbnfqye8xun9dxovxsg7k2hcaquty1n83imt204tbid28z1sc5oazsgjnwa5z33ck96juukrhzot5hpvrjpxl0feyk51sohs2k6jf1o7tw83zyxlqrp6mi7odbglskwgjyjc879g4umyuvlt8pr70ig9c119jzp"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"location\" : \"ev3dxxqe65xvyfaw6ez5u7u\",\n  \"sku\" : {\n    \"tier\" : \"Standard\",\n    \"name\" : \"Standard\"\n  },\n  \"properties\" : {\n    \"createdAt\" : \"2023-09-05T10:48:23.834Z\",\n    \"metricId\" : \"94l9\",\n    \"serviceBusEndpoint\" : \"qdprssbij0hw1f2g0lo5jgpdreaxazpsqiwewru8vzrb7br3aq0rtrbf206ybahpjxn4prxw9cdv3pd1r8ezzgoe46ci3s1phlubveh3k4ss1ocvmxni383ii2yp45difot66vktlsl2l1opci1imu5fruav5mzl\",\n    \"provisioningState\" : \"Failed\",\n    \"updatedAt\" : \"2023-12-02T18:59:44.834Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f451e5e4-4ee2-49c6-b0da-8342aba85994",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:00.834758Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Get",
          "schema" : {
            "properties" : {
              "properties" : {
                "$ref" : "#/components/schemas/RelayNamespaceProperties"
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Description of a namespace resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "6ae486a1-dbaa-409e-8b00-81afbba5a4f9",
    "name" : "Lists all the available namespaces within the ResourceGroup.",
    "request" : {
      "urlPath" : "/subscriptions/y094/resourceGroups/Christian+Kuphal/providers/Microsoft.Relay/namespaces",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "2e19a9sbsjqldoyjjich6wxto58yawd3en58k59l5w46z3krkl1q9x9ag346pnb4us0fqj9tkrqzhrq2jnn0a72a2ol5nl7td3"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"location\" : \"l3bu5xg1mpx6u490hy9brg4aci5pbnzyxftiejx96dq7p25nad0u2pmgxk4nucyhj229h9hp9prsd227qpwaehi8j25bugmjjnzjmk9nnf9g7nzdfgteys7wauc9oz6exiqjaj\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\"\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2022-12-11T19:37:43.833Z\",\n      \"metricId\" : \"93j1\",\n      \"serviceBusEndpoint\" : \"gpjfy6r9au8adaaawx2dl74ifu5j9790r1b6m1i9t99estxnxda5dws7eyl0sccjitg4ft0cljr5mx586z5wp1h0blsqe5azw3zbazyp4qw4iwawl0sk0ls2uh3elq3h4lvce63o4frdhcnkgo2wi4lcbw7e5wec3gnsc2wrfq5imw5s0j68o677afjwk54cur113c\",\n      \"provisioningState\" : \"Deleted\",\n      \"updatedAt\" : \"2022-04-03T08:24:34.833Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"tmirwfldp6w4x5j7usch29dla7hd1ptrprvj60farrylhzhvadeof1qpzlr947tvjm5v8kkjsvaqw9v0r30xnldk1su0javq007ij219g60sdjimspsof2c14hsiijv0zzydkfte4\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\"\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2022-08-14T04:07:50.833Z\",\n      \"metricId\" : \"hm74\",\n      \"serviceBusEndpoint\" : \"wrud424e2j82sifrmhm4v1x5928h9mz84h2l94o7gnjpf5207\",\n      \"provisioningState\" : \"Unknown\",\n      \"updatedAt\" : \"2023-01-22T18:15:18.833Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"bgqztppjs33ecyktwkxu4mu7igy8gefcd680y3oy355t\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\"\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2024-01-16T07:39:20.833Z\",\n      \"metricId\" : \"a1b5\",\n      \"serviceBusEndpoint\" : \"pwn0iccf7g3iexx83oax08dbzkb620nb0c3tw55xnd9sve0r7qumbuuy4dmjihq6t5p8yynnjsq1q38080fx9awakf66c43qbct\",\n      \"provisioningState\" : \"Created\",\n      \"updatedAt\" : \"2023-06-23T02:35:32.833Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"7fjx3m\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\"\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2022-10-18T11:04:16.833Z\",\n      \"metricId\" : \"a4dm\",\n      \"serviceBusEndpoint\" : \"t49grcyf0wkwomg8f8e5kw3rzygvzyavjutlg\",\n      \"provisioningState\" : \"Unknown\",\n      \"updatedAt\" : \"2024-01-13T20:21:46.833Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"70wz0coto6gjs04gzto5yqq70j6ymri7e4r9pl04j26vn2hn5prlpm7588emtgaaqx6ie4i2dkkbzj9nh80rlhwsl5873xb783dlj0nr5df303069ne1335shi0is0dhfr8bsrtv80bqeh7xklqbfyq1bbgy8bsqn8yj4riq5xfkwy09jmfilkkb0\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\"\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2022-08-29T02:58:48.833Z\",\n      \"metricId\" : \"b268\",\n      \"serviceBusEndpoint\" : \"wehwg5opkz6kolhpgeubclp1fkx5qfr2innvm73f5sqgfxwaqtr1g1yvrf20ayv1f9pg1a4ilflmhz\",\n      \"provisioningState\" : \"Updating\",\n      \"updatedAt\" : \"2023-04-12T08:49:40.834Z\"\n    },\n    \"tags\" : { }\n  } ],\n  \"nextLink\" : \"jig2zkw8g9wta27lghm9up14u9ga3tadlwh7ozffvvqfo0gjg5tditd0151lqq60rq7gaxp9rx8uajot8nxrokp26othutoq3\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6ae486a1-dbaa-409e-8b00-81afbba5a4f9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:00.834331Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_ListByResourceGroup",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if value contains incomplete list of namespaces."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the list namespace operation.",
                "items" : {
                  "$ref" : "#/components/schemas/RelayNamespace"
                }
              }
            },
            "description" : "The response from the list namespace operation."
          }
        }
      }
    }
  }, {
    "id" : "47d5e257-efd4-456e-941b-200992c13021",
    "name" : "Lists all the available namespaces within the subscription regardless of the res...",
    "request" : {
      "urlPath" : "/subscriptions/0t08/providers/Microsoft.Relay/namespaces",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "b8fd8n84d2lcv8cirm5bokxudybi9g4c0"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"location\" : \"k9gkmc1wcgmxmgdrxtwnegol9h5rgbe5i2vhj4d7apdl225gqc0ecj15p9o6j2hjcth7v0j4hpkbx9ckhwidm764vrhyfmdjlu0wcycnc915oobwhga40xghky6m9gbg9eyaw07h85ntdv5b758e3rihw61v4lumydhiygx\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\"\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2022-12-08T08:48:05.832Z\",\n      \"metricId\" : \"c832\",\n      \"serviceBusEndpoint\" : \"1v2t6y6onekuow9ff8zgfudl7mehp1crci217nxg7834hiygyyhyltonv32ldxr69w8mmgdywm9flhx7zs3mip5d5\",\n      \"provisioningState\" : \"Created\",\n      \"updatedAt\" : \"2023-03-22T07:08:12.832Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"b291t5oak88r51brz6v3293uisi669q04a219bwg09xpfcnf24q2gyw62uelf0fdqwrbqfyt49p1fhiv1sb\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\"\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2023-02-14T21:22:11.832Z\",\n      \"metricId\" : \"8z72\",\n      \"serviceBusEndpoint\" : \"gi5kaxvu5o383fzfez897ptx8xoxlgb8tvx6rropgjjl1h4s9y71hv3sh0v3qlm7rochcvck1nm5dumbyp8pqar5luguieo6o0zi9xckejacqhpb9zdct4pwg\",\n      \"provisioningState\" : \"Unknown\",\n      \"updatedAt\" : \"2023-10-10T20:12:18.832Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"lzmntz7umx13mk93fu8afq47cv6c7t5g7att8antusdtccthl5l7jgve2s7fgteiff4v5s7xh2btlkqgsdl6dykjq93ohmi7ij94qcxoj4y1ssmkfpffmq\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\"\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2023-03-12T05:46:56.832Z\",\n      \"metricId\" : \"5pov\",\n      \"serviceBusEndpoint\" : \"wht782qvljrkqp239qcoqlltcjma75p0a74p15wq7mdpdlbqrijgh20syr1jlqz64alouuszmjafelb4qxevtr64ficj6126qliz\",\n      \"provisioningState\" : \"Succeeded\",\n      \"updatedAt\" : \"2022-03-16T05:35:24.832Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"zqgc76ymcddkjz1q3uufodgcvtbabmzmul21ko3wef2qnsyticyznvpt3tgv7nvb4t9pfkcwc3tbpigetw9rq1nq4yipww02ljo7z8dveler5zasd3ywc2fow6gox\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\"\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2022-06-14T01:46:39.832Z\",\n      \"metricId\" : \"wd60\",\n      \"serviceBusEndpoint\" : \"kga3sk5kappxrlqe0en0lcza1mz02xnshii2jjgbv27yryeo7fv6ht1x3oqecsu0p4nzpsqv3cw6wzubuizgi3fb3e1t0ovc452be0p4zzn\",\n      \"provisioningState\" : \"Created\",\n      \"updatedAt\" : \"2024-02-21T23:03:38.832Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"s52mky07as7stkt54tvw0ooas34toki2euf0300hb9ohwtmw9ahg4bhpkm2uphximwsnxpzuncpjsmok12kftrbdhh3jgb3n4yrbmx22jhm8vnrly01x\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\"\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2023-03-04T12:15:54.832Z\",\n      \"metricId\" : \"w4ob\",\n      \"serviceBusEndpoint\" : \"6pfm1yk7tx6kaqy76lc7zyj6c0qs3nqjgxpoaq1pudq257qv45\",\n      \"provisioningState\" : \"Deleted\",\n      \"updatedAt\" : \"2022-12-21T23:34:43.832Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"e6o1m193ii264sjtpjfoi9jcwlhf0819zlro2gches8e9nx0pbx0aqy6k2id73j472p30p3xyt1x63rml74hn62ogkxqnivi46m345ml85rf7ujqk7wv4xko5z67xo2w78reu7kilgste1qrfjugpu\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\"\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2022-09-07T18:57:18.832Z\",\n      \"metricId\" : \"4687\",\n      \"serviceBusEndpoint\" : \"pi0qd9nruuyttcx0asx9fd99f5s4nz6v7nbyamrdxl2j3xvcnrywa\",\n      \"provisioningState\" : \"Updating\",\n      \"updatedAt\" : \"2023-01-23T10:27:02.833Z\"\n    },\n    \"tags\" : { }\n  } ],\n  \"nextLink\" : \"ymkzou6d0sqik1tkbvzwcsbdpj7zvzan3tzo4d6lcklromdu3vch7zbqovurfvzg33w72esqmqcb8iwtzc5vjbs7caxldstt1p60gi4zpotv1lrl84icw4tipp5c9mdu1nmfdkrpy326tc4j91f6y0as0u2bua6nolwsd4gc4j0rpmmbvpn8ttk4hewo6o\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "47d5e257-efd4-456e-941b-200992c13021",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:00.833263Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_List",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if value contains incomplete list of namespaces."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the list namespace operation.",
                "items" : {
                  "$ref" : "#/components/schemas/RelayNamespace"
                }
              }
            },
            "description" : "The response from the list namespace operation."
          }
        }
      }
    }
  }, {
    "id" : "33d9bc0c-89fb-4ed3-8e0d-4d8bb0b0facd",
    "name" : "Check the specified namespace name availability.",
    "request" : {
      "urlPath" : "/subscriptions/7605/providers/Microsoft.Relay/checkNameAvailability",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "0j79afiq69r"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"reason\" : \"None\",\n  \"nameAvailable\" : false,\n  \"message\" : \"Ullam atque et doloremque sed. Qui nesciunt soluta ab. Qui pariatur porro sit quia itaque. Ex magni fuga culpa animi quis.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "33d9bc0c-89fb-4ed3-8e0d-4d8bb0b0facd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:00.831969Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_CheckNameAvailability",
          "schema" : {
            "type" : "object",
            "properties" : {
              "message" : {
                "type" : "string",
                "description" : "The detailed info regarding the reason associated with the namespace.",
                "readOnly" : true
              },
              "nameAvailable" : {
                "type" : "boolean",
                "description" : "Value indicating namespace is available. Returns true if the namespace is available; otherwise, false."
              },
              "reason" : {
                "$ref" : "#/components/schemas/UnavailableReason"
              }
            },
            "description" : "Description of the check name availability request properties."
          }
        }
      }
    }
  }, {
    "id" : "8d699a8d-8454-41ea-8e3b-cca9ea78cc24",
    "name" : "Lists all available Relay REST API operations.",
    "request" : {
      "urlPath" : "/providers/Microsoft.Relay/operations",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "0e7rr4ngxhjcv4tab2d6pmhqbjskca4ldcklggkenigzyj0uwx77okmlgv"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"display\" : {\n      \"provider\" : \"62om37rxm7oiusbrfsk5o6nohs2u102y5nnpzu5ry50uyn\",\n      \"resource\" : \"ri0onmcs2nhqdld6p2djtoenouf4rxcuak87llka67nruh68o156v3xzp51od9cz21ljgyxkcfjf6dpavho4piugqij8wwcffp6w6w0i1qskhefo5ellkhnrzppxw90djog6mjkfgebkne3wik9uumv4pfe1pplirlzes4dce2km01hvfi091n3yn17y8vqeiejro2so\",\n      \"operation\" : \"5axeymi886aqfuhh6tcr891jvdwkpwpazrqhjfyc916ymfz9m7l8xs9vghfqujq6iwc98typ4opz6u8mpsujfin9jdvai7r1a1xklw2a6hn0r7ddgnvjvzvmqpoud2784bnr2of3v0cvxmpcet\"\n    },\n    \"name\" : \"Miss Suzy Wilderman\"\n  }, {\n    \"display\" : {\n      \"provider\" : \"qtl40f3p0ptjvhghqw760f\",\n      \"resource\" : \"x6yz4o533ri2t8fsucf1m7yse5iqz8wn4u65wdc2gq9tbmfzrbvbay3tfiznmn7meaww8lau61xis3nrjsp18un5v1r9\",\n      \"operation\" : \"q66clvh56y6huuj68zpldkvuou1jx50wfofxqgbmtnksxsf0fvwibfpgo3mla7phwcl3zbeq0i95gga6i4n6rekvnisj5azsrfnqs\"\n    },\n    \"name\" : \"Quincy Howell\"\n  }, {\n    \"display\" : {\n      \"provider\" : \"5ikmme13w4y2cy95e04pl8dzeiiff4vgtzm8fq926bnl9hofeuzr4empccl9z4kc6mz31boo25339y7h92m5267xjno\",\n      \"resource\" : \"ys4lts8ci9qfvb19wafrznyw267wtk9q5ljseeu3az2s3nio3ritq7addhi4am3gplwha4ljg3x3etd2d1rpnl5ibqz8lllq52gvorhavcoh197akmkm0qrj8jtt2bzqhobue22f8qyph3zm7t1h7tw1hsli1h5b6adr63ppy158sqdl768lyk9e\",\n      \"operation\" : \"rpjdamfsd62zsmve92llh7wr18f1p4p4rv3vpvicwt2mqt2u0fh210mmjlgmwn8pu0bxb1hzbxgy4fvwcdqdvtbdcs3lt1vu3cvq1x4nehyy6odxts6mehi8qimv5158wnzjuf\"\n    },\n    \"name\" : \"Daron Rice\"\n  }, {\n    \"display\" : {\n      \"provider\" : \"dc4n8utqr535iaz9bj1rrriuc184bchl9wib6bf8qz81bj6i19fo9g0t5w2g0ot1uqta8h3nagz8mbk2t9pupxr6xlwpe86muvefr5l8f5xg7th571ehsx1olvewv9w3f7wcfqt7q19nu1p64ly0xz0kfv1w89ropp8bj4rmum06mckhvi\",\n      \"resource\" : \"2yeurt0bxs31i53kcb96iy0rvwudmshx1t96stvvvcg5c0x706ulsyt9g94gj8b\",\n      \"operation\" : \"00b8gy030o50vq1r3h6ugw8fixhpyjkey1smu4m22n340swm0up6pa1mczktv0naj04kuw6k490d\"\n    },\n    \"name\" : \"Senaida Boyer V\"\n  }, {\n    \"display\" : {\n      \"provider\" : \"j4vujrrf47us89gxdbinwtitv8oic9kq7vxhozjich71zf4v2eawg5bb7e12p04gmf8gjoalqo885x8fhkx3d45gno9xb0dz6sv0ufhd5mc5j444r5h8abcjibkbyl0p2au373hppmceh2c8it\",\n      \"resource\" : \"sjyg1dpcfsycvfg065ur1rddveia13iq71ee1pkolzfnw4nh40cqwgxvkaqgtsfghqsvgj1wywz59hy4vkqy0gdnu430ryd5pf8iafxty167txodijpp2256yx1k750q40li8a7bfbfzq5d3eveswnugkxje9akuu50iobb22akn7w1zqysc757c30epe\",\n      \"operation\" : \"s7w0i906m44q9exdf6kb2ci0jp9rszs5x6ffeyxo185364syi15xqd5udf6e98q0kdole3y4gx6cz3t1rmjgkzcs6lwe1e5o36ka3gqtgp45mbp3m3yc0jqeeglp0vzpure2fopwc7xnijezaudmxswvoabau\"\n    },\n    \"name\" : \"Lucio Bergnaum\"\n  }, {\n    \"display\" : {\n      \"provider\" : \"71a3klg1nn7h6tur631yyyor5yh1pwd5aemmcp4f7gud1us4yao7\",\n      \"resource\" : \"mb2evg477knxnpnjoc1yeik4alht5eo21orqpiskxn0imvzngjrsfqgtlux0fmazxm3u31q950wojbs601tr25f80rai4ifcugsjtdn3g27adpf\",\n      \"operation\" : \"ail3gm6ugf0aw0rj2qojde8wr530rpgl\"\n    },\n    \"name\" : \"Rodolfo Haley Jr.\"\n  }, {\n    \"display\" : {\n      \"provider\" : \"qnom2tgx74jd41qqz1arpxy14960npty6jb10nt9ixnjtn0hbfx56coyeun2yxierd209kdzr9nia6de53pyo8m54\",\n      \"resource\" : \"d9i96nxx3wky4\",\n      \"operation\" : \"jkb0jz5c122w6whzf4vi6zt7xqre2rpgytdi17009jgfzhwkfgy3arlp5k6e6lleo9erpgzcz7l\"\n    },\n    \"name\" : \"Gearldine Dickens\"\n  } ],\n  \"nextLink\" : \"13npe76k0j13zwghb9uhlbe9qn5283uze9oc9tda0a4g5l19g7xlxc2hrcik8erwp0nuub52cs0vaz9vuw8md09aa7b\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8d699a8d-8454-41ea-8e3b-cca9ea78cc24",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:00.831687Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Operations_List",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "URL to get the next set of operation list results if there are any.",
                "readOnly" : true
              },
              "value" : {
                "type" : "array",
                "description" : "List of Relay operations supported by resource provider.",
                "readOnly" : true,
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                }
              }
            },
            "description" : "Result of the request to list Relay operations. It contains a list of operations and a URL link to get the next set of results."
          }
        }
      }
    }
  } ]
}