{
  "mappings" : [ {
    "id" : "a7338a84-0d4d-4219-b7be-ff82dd2e983f",
    "name" : "Regenerates the primary or secondary connection strings to the WCF relay.",
    "request" : {
      "urlPath" : "/subscriptions/88au/resourceGroups/Abdul+Spencer/providers/Microsoft.Relay/namespaces/Gail+Heidenreich/wcfRelays/Moises+Sanford+III/authorizationRules/Trey+Emmerich/regenerateKeys",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "0209q3r6dqe4n3nzmwwaylgiahsmdun79fik03gzf2m7ssvr7e829iv6if9u"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"secondaryKey\" : \"ipasqeacmf4zj5ongwedl\",\n  \"keyName\" : \"Suzann Morissette II\",\n  \"primaryConnectionString\" : \"5e38p328vvsumlbetdmkb0a7hlypicbi8t3mjysi47arsea2jej7gpclvzm863wql9t8di78snmdjl7b8ivljlk1hgk5hv55zuhy67xzqqhfzm15hwrs9smjk9myz253jv2zodd6mmwyoht0lx4lsvjjrhtlo6phh4\",\n  \"secondaryConnectionString\" : \"io6aw\",\n  \"primaryKey\" : \"ne5bnyxctr4sqcwfk82k0ga0i51cof3fnr972mbgpo0q1ti9lmuktza2g496tyshbyhm6h\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a7338a84-0d4d-4219-b7be-ff82dd2e983f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:44.464129Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_RegenerateKeys",
          "schema" : {
            "type" : "object",
            "properties" : {
              "keyName" : {
                "type" : "string",
                "description" : "A string that describes the authorization rule."
              },
              "primaryConnectionString" : {
                "type" : "string",
                "description" : "Primary connection string of the created namespace authorization rule."
              },
              "primaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit primary key for signing and validating the SAS token."
              },
              "secondaryConnectionString" : {
                "type" : "string",
                "description" : "Secondary connection string of the created namespace authorization rule."
              },
              "secondaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit secondary key for signing and validating the SAS token."
              }
            },
            "description" : "Namespace/Relay Connection String"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "a1983b7e-84e6-43fa-95b8-8a544f286236",
    "name" : "Primary and secondary connection strings to the WCF relay.",
    "request" : {
      "urlPath" : "/subscriptions/qzcq/resourceGroups/Lilia+Price/providers/Microsoft.Relay/namespaces/Hugh+Ledner/wcfRelays/Taylor+Stark+III/authorizationRules/Jordon+Hills/listKeys",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "vzoh7188"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"secondaryKey\" : \"s55yv29q3lybbvkxcs71skso92zpi7tjy7uselt6xo0m8ujr9\",\n  \"keyName\" : \"Les Bednar\",\n  \"primaryConnectionString\" : \"8vixr9t3jkdwx58hhey6upjox3uusgntmi7xnl4ohvodfyfpjd50ftejdggkb0fyx6p9axh670azgpx9ls3bpihztdfnrykcf8klsi3rcziy\",\n  \"secondaryConnectionString\" : \"vy5wjj3f781jfihvua3rc3uw4z4hyw\",\n  \"primaryKey\" : \"hfbtt\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a1983b7e-84e6-43fa-95b8-8a544f286236",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:44.463697Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_ListKeys",
          "schema" : {
            "type" : "object",
            "properties" : {
              "keyName" : {
                "type" : "string",
                "description" : "A string that describes the authorization rule."
              },
              "primaryConnectionString" : {
                "type" : "string",
                "description" : "Primary connection string of the created namespace authorization rule."
              },
              "primaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit primary key for signing and validating the SAS token."
              },
              "secondaryConnectionString" : {
                "type" : "string",
                "description" : "Secondary connection string of the created namespace authorization rule."
              },
              "secondaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit secondary key for signing and validating the SAS token."
              }
            },
            "description" : "Namespace/Relay Connection String"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "373a5c98-9f4c-417e-946e-9de731009714",
    "name" : "Deletes a WCF relay authorization rule. - 204",
    "request" : {
      "urlPath" : "/subscriptions/ur41/resourceGroups/Vernon+Balistreri/providers/Microsoft.Relay/namespaces/Trinidad+Franecki/wcfRelays/Daniel+Ritchie/authorizationRules/Somer+Abernathy",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "ozgr15yor8rfugocoebto7y6g17tpdcep6iwl7239w0lltrb29xtb9aeykfnmm5vqx90cq2lchrfh7uzzle6bxmsw2j6u2c78opv20t7em5d1qej3jqb8joy"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "373a5c98-9f4c-417e-946e-9de731009714",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:44.463251Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_DeleteAuthorizationRule"
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "fc7ca04a-d693-4541-9361-691dd35cd381",
    "name" : "Deletes a WCF relay authorization rule. - 200",
    "request" : {
      "urlPath" : "/subscriptions/5194/resourceGroups/Numbers+Veum/providers/Microsoft.Relay/namespaces/Mr.+Joshua+Hudson/wcfRelays/Darrick+Daugherty/authorizationRules/Ruth+Osinski+MD",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "t1cg78t468l5xl6zjq1laq31j6s18bz2h1z6fn8zq83mefxh1zzsk17ksqmnfamttnz4psrykpuvqksek6aizw56oant7x6gd2v2tm8v3druff7cpdol273erqomtlpr1pwsc68goi0yb1i853o3m5y912w60ud5li5jmnvihq0behhijb"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "fc7ca04a-d693-4541-9361-691dd35cd381",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:44.462978Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_DeleteAuthorizationRule"
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "94082cf3-5bd3-4871-8dde-6c6142f17fd9",
    "name" : "Creates or updates an authorization rule for a WCF relay.",
    "request" : {
      "urlPath" : "/subscriptions/4153/resourceGroups/Marshall+Hartmann/providers/Microsoft.Relay/namespaces/Wilfred+Predovic/wcfRelays/Darlene+Braun/authorizationRules/Darren+Kertzmann",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "1l59rzwm5qouwn62"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Les Windler\",\n  \"id\" : \"8z2g\",\n  \"type\" : \"bu7rrkbj34n6jn9resj98rej5hrjx3kxox0fdiwnq1tpu6jrbu1opdkp1vzvfynumj0xl0s0np7j8geegwo7itfmtqosifia9bii7mzabll9arxmk23i73cu2fgfvlffndw58eytd7ntvv8gwt0aoc7\",\n  \"properties\" : {\n    \"rights\" : [ \"Send\", \"Listen\", \"Manage\", \"Manage\", \"Send\" ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "94082cf3-5bd3-4871-8dde-6c6142f17fd9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:44.46268Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_CreateOrUpdateAuthorizationRule",
          "schema" : {
            "properties" : {
              "properties" : {
                "required" : [ "rights" ],
                "type" : "object",
                "properties" : {
                  "rights" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    "description" : "The rights associated with the rule.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "Manage", "Send", "Listen" ]
                    }
                  }
                },
                "description" : "Authorization rule properties."
              }
            },
            "description" : "Description of a namespace authorization rule.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "2970c7d5-75b0-44cd-9cfd-06fe57a1cf8d",
    "name" : "Get authorizationRule for a WCF relay by name.",
    "request" : {
      "urlPath" : "/subscriptions/46f2/resourceGroups/Treasa+Wilderman/providers/Microsoft.Relay/namespaces/Vivienne+Gibson/wcfRelays/Carolin+Hudson/authorizationRules/Juan+Swift",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "pwrohflhi6ncgmapw2j5ky2y99qpfupqb7g1qr7o4z1axsx6njet6dmih6j8pio79sqz0bi3s2yegbhchb4bemr1urm67sw8s1yzs256aqa06u34qnz6qt0x69p215qbfc0t1l251l6teu9s9lh31page"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Michale Ratke\",\n  \"id\" : \"q632\",\n  \"type\" : \"qlui2gvg2pm8\",\n  \"properties\" : {\n    \"rights\" : [ \"Manage\", \"Manage\", \"Manage\", \"Listen\", \"Listen\", \"Manage\", \"Send\" ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2970c7d5-75b0-44cd-9cfd-06fe57a1cf8d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:44.462188Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_GetAuthorizationRule",
          "schema" : {
            "properties" : {
              "properties" : {
                "required" : [ "rights" ],
                "type" : "object",
                "properties" : {
                  "rights" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    "description" : "The rights associated with the rule.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "Manage", "Send", "Listen" ]
                    }
                  }
                },
                "description" : "Authorization rule properties."
              }
            },
            "description" : "Description of a namespace authorization rule.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "128a4150-159b-439b-bd5d-ca1b8c99f7b4",
    "name" : "Authorization rules for a WCF relay.",
    "request" : {
      "urlPath" : "/subscriptions/0n3e/resourceGroups/Roberto+Jenkins/providers/Microsoft.Relay/namespaces/Giuseppe+Kessler/wcfRelays/Marylynn+Orn/authorizationRules",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "z7rf1iayz5oiryr1cbxh5mvr4mprlmxiot56a4hn4zij7yav8k4qafjojkj7ru8m1dgq5sj92ph3pqxpa1220hk9hr40nsw7u920ecbydehmbjvm6vhfqc521rou83dxeibbdru98zqck"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Mr. Tonya Kuhn\",\n    \"id\" : \"tx22\",\n    \"type\" : \"g0maw98be9ivxwpm0wmc8lqikq55vwzs9aacf3zeptkkdffxqemuvlbzq7ioeylo5dog7bj9ovpwkhur9fu1dp5gr37318y288e604le7jsottqq5q4wrxlaxv539j2a2du63jktycxmgnfrul6u4j7caiu5lu\",\n    \"properties\" : {\n      \"rights\" : [ \"Listen\" ]\n    }\n  }, {\n    \"name\" : \"Lindsey Schiller\",\n    \"id\" : \"0zlj\",\n    \"type\" : \"f8ehpzhacxec8tycm2c1cj98zbc7nt38jplb1rdg5hnmmpedhxvvbmazh9oaz88qmmixzekz2qbvfts0p1un9ry06pthnvojgf0kbycgnnux4qc1n79y3iz8tn6rwgrhqmo0wtl1h8zwngg4m2j35f\",\n    \"properties\" : {\n      \"rights\" : [ \"Listen\", \"Manage\" ]\n    }\n  }, {\n    \"name\" : \"Elidia Nitzsche\",\n    \"id\" : \"07rk\",\n    \"type\" : \"ar9di815bm396spzj6wu27uj77r69o7v2v78qbct8xnveq\",\n    \"properties\" : {\n      \"rights\" : [ \"Send\", \"Send\", \"Listen\", \"Listen\", \"Manage\", \"Manage\" ]\n    }\n  } ],\n  \"nextLink\" : \"yjxkmm7qmgou4kqv9r64xvyzfkwxe5vn9m2dmu1be0wdwryd1mbwonym4fnj7wxmcsg2tmxgws3f86qztlra8o8mo5ubn6ll4avhbuxkbo3upnraqvy0yg3sca9lk2wlpwj3lyl04x10dod5rd0qk5kmzg4w0yd02h83q6g77v26pbzkeedu8dqi6qa2bpc0ttpb\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "128a4150-159b-439b-bd5d-ca1b8c99f7b4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:44.461698Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_ListAuthorizationRules",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if value contains incomplete list of authorization rules."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the list authorization rules operation.",
                "items" : {
                  "$ref" : "#/components/schemas/AuthorizationRule"
                }
              }
            },
            "description" : "The response from the list namespace operation."
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "38326dac-2a4f-4746-951f-b68a603eeb8f",
    "name" : "Deletes a WCF relay. - 204",
    "request" : {
      "urlPath" : "/subscriptions/lcj4/resourceGroups/Kyla+Ebert+DVM/providers/Microsoft.Relay/namespaces/Lenard+Bernhard+V/wcfRelays/Orlando+McGlynn",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "cjyui1mx2c7u"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "38326dac-2a4f-4746-951f-b68a603eeb8f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:44.460936Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_Delete"
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "f316859f-d12a-4f7c-b490-92ed55695f6a",
    "name" : "Deletes a WCF relay. - 200",
    "request" : {
      "urlPath" : "/subscriptions/20e5/resourceGroups/Jeremy+Hudson/providers/Microsoft.Relay/namespaces/Mr.+Wilburn+Hauck/wcfRelays/Lauralee+Pagac",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "dkf6vh2ekyupe6oq62c2wzb2yd5xd1v1gg9632y8j78znkgir5c0mufgnc"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "f316859f-d12a-4f7c-b490-92ed55695f6a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:44.460694Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_Delete"
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "52c01077-b16c-43ee-9026-c271a878918f",
    "name" : "Creates or updates a WCF relay. This operation is idempotent.",
    "request" : {
      "urlPath" : "/subscriptions/g89j/resourceGroups/Trenton+Schaden/providers/Microsoft.Relay/namespaces/Vincenzo+Willms/wcfRelays/Eliana+Wisoky",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "ea356xkqd7ym1zd8rpu4ehfko0i9g4xc8dfjfxkrw860t7s6qncaar1p1jpp5ff4ekxz0hpfbm9svmbscs6z9mnek1kwhg65ov8q2v4ewht1ux7mrba6ehcsiizrgimh9qzq3wo012ova0nwc3u09ggfbzya6aa6yx07lcy5en47"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Lance Stokes\",\n  \"id\" : \"8717\",\n  \"type\" : \"bxbayh0m4f7veet6dtgaezivhn1lbqmcb2cp2mi8dbtco8pty5s90n4vs424mdf8mm8x9lq6vjfrm0d98q8nal\",\n  \"properties\" : {\n    \"createdAt\" : \"2023-05-27T05:40:13.459Z\",\n    \"listenerCount\" : 1,\n    \"isDynamic\" : false,\n    \"relayType\" : \"Http\",\n    \"requiresClientAuthorization\" : false,\n    \"userMetadata\" : \"2v6tyje14rtsq4bd2knfwq1y2cbjknwxe\",\n    \"requiresTransportSecurity\" : true,\n    \"updatedAt\" : \"2023-11-19T16:46:42.459Z\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "52c01077-b16c-43ee-9026-c271a878918f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:44.460429Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_CreateOrUpdate",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "createdAt" : {
                    "type" : "string",
                    "description" : "The time the WCF relay was created.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "isDynamic" : {
                    "type" : "boolean",
                    "description" : "Returns true if the relay is dynamic; otherwise, false.",
                    "readOnly" : true
                  },
                  "listenerCount" : {
                    "maximum" : 25,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "The number of listeners for this relay. Note that min :1 and max:25 are supported.",
                    "format" : "int32",
                    "readOnly" : true
                  },
                  "relayType" : {
                    "type" : "string",
                    "description" : "WCF relay type.",
                    "enum" : [ "NetTcp", "Http" ]
                  },
                  "requiresClientAuthorization" : {
                    "type" : "boolean",
                    "description" : "Returns true if client authorization is needed for this relay; otherwise, false."
                  },
                  "requiresTransportSecurity" : {
                    "type" : "boolean",
                    "description" : "Returns true if transport security is needed for this relay; otherwise, false."
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "The time the namespace was updated.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "userMetadata" : {
                    "type" : "string",
                    "description" : "The usermetadata is a placeholder to store user-defined string data for the WCF Relay endpoint. For example, it can be used to store descriptive data, such as list of teams and their contact information. Also, user-defined configuration settings can be stored."
                  }
                },
                "description" : "Properties of the WCF relay."
              }
            },
            "description" : "Description of the WCF relay resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "4b8b0037-f651-41e2-8d6f-b7be5b955e7f",
    "name" : "Returns the description for the specified WCF relay. - 204",
    "request" : {
      "urlPath" : "/subscriptions/81za/resourceGroups/Miss+Edison+Wolff/providers/Microsoft.Relay/namespaces/Miss+Madalyn+Metz/wcfRelays/Gwendolyn+Jakubowski",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "biyp0ij886a80hpbp9memsjr5rj0rjxm54123xl85hiyxg509hlyecbju9idb3g6sg2yl28gi3l7dq2l715re4qo"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "4b8b0037-f651-41e2-8d6f-b7be5b955e7f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:44.459916Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_Get"
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "3c5fd6bb-eecd-42a2-a09a-124f465aa43a",
    "name" : "Returns the description for the specified WCF relay. (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/v3k1/resourceGroups/Dr.+Kai+Lemke/providers/Microsoft.Relay/namespaces/Kyra+Conn/wcfRelays/Mr.+Adelle+Muller",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "cy0ywk6cbj6tf48uk2z9ia58g8r1uwflemc5l4pawtateuzj4tqrwqv0lo073orenq08xx71x40lam3uq2bfgi34n27nuex8mhza08zna2au2mpz4gqo0dmcbzla8047g273rse6695wa0h4ff"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Natacha Wintheiser\",\n  \"id\" : \"7q02\",\n  \"type\" : \"a0gts2u7mclyb82i0v5eotzk8uxv2bv2yw3h2uiyna1jeuyr6gbehhr9hb47kwgb33cbgp8uc4s2kf19lzgfb245nwkkwqm7obfj4xgbpkmtf84hs0hz2s9jrvwdi6ujiqzd7lv4l4mvlwi2rbx0ye74gqpgufojcdd2luk656qsw3zhow6xvwhgzrzt4u\",\n  \"properties\" : {\n    \"createdAt\" : \"2023-01-16T13:51:08.459Z\",\n    \"listenerCount\" : 9,\n    \"isDynamic\" : true,\n    \"relayType\" : \"NetTcp\",\n    \"requiresClientAuthorization\" : false,\n    \"userMetadata\" : \"jnft9r40wwx455m0\",\n    \"requiresTransportSecurity\" : true,\n    \"updatedAt\" : \"2022-06-16T11:05:03.459Z\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3c5fd6bb-eecd-42a2-a09a-124f465aa43a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:44.459622Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_Get",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "createdAt" : {
                    "type" : "string",
                    "description" : "The time the WCF relay was created.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "isDynamic" : {
                    "type" : "boolean",
                    "description" : "Returns true if the relay is dynamic; otherwise, false.",
                    "readOnly" : true
                  },
                  "listenerCount" : {
                    "maximum" : 25,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "The number of listeners for this relay. Note that min :1 and max:25 are supported.",
                    "format" : "int32",
                    "readOnly" : true
                  },
                  "relayType" : {
                    "type" : "string",
                    "description" : "WCF relay type.",
                    "enum" : [ "NetTcp", "Http" ]
                  },
                  "requiresClientAuthorization" : {
                    "type" : "boolean",
                    "description" : "Returns true if client authorization is needed for this relay; otherwise, false."
                  },
                  "requiresTransportSecurity" : {
                    "type" : "boolean",
                    "description" : "Returns true if transport security is needed for this relay; otherwise, false."
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "The time the namespace was updated.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "userMetadata" : {
                    "type" : "string",
                    "description" : "The usermetadata is a placeholder to store user-defined string data for the WCF Relay endpoint. For example, it can be used to store descriptive data, such as list of teams and their contact information. Also, user-defined configuration settings can be stored."
                  }
                },
                "description" : "Properties of the WCF relay."
              }
            },
            "description" : "Description of the WCF relay resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "7057a6d3-d683-48ad-9406-530d6644ed87",
    "name" : "Lists the WCF relays within the namespace.",
    "request" : {
      "urlPath" : "/subscriptions/k6n2/resourceGroups/Winford+Zemlak/providers/Microsoft.Relay/namespaces/Ardelia+Kovacek/wcfRelays",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "qv5uy4ifh5xgolkjp6d4uc1l1l2emigwd9dhiexvb4filomobi6y1dhtleyg85y23ussdbwsdnv5lstfv2jfwzr4n07hzakf1f0c5b"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Jae Rice\",\n    \"id\" : \"38tk\",\n    \"type\" : \"djyzer8ym2j8d4my2ta99yv4i6exmaqpk906xvaw4lrzml1h3b18a50zrw0ixd\",\n    \"properties\" : {\n      \"createdAt\" : \"2023-09-29T03:40:30.457Z\",\n      \"listenerCount\" : 11,\n      \"isDynamic\" : false,\n      \"relayType\" : \"Http\",\n      \"requiresClientAuthorization\" : false,\n      \"userMetadata\" : \"bfu41js2oktn5\",\n      \"requiresTransportSecurity\" : true,\n      \"updatedAt\" : \"2022-10-12T17:24:55.457Z\"\n    }\n  }, {\n    \"name\" : \"Eli Bayer Jr.\",\n    \"id\" : \"360q\",\n    \"type\" : \"is3q34gu45jlehajmwjqh6k3lezmhos6xr7wg2mitecodeix36fjo8vdyk83f84aahzdxe6gb3qvmlbn15shzuoos9k6qgz2mnz19z9c0ktayrl7g50stgzut06bdc604vzpwya5tu1qvfd6f7ierxd8750yxukimf4w2z25xrquku7hs1u4jqiqnwpk7cm\",\n    \"properties\" : {\n      \"createdAt\" : \"2023-12-09T05:31:57.457Z\",\n      \"listenerCount\" : 14,\n      \"isDynamic\" : true,\n      \"relayType\" : \"Http\",\n      \"requiresClientAuthorization\" : false,\n      \"userMetadata\" : \"3037322e6jireiypv51c4s625u46mn5gy2bkee9rmdtw34no8htpbu2x00og3uzgulhq3c0l5znp7lv61fjki5r1702mimfukbu7p8pz6mlgtcwkhjw19c\",\n      \"requiresTransportSecurity\" : true,\n      \"updatedAt\" : \"2023-12-18T11:44:04.457Z\"\n    }\n  }, {\n    \"name\" : \"Otha Mann\",\n    \"id\" : \"psaf\",\n    \"type\" : \"9cp5w7v\",\n    \"properties\" : {\n      \"createdAt\" : \"2022-04-05T19:12:31.457Z\",\n      \"listenerCount\" : 21,\n      \"isDynamic\" : true,\n      \"relayType\" : \"NetTcp\",\n      \"requiresClientAuthorization\" : false,\n      \"userMetadata\" : \"390kdcgq20ofxd15duyyakgq1tu1sw9h7w7ipcm\",\n      \"requiresTransportSecurity\" : true,\n      \"updatedAt\" : \"2022-05-15T00:11:25.457Z\"\n    }\n  }, {\n    \"name\" : \"Kerry Rohan\",\n    \"id\" : \"hv00\",\n    \"type\" : \"acsv6mgxqr8yy1l1fhq7ue74uzwi5di9tb44uyznsr4m6z8fj1ati8u92lm1zbd0jebsxta076gaodc8sc48tmaq06d79z6zx78rosxy6fwrbwvwrf3hqq7qhbe\",\n    \"properties\" : {\n      \"createdAt\" : \"2023-11-04T20:34:33.458Z\",\n      \"listenerCount\" : 20,\n      \"isDynamic\" : true,\n      \"relayType\" : \"NetTcp\",\n      \"requiresClientAuthorization\" : false,\n      \"userMetadata\" : \"wxbejwm8qz78ykgqwkkrrhihpcpaye5f8zwwhj096kgjfem0pq1teudvp116ujfyz5mcw7\",\n      \"requiresTransportSecurity\" : false,\n      \"updatedAt\" : \"2022-12-31T21:59:11.458Z\"\n    }\n  }, {\n    \"name\" : \"Carmine Ortiz\",\n    \"id\" : \"ul7s\",\n    \"type\" : \"sp82rwirdukrhd3p8xsexf27am81i7wq67tfjr\",\n    \"properties\" : {\n      \"createdAt\" : \"2022-11-22T00:01:25.458Z\",\n      \"listenerCount\" : 17,\n      \"isDynamic\" : true,\n      \"relayType\" : \"NetTcp\",\n      \"requiresClientAuthorization\" : false,\n      \"userMetadata\" : \"80bbpzynnnd413kpe1p4qpdjbdnbziumbr66qf8okhl7qg1cddhfjdby5wt2m02898xp443h9ew3lfpyn8el3hgbxrip6iaqa2me7rvgltjlz2n9va91e5woff0k66a4tiinndlgtfu9f7zsfwswkh0li\",\n      \"requiresTransportSecurity\" : false,\n      \"updatedAt\" : \"2024-01-19T13:01:23.458Z\"\n    }\n  }, {\n    \"name\" : \"Melania Becker\",\n    \"id\" : \"87se\",\n    \"type\" : \"myseavf69ow37x5bmuwxxxmigprab6jeteur8yf1om3p2jcptf1dnbuf5pkk9m4ecurrtn3tpx3o930wln8zrc261ho18z7mbfyokmylmmwg7uw6o363z94t1h46q\",\n    \"properties\" : {\n      \"createdAt\" : \"2022-09-25T11:26:40.458Z\",\n      \"listenerCount\" : 0,\n      \"isDynamic\" : false,\n      \"relayType\" : \"Http\",\n      \"requiresClientAuthorization\" : false,\n      \"userMetadata\" : \"ss7yy4gbrwxe7eor4571tqggwor9hsn9ubnu1dbmscwdd49qpdn6kjo1c5431moe59kigfwe08gf8emf73huk7sx99slh6ioqodz328\",\n      \"requiresTransportSecurity\" : false,\n      \"updatedAt\" : \"2023-03-18T04:48:13.458Z\"\n    }\n  }, {\n    \"name\" : \"Rosette Gleichner\",\n    \"id\" : \"3yzz\",\n    \"type\" : \"z2112culb2sbet5tuc6cd4rynlpy3l5sqjv92wis8y7n40l51ewezijmohca7uewdcaeji72yz8l2jlidb5ezxyfr08alwk2056n4zhrod3g266jb6x5el5hqnftj87yruz4yiqn4o0tns2gbe8yn1ck3gyodxqdtcx67sbivlbvpe9o59q9aaijzli6pl5x\",\n    \"properties\" : {\n      \"createdAt\" : \"2022-07-29T16:39:35.458Z\",\n      \"listenerCount\" : 4,\n      \"isDynamic\" : true,\n      \"relayType\" : \"NetTcp\",\n      \"requiresClientAuthorization\" : true,\n      \"userMetadata\" : \"dqw905vjrew04njgmjoxba5ut9vw91pige86l3tr0dlq5q6qw1courrfes5thlo4nqxkml46m1gps8swp8zdeml\",\n      \"requiresTransportSecurity\" : true,\n      \"updatedAt\" : \"2023-01-24T04:47:32.458Z\"\n    }\n  } ],\n  \"nextLink\" : \"rwfsnaworm9hs\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7057a6d3-d683-48ad-9406-530d6644ed87",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:44.459073Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_ListByNamespace",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if value contains incomplete list of WCF relays."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the list WCF relay operation.",
                "items" : {
                  "$ref" : "#/components/schemas/WcfRelay"
                }
              }
            },
            "description" : "The response of the list WCF relay operation."
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "8a7579d9-b56e-41b2-91dd-7ad954f22675",
    "name" : "Regenerates the primary or secondary connection strings to the hybrid connection...",
    "request" : {
      "urlPath" : "/subscriptions/45l0/resourceGroups/Pedro+Mitchell+I/providers/Microsoft.Relay/namespaces/Marlena+Balistreri/hybridConnections/Errol+Jacobi/authorizationRules/Maryln+Sauer+PhD/regenerateKeys",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "4bp4tc3sy5fvrqw3n5iopysp40g5f3tmh1tolb3yifsxcev"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"secondaryKey\" : \"sva2s63molwfsu3qeymaz632r9zqqeo9okm8dppm851rbyk22mp7276vtezl2maluw4qyeu411h5nw070u\",\n  \"keyName\" : \"Nelly Corwin\",\n  \"primaryConnectionString\" : \"7i4ajpg7utw8btc53jeuxloz433or2tthg90kxwf9qvyi8ct1pfbd4tbe32cmi38veqt14f8w9qcj79wwyk8s00ibq61tlfbgytlardb8y5xdri9wxm7xmvyeisg3fa4hzn0z9nc4933kvnpe0xs3po\",\n  \"secondaryConnectionString\" : \"kwo73zjsi4v9wmi6lk5d462183lpi4b9c18m03uc4rauu9f8axe0vf9gbpthifqqa3zfyvivdgt9uhx8l9nvpixpmb783ljdkmcs5imnrbv2d55xzopl7flsch6gg99wriqwyt8eexcyymhm0qar8la523ah6c8d2nv08wstk500tc1o7bnfstv7g96yfh9qbm2usu\",\n  \"primaryKey\" : \"v07uxf0lgkcdfhc3d302b1e5edkewes1fs8rpsyykoi95sshtuacgs51ak0lp4olcc861iryhmg82jj0k54p9h83mmgleufspyauj\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8a7579d9-b56e-41b2-91dd-7ad954f22675",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:44.457475Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_RegenerateKeys",
          "schema" : {
            "type" : "object",
            "properties" : {
              "keyName" : {
                "type" : "string",
                "description" : "A string that describes the authorization rule."
              },
              "primaryConnectionString" : {
                "type" : "string",
                "description" : "Primary connection string of the created namespace authorization rule."
              },
              "primaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit primary key for signing and validating the SAS token."
              },
              "secondaryConnectionString" : {
                "type" : "string",
                "description" : "Secondary connection string of the created namespace authorization rule."
              },
              "secondaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit secondary key for signing and validating the SAS token."
              }
            },
            "description" : "Namespace/Relay Connection String"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "08d543a5-af93-4083-a357-a2867e0873b5",
    "name" : "Primary and secondary connection strings to the hybrid connection.",
    "request" : {
      "urlPath" : "/subscriptions/pmb8/resourceGroups/Creola+Stark/providers/Microsoft.Relay/namespaces/Barbara+Zulauf/hybridConnections/Leonel+Reilly+Jr./authorizationRules/Ina+Ratke+DVM/listKeys",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "ztp58bjkxqmp832bvmnrqtlab4n2no1876wfi7hwuqrdb77wf6t4cfgj1l7l8wjopqqpz36aby7bi0nsp6cch709h7sz3pfa7wfw3le8oseaqc71jrvfa64okreskxcnnlpojf41x39jf2jaz4mtesy4s1em5ps5vkqceiihac3ec53f36pxay0l7"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"secondaryKey\" : \"3ysp5ie4wuvchqm4848urmmsozlpl5xiu685ar7zjr379mlqmz3vj3c1jnsnss5srrqwut9fidd58ynu0jmho4pwf3rj9hi60w6t1em7dw2zwk0g\",\n  \"keyName\" : \"Ms. Naomi Erdman\",\n  \"primaryConnectionString\" : \"t04bxhgzphvwu32iqfanyoi5bgtfsh8ah3nt182etjfsc4v2vt1eujskak2i2lqm5cvm6c17m1pwksreef4e1dezvpzjgh\",\n  \"secondaryConnectionString\" : \"fe3hiec8gxpsckx2waxjucb4h69f80birh4clop1fxwcxqwwyvuua3gfdqa281li0inlzda0lqvv0srdlbwjwg9qsfk3j92innmud6iwpa5r4jul6bv9420hpicyp0g6zpjak21mx3j35ip81130hxofsu1nqsaraka929balvhr7alhxikslim\",\n  \"primaryKey\" : \"izdif7czan4em29s2djj45i36a\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "08d543a5-af93-4083-a357-a2867e0873b5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:44.457039Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_ListKeys",
          "schema" : {
            "type" : "object",
            "properties" : {
              "keyName" : {
                "type" : "string",
                "description" : "A string that describes the authorization rule."
              },
              "primaryConnectionString" : {
                "type" : "string",
                "description" : "Primary connection string of the created namespace authorization rule."
              },
              "primaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit primary key for signing and validating the SAS token."
              },
              "secondaryConnectionString" : {
                "type" : "string",
                "description" : "Secondary connection string of the created namespace authorization rule."
              },
              "secondaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit secondary key for signing and validating the SAS token."
              }
            },
            "description" : "Namespace/Relay Connection String"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "547a3432-746a-444f-80d9-442955bad4f1",
    "name" : "Deletes a hybrid connection authorization rule. - 204",
    "request" : {
      "urlPath" : "/subscriptions/ltwn/resourceGroups/Karl+Ruecker/providers/Microsoft.Relay/namespaces/Lucius+Effertz/hybridConnections/Ralph+Bechtelar+III/authorizationRules/Mrs.+Wilfred+Mraz",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "fh4gvv0tefqz8xwlrgkz136axpr79ct7ofpf0sp1bucryad37pwgo6rd9i3gearrn4gze"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "547a3432-746a-444f-80d9-442955bad4f1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:44.456554Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_DeleteAuthorizationRule"
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "e4c50418-32d9-4916-8129-e05a18b0d039",
    "name" : "Deletes a hybrid connection authorization rule. - 200",
    "request" : {
      "urlPath" : "/subscriptions/n414/resourceGroups/Karisa+Lesch/providers/Microsoft.Relay/namespaces/Clair+Lindgren+Jr./hybridConnections/Pablo+Armstrong+Sr./authorizationRules/Lesia+O%27Connell",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "84rp73c82d1450v5dnzyj98e227mgcep801tzjdre2i70gpzp6fmebmpozis5zaw2edh7iow3nsvclpnsdd8s5nfalr6kb4yww5iyopoz7h0wmo93mnoi5w0sxyj6h60v836p2z6owbi1b6wcfzh6aofavbfv"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "e4c50418-32d9-4916-8129-e05a18b0d039",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:44.456254Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_DeleteAuthorizationRule"
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "e2a3e9ad-01cd-4e8a-86bf-0b174d2058a8",
    "name" : "Creates or updates an authorization rule for a hybrid connection.",
    "request" : {
      "urlPath" : "/subscriptions/2306/resourceGroups/Candelaria+O%27Connell+V/providers/Microsoft.Relay/namespaces/Chau+Jacobson/hybridConnections/Michal+Armstrong/authorizationRules/Sofia+Reichel",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "cor14hec6zpecctvm5fv9b3egfm27pmp9s1blmkt5bars"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Sergio Kling I\",\n  \"id\" : \"51g8\",\n  \"type\" : \"bercl6xr1zo3ktlq1w8rrwq0sl2\",\n  \"properties\" : {\n    \"rights\" : [ \"Listen\" ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e2a3e9ad-01cd-4e8a-86bf-0b174d2058a8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:44.455948Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_CreateOrUpdateAuthorizationRule",
          "schema" : {
            "properties" : {
              "properties" : {
                "required" : [ "rights" ],
                "type" : "object",
                "properties" : {
                  "rights" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    "description" : "The rights associated with the rule.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "Manage", "Send", "Listen" ]
                    }
                  }
                },
                "description" : "Authorization rule properties."
              }
            },
            "description" : "Description of a namespace authorization rule.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "8fb7dfae-eb6f-4dd7-b5fc-6b80e8a4ea7a",
    "name" : "Hybrid connection authorization rule for a hybrid connection by name.",
    "request" : {
      "urlPath" : "/subscriptions/0u91/resourceGroups/Mr.+Amparo+Murphy/providers/Microsoft.Relay/namespaces/Renay+Ankunding+Sr./hybridConnections/Benedict+Anderson/authorizationRules/Hermine+Turcotte",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "bh7viouzuz8h0kc0338mlez714by"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Larue Hamill II\",\n  \"id\" : \"2pt5\",\n  \"type\" : \"enmjgeoe6vq5j40qj91asbmiuz2h5v0tla2jp3d\",\n  \"properties\" : {\n    \"rights\" : [ \"Send\", \"Manage\", \"Send\", \"Send\", \"Listen\", \"Listen\", \"Listen\", \"Send\" ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8fb7dfae-eb6f-4dd7-b5fc-6b80e8a4ea7a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:44.455471Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_GetAuthorizationRule",
          "schema" : {
            "properties" : {
              "properties" : {
                "required" : [ "rights" ],
                "type" : "object",
                "properties" : {
                  "rights" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    "description" : "The rights associated with the rule.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "Manage", "Send", "Listen" ]
                    }
                  }
                },
                "description" : "Authorization rule properties."
              }
            },
            "description" : "Description of a namespace authorization rule.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "74b395f7-6c88-42a1-afd0-d52ebac4019c",
    "name" : "Authorization rules for a hybrid connection.",
    "request" : {
      "urlPath" : "/subscriptions/2r3a/resourceGroups/Michel+Robel/providers/Microsoft.Relay/namespaces/Jill+Bergstrom/hybridConnections/Mr.+Kasha+Pfannerstill/authorizationRules",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "0yxofd9q2ir5rwlmr6zo29osstjle9rng86b8v3w9t7tdy9v1svzmsgddlxn8jx15alykfm9x0cyk8f8pbdjwu"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Hayden Shanahan\",\n    \"id\" : \"69b0\",\n    \"type\" : \"vhblh4631729wuejj17mmafhofj7epmc7ptaytz10iiwvd17w\",\n    \"properties\" : {\n      \"rights\" : [ \"Send\", \"Manage\", \"Listen\", \"Send\" ]\n    }\n  }, {\n    \"name\" : \"Cathy Gleason\",\n    \"id\" : \"5504\",\n    \"type\" : \"bcp1zv10c9i4gl5gvyyoexku2tsaqi9moa6f0pqx676h6g8d67zwcg0xwp08h0ds7nnzw13z8peynxl2jmuqw63t\",\n    \"properties\" : {\n      \"rights\" : [ \"Listen\", \"Listen\", \"Send\", \"Listen\" ]\n    }\n  }, {\n    \"name\" : \"Sherron Kilback II\",\n    \"id\" : \"8kir\",\n    \"type\" : \"jlp5ex6la3db5d8zo7ma3prcnvwx9wzbr3bfmkpnv0rxski5u7b169qm93d55p4zl6pxo6ycj8jk1fj9do07gh3fokdb9zz3hstr7jbl6vgzd29ic0neozpxwyw0k4w24c0gbezy1lz7mdjr45wac1caapgnkic7if95b0mvj74vwnhi\",\n    \"properties\" : {\n      \"rights\" : [ \"Manage\" ]\n    }\n  } ],\n  \"nextLink\" : \"okxq4u70uir2ow2y95045q93hlhtuea4azhwqktknvc8k9qxyfnwbg86i75ag92rr1mdisti58usg0n6ov93va9oxo94rp9oviud2tka298v1axaznpa\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "74b395f7-6c88-42a1-afd0-d52ebac4019c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:44.454957Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_ListAuthorizationRules",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if value contains incomplete list of authorization rules."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the list authorization rules operation.",
                "items" : {
                  "$ref" : "#/components/schemas/AuthorizationRule"
                }
              }
            },
            "description" : "The response from the list namespace operation."
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "4e60a6bb-37d1-43f5-8f29-27ac86ed0b29",
    "name" : "Deletes a hybrid connection. - 204",
    "request" : {
      "urlPath" : "/subscriptions/66y9/resourceGroups/Tommie+Donnelly/providers/Microsoft.Relay/namespaces/Hellen+Blanda+Jr./hybridConnections/Conrad+Parker",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "cppeen2arkz0zkeg777qi62luvo0e5s3wc78g2o5hguv9k4m3j24o8g8jc8jad89vlpfvlahzr3jw5fhhb8gsjntid65iff70p84v97trtx0x96qrgdhkbrx2px5p"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "4e60a6bb-37d1-43f5-8f29-27ac86ed0b29",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:44.454214Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_Delete"
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "b914dea9-e7df-4b59-b124-5b6adb9c1283",
    "name" : "Deletes a hybrid connection. - 200",
    "request" : {
      "urlPath" : "/subscriptions/z896/resourceGroups/Eufemia+Hayes/providers/Microsoft.Relay/namespaces/Kirby+Schinner/hybridConnections/Santiago+Armstrong",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "56kkpy9msra70e6kfcowuizi9nf8xy4gkj7xb5siu0fnjoslximxo2lpmj4kughz2rgwacb6z8"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "b914dea9-e7df-4b59-b124-5b6adb9c1283",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:44.45397Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_Delete"
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "1c6d691a-67c8-4166-b2b0-9da8e72d4cc0",
    "name" : "Creates or updates a service hybrid connection. This operation is idempotent.",
    "request" : {
      "urlPath" : "/subscriptions/k2qb/resourceGroups/Dr.+Sergio+Klocko/providers/Microsoft.Relay/namespaces/Miss+Eddie+White/hybridConnections/Creola+Connelly",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "l31xzgr86aiprte0z1so3vmns0rggiqmcx2g1611tcvi3btcmmni3cuyz0h543ei96jbgxs7nqk6v7fplsj1wpro8ca51vwebd3zigl1nqul242oc2kw446dxuctja9p"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Fernando Weimann\",\n  \"id\" : \"o41r\",\n  \"type\" : \"zlxr1zkqqmo\",\n  \"properties\" : {\n    \"createdAt\" : \"2022-06-28T02:58:45.453Z\",\n    \"listenerCount\" : 13,\n    \"requiresClientAuthorization\" : false,\n    \"userMetadata\" : \"fpt3e3mez11ijw68wr3pnc96bfko63fvhb4xqt98wnfoei9l2o\",\n    \"updatedAt\" : \"2024-03-03T16:10:59.453Z\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1c6d691a-67c8-4166-b2b0-9da8e72d4cc0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:44.453705Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_CreateOrUpdate",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "createdAt" : {
                    "type" : "string",
                    "description" : "The time the hybrid connection was created.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "listenerCount" : {
                    "maximum" : 25,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "The number of listeners for this hybrid connection. Note that min : 1 and max:25 are supported.",
                    "format" : "int32",
                    "readOnly" : true
                  },
                  "requiresClientAuthorization" : {
                    "type" : "boolean",
                    "description" : "Returns true if client authorization is needed for this hybrid connection; otherwise, false."
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "The time the namespace was updated.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "userMetadata" : {
                    "type" : "string",
                    "description" : "The usermetadata is a placeholder to store user-defined string data for the hybrid connection endpoint. For example, it can be used to store descriptive data, such as a list of teams and their contact information. Also, user-defined configuration settings can be stored."
                  }
                },
                "description" : "Properties of the HybridConnection."
              }
            },
            "description" : "Description of hybrid connection resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "46f6becc-87d5-4258-bd20-994924116dc4",
    "name" : "Returns the description for the specified hybrid connection.",
    "request" : {
      "urlPath" : "/subscriptions/vri1/resourceGroups/Porter+Mitchell/providers/Microsoft.Relay/namespaces/Khadijah+Conn/hybridConnections/Mrs.+Rich+Osinski",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "9i37ueq4379bah711vhqy9udxuh34k8rn1pb2djax6eehphcxeuzwgmd"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Nickolas Hoppe\",\n  \"id\" : \"r84f\",\n  \"type\" : \"f8ogcxjgr0xgistztmmbla3fceyatgw8njqbrukc71y8l183k24crrkik31m57ipltefx81zbeni5v37zjbv7zly5oxaqeed35k7j7s27ms12flj0chx86fslozmvd037ogftje735finy7va9glj8q\",\n  \"properties\" : {\n    \"createdAt\" : \"2023-11-27T10:17:03.452Z\",\n    \"listenerCount\" : 13,\n    \"requiresClientAuthorization\" : false,\n    \"userMetadata\" : \"a5g4nggvm56c97gv7ak2fbeq71qdn6m4a8tov76rwl6x7uw5iq629ha20t0iv3gcio1im2kkm8bynq5s2zzjwxt087ikqnrjsh2qptot492hbbhc8bmnwwjp2dzekep1edk4xs1v61v47yjajmzrndjwe7chplj\",\n    \"updatedAt\" : \"2024-01-28T23:31:41.452Z\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "46f6becc-87d5-4258-bd20-994924116dc4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:44.453207Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_Get",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "createdAt" : {
                    "type" : "string",
                    "description" : "The time the hybrid connection was created.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "listenerCount" : {
                    "maximum" : 25,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "The number of listeners for this hybrid connection. Note that min : 1 and max:25 are supported.",
                    "format" : "int32",
                    "readOnly" : true
                  },
                  "requiresClientAuthorization" : {
                    "type" : "boolean",
                    "description" : "Returns true if client authorization is needed for this hybrid connection; otherwise, false."
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "The time the namespace was updated.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "userMetadata" : {
                    "type" : "string",
                    "description" : "The usermetadata is a placeholder to store user-defined string data for the hybrid connection endpoint. For example, it can be used to store descriptive data, such as a list of teams and their contact information. Also, user-defined configuration settings can be stored."
                  }
                },
                "description" : "Properties of the HybridConnection."
              }
            },
            "description" : "Description of hybrid connection resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "0a784941-37f5-4711-b049-9dddbfd8f5cb",
    "name" : "Lists the hybrid connection within the namespace.",
    "request" : {
      "urlPath" : "/subscriptions/l1ni/resourceGroups/Elise+White/providers/Microsoft.Relay/namespaces/Rosalina+Lind+II/hybridConnections",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "2pzgd53bliuup90ul9gmhb1inqep034sj1zo96qgo21v3y3ggipf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Ji Hansen\",\n    \"id\" : \"093u\",\n    \"type\" : \"r3oo5ujt2m4jbcy2ptuc11cxr3w7ez76izwdxfnzs79upvfuzsdceq8d9a8jihgs8in\",\n    \"properties\" : {\n      \"createdAt\" : \"2023-07-26T17:23:27.451Z\",\n      \"listenerCount\" : 13,\n      \"requiresClientAuthorization\" : true,\n      \"userMetadata\" : \"yfqs004y07we2kkzj\",\n      \"updatedAt\" : \"2022-07-20T19:33:12.451Z\"\n    }\n  }, {\n    \"name\" : \"Brady Padberg\",\n    \"id\" : \"z2ev\",\n    \"type\" : \"7qmotl\",\n    \"properties\" : {\n      \"createdAt\" : \"2022-09-22T15:28:45.451Z\",\n      \"listenerCount\" : 17,\n      \"requiresClientAuthorization\" : false,\n      \"userMetadata\" : \"ln64skcqg4rhhtut8jpizpfc3vrwt9krxqb9c42emvc5s50aocxmj4fej5tlwdgq5u5i3ee7x4dfis652hos5e0num7wbkthpoa7s1ptp882p9wdlkyt\",\n      \"updatedAt\" : \"2022-06-21T16:56:03.451Z\"\n    }\n  }, {\n    \"name\" : \"Shemika Simonis\",\n    \"id\" : \"50xf\",\n    \"type\" : \"6d3j5am19fpg21xnx7o3dallwiq2pjpzkt7b16pwj6x5lxpvwmb0hc6pxac0z5pwph393w5h4fqt7j3ykpywtrgh8d6baogi8at9mw3x6uy5sb1xcdvl80wpd4hbhuu3rwrnusuvjq5vbqz4alohjhm2krkg0qu1se37secwhplckbe2gbguppao5evqgt5o\",\n    \"properties\" : {\n      \"createdAt\" : \"2022-03-23T17:02:17.451Z\",\n      \"listenerCount\" : 14,\n      \"requiresClientAuthorization\" : false,\n      \"userMetadata\" : \"aqji0fab36k0qjjb1b15dms7aqmxuxl65\",\n      \"updatedAt\" : \"2024-03-05T02:54:21.451Z\"\n    }\n  }, {\n    \"name\" : \"Lesley Lynch\",\n    \"id\" : \"e6i5\",\n    \"type\" : \"0ej7bhnz86q9hpgoiqe2s4qa1i1z0omxd49265hvzynqkr5chgocu7rmsd0jka4e0ffkww2hkxyfnyuw3c5z4g9g3bwhfsh6idv9pozjau0fuzwww5pr5odnyn0snkdci2cthcbttr3zpcipr0z3i9nk89ruawf4m71bxcz5rgsmcftul8dh881pt32dj6vzvn\",\n    \"properties\" : {\n      \"createdAt\" : \"2024-02-05T11:14:36.451Z\",\n      \"listenerCount\" : 3,\n      \"requiresClientAuthorization\" : false,\n      \"userMetadata\" : \"rvlpuu5977dt2njo3xga2v5r\",\n      \"updatedAt\" : \"2023-05-16T11:21:22.451Z\"\n    }\n  }, {\n    \"name\" : \"Latrina Crooks\",\n    \"id\" : \"3w47\",\n    \"type\" : \"cv8shrgwk6bfzyyat1p8kj9d3r3i3a6gzp5w4sww641fqiejxbfggeaqphkw9tun0k4t5bnzdb17zh4oqvvsrt5gpjkijkpj1gspvjmc0dfqeyep\",\n    \"properties\" : {\n      \"createdAt\" : \"2022-07-06T21:47:04.451Z\",\n      \"listenerCount\" : 12,\n      \"requiresClientAuthorization\" : true,\n      \"userMetadata\" : \"dfl3z61b4ew773dyyr9fji9jji\",\n      \"updatedAt\" : \"2023-09-05T06:20:18.451Z\"\n    }\n  }, {\n    \"name\" : \"Hobert Windler\",\n    \"id\" : \"cxt5\",\n    \"type\" : \"yhor1lx3a1tdsvbutu023ox6wnp4z6e9fb3n896sdig3rcuex0zutzgvc1zgy4v33r62\",\n    \"properties\" : {\n      \"createdAt\" : \"2023-11-08T05:44:34.452Z\",\n      \"listenerCount\" : 7,\n      \"requiresClientAuthorization\" : true,\n      \"userMetadata\" : \"z7ltwd9reqledubh1cw4yzfeyj7d9ucbk91radha\",\n      \"updatedAt\" : \"2023-10-15T15:18:08.452Z\"\n    }\n  }, {\n    \"name\" : \"Giovanni Fritsch\",\n    \"id\" : \"bkk6\",\n    \"type\" : \"psm0lohnv2feq1901h49kd04g9y9xc8hlxpix8j9cti0swfsajrmahr1og0whbov8mr6ymhfyso44qmadfuefdo9i5g39ijgoh9skeihm07oqw6guw7\",\n    \"properties\" : {\n      \"createdAt\" : \"2023-05-08T03:09:21.452Z\",\n      \"listenerCount\" : 3,\n      \"requiresClientAuthorization\" : false,\n      \"userMetadata\" : \"12ks4q70otk6me94o4pj79iet4t3oh8jmxjxrv8j0\",\n      \"updatedAt\" : \"2023-02-20T13:41:56.452Z\"\n    }\n  } ],\n  \"nextLink\" : \"03ddt2d6z86moaqtzcy0bveb9n25zdy1hj5mmite4az8tsc0kuh\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0a784941-37f5-4711-b049-9dddbfd8f5cb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:44.452684Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_ListByNamespace",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if value contains incomplete list hybrid connection operation."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the list hybrid connections.",
                "items" : {
                  "$ref" : "#/components/schemas/HybridConnection"
                }
              }
            },
            "description" : "The response of the list hybrid connection operation."
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "4763dc98-9672-4fa4-985c-7ea078db2eca",
    "name" : "Regenerates the primary or secondary connection strings to the namespace.",
    "request" : {
      "urlPath" : "/subscriptions/1zl9/resourceGroups/Carlos+Zboncak/providers/Microsoft.Relay/namespaces/Gilbert+Glover/authorizationRules/Kandis+Smitham/regenerateKeys",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "ve7ne2sej61k2eu8wtxwwmjer"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"secondaryKey\" : \"pz2t79lr52qpe95y5fwc0jv9lfeprypmyedth4le2jg82hmaumausz713i38a61u9dr6hq4fy81r01zurm56hcb5xsix1q8n17kqvm\",\n  \"keyName\" : \"Ms. Tama Hoeger\",\n  \"primaryConnectionString\" : \"6v5dv2e5f54k1ipdz1jsg32byrqdluvb3aijsvxfhxe2yfg2a17i4qwc70ezus3z7fzunjufztpqtvzy9pq7fx2lk7tvdkixrn3r8rlab0pxkwhmfeuh3\",\n  \"secondaryConnectionString\" : \"61ept0kuqsfrzeke1nfyq3pvxc6dr2vr06ipr0ljftkt7libq08qocyakjnzyujb8homq67s5qdha823v9lt15i4c6hx2jxf3hl3fnyo95u6vh15phjamd2hq2ljtpec5y52pxnkay796p6lb523i6lx2q0tt54lttotvdh9mqzuzwer68\",\n  \"primaryKey\" : \"hbbb5hj56asxnmo5lxiueko4kjsvpnduegigob0i307o68asxbu5q7i1778vtoqo6f4h5lut23129hunxbffqszsszevkjup4m5oieb5ih4lo73uqmag0a5lbf72kktw4u2glasrc8kaf5shjff3mp2v2qbaizihiavczdlhm8sxlfzy48tyhhdubl5p\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4763dc98-9672-4fa4-985c-7ea078db2eca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:44.451225Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_RegenerateKeys",
          "schema" : {
            "type" : "object",
            "properties" : {
              "keyName" : {
                "type" : "string",
                "description" : "A string that describes the authorization rule."
              },
              "primaryConnectionString" : {
                "type" : "string",
                "description" : "Primary connection string of the created namespace authorization rule."
              },
              "primaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit primary key for signing and validating the SAS token."
              },
              "secondaryConnectionString" : {
                "type" : "string",
                "description" : "Secondary connection string of the created namespace authorization rule."
              },
              "secondaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit secondary key for signing and validating the SAS token."
              }
            },
            "description" : "Namespace/Relay Connection String"
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "22e39c23-1102-4881-8667-8eefeac09ebc",
    "name" : "Primary and secondary connection strings to the namespace.",
    "request" : {
      "urlPath" : "/subscriptions/9413/resourceGroups/Kurtis+Brown/providers/Microsoft.Relay/namespaces/Sharlene+Zieme/authorizationRules/Kiyoko+Altenwerth/listKeys",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "4k014udn7vw7pq4vayifi7jkni032fr3k1uwzl5lel8bxcfzm6fiexifds2eyd6ldmu4y5q7nogreczhm1ja5nulj9wo93dbwso75a09j0"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"secondaryKey\" : \"qgsb4cl4slwt82grt0q811i08fl3ezx1ihpd4of9lrhuingnhyksr6gtnyxa8db27rogs6an4wwpo0t74jobvfg9qe4m81k8ugokgjsm1cte70e4js05oomy6n0ijqjvebdq4ifwcn9ui7\",\n  \"keyName\" : \"Ulysses Ortiz\",\n  \"primaryConnectionString\" : \"zwuzzxj5w10s3i685lxd12nqumm7ki4zgq0bbpt4oknb2fq8enjtbr35z269t4t1ldkcg17jvoplbl6l9kywg7vqobg7jnsrjl273o3q6nyhmkp07xcv9rjo0\",\n  \"secondaryConnectionString\" : \"ocqoqqqjpczbrizy6vap8rkfjs9dkg5rdw95xqmsk1qk9lss1yl883d8ewvl95blye283f328lggqk3yhwo4tfme1tnziysh8i0e8bw2tkt1qyf2sagx6rt2aizryxl\",\n  \"primaryKey\" : \"rlvcdv19kmackp3o3i2oihmkyto9jhttf58dci45v0bu2fe6vmqk75cadth1fy5gvok9fr32rilsl0wuz6ghlkmfma\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "22e39c23-1102-4881-8667-8eefeac09ebc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:44.450834Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_ListKeys",
          "schema" : {
            "type" : "object",
            "properties" : {
              "keyName" : {
                "type" : "string",
                "description" : "A string that describes the authorization rule."
              },
              "primaryConnectionString" : {
                "type" : "string",
                "description" : "Primary connection string of the created namespace authorization rule."
              },
              "primaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit primary key for signing and validating the SAS token."
              },
              "secondaryConnectionString" : {
                "type" : "string",
                "description" : "Secondary connection string of the created namespace authorization rule."
              },
              "secondaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit secondary key for signing and validating the SAS token."
              }
            },
            "description" : "Namespace/Relay Connection String"
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "3c0eea75-53e2-4d72-a0a0-332fa2f87ef4",
    "name" : "Deletes a namespace authorization rule. - 204",
    "request" : {
      "urlPath" : "/subscriptions/1602/resourceGroups/Rachal+Cronin/providers/Microsoft.Relay/namespaces/Clark+Hills+V/authorizationRules/Dr.+Von+Bogisich",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "6urxbtputg3bdgz7t8nnjt7vzxe3o37ephpfo1sh5j3dcfaac40tvof6bv93rrzgkyax80h5tciooa0rsau794ncdkadtqiivkq2drqvqatb5p04yg5jlax6mp"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "3c0eea75-53e2-4d72-a0a0-332fa2f87ef4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:44.450412Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_DeleteAuthorizationRule"
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "1b8df809-46be-4c92-80d2-82100f64e372",
    "name" : "Deletes a namespace authorization rule. - 200",
    "request" : {
      "urlPath" : "/subscriptions/m077/resourceGroups/Wilbur+Tremblay/providers/Microsoft.Relay/namespaces/Theron+DuBuque/authorizationRules/Gillian+Kling",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "ojxkovgme0j0yvqunyd4qz2mo8himnjq3qmt344d0s7v7gem0j7jablbit83av7w4kifplqgooj3o814dg60j5ru8k6sthtjhlylj4ms1nv52a68o27k2jarixyrryro3x0aojo8t6sn8naxmgcpbnzr8zstv9qduo64d9r1ihkmaodfr0zw01512v0r9mu6"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "1b8df809-46be-4c92-80d2-82100f64e372",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:44.450169Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_DeleteAuthorizationRule"
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "eae0df1b-2c95-4aa7-8f81-75e1a09c7a4b",
    "name" : "Creates or updates an authorization rule for a namespace.",
    "request" : {
      "urlPath" : "/subscriptions/nxd0/resourceGroups/Miss+Fausto+Quitzon/providers/Microsoft.Relay/namespaces/Temeka+Hintz/authorizationRules/Oleta+Von+DDS",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "dcg6x85vclnysbl3v5tvtqnu7tl54gex"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Dr. Enedina Mueller\",\n  \"id\" : \"8rkd\",\n  \"type\" : \"g6c0qo3z61e7olx00iksnbjsln8iczlsp64zfiwphbeplch8saaykh0oten5fvsjtfve4iywocy1g2njshs37ogzni5zz8z6nydyzktguseniz4818rfyizdn30dnunatmmeffimkmi6hnzw\",\n  \"properties\" : {\n    \"rights\" : [ \"Listen\", \"Manage\", \"Send\", \"Send\", \"Listen\", \"Listen\", \"Listen\", \"Listen\" ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eae0df1b-2c95-4aa7-8f81-75e1a09c7a4b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:44.449919Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_CreateOrUpdateAuthorizationRule",
          "schema" : {
            "properties" : {
              "properties" : {
                "required" : [ "rights" ],
                "type" : "object",
                "properties" : {
                  "rights" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    "description" : "The rights associated with the rule.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "Manage", "Send", "Listen" ]
                    }
                  }
                },
                "description" : "Authorization rule properties."
              }
            },
            "description" : "Description of a namespace authorization rule.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "8fb8f5e5-8402-402d-bc5b-839a70cd94c8",
    "name" : "Authorization rule for a namespace by name.",
    "request" : {
      "urlPath" : "/subscriptions/b599/resourceGroups/Connie+Turcotte/providers/Microsoft.Relay/namespaces/Sabina+Runolfsson/authorizationRules/Katherin+Heidenreich+Sr.",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "1p1j4yv5zmqcf4elgubm9ctg9o2s78k6zge0ie8k49"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Fransisca Schmitt V\",\n  \"id\" : \"4f9a\",\n  \"type\" : \"rpjpmsa2flweu7r3xiubgxh1c8ge9dttmj4qm55tp9sn4w0eme7d4\",\n  \"properties\" : {\n    \"rights\" : [ \"Listen\", \"Listen\", \"Manage\", \"Listen\" ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8fb8f5e5-8402-402d-bc5b-839a70cd94c8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:44.449447Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_GetAuthorizationRule",
          "schema" : {
            "properties" : {
              "properties" : {
                "required" : [ "rights" ],
                "type" : "object",
                "properties" : {
                  "rights" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    "description" : "The rights associated with the rule.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "Manage", "Send", "Listen" ]
                    }
                  }
                },
                "description" : "Authorization rule properties."
              }
            },
            "description" : "Description of a namespace authorization rule.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "affe99c4-44fb-4a3b-b55f-02f4d366a7f0",
    "name" : "Authorization rules for a namespace.",
    "request" : {
      "urlPath" : "/subscriptions/gv4y/resourceGroups/Elaina+Lind/providers/Microsoft.Relay/namespaces/Lanell+Schmidt+DDS/authorizationRules",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "x0vrbtkuvi6joyh0tykyxvwy57fturr5bncs"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Nicky Ward\",\n    \"id\" : \"l4l0\",\n    \"type\" : \"c6m60gufgjo27z8ifrhg4f32fc9afqomc7jlqa7ngjvzjya6h0hy0b59s6pzb4pdlh3b86rijr2w04z7m5n0tff51v4hiyfj8s3rhjs0c8ilygnznce30ntaj52wcey7g93xz7k94ovxcnags7zm5vzotor6leztx7q3pky\",\n    \"properties\" : {\n      \"rights\" : [ \"Send\", \"Manage\", \"Send\", \"Send\", \"Send\", \"Listen\" ]\n    }\n  }, {\n    \"name\" : \"Dr. Faye Cole\",\n    \"id\" : \"icw7\",\n    \"type\" : \"ysd8knnfs73ffm4chu10xy4ha13qwztiv4hry6a7gvjuo4anaw7wpqq1qb6ovc6dqnzd9owxm36hbhcyb1tu969yjrvq8ye5m2fra7i2m0tlp59l0zgd1eu0slk6ldrvsgiipxi50m3vmczunfgboajxp7s5rleqfq38q0hntwkxu38smw4yzilvuzhjtjzm783d\",\n    \"properties\" : {\n      \"rights\" : [ \"Send\", \"Send\", \"Send\", \"Send\", \"Send\", \"Listen\" ]\n    }\n  }, {\n    \"name\" : \"Oliver Trantow\",\n    \"id\" : \"r4m9\",\n    \"type\" : \"yxohv7knvnmfqns5c4xgcam4cg1ek309k9bpdewr0jrp2jqw0nb4q68zwm1mkjltb98y4\",\n    \"properties\" : {\n      \"rights\" : [ \"Send\", \"Listen\", \"Manage\", \"Manage\", \"Send\", \"Listen\", \"Listen\" ]\n    }\n  }, {\n    \"name\" : \"Charity Koch MD\",\n    \"id\" : \"w934\",\n    \"type\" : \"izrlxxz4bxm0ickmjkcszkr160egsrkomgcxo9gbx2gkbn2oetf93m61y98w94cf0uxnbhns3k761fslwkndiqa4ehx81shjob66ulx6bvg9hkysu8iwj4fnsfl9lv4fu4cy2ytyjzh3maj2wa7irg81eh\",\n    \"properties\" : {\n      \"rights\" : [ \"Send\", \"Listen\", \"Send\" ]\n    }\n  }, {\n    \"name\" : \"Mrs. Malissa Treutel\",\n    \"id\" : \"00xe\",\n    \"type\" : \"er290qhiyzn46g1ujlnhifcdungx671mc03vjexse06x08qz9nzyzxjqjcioqrtrf82dn7o4oq7jcdqy6t19v2uyifk5bj26umqlcx1lr7rc65x4hgvkai5pxfrk3zb017bp2w3gzvepqya4ykxt0eckspy8jgmz5uuvst04osr7rqzrpkb6ookzh5q36g6y14\",\n    \"properties\" : {\n      \"rights\" : [ \"Send\", \"Listen\" ]\n    }\n  } ],\n  \"nextLink\" : \"p1cmttozb8j6qe5w0cet4ry23cx30fn58d6n9gssbq1jso6b0dcc5u06xuud0g66yp3upwt1o03fqa87afag1loxfaqw77w7dwgferxnuz957ejk2nevfoytfsf7mm9urmsabn9s52rzxtnjc5\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "affe99c4-44fb-4a3b-b55f-02f4d366a7f0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:44.448999Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_ListAuthorizationRules",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if value contains incomplete list of authorization rules."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the list authorization rules operation.",
                "items" : {
                  "$ref" : "#/components/schemas/AuthorizationRule"
                }
              }
            },
            "description" : "The response from the list namespace operation."
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "2aa0c4c2-0c7b-4c03-91ba-f25cff315c54",
    "name" : "Creates or updates a namespace. Once created, this namespace's resource manifest...",
    "request" : {
      "urlPath" : "/subscriptions/fysl/resourceGroups/Miss+Joette+Kerluke/providers/Microsoft.Relay/namespaces/Dr.+Yoshie+Gusikowski",
      "method" : "PATCH",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "k7x4naozd8ko7o6rfdz6qih2flesmasxh"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"location\" : \"ypetnaccg3natpey5g2gcuo0xq0vbxlcb5p1klpd3tp03zmm6wqgnbyw0rnok7iek2a7y8cafausgmef6f9sexsmisfopjl33somuny72cunzmpxcmwz0dqe194iavh7azxmj96jilhsgenblvo2dm1sj327sx3pyg8k6jdwr8vb\",\n  \"sku\" : {\n    \"tier\" : \"Standard\",\n    \"name\" : \"Standard\"\n  },\n  \"properties\" : {\n    \"createdAt\" : \"2022-10-22T16:39:48.447Z\",\n    \"metricId\" : \"tt12\",\n    \"serviceBusEndpoint\" : \"w90i8wytnh2za943xf7l0rqblofp4ejfbgnwhxbk7s1m32dehu5y7rg0gqc5508pko4m7e\",\n    \"provisioningState\" : \"Unknown\",\n    \"updatedAt\" : \"2022-09-17T22:02:30.447Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2aa0c4c2-0c7b-4c03-91ba-f25cff315c54",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:44.447936Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Update",
          "schema" : {
            "properties" : {
              "properties" : {
                "$ref" : "#/components/schemas/RelayNamespaceProperties"
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Description of a namespace resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "e18163cb-2f44-44c6-9e43-48b2e99e33ce",
    "name" : "Creates or updates a namespace. Once created, this namespace's resource manifest...",
    "request" : {
      "urlPath" : "/subscriptions/5xzw/resourceGroups/Hipolito+Grady/providers/Microsoft.Relay/namespaces/Liliana+Satterfield+III",
      "method" : "PATCH",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "unn7ngbtr3kqa192zgpr4w159zx8hftf92rjgcexoyz9a24o0se1o47wud9bl6v3qcxb114g1o1my1m6zo796iyw1k2afp683v209696ix9wb68ob0k4qvip194prlowz1xu9kswfi68c8ifwxudb0mgk3nrywbeeeus8w7"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"location\" : \"bf1ud47664g0o978cpyv8nae1gm8holzfm7iqtdwx1kh41o0g9yh9ogh55h2p4j5wt6s0cjou73uul7xogsstz8nwy3iaapfmgg0cye65r6ubdcl6lwftyzcwl904qq1agbw6gaoecbze1rbnwv0pydgs1dk6r3r\",\n  \"sku\" : {\n    \"tier\" : \"Standard\",\n    \"name\" : \"Standard\"\n  },\n  \"properties\" : {\n    \"createdAt\" : \"2022-04-26T09:26:57.447Z\",\n    \"metricId\" : \"0c5u\",\n    \"serviceBusEndpoint\" : \"6r6xmk1u660n8c6w9t7j42a9h0ihg1rywtffnojacbka45n2bl5sv25f3eg6ms6gnpi5t6wu8kg5rgw2\",\n    \"provisioningState\" : \"Created\",\n    \"updatedAt\" : \"2023-04-29T15:14:23.447Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e18163cb-2f44-44c6-9e43-48b2e99e33ce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:44.447546Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Update",
          "schema" : {
            "properties" : {
              "properties" : {
                "$ref" : "#/components/schemas/RelayNamespaceProperties"
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Description of a namespace resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "64b37d43-1ef1-40d9-8b2d-2a2af7f05383",
    "name" : "Deletes an existing namespace. This operation also removes all associated resour... - 204",
    "request" : {
      "urlPath" : "/subscriptions/sw03/resourceGroups/Keven+Lockman/providers/Microsoft.Relay/namespaces/Lucie+Senger",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "mg856c7vz1jgzur5uvtudbxk3mydqr2i7txje4j0o70wakme08njvbwe1jlk716dz5wp8wiws5rfaclr817lf0cx6z5pir1u5lvdek0fgn47lwod0w6og42xf98ob8ihf47n7oupnujide0v9x1gedtrgu7gafuy2fdl3s3jfm39xckhu3y"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "64b37d43-1ef1-40d9-8b2d-2a2af7f05383",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:44.447108Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Delete"
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "b6d93099-fdc3-4997-8c47-4cfbd4194009",
    "name" : "Deletes an existing namespace. This operation also removes all associated resour... - 202",
    "request" : {
      "urlPath" : "/subscriptions/5099/resourceGroups/Mrs.+Sindy+Runte/providers/Microsoft.Relay/namespaces/Mrs.+Holly+Sanford",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "v3cpr2ij006wcpu2qul93s6gaegrc6izwp270bna7ldlv73qb6b5q2ostypaw5e1k9qoej0k4hu3xwj7vf4x7"
        }
      }
    },
    "response" : {
      "status" : 202
    },
    "uuid" : "b6d93099-fdc3-4997-8c47-4cfbd4194009",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:44.446902Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Delete"
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "a9cf504c-8cc4-470c-b00e-03287c7f9c3b",
    "name" : "Deletes an existing namespace. This operation also removes all associated resour... - 200",
    "request" : {
      "urlPath" : "/subscriptions/7a8f/resourceGroups/Kristofer+Grimes/providers/Microsoft.Relay/namespaces/Newton+Gutkowski",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "kuqk1s725k404gynd2bsvd0ch7r6o87kkygu7s83u5gauaxjk17oefojc9mhrj9vx4g1zuctxdwbywg3sy0nj3g8fkqwx9ia7aa9ftqqtsa25irpojwm8d9n6nzb1t87puiz1v38sgfr6hl323poctzw56pzc87coz4i052houjf91u70a15ju5i"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "a9cf504c-8cc4-470c-b00e-03287c7f9c3b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:44.446685Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Delete"
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "f03ec0d9-636b-4aae-a28f-e8a04078a9f3",
    "name" : "Create Azure Relay namespace.",
    "request" : {
      "urlPath" : "/subscriptions/yf14/resourceGroups/Audra+Prohaska/providers/Microsoft.Relay/namespaces/Lilia+Muller",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "v3l2yb2b421u3yl5poam73o9es4uyv1nt94i1bhhb0zftoiurzb7fp0i67mwrv5kvakpvsfif5yb37r8zffkwph0eo8kji0fi3h6kckigsrjhn06b9ybamss6c2lsw9kqrb34c5qf3rj742s8xozhi8x6roh0"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"location\" : \"1vyvwk1q993o4wkz1nhwjo0ymysekznk4ebdxxw61gxw587bubraux\",\n  \"sku\" : {\n    \"tier\" : \"Standard\",\n    \"name\" : \"Standard\"\n  },\n  \"properties\" : {\n    \"createdAt\" : \"2022-08-07T19:56:51.446Z\",\n    \"metricId\" : \"i3l9\",\n    \"serviceBusEndpoint\" : \"m4ljf8g\",\n    \"provisioningState\" : \"Deleted\",\n    \"updatedAt\" : \"2022-06-03T14:57:48.446Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f03ec0d9-636b-4aae-a28f-e8a04078a9f3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:44.446456Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_CreateOrUpdate",
          "schema" : {
            "properties" : {
              "properties" : {
                "$ref" : "#/components/schemas/RelayNamespaceProperties"
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Description of a namespace resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "8f9d6ec6-5ef1-45d0-9e78-1c858551beb8",
    "name" : "Create Azure Relay namespace.",
    "request" : {
      "urlPath" : "/subscriptions/pmal/resourceGroups/Diana+Metz+I/providers/Microsoft.Relay/namespaces/Dr.+Merle+Vandervort",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "0uksxhfiadq5seegob8y9njj479tjutdqes02cbbbkhtac6nkbb4nmt87pm8rlfv2a4nxtkk9o5e2oliuhpqc4bqorpsp351ybrxado8y1d3hakr8xbiphpengjmbpk5wzqvkfxxwvaw3lt04ajrlgzokccndqk0ir4cgxp1ddf589t9"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"location\" : \"9pzv50oh4ffg4af658bxxitnkvfslpjzkgjeqehavfp07yp7d0yi6995x1pkkm5oqxyb43inbhhqvc8xuvk7h2hakd\",\n  \"sku\" : {\n    \"tier\" : \"Standard\",\n    \"name\" : \"Standard\"\n  },\n  \"properties\" : {\n    \"createdAt\" : \"2023-02-02T19:29:39.445Z\",\n    \"metricId\" : \"qk61\",\n    \"serviceBusEndpoint\" : \"zo81ofitsellbqmpo6vpnmjdd5aukpihvxeffzwgfbu9iluqmj2pvb\",\n    \"provisioningState\" : \"Created\",\n    \"updatedAt\" : \"2023-01-25T09:18:50.445Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8f9d6ec6-5ef1-45d0-9e78-1c858551beb8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:44.446086Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_CreateOrUpdate",
          "schema" : {
            "properties" : {
              "properties" : {
                "$ref" : "#/components/schemas/RelayNamespaceProperties"
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Description of a namespace resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "dfc076aa-8f2f-4fae-ab6d-91cf038af91d",
    "name" : "Returns the description for the specified namespace.",
    "request" : {
      "urlPath" : "/subscriptions/5989/resourceGroups/Brianna+Armstrong/providers/Microsoft.Relay/namespaces/Pierre+Altenwerth",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "wq7sadfw6xm3c0in8oe5uxw8nv52ihr4igmot1kmejbk4wtn66gw0dw0kcwhf1tt7f3cg3327rqqbr7n72oulq3tdn0z3qs9c58948wl877uubvrhwnqpj63kacdftry8kymw3ajexi36u6r5cud6t86e8rr5hjdd7u"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"location\" : \"nrjvfixb7delrz1n7cfshua9gweakxny94md3ctkx3a670sdi58oif3xntdn50ryyv6325bz6ks0y5xfli48sufp7bn3367jp2r4kjvhqwgmcsdx1yszm3g5r1n13es594uls8hk0p7djnwx467vd1cxxf2q8aqxgiuti\",\n  \"sku\" : {\n    \"tier\" : \"Standard\",\n    \"name\" : \"Standard\"\n  },\n  \"properties\" : {\n    \"createdAt\" : \"2023-11-23T03:57:50.445Z\",\n    \"metricId\" : \"z667\",\n    \"serviceBusEndpoint\" : \"x5nsr47hswkgozz0zn13ftcm\",\n    \"provisioningState\" : \"Unknown\",\n    \"updatedAt\" : \"2022-08-12T12:39:13.445Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dfc076aa-8f2f-4fae-ab6d-91cf038af91d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:44.445691Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Get",
          "schema" : {
            "properties" : {
              "properties" : {
                "$ref" : "#/components/schemas/RelayNamespaceProperties"
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Description of a namespace resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "1795c2ab-dd38-4677-a30e-2c7cfc67fe5e",
    "name" : "Lists all the available namespaces within the ResourceGroup.",
    "request" : {
      "urlPath" : "/subscriptions/p154/resourceGroups/Delpha+Crona+Jr./providers/Microsoft.Relay/namespaces",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "iv0snq4vbu92uvk1r3a4zgjaaix9g0muobvchi5glyg702prrn1cyxesjrn3th0d947atb1bzclntfssn63h0ayemfhe63gp9ivqid9wl"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"location\" : \"ir9f4htdjfjt\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\"\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2023-11-17T15:25:04.444Z\",\n      \"metricId\" : \"6g80\",\n      \"serviceBusEndpoint\" : \"ofquziocndx36mj4njiflqiqeyha65t5if3744p26b2u2nob\",\n      \"provisioningState\" : \"Succeeded\",\n      \"updatedAt\" : \"2022-06-11T18:12:51.444Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"wgwvesq5pn9k7ook4sismt0aoz0x911u87lsdk63rvgtwjust8l3eku0cj3rw7c57l8rchj61s0oet4aoti3xsekmyxx2ma33qfog035c\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\"\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2023-05-05T13:41:38.444Z\",\n      \"metricId\" : \"z309\",\n      \"serviceBusEndpoint\" : \"z96z0bn0xhljd48pjzer4rroyo2wb5nuz74nxb3mlcnzkszgxec0dm\",\n      \"provisioningState\" : \"Succeeded\",\n      \"updatedAt\" : \"2023-02-13T16:25:25.444Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"cwmb2zymihirjpjhqq2f9t1\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\"\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2022-11-16T03:03:31.444Z\",\n      \"metricId\" : \"fwoq\",\n      \"serviceBusEndpoint\" : \"jquluzg4oyx6o3rc6ux4x1sqqiip73n6\",\n      \"provisioningState\" : \"Created\",\n      \"updatedAt\" : \"2023-02-05T07:55:19.445Z\"\n    },\n    \"tags\" : { }\n  } ],\n  \"nextLink\" : \"clar99tod1p4vcblcu5bz0m2d0gwuucrh8vm6nrd8c4jnnhwb66ccejbjm8zl8d\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1795c2ab-dd38-4677-a30e-2c7cfc67fe5e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:44.445291Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_ListByResourceGroup",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if value contains incomplete list of namespaces."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the list namespace operation.",
                "items" : {
                  "$ref" : "#/components/schemas/RelayNamespace"
                }
              }
            },
            "description" : "The response from the list namespace operation."
          }
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "7ab4cd46-26f4-4b5c-8502-125f37582ce3",
    "name" : "Lists all the available namespaces within the subscription regardless of the res...",
    "request" : {
      "urlPath" : "/subscriptions/b49y/providers/Microsoft.Relay/namespaces",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "gk1shsgqvv3lps6b71ob1bo4kuq9a5kloch0sn50x06e1ebtttou0xdz2q4icj615s6qj6794xnf9t04q9u1cmwn7ltcf0ffrz00dp7u5v64tgmfusk9p5wpx7rc"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"location\" : \"fn9i02cjnrdbymya9o4j0yebr2l1w2vlfnto5ygy6pbvw8rm2mlsn10yca07kif01631hwtdp0cjvrz1j71d60jnu1jhacg3ytistldh7gfxe0uplhcn2btepz05e3iu6vwh38f1dhd3kx8rnicl4fwhe85m4rd\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\"\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2023-10-20T14:58:54.443Z\",\n      \"metricId\" : \"28i4\",\n      \"serviceBusEndpoint\" : \"80397qj25gcj7n13wvpfe\",\n      \"provisioningState\" : \"Deleted\",\n      \"updatedAt\" : \"2023-12-22T09:50:14.443Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"n705xfteeleq68cf74yr1zefbplg1f8a607s3oi912zxdlofjsm7mm7h169ohw3\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\"\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2023-06-19T12:12:53.443Z\",\n      \"metricId\" : \"p138\",\n      \"serviceBusEndpoint\" : \"x37lutpq0t71wtk2n143bx28sho1alxnx9nlb9glypvko9fzxsjdf3umkssp\",\n      \"provisioningState\" : \"Updating\",\n      \"updatedAt\" : \"2023-07-08T07:08:26.444Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"3mj3p1z01sbbxcqsodxzw70rf5w7ovrayfc8gs2730889hfw6rozo4as68zuuc83pnmn7kokn0rha3gqzmmjos01wtr2gpxccetyfiv2gj5\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\"\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2024-02-17T13:20:42.444Z\",\n      \"metricId\" : \"2g3u\",\n      \"serviceBusEndpoint\" : \"51vpgklv24bjfmfawrc5q49zs5uh76u0kevbdhxgeeyxgaqw5br6md451mkrdjuv0qkjl3hl5brkcc5mhg63ush91uynpuux9eqew5fxle2yh2lx8n0w553ey03d8g3lv9wrerms3g3kjt901kxfoleda0lwsq3khog4cgjf6c\",\n      \"provisioningState\" : \"Updating\",\n      \"updatedAt\" : \"2023-11-05T01:53:08.444Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"5e9u2e3253zuh9avbi2u876arv4prculciom65e6yee0tvhac2e1a6xzix9xlotnc3qhn82408ajnz1sca8636u490dg3vw3oe0h1belg1qnvzue2mny7idm3cru\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\"\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2023-05-23T04:57:00.444Z\",\n      \"metricId\" : \"1qc3\",\n      \"serviceBusEndpoint\" : \"wme9vtxwh30f3fyfbqvt3jko6eyavlxmbvn4mra\",\n      \"provisioningState\" : \"Updating\",\n      \"updatedAt\" : \"2023-07-05T11:22:14.444Z\"\n    },\n    \"tags\" : { }\n  } ],\n  \"nextLink\" : \"0curnf1f01ad1ssv3k2udxy4n5yh6ryu3vgrvc48xxobs8lk5yl910s5fy5lcu1rgc8v66hb2f1u2wwxznimtc9rdzg7ox1ksqh6478ctjkxo6e88bc1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7ab4cd46-26f4-4b5c-8502-125f37582ce3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:44.444589Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_List",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if value contains incomplete list of namespaces."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the list namespace operation.",
                "items" : {
                  "$ref" : "#/components/schemas/RelayNamespace"
                }
              }
            },
            "description" : "The response from the list namespace operation."
          }
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "3eeb2890-cd29-428d-b6fb-7f021b7a6893",
    "name" : "Check the specified namespace name availability.",
    "request" : {
      "urlPath" : "/subscriptions/4z04/providers/Microsoft.Relay/checkNameAvailability",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "59rfwb2p70hl6n0jws9vlatv8xr3ewbtdze82ftky6g3kq03ke85b0d7njl2ulwb4quyxvkqmxi4fblk2vjegtswg53iq3ea9ywfemvy5zhch"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"reason\" : \"InvalidName\",\n  \"nameAvailable\" : false,\n  \"message\" : \"Illo ullam dolores error exercitationem dolores voluptas. Ut eveniet consequuntur totam error neque. Architecto aut quae eum. Molestiae molestiae repudiandae et et sit inventore sint. Omnis deleniti l\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3eeb2890-cd29-428d-b6fb-7f021b7a6893",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:44.443678Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_CheckNameAvailability",
          "schema" : {
            "type" : "object",
            "properties" : {
              "message" : {
                "type" : "string",
                "description" : "The detailed info regarding the reason associated with the namespace.",
                "readOnly" : true
              },
              "nameAvailable" : {
                "type" : "boolean",
                "description" : "Value indicating namespace is available. Returns true if the namespace is available; otherwise, false."
              },
              "reason" : {
                "$ref" : "#/components/schemas/UnavailableReason"
              }
            },
            "description" : "Description of the check name availability request properties."
          }
        }
      }
    },
    "insertionIndex" : 42
  }, {
    "id" : "4a2a995a-bde9-46a6-a768-5ed8aa8d1116",
    "name" : "Lists all available Relay REST API operations.",
    "request" : {
      "urlPath" : "/providers/Microsoft.Relay/operations",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "9vjdtixzxxgqcc6fmyu9207ng273krgz92wt3y6d0spz9scqyhnp4amizl3lw9ej352224nir88q9t7hjnbl186qo0nbsfb6ou926rcxy225bpeghvylp53ymrbrxmidwr1ngnkbx2l673emca4dqpneitjom50bz56zwwfbocjz2frgc42x5o4z5oop"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"display\" : {\n      \"provider\" : \"zmzmopi5tncilgj97xj5lsollmp3r44d4hq7gxm3cmo2vlrrz4dxfjw2cp06lc67opwewvfgcjipq5uhaut129oknl9yeczbgnm58emo47obaj0odkq2rzcf7lxw6uwp3pcxn307t5ihf0dm7pdbygpjc6jb106ty6\",\n      \"resource\" : \"m4ej6x591qgoo918qk98c7qvq2tykiyyn5n4j2d30qikulppxjk9jkz5dz294f05yr0qwwphpczr8ia0e2pe3k0hf9qdapuglqyn5mjzxuc1b5m0ck9jtuv73jeuflc\",\n      \"operation\" : \"as27vn9c0ojyiig103l5fvanill351paao3lx14llbrba5ys5mlpywzcbqvm\"\n    },\n    \"name\" : \"Marty MacGyver I\"\n  }, {\n    \"display\" : {\n      \"provider\" : \"9tfhfgz1mhhoeem5bhbwhrntmhc7a1x191386v0t0ah9mwgvtx8lh7xj419o3e1rvzq4tqw5r8t0xqv28c2kuplqojpueat8v55kpf98w0dpoxflumrrorj\",\n      \"resource\" : \"plniqojkppoefyc1h1m0fregholn2qtlu5gb87qp1winz2c1iwhxcpsaq0h7izlk85551c4qnno78hd6td1i0jci5b30eoknirdt4rybtzy2frj06nmumsldzp359j62k\",\n      \"operation\" : \"x6t6l50mcfrq6yxd4l7koyyr5w07iy299ycpa6t8ax10zo0d6rhd8upq9owwvr26swy5pi70z6n0ili4bth5zigz0695tlbn63v21or5nxhqnl79y6pgpnmc4wg5f4wpejrg5o83zizu6kyklfii2fol5iyhxoumaqqnw2jejronwi39tfovi8t\"\n    },\n    \"name\" : \"Mr. Lottie Lowe\"\n  } ],\n  \"nextLink\" : \"zqv41075rqz\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4a2a995a-bde9-46a6-a768-5ed8aa8d1116",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:44.443287Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Operations_List",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "URL to get the next set of operation list results if there are any.",
                "readOnly" : true
              },
              "value" : {
                "type" : "array",
                "description" : "List of Relay operations supported by resource provider.",
                "readOnly" : true,
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                }
              }
            },
            "description" : "Result of the request to list Relay operations. It contains a list of operations and a URL link to get the next set of results."
          }
        }
      }
    },
    "insertionIndex" : 43
  } ]
}