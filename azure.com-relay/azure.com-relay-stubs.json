{
  "mappings" : [ {
    "id" : "d69f6bd2-f2db-3115-8de0-36e59af6b309",
    "name" : "Regenerates the primary or secondary connection strings to the WCF relay.",
    "request" : {
      "urlPath" : "/subscriptions/1zk1/resourceGroups/Mammie+Swaniawski+PhD/providers/Microsoft.Relay/namespaces/Mrs.+Ivan+McClure/wcfRelays/Dorthea+Sauer/authorizationRules/Kurt+Leuschke+MD/regenerateKeys",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "kiwkhhp6n95c21nxb3ajtedf22quytiahqag4hk2exw0ta64dcz24uc3hgay62bmo9i344rv89itt028zpeeuqs606m5vxqwmh9i0258ik9mnlemyuv5q"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"secondaryKey\" : \"e0s8zfew1act22p1lvk9nkphb7v520jdxeztouhbrlz3s8ftozb2d7e961rx1t09to8frihqzjc2p9rifj1av9jrppzp5m1gf8pass3oudbo14l8psuycfaj8q21qs6h2fb33fxak3sowha2nuq4esxt1mx\",\n  \"keyName\" : \"Miss Marybelle Wiza\",\n  \"primaryConnectionString\" : \"kkxdwgqbur1gjgz0ro2tu692zdjv0pe0z9awwwre4bxje\",\n  \"secondaryConnectionString\" : \"j4kgsq6t5cxou4j4nz6itm10kcvgnwa98b5\",\n  \"primaryKey\" : \"iw30wqkcx533u06q1a8f8mgdndjr934ow31etfia2omk2ytlnoq5bw36dmvrwg4p7igej3vbmsvwoks8n68nuz61ncbr3wul2upfv7upzfjjd3zpvyl4g86ml5xwbiqre8txoi3aa8vfce9ih2v4pbucinvyewzwrb6oi9vbufmq5yy4axt89vfljlbgioehpzhd\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d69f6bd2-f2db-3115-8de0-36e59af6b309",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "WCFRelays_RegenerateKeys",
          "schema" : {
            "type" : "object",
            "properties" : {
              "keyName" : {
                "type" : "string",
                "description" : "A string that describes the authorization rule."
              },
              "primaryConnectionString" : {
                "type" : "string",
                "description" : "Primary connection string of the created namespace authorization rule."
              },
              "primaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit primary key for signing and validating the SAS token."
              },
              "secondaryConnectionString" : {
                "type" : "string",
                "description" : "Secondary connection string of the created namespace authorization rule."
              },
              "secondaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit secondary key for signing and validating the SAS token."
              }
            },
            "description" : "Namespace/Relay Connection String"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "14e81462-da2f-3294-b60b-37246e04e77a",
    "name" : "Primary and secondary connection strings to the WCF relay.",
    "request" : {
      "urlPath" : "/subscriptions/ojd1/resourceGroups/Moriah+Kuphal/providers/Microsoft.Relay/namespaces/Porter+Thiel/wcfRelays/Lauretta+Hettinger+I/authorizationRules/Ms.+Melody+Torp/listKeys",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "2lksb82psbqgh89o6yqxwt7swe0730v7at14d10w7ae09nucxn6ujrojaczqswrunf6bidxsxzm4xgbvbb0wef7x125v3369jz6gwval68abzr9zhw3q56fule8t3i7b4t04p1rfpn2pirz5zkyk1cpi1f21w"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"secondaryKey\" : \"mrv7x5m4wtg5uzjyrpdcy6a8hlllbo6reqtk041gw4z69gq9amwdixu099flgrf0lkbaijo1kusppi2av0ei092ayxshk1f9ceuvpi4xkmmra9ksgxr7ggo6ae\",\n  \"keyName\" : \"Genny Walsh\",\n  \"primaryConnectionString\" : \"r68a7pqvaqipxps6d3b6s4prjwpx43rdfrmgqn8znt4x608h3tqm4ocubsp7zfvlcbb9sfliv\",\n  \"secondaryConnectionString\" : \"d4a5a2pgdml0fmo3ycoxnk7y3qh5so8wye\",\n  \"primaryKey\" : \"x9r6wnaxamgwmynxvsh4ax6f8d6\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "14e81462-da2f-3294-b60b-37246e04e77a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "WCFRelays_ListKeys",
          "schema" : {
            "type" : "object",
            "properties" : {
              "keyName" : {
                "type" : "string",
                "description" : "A string that describes the authorization rule."
              },
              "primaryConnectionString" : {
                "type" : "string",
                "description" : "Primary connection string of the created namespace authorization rule."
              },
              "primaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit primary key for signing and validating the SAS token."
              },
              "secondaryConnectionString" : {
                "type" : "string",
                "description" : "Secondary connection string of the created namespace authorization rule."
              },
              "secondaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit secondary key for signing and validating the SAS token."
              }
            },
            "description" : "Namespace/Relay Connection String"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "b4d50f7c-8716-32b2-bcea-bb848efb1f1f",
    "name" : "Deletes a WCF relay authorization rule. - 204",
    "request" : {
      "urlPath" : "/subscriptions/0o4s/resourceGroups/Kathi+Quitzon/providers/Microsoft.Relay/namespaces/Magan+Boyle/wcfRelays/Delicia+Bradtke/authorizationRules/Marlin+Thompson+V",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "vlmkr3j1w8ih3wejfimt"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "b4d50f7c-8716-32b2-bcea-bb848efb1f1f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "WCFRelays_DeleteAuthorizationRule"
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "c7d28bf3-4e52-3d01-ab07-5fd0e09d4a2d",
    "name" : "Deletes a WCF relay authorization rule. - 200",
    "request" : {
      "urlPath" : "/subscriptions/b9ok/resourceGroups/Mrs.+Marhta+King/providers/Microsoft.Relay/namespaces/Pennie+Kuphal+DVM/wcfRelays/Jasmine+Walter/authorizationRules/Chung+Franecki",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "8vb8av9e6f20pyexu9fzsxj3jlq3z7q7"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "c7d28bf3-4e52-3d01-ab07-5fd0e09d4a2d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "WCFRelays_DeleteAuthorizationRule"
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "72d59e7f-098a-3ef8-a592-03cbec0be9f3",
    "name" : "Creates or updates an authorization rule for a WCF relay.",
    "request" : {
      "urlPath" : "/subscriptions/1h5b/resourceGroups/Ms.+Carlota+Johnson/providers/Microsoft.Relay/namespaces/Tamra+Weissnat/wcfRelays/Joan+Dooley/authorizationRules/Eldon+Brown",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "bdhq52fcx5sb6r2ue1oa7bmvcl38p5vk1fz3djyql762phx1vc2b103pn9o32w6zikqoe36pnyvvcd8lhwv2eqya8zaebh8e75bhloqhs1utyl1w5ixfkuw6bf8dex"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Mr. Jerlene Marquardt\",\n  \"id\" : \"nlo4\",\n  \"type\" : \"6pawnq16nr2vrb643j4brbmpx\",\n  \"properties\" : {\n    \"rights\" : [ \"Send\" ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "72d59e7f-098a-3ef8-a592-03cbec0be9f3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "WCFRelays_CreateOrUpdateAuthorizationRule",
          "schema" : {
            "properties" : {
              "properties" : {
                "required" : [ "rights" ],
                "type" : "object",
                "properties" : {
                  "rights" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    "description" : "The rights associated with the rule.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "Manage", "Send", "Listen" ]
                    }
                  }
                },
                "description" : "Authorization rule properties."
              }
            },
            "description" : "Description of a namespace authorization rule.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "5c5247b7-9cd5-378f-a8ed-9fc2fe0c3830",
    "name" : "Get authorizationRule for a WCF relay by name.",
    "request" : {
      "urlPath" : "/subscriptions/0d53/resourceGroups/Mr.+Shelley+Adams/providers/Microsoft.Relay/namespaces/Lorretta+Greenfelder/wcfRelays/Catharine+Cremin+MD/authorizationRules/Noah+Rath",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "xowy6559e9w6xmmzato1u8zooevyscyyx88w9ayozawsg35d7xvc4nnpwjy94j1m8mnsfba5way0jwu6py4efr3f7jbli3ug6u29ez8s9yo4khv6pju89c4olssakywwchuxwmppgdo2xzzubt75rql"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Miss Damien Schmeler\",\n  \"id\" : \"n708\",\n  \"type\" : \"2866u676kj5fssjqx66qktlzz1x584wy5j18q9c0ialv52qrms6z1ec52rt96cj3imwy65bza1qdx5jub45z5xgzh0h6zsglto\",\n  \"properties\" : {\n    \"rights\" : [ \"Listen\" ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5c5247b7-9cd5-378f-a8ed-9fc2fe0c3830",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "WCFRelays_GetAuthorizationRule",
          "schema" : {
            "properties" : {
              "properties" : {
                "required" : [ "rights" ],
                "type" : "object",
                "properties" : {
                  "rights" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    "description" : "The rights associated with the rule.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "Manage", "Send", "Listen" ]
                    }
                  }
                },
                "description" : "Authorization rule properties."
              }
            },
            "description" : "Description of a namespace authorization rule.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "9aab9926-526f-3689-82c8-ea4eec6f3bf9",
    "name" : "Authorization rules for a WCF relay.",
    "request" : {
      "urlPath" : "/subscriptions/38ff/resourceGroups/Benito+Braun/providers/Microsoft.Relay/namespaces/Patrice+Walsh/wcfRelays/Dong+Friesen/authorizationRules",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "gtrmi1aowo69m6fm312b3aa3i62rvk8pp54hdzspdgwwx7ll9lfy7ytl7jekxrqhie"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Dr. Peg Mueller\",\n    \"id\" : \"56s6\",\n    \"type\" : \"2808\",\n    \"properties\" : {\n      \"rights\" : [ \"Listen\", \"Manage\", \"Listen\", \"Send\", \"Send\", \"Manage\", \"Listen\" ]\n    }\n  }, {\n    \"name\" : \"Wilson Mitchell\",\n    \"id\" : \"0pbo\",\n    \"type\" : \"0muueajqpfl6t807lbqgn4tf438x3ekpmhm90uamfga86scfkajg8ux70gz2k3av36ho9nggiekhgii5obqmqcwgmb5t7s47nf1uyygoc377er1754fei15cp423xdqwq3wkizs6ap3mgembvba2ee517cu757v5blshhe1qsz\",\n    \"properties\" : {\n      \"rights\" : [ \"Manage\", \"Listen\" ]\n    }\n  }, {\n    \"name\" : \"Yong Blick\",\n    \"id\" : \"cwi8\",\n    \"type\" : \"um9d06g7char0v82nq26lgrw6nypdocxn7r0mz30mswpf5lk594v7pyhennizbyzur7k3evjlu85murg9ranc3v7a1b60ngelhsxw0esznera39uhi3a22e0jrgfoqd6upmkt86743rgu4hgn4cxi5vtcq29bicmwvu0lzljy3r2c0pxxb8j8sm29a828vzo\",\n    \"properties\" : {\n      \"rights\" : [ \"Listen\", \"Listen\", \"Send\", \"Listen\" ]\n    }\n  }, {\n    \"name\" : \"Willie O'Connell\",\n    \"id\" : \"jlp0\",\n    \"type\" : \"33cckkh16c044k0d08c7y3ygwxt82xlj31d9ssrkjqodlvsci9dulstouu1mnohu7cnw8zbbtr92cu5ohv156bm77vdm7t1s251lzrvua6kt6f5tp8nl4wnceloe66lu97krme1aw857m5e0vxw85cer8svno65bbzwgxebyqcztj8hltl7b\",\n    \"properties\" : {\n      \"rights\" : [ \"Listen\", \"Send\", \"Manage\", \"Send\" ]\n    }\n  }, {\n    \"name\" : \"Klara Kilback\",\n    \"id\" : \"q71z\",\n    \"type\" : \"kcd0h18v09x73thb2txvqka5d1ngycf4hjf7gdyazoynazyjdnnxf002c0fcun95c1qua1vx0olglbf33u0c2leczt36xwy1m3earoobu4\",\n    \"properties\" : {\n      \"rights\" : [ \"Manage\", \"Send\", \"Manage\", \"Listen\" ]\n    }\n  }, {\n    \"name\" : \"Luther MacGyver I\",\n    \"id\" : \"iqaj\",\n    \"type\" : \"utbsi9ufne364gi4zhb0taiy1o0ilydi751le34bl19w1w4d2jplx05tx0vc7do25zfweydsosy24rxkr6uzvp0cg3rvx476\",\n    \"properties\" : {\n      \"rights\" : [ \"Listen\", \"Send\", \"Manage\" ]\n    }\n  }, {\n    \"name\" : \"Maud Sauer\",\n    \"id\" : \"6ylc\",\n    \"type\" : \"9mbamxdewibcuregiio8yfq1u0bcgo9pepukfx2jhp4gutfr0w8uzwxdn5s843643rfdyf0zfuph1id3hmj81gr2j4im1ji10ymuzjj7iuhqc3p\",\n    \"properties\" : {\n      \"rights\" : [ \"Manage\" ]\n    }\n  }, {\n    \"name\" : \"Millicent Kessler\",\n    \"id\" : \"t13n\",\n    \"type\" : \"1p53zi61wqq8h3emffsijfnbrtt1rpnefa3di1bag9ai5akspxbdc14xzxhkehtgtv7jif1ewiw5u4zb8hxrj4cztkmhj3o4vjwet3k8ms3ehbmx54h3h383mqyy4vrewg2ltzl6rv9o8dnwgg9q03zfq3yz8gvqlepx6sz\",\n    \"properties\" : {\n      \"rights\" : [ \"Manage\", \"Listen\", \"Send\", \"Listen\", \"Send\", \"Listen\" ]\n    }\n  } ],\n  \"nextLink\" : \"uv0li812e6f5er\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9aab9926-526f-3689-82c8-ea4eec6f3bf9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "WCFRelays_ListAuthorizationRules",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if value contains incomplete list of authorization rules."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the list authorization rules operation.",
                "items" : {
                  "$ref" : "#/components/schemas/AuthorizationRule"
                }
              }
            },
            "description" : "The response from the list namespace operation."
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "42317749-2de6-3436-8f5e-1848dda04306",
    "name" : "Deletes a WCF relay. - 204",
    "request" : {
      "urlPath" : "/subscriptions/o4z2/resourceGroups/Breanne+Paucek/providers/Microsoft.Relay/namespaces/Ms.+Nolan+Stoltenberg/wcfRelays/Andre+Boyle",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "n54cv4bl9vz1idtjml3avmyfrf8mr8jl85gs37369kc0q67a4qtvk8absvgswnycj2mr31p19grcqtw"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "42317749-2de6-3436-8f5e-1848dda04306",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "WCFRelays_Delete"
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "aa43dd89-00cd-39e2-9eaf-bf5b64fe9c3e",
    "name" : "Deletes a WCF relay. - 200",
    "request" : {
      "urlPath" : "/subscriptions/zdiz/resourceGroups/Jarrett+Price/providers/Microsoft.Relay/namespaces/Dr.+Markus+Trantow/wcfRelays/Charley+Roob+III",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "dwlc8a0cjrdq9e3p49824sxudk9mt5b8lhl3ew58rwjv1ddd234vfwihramqtrg8avy88nozevj4m3qtbz9ydccdkz1845yu93ugtx2l7wzwgrf2cztpoobuaer8e1eexrdnvklq7sr02vaa5lyslg5o4srt35a02l0g5dri160wqhg340s00rrbz764fa4c9"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "aa43dd89-00cd-39e2-9eaf-bf5b64fe9c3e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "WCFRelays_Delete"
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "d43eae12-b5c2-3b3d-afbf-91a59b38c4cd",
    "name" : "Creates or updates a WCF relay. This operation is idempotent.",
    "request" : {
      "urlPath" : "/subscriptions/6py4/resourceGroups/Shaunte+Fritsch/providers/Microsoft.Relay/namespaces/Mr.+Octavio+Jacobi/wcfRelays/Dr.+Jorge+Grimes",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "fdhcx1fh3gp5ore5njjqs5a4lvkpo5ezqk0a4m9d60z5yuyl8zpx0p3p4wwtl4x7l2yrfwv7u0qjfaxz7yfcihs13hmaong"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Sharri Gorczany\",\n  \"id\" : \"9614\",\n  \"type\" : \"1c910kxt935j371nl3vtqsoc1ksu0zs3fliytykogozwjaa2tegpwl77wcvgjfrm6av364vag7o8yjh7ofu1glw3unoqr2bze\",\n  \"properties\" : {\n    \"createdAt\" : \"2022-06-05T05:54:24.342Z\",\n    \"listenerCount\" : 10,\n    \"isDynamic\" : true,\n    \"relayType\" : \"NetTcp\",\n    \"requiresClientAuthorization\" : true,\n    \"userMetadata\" : \"73o110tio3u896wr5h5alxeajc77et4lsltp8e8qk4bb2ae3faawltso9hlq5aqu81xl7w6gtrkqnf0xia5rk67qp7q3q02\",\n    \"requiresTransportSecurity\" : true,\n    \"updatedAt\" : \"2022-03-23T11:51:07.342Z\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d43eae12-b5c2-3b3d-afbf-91a59b38c4cd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "WCFRelays_CreateOrUpdate",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "createdAt" : {
                    "type" : "string",
                    "description" : "The time the WCF relay was created.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "isDynamic" : {
                    "type" : "boolean",
                    "description" : "Returns true if the relay is dynamic; otherwise, false.",
                    "readOnly" : true
                  },
                  "listenerCount" : {
                    "maximum" : 25,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "The number of listeners for this relay. Note that min :1 and max:25 are supported.",
                    "format" : "int32",
                    "readOnly" : true
                  },
                  "relayType" : {
                    "type" : "string",
                    "description" : "WCF relay type.",
                    "enum" : [ "NetTcp", "Http" ]
                  },
                  "requiresClientAuthorization" : {
                    "type" : "boolean",
                    "description" : "Returns true if client authorization is needed for this relay; otherwise, false."
                  },
                  "requiresTransportSecurity" : {
                    "type" : "boolean",
                    "description" : "Returns true if transport security is needed for this relay; otherwise, false."
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "The time the namespace was updated.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "userMetadata" : {
                    "type" : "string",
                    "description" : "The usermetadata is a placeholder to store user-defined string data for the WCF Relay endpoint. For example, it can be used to store descriptive data, such as list of teams and their contact information. Also, user-defined configuration settings can be stored."
                  }
                },
                "description" : "Properties of the WCF relay."
              }
            },
            "description" : "Description of the WCF relay resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "516c1b30-427d-3a97-843f-f2d89a98768a",
    "name" : "Returns the description for the specified WCF relay. - 204",
    "request" : {
      "urlPath" : "/subscriptions/8cc5/resourceGroups/Shera+Watsica+DDS/providers/Microsoft.Relay/namespaces/Hermila+Koss+II/wcfRelays/Hyman+Thiel",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "dkdhesq132u4osyofjqjr22leo5vn9k8h74onx6z4d4btb1enu7nvvlw8hf7rcqiiytbbcqwcdybty0o6ml63hl4ug7t7s6wohc2894vf1ogvgyd4gvmj264xf8944ks0"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "516c1b30-427d-3a97-843f-f2d89a98768a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "WCFRelays_Get"
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "8c5f7639-9f91-3f1b-ae62-5a98e4a68080",
    "name" : "Returns the description for the specified WCF relay. (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/f9a1/resourceGroups/Loretta+Fritsch+DVM/providers/Microsoft.Relay/namespaces/Williams+Streich/wcfRelays/Ryan+Dooley+III",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "nxqrf3riyfzx21jssxdr1ujbbhpjdofkr2hn88016ahd835jwgcxifjeml25avy40mtx4nw110irqcvdn2ejmlpe5i0jiw5w70j0z"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Dedra Howell\",\n  \"id\" : \"9678\",\n  \"type\" : \"310izzq5vv4cx8miurt4jft2z6mfydxyzbcfm88t0tbv03ux040g931e84jt35740s\",\n  \"properties\" : {\n    \"createdAt\" : \"2023-09-04T10:25:12.341Z\",\n    \"listenerCount\" : 15,\n    \"isDynamic\" : false,\n    \"relayType\" : \"NetTcp\",\n    \"requiresClientAuthorization\" : true,\n    \"userMetadata\" : \"fdsqnfl1y181enxz663c42yzvighxefjhogta5e5xmhmyexagcyn8m6pztsah0sonhgxczytspf86o17g0w\",\n    \"requiresTransportSecurity\" : false,\n    \"updatedAt\" : \"2023-09-23T05:02:23.341Z\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8c5f7639-9f91-3f1b-ae62-5a98e4a68080",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "WCFRelays_Get",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "createdAt" : {
                    "type" : "string",
                    "description" : "The time the WCF relay was created.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "isDynamic" : {
                    "type" : "boolean",
                    "description" : "Returns true if the relay is dynamic; otherwise, false.",
                    "readOnly" : true
                  },
                  "listenerCount" : {
                    "maximum" : 25,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "The number of listeners for this relay. Note that min :1 and max:25 are supported.",
                    "format" : "int32",
                    "readOnly" : true
                  },
                  "relayType" : {
                    "type" : "string",
                    "description" : "WCF relay type.",
                    "enum" : [ "NetTcp", "Http" ]
                  },
                  "requiresClientAuthorization" : {
                    "type" : "boolean",
                    "description" : "Returns true if client authorization is needed for this relay; otherwise, false."
                  },
                  "requiresTransportSecurity" : {
                    "type" : "boolean",
                    "description" : "Returns true if transport security is needed for this relay; otherwise, false."
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "The time the namespace was updated.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "userMetadata" : {
                    "type" : "string",
                    "description" : "The usermetadata is a placeholder to store user-defined string data for the WCF Relay endpoint. For example, it can be used to store descriptive data, such as list of teams and their contact information. Also, user-defined configuration settings can be stored."
                  }
                },
                "description" : "Properties of the WCF relay."
              }
            },
            "description" : "Description of the WCF relay resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "3fdf1971-825d-384b-904e-04c96134781d",
    "name" : "Lists the WCF relays within the namespace.",
    "request" : {
      "urlPath" : "/subscriptions/8825/resourceGroups/Christi+Vandervort+PhD/providers/Microsoft.Relay/namespaces/Ms.+Robby+Stracke/wcfRelays",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "x259icfejoad6d3x46hw6sr1nbymqie6iln6aybzb5jomhjp0kf7n34003sfige9yv6re3dkvxkjsusf8zjzk7egvkquuzwe4c9fbb"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Raeann Carter\",\n    \"id\" : \"4dn0\",\n    \"type\" : \"no84rn8e0xeekzi1023i8c13c22eo8muafmytfq85kzg2f9safokkraj3wtgh6vbtvkwf1jrnllr\",\n    \"properties\" : {\n      \"createdAt\" : \"2022-09-27T21:28:45.34Z\",\n      \"listenerCount\" : 11,\n      \"isDynamic\" : false,\n      \"relayType\" : \"NetTcp\",\n      \"requiresClientAuthorization\" : true,\n      \"userMetadata\" : \"aj1s66c60zmszzbfzjvzeis7x7fvmsyu7mllftfgx3pcx4tbzdlxf46nro0m\",\n      \"requiresTransportSecurity\" : true,\n      \"updatedAt\" : \"2023-11-24T12:22:00.34Z\"\n    }\n  }, {\n    \"name\" : \"Dr. Viva Turcotte\",\n    \"id\" : \"0070\",\n    \"type\" : \"squttmij2kkb1o671h79e4q5bt54bdt56hi0diglxqse4b7ti3ah7tzcvusf0n0y4nkyy1wxi6cm9lbazz53lahvntp863a8oxt9g5s46anmpyrzbk1yyvc63fvhtructv4b903xguivn3riyf18zwnq8v38ks81nwetnhhx48kytmnud8q0r6g\",\n    \"properties\" : {\n      \"createdAt\" : \"2022-10-27T22:25:58.34Z\",\n      \"listenerCount\" : 23,\n      \"isDynamic\" : false,\n      \"relayType\" : \"NetTcp\",\n      \"requiresClientAuthorization\" : false,\n      \"userMetadata\" : \"tw353dlaqhz0ziygg1u2ijscw24j7wasac8gw8nawzjijnykzrxyl0qb2q2d66zawu60y9yqlx537rwhp63modbp8f\",\n      \"requiresTransportSecurity\" : false,\n      \"updatedAt\" : \"2024-01-26T10:20:18.34Z\"\n    }\n  }, {\n    \"name\" : \"Rolande Gutmann\",\n    \"id\" : \"v7k4\",\n    \"type\" : \"cg2zzsqs5bdb42vgl1a2lzvhmxiur82t6ll3os5hcozogqns3xuts7ohhja8ubjw68z2u0hzl024rkb99xb0r2rjp27j6ti8jdcushsiobwf5cf17hdkbrjom2f8obx8v\",\n    \"properties\" : {\n      \"createdAt\" : \"2022-10-13T12:16:06.34Z\",\n      \"listenerCount\" : 0,\n      \"isDynamic\" : false,\n      \"relayType\" : \"NetTcp\",\n      \"requiresClientAuthorization\" : true,\n      \"userMetadata\" : \"tv8e1g95jejat2uokuy5j2pczscg7j7b5kuskqmf19m4lp6gd5u05ec6z65yznux459yqug343t3ychav0d1se54k6cih9kwuh4nw75wya25r1c7h95z5e96wh\",\n      \"requiresTransportSecurity\" : true,\n      \"updatedAt\" : \"2022-05-02T03:22:01.34Z\"\n    }\n  }, {\n    \"name\" : \"Shana Osinski\",\n    \"id\" : \"pqdo\",\n    \"type\" : \"tmstqfubd1c860is2ner36sfacie4nzyj6g0q1xt8cqjm69c3drosbb6hz823j4yiyi7mf56dsu0bwbrbcjvk166o6vxkchbjy1jmmzq6i4mmtonkmel5o0393trpvu6xmq36hi05wvai7jf7astpzpc5rf5a7gv23f0r6rq8w5zwf1ako9b\",\n    \"properties\" : {\n      \"createdAt\" : \"2023-07-11T10:18:56.34Z\",\n      \"listenerCount\" : 12,\n      \"isDynamic\" : true,\n      \"relayType\" : \"NetTcp\",\n      \"requiresClientAuthorization\" : false,\n      \"userMetadata\" : \"f4z52umnf812a2uyfl3v0jmgxbg1ibgr0wbemlhy0l4v172st39897u8\",\n      \"requiresTransportSecurity\" : true,\n      \"updatedAt\" : \"2022-04-21T22:19:33.34Z\"\n    }\n  }, {\n    \"name\" : \"Ms. Chantelle Gerhold\",\n    \"id\" : \"5i96\",\n    \"type\" : \"cpw46y905s2jnzamv9tr0y6bjefr87046hu79dbbilc6ae3nv96xk08p80v\",\n    \"properties\" : {\n      \"createdAt\" : \"2024-01-10T17:30:20.34Z\",\n      \"listenerCount\" : 16,\n      \"isDynamic\" : true,\n      \"relayType\" : \"NetTcp\",\n      \"requiresClientAuthorization\" : true,\n      \"userMetadata\" : \"c5znju1txc65k0yq8sz37mybnwb2p0tpig4hfw05vpbmaao278nhmv5ua4cudo8e2o0sa18xxa5q7k4x208aypunv1fqgi\",\n      \"requiresTransportSecurity\" : false,\n      \"updatedAt\" : \"2024-02-06T11:01:59.34Z\"\n    }\n  }, {\n    \"name\" : \"Leeanna Kutch\",\n    \"id\" : \"50h0\",\n    \"type\" : \"0chl0mtpfhnnobubhqyct6zab123\",\n    \"properties\" : {\n      \"createdAt\" : \"2023-10-12T03:16:33.34Z\",\n      \"listenerCount\" : 20,\n      \"isDynamic\" : true,\n      \"relayType\" : \"Http\",\n      \"requiresClientAuthorization\" : true,\n      \"userMetadata\" : \"xhjaeq7n30fuzfvj0recclodpzy749q9v0ge0poarvhpkj7mglzxvf8reum4whjvvm9i1s88efwwzw65a048h5cz5cp3t49wbsl5bchfmovgerl5dig1z804npd4efwvubgv\",\n      \"requiresTransportSecurity\" : true,\n      \"updatedAt\" : \"2023-11-20T14:32:43.34Z\"\n    }\n  }, {\n    \"name\" : \"Dr. Denver Dare\",\n    \"id\" : \"w737\",\n    \"type\" : \"3d2gbatttaezjfq14ptchh733nev62zotp04cvtb384ymoccb6tfit6wwyn2a5reu3yz63lhtazhmoazavb0yenob75vrndgh4ue9h77dnv\",\n    \"properties\" : {\n      \"createdAt\" : \"2022-11-08T00:13:47.341Z\",\n      \"listenerCount\" : 6,\n      \"isDynamic\" : true,\n      \"relayType\" : \"Http\",\n      \"requiresClientAuthorization\" : true,\n      \"userMetadata\" : \"p1hslkr9hofd8ctjfraj16mtertzdva9a6wj7b7a5srlbj183enyrh03s6lchrbrn03cgw\",\n      \"requiresTransportSecurity\" : false,\n      \"updatedAt\" : \"2024-01-23T13:21:48.341Z\"\n    }\n  } ],\n  \"nextLink\" : \"ik1zn7kjj31z16u0n1ig2mxpnup9oczuq16r5o0iileqoqvgvkw16kv6gayxaawq\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3fdf1971-825d-384b-904e-04c96134781d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "WCFRelays_ListByNamespace",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if value contains incomplete list of WCF relays."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the list WCF relay operation.",
                "items" : {
                  "$ref" : "#/components/schemas/WcfRelay"
                }
              }
            },
            "description" : "The response of the list WCF relay operation."
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "d46e90f7-328d-368a-8c24-d6f4da1a693e",
    "name" : "Regenerates the primary or secondary connection strings to the hybrid connection...",
    "request" : {
      "urlPath" : "/subscriptions/k2pg/resourceGroups/Owen+Dooley/providers/Microsoft.Relay/namespaces/Andera+Okuneva+PhD/hybridConnections/Dr.+Coleman+Ankunding/authorizationRules/Mr.+Cleveland+Smitham/regenerateKeys",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "5n948c79m5r4jitdx3y4159zstrh87pi95eg110rbb5q4k9e75hdvs0gsyo9adiha15uwezx70qbk4fp93a6oupo1wr4qgtgy2sjt5vghtr7oaseqh4fumcbqkvru2m3vj6mh0m4ulobn9jowk7545cichu"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"secondaryKey\" : \"5990unis587eyi4j9quqgxmoahku7quztqy\",\n  \"keyName\" : \"Idell Fahey\",\n  \"primaryConnectionString\" : \"g4cblqp4a4ljkgvd7o6ga7gujk0mx8fyitljzjbhibikagzgf5fwfyxlgbjevzy5xrn2uh6sgstweeuiqimrll4atvqrp22tdys0heki5sg8vc9pt93k00yzz372p\",\n  \"secondaryConnectionString\" : \"h86syz0qd2x6ywtckxsuf44b4gaumd66iskcjbnhngcn1c0fj4f5awhblwv7cxbh58qawla440s2xd4mb60y1e39406onbbyr12c7zxp9t0y5dpq4ve6p8ws4wppon2x7rzzl8t2lchw4ufq0mllq0j0hf9qq9g71\",\n  \"primaryKey\" : \"lezhb62zd30txqouofjw4nqmzeajnkxpz\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d46e90f7-328d-368a-8c24-d6f4da1a693e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "HybridConnections_RegenerateKeys",
          "schema" : {
            "type" : "object",
            "properties" : {
              "keyName" : {
                "type" : "string",
                "description" : "A string that describes the authorization rule."
              },
              "primaryConnectionString" : {
                "type" : "string",
                "description" : "Primary connection string of the created namespace authorization rule."
              },
              "primaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit primary key for signing and validating the SAS token."
              },
              "secondaryConnectionString" : {
                "type" : "string",
                "description" : "Secondary connection string of the created namespace authorization rule."
              },
              "secondaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit secondary key for signing and validating the SAS token."
              }
            },
            "description" : "Namespace/Relay Connection String"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "205c7962-a066-38e3-89a5-fae1f93360eb",
    "name" : "Primary and secondary connection strings to the hybrid connection.",
    "request" : {
      "urlPath" : "/subscriptions/ec57/resourceGroups/Shenita+Abshire/providers/Microsoft.Relay/namespaces/Marina+Kris/hybridConnections/Owen+Mante+V/authorizationRules/Annetta+Lind/listKeys",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "sg2i30yjlvkoekkkwimtcb0ahdud48tc634rj3lwn69gwd4awh8p51o34hwk68kqirijnda98"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"secondaryKey\" : \"7y6cmrcpsd35yws79ukozow07lflj8qnlet0oixl6h6qfyeg8un49yapctlv4mk62f5p0zhskbf6knk2c1tgjjazkp3yp3t7mh2t1m2mqyflrisfpzmppvjup9hivxo9xb83c55q8os\",\n  \"keyName\" : \"Layla Cormier\",\n  \"primaryConnectionString\" : \"hw46lh7txtfh60evsmjc2pk76es0q4vabwj90cs3v7pwozixjcm1hwucmdzhn\",\n  \"secondaryConnectionString\" : \"rp2h2vxgyrk38regc4he4m8aax6spqqobtmuxsu9k9dgnyvlua0g2nasgf2d4g86i6gtn7tqaldhj\",\n  \"primaryKey\" : \"zahry94noqjbhncasermt9ot3xt59hnd73b1o6vl0gzvdcy1fsyed15oikxb1tijhfbgyy079xzgmsny43d0qeqiely0nba8omzqnhup0286nlb4lvic0l\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "205c7962-a066-38e3-89a5-fae1f93360eb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "HybridConnections_ListKeys",
          "schema" : {
            "type" : "object",
            "properties" : {
              "keyName" : {
                "type" : "string",
                "description" : "A string that describes the authorization rule."
              },
              "primaryConnectionString" : {
                "type" : "string",
                "description" : "Primary connection string of the created namespace authorization rule."
              },
              "primaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit primary key for signing and validating the SAS token."
              },
              "secondaryConnectionString" : {
                "type" : "string",
                "description" : "Secondary connection string of the created namespace authorization rule."
              },
              "secondaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit secondary key for signing and validating the SAS token."
              }
            },
            "description" : "Namespace/Relay Connection String"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "cf761d50-ee56-3715-a381-306a9bfe3deb",
    "name" : "Deletes a hybrid connection authorization rule. - 204",
    "request" : {
      "urlPath" : "/subscriptions/y2o7/resourceGroups/Latoyia+Gleason/providers/Microsoft.Relay/namespaces/Mr.+Bong+Stroman/hybridConnections/Mechelle+Hudson/authorizationRules/Mr.+Greta+Hoeger",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "gojeyw82rxsry0rtyji390o16mrgnmewh1z9j31729c0pshsv1xsiaeofv9js6m2wdn1x5h581t3sxiq9pvsuq0ia7jzsilo12n5zx3h4m3z6gjief6izpfl"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "cf761d50-ee56-3715-a381-306a9bfe3deb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "HybridConnections_DeleteAuthorizationRule"
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "ad8a082e-57b2-3c2c-8a95-700acc1af799",
    "name" : "Deletes a hybrid connection authorization rule. - 200",
    "request" : {
      "urlPath" : "/subscriptions/z811/resourceGroups/Jimmy+Willms/providers/Microsoft.Relay/namespaces/Al+Hodkiewicz/hybridConnections/Mr.+Joey+Effertz/authorizationRules/Teresita+Murray+II",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "ucju6h5aiq5qzxkiplnd931s8z8ezn2f8j8g6r2cyech2pinyxnmxvxvqslctpw95hokbucyhq87m"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "ad8a082e-57b2-3c2c-8a95-700acc1af799",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "HybridConnections_DeleteAuthorizationRule"
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "92efdba9-bf47-39a7-851c-8da9a5489d4a",
    "name" : "Creates or updates an authorization rule for a hybrid connection.",
    "request" : {
      "urlPath" : "/subscriptions/iap3/resourceGroups/Celesta+Boehm/providers/Microsoft.Relay/namespaces/Ollie+Paucek/hybridConnections/Sanford+Rath+IV/authorizationRules/Denny+Lueilwitz",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "ofkm1rzw6w47q3hl8fmfhbyq3zzcqjqmao9xjxz5tvmqo9s"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Terese Russel\",\n  \"id\" : \"2556\",\n  \"type\" : \"1u8f30ol7xd6zwgnnah4uy23v6sfnlqteu2hcqoabr0sbjkh5sklhxrt7ffcwz0l7fyjj0iu8mga6c6rxk\",\n  \"properties\" : {\n    \"rights\" : [ \"Send\", \"Manage\", \"Send\", \"Send\", \"Manage\", \"Listen\", \"Send\", \"Listen\" ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "92efdba9-bf47-39a7-851c-8da9a5489d4a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "HybridConnections_CreateOrUpdateAuthorizationRule",
          "schema" : {
            "properties" : {
              "properties" : {
                "required" : [ "rights" ],
                "type" : "object",
                "properties" : {
                  "rights" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    "description" : "The rights associated with the rule.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "Manage", "Send", "Listen" ]
                    }
                  }
                },
                "description" : "Authorization rule properties."
              }
            },
            "description" : "Description of a namespace authorization rule.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "42b4958e-4546-30c0-b5ad-72898ab13891",
    "name" : "Hybrid connection authorization rule for a hybrid connection by name.",
    "request" : {
      "urlPath" : "/subscriptions/nmoi/resourceGroups/Jeremy+Bode/providers/Microsoft.Relay/namespaces/Garry+Emard/hybridConnections/Ryan+Emmerich+V/authorizationRules/Reuben+Schumm",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "ddvspm1o0pcx2o2ewzayvjhv2eirrw5"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Miss Orpha Hintz\",\n  \"id\" : \"2568\",\n  \"type\" : \"o7bjzrovwv71w2v56nvzlwter1vl6n8k2g7ucsq85aiayn7i5511at66wpri74liyrrolxghnln4248c0mxcdm5sfaexryxa9kc2gh8yb\",\n  \"properties\" : {\n    \"rights\" : [ \"Manage\", \"Send\", \"Send\", \"Manage\", \"Listen\", \"Send\" ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "42b4958e-4546-30c0-b5ad-72898ab13891",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "HybridConnections_GetAuthorizationRule",
          "schema" : {
            "properties" : {
              "properties" : {
                "required" : [ "rights" ],
                "type" : "object",
                "properties" : {
                  "rights" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    "description" : "The rights associated with the rule.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "Manage", "Send", "Listen" ]
                    }
                  }
                },
                "description" : "Authorization rule properties."
              }
            },
            "description" : "Description of a namespace authorization rule.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "215fd3d5-e134-31c9-8e82-682c0985eb64",
    "name" : "Authorization rules for a hybrid connection.",
    "request" : {
      "urlPath" : "/subscriptions/ocx5/resourceGroups/Marty+Stehr/providers/Microsoft.Relay/namespaces/Noe+Hickle+II/hybridConnections/Ms.+Nathanial+Reinger/authorizationRules",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "w74j5peeht28w6aonw4ngfmlcy23d3"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Markus Schmidt\",\n    \"id\" : \"fka4\",\n    \"type\" : \"nqzy0x14ju0l7lueruvzgqq5s3bxe0j40slssa1887glxsnoljdwdxcgi20uu0apvd8d7pb1fhr82rndbyb9wlyfh0ucbukt9n2fiib2r05y8xuq6zd2359cuogvuyuy6w147etkmzp3639q9mfj\",\n    \"properties\" : {\n      \"rights\" : [ \"Listen\", \"Listen\" ]\n    }\n  }, {\n    \"name\" : \"Efren Harvey\",\n    \"id\" : \"sk9e\",\n    \"type\" : \"1japfafv2gbv76lh544in7i187c7dxnnaqr55vrj4z9axb6nl9flfo1sgd3tw3ioiddcwselitaoumlca4dw7gqrpvarngk716w8dg52osooyrg5hy77u7smtsqj0ahffvwnjks5ehtkrarmvvju\",\n    \"properties\" : {\n      \"rights\" : [ \"Manage\", \"Send\", \"Send\", \"Listen\", \"Send\", \"Send\" ]\n    }\n  }, {\n    \"name\" : \"Delila Beier\",\n    \"id\" : \"u0mb\",\n    \"type\" : \"hi7oknspv3tf1fpozwcbx83nf0plgooa1b8tbrlujukc79rhdeukjzzguu3kg7ffeflm4j2hw5pvebfu50n74x6ak973t6o9vsxgqcnf4i2fgrgj1y480mz9t5ehd0tx58da9p9nsios\",\n    \"properties\" : {\n      \"rights\" : [ \"Listen\" ]\n    }\n  }, {\n    \"name\" : \"Raymundo Bashirian\",\n    \"id\" : \"zj68\",\n    \"type\" : \"1i75hr7lm3jlzev9276sigosnbilyeqq\",\n    \"properties\" : {\n      \"rights\" : [ \"Manage\", \"Manage\", \"Manage\", \"Send\", \"Manage\" ]\n    }\n  }, {\n    \"name\" : \"Stacey Pfeffer\",\n    \"id\" : \"20jc\",\n    \"type\" : \"k1qkref2ek9i263tvdb28641ye3u7rbd69lnowcj5uueudh43yd7i9rvudetp9tul8ir3a7rgw4tn5wrf4rkui9eoiylb0vp7jyyijit9tgfmaqq0cim8ti9a1omob5lf89kd8aie3oovb5t0gdwyh252jjp9snr2chbpwzn2xfxetmn\",\n    \"properties\" : {\n      \"rights\" : [ \"Manage\", \"Listen\", \"Manage\", \"Send\", \"Listen\" ]\n    }\n  }, {\n    \"name\" : \"Val Raynor\",\n    \"id\" : \"80r9\",\n    \"type\" : \"zp7xccyjbdqdq0b439r5yd68hh25u8h929c3noq7x5hhiix75zvor1kppp8uaka24ui5c62qfta5ww3rz23h0n34y2tqzxtyoa869o92s4g6s2kk6g1kzhf90km0bg35rsn2vsbx0qt3u4r2\",\n    \"properties\" : {\n      \"rights\" : [ \"Listen\", \"Listen\", \"Manage\", \"Listen\", \"Send\", \"Send\" ]\n    }\n  }, {\n    \"name\" : \"Orville Gulgowski II\",\n    \"id\" : \"s302\",\n    \"type\" : \"eb8yen77q736mmqmtd71ai74cdrh49s4crehzf27kxyka6jo1ng6k7hn0tzaihiyk42ywpcaq7k4tshm20zge2tjqkvfknwpnei5vne0kcs3jtfogw5971y79vg1y00ud5rizj4kmbiljgqdo2fnfrqnmycgslv1awehh1dywrqvlx5uzf0pz1uhyllhjvgp6ca\",\n    \"properties\" : {\n      \"rights\" : [ \"Manage\", \"Send\" ]\n    }\n  }, {\n    \"name\" : \"Jere Roberts DVM\",\n    \"id\" : \"inl6\",\n    \"type\" : \"idhlwljym3xye3er6slfwep1g33oe03jxtca4fh916sqcv05qusth9rqda371cs282e60szl5vny2viqhn9stt2r499dsak5b4ahc8kip52yqgtdk7yoqf2ni4tg96qdpnlb4hsmx946v90n2mgta33yubza65qe7vbx4s77ycbzcqzg\",\n    \"properties\" : {\n      \"rights\" : [ \"Manage\", \"Manage\" ]\n    }\n  } ],\n  \"nextLink\" : \"djv0b0slcycwiij2gyj1w6io8gqxaahv6lqiwkancb9prmti3aukr6br4oocfrpwpg02t14s9iux504txxl6mx367npmub96f498k7jrsi78uv6zt244iaaha5f9zjywu0xvrh\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "215fd3d5-e134-31c9-8e82-682c0985eb64",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "HybridConnections_ListAuthorizationRules",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if value contains incomplete list of authorization rules."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the list authorization rules operation.",
                "items" : {
                  "$ref" : "#/components/schemas/AuthorizationRule"
                }
              }
            },
            "description" : "The response from the list namespace operation."
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "6d932eba-6a5f-3906-ac75-44516dd70a58",
    "name" : "Deletes a hybrid connection. - 204",
    "request" : {
      "urlPath" : "/subscriptions/1n8g/resourceGroups/Luke+Spinka/providers/Microsoft.Relay/namespaces/Sung+Wuckert/hybridConnections/Elicia+Metz",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "lxg9enxs313uvtgqd6xv2nrwmey8sa610mnmzr4uu2gdkriqie0jonf1mhufohk28ezan9ow3xgl8hq71i38y47j1ib4q6ykvvy21xsgh40hjd41aie"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "6d932eba-6a5f-3906-ac75-44516dd70a58",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "HybridConnections_Delete"
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "bed6b451-3eae-3b50-9dff-85e67e65244b",
    "name" : "Deletes a hybrid connection. - 200",
    "request" : {
      "urlPath" : "/subscriptions/mhl9/resourceGroups/Jon+Russel/providers/Microsoft.Relay/namespaces/Warner+Denesik/hybridConnections/Ms.+Ricardo+Franecki",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "mjn9mhqrgwk1c5z2unaaglwyjn1vxvttyczz8qcild5gbb6si2w8multphx3h811f64h7dt6o4oig9a3xvdqcgh0ya4w1k0l5gqt4bk0t1okg71hgr85lrr5cb2z2pzudavnuknvk6"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "bed6b451-3eae-3b50-9dff-85e67e65244b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "HybridConnections_Delete"
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "7458e4ed-3b03-3641-be91-6119de084510",
    "name" : "Creates or updates a service hybrid connection. This operation is idempotent.",
    "request" : {
      "urlPath" : "/subscriptions/i227/resourceGroups/Mae+Will/providers/Microsoft.Relay/namespaces/Delta+Lynch/hybridConnections/Lee+Shanahan",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "dnw0uu1kcv51ctxu6t9ct8gil6yhead72q3b7d0dy4b9sj2pbbo8e5txzkpdev9ebn5a1xn8i5zmeia6bggbb88h5cywvxkzxp0tc9bqeonsqby4gxi7qi5t"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Tajuana Paucek\",\n  \"id\" : \"mvsz\",\n  \"type\" : \"cic9uotlv8vndegg6kq4dl29z0wdi3atg2mqdu3mya4c2djen4dd6jjnt83xq19qsc8cpwpebmabdao3f471ffbh6u8nt64g1s2m6b7ohesbywy09p2ueupoa0pqlybs21fkhy6clkbtpn2sqpf6cfufvrgvsu8anldu465o39nbmkbkm5ab9ipgezxjwdh2hae4g\",\n  \"properties\" : {\n    \"createdAt\" : \"2023-02-02T16:18:15.335Z\",\n    \"listenerCount\" : 19,\n    \"requiresClientAuthorization\" : false,\n    \"userMetadata\" : \"eb4dntwhrbs5iniyxuravzhe0vhc4qym3r3b9cao9p1qrk1cv\",\n    \"updatedAt\" : \"2023-06-09T14:25:43.335Z\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7458e4ed-3b03-3641-be91-6119de084510",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "HybridConnections_CreateOrUpdate",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "createdAt" : {
                    "type" : "string",
                    "description" : "The time the hybrid connection was created.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "listenerCount" : {
                    "maximum" : 25,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "The number of listeners for this hybrid connection. Note that min : 1 and max:25 are supported.",
                    "format" : "int32",
                    "readOnly" : true
                  },
                  "requiresClientAuthorization" : {
                    "type" : "boolean",
                    "description" : "Returns true if client authorization is needed for this hybrid connection; otherwise, false."
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "The time the namespace was updated.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "userMetadata" : {
                    "type" : "string",
                    "description" : "The usermetadata is a placeholder to store user-defined string data for the hybrid connection endpoint. For example, it can be used to store descriptive data, such as a list of teams and their contact information. Also, user-defined configuration settings can be stored."
                  }
                },
                "description" : "Properties of the HybridConnection."
              }
            },
            "description" : "Description of hybrid connection resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "03b5eb00-a1ad-3fba-90e4-49145df9e2f4",
    "name" : "Returns the description for the specified hybrid connection.",
    "request" : {
      "urlPath" : "/subscriptions/0x74/resourceGroups/Damion+Kautzer/providers/Microsoft.Relay/namespaces/Ofelia+Anderson/hybridConnections/Carmine+Hirthe",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "2xyy9l9aznfoodaij6imngb5q32puxjv7y078qn8mplsbgj25zf9afpt3xxixg84k4afcklme35vzf2g9v7dq8dnvvjg7hx0474cvh9tjbrls4ijqvil5rt7l6lqrean7xsnpj6s3m5e9ixf0fro9006526e2mnahgf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Waldo Bogisich I\",\n  \"id\" : \"849b\",\n  \"type\" : \"r4lxqgz3pac6mj9nwnpq07s5up8yocp2kbhnd9fm1zlvqrmeam2quplhmfmgse053dgz7vmpfc3091sa8sk8cx8kor7owkyw5timq2pdofo30821ajfxiv4em8m1eqyv3n3gweoac2deapxlzef7xd9ncevblj9qgc7joey4nkb50v1c8pgewdl7kdmny86l72uq\",\n  \"properties\" : {\n    \"createdAt\" : \"2023-03-28T05:49:30.335Z\",\n    \"listenerCount\" : 15,\n    \"requiresClientAuthorization\" : false,\n    \"userMetadata\" : \"gv2qyur191eylfxadl0jg7biztjbf0a01876o5vrlne222c1m0tw2qg7i5wpmn8x3ppey650s9jr5j7mbk95moafi7qv56nnsmvwgmnhu4ef91pusqf048kf78ut39t2mm5vrr71bsp4yhe4166b1im3lohnoygp2qgirwxaj1u8dh41lok5kb62orc11v\",\n    \"updatedAt\" : \"2023-02-28T10:27:13.335Z\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "03b5eb00-a1ad-3fba-90e4-49145df9e2f4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "HybridConnections_Get",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "createdAt" : {
                    "type" : "string",
                    "description" : "The time the hybrid connection was created.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "listenerCount" : {
                    "maximum" : 25,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "The number of listeners for this hybrid connection. Note that min : 1 and max:25 are supported.",
                    "format" : "int32",
                    "readOnly" : true
                  },
                  "requiresClientAuthorization" : {
                    "type" : "boolean",
                    "description" : "Returns true if client authorization is needed for this hybrid connection; otherwise, false."
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "The time the namespace was updated.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "userMetadata" : {
                    "type" : "string",
                    "description" : "The usermetadata is a placeholder to store user-defined string data for the hybrid connection endpoint. For example, it can be used to store descriptive data, such as a list of teams and their contact information. Also, user-defined configuration settings can be stored."
                  }
                },
                "description" : "Properties of the HybridConnection."
              }
            },
            "description" : "Description of hybrid connection resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "224289b5-65db-33bd-9899-0b8b169b0eeb",
    "name" : "Lists the hybrid connection within the namespace.",
    "request" : {
      "urlPath" : "/subscriptions/d377/resourceGroups/Dr.+Toby+Hyatt/providers/Microsoft.Relay/namespaces/Genevive+Stiedemann/hybridConnections",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "zv6jr4qyyda189rdh3cnp7adlh9e7fijkhxlh9ytbkrwc4d54aw5qdyt4gs6hwk35sz4dcbgl7lcr14plwehtd0vvf6ik95o3ydylbvd58wlvzh9dul3cf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Houston Kerluke\",\n    \"id\" : \"p39h\",\n    \"type\" : \"zlv5vx9kp4p6yjdneykjfvle9yh709fco74w\",\n    \"properties\" : {\n      \"createdAt\" : \"2023-04-13T13:26:46.333Z\",\n      \"listenerCount\" : 18,\n      \"requiresClientAuthorization\" : false,\n      \"userMetadata\" : \"dkev92nsot3e95z04yrn8xklef5v8o9zh1jvd70e6hntx4n6qm2hiw1mzx7vr09yv981jp7\",\n      \"updatedAt\" : \"2023-07-22T13:20:13.333Z\"\n    }\n  }, {\n    \"name\" : \"Marlon Green\",\n    \"id\" : \"0kq4\",\n    \"type\" : \"9it5iuxoc2yekmx8qh2age45z0u2khhbuufy7zmcd7zbzpfto2k5xsx86k7or9nshwhppn85qul4iyfryjgd785kio\",\n    \"properties\" : {\n      \"createdAt\" : \"2022-09-13T18:45:25.333Z\",\n      \"listenerCount\" : 11,\n      \"requiresClientAuthorization\" : false,\n      \"userMetadata\" : \"47w68p8z7ugvat719rduleo2zyjroh1b\",\n      \"updatedAt\" : \"2024-01-16T03:46:56.334Z\"\n    }\n  }, {\n    \"name\" : \"Shawanda Denesik\",\n    \"id\" : \"c10k\",\n    \"type\" : \"m554rycpr6mtb136g2cgfc8iz65l14cag25o7v6tsf3vil18bogbs2ae3fhlgt40s16em21q7azyu8bc5h39fwm23ux160qk9i1d68rdckxo2fboanq6cfbibhqpiw44f595o09b81i0r6jm68laym3l3pba8ek9e\",\n    \"properties\" : {\n      \"createdAt\" : \"2022-09-24T02:42:41.334Z\",\n      \"listenerCount\" : 8,\n      \"requiresClientAuthorization\" : false,\n      \"userMetadata\" : \"dp1z78qthub5vkyxtxj2p05ybpynummsornakhrn4rl744lbv4bbxuc5c3d8p890i0qy5xs4y1m8202tq0r8ki19po6qbx19e0k1eh20bqzwq24rgk0q6r6xfbw9m4gkv3hjlg620r37wwlhumxs6tdujo86093ezwcawjmbkwr\",\n      \"updatedAt\" : \"2022-07-15T08:45:09.334Z\"\n    }\n  }, {\n    \"name\" : \"Dovie Denesik\",\n    \"id\" : \"7080\",\n    \"type\" : \"xv7f7d5eyakx9wp2raljkssgchx86g21v1se7ygahi1vynhdbhbe87cz9pbtg7f\",\n    \"properties\" : {\n      \"createdAt\" : \"2023-01-13T04:42:18.334Z\",\n      \"listenerCount\" : 22,\n      \"requiresClientAuthorization\" : false,\n      \"userMetadata\" : \"83h09w8ztwrzpyphvq24y02gyu56067y5c9op2efn6dcpk47hpqdbon7u98eekq41nznhgoluqjxxngwkszzbpihknx5zocs4v81lp5p580eragflh96kftjltsx3b7gcf4u194qxr9vip91kuo3wv2l18ksq0t4ygf\",\n      \"updatedAt\" : \"2022-07-28T14:10:20.334Z\"\n    }\n  }, {\n    \"name\" : \"Kit Morissette\",\n    \"id\" : \"q88b\",\n    \"type\" : \"zjwo5swnl0q5qaaeg514yfzrjrqu6vhj6g1k7k7dbmciu6p8xku8hfj8of73tgdmeassfpeaead7ddej83khk46bt9d65apjyqlruy9kl6lw84dbxlub8kbwdzga36sq9k814c2oukg92terkc09sxzu7qchuzf8gou9btf5792afmo4l6yds72xp1\",\n    \"properties\" : {\n      \"createdAt\" : \"2023-03-19T11:29:07.334Z\",\n      \"listenerCount\" : 11,\n      \"requiresClientAuthorization\" : false,\n      \"userMetadata\" : \"znqws2nde7n2w0bye8q1djxd3083sb7mjmi7z27xjzuhwi0y2guegbg5iiacrxpukfjrxgqapjgdky2wd4dvy91d608plln0nrm9u56lmtxclj810k4vdf4cdfr2qn7eukmo49x\",\n      \"updatedAt\" : \"2022-12-15T15:23:30.334Z\"\n    }\n  }, {\n    \"name\" : \"Tosha Frami\",\n    \"id\" : \"1q7n\",\n    \"type\" : \"d2psrt2xewf9f55g4sh49qoixs9icbq5h9n29flavou9n9n32ezbzgs3kptpcadbpjujcm2thm0dtrhgld5jkd8cuzdetsygic3e025x81kw88x7scuc4lkgr729hwvr3fqlknri8rr0y6cdg4b9i03w8snu0zxho1ynmqux2lw7dzftj\",\n    \"properties\" : {\n      \"createdAt\" : \"2023-04-17T17:35:25.334Z\",\n      \"listenerCount\" : 6,\n      \"requiresClientAuthorization\" : true,\n      \"userMetadata\" : \"cmhc6c47nhth2k5vbfwfbb9vpquc31mwi2517ql9sknmu1a3d4kuq92y82z4vk0hqgzigem16yg6om323wd8a0kwg4o46w1z2sn9x9nyzrbwxehoztc5o0kefuml85t18mj6uismy4ck0m44jqrxkojf7x4\",\n      \"updatedAt\" : \"2023-01-13T02:24:58.334Z\"\n    }\n  }, {\n    \"name\" : \"Azzie Gusikowski\",\n    \"id\" : \"4epr\",\n    \"type\" : \"7062s1zzcpok1k288\",\n    \"properties\" : {\n      \"createdAt\" : \"2023-11-12T01:46:35.334Z\",\n      \"listenerCount\" : 15,\n      \"requiresClientAuthorization\" : false,\n      \"userMetadata\" : \"o41cllbc49qepzovufvnbmoexvvsbmx75kjlux9pxmc74j5wm8mhw8ynz38bcdpkkw8if74jlptdh1n3u0hd6dqf9ui90cn5xs3iwxyxj2ig297mpeoqjewwhppik65506ruq82gs810cv548vzqa594h72umhvg8zyyro56kv3ocz3uy7mf3jwapxasocwyx56it2\",\n      \"updatedAt\" : \"2023-09-12T21:34:42.334Z\"\n    }\n  } ],\n  \"nextLink\" : \"1i2bivqkux398qukmrzvh3nwfdeguzxdnko0emshecx09k7s5xk9y5zycmhi2vcq1y5k3kmmztp5t2dqn1vorkis6zjlrcracc2j95ql6afjv45i1jg4kojosv52on9fdf8ktt6xjax049rgp880ctj81u\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "224289b5-65db-33bd-9899-0b8b169b0eeb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "HybridConnections_ListByNamespace",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if value contains incomplete list hybrid connection operation."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the list hybrid connections.",
                "items" : {
                  "$ref" : "#/components/schemas/HybridConnection"
                }
              }
            },
            "description" : "The response of the list hybrid connection operation."
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "946bbea0-b908-31aa-9c52-1b17a0d3f4f9",
    "name" : "Regenerates the primary or secondary connection strings to the namespace.",
    "request" : {
      "urlPath" : "/subscriptions/owre/resourceGroups/Tyrell+Botsford/providers/Microsoft.Relay/namespaces/Magdalena+DuBuque/authorizationRules/Kristle+Price/regenerateKeys",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "pmia5p39ujh7c44m28kb931dix08s81jnd0jd1d32g0crflzrj667fbwccac89sst5z5azgvcd20kq0e42743hq6nr9tyzbu9jow"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"secondaryKey\" : \"777\",\n  \"keyName\" : \"Werner Hauck I\",\n  \"primaryConnectionString\" : \"8ykhhhwcrylojdczr163tv5bqs2azc55cj86a29db3s0jreni8k9hnbfvs5imt6py9y9umqs9z19478mvj62qbk2j192ibqt16otdw7pdyw5io7g0r3a94ay4vxnaqxulth2lw8cz8yfckb1cusd6tn11ulfwcnfq2j0f7\",\n  \"secondaryConnectionString\" : \"onr2t0paoups4qergd01xpuzevkpzkjf5epuv5yy22ilvyel3adosubpif7ii5zhmim0rf7qhttj43yowmadq54wqko8d5vu4k0noseuql4tf8pggtni3y9ytue6d8umbqp3vpz69saw4lb1f8k3nkfldvgoxa11\",\n  \"primaryKey\" : \"naog6r2xhoelemamx9oweepc79uprmmthduxcj8yk01db3lac9xeg29af5yc4j8h5z44vlnvuxaw372zii2v2ahigre3vfmzy8j85czjjdpsmtekrfpr8d7odbtevg4o1j3954pfiuazbqwad2bmf39zudc10u6cetkgmmc7nmw38t0hht7ct\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "946bbea0-b908-31aa-9c52-1b17a0d3f4f9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_RegenerateKeys",
          "schema" : {
            "type" : "object",
            "properties" : {
              "keyName" : {
                "type" : "string",
                "description" : "A string that describes the authorization rule."
              },
              "primaryConnectionString" : {
                "type" : "string",
                "description" : "Primary connection string of the created namespace authorization rule."
              },
              "primaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit primary key for signing and validating the SAS token."
              },
              "secondaryConnectionString" : {
                "type" : "string",
                "description" : "Secondary connection string of the created namespace authorization rule."
              },
              "secondaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit secondary key for signing and validating the SAS token."
              }
            },
            "description" : "Namespace/Relay Connection String"
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "6ed1879a-7465-3126-8ae7-d27bca834763",
    "name" : "Primary and secondary connection strings to the namespace.",
    "request" : {
      "urlPath" : "/subscriptions/tu7l/resourceGroups/Clint+Schowalter/providers/Microsoft.Relay/namespaces/Mr.+Neda+Greenholt/authorizationRules/Mr.+Tobi+Ullrich/listKeys",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "tx6xrtgjx6hr41115a82gkog9r5xeto73exhrzjfcjq5b1ma9cao6007pxga1zwvjdjbn3p3ar4a2bh3exeje593hk99quwhk5mo8"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"secondaryKey\" : \"filn26bknm1u05xcf1uev8i9854umy8n8cghxtbg0jcuupq91v3jr3kesmoahj92z680gyocltr31zo3urkripwqxv94ejlk8pfy7390gt8laffe3uttzzj47j3ujc9xqxvcbhaxiioffecqznegqfkcmjmuup8tytl1vkgqapfv6iqznbv932cfxui1xdm1jm6\",\n  \"keyName\" : \"Miss Brady Hilpert\",\n  \"primaryConnectionString\" : \"9irljd9dic6ywbberl595fz73rze0lhcud3yvf6k1na2cfpuagyoymej6xti2p1w4pz850ryko7j4w9w5imyzqi8pqdm189fh9v4ngwsajw3gd2546yf5o9fi\",\n  \"secondaryConnectionString\" : \"hikv5z1d0kx9dm2dqnvfyovtn985a80jb0i3n1ji7j39qvmiwh3wbu0qkmx8iknjmfeu6ynx2yoeava25p0jbq1dhhcbadlka\",\n  \"primaryKey\" : \"r59dyuo93ktv23hlrcmqj0jjgfhrfwngceimh4y8nf9eqcy41l4am4pl4r1amk2jj57ql0c6ndy1p9zlb657p90pt\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6ed1879a-7465-3126-8ae7-d27bca834763",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_ListKeys",
          "schema" : {
            "type" : "object",
            "properties" : {
              "keyName" : {
                "type" : "string",
                "description" : "A string that describes the authorization rule."
              },
              "primaryConnectionString" : {
                "type" : "string",
                "description" : "Primary connection string of the created namespace authorization rule."
              },
              "primaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit primary key for signing and validating the SAS token."
              },
              "secondaryConnectionString" : {
                "type" : "string",
                "description" : "Secondary connection string of the created namespace authorization rule."
              },
              "secondaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit secondary key for signing and validating the SAS token."
              }
            },
            "description" : "Namespace/Relay Connection String"
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "9776db2c-4e67-3065-9dd5-e6b0eda4e1d3",
    "name" : "Deletes a namespace authorization rule. - 204",
    "request" : {
      "urlPath" : "/subscriptions/u7pg/resourceGroups/Weston+Hoppe/providers/Microsoft.Relay/namespaces/Moses+Christiansen/authorizationRules/Leandro+Jones",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "6w8roqqpyybr6011xbgwobh66huoy6gsj0g82b4n73dbd7u92n9iyu2qso2bcqhbt8zr8x1m6t8yt2kid3afu1l0pdkzj3tuav1oveflqfmfyjbg56eh5sq9k9ojh1gcn6unrcg8nu"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "9776db2c-4e67-3065-9dd5-e6b0eda4e1d3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_DeleteAuthorizationRule"
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "5fde0887-6826-39f8-bf37-c3e7cc084bec",
    "name" : "Deletes a namespace authorization rule. - 200",
    "request" : {
      "urlPath" : "/subscriptions/x3dm/resourceGroups/Cherry+Pacocha+I/providers/Microsoft.Relay/namespaces/Mr.+Tyrone+Moen/authorizationRules/Jessia+Wiza",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "2bijjx6tx92g8y4uosdypfk0h3fbs5s5fd2hh5542zkqp0ht53rl4w5282unolhw42e515grckwsdqntonz83onybjtsqwt9u6sx55b1t6eee258ihbs4ais6frjuh34d3nj094yvxqcbzow20yeu5vqwd"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "5fde0887-6826-39f8-bf37-c3e7cc084bec",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_DeleteAuthorizationRule"
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "253f98ad-b7af-3d49-bc84-a12d30379ec5",
    "name" : "Creates or updates an authorization rule for a namespace.",
    "request" : {
      "urlPath" : "/subscriptions/683z/resourceGroups/Vicente+O%27Connell/providers/Microsoft.Relay/namespaces/Royal+Gutmann/authorizationRules/Georgeanna+Schamberger",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "olugvnx9kr5590ppxrh9on7yim8i8b7q4ozzssvu24mabyc8yvymg4mun6bdc69s2io3otft7v0s2iby3usyjfe5dwakz0duu5xgqiv9rq7pi7hybithw4anzprgmd2d8bfmz4lftmksk"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Freeman Renner\",\n  \"id\" : \"s1rv\",\n  \"type\" : \"waz9niqlsxeurklrrckojc6vppv81hp42821chsk60v062trke0c0kkzxo33rwvu3rsaqe3r0pjwk3boukcionpzpktx00a0eoo7td8ghpzdvbncopykbrquktd66tdusbkxp\",\n  \"properties\" : {\n    \"rights\" : [ \"Send\", \"Manage\", \"Listen\", \"Listen\", \"Listen\" ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "253f98ad-b7af-3d49-bc84-a12d30379ec5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_CreateOrUpdateAuthorizationRule",
          "schema" : {
            "properties" : {
              "properties" : {
                "required" : [ "rights" ],
                "type" : "object",
                "properties" : {
                  "rights" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    "description" : "The rights associated with the rule.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "Manage", "Send", "Listen" ]
                    }
                  }
                },
                "description" : "Authorization rule properties."
              }
            },
            "description" : "Description of a namespace authorization rule.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "3d8f4513-260f-3166-b913-17c8b52b6422",
    "name" : "Authorization rule for a namespace by name.",
    "request" : {
      "urlPath" : "/subscriptions/9a62/resourceGroups/Audrea+Price/providers/Microsoft.Relay/namespaces/Dr.+Brendan+Kunde/authorizationRules/Kim+Ward",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "4p0p0dcy7jap2g4z1rpp1t"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Dori Wolff\",\n  \"id\" : \"58vs\",\n  \"type\" : \"fo46nhkfbpp25u2m12m0gazm9jmydwch6xlf8kuljz6ry6rs1awfzj3sq7cwjt09nd0u5ef8j27jqhosp9qjy50ghqnavfmt3a5zshlvehmdvrw52x3jucqf6r3eyf9xufcvyzejhy0wgh7\",\n  \"properties\" : {\n    \"rights\" : [ \"Send\" ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3d8f4513-260f-3166-b913-17c8b52b6422",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_GetAuthorizationRule",
          "schema" : {
            "properties" : {
              "properties" : {
                "required" : [ "rights" ],
                "type" : "object",
                "properties" : {
                  "rights" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    "description" : "The rights associated with the rule.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "Manage", "Send", "Listen" ]
                    }
                  }
                },
                "description" : "Authorization rule properties."
              }
            },
            "description" : "Description of a namespace authorization rule.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "0ec20130-87a9-3387-b05f-23a373c974f7",
    "name" : "Authorization rules for a namespace.",
    "request" : {
      "urlPath" : "/subscriptions/u9f2/resourceGroups/Miss+Buffy+Marquardt/providers/Microsoft.Relay/namespaces/Tuan+Steuber/authorizationRules",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "kgmz8blbkutazr57edf6610sfcvttwry6el7gqzh9rzpdqhut49xing6s2eg1volie9zxoj7yb81kocezfo6t2ex2p0d5arngdmrvhr9y660ye4zyurxzq97d5echg1sd2fdy9u8a0515s8d6ewtwflvuboqp0o48up0icwu526aeqw4uygbgkndki67wd6j60nuzxu"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Shon Okuneva\",\n    \"id\" : \"5529\",\n    \"type\" : \"qcuuqtsxp0jzq1gebalc0eunaknzpy6co2jaiuqkvsogo9acwau2k\",\n    \"properties\" : {\n      \"rights\" : [ \"Manage\", \"Listen\", \"Manage\", \"Manage\", \"Send\", \"Manage\", \"Send\", \"Listen\" ]\n    }\n  }, {\n    \"name\" : \"Wallace Cummings\",\n    \"id\" : \"51s9\",\n    \"type\" : \"kho9tji71oi7c9i79hqysg5mzy1rv01dfisztceb14j3sq4b1wadcbzrc24q7a5chfvgdzbm89tvc6ouegxp2un7noasdoh8abqsxgoef2805k\",\n    \"properties\" : {\n      \"rights\" : [ \"Listen\", \"Manage\", \"Listen\", \"Manage\", \"Send\", \"Listen\" ]\n    }\n  }, {\n    \"name\" : \"Shaneka Shanahan IV\",\n    \"id\" : \"doi2\",\n    \"type\" : \"n4eyp6y0xdi69aftv8dptqi4siueeqb8ndohxq5xvyi4cki0lq8fhicxinw0s2peepp11bwyhfuxbrwcllb66tfn2\",\n    \"properties\" : {\n      \"rights\" : [ \"Send\", \"Manage\", \"Manage\", \"Manage\", \"Send\" ]\n    }\n  }, {\n    \"name\" : \"Arden Larkin\",\n    \"id\" : \"htkx\",\n    \"type\" : \"06k5i2gkk3jyhijn6grneg7wczbh37noe266pct35v0t080xq28ccxehe1w54tspp7eoxouog5jioafqpcod1mauj5qtof5rcuzkzvbiq7cp1aelnir9fbxjplgl30gp5k54yoxi98krfbecgo9wedpofj7tsxux07df80d57vv7pfvpcaviw00461qm49v\",\n    \"properties\" : {\n      \"rights\" : [ \"Manage\", \"Listen\" ]\n    }\n  }, {\n    \"name\" : \"Catharine Heathcote\",\n    \"id\" : \"9rj6\",\n    \"type\" : \"c3xr68nhd0eg3o5q2itzhlmgywwbslzhga4hg699png86\",\n    \"properties\" : {\n      \"rights\" : [ \"Send\", \"Manage\", \"Send\", \"Send\", \"Send\" ]\n    }\n  }, {\n    \"name\" : \"Joshua Treutel\",\n    \"id\" : \"xaut\",\n    \"type\" : \"19gymv2rtkcqnje2tvckr3xz1h3041nhof2ndt1ns0fxeat9hwl8ea8vuwvzc6hcl003pr1013l5xlyxz68unju9wt9hfcs6q8gsrrvpc20rx0n71doy45lepz5yg1n8x2k0preq9t3h9guylcx0oky1qv4e0cfu0vsxunzsc3eo9f0fogzo8s8r0p4qaqnv0jaxbxaj\",\n    \"properties\" : {\n      \"rights\" : [ \"Manage\", \"Send\", \"Listen\", \"Send\", \"Manage\" ]\n    }\n  }, {\n    \"name\" : \"Nina Konopelski\",\n    \"id\" : \"pv1v\",\n    \"type\" : \"hu5pjc5i5c01g5mc26obuanb5re6anr4drdaba5rq9r89al2kygzi7qaas8g4kjbl3uibvh4\",\n    \"properties\" : {\n      \"rights\" : [ \"Send\", \"Send\", \"Listen\", \"Send\" ]\n    }\n  }, {\n    \"name\" : \"Jennifer Cummings\",\n    \"id\" : \"w00x\",\n    \"type\" : \"a1t70szqu9qdy8z2\",\n    \"properties\" : {\n      \"rights\" : [ \"Listen\", \"Manage\", \"Manage\", \"Send\", \"Manage\", \"Manage\", \"Manage\" ]\n    }\n  } ],\n  \"nextLink\" : \"2n1pfltszwdkhokom9b9fczyj34b\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0ec20130-87a9-3387-b05f-23a373c974f7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_ListAuthorizationRules",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if value contains incomplete list of authorization rules."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the list authorization rules operation.",
                "items" : {
                  "$ref" : "#/components/schemas/AuthorizationRule"
                }
              }
            },
            "description" : "The response from the list namespace operation."
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "8d18ea0a-db30-35fa-b479-10c40787848e",
    "name" : "Creates or updates a namespace. Once created, this namespace's resource manifest...",
    "request" : {
      "urlPath" : "/subscriptions/v534/resourceGroups/Alton+Gaylord/providers/Microsoft.Relay/namespaces/Mr.+Meta+Block",
      "method" : "PATCH",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "2tkb4bzc028t05vzodotxw14ilf82836hxp36l2oqtgsukvw101e99xrguo22d9wth7qi3e6rynzvct4pf4g5k1sl7caksfztecff374qsatm7kmrf5aojf"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"location\" : \"2yzrgh4ugmx3ncraz1z1dvahbh5ewbe32glsl1ax5q3qm3mha2arxl7uoo5ons06hhmgeyq1k0evj6xh28it4el9hljdv52482els1bhgpli28auds8m5clmp8b0946pjeujuqv99zkcy4j0656bllfmkq63cn51i59oxgr17ifpr8ck8028giykymra9gqtp\",\n  \"sku\" : {\n    \"tier\" : \"Standard\",\n    \"name\" : \"Standard\"\n  },\n  \"properties\" : {\n    \"createdAt\" : \"2023-11-13T18:06:31.33Z\",\n    \"metricId\" : \"4143\",\n    \"serviceBusEndpoint\" : \"yf24z45aws5h4r5estqe3cn1wg15kqoc73grufe5buzg0lz3zm0rv3yjh67senofkuawpzzkzwi1eaqckwvxq6jw5qflwpmxxocvo54i8mp9x6aw2wghj4t24g2ex4wqr203s2lu6pk4ddy079auvr57qkjf6kw3sbkh0o6t1wjqwjf1u05qhijm3zaarsriek\",\n    \"provisioningState\" : \"Unknown\",\n    \"updatedAt\" : \"2023-12-24T23:06:54.33Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8d18ea0a-db30-35fa-b479-10c40787848e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_Update",
          "schema" : {
            "properties" : {
              "properties" : {
                "$ref" : "#/components/schemas/RelayNamespaceProperties"
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Description of a namespace resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "ad71d781-3bb9-3cfc-8bb0-c818cfdc8ed5",
    "name" : "Creates or updates a namespace. Once created, this namespace's resource manifest...",
    "request" : {
      "urlPath" : "/subscriptions/7fu1/resourceGroups/Rudolf+Ruecker/providers/Microsoft.Relay/namespaces/Arturo+Armstrong",
      "method" : "PATCH",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "f9rs9umlyj5x75n9fi1eyd321xtqnr62qwnpaf5l3c5ky253tn3g8uhllqoc12e1h1o9bsehcvy3vx0xtgfq19qngoar9pz46zlqzioet1y049atqpboeym01vf7cn3a3rbuz4rnr12sqq6as18yi6xesukcawjgc1u"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"location\" : \"3e07j4lbjlkzscdpu545hv1o32o7a1tl5wty2ptauw565z6lqcteys62th4ydk00vcyzuz9cfk6bzu73bsv3tkqu1b72fch5plyx679fhg87b\",\n  \"sku\" : {\n    \"tier\" : \"Standard\",\n    \"name\" : \"Standard\"\n  },\n  \"properties\" : {\n    \"createdAt\" : \"2022-05-03T00:36:36.329Z\",\n    \"metricId\" : \"12s4\",\n    \"serviceBusEndpoint\" : \"b4eang6wwcqh8wmem9xrx8xh9zqbha3wf7ysnj9lb9hlsscdpw8kd6aqbj1w2b6zz3pdr1gvezcwm0yvmn76mpzvge9f\",\n    \"provisioningState\" : \"Created\",\n    \"updatedAt\" : \"2022-04-08T20:42:03.33Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ad71d781-3bb9-3cfc-8bb0-c818cfdc8ed5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_Update",
          "schema" : {
            "properties" : {
              "properties" : {
                "$ref" : "#/components/schemas/RelayNamespaceProperties"
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Description of a namespace resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "6f237f01-ab06-3d01-a5ae-a8fb1574e97a",
    "name" : "Deletes an existing namespace. This operation also removes all associated resour... - 204",
    "request" : {
      "urlPath" : "/subscriptions/7782/resourceGroups/Barton+Hermiston/providers/Microsoft.Relay/namespaces/Christoper+Pacocha",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "vkp3j1e3kpcutr49fcdao2y"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "6f237f01-ab06-3d01-a5ae-a8fb1574e97a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_Delete"
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "cb500508-cf52-3ac0-98d7-604379c8a5ef",
    "name" : "Deletes an existing namespace. This operation also removes all associated resour... - 202",
    "request" : {
      "urlPath" : "/subscriptions/sv2r/resourceGroups/Dr.+Carmela+Larkin/providers/Microsoft.Relay/namespaces/Tracy+Klein",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "emqjifdbwiwri"
        }
      }
    },
    "response" : {
      "status" : 202
    },
    "uuid" : "cb500508-cf52-3ac0-98d7-604379c8a5ef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_Delete"
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "ef95467c-d342-3367-b46b-5d21632ed607",
    "name" : "Deletes an existing namespace. This operation also removes all associated resour... - 200",
    "request" : {
      "urlPath" : "/subscriptions/x128/resourceGroups/Rodney+Sauer+II/providers/Microsoft.Relay/namespaces/Jama+VonRueden",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "cur0rnaao1lzy3go"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "ef95467c-d342-3367-b46b-5d21632ed607",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_Delete"
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "9109ee4d-2696-3b0d-92d3-caa5c2dca5b8",
    "name" : "Create Azure Relay namespace.",
    "request" : {
      "urlPath" : "/subscriptions/lb2q/resourceGroups/Eleonora+Terry+MD/providers/Microsoft.Relay/namespaces/Mr.+Mathew+Maggio",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "5scyu2ak807blyeim2nz2wl8q213lvuonew4nennugd2o50gtinglelwdgv0yvfw8b14c0ror9hp8jujl53opypi19bddcm8w8gywt41srczfprw9ayh6xl3zyb0u7uzq9l2zx4u0qqweyjfe45p056erpkcpnrzjegt5yqk4ub8966g80gy"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"location\" : \"1xkd5o2bfum2typ60jllnhi4mpek3bk83jiff60ix313bw9t82ggzuj5gcl3pydmuhv4l6hy6ggxyb4yj3whwn8x34d112riuhrmyuuf8hj8lb50lwqwfv8rmawao91r28n7f9a8shf0de5wdu89zfkos\",\n  \"sku\" : {\n    \"tier\" : \"Standard\",\n    \"name\" : \"Standard\"\n  },\n  \"properties\" : {\n    \"createdAt\" : \"2023-08-30T04:53:56.329Z\",\n    \"metricId\" : \"73d6\",\n    \"serviceBusEndpoint\" : \"62cmk1edelop1evbi6\",\n    \"provisioningState\" : \"Unknown\",\n    \"updatedAt\" : \"2023-04-28T08:11:05.329Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9109ee4d-2696-3b0d-92d3-caa5c2dca5b8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_CreateOrUpdate",
          "schema" : {
            "properties" : {
              "properties" : {
                "$ref" : "#/components/schemas/RelayNamespaceProperties"
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Description of a namespace resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "77c65ffd-833f-3cb4-9b92-390f0f23ce91",
    "name" : "Create Azure Relay namespace.",
    "request" : {
      "urlPath" : "/subscriptions/49ul/resourceGroups/Ellis+Batz/providers/Microsoft.Relay/namespaces/Jame+Grant",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "ou3vz3eehu6x1tbnu745ozidexbg5w3cjc92iv7"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"location\" : \"5v7h73fd1k2smhhd6icn4jb9nqi3hth93mabt357k92nxdiqgv4663bkceu7u93gnqtkrc08wqnd2by03nmtlqvke75pqmypp7vmy320j0xfbw1ptzqxn6j9rwi0h830su9807y0dt3ppg4zmqgti530aie1svsu0yv\",\n  \"sku\" : {\n    \"tier\" : \"Standard\",\n    \"name\" : \"Standard\"\n  },\n  \"properties\" : {\n    \"createdAt\" : \"2022-10-28T01:29:32.328Z\",\n    \"metricId\" : \"88gn\",\n    \"serviceBusEndpoint\" : \"gbapbz4aho2c1m7u41w57u2f0sty125yqyl7ti7apej9jfkmojpxnndfbr1wq8zn6c4eh24tw82lg3kakmo4jo4zv0w6o2e87d8yr36s55bno9av72af03nar74d058nuo1k7a6ntbyfvdype6nww3oan0jjgkvdu3zb5ne27orxx49wdk6tlxx8\",\n    \"provisioningState\" : \"Created\",\n    \"updatedAt\" : \"2023-08-19T02:07:26.328Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "77c65ffd-833f-3cb4-9b92-390f0f23ce91",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_CreateOrUpdate",
          "schema" : {
            "properties" : {
              "properties" : {
                "$ref" : "#/components/schemas/RelayNamespaceProperties"
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Description of a namespace resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "2d9d8386-29d3-3e46-a1c4-92a566f929ff",
    "name" : "Returns the description for the specified namespace.",
    "request" : {
      "urlPath" : "/subscriptions/0rb8/resourceGroups/Sunny+Pollich+V/providers/Microsoft.Relay/namespaces/Devin+Barton",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "tqjz568zycmw3dwac6cbr46ayj7vanp4k727l6dbzj09o4kdrnj7pe8a3m6atnepshnkdqc3q9xtud8tpk72ae27kgyj8ptxld3y3aejmpaznpvm1zfpafhnxmsv"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"location\" : \"3ml7vikal82nsjtyqlqhl27cy0ujll2ooe8ztkjcv5xllg6dt7cd4vgt7ib0w09dbf19v2vb9cqhrr5e\",\n  \"sku\" : {\n    \"tier\" : \"Standard\",\n    \"name\" : \"Standard\"\n  },\n  \"properties\" : {\n    \"createdAt\" : \"2023-04-28T13:11:50.328Z\",\n    \"metricId\" : \"zwg7\",\n    \"serviceBusEndpoint\" : \"bujlpbn5eg9o5e575\",\n    \"provisioningState\" : \"Created\",\n    \"updatedAt\" : \"2023-08-21T04:27:01.328Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2d9d8386-29d3-3e46-a1c4-92a566f929ff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_Get",
          "schema" : {
            "properties" : {
              "properties" : {
                "$ref" : "#/components/schemas/RelayNamespaceProperties"
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Description of a namespace resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "2a5afdc2-7c8f-376c-8ff7-0323502ed566",
    "name" : "Lists all the available namespaces within the ResourceGroup.",
    "request" : {
      "urlPath" : "/subscriptions/j733/resourceGroups/Carmine+Feeney/providers/Microsoft.Relay/namespaces",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "702e50m080cb555qf5noim12l03a9511zrq2dkwwnty"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"location\" : \"rmsskg7zv3i8i94euzgxwt1wcucx802ub61hpm0cxtbjt71vmg45h82gns6xtln9nnv1q61tqlw9bd7uwt9y5smky28i580t9c6zmes4h2bfbfw76nlzdkkfxjlyui1s4lscnlfgpgfpygmiz8foouuxokaf4l2o0brj5v8pw0pmwta87nc7\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\"\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2023-12-31T02:11:52.327Z\",\n      \"metricId\" : \"x330\",\n      \"serviceBusEndpoint\" : \"g0lfmjgz640a1ordh4vltpw95mn38umuw18xjtep01n0oemmj36e6j0u0vh4q1ub8fham9053yybuzf57majoquchs0w9apfkcsm378m4pjpzweb4912q9v79q1q6r8qt21dn08hxo0jo4abw79ml8f4plbag6n30m0jeusdn1w2\",\n      \"provisioningState\" : \"Succeeded\",\n      \"updatedAt\" : \"2023-02-20T22:07:11.327Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"pb24hn7ojgv4phd8y0o304xl0dsgkmf333vva9ibf0sma7a0b7556qcw\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\"\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2023-09-16T20:13:50.327Z\",\n      \"metricId\" : \"9v1g\",\n      \"serviceBusEndpoint\" : \"skoslu5fy6wfcvdd58wqluu15sx076l73e6xrjnr5n2zz5ay2cvmt8sw4fmafve\",\n      \"provisioningState\" : \"Created\",\n      \"updatedAt\" : \"2023-10-11T11:08:38.327Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"dfynoxnz4arkog2slyw8sgn84hf5zda80frx0quf3vjj8x5sadm2te14cyj4f8edsmkopn54c0o46vc76lf36rwb5eigrzlrn5d4qc969vjvpvjpfwpvo2f6v40vnxh23369f9lrhye06059k4uitrk1\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\"\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2023-01-13T03:19:42.327Z\",\n      \"metricId\" : \"k98i\",\n      \"serviceBusEndpoint\" : \"919x6g8jk24novobnryyw0o03v4c85yrkw0a0d5c7xvsmx6mh21ct9rz0rkktxf6008igu7rsh78nkib5ravt7tm2b6h23v2uwctth9u3adz6a3uovd2w917\",\n      \"provisioningState\" : \"Failed\",\n      \"updatedAt\" : \"2023-02-19T15:28:34.327Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"2i6fm4tlldc5jfcvvgk4hs4t5hnfwtp56akjfqrq4miolzdiwtzxs1v6tt67iypfl1qevydhyrko3yk0xz5zulh0qvxweb8ee30o6w0io0ws6jds4jwek9uqy0q4s9rp3\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\"\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2023-10-07T11:37:04.327Z\",\n      \"metricId\" : \"3x91\",\n      \"serviceBusEndpoint\" : \"fc4f5hn8kdw5g7125d3856hf88lb7iwvymhp92nxykhdcc\",\n      \"provisioningState\" : \"Created\",\n      \"updatedAt\" : \"2022-08-19T10:31:47.327Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"e9x9itnn3amgvpss72omei5los3x5onpaehpjmxx2wz9crkpljj8yr88w3scgv27norqnktlbghsog3vhrb938baet9b72rb40w4xg5m5epgku3wsezzc4oygc9pph6o0wa5idrboeapocmmwoklmwd1pasn0\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\"\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2023-10-19T06:30:14.327Z\",\n      \"metricId\" : \"1zy1\",\n      \"serviceBusEndpoint\" : \"p4dqfjywmnpnhrjk3i9wuhlrqtd940fvirsuxb35mtvwbp1up2vfzptzj7j898dyy2byyj4g1chq8s4r81v15pccp07n8qewstpvyi5zjl4fei0mqyx6gfxao1tthr27k2\",\n      \"provisioningState\" : \"Updating\",\n      \"updatedAt\" : \"2023-06-15T20:57:38.327Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"wbg5n99e065jzxhbxhtbioitxoqysjoib6mgvexywm0iehqadheac240adbmc5xse73txe7ghd4ctuldc5hu3ynalcafy5wkx71w95jczs0dmudi05utpamhbohp93l4o5u1r36ve7qgzbjv26\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\"\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2023-04-25T05:48:21.327Z\",\n      \"metricId\" : \"zc1y\",\n      \"serviceBusEndpoint\" : \"pmz14stxzajn99n9q7oxyyiqwgfrinewmtilxgg7s3\",\n      \"provisioningState\" : \"Deleted\",\n      \"updatedAt\" : \"2024-01-23T05:03:30.328Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"8fuimkujn8ye8p6vhvnfcvmutsgzfxlm97s1qxucrasc0017mv9q7o3fk8tifp9kytywpypj0m6ahj7dczb2sydkztgg7ovnrv\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\"\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2022-09-23T21:32:12.328Z\",\n      \"metricId\" : \"vd00\",\n      \"serviceBusEndpoint\" : \"ingp8ybfjz6r3q4lrik2sifz04tgyd8ffoez0jf7ngurg1knlkb3lyizi3ihphk872inbipfj6t2mw8jn758b5oqp8wbrj585g0yibp1vozt46stq8v1zajvllqq2r0cydvfv7jj1076i8ekxrdyb2e378yr7voohb4pshsewhmbf\",\n      \"provisioningState\" : \"Created\",\n      \"updatedAt\" : \"2023-06-07T20:53:46.328Z\"\n    },\n    \"tags\" : { }\n  } ],\n  \"nextLink\" : \"g3cxe8mm40n6d1nbpnqjixyr3h3nq3wo0ezc0opswwwichpulpiwtlt3rkfkxk1nns1zmstthzc1ozqlawbdwmzxw9djcrannlhn5wuko2s0b5gcvsse\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2a5afdc2-7c8f-376c-8ff7-0323502ed566",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_ListByResourceGroup",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if value contains incomplete list of namespaces."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the list namespace operation.",
                "items" : {
                  "$ref" : "#/components/schemas/RelayNamespace"
                }
              }
            },
            "description" : "The response from the list namespace operation."
          }
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "c37cf72f-ea7a-39f6-830b-5a46316cf80b",
    "name" : "Lists all the available namespaces within the subscription regardless of the res...",
    "request" : {
      "urlPath" : "/subscriptions/h5i6/providers/Microsoft.Relay/namespaces",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "taq35cilri8tw1p1l5xaltfmg7onyes7xm6mm1tj7fqrnp0t9wknnkdinovsssd6caxu9j1vvdfo5usocsnellmipjj8bthhr81erwo83jy2mcucr2t4y4951x0k3hh48my2ul0pgph9aj9n4hn94c223ppog7soqjmrn"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"location\" : \"3eynrku08zqgmsyphoj48llmcsh90wpexmf7k8w8tsm85h42olq5os5ulg0hqeu7epwig60qtggdrhwnkb6kxmludmdzu1vguqhxklkit1u9usme\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\"\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2022-09-01T06:08:35.326Z\",\n      \"metricId\" : \"j5f0\",\n      \"serviceBusEndpoint\" : \"axuao1ox6ewh2q192l3t1a10uqotjkhx9zeb7qdi19ykoet8zf1iscbwq5eprdb6jmdkw10tvrstw1eo99vu3x8e7utob35zvnnj1i9d1jqrtfqrg6at53pt66rfcyrhhacz4xe2ehgnal01ormexp96f06txnmnb6470ym\",\n      \"provisioningState\" : \"Succeeded\",\n      \"updatedAt\" : \"2022-08-13T00:01:06.326Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"552kyznqz8y7cuqeir9ywzoikew5ytclaya9334ghstuoht7qi9rs6zsorif30yuqvs3r22\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\"\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2022-08-04T08:25:03.326Z\",\n      \"metricId\" : \"2936\",\n      \"serviceBusEndpoint\" : \"au5vay2l7jjmxlo3cg0dy315iz2zn19o7cwguurqtzfne3dpfhdkywaw8ur2vtxhs2kpjm07zmmdqv7a3r\",\n      \"provisioningState\" : \"Failed\",\n      \"updatedAt\" : \"2022-06-05T22:29:25.326Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"eh5z6x3grhfh8v71mbibwiqbyh1xevmp0uq8i0z9h\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\"\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2023-03-09T22:48:39.326Z\",\n      \"metricId\" : \"9lbp\",\n      \"serviceBusEndpoint\" : \"la02a95glytorsffjh8zysc8a3xz7o0034wp0i1zbf2l0q07lj7uqhy17si1or1iebi9ex528pp7mi\",\n      \"provisioningState\" : \"Unknown\",\n      \"updatedAt\" : \"2023-12-19T02:58:09.326Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"u1opqqr3p0851uwgyxca1mla6bqe28u3n2dmm6xs49uph4ve9k5l40fmmeb44xv6ejr0yk0xqvjmm5g39x9i6tfa2o\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\"\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2022-06-16T05:11:10.326Z\",\n      \"metricId\" : \"6w51\",\n      \"serviceBusEndpoint\" : \"v3zbqowtmdc92s96pj60n12zk53e2mj4bviwsirqgvgpm61qnm4j0ylervxhswh2zuxrxsef9pilm5u7b3mc2yleynnez2eeo959xxdwzw5tyaood8qhxbfo46md1yhoybj6krmbfsvg631d7497x2uf6noeslz94wh270gyw06b657\",\n      \"provisioningState\" : \"Unknown\",\n      \"updatedAt\" : \"2023-05-21T12:47:34.327Z\"\n    },\n    \"tags\" : { }\n  } ],\n  \"nextLink\" : \"3sp8hziuvs4ty584ivzdn9hfdsnqa7e7e57f6os8m1tbhagokunl7rb37ivbl6f48bbpeo0m0w55pm4fyfghfpz17a0hhwalwwxcklrt7roxw6jv5tcpxreesmy1c665expaqxsp00mwft55ougtw2ypzo8hpv\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c37cf72f-ea7a-39f6-830b-5a46316cf80b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_List",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if value contains incomplete list of namespaces."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the list namespace operation.",
                "items" : {
                  "$ref" : "#/components/schemas/RelayNamespace"
                }
              }
            },
            "description" : "The response from the list namespace operation."
          }
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "9b1a054a-d887-3a20-b5b7-69d43ab411b0",
    "name" : "Check the specified namespace name availability.",
    "request" : {
      "urlPath" : "/subscriptions/4t4x/providers/Microsoft.Relay/checkNameAvailability",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "7oy2tujb5ajyjewiqncbzimcaubeg4d4cz6un0ihzri4f4h2tc50rn3y434yq0ke7sy0xtyvtujsxn8ral9o4yze3h64sjg7n7ekbfvy4sp77b9d52fgjge1as6mk9brpzn1lx5tepde20gocvg"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"reason\" : \"TooManyNamespaceInCurrentSubscription\",\n  \"nameAvailable\" : false,\n  \"message\" : \"Laboriosam accusantium ab qui. Odio harum aut. Est quo ut. Hic delectus qui voluptatem accusamus laboriosam. Iusto culpa quibusdam voluptas ullam enim delectus illum.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9b1a054a-d887-3a20-b5b7-69d43ab411b0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_CheckNameAvailability",
          "schema" : {
            "type" : "object",
            "properties" : {
              "message" : {
                "type" : "string",
                "description" : "The detailed info regarding the reason associated with the namespace.",
                "readOnly" : true
              },
              "nameAvailable" : {
                "type" : "boolean",
                "description" : "Value indicating namespace is available. Returns true if the namespace is available; otherwise, false."
              },
              "reason" : {
                "$ref" : "#/components/schemas/UnavailableReason"
              }
            },
            "description" : "Description of the check name availability request properties."
          }
        }
      }
    },
    "insertionIndex" : 42
  }, {
    "id" : "9e603479-aa47-3db0-8dca-62201baa1322",
    "name" : "Lists all available Relay REST API operations.",
    "request" : {
      "urlPath" : "/providers/Microsoft.Relay/operations",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "8glbg9til2opj7765omoyg1pzkroppacg41j6eytegejwpyirzwt2wt4kxzxyaul3pbrxaccbs0vbu4l1dzt1pze6iph4k3a90gwgkspnza10utajqfkad1fucwmi78km9g6x4p7090trlglfv4e7xj3jj5if3qq1bnlr2kfo5y25f1"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"display\" : {\n      \"provider\" : \"5jlqwq179l8r51lqpec5iw1pucecvzp2jaxvd3wjmkvwr0m8vkiitwpai4app7ufj1v9upfvt9omn6c8xx9o\",\n      \"resource\" : \"qjtrizcu6zt9ujix6v0459mqfar66qp4w\",\n      \"operation\" : \"3cafvyilkkpngrypdzem0ft1wlasaqbc02ub61g14r55jljnt5c4cbpermnbm855jdywrbjvk79la8c4pa3xkp7sobnhssbkdt293dex\"\n    },\n    \"name\" : \"Tameika Balistreri\"\n  }, {\n    \"display\" : {\n      \"provider\" : \"evk2tepkw769v33j\",\n      \"resource\" : \"640y2ip7nafjsrliubmdp4rs6vpzzm5vpemc54b8nuirjvxzt7vw0cbkk\",\n      \"operation\" : \"n4r3n9xqrvmjoq4prdoqi385cobxdcyerrpqibdpbypi0x3d0jr1epn7rq2tyanyd85vq9tjv18smc05wumxyselofy363k749smaivrtoq2ywmtgul9c4r9yqwx23dmih10fvlinkgnbkvg1vh9dmz54nztq\"\n    },\n    \"name\" : \"Gail Breitenberg\"\n  }, {\n    \"display\" : {\n      \"provider\" : \"oj4iplb3zevywp1xogvk9x40y9mhz5niilg16d7ombjloziovijame5asn9phecuobhtw5e44vtcyn06fmupyjolztkv1vfvgffkb32i6oiyv6qrwuc4efdol6jtwpuinnywcyd74zw27r5\",\n      \"resource\" : \"jl3aku5rs3x7u7yozs6u8ukbdo1gyqwy1ww6fzlecqmmzpdsr9ednjn4oslggmfdklc07k35v7n7m31syi6ihyuq743rxjwvs7xrtxclwfmbvaw9feu8fqtjerl0g0y4k6wv4uno6cx9ztmvctyc4z91l4xsyzedq2ix4mh3uoq1dxwazom4\",\n      \"operation\" : \"ckbp2lre62s6ka69dr8u53gja5mzzokolz2sqvnj3acbo84sobiona7epvorfbcy1aah3fra9jz33h771729s0geqpptsfe2va4dx027e24bfc65ehubctbe82rrq6sn0fbmguxrzmz6u1i20qtlgt3jxr5jwqc29pflhe0e8\"\n    },\n    \"name\" : \"Mrs. Timothy Kertzmann\"\n  }, {\n    \"display\" : {\n      \"provider\" : \"8hv7u14lv0cokivmwdvdgw03exqw1gej4lexthmfsejqsw84i7sra6xzcvu7w5vctb6wjrpmnfxbul6xn2ht1h7bdt3m1cjifgn50vwmp0dujih5zdsi2836vk3qwgudaimbqym9oz4jays4608qx81helkqrtfwaufnnkxtem0elqdp1qqy2klgsq6\",\n      \"resource\" : \"h7pesl5dkgnuggcgr82h3z241c10xfxflfwmji5gomyf1z6e8e91jvez13xmeqyiu4yzdz6pa4hiifrf0ew8cv5a9y7001refl32e2gopkb8fqlzzdzziloetfze478fgzqym17xy9aojuuuwqne8qdxjldd2u6dew9s8xs8kr7qsf50n5\",\n      \"operation\" : \"8mycazs91z88e2r2vvk23ydo\"\n    },\n    \"name\" : \"Jeri Ferry\"\n  }, {\n    \"display\" : {\n      \"provider\" : \"v3pi8qntykidm43ayz0jjiwe63n8nmevw5pgftlagqwz26pf8613s1nn41pzh9v9d1tfka1d45v9yzn3hzllm4ygyvy58dyizhmuk454wm8diy0c03bytivz68vne0\",\n      \"resource\" : \"q1euz4j7aaqf\",\n      \"operation\" : \"hiuvemefwrc1f960ywl9sfukc9tpm08px794hflm6rpb7y20hnhgd3mbt5muwnd0lcqe4ou701ne079gnbgl8c5fa8fbtzu5gmjg4nsfnnkens6k1ilxpuno8b\"\n    },\n    \"name\" : \"Rory Treutel\"\n  }, {\n    \"display\" : {\n      \"provider\" : \"te8nvuf4xy7r6d3ee9lhx7eq11fe80rerzn6bk6feamka9g35vf69n0rsku4wrdrka6urntfrsvcfh0i2wgf3p2ucfy7rqc4xjd4bd27wyqzpj5q0hj06pn87nsuocuwd1lwv8szayyo7yprfqtcrsifloyb9p8\",\n      \"resource\" : \"ihmsr9tvloywwluuoj0nvevyhoj3z6310dasgy0lda03t4spjx562xi9pj0xkbsag1xzmfkf2462ksp9q8fm1a0n3m36ekyqs53p3t69700yyi0\",\n      \"operation\" : \"udg4g3gmszw5q7yf0bx5pfrdo6iw14yg0pfxnh6powe2fr9jmpmfn5rxi58yoo3xoiddy4u6uz1i69gjg7gtve029lgynx55xwfc0t07ekw6qebf5br\"\n    },\n    \"name\" : \"Dona O'Keefe II\"\n  }, {\n    \"display\" : {\n      \"provider\" : \"5ubggg8dwj8ekq118e8aj7nu1hm114qo9idgir1bjclwt13bqxlzsp6n5dcckiw1qd1yrpun1g0tgoqbvhx6yfqvply3iasdspnhcp4pgm60ja5efksd3m93hz4fjbfbfs9dtn18qki1yoefq3fwtx23uazujemy8p1apo6d2tl8jtjcl6ylc99bqqiml3ntdovhhg3l\",\n      \"resource\" : \"qvhpkavgu3979hy41fipeofzbh0ho\",\n      \"operation\" : \"efddfoqqvvy33knggihif193bulw2iazf\"\n    },\n    \"name\" : \"German Christiansen Sr.\"\n  } ],\n  \"nextLink\" : \"1w9u\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9e603479-aa47-3db0-8dca-62201baa1322",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Operations_List",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "URL to get the next set of operation list results if there are any.",
                "readOnly" : true
              },
              "value" : {
                "type" : "array",
                "description" : "List of Relay operations supported by resource provider.",
                "readOnly" : true,
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                }
              }
            },
            "description" : "Result of the request to list Relay operations. It contains a list of operations and a URL link to get the next set of results."
          }
        }
      }
    },
    "insertionIndex" : 43
  } ]
}