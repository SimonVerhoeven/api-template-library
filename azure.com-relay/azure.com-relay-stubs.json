{
  "mappings" : [ {
    "id" : "757e5ec9-d1e6-4486-86f1-f0a516ce57bc",
    "name" : "Regenerates the primary or secondary connection strings to the WCF relay.",
    "request" : {
      "urlPath" : "/subscriptions/f95q/resourceGroups/Alita+Franecki/providers/Microsoft.Relay/namespaces/Yuette+Abernathy+V/wcfRelays/Dewitt+Lehner/authorizationRules/Wilmer+Goyette/regenerateKeys",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "hwd9aau3ol4ijv3fyj3q813mcqkizns010ixkvj8mb4vr7ns2vslwb94v3lemz2ri9xlkwvqavf6tjbql2iokf7vlo7lsmlk4bbflc90kimz1x74ftk6o1a4jt7ajzdtqyqb48mlzb7zj3lo3aicuspbhirq2z30yf77kg13sxs942wlanbt4"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"secondaryKey\" : \"9tig54mog7fe2h19o9pvzyndkit43n8qav974kjy83fpotcswrru1sglq7bl2rp3ammcq9kzg6fdah9suplf3bv5esa8j0zfa49oyhb0inuszss967q4at1gufytdavm7ff79fppk3own2wafwomykissyrxcmgqnsa1ug\",\n  \"keyName\" : \"Rogelio Murazik\",\n  \"primaryConnectionString\" : \"d40b8spkg08f09oit2i9mfm6pb47o0tt3tg4buuuhhqf1l3j5zrqia3wjoh4yj27vysnivealz8a0qiu6xzjh3sapzdtmws9djk2uplbn9jivhpgye9e2zizd5hayl4cgnsbm0fa5sokxp7dy\",\n  \"secondaryConnectionString\" : \"fq1q7cmjm3ocsf6i6dfh4ee711b1863nna4lkb52l8occ5ciw7nkwbqxeaxgtd3csuxo2zvkqybun6bqe6jhdsgc4ywtrlty2x5jey8k1sicpjd4i7oztpyqqwgdem9m65rejyc6vr5j\",\n  \"primaryKey\" : \"0ar0jqcc4tm3u1ekoo7rko2cmu1va3huys7v3o7m34dnjnhfbbr9zol1zcsjz1p\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "757e5ec9-d1e6-4486-86f1-f0a516ce57bc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.101375Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_RegenerateKeys",
          "schema" : {
            "type" : "object",
            "properties" : {
              "keyName" : {
                "type" : "string",
                "description" : "A string that describes the authorization rule."
              },
              "primaryConnectionString" : {
                "type" : "string",
                "description" : "Primary connection string of the created namespace authorization rule."
              },
              "primaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit primary key for signing and validating the SAS token."
              },
              "secondaryConnectionString" : {
                "type" : "string",
                "description" : "Secondary connection string of the created namespace authorization rule."
              },
              "secondaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit secondary key for signing and validating the SAS token."
              }
            },
            "description" : "Namespace/Relay Connection String"
          }
        }
      }
    }
  }, {
    "id" : "8d48b0e3-86ec-4dd9-8b74-1fee0dc93dea",
    "name" : "Primary and secondary connection strings to the WCF relay.",
    "request" : {
      "urlPath" : "/subscriptions/u6a5/resourceGroups/Miss+Rodger+Hegmann/providers/Microsoft.Relay/namespaces/Ms.+Sherman+Dicki/wcfRelays/Dr.+Chung+Lockman/authorizationRules/Miss+Stephane+Roob/listKeys",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "jjxd49yyp9um75tkmlkt7w7w2ryxp3lfdml3bvdtuf1y7cvldckfpzlu3a3lf4leavirsoznn924z8ccywad7zc4mvwb6n1f4b64bp3aiq7auvtzddp7g9ri0end68r9ghm7xkalkv6ms3yqler9une5lh1ovr751qiw82vxw39piyubbbf61uqo8"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"secondaryKey\" : \"ye7pjbrnh5qvk2js3wlvd44mm2uw0cj7x22i26bf2g1kympn\",\n  \"keyName\" : \"Britteny Nolan\",\n  \"primaryConnectionString\" : \"8bbw9g1r3fo8wh750vs7wvzeyfb66wbadqf7ozhvk1w9guba1nvuxtix7xigka977og6g049mzrty5pl8wduhqdngg14nb1ilt4cdxtlmh0im6ibaq26j1158hhyphx0nwh06kkunm8yfpqr2kv414ounn6\",\n  \"secondaryConnectionString\" : \"zatff5x7xs10bgppdc7rsop0tabws50afazp3o96ntitcryyl5jljah4h4xuru3yk5apexmztoz9d8s5\",\n  \"primaryKey\" : \"jqgfyq08nkpz1laq6qqc87nc358loq8v61wcj3i7aihrkh2u5214x6szl0s8ddu7vnd1h6k6n7icdhrr1m5u26vncfvea936erj9945qcfl4r8ottz5q5vfu8x37jg184ldh8kddha6q7rpg9ffzfxkzib9a399twu4phgc45dkkaiuk20o2nvjelbkgcngtb88knae\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8d48b0e3-86ec-4dd9-8b74-1fee0dc93dea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.100968Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_ListKeys",
          "schema" : {
            "type" : "object",
            "properties" : {
              "keyName" : {
                "type" : "string",
                "description" : "A string that describes the authorization rule."
              },
              "primaryConnectionString" : {
                "type" : "string",
                "description" : "Primary connection string of the created namespace authorization rule."
              },
              "primaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit primary key for signing and validating the SAS token."
              },
              "secondaryConnectionString" : {
                "type" : "string",
                "description" : "Secondary connection string of the created namespace authorization rule."
              },
              "secondaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit secondary key for signing and validating the SAS token."
              }
            },
            "description" : "Namespace/Relay Connection String"
          }
        }
      }
    }
  }, {
    "id" : "87abfba3-844a-4de2-b696-82f26ed8b3ca",
    "name" : "Deletes a WCF relay authorization rule. - 204",
    "request" : {
      "urlPath" : "/subscriptions/17vs/resourceGroups/Jung+Friesen/providers/Microsoft.Relay/namespaces/Jake+Cormier/wcfRelays/Mrs.+Scott+Hirthe/authorizationRules/Jannette+Hackett",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "zmqllcy4imcdh"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "87abfba3-844a-4de2-b696-82f26ed8b3ca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.100553Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_DeleteAuthorizationRule"
        }
      }
    }
  }, {
    "id" : "d78a5f2e-a8b4-4bf8-b053-6dcb9310602c",
    "name" : "Deletes a WCF relay authorization rule. - 200",
    "request" : {
      "urlPath" : "/subscriptions/81gy/resourceGroups/Miss+Josephine+Kessler/providers/Microsoft.Relay/namespaces/Seth+Cruickshank/wcfRelays/Mr.+Jenna+Dickinson/authorizationRules/Kamilah+Lakin",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "4w5min8vab5ehce1vmz9nartck10v"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "d78a5f2e-a8b4-4bf8-b053-6dcb9310602c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.100301Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_DeleteAuthorizationRule"
        }
      }
    }
  }, {
    "id" : "969fc590-8700-4ff1-85e1-5b206721fdca",
    "name" : "Creates or updates an authorization rule for a WCF relay.",
    "request" : {
      "urlPath" : "/subscriptions/l04c/resourceGroups/Sherise+Ankunding/providers/Microsoft.Relay/namespaces/Buford+Bode/wcfRelays/Morgan+Anderson/authorizationRules/Lane+Ankunding",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "x6b2ptz8ynz8jzjq2spj23outyq18v51qzo46rn5xkkv7jyerxk3p9obpxe4u6jcsxrjh2mvmzwrymt1rcst8zc00okiu2bgkmsp50dk5ignvgwgzt"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Kendall Jenkins\",\n  \"id\" : \"dd66\",\n  \"type\" : \"bpptf3ahylfh5a0tx4fwn5pc8yyb5534t8\",\n  \"properties\" : {\n    \"rights\" : [ \"Listen\", \"Send\", \"Listen\" ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "969fc590-8700-4ff1-85e1-5b206721fdca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.100036Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_CreateOrUpdateAuthorizationRule",
          "schema" : {
            "properties" : {
              "properties" : {
                "required" : [ "rights" ],
                "type" : "object",
                "properties" : {
                  "rights" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    "description" : "The rights associated with the rule.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "Manage", "Send", "Listen" ]
                    }
                  }
                },
                "description" : "Authorization rule properties."
              }
            },
            "description" : "Description of a namespace authorization rule.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "25de2d09-babc-40cd-8a73-e5c3026bdb74",
    "name" : "Get authorizationRule for a WCF relay by name.",
    "request" : {
      "urlPath" : "/subscriptions/24t8/resourceGroups/Mr.+Kamala+Abshire/providers/Microsoft.Relay/namespaces/Kasey+Stehr+I/wcfRelays/Jewel+Mitchell/authorizationRules/Dr.+Carlos+Graham",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "1is9gm9o7t9"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Phylis Koelpin\",\n  \"id\" : \"4i65\",\n  \"type\" : \"3jigyo8geiuutw8mrn\",\n  \"properties\" : {\n    \"rights\" : [ \"Manage\", \"Send\", \"Send\" ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "25de2d09-babc-40cd-8a73-e5c3026bdb74",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.099614Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_GetAuthorizationRule",
          "schema" : {
            "properties" : {
              "properties" : {
                "required" : [ "rights" ],
                "type" : "object",
                "properties" : {
                  "rights" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    "description" : "The rights associated with the rule.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "Manage", "Send", "Listen" ]
                    }
                  }
                },
                "description" : "Authorization rule properties."
              }
            },
            "description" : "Description of a namespace authorization rule.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "0208f73d-bfac-44c7-80ce-94e37fadd2f9",
    "name" : "Authorization rules for a WCF relay.",
    "request" : {
      "urlPath" : "/subscriptions/1099/resourceGroups/Dr.+Mina+Pfeffer/providers/Microsoft.Relay/namespaces/James+Rath/wcfRelays/Nakita+Crooks+Sr./authorizationRules",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "1ny8qyobrgotcgkbngcj2fck6osxuraj9l4ilt9h5ekiuxk2ehqalqzidq9narfpoargupscbpg7uvaoa01zowbmfb5g7kc1arwlceh6ttoo9awg3wa9joqofnn35rvdfglxs7gsri5iunw95rkchgdb4q4l3nqnwhxgl541e4ic"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Brice Welch\",\n    \"id\" : \"yy48\",\n    \"type\" : \"v100opvn1p5pzdq8qx9zs6670uwmgf85rkttylgtugosz28np5ivg58sqmxl8rt7lx2q5fwb668wl6euvsosmkn3oyoiwwgosza8zr6772grr5uh0aru22huan2g\",\n    \"properties\" : {\n      \"rights\" : [ \"Send\", \"Listen\", \"Manage\", \"Manage\", \"Send\", \"Listen\", \"Send\", \"Listen\" ]\n    }\n  }, {\n    \"name\" : \"Mitsue Durgan\",\n    \"id\" : \"91j4\",\n    \"type\" : \"aylfht09tyddx89832iigdbkcjlqt6dpo6nzqv4c2w0uxdids176ycbhtycx26j795dj3wdt3izgxlp1q9b3e2uy389q9yoi4rru3arjofwahg1xgag1u1jfn7eajo87jwl15\",\n    \"properties\" : {\n      \"rights\" : [ \"Manage\", \"Send\", \"Send\", \"Manage\", \"Listen\", \"Listen\", \"Listen\", \"Send\" ]\n    }\n  } ],\n  \"nextLink\" : \"7noqc2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0208f73d-bfac-44c7-80ce-94e37fadd2f9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.099175Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_ListAuthorizationRules",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if value contains incomplete list of authorization rules."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the list authorization rules operation.",
                "items" : {
                  "$ref" : "#/components/schemas/AuthorizationRule"
                }
              }
            },
            "description" : "The response from the list namespace operation."
          }
        }
      }
    }
  }, {
    "id" : "75048024-5f0a-4b8d-aaee-7ced885ca759",
    "name" : "Deletes a WCF relay. - 204",
    "request" : {
      "urlPath" : "/subscriptions/zzlo/resourceGroups/Mr.+Shante+Breitenberg/providers/Microsoft.Relay/namespaces/Carroll+Shanahan/wcfRelays/Mrs.+Rosemarie+Boyle",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "41smcayux58jo0ow9lgadgaxujiq9pvauesifjb0z1mx3da647ybg4gk9fl7ke8nf3gx2apwdutfn8je4vhtnbmfvp025wolr7970anq3mkhei9q08nh1hex6lawkj"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "75048024-5f0a-4b8d-aaee-7ced885ca759",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.098581Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_Delete"
        }
      }
    }
  }, {
    "id" : "8a70ebe6-bfcc-4a83-931d-fd35cfca6dd2",
    "name" : "Deletes a WCF relay. - 200",
    "request" : {
      "urlPath" : "/subscriptions/l0oq/resourceGroups/Arminda+Medhurst/providers/Microsoft.Relay/namespaces/Brain+Maggio/wcfRelays/Ms.+Vinnie+Hudson",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "riko0ns13wyouzpp59lv3d5972nlc2ml53egrt55a1ceu4cgnr3jgoq65z42ojm8qwvtctsl0a8crqepczkf7jcb922h7akku055lki6ips88ysbfpo4irayql8wfdyq81uns1dk802v5mojm1xkr7kj4uj5dnidthfvz5za1h3m2i5h135p"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "8a70ebe6-bfcc-4a83-931d-fd35cfca6dd2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.098366Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_Delete"
        }
      }
    }
  }, {
    "id" : "600be4ac-b09d-4b09-a5c0-d49942f09cd4",
    "name" : "Creates or updates a WCF relay. This operation is idempotent.",
    "request" : {
      "urlPath" : "/subscriptions/9587/resourceGroups/Jesse+Kuhic/providers/Microsoft.Relay/namespaces/Eli+Cummerata/wcfRelays/Kasey+Kovacek",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "91irp1y4qmq7rv2ishiq3e9qudpkdjxs6x71vlt9lpmpnqamabm2qdaznj9vrpr6b9b8eakj1r2x54iefynihh8mjk72pvre"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Augustina Anderson\",\n  \"id\" : \"ysi6\",\n  \"type\" : \"c62od2frc87160ogz6896lysoysfasxj241kdz77xjjmindffbuakznxmcfze9acex8n22iax2po9airwkbl0ppcho94br1d5cna089asc1nxxzsmpvdw4459h0l8vl4et7dr229zp7ivv9ujflj349o38ljo\",\n  \"properties\" : {\n    \"createdAt\" : \"2023-06-11T19:45:45.097Z\",\n    \"listenerCount\" : 8,\n    \"isDynamic\" : true,\n    \"relayType\" : \"Http\",\n    \"requiresClientAuthorization\" : true,\n    \"userMetadata\" : \"hahr4n9x6i7n87fgpwhs5zdo4gvvnbq3wdtnu5s19s5p35ii5fwu19bgkr59xltch547apa8eig0aveo4go9aomawx59gky32be7o0klm9doy460iytmi378x2i9gsybe266o8gk0gv82oyd7a5x2igmmpcs51fku8gatrj2hs7q98t80f32uxb47v\",\n    \"requiresTransportSecurity\" : false,\n    \"updatedAt\" : \"2023-06-12T07:23:08.097Z\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "600be4ac-b09d-4b09-a5c0-d49942f09cd4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.098145Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_CreateOrUpdate",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "createdAt" : {
                    "type" : "string",
                    "description" : "The time the WCF relay was created.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "isDynamic" : {
                    "type" : "boolean",
                    "description" : "Returns true if the relay is dynamic; otherwise, false.",
                    "readOnly" : true
                  },
                  "listenerCount" : {
                    "maximum" : 25,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "The number of listeners for this relay. Note that min :1 and max:25 are supported.",
                    "format" : "int32",
                    "readOnly" : true
                  },
                  "relayType" : {
                    "type" : "string",
                    "description" : "WCF relay type.",
                    "enum" : [ "NetTcp", "Http" ]
                  },
                  "requiresClientAuthorization" : {
                    "type" : "boolean",
                    "description" : "Returns true if client authorization is needed for this relay; otherwise, false."
                  },
                  "requiresTransportSecurity" : {
                    "type" : "boolean",
                    "description" : "Returns true if transport security is needed for this relay; otherwise, false."
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "The time the namespace was updated.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "userMetadata" : {
                    "type" : "string",
                    "description" : "The usermetadata is a placeholder to store user-defined string data for the WCF Relay endpoint. For example, it can be used to store descriptive data, such as list of teams and their contact information. Also, user-defined configuration settings can be stored."
                  }
                },
                "description" : "Properties of the WCF relay."
              }
            },
            "description" : "Description of the WCF relay resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "57fbefa7-66ee-4155-9791-57df8c52d4de",
    "name" : "Returns the description for the specified WCF relay. - 204",
    "request" : {
      "urlPath" : "/subscriptions/x462/resourceGroups/Mrs.+Judie+Bailey/providers/Microsoft.Relay/namespaces/Lashunda+Walsh+MD/wcfRelays/Erin+Moen",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "bwxq2jwpiwarqr5njphz1qug5t9qolyoqj6fhtw7hmhsitlyiwthtgk9tjedu3wrcqhrm45togte4r4nl8m8c96ok31qt06h25gmccdujchrp8q0hjghm885pv7ixopu6gf94kuwvdi181j6bjcitaxvoa7fdg8y2zdm2gldaaew69vkhm9xvvzo"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "57fbefa7-66ee-4155-9791-57df8c52d4de",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.097678Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_Get"
        }
      }
    }
  }, {
    "id" : "011d3408-30d4-4164-8f64-5f3c7d89cea0",
    "name" : "Returns the description for the specified WCF relay. (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/4891/resourceGroups/Chance+DuBuque/providers/Microsoft.Relay/namespaces/Chastity+Blanda/wcfRelays/Adam+Bartoletti",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "7fc3rd5vmdruoecwpafmom99y2dshp0t9ql567qwkfmvjr4ape4235ozhio43okod8pth8kooqzr3hpvezkrkyp2kw5pr6c8nhozltnrcgk394"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Alicia Medhurst\",\n  \"id\" : \"7gyi\",\n  \"type\" : \"pel7yt8khbn5ia8xv04xd4b7wmn9phbz5dppujpzrt2656ag162164kywpk3nzvku6uf76s2num9odcwj4qwwclzhahsvduoc2ofjbntq3tmpbj5c7a1uzw5qkiqv7ni15acs24s34xeeb9rsrcbw6jos9n\",\n  \"properties\" : {\n    \"createdAt\" : \"2022-12-23T02:15:03.096Z\",\n    \"listenerCount\" : 14,\n    \"isDynamic\" : true,\n    \"relayType\" : \"NetTcp\",\n    \"requiresClientAuthorization\" : false,\n    \"userMetadata\" : \"093vvga3rceo4pj99g5lg37dy1u3nm7rinunv0vyj79ugpm2vo9rurwjfvidjqw3ce9tcp00qgbbqn239q9qzaa6q0vb4rsudmu9q89g27wbj4e8xs3c8d6tz1ki6xnak2g3awlj93ij7ucg5ht3gnwsiylu4iwnfwvrvhx885q94o1\",\n    \"requiresTransportSecurity\" : true,\n    \"updatedAt\" : \"2023-04-22T01:41:58.097Z\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "011d3408-30d4-4164-8f64-5f3c7d89cea0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.097445Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_Get",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "createdAt" : {
                    "type" : "string",
                    "description" : "The time the WCF relay was created.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "isDynamic" : {
                    "type" : "boolean",
                    "description" : "Returns true if the relay is dynamic; otherwise, false.",
                    "readOnly" : true
                  },
                  "listenerCount" : {
                    "maximum" : 25,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "The number of listeners for this relay. Note that min :1 and max:25 are supported.",
                    "format" : "int32",
                    "readOnly" : true
                  },
                  "relayType" : {
                    "type" : "string",
                    "description" : "WCF relay type.",
                    "enum" : [ "NetTcp", "Http" ]
                  },
                  "requiresClientAuthorization" : {
                    "type" : "boolean",
                    "description" : "Returns true if client authorization is needed for this relay; otherwise, false."
                  },
                  "requiresTransportSecurity" : {
                    "type" : "boolean",
                    "description" : "Returns true if transport security is needed for this relay; otherwise, false."
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "The time the namespace was updated.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "userMetadata" : {
                    "type" : "string",
                    "description" : "The usermetadata is a placeholder to store user-defined string data for the WCF Relay endpoint. For example, it can be used to store descriptive data, such as list of teams and their contact information. Also, user-defined configuration settings can be stored."
                  }
                },
                "description" : "Properties of the WCF relay."
              }
            },
            "description" : "Description of the WCF relay resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "7651b99f-79e5-46f7-96fd-e52684fc584c",
    "name" : "Lists the WCF relays within the namespace.",
    "request" : {
      "urlPath" : "/subscriptions/4s7o/resourceGroups/Jone+Kunde/providers/Microsoft.Relay/namespaces/Tyree+Zulauf/wcfRelays",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "rksy0it30jo5bies6h1lbmquprri5owuiddo4v6yf3rrc6vrlfxc130ibo5ro2vz5m0gvt3m6powpfdrg9fv0uqnstq1p35gfqyrbmd3dqr8jtxx1znelkyzijnwpvkggnqfes90difjmsvgjoy8rfiq4t7b"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Clark Ullrich\",\n    \"id\" : \"5mrs\",\n    \"type\" : \"foeb38k7ozpbg9o336uq17f70nx0ozuamoj01wz6cy3vo8aequguis71apv\",\n    \"properties\" : {\n      \"createdAt\" : \"2023-01-10T22:06:45.096Z\",\n      \"listenerCount\" : 3,\n      \"isDynamic\" : false,\n      \"relayType\" : \"Http\",\n      \"requiresClientAuthorization\" : false,\n      \"userMetadata\" : \"l6nhd7ld1g\",\n      \"requiresTransportSecurity\" : true,\n      \"updatedAt\" : \"2022-10-13T21:52:10.096Z\"\n    }\n  }, {\n    \"name\" : \"Gaston Cole\",\n    \"id\" : \"0lhp\",\n    \"type\" : \"4n1jjwhogufelthyl\",\n    \"properties\" : {\n      \"createdAt\" : \"2022-11-22T08:42:18.096Z\",\n      \"listenerCount\" : 0,\n      \"isDynamic\" : false,\n      \"relayType\" : \"Http\",\n      \"requiresClientAuthorization\" : true,\n      \"userMetadata\" : \"d63kkq1qn8eoiv3lwcn5wjzmcpzp9p39mlbfiap9r1muhg8lczjmwkm2bfx2po5lbvs38wcnekvf6p270jmzt13hqp473gfvlqv166cqjrcda5c4ivhes7ytu1\",\n      \"requiresTransportSecurity\" : false,\n      \"updatedAt\" : \"2022-10-28T10:56:41.096Z\"\n    }\n  }, {\n    \"name\" : \"Fredericka Emmerich V\",\n    \"id\" : \"j3do\",\n    \"type\" : \"60fmtpuonpth805cgy5nxil4pjwk1l8nhn8m07whgqd7n0whp4j1myf9ke2vqyt6l8y60u7qfbj0gvart695itszkyo2w4d7aock23bisjq34snydldlr4t2ot9acem4h3cfqh1mw8b1cchls4o40\",\n    \"properties\" : {\n      \"createdAt\" : \"2024-02-12T20:56:12.096Z\",\n      \"listenerCount\" : 8,\n      \"isDynamic\" : true,\n      \"relayType\" : \"Http\",\n      \"requiresClientAuthorization\" : true,\n      \"userMetadata\" : \"nx5422ukj1fti0s63zbol11f0up5t96vat6ocpl0a048grwc0urxtz6lpzikmlg2hlbf42wabhqj8iybv5ujp51mnsmsn0egq6xslul4qzutndtt2901k0kzksd915wyksjkvuq8er6b9g6p84v07t9alwwsj35131lf0sgx9w445b5gpp5o1q9xvn\",\n      \"requiresTransportSecurity\" : true,\n      \"updatedAt\" : \"2023-07-17T23:11:18.096Z\"\n    }\n  } ],\n  \"nextLink\" : \"jroj33wgdxeum56qgteidldy4auyucjsje6443t\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7651b99f-79e5-46f7-96fd-e52684fc584c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.096965Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_ListByNamespace",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if value contains incomplete list of WCF relays."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the list WCF relay operation.",
                "items" : {
                  "$ref" : "#/components/schemas/WcfRelay"
                }
              }
            },
            "description" : "The response of the list WCF relay operation."
          }
        }
      }
    }
  }, {
    "id" : "94618c5d-bd98-4c7d-8f61-5574eb9ff28f",
    "name" : "Regenerates the primary or secondary connection strings to the hybrid connection...",
    "request" : {
      "urlPath" : "/subscriptions/5ppg/resourceGroups/Deedra+Mayert/providers/Microsoft.Relay/namespaces/Mr.+Mariela+Schinner/hybridConnections/Yajaira+Harvey/authorizationRules/Willy+Jenkins/regenerateKeys",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "bkmkblx5ifys2dhkt7jlylmdpltxq4yna6i4djrdzphgqlqdxqsa75l1o6j4tgqzgelbmf1ukz6w1jp96db55l7d0iriutxckutuy0oude3l8f50nqcw0hfo3waq1bs60dpn5u7f2cli0z7ei4n6hw2ojxotrxiti2gh0zyeabhfpdrzprw8rj00s"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"secondaryKey\" : \"2b4duwdfnk12kxl0oe0x3fqkfp0odgd0z9a8qz5iyqf6abk2ejt613xg7hyo7d26qjzsj18vk8973pa57a7xeju8fvxq5cq5icmk6t2focj1nlcmrfhugc3t8w2ogbw2v1rfn7vu6vwryt\",\n  \"keyName\" : \"Esta O'Kon\",\n  \"primaryConnectionString\" : \"w8whumyu6bwvgvlbbac76jrglx84016n2zcg6biejl99fk2o3c70dwupbi3hka1rt\",\n  \"secondaryConnectionString\" : \"ae9hbaj4b1bvayn74dkoo6cobg48a2apmxkd6j5pwgxt381wl1x\",\n  \"primaryKey\" : \"x8n47e0mvzbg5at6s9vdu4r1e8zulzp5uiyrxb9ae\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "94618c5d-bd98-4c7d-8f61-5574eb9ff28f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.096179Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_RegenerateKeys",
          "schema" : {
            "type" : "object",
            "properties" : {
              "keyName" : {
                "type" : "string",
                "description" : "A string that describes the authorization rule."
              },
              "primaryConnectionString" : {
                "type" : "string",
                "description" : "Primary connection string of the created namespace authorization rule."
              },
              "primaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit primary key for signing and validating the SAS token."
              },
              "secondaryConnectionString" : {
                "type" : "string",
                "description" : "Secondary connection string of the created namespace authorization rule."
              },
              "secondaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit secondary key for signing and validating the SAS token."
              }
            },
            "description" : "Namespace/Relay Connection String"
          }
        }
      }
    }
  }, {
    "id" : "19aa1318-732f-4975-ac37-7f4278998f0b",
    "name" : "Primary and secondary connection strings to the hybrid connection.",
    "request" : {
      "urlPath" : "/subscriptions/3u74/resourceGroups/Archie+Carter/providers/Microsoft.Relay/namespaces/Annabell+Gerlach+V/hybridConnections/Vickie+Morissette/authorizationRules/Parker+Kshlerin/listKeys",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "noqv6925bdg8va8hyxfnupw41yrgfl6nb0e6sgpu150d1i4d5dx7wu31ytadumquldx0nrns58gyazcoox1smtnxvlkn6qjpphyxtv9zwjgmerocy5t5d3kgdrj6clsonrnrm8fbmo4h64q711vao0jykttvq9v7nb34oxkk3d849i3fz"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"secondaryKey\" : \"lmokfl3ivbnzv6b7d5sa143l2la0hkos1vp313glk06xz7ku8iww2pd86pvr5a7upmpsucd192z0b8a7hvw6dbwyxkzh3vo0w1z9zowaf75ahtwb022qyidwv7kpl6snnhgog0b51ev9cj224k8bov39fazf6nu7aacb6zpaouo44hknppzxphmfuxf0mzavz8fxfx\",\n  \"keyName\" : \"Griselda Blick PhD\",\n  \"primaryConnectionString\" : \"l25jpr0nczlkpp01rv2238xoh7t0z3rserk3kh38729v4cu069txm8kqauig6bh7iekhzrwpnxvhshigxuer2t2\",\n  \"secondaryConnectionString\" : \"wnsaza51wo173rsibncm84d7dl4tx87bhytav3mnnyzer3gr6njp24dm63g1rqrofn32xfu07kmlls5o4u03vin6rdahera62qgjz4jk65uilyo10arg7zwu\",\n  \"primaryKey\" : \"7wiws5275ypgbqzbcv3s6eb4b3uhv64rdjxgp3ue3zvbi6qqj7r9gt3emg6gzubmfy6jx0ifdaiuxjyjsavfh6bg8h4gucg3w6y62d46s24dpbeoakga3gptgyzf5g8ogbdbr96nzlecutvn69lrrr4yvbdoabamx9qcvdvxf1ko\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "19aa1318-732f-4975-ac37-7f4278998f0b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.095785Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_ListKeys",
          "schema" : {
            "type" : "object",
            "properties" : {
              "keyName" : {
                "type" : "string",
                "description" : "A string that describes the authorization rule."
              },
              "primaryConnectionString" : {
                "type" : "string",
                "description" : "Primary connection string of the created namespace authorization rule."
              },
              "primaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit primary key for signing and validating the SAS token."
              },
              "secondaryConnectionString" : {
                "type" : "string",
                "description" : "Secondary connection string of the created namespace authorization rule."
              },
              "secondaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit secondary key for signing and validating the SAS token."
              }
            },
            "description" : "Namespace/Relay Connection String"
          }
        }
      }
    }
  }, {
    "id" : "1e0dcbec-34ce-4bf7-98ca-339864601a51",
    "name" : "Deletes a hybrid connection authorization rule. - 204",
    "request" : {
      "urlPath" : "/subscriptions/ekb3/resourceGroups/Rico+Lubowitz/providers/Microsoft.Relay/namespaces/Deangelo+Gorczany/hybridConnections/Frances+Koelpin/authorizationRules/Rod+Kuhlman",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "r0gix3q17trbs4r8zc4jaxytgoyd8waywvp8i65bet3pwf0quqy3mcmk23zfp2sft5sxfpvr32mr2soj3ps"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "1e0dcbec-34ce-4bf7-98ca-339864601a51",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.095374Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_DeleteAuthorizationRule"
        }
      }
    }
  }, {
    "id" : "505b79cc-d21d-4b2c-b03c-f7911d6b9601",
    "name" : "Deletes a hybrid connection authorization rule. - 200",
    "request" : {
      "urlPath" : "/subscriptions/awb1/resourceGroups/Mrs.+Nydia+Pouros/providers/Microsoft.Relay/namespaces/Mr.+Viola+Hirthe/hybridConnections/Mr.+Maritza+Sporer/authorizationRules/Hung+Brown+V",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "2qp28iu6n5n0b65zoiqwaxx19fghvkn5pjads7sde7si0c5t1gnrwuik6q5ifsslrtexe1ik1iy7luvjpespr5e0cchbdmrnr7y6bx4ic4t19k6ie68qb0rh4xjst1ug1hq0v8eflb0ppfh23kd60x"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "505b79cc-d21d-4b2c-b03c-f7911d6b9601",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.095126Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_DeleteAuthorizationRule"
        }
      }
    }
  }, {
    "id" : "35723475-6c3a-4e4f-9011-8707f70f7e44",
    "name" : "Creates or updates an authorization rule for a hybrid connection.",
    "request" : {
      "urlPath" : "/subscriptions/qa28/resourceGroups/Mrs.+Angelo+Feest/providers/Microsoft.Relay/namespaces/Kandy+O%27Conner/hybridConnections/Linsey+Beatty/authorizationRules/Clementina+Donnelly+PhD",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "p99udi1gtavn5esiej0jusb1vv34bx939x1s4hzu9ebsc2fy4rl34d3e5h3thuz32mah5bemnfxdmlscddbv5oyxo2mvj9g4gjnpfb5nvxvl2lu8pajbx4c0y6lfe"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Bennie Rohan\",\n  \"id\" : \"zh11\",\n  \"type\" : \"m8favcj4rwq4fhs8e8amfnpi5gzmbu0rfhd8mjxqgm0z2gjk4me5ha0kpfibor3vwnsahz\",\n  \"properties\" : {\n    \"rights\" : [ \"Manage\" ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "35723475-6c3a-4e4f-9011-8707f70f7e44",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.094853Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_CreateOrUpdateAuthorizationRule",
          "schema" : {
            "properties" : {
              "properties" : {
                "required" : [ "rights" ],
                "type" : "object",
                "properties" : {
                  "rights" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    "description" : "The rights associated with the rule.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "Manage", "Send", "Listen" ]
                    }
                  }
                },
                "description" : "Authorization rule properties."
              }
            },
            "description" : "Description of a namespace authorization rule.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "984d4c43-c92e-487f-aa75-8d0aa3d726af",
    "name" : "Hybrid connection authorization rule for a hybrid connection by name.",
    "request" : {
      "urlPath" : "/subscriptions/ki4t/resourceGroups/Ulysses+Shanahan/providers/Microsoft.Relay/namespaces/Georgiann+Cassin/hybridConnections/Gail+Lueilwitz+DVM/authorizationRules/Phillis+Runolfsdottir+V",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "g2dp4uilvk0bfhq9mh9ean18gykf2tiy5ptw97rgsl2azx0j1dd99zjjzdhfau7olr2ocgcoqzzs5vnfqm9igxvx0m7qrd9ncwx8kohio0vzz9vd95lurxm602ixyjtdvh2pnpao3ud7"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Rickie Armstrong\",\n  \"id\" : \"i28o\",\n  \"type\" : \"1krgj0nvau7zaacba56zrsbpvo9gt4uz6hv7m1d29z5y8sa53bgc28cwdibb1ehdd44p2ty1zg4h8rnpu1dccl1pp25w6e2mrm6mmfl5d41l6999kro98igomvasubh63q8ng940mzr22a7evief3w8qwpbfq6\",\n  \"properties\" : {\n    \"rights\" : [ \"Manage\", \"Listen\", \"Listen\", \"Listen\", \"Manage\", \"Manage\", \"Manage\", \"Send\" ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "984d4c43-c92e-487f-aa75-8d0aa3d726af",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.094421Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_GetAuthorizationRule",
          "schema" : {
            "properties" : {
              "properties" : {
                "required" : [ "rights" ],
                "type" : "object",
                "properties" : {
                  "rights" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    "description" : "The rights associated with the rule.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "Manage", "Send", "Listen" ]
                    }
                  }
                },
                "description" : "Authorization rule properties."
              }
            },
            "description" : "Description of a namespace authorization rule.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "5cd0ba93-8061-4410-a3e1-98ae9e455f61",
    "name" : "Authorization rules for a hybrid connection.",
    "request" : {
      "urlPath" : "/subscriptions/b6vr/resourceGroups/Abel+Mohr+IV/providers/Microsoft.Relay/namespaces/Shantell+Stiedemann/hybridConnections/Latrisha+Green/authorizationRules",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "1oef6l6o4je4m00b9j7k258509vfh98y8hg0py918jtztfvz29qow9jjikfxjaf2bguyaa8xmn8zjgqjd2sr0z7alxfx1jxfjhkz3n74qx0x2uzb63f48oe5ny5tjcq"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Maricruz Friesen\",\n    \"id\" : \"784v\",\n    \"type\" : \"hmnsb3ld1xgthppmc8hwi62qo7q10nfkm1mhp5ue8k2j6tftpdvhb7yb0qn5h4pch6k31m3w65bjfl9\",\n    \"properties\" : {\n      \"rights\" : [ \"Manage\", \"Listen\", \"Manage\", \"Manage\", \"Manage\", \"Send\", \"Send\" ]\n    }\n  }, {\n    \"name\" : \"Dr. Ben Nienow\",\n    \"id\" : \"gk6w\",\n    \"type\" : \"f04bnop423usiy67wgddpcs526ksr3wo8cut2aj7rk\",\n    \"properties\" : {\n      \"rights\" : [ \"Manage\" ]\n    }\n  }, {\n    \"name\" : \"Mrs. Frances Raynor\",\n    \"id\" : \"935b\",\n    \"type\" : \"0zs8kqm4bhxba6zjdjrt97vvimd3m4j6ykcnmp19ro4cmbs5ks78q4xzi2yhvyiszis4vky48op4lopu0i00jmr65x2ku7aijo8fmeiqaqtf02izyg37tgdeashoh5s24wo0fystc4zhxnirmzkq6k4f3e3kqevv8y4eyawfsm2qac9e\",\n    \"properties\" : {\n      \"rights\" : [ \"Send\", \"Manage\", \"Manage\" ]\n    }\n  }, {\n    \"name\" : \"Quinton Koepp DDS\",\n    \"id\" : \"eowx\",\n    \"type\" : \"xxz9ce1s9w3cuekl9cf575w5maxa9bp6temytwmdmcc8xr9ujqjowvyuvj6s25xfp01063t3wuemcmysfe6a9pst8cyuc7eses9m10o54b2sf1m1ka0d3igrn4ieoi6wmcpcer5kk1j4q52vt0fbxbgw21\",\n    \"properties\" : {\n      \"rights\" : [ \"Listen\", \"Manage\", \"Listen\", \"Listen\", \"Listen\" ]\n    }\n  }, {\n    \"name\" : \"August Deckow\",\n    \"id\" : \"iiv8\",\n    \"type\" : \"c0bcnhigke8nyh6qvzuv79k2848cxzrgjrqs9ny4hvxqhcdlje97lwarch89cky19vm2hu6viawl7h1ov8jkbjtkeq82be3rxwveaeh8yfmuc8emp0g10qam2rchikfy19tx47ssrhm67d7oc8\",\n    \"properties\" : {\n      \"rights\" : [ \"Listen\", \"Listen\", \"Send\" ]\n    }\n  }, {\n    \"name\" : \"Vaughn Wuckert\",\n    \"id\" : \"92n0\",\n    \"type\" : \"sb4vbyqc9j8qs6rzb0mtcmi9ykvkfwlcgdo0aoq226g6w25mj3qt459buomr3xgji12bxtu2x4i5c9vqztqo253lu516evybpjiznpqrm9frm02iyn2ee9m3ufkyf4noxzytxz2bexm2geqh0utov6zh2qoevprlupog78qsss4gmoemqk3xu\",\n    \"properties\" : {\n      \"rights\" : [ \"Send\", \"Listen\" ]\n    }\n  }, {\n    \"name\" : \"Shanon Cummings MD\",\n    \"id\" : \"t9yy\",\n    \"type\" : \"y11bxihvcjen1qldt5lil6lq0i9997w7v9nosolzs4225nlplwepux68pa0lt9st37txthboswk6z7qf1in5jlgpr7u05tej9v1i299p3cs6r3flulivehejbu8ip6a3ypk6gnqqhytyg30pjkri8z73xm5e9up3hi5tb9evqcjrwb5ap03bxdcqg3e513\",\n    \"properties\" : {\n      \"rights\" : [ \"Listen\", \"Manage\", \"Listen\", \"Listen\", \"Send\", \"Listen\", \"Send\", \"Send\" ]\n    }\n  } ],\n  \"nextLink\" : \"oc0uzr2tgbtp98exug62p88od7zynki6i925qecp7746okdjqfgmnx17yiy1s3vkm6t3kp2eix3gfymia0vsj8d6z9lboykqjkb5z653rl4v4z8n2gt3234iovpkn10z2rjr2fociag6ax4lymblukl97o2fxokjfek1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5cd0ba93-8061-4410-a3e1-98ae9e455f61",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.09396Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_ListAuthorizationRules",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if value contains incomplete list of authorization rules."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the list authorization rules operation.",
                "items" : {
                  "$ref" : "#/components/schemas/AuthorizationRule"
                }
              }
            },
            "description" : "The response from the list namespace operation."
          }
        }
      }
    }
  }, {
    "id" : "075a2b8c-10a3-471b-95b9-882c1e9fceab",
    "name" : "Deletes a hybrid connection. - 204",
    "request" : {
      "urlPath" : "/subscriptions/hpww/resourceGroups/Mr.+Marian+Hermann/providers/Microsoft.Relay/namespaces/Mr.+Jewel+Connelly/hybridConnections/Wenona+Rempel",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "24ocfsfkzxk8eghf8h7z4u2jwqqmg9gms1gkgfwlbwutc0koiktm58f5qzgi44e52jpur57k8uu14b2hx3x8zrxn3binmlmcg5htsqheqf"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "075a2b8c-10a3-471b-95b9-882c1e9fceab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.092644Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_Delete"
        }
      }
    }
  }, {
    "id" : "b9f7eb5d-349e-45bb-94ce-a60b8043381c",
    "name" : "Deletes a hybrid connection. - 200",
    "request" : {
      "urlPath" : "/subscriptions/d4u6/resourceGroups/Gregorio+Gutmann/providers/Microsoft.Relay/namespaces/Marian+Stiedemann/hybridConnections/Erich+Lemke",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "gl0sesxilk09kbyw8cggzwi70j46tb42qjx7y9yyugip65kqc1r96jge4khnexamg8r3kkseaj"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "b9f7eb5d-349e-45bb-94ce-a60b8043381c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.092438Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_Delete"
        }
      }
    }
  }, {
    "id" : "a2f63695-4c33-40f2-96a3-fab1f3e695e7",
    "name" : "Creates or updates a service hybrid connection. This operation is idempotent.",
    "request" : {
      "urlPath" : "/subscriptions/z917/resourceGroups/Christoper+VonRueden/providers/Microsoft.Relay/namespaces/Henrietta+Lehner/hybridConnections/Estrella+Kerluke",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "ihd56biog4nezu4g1vbh09ew76jg4ftxu5rlwfapkfuna7eu5ws0kn8zbx0u"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Dyan Lueilwitz DDS\",\n  \"id\" : \"21l2\",\n  \"type\" : \"sblqaamtxcj2lzmp7jaxq91x1epg2vzmb30w49r5k7b\",\n  \"properties\" : {\n    \"createdAt\" : \"2022-04-10T02:19:20.091Z\",\n    \"listenerCount\" : 21,\n    \"requiresClientAuthorization\" : true,\n    \"userMetadata\" : \"geucolt9a9v2cc898qz18jbr0n4o10vdcvsk8tmbhca6636l8u5cwzv4rvm34qhjbbyba2nfhv6fwk1t07l8ubqw32cfq029h6cmsxpdcybhq4xjkhmypzsxi6draez9isfze6rtbtkzlin8up2x\",\n    \"updatedAt\" : \"2023-09-03T19:27:22.091Z\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a2f63695-4c33-40f2-96a3-fab1f3e695e7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.092214Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_CreateOrUpdate",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "createdAt" : {
                    "type" : "string",
                    "description" : "The time the hybrid connection was created.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "listenerCount" : {
                    "maximum" : 25,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "The number of listeners for this hybrid connection. Note that min : 1 and max:25 are supported.",
                    "format" : "int32",
                    "readOnly" : true
                  },
                  "requiresClientAuthorization" : {
                    "type" : "boolean",
                    "description" : "Returns true if client authorization is needed for this hybrid connection; otherwise, false."
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "The time the namespace was updated.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "userMetadata" : {
                    "type" : "string",
                    "description" : "The usermetadata is a placeholder to store user-defined string data for the hybrid connection endpoint. For example, it can be used to store descriptive data, such as a list of teams and their contact information. Also, user-defined configuration settings can be stored."
                  }
                },
                "description" : "Properties of the HybridConnection."
              }
            },
            "description" : "Description of hybrid connection resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "c6e8ad59-c47c-4710-8aab-9231afdca192",
    "name" : "Returns the description for the specified hybrid connection.",
    "request" : {
      "urlPath" : "/subscriptions/504m/resourceGroups/Miss+Deann+Fadel/providers/Microsoft.Relay/namespaces/Denny+Friesen/hybridConnections/Sanora+Deckow",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "b0gfjc8ikkm509pu8qppg2etw00jqzs3d6jwp9aps6mi5if0cdx5nprgcv0gbovam2m040rd0w8zlsm"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Dr. Monserrate Reilly\",\n  \"id\" : \"a36c\",\n  \"type\" : \"rjzrfy8n0cm9z3m29j7irsr960xzxhl8qcpxzoju96j542svf0jf803wrslx6ps08e2uwptnbmclb9m4a0hlqf04ihkgzw9lmx56pxatpgx9ilonbubt277i1lw6q\",\n  \"properties\" : {\n    \"createdAt\" : \"2023-06-22T23:29:11.091Z\",\n    \"listenerCount\" : 3,\n    \"requiresClientAuthorization\" : false,\n    \"userMetadata\" : \"loxbacylzvcuckjhc7yy4gp6txt70d6xj4271aofnv8x2cm74ufqqzx8sqirld8ebqsbrn4uy2gcv1fccborp9p6kk8rvo28x4n3zd1v0vpsbnkw\",\n    \"updatedAt\" : \"2022-08-08T01:59:45.091Z\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c6e8ad59-c47c-4710-8aab-9231afdca192",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.091792Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_Get",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "createdAt" : {
                    "type" : "string",
                    "description" : "The time the hybrid connection was created.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "listenerCount" : {
                    "maximum" : 25,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "The number of listeners for this hybrid connection. Note that min : 1 and max:25 are supported.",
                    "format" : "int32",
                    "readOnly" : true
                  },
                  "requiresClientAuthorization" : {
                    "type" : "boolean",
                    "description" : "Returns true if client authorization is needed for this hybrid connection; otherwise, false."
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "The time the namespace was updated.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "userMetadata" : {
                    "type" : "string",
                    "description" : "The usermetadata is a placeholder to store user-defined string data for the hybrid connection endpoint. For example, it can be used to store descriptive data, such as a list of teams and their contact information. Also, user-defined configuration settings can be stored."
                  }
                },
                "description" : "Properties of the HybridConnection."
              }
            },
            "description" : "Description of hybrid connection resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "40cad72f-a164-44b2-ab78-c054fcb8ab2e",
    "name" : "Lists the hybrid connection within the namespace.",
    "request" : {
      "urlPath" : "/subscriptions/30po/resourceGroups/Mistie+O%27Hara/providers/Microsoft.Relay/namespaces/Virgen+Miller/hybridConnections",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "n87hn9brl9oaxv6uf3jey6y5nj2yhday2cfsy2i3eu4khz0f63ha2oag6dq1t70jua4q4zsqtz6h99nsw96asp3kyezpu0c6i5tjtfpgi9yyl36mgld4urpelq7sihn4zzkatkpugjgv9r6gr2s2d7l"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Jewell Johnston\",\n    \"id\" : \"03h4\",\n    \"type\" : \"2s63zocnct3remvz70h0ao8b5ueipq02jrmb4bog7vxbi35pay6ipgscnh3ilkbqdgecejmqps1sqr1vs4mzw4kv5ejiiuac1hfu70gvtyb8x8kyr05jn8j7gdg6s0dl6oo1mjpbfr6p3hpuso\",\n    \"properties\" : {\n      \"createdAt\" : \"2023-10-28T06:44:33.09Z\",\n      \"listenerCount\" : 4,\n      \"requiresClientAuthorization\" : true,\n      \"userMetadata\" : \"fu6wqc3f5lxxoy8l9hdpz37yy3bjm3p5ykuowj0nne9sozsxxvktr4rog9wbnm394wqeoak5p711iobuzb6a4p0nsddmwi1jajyemjyxkgqgg9aha3ie9ktu\",\n      \"updatedAt\" : \"2022-10-26T13:07:39.09Z\"\n    }\n  }, {\n    \"name\" : \"Forest Sporer\",\n    \"id\" : \"tib7\",\n    \"type\" : \"y96mki7o8fkiukl1m1u2tkoknyp8uj7y8tyc\",\n    \"properties\" : {\n      \"createdAt\" : \"2023-10-14T13:39:19.09Z\",\n      \"listenerCount\" : 14,\n      \"requiresClientAuthorization\" : false,\n      \"userMetadata\" : \"hog7c689josad274n026czaxbswclut45lpgufsgd68tk1esu4gr4fody2gvgr2x0teydp6k9det0hqrt1dvek3zpjke23kytxjackbu49kjhmg88pcifgf1pv6orqosj5pur6nma5o3wor3vappn70jid8f4seufp7rz\",\n      \"updatedAt\" : \"2023-05-21T07:41:46.09Z\"\n    }\n  }, {\n    \"name\" : \"Miss Elden Paucek\",\n    \"id\" : \"zf9h\",\n    \"type\" : \"lecmqzcxhgcn69v7r04vtogaj6ffvyx7p3wg9tg8leit9yqesmsws194te40j8c1jzt39f71b4qxdxhpw29ztdftx4rpv1ssrkx8hadslj60657x089upbeml1ee7xxo80y154hg9bcocadw9k43zv1zr9o79wlwc0ukur4awwbuwlj6hegkw9kn1bh4gvq4e8\",\n    \"properties\" : {\n      \"createdAt\" : \"2022-11-25T07:16:15.09Z\",\n      \"listenerCount\" : 15,\n      \"requiresClientAuthorization\" : false,\n      \"userMetadata\" : \"fyve92awse61znwimfu7dwwvb2dekfra0w7tzhnc2ies71kb93vqumm6ilx2xo6e2srmhf02rx46nuc3rgoh51fkaqayabsb2m9f2cphlrha0vly1wkym81m9z3y5zdgarxa732fih3serr3998\",\n      \"updatedAt\" : \"2023-03-21T16:59:49.09Z\"\n    }\n  } ],\n  \"nextLink\" : \"0twky71rj29m5utxjmgo2khcdhjmt888ri01c82a80fmanmok8khqvoqx0nvz7mtempzk4tjleeyj0fdijyaiq3cgudeznawdspft8m773pkixbeepm7fuvmm47pj17sbwqxhmup109pxxm245wn0gcgy4f51aip20qlw0850hrp36d67xbngz8vtqylowy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "40cad72f-a164-44b2-ab78-c054fcb8ab2e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.091349Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_ListByNamespace",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if value contains incomplete list hybrid connection operation."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the list hybrid connections.",
                "items" : {
                  "$ref" : "#/components/schemas/HybridConnection"
                }
              }
            },
            "description" : "The response of the list hybrid connection operation."
          }
        }
      }
    }
  }, {
    "id" : "4d87aa85-921f-477c-9499-3ecd3e2d5b24",
    "name" : "Regenerates the primary or secondary connection strings to the namespace.",
    "request" : {
      "urlPath" : "/subscriptions/69wi/resourceGroups/Yung+Harber/providers/Microsoft.Relay/namespaces/Mrs.+Al+Marvin/authorizationRules/Verdie+Wolff/regenerateKeys",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "axrn7q2gfcozjibqxoztdo8j5ld9jpgttr4k4apszauymd0k5tk7m5nr7xk7n3e5xczkqk9qrgux7udwcndt91izk6jg659ug4v6xob56dmnxesmh9558c12st3mxjufwu"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"secondaryKey\" : \"30dorqtccjfkrwdjnylzqzmeayohsuf759jmd02zx0j1a1ihsewdmd5w2j2x9dew10lh7b3ae3c2ufwpumnr322hhmcqwntrp9wjxmeqz9z5\",\n  \"keyName\" : \"Dale Upton DVM\",\n  \"primaryConnectionString\" : \"hp0vqbog092c8utpj0nemong3czh19qjq2mbc2zqdeby0e7ixa73hrvrsktzcmz1nv9a420mfhwq39keibbfk4apg7ta9\",\n  \"secondaryConnectionString\" : \"u8ujzu5am9xu8j6ogh2depsgi962e00rc4p3xumafviihz8j4s9unl1bxp9803fsifxdf3xv5l61wqd5qcfzrbyibespd6nishfie92hwet3021saop1y50p8kf7u90t7xaqtk8x4jyebdwv4tis0fx3xczf7k20ugz564tqu7a1rtyb1fvj4r601ujlrrpfa1pyf2c8\",\n  \"primaryKey\" : \"spr4bz9oo5bsrwzjxkvci5khkzf0f2nzekgk7x70rs4tl01ttg835\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4d87aa85-921f-477c-9499-3ecd3e2d5b24",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.09063Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_RegenerateKeys",
          "schema" : {
            "type" : "object",
            "properties" : {
              "keyName" : {
                "type" : "string",
                "description" : "A string that describes the authorization rule."
              },
              "primaryConnectionString" : {
                "type" : "string",
                "description" : "Primary connection string of the created namespace authorization rule."
              },
              "primaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit primary key for signing and validating the SAS token."
              },
              "secondaryConnectionString" : {
                "type" : "string",
                "description" : "Secondary connection string of the created namespace authorization rule."
              },
              "secondaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit secondary key for signing and validating the SAS token."
              }
            },
            "description" : "Namespace/Relay Connection String"
          }
        }
      }
    }
  }, {
    "id" : "ba7ab8be-e395-4a4f-bcbb-8d10bc2e20de",
    "name" : "Primary and secondary connection strings to the namespace.",
    "request" : {
      "urlPath" : "/subscriptions/496p/resourceGroups/Annabell+Bosco/providers/Microsoft.Relay/namespaces/Birgit+Deckow/authorizationRules/Boyd+Yost/listKeys",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "a2jb1qd01lpxzp4a6vfqrt3qtxh69usigz2b4qss9"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"secondaryKey\" : \"orp5qlts29rzl4mv0vhdub3g58o54whmx3kliwk3ewtxgb3718d8uh1jw8jfsabajm0gcrbzm5pf\",\n  \"keyName\" : \"Long Treutel\",\n  \"primaryConnectionString\" : \"44xjkpasb676qsl26ardzpfi4q4l2mbuzn79yhtfwogvx22au1pgb25fq177qda91xp6hgib7uj3s4cpvx0z3w3wae5awqydzkvt7zmim7idxdwze6mukweqw16du1cic7\",\n  \"secondaryConnectionString\" : \"vtvvscpjsp2fcs0i4gmgx0wwfb4mrq3f94x5bqi4zt6fc5jt9u64yakfvxc0bgrhe5gcnly360zuixawzqp0q\",\n  \"primaryKey\" : \"m8lgmfn9hny4wlq8bdlna9hgmy8v1ffu6owqwi7fjon12z3i7rch8lbamtdy51lmoxteni0vjulqd6r9b8tdgox27k86ko4cnv3t2x461v0a513868skinjuo4n7mj513akvslp1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ba7ab8be-e395-4a4f-bcbb-8d10bc2e20de",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.09028Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_ListKeys",
          "schema" : {
            "type" : "object",
            "properties" : {
              "keyName" : {
                "type" : "string",
                "description" : "A string that describes the authorization rule."
              },
              "primaryConnectionString" : {
                "type" : "string",
                "description" : "Primary connection string of the created namespace authorization rule."
              },
              "primaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit primary key for signing and validating the SAS token."
              },
              "secondaryConnectionString" : {
                "type" : "string",
                "description" : "Secondary connection string of the created namespace authorization rule."
              },
              "secondaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit secondary key for signing and validating the SAS token."
              }
            },
            "description" : "Namespace/Relay Connection String"
          }
        }
      }
    }
  }, {
    "id" : "cd1acbe6-14a3-46cd-984c-5f10adfd10dc",
    "name" : "Deletes a namespace authorization rule. - 204",
    "request" : {
      "urlPath" : "/subscriptions/09oz/resourceGroups/Darryl+Baumbach/providers/Microsoft.Relay/namespaces/Willy+O%27Conner+I/authorizationRules/Sandy+Lindgren",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "lahyk9su41eovrbkbe8x6obsd0dmrwjzvx9ig6ojeuedt23d8znwwdbb0wiargqgccftt1wqnicd2ogi6ipji64sg836i4qy0oeukpno8uskdf2z9oxm7iftnv3gitypj5mh4ej1p"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "cd1acbe6-14a3-46cd-984c-5f10adfd10dc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.08993Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_DeleteAuthorizationRule"
        }
      }
    }
  }, {
    "id" : "577026f7-c7d5-4c88-ad0f-b35881b48ed5",
    "name" : "Deletes a namespace authorization rule. - 200",
    "request" : {
      "urlPath" : "/subscriptions/4exs/resourceGroups/Erin+McCullough/providers/Microsoft.Relay/namespaces/Dr.+Petra+Schuppe/authorizationRules/Glayds+Rice",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "2s3lcshyl63s9nyz0wmb5ltwycw3tb1pd35axiaxessucleyayy8r717a704rnrv3d80po1gqkkngsn8l88pnv73shgiar1kh43"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "577026f7-c7d5-4c88-ad0f-b35881b48ed5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.089715Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_DeleteAuthorizationRule"
        }
      }
    }
  }, {
    "id" : "bb527ad6-605c-452e-adec-c516c6f93db5",
    "name" : "Creates or updates an authorization rule for a namespace.",
    "request" : {
      "urlPath" : "/subscriptions/iymt/resourceGroups/Ms.+Erick+Zemlak/providers/Microsoft.Relay/namespaces/Harland+Bartoletti+PhD/authorizationRules/Valery+Graham",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "pxxlyp1czt5j9xcoe09shuquqx4h3rqwbekk8onwa8yemysqwch8nhefk6m9atrbilql6hb3b15rkmispre0ygvle4ayhr846dch"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Julia Lockman\",\n  \"id\" : \"6liz\",\n  \"type\" : \"cng2vhcqf6kmvg31bqgqfcltx82ksjsnn1i5lllp49ciojuv5iwk9kk58whlufywg8dtjugs6zug8m45h1kc6eok3ccxpuasdwbf0quzins86yaw0fsgid9ctchiw8nfb\",\n  \"properties\" : {\n    \"rights\" : [ \"Listen\", \"Send\", \"Send\", \"Send\", \"Manage\", \"Send\", \"Listen\", \"Listen\" ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bb527ad6-605c-452e-adec-c516c6f93db5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.089495Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_CreateOrUpdateAuthorizationRule",
          "schema" : {
            "properties" : {
              "properties" : {
                "required" : [ "rights" ],
                "type" : "object",
                "properties" : {
                  "rights" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    "description" : "The rights associated with the rule.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "Manage", "Send", "Listen" ]
                    }
                  }
                },
                "description" : "Authorization rule properties."
              }
            },
            "description" : "Description of a namespace authorization rule.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "0541e27d-f9a1-4337-83e2-45c840a6e772",
    "name" : "Authorization rule for a namespace by name.",
    "request" : {
      "urlPath" : "/subscriptions/765c/resourceGroups/Elva+Dickens/providers/Microsoft.Relay/namespaces/Chang+Mosciski/authorizationRules/Farah+Balistreri",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "wzaerazebdmyggbju8b8d10qwxfeo2hle3e"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Martin Lebsack\",\n  \"id\" : \"j789\",\n  \"type\" : \"axb5ccj4jjb3oavf97vsjjyelgk72euah0biap3uajxprwfzekxnmf3bq1vmgwvcdqt5hoxgbqkaq4egm722y2jego7tkz0h7uvlewolyqppnnq9eyuciwqbmpmdcve8ux\",\n  \"properties\" : {\n    \"rights\" : [ \"Send\", \"Send\", \"Send\", \"Send\", \"Send\", \"Send\" ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0541e27d-f9a1-4337-83e2-45c840a6e772",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.089095Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_GetAuthorizationRule",
          "schema" : {
            "properties" : {
              "properties" : {
                "required" : [ "rights" ],
                "type" : "object",
                "properties" : {
                  "rights" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    "description" : "The rights associated with the rule.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "Manage", "Send", "Listen" ]
                    }
                  }
                },
                "description" : "Authorization rule properties."
              }
            },
            "description" : "Description of a namespace authorization rule.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "d283fa73-1b46-413a-91be-00f023a674d2",
    "name" : "Authorization rules for a namespace.",
    "request" : {
      "urlPath" : "/subscriptions/h18r/resourceGroups/Ben+Howell/providers/Microsoft.Relay/namespaces/Francisco+Schimmel/authorizationRules",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "l4b69cpmwzh3rufgddu99sh59qvtlp5qiafnjvjvl6xmvu4ukmgxhaz106ylgp7n07zn2v2rstgg9kgmq0cshysrw1wtzppigr8zv5unyoovb0ae8"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Benton Crona III\",\n    \"id\" : \"350q\",\n    \"type\" : \"dtwps8r2b30sa1t7ukb3282sniladfmzmfqk4z8jg6nsd0xjsnzte7kbvrjvympvtdvtdq81jd3xuv5a9saxs3b9bmr9vcmfamoymlzl2xx4ogow7bfp9yi358v749pjdrm5r4wqj28igbbk8kqngsqhb1mtghh0mp4whc4drc4596mjticp93rui887ftrq8xlp\",\n    \"properties\" : {\n      \"rights\" : [ \"Send\" ]\n    }\n  }, {\n    \"name\" : \"Miss Beatrice Towne\",\n    \"id\" : \"eag1\",\n    \"type\" : \"tlz6vb6ccma00ektj3j4r2pl2xldy6h1tcwq4bag4a9avm0zdobb70x3aqawk3dkj2j0wwibntp2m\",\n    \"properties\" : {\n      \"rights\" : [ \"Send\", \"Send\", \"Send\", \"Listen\", \"Manage\", \"Manage\" ]\n    }\n  }, {\n    \"name\" : \"Megan Smitham\",\n    \"id\" : \"b578\",\n    \"type\" : \"n48ah8icl\",\n    \"properties\" : {\n      \"rights\" : [ \"Manage\", \"Manage\", \"Manage\", \"Manage\", \"Manage\", \"Listen\", \"Send\" ]\n    }\n  }, {\n    \"name\" : \"Dr. Donnette Funk\",\n    \"id\" : \"592g\",\n    \"type\" : \"4hkmy81gqquxmbto3fucl2aseyphye3x90lxlz\",\n    \"properties\" : {\n      \"rights\" : [ \"Manage\", \"Send\", \"Listen\", \"Send\" ]\n    }\n  }, {\n    \"name\" : \"Clarence Baumbach\",\n    \"id\" : \"n4dj\",\n    \"type\" : \"y8ohqjefvj1u9lq00bk7rokj74ne8nh05imoiyw8e1ihbx7q4obni6evy1b3qzlifzntkh78dolfrhjc0\",\n    \"properties\" : {\n      \"rights\" : [ \"Manage\", \"Manage\", \"Send\", \"Listen\" ]\n    }\n  } ],\n  \"nextLink\" : \"27k7tb9g8a3bk8ho4s0z7jmpent86q\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d283fa73-1b46-413a-91be-00f023a674d2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.088694Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_ListAuthorizationRules",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if value contains incomplete list of authorization rules."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the list authorization rules operation.",
                "items" : {
                  "$ref" : "#/components/schemas/AuthorizationRule"
                }
              }
            },
            "description" : "The response from the list namespace operation."
          }
        }
      }
    }
  }, {
    "id" : "b24f466a-4e18-4f80-a276-d9a7d9c34c33",
    "name" : "Creates or updates a namespace. Once created, this namespace's resource manifest...",
    "request" : {
      "urlPath" : "/subscriptions/92g5/resourceGroups/Mrs.+Tamra+Bauch/providers/Microsoft.Relay/namespaces/Jerrod+White",
      "method" : "PATCH",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "jatv6ae353bzdjznutxtvw5kyz0pf9x1oam1ddaexsgcd2uufzpm4bgb4xdp2inay3qzik1l5ni395xdl03fryirfelczxokj8ab2t1good3cdm82ze6xfphn7v3hi9qiuqn9m9yv6k67xbo8pfgx128ws7e6mtdktl86at3omf7ahioum9xmkehn0rdo"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"location\" : \"p35r2buqquieu9xpi3e8o281jxorvv6xjobgt9gugwokgdcconzw8ciopxmaaq11s3kvowyxuvndyrs2mwql2qqvv734gq8msq9a6p5pravzltpb8av7tb5aw\",\n  \"sku\" : {\n    \"tier\" : \"Standard\",\n    \"name\" : \"Standard\"\n  },\n  \"properties\" : {\n    \"createdAt\" : \"2022-06-23T13:34:56.087Z\",\n    \"metricId\" : \"o613\",\n    \"serviceBusEndpoint\" : \"r5u2ncjka4gqrz8akknpbour5ph0h2eueex0c2o666g0e8l58870tfri8jy8z9l0dup2f0t4lxjzcqz3ih0eeltglz8nufzi31jpwiyk2b0kwcqe2rkrcg66pmqiaj0f986w3wjwai4a4g3ninsy1hxqfetouyll62n8o\",\n    \"provisioningState\" : \"Deleted\",\n    \"updatedAt\" : \"2023-09-24T18:54:54.087Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b24f466a-4e18-4f80-a276-d9a7d9c34c33",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.087733Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Update",
          "schema" : {
            "properties" : {
              "properties" : {
                "$ref" : "#/components/schemas/RelayNamespaceProperties"
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Description of a namespace resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "acb41f97-a609-41fb-a939-162a68d8c6fd",
    "name" : "Creates or updates a namespace. Once created, this namespace's resource manifest...",
    "request" : {
      "urlPath" : "/subscriptions/26qn/resourceGroups/Mr.+Shu+Cummerata/providers/Microsoft.Relay/namespaces/Marjorie+Jones+MD",
      "method" : "PATCH",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "3v6yc996df93m3lbm1aeikuamu3kb8hngc1jumfwyy2trgw8m8dyv8ydxsve5ks1bs9c3vdwsayrk1ozbng1offya3v79g23fwf5y03wua90jo5t1kim5rezet9zten1pj7ne1"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"location\" : \"vbpd1swe77fzrs43xe97vqcms7h4ntpczgsf1e\",\n  \"sku\" : {\n    \"tier\" : \"Standard\",\n    \"name\" : \"Standard\"\n  },\n  \"properties\" : {\n    \"createdAt\" : \"2023-05-02T14:06:42.087Z\",\n    \"metricId\" : \"3tu5\",\n    \"serviceBusEndpoint\" : \"7zdtbfkxpdbx5i81tdrsaip98hr5kmnn9c9y1n7d1z7csyq0iei40pap9lymika5vhwavm2emrujwrop5lit7xz97af481sbckux9wcago5egtip2nnrdb\",\n    \"provisioningState\" : \"Succeeded\",\n    \"updatedAt\" : \"2022-07-08T21:52:00.087Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "acb41f97-a609-41fb-a939-162a68d8c6fd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.087399Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Update",
          "schema" : {
            "properties" : {
              "properties" : {
                "$ref" : "#/components/schemas/RelayNamespaceProperties"
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Description of a namespace resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "38cd7173-12a9-412d-873d-4ba42a7a5a27",
    "name" : "Deletes an existing namespace. This operation also removes all associated resour... - 204",
    "request" : {
      "urlPath" : "/subscriptions/e6f3/resourceGroups/Monroe+Towne/providers/Microsoft.Relay/namespaces/Grover+Purdy",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "6lf0mp4wtvgtx653jqdykq0t6d8dl4pefnr1dmqn0fo215tk9d8ht96fatu2o6k6tn28xg9lltwahjghvi5xovkuqz60fdc10cdmofnehqp7vcbi9bvist2124x7kg2ilaw735u1rlnapr08qon7bfhq3img0x0tn12iu0k8k2l2cyd5evltst3sogjvcmktqy0ba1"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "38cd7173-12a9-412d-873d-4ba42a7a5a27",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.087068Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Delete"
        }
      }
    }
  }, {
    "id" : "e677ae94-af94-4399-a45d-95bfd05ca28e",
    "name" : "Deletes an existing namespace. This operation also removes all associated resour... - 202",
    "request" : {
      "urlPath" : "/subscriptions/nngp/resourceGroups/Marcos+Schulist/providers/Microsoft.Relay/namespaces/Mr.+Xavier+Schimmel",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "oehe50dhcjmgapompco"
        }
      }
    },
    "response" : {
      "status" : 202
    },
    "uuid" : "e677ae94-af94-4399-a45d-95bfd05ca28e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.086889Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Delete"
        }
      }
    }
  }, {
    "id" : "b6e3d9f1-ba10-48c8-847c-52fa9a20f72c",
    "name" : "Deletes an existing namespace. This operation also removes all associated resour... - 200",
    "request" : {
      "urlPath" : "/subscriptions/s30a/resourceGroups/Viviana+Maggio+PhD/providers/Microsoft.Relay/namespaces/Season+Kuhic",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "rqz5deapap150k0txoyt4ehea8x3te5gv6zmxspqchk9l0assj9afoargfskevc626y"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "b6e3d9f1-ba10-48c8-847c-52fa9a20f72c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.08671Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Delete"
        }
      }
    }
  }, {
    "id" : "ee851c3b-8064-4b3b-a217-2e099213ac66",
    "name" : "Create Azure Relay namespace.",
    "request" : {
      "urlPath" : "/subscriptions/6ydm/resourceGroups/Miss+Cherelle+Krajcik/providers/Microsoft.Relay/namespaces/Daine+Monahan+Sr.",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "frbbmlh5oodt8jqpfm656kh4jn2ymvdaj0ug"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"location\" : \"9xq18cfbk4quectymn35d49jmd3b74vsoks9ktmctuinrrfbhtwwl29vtr0k2sgak2u1kwrpf57s92fub\",\n  \"sku\" : {\n    \"tier\" : \"Standard\",\n    \"name\" : \"Standard\"\n  },\n  \"properties\" : {\n    \"createdAt\" : \"2023-03-28T22:44:12.086Z\",\n    \"metricId\" : \"r0b2\",\n    \"serviceBusEndpoint\" : \"e6kvgyhbo5irca2rj1dmf072ospm2szh8mp38qho8lfx0q1329kwwpfp3gbu12ww52g03luigtj1b75e6fj8s817tytatz0b9ildbsvl1upqhxez\",\n    \"provisioningState\" : \"Created\",\n    \"updatedAt\" : \"2023-01-05T02:23:40.086Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ee851c3b-8064-4b3b-a217-2e099213ac66",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.086531Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_CreateOrUpdate",
          "schema" : {
            "properties" : {
              "properties" : {
                "$ref" : "#/components/schemas/RelayNamespaceProperties"
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Description of a namespace resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "ed6d8cc3-0bda-4b9b-9dec-fe9966a0067b",
    "name" : "Create Azure Relay namespace.",
    "request" : {
      "urlPath" : "/subscriptions/rrj1/resourceGroups/Rolf+Ruecker/providers/Microsoft.Relay/namespaces/Mr.+Francis+Treutel",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "tbazs2e41g8f16dqxyd1lmhcwznwgoi14fmcngx3xewm0zl1jrxwrgjefcfzzgipvevqt3fpckeqgai4fgxyedqh1ztqpgo3c7r1fr0mgocccr27jya6j8atozg4prsosq1943wywp6o5iam8sq6ibfndgli471ucoq9dxi9w02ainmlvij0q8"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"location\" : \"765wn1yk3hfny6snl1sgdotay0xea55uwsfy8ztw5nlpqnf9uxc0yxlnxiwroxrexhp2rcryr9spg7qfcrxhcvq4f91osyjvlg34c0wv9y00urs4wttdh5f90tpt92opexp4fna2dnx978ullvq1vdgfbk44z8fg567xd9ks4436n4f056p\",\n  \"sku\" : {\n    \"tier\" : \"Standard\",\n    \"name\" : \"Standard\"\n  },\n  \"properties\" : {\n    \"createdAt\" : \"2022-11-18T10:17:06.085Z\",\n    \"metricId\" : \"1w2x\",\n    \"serviceBusEndpoint\" : \"ehftu2hnn0qdfo0buhtmqvif06r2khmob7hjrccnh2426xfi3m0nokug7z5m7o9sk7rnideajs3adhizhn6nd9z5temv3e1l8uh139my5qjh3po8dtlwzcczq3qtc6qfdg7x3otq5\",\n    \"provisioningState\" : \"Created\",\n    \"updatedAt\" : \"2023-05-03T20:33:51.085Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ed6d8cc3-0bda-4b9b-9dec-fe9966a0067b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.086201Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_CreateOrUpdate",
          "schema" : {
            "properties" : {
              "properties" : {
                "$ref" : "#/components/schemas/RelayNamespaceProperties"
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Description of a namespace resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "f90b10d8-3015-4955-b1a1-775afb7069b8",
    "name" : "Returns the description for the specified namespace.",
    "request" : {
      "urlPath" : "/subscriptions/g609/resourceGroups/Lila+Nolan/providers/Microsoft.Relay/namespaces/Mira+Gerhold",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "wpxxdjtsokztb55ikkjyvf6ox1tfiq6xfsucjsx6ov9p1g5vz3l4925255gnejsez1n7q7w5"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"location\" : \"fsp5oq99ac5zeillq0q4jq0xm79w1wdpvkhssvzxmw8x08p0hi8gi8z6e8zpbsqwdg3t7no96d2ymotocl7nqnyubva2zmpr2wz05dbthrn9gto2gupvjuqtx1u5cuupq\",\n  \"sku\" : {\n    \"tier\" : \"Standard\",\n    \"name\" : \"Standard\"\n  },\n  \"properties\" : {\n    \"createdAt\" : \"2022-10-12T08:27:16.085Z\",\n    \"metricId\" : \"le6h\",\n    \"serviceBusEndpoint\" : \"s7hx3kyxn0dpqsoo1qrhasbfbn1ywnlq7wpweyii9a4u6wp1f5wib2ktu8mwgc250fuj6qabar84njabp1j1b5i6ma3ijzw2swkafts8a3q2qff53hosiles4uji7vhj68mk8zyuubm9o6xh2lsukeblrzjoz653bdpin3vzpijcnojyxirptvorf1bl2i\",\n    \"provisioningState\" : \"Updating\",\n    \"updatedAt\" : \"2023-05-19T04:24:15.085Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f90b10d8-3015-4955-b1a1-775afb7069b8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.085862Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Get",
          "schema" : {
            "properties" : {
              "properties" : {
                "$ref" : "#/components/schemas/RelayNamespaceProperties"
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Description of a namespace resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "ee6c263b-54a2-42ff-ab44-1efb779c6108",
    "name" : "Lists all the available namespaces within the ResourceGroup.",
    "request" : {
      "urlPath" : "/subscriptions/9hn0/resourceGroups/Ned+Gaylord/providers/Microsoft.Relay/namespaces",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "t8rm97ajmgy7ej8dfc5jpi285zkgqy5724ma0z7v9dloephncd"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"location\" : \"zqnwnw1tfyjgf3fk9vzo8nne7ok2lzhyt3di7fmhq7uycyzh7bxaikoxt1apemcvu796jkor8xwf6q2uig75\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\"\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2024-01-30T10:54:48.084Z\",\n      \"metricId\" : \"bj1v\",\n      \"serviceBusEndpoint\" : \"ih2lfbvq38am8g7q7zdbx0e6qt0g015bgoralimcmj3huezhjaytktmx01gsxh5rt\",\n      \"provisioningState\" : \"Unknown\",\n      \"updatedAt\" : \"2023-02-24T13:28:26.084Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"98sym4f2kec5q10o5sbisnxaxcyc1zqcvrgyec2ekictk6v9kwtn8i9a3lszrhf4ka96riu00zu9nqf2wqp6ec46a\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\"\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2022-07-11T22:03:43.084Z\",\n      \"metricId\" : \"9pnj\",\n      \"serviceBusEndpoint\" : \"9vt1kdb7o5zs692pcc3e9bzec4b6uzfrqaqrl3lsfet5siaaeq5f41j8sha0r610ln1ccjj51hrmx5a1bbb4wb0y587ct\",\n      \"provisioningState\" : \"Failed\",\n      \"updatedAt\" : \"2023-03-12T03:59:10.085Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"ggt01vcl78qaigie4ywbye5oj7gff2qk0uxkd7zkcs9kmwjq4yc4hcar7uxgw9nlzeh9vdq38j1ksc6xia0hvzeplmwdtlpn07rq6hbps8gj12runqdc02pycq4qeuv9b614z4yjvcjuv3faeh\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\"\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2022-03-07T09:20:14.085Z\",\n      \"metricId\" : \"17sy\",\n      \"serviceBusEndpoint\" : \"nvjqvmubihvwdo02qjbvphnaz9k90qcw1ehkg3r\",\n      \"provisioningState\" : \"Succeeded\",\n      \"updatedAt\" : \"2022-08-20T02:30:43.085Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"alosnou7h2mhcaf2bhuioqhvr31q8g5l4r3rsrqzghyjv80lw47kygc2mqptpks5p0b1dr12hgawkh7f0kw7bsnkh6h7vrxtfvxev9uh6qkqykifd8wzbwy6anm642rmqusqlkwqtogoj10tdt38xn58r7vfwypz0y\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\"\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2022-09-20T21:51:04.085Z\",\n      \"metricId\" : \"oj59\",\n      \"serviceBusEndpoint\" : \"8nm3m60er6wrz06bf3mihrs2q6sncqc0zjyygfp280jtjgblg50jl4em10vqelvounlqedhay6aask9kr3poc5mf\",\n      \"provisioningState\" : \"Unknown\",\n      \"updatedAt\" : \"2022-05-24T06:45:42.085Z\"\n    },\n    \"tags\" : { }\n  } ],\n  \"nextLink\" : \"ta7es1foa5hqm0ec8cfd4afoqv01nyg8qggnp4eer6j1u3b9mv5zogom53kwnao5et4c9ie2wvllaxmigot3pe88pu3xxnqi1yk8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ee6c263b-54a2-42ff-ab44-1efb779c6108",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.085521Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_ListByResourceGroup",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if value contains incomplete list of namespaces."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the list namespace operation.",
                "items" : {
                  "$ref" : "#/components/schemas/RelayNamespace"
                }
              }
            },
            "description" : "The response from the list namespace operation."
          }
        }
      }
    }
  }, {
    "id" : "1aeea39e-2175-42f6-a564-c2bd0f953529",
    "name" : "Lists all the available namespaces within the subscription regardless of the res...",
    "request" : {
      "urlPath" : "/subscriptions/55w3/providers/Microsoft.Relay/namespaces",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "fqxpz0nqlsz1ck9k5jwnztk7orrvbzpnyf5"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"location\" : \"t6eq0v5k89fwzi05vxbc75rbjpc3ctdsoqaui4m1n5kbuecnduaa9za1v2md9n97xe0w90gi91luikykj5d\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\"\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2022-12-10T04:48:59.084Z\",\n      \"metricId\" : \"sjto\",\n      \"serviceBusEndpoint\" : \"an8mhwoyt6806wwnu152uqx14q3rrw1izd1flrh23hrjdwdy3kinb9gir1xlo79omduxkj\",\n      \"provisioningState\" : \"Failed\",\n      \"updatedAt\" : \"2023-03-29T11:53:09.084Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"qan3sse50j7c6xcjppgdv9r9j8rsayq4ar5r4wuw0ex0j366drzfli34aro6kdqsnjyhszmlv4au1sok\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\"\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2023-10-17T01:47:37.084Z\",\n      \"metricId\" : \"yr96\",\n      \"serviceBusEndpoint\" : \"sd04xox8xesmp9nxxve1isqf1tm9j50glxq0jg7nscwq5w3lznnm5iwubqikw91zynefroxjit0ip1gzmrcwcmz8ac\",\n      \"provisioningState\" : \"Created\",\n      \"updatedAt\" : \"2022-05-29T12:57:05.084Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"gqdsihfirue6ql7wdjxhf5whz6x9q8y3xg93k3mtbalqca9iop4zz5ojn6zr9wec8rspnizfpwl1zi2bzm4118rmcrjkesxbwfntx7nsuwus8suhum6wd4jqpneaf1086p5w3ysop6w6d9da3ya0anw7j4zp2vobh7b517skifen74rs954k6i0yt2rmkm6\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\"\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2023-06-20T22:50:13.084Z\",\n      \"metricId\" : \"xha6\",\n      \"serviceBusEndpoint\" : \"dktyr7jtlop10gk3t853hszta08laelu6ymda132ci5vmqk1mwdt18hgn9r03mjqjurgk4lnoa3b3akookw2lno5gqo62nmtwnsfclyy1t2cg9wdpfe9y2sx33p7a90lp03jnja9v9izh2osgwd2kldk1c20wvnwnflrsrl0vs72tycttx4qa3f6vdu0wh8fs\",\n      \"provisioningState\" : \"Updating\",\n      \"updatedAt\" : \"2022-06-09T21:07:18.084Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"ffzaps2o7dbnyaxulbkyhsjhuyne1ut5a4d5jmylkb4tfbqu7h91oc2grzmqcscq5k502xx4ut30t25t5o2pnbw8\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\"\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2022-11-21T00:37:21.084Z\",\n      \"metricId\" : \"nf6z\",\n      \"serviceBusEndpoint\" : \"he9bukiiqqj1dvgazc6fixhio5eo\",\n      \"provisioningState\" : \"Created\",\n      \"updatedAt\" : \"2022-04-06T13:08:38.084Z\"\n    },\n    \"tags\" : { }\n  } ],\n  \"nextLink\" : \"pmfl6xq33nulhlwa4b19ecoq4vt6m6hncbq890jb7r47hfu2zb65clp8rksufrp471yanp1q9il6d9tmk4v3r7lbwus0118omxt3jkv5b4uwvl6zecsx957j4hhgx14uhydbte6ke9hvl5k8v4esg34pj9ginu6b8egru2yqqpwebssqhcfw4ec8ddze5wt\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1aeea39e-2175-42f6-a564-c2bd0f953529",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.084752Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_List",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if value contains incomplete list of namespaces."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the list namespace operation.",
                "items" : {
                  "$ref" : "#/components/schemas/RelayNamespace"
                }
              }
            },
            "description" : "The response from the list namespace operation."
          }
        }
      }
    }
  }, {
    "id" : "595e7006-59c4-45f7-a439-51c894829903",
    "name" : "Check the specified namespace name availability.",
    "request" : {
      "urlPath" : "/subscriptions/4q31/providers/Microsoft.Relay/checkNameAvailability",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "hiep4lotpe6fhnkqvc0jbxx6wwoh1123p7wbxkck6e9h40jq1o8l32zr6vzoy1ciyqrux08120i5rk6h2b0f1c69gq"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"reason\" : \"InvalidName\",\n  \"nameAvailable\" : false,\n  \"message\" : \"Distinctio minus vero saepe eos. Consequatur qui quidem blanditiis enim quia enim. Occaecati at unde.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "595e7006-59c4-45f7-a439-51c894829903",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.083986Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_CheckNameAvailability",
          "schema" : {
            "type" : "object",
            "properties" : {
              "message" : {
                "type" : "string",
                "description" : "The detailed info regarding the reason associated with the namespace.",
                "readOnly" : true
              },
              "nameAvailable" : {
                "type" : "boolean",
                "description" : "Value indicating namespace is available. Returns true if the namespace is available; otherwise, false."
              },
              "reason" : {
                "$ref" : "#/components/schemas/UnavailableReason"
              }
            },
            "description" : "Description of the check name availability request properties."
          }
        }
      }
    }
  }, {
    "id" : "165c7a9f-a5d6-42b2-bcf1-2a8371e20eb0",
    "name" : "Lists all available Relay REST API operations.",
    "request" : {
      "urlPath" : "/providers/Microsoft.Relay/operations",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "kdkes2r352igytw0h9wn3bj5k2k9jeo0nh3j0cxmhxen00jnp05g049x1jvqy91nw8ocwo1k9nhca9rntrrngjwxpgcrsgopdljbnk0g5pvylr6nnvllktsvqzlk5rs0co9x6ttst2pat0dftv32yasmigcwwyzhn2k5d3tsh3aw9qzvdstdaapjn"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"display\" : {\n      \"provider\" : \"mmv6e0uc0k0uomgz41lobyj71g60h5ja5of4pv78w7qsrqnp8pfgqof5jkbnwktg57xw5dnc1wj9lwagwspwkwr8xg560dy9eb18rf5cxwbcsq087egzqdolzwsecpr5vsf66te0eymi2smgc8qh\",\n      \"resource\" : \"dbdsnk0vg\",\n      \"operation\" : \"gecsc7hepa5pgrrrsv2vt224uq3kqnh1rsu00blbia7kalhhpke3587n76xs2gj28xd90d09dqw\"\n    },\n    \"name\" : \"Shannon Littel\"\n  }, {\n    \"display\" : {\n      \"provider\" : \"z3gtxnwizmzl87b1xa4ahlw55f09cwbctel3zbej37vx0pmlohlova8r9780aspopjwu30qo9ncko1nimy1tdlnjadf7whuqrg7ecfuo1gzwffrnkoc5ski5ftv2cqcb2ozrkf4k\",\n      \"resource\" : \"3tt0y1uulc9ozsg27jw2e18g4z05h47yt9zfvclogpniui77gb3g9ipjp5ylu86m2ecgjgxvc1yymqnvnpqteuqv96mqtsxk86nvtdi8dh89dvafxmqmko9ndun\",\n      \"operation\" : \"p4jaerta4ey3rsajfpnm4peoxjh6aqpcfmp8kzr8zbmak82pco0c1pmj6drakmg654cz43h824srohyo7pe15bwsxpj9b9z8yg0vi7g1y9dxnroaf7v1um85rg7sjj8qqgr723zuybxpxprywuzbq3ydra8a77dgh0f843ix7ls3d8zbvfov7yj\"\n    },\n    \"name\" : \"Mr. Sterling Gutmann\"\n  }, {\n    \"display\" : {\n      \"provider\" : \"xui0ksx5p64nhm63yj0xom7tto6sejy8\",\n      \"resource\" : \"lhzhwyc25ma5\",\n      \"operation\" : \"8gtgyc7gskob5gx22u3gbmmuji7m8fx5pggnmibnidzlpfhlizpo4metkiyu5yua4iy1ocjbvtf5sofldkold0nn1fnsn9lv8jjtlj7o3g25b2pnb9klq0qosdh\"\n    },\n    \"name\" : \"Jessika Hagenes DDS\"\n  }, {\n    \"display\" : {\n      \"provider\" : \"huunc3fsy04qp328w\",\n      \"resource\" : \"gqbpplmbcog54wtzd7hybeod7ms8h1v6cglu6k3aw9ed6nvcn8qonkw6a9tbea8fhury9hx7i489mbna0ceziqimwoqcmksogd9wp1w0i8s0sad3c3oa4t6qr2ajjdwi7on5bowuo1lbph8ywcv2f56kik9btzonzkmhvesacg\",\n      \"operation\" : \"igl37j04lucr3iw3zgtsk7r9j67rbu0m6agxr42r69e\"\n    },\n    \"name\" : \"Sage Johnson\"\n  }, {\n    \"display\" : {\n      \"provider\" : \"y59p26\",\n      \"resource\" : \"xxtq8ug23b7fqhzq465ur3wax6uk6wl7da35pibrchjnnx3tdp76axq51ozbt34nh1b7naxinhb3ltjy4orrzn1gvy603aunk8r84\",\n      \"operation\" : \"t5i3etmpc2zznlykj9044gbcsdbsmxvmt5sslkff3aq3qp3qiv1vnt5lv3mxe5r51e4ddcr0fl5o4qiztpvkdcaa9hv8ysxtu\"\n    },\n    \"name\" : \"Dr. Terri Roob\"\n  }, {\n    \"display\" : {\n      \"provider\" : \"5t398justu6xqh91uw52c2j0nv3kpm2x6uwjyvxp4g6ief5scakmodwlghniogoqjirztgojcb6mb1ltlptme9m0w11516hz1tes03b\",\n      \"resource\" : \"dmd2w5c02mydi8aom9l7iankz\",\n      \"operation\" : \"u7uegvxtjjubi0wxqa9y5sfifd50wptjefuinf5t0xwsed4mge2fyp2m5r3advmd8btvrrsico47jqoxqodaqx1xvwlnchhbzzxu0rdx27loe93rtrn80zh8b3e1bylq1vhltwdtkk7nu5evf8y1tre3zlibxbr1xv5hyp03s12sc3cutrwls9odguiw3q7oue52\"\n    },\n    \"name\" : \"Amberly Roberts\"\n  } ],\n  \"nextLink\" : \"4akpijhxreunsyt6fhue1nex03v2byp7gjldp9tuuj81ytk9opx0vpsq7p5ifx3qsgzei4cc6qiz1j22k4up9fidy6ixlqu9om5w6tzb0j7z2f0gqeys8o1ozwr3wys0hx0ltkkiei99\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "165c7a9f-a5d6-42b2-bcf1-2a8371e20eb0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.083766Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Operations_List",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "URL to get the next set of operation list results if there are any.",
                "readOnly" : true
              },
              "value" : {
                "type" : "array",
                "description" : "List of Relay operations supported by resource provider.",
                "readOnly" : true,
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                }
              }
            },
            "description" : "Result of the request to list Relay operations. It contains a list of operations and a URL link to get the next set of results."
          }
        }
      }
    }
  } ]
}