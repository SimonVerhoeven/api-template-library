{
  "mappings" : [ {
    "id" : "427efe01-b5d3-4d8b-9763-5c98ab3d469d",
    "name" : "Regenerates the primary or secondary connection strings to the WCF relay.",
    "request" : {
      "urlPath" : "/subscriptions/36pl/resourceGroups/Mckinley+Fadel/providers/Microsoft.Relay/namespaces/Dotty+Volkman+Jr./wcfRelays/Melvin+Emmerich/authorizationRules/Reynalda+Johnston/regenerateKeys",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "ioz6n9tip0w4tzyd4iu19k6r72mpjx120vuoagpas34vckqzm67u4t6e1uqs84bow4uimpdlr1ii1ra6tp2hzcin9ri9xqj1rr2ko6n8ia66s33a05o2kb8d7u"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"secondaryKey\" : \"l7p56xzdxfjy14nk24drg98dnzicluix6o72ls4ufvsbjx2pp0pa9qpuh5ptfo6nsky9h4vflvmupl3fwpk92qisr48v2muxwvekwm6zkbnzerzhafhez6dvy\",\n  \"keyName\" : \"Amiee Labadie\",\n  \"primaryConnectionString\" : \"xi5a1gaqz9fdirh2mwds0\",\n  \"secondaryConnectionString\" : \"rqawreadh0nzqr8iltnvy3f1jsxop16bhczl3bynvtf5bobs1a\",\n  \"primaryKey\" : \"hlehkfesgy7fxd94ba6qrs9jrqxvjdvffosdthtvlf6rqvuf1s9mk9cj0t1xf1z5pq9icpgqbp59kxj2lvdx8hgmsawdkxbvz72curzqqfwejhy7qorkn5y3ee8h7ux0qkikiedt22jywc5hep6jchebk53pb8mcwc5yy84tvx6x3al78dah31so5dcbuvev6\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "427efe01-b5d3-4d8b-9763-5c98ab3d469d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:59.339861Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_RegenerateKeys",
          "schema" : {
            "type" : "object",
            "properties" : {
              "keyName" : {
                "type" : "string",
                "description" : "A string that describes the authorization rule."
              },
              "primaryConnectionString" : {
                "type" : "string",
                "description" : "Primary connection string of the created namespace authorization rule."
              },
              "primaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit primary key for signing and validating the SAS token."
              },
              "secondaryConnectionString" : {
                "type" : "string",
                "description" : "Secondary connection string of the created namespace authorization rule."
              },
              "secondaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit secondary key for signing and validating the SAS token."
              }
            },
            "description" : "Namespace/Relay Connection String"
          }
        }
      }
    }
  }, {
    "id" : "aa7a886c-7c0b-4bc1-b4b4-733da19f01e2",
    "name" : "Primary and secondary connection strings to the WCF relay.",
    "request" : {
      "urlPath" : "/subscriptions/397f/resourceGroups/Lloyd+West/providers/Microsoft.Relay/namespaces/Lacy+Prosacco/wcfRelays/Mrs.+Augustine+Ward/authorizationRules/Jae+Lemke+PhD/listKeys",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "4zas648v8wo4ke7"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"secondaryKey\" : \"0jq1smapflpv5jikdgc5jpfz74abr9k9z9tgcietmjhm22cq0jlzc3vzwnw3af6520p2imam4m65i4n6u1518etto8xpgnjivq5\",\n  \"keyName\" : \"Latasha Mertz\",\n  \"primaryConnectionString\" : \"4u0ohcrk2vjlivs7kivcvvts0ojide803z3m2cdkdh3j9ipywgmie2njwaniqjlhskupd7b8rt8ubufiztebzuzo2wp92z98b299gd2qlukvguei71brc3p2ld2l3k8655zmpqg5ihyauf6\",\n  \"secondaryConnectionString\" : \"g94lmrmay6zlx7uj5c9w056nixbdur1f5sunt8bmky1wqwm310gx856mvq7j1q6mt402v921bw4hbmftmpmje08374m\",\n  \"primaryKey\" : \"h7j2mw64il767vm8nvhuqd7cqrm3spfug94sdrylinxgx82gbp8np32c2619p9hx9sqldh6e\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aa7a886c-7c0b-4bc1-b4b4-733da19f01e2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:59.339473Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_ListKeys",
          "schema" : {
            "type" : "object",
            "properties" : {
              "keyName" : {
                "type" : "string",
                "description" : "A string that describes the authorization rule."
              },
              "primaryConnectionString" : {
                "type" : "string",
                "description" : "Primary connection string of the created namespace authorization rule."
              },
              "primaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit primary key for signing and validating the SAS token."
              },
              "secondaryConnectionString" : {
                "type" : "string",
                "description" : "Secondary connection string of the created namespace authorization rule."
              },
              "secondaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit secondary key for signing and validating the SAS token."
              }
            },
            "description" : "Namespace/Relay Connection String"
          }
        }
      }
    }
  }, {
    "id" : "bdfc62b2-57c0-4ba4-bea5-814476a52140",
    "name" : "Deletes a WCF relay authorization rule. - 204",
    "request" : {
      "urlPath" : "/subscriptions/t2k2/resourceGroups/Mr.+Tim+Purdy/providers/Microsoft.Relay/namespaces/Wanita+Gaylord/wcfRelays/Sacha+Cremin/authorizationRules/Barrie+Schaefer",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "g92jqp1035f4vw6m9ilpgon8k3sr4fb7w50o7vwc8wtoba47o1bjzyz1uidtsy0fvj3se76n5qxdt4qhnv37ph"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "bdfc62b2-57c0-4ba4-bea5-814476a52140",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:59.339056Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_DeleteAuthorizationRule"
        }
      }
    }
  }, {
    "id" : "2fb1ca48-be59-4e80-ad61-65e175495ee2",
    "name" : "Deletes a WCF relay authorization rule. - 200",
    "request" : {
      "urlPath" : "/subscriptions/d729/resourceGroups/Catina+Wyman/providers/Microsoft.Relay/namespaces/Willodean+Dare/wcfRelays/Janessa+Macejkovic/authorizationRules/Dr.+Leonia+VonRueden",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "s9hykob172nddqtl9kgnh5rle27cbtiwkb68p7uxmstjeb3c80merks098gtb0joz7bg9amwqk1cky44c47gqpwx2302k7oc5gkeyqf8ezarfufhykmvkgvlumjt55e0znumqydtmk5ivvo4hj0lbxh7kb6g4uzv0bpwheoy30pffdw05"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "2fb1ca48-be59-4e80-ad61-65e175495ee2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:59.338826Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_DeleteAuthorizationRule"
        }
      }
    }
  }, {
    "id" : "f35c5244-9601-4f36-b65d-044346db37a6",
    "name" : "Creates or updates an authorization rule for a WCF relay.",
    "request" : {
      "urlPath" : "/subscriptions/p00y/resourceGroups/Karon+Turner/providers/Microsoft.Relay/namespaces/Miss+Agustin+Welch/wcfRelays/Jenine+Moore/authorizationRules/Valentine+Pacocha+V",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "7cq2th67e3jz2k7kem5a6d5fd3iu4wsg3x38oo08muu9p6yul6oc5n5vbejq6x"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Irving Walker\",\n  \"id\" : \"yt9j\",\n  \"type\" : \"8oi8msjyfsirrvfr1xnw5je4y9wwte2nfyhn2bp7ewjwfa6dum5gw02jfcuhk3wmbsn8jgg167bi2hfmlmlkyy9xw7n8095pczi830wola3nbw9c0cbhvl6iyd04wh282elfbmowywdnvv6hr9kiwxzjvmkmobib9t81isht5akbtlosgwnh4uuipj3utn3\",\n  \"properties\" : {\n    \"rights\" : [ \"Manage\", \"Send\", \"Listen\", \"Send\", \"Send\" ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f35c5244-9601-4f36-b65d-044346db37a6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:59.338575Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_CreateOrUpdateAuthorizationRule",
          "schema" : {
            "properties" : {
              "properties" : {
                "required" : [ "rights" ],
                "type" : "object",
                "properties" : {
                  "rights" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    "description" : "The rights associated with the rule.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "Manage", "Send", "Listen" ]
                    }
                  }
                },
                "description" : "Authorization rule properties."
              }
            },
            "description" : "Description of a namespace authorization rule.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "c800b101-d990-4f04-b228-428261295190",
    "name" : "Get authorizationRule for a WCF relay by name.",
    "request" : {
      "urlPath" : "/subscriptions/6x98/resourceGroups/Jerilyn+Kris/providers/Microsoft.Relay/namespaces/Mr.+Anisa+Yost/wcfRelays/Hobert+Davis+Sr./authorizationRules/Dallas+Boyer",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "5k8vwzjbnjfw0ax0ypiun3aejxlj7l36wawzhsrsot8yp9ah4ceepqyo3e2ohg4269stsujbveaf1xrk6er3yff0nwg652bd5jn6h4i6erzzlehc8gpkkfhr4kldls88endx17xi3isnsinf9zkyiuh92t0ujatjheaqqn3j7dlia6yzbu"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Daren Robel\",\n  \"id\" : \"0f32\",\n  \"type\" : \"5hice72i6qgwuj6boov1junlp7z6glmli2jiqj4vg4s15alm5glk63kbqs3oktzdwljexu4rdt560fogl6lb3oky7ex4gdgjkt3dleqv402ix4a7lgi2u5lyhjuxqbf8tmbzg0vxa9st2bfi969mmhqf\",\n  \"properties\" : {\n    \"rights\" : [ \"Listen\", \"Manage\", \"Send\", \"Listen\" ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c800b101-d990-4f04-b228-428261295190",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:59.338155Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_GetAuthorizationRule",
          "schema" : {
            "properties" : {
              "properties" : {
                "required" : [ "rights" ],
                "type" : "object",
                "properties" : {
                  "rights" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    "description" : "The rights associated with the rule.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "Manage", "Send", "Listen" ]
                    }
                  }
                },
                "description" : "Authorization rule properties."
              }
            },
            "description" : "Description of a namespace authorization rule.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "f3c075f9-082c-4abf-9a7e-9d90c76d75fb",
    "name" : "Authorization rules for a WCF relay.",
    "request" : {
      "urlPath" : "/subscriptions/g9u0/resourceGroups/Coy+Toy/providers/Microsoft.Relay/namespaces/Jeanine+Welch+IV/wcfRelays/Cory+Wiegand/authorizationRules",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "3zprlzzoyoprydwfjd4qxu0y2i46b83b9or80axdmrudr7kfwn"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Stephane Tromp\",\n    \"id\" : \"j6dm\",\n    \"type\" : \"h0ko70gj4e80tdfjfbw6mfkc4xj4rbz7bjl61m4qhng3kq8wzl55whv3vy1h4k0ksyp405imv9wq5dridhm62hl8gu1ki9bgw49li8qlt9164lil9n1czk8a4qjxsp72r3w54ws0rpux7u8khwmgwyuryswwzxncx2z5hww7l\",\n    \"properties\" : {\n      \"rights\" : [ \"Listen\", \"Manage\", \"Listen\" ]\n    }\n  }, {\n    \"name\" : \"Delena Purdy\",\n    \"id\" : \"4jfg\",\n    \"type\" : \"544oght8jec9ky92k8y4qmhwk5811ogrr69t36tdm04ar1f3464bc1hl6pzuzcj1iw7npo2xkm18imf440u1y3wmlidbzcl2qx62ojgytjh5byue2gz288\",\n    \"properties\" : {\n      \"rights\" : [ \"Manage\" ]\n    }\n  }, {\n    \"name\" : \"Soo Waters\",\n    \"id\" : \"hd03\",\n    \"type\" : \"qj6q7ml5b222e6edw9mj3bdh09dkkgzlk9b18v520c5uepuq6il6preky9322op2w59pwdczh7sfa7uf6vwgglz0iznzak\",\n    \"properties\" : {\n      \"rights\" : [ \"Send\", \"Listen\", \"Send\", \"Manage\", \"Listen\", \"Listen\" ]\n    }\n  }, {\n    \"name\" : \"Dr. Blake Welch\",\n    \"id\" : \"j69z\",\n    \"type\" : \"i4e554f9tmqu9x7p4c91zxz34tya4tplecmv97kngiu46\",\n    \"properties\" : {\n      \"rights\" : [ \"Listen\", \"Send\", \"Manage\", \"Listen\", \"Send\", \"Send\", \"Listen\", \"Send\" ]\n    }\n  }, {\n    \"name\" : \"Myrle Kessler\",\n    \"id\" : \"l5al\",\n    \"type\" : \"sbeg2otkwock0\",\n    \"properties\" : {\n      \"rights\" : [ \"Listen\", \"Manage\", \"Listen\", \"Send\", \"Send\", \"Listen\", \"Send\" ]\n    }\n  }, {\n    \"name\" : \"Mrs. Karole Towne\",\n    \"id\" : \"1zxs\",\n    \"type\" : \"njmdg5qlff4pbe7w0ne3s8you1k2hybe7zmjtayimoa5uz6m0ksc5adaaz1nm3ivcuzcbmq1rvaocsf77soy29fntg1yr1acie3k2dvthnf79pypxp64l14bwo174e51tjom7zwqe1aqg6a1ii6np6gu4wvheov6h09jmo7c5cexa7t4ewxz48u\",\n    \"properties\" : {\n      \"rights\" : [ \"Manage\", \"Listen\" ]\n    }\n  }, {\n    \"name\" : \"Marisa Nicolas IV\",\n    \"id\" : \"46p9\",\n    \"type\" : \"5bvlfw3y7wfyhgyp390ajt089zezzdcwpo1irf2vq9lnnvcvf7ins5p2lf87lud6ewznqcybjew6ro4ez2eidc1qpx5v4c6i1z3262b73j\",\n    \"properties\" : {\n      \"rights\" : [ \"Send\", \"Listen\", \"Send\", \"Send\", \"Send\", \"Listen\" ]\n    }\n  }, {\n    \"name\" : \"Dr. Jeff Dare\",\n    \"id\" : \"a8qh\",\n    \"type\" : \"2rrqz30fxu9ex3hkzy7hnqjlgwdtytn23e8vv9k4m9jou3tdej8ghi2qkl85gck3sqcdvdiviyc4eyk8lcxxyzr6ekylyo6db8bo2vs62ui1r4xy5o6eyrku93lhshcj901z9jkzdxc071xqp\",\n    \"properties\" : {\n      \"rights\" : [ \"Manage\" ]\n    }\n  } ],\n  \"nextLink\" : \"uz439sicwm8vv2tx8qqmmhkjjy15mnbzp11yr48oim9eldiktwuje3bjdjjbs1npmoxnlukcqsy5smm3m631bpy3woobl4o1g5onfe6u15orxvtieyywrns975b4pkmcjnk51jbg202wayzxmuz7k9k\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f3c075f9-082c-4abf-9a7e-9d90c76d75fb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:59.337703Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_ListAuthorizationRules",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if value contains incomplete list of authorization rules."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the list authorization rules operation.",
                "items" : {
                  "$ref" : "#/components/schemas/AuthorizationRule"
                }
              }
            },
            "description" : "The response from the list namespace operation."
          }
        }
      }
    }
  }, {
    "id" : "b4117837-a498-404d-8633-ac57767a4c4d",
    "name" : "Deletes a WCF relay. - 204",
    "request" : {
      "urlPath" : "/subscriptions/qk7v/resourceGroups/Mr.+Kristen+Romaguera/providers/Microsoft.Relay/namespaces/Ms.+Sheryll+Nader/wcfRelays/Dr.+Earnest+Witting",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "5t09qclc3f8k"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "b4117837-a498-404d-8633-ac57767a4c4d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:59.336251Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_Delete"
        }
      }
    }
  }, {
    "id" : "adf21f63-39d9-4055-a803-6fe5a189425f",
    "name" : "Deletes a WCF relay. - 200",
    "request" : {
      "urlPath" : "/subscriptions/n9ri/resourceGroups/Kenny+Hudson/providers/Microsoft.Relay/namespaces/Mrs.+Alfred+Corkery/wcfRelays/Ingrid+Lueilwitz",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "kt1l61mzoljd3qfabh4f1kmsds1v12i3s778ga69yin3lsi0hfkwiijdmewibquk6hhk4csvnjxnqirnr9242871zzvp5utvdhsxmf71mdy1udmfx84n"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "adf21f63-39d9-4055-a803-6fe5a189425f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:59.336048Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_Delete"
        }
      }
    }
  }, {
    "id" : "e1123ece-1804-49a2-9b04-ba0d8a0267e8",
    "name" : "Creates or updates a WCF relay. This operation is idempotent.",
    "request" : {
      "urlPath" : "/subscriptions/1i49/resourceGroups/Leo+Rolfson/providers/Microsoft.Relay/namespaces/Kasha+Konopelski/wcfRelays/Jennie+Lehner",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "8vp0eoodtez2wjq96sqy0indwxh"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Jennie Goodwin II\",\n  \"id\" : \"so5b\",\n  \"type\" : \"526ymvywcz37nw527ynxblwgn834gdw9fqtyytnp23q\",\n  \"properties\" : {\n    \"createdAt\" : \"2022-08-25T23:50:57.335Z\",\n    \"listenerCount\" : 4,\n    \"isDynamic\" : true,\n    \"relayType\" : \"NetTcp\",\n    \"requiresClientAuthorization\" : true,\n    \"userMetadata\" : \"oh7cyg17d17cp9campbtpxrjlzckmnxcanjncos6aiqlm1bxf0gq4a2hic5q5y4igq7toz8t0bx9u5v2g64tyrr3gbo17o3n4h71ltgapui5khe9of60rmk4hvg3\",\n    \"requiresTransportSecurity\" : true,\n    \"updatedAt\" : \"2023-06-03T15:18:10.335Z\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e1123ece-1804-49a2-9b04-ba0d8a0267e8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:59.335729Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_CreateOrUpdate",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "createdAt" : {
                    "type" : "string",
                    "description" : "The time the WCF relay was created.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "isDynamic" : {
                    "type" : "boolean",
                    "description" : "Returns true if the relay is dynamic; otherwise, false.",
                    "readOnly" : true
                  },
                  "listenerCount" : {
                    "maximum" : 25,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "The number of listeners for this relay. Note that min :1 and max:25 are supported.",
                    "format" : "int32",
                    "readOnly" : true
                  },
                  "relayType" : {
                    "type" : "string",
                    "description" : "WCF relay type.",
                    "enum" : [ "NetTcp", "Http" ]
                  },
                  "requiresClientAuthorization" : {
                    "type" : "boolean",
                    "description" : "Returns true if client authorization is needed for this relay; otherwise, false."
                  },
                  "requiresTransportSecurity" : {
                    "type" : "boolean",
                    "description" : "Returns true if transport security is needed for this relay; otherwise, false."
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "The time the namespace was updated.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "userMetadata" : {
                    "type" : "string",
                    "description" : "The usermetadata is a placeholder to store user-defined string data for the WCF Relay endpoint. For example, it can be used to store descriptive data, such as list of teams and their contact information. Also, user-defined configuration settings can be stored."
                  }
                },
                "description" : "Properties of the WCF relay."
              }
            },
            "description" : "Description of the WCF relay resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "68ccb06a-48e8-45e1-9efb-3e5e4cb16d40",
    "name" : "Returns the description for the specified WCF relay. - 204",
    "request" : {
      "urlPath" : "/subscriptions/851p/resourceGroups/Emmy+Satterfield+I/providers/Microsoft.Relay/namespaces/Aurore+Okuneva+V/wcfRelays/Israel+Streich",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "pb22579g1f8an9vtsqrz2979zm4xeve3mvzwa7fvdmaq1lpo8grzuo06ie9expnqosnzvf3p7wi9x564m2vfphd8wn3s85ub3zco6m"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "68ccb06a-48e8-45e1-9efb-3e5e4cb16d40",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:59.335258Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_Get"
        }
      }
    }
  }, {
    "id" : "3b048b55-52c8-4b3b-af2b-ef7b02c1fdf8",
    "name" : "Returns the description for the specified WCF relay. (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/3dmi/resourceGroups/Miss+Floyd+Luettgen/providers/Microsoft.Relay/namespaces/Lynda+Durgan/wcfRelays/Jasper+Hickle",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "8rf1m7vonezf2i5q0a9niwyc66uqub6svvfrozjbyj4g42kgyg7cqs1vvlwi0vay5zfczkfu2h305cfi8ojqlnbq6w1zwwtpi4pm8ejz1ptfogz3wkvjkpy5ziv0nl6dh783t9uap3wglrrst6y8ybamytprfqnf0aka5mt00n9hhb40ynphkkk2377nw"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Dr. Tenisha Wisozk\",\n  \"id\" : \"r2ot\",\n  \"type\" : \"nj1zezcm2vdfqh6vqt57d0ppam4twpikophht1qznkcfpxoms95t1a29yuminio7w5fbztmzgce480oq7daw659ruvdsnt2lor4zkv9ny7rdubdvlxzj34qmgwd1os3x4e6bz82zh0vqox3s0dcwxwu39u2bvqwcojrik77edo63tyw5qotx3nxhlhx0f0dx8y6n\",\n  \"properties\" : {\n    \"createdAt\" : \"2022-03-25T02:45:22.334Z\",\n    \"listenerCount\" : 12,\n    \"isDynamic\" : false,\n    \"relayType\" : \"Http\",\n    \"requiresClientAuthorization\" : true,\n    \"userMetadata\" : \"a3idgtb38aq6e3ansaod05r5rssicdwz5xzwy6nm3rgcw5mr6cl5th81p8an5caki4tpimzygvux5mkpa91pdywdaji9f6\",\n    \"requiresTransportSecurity\" : true,\n    \"updatedAt\" : \"2022-11-24T17:59:28.334Z\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3b048b55-52c8-4b3b-af2b-ef7b02c1fdf8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:59.335041Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_Get",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "createdAt" : {
                    "type" : "string",
                    "description" : "The time the WCF relay was created.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "isDynamic" : {
                    "type" : "boolean",
                    "description" : "Returns true if the relay is dynamic; otherwise, false.",
                    "readOnly" : true
                  },
                  "listenerCount" : {
                    "maximum" : 25,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "The number of listeners for this relay. Note that min :1 and max:25 are supported.",
                    "format" : "int32",
                    "readOnly" : true
                  },
                  "relayType" : {
                    "type" : "string",
                    "description" : "WCF relay type.",
                    "enum" : [ "NetTcp", "Http" ]
                  },
                  "requiresClientAuthorization" : {
                    "type" : "boolean",
                    "description" : "Returns true if client authorization is needed for this relay; otherwise, false."
                  },
                  "requiresTransportSecurity" : {
                    "type" : "boolean",
                    "description" : "Returns true if transport security is needed for this relay; otherwise, false."
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "The time the namespace was updated.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "userMetadata" : {
                    "type" : "string",
                    "description" : "The usermetadata is a placeholder to store user-defined string data for the WCF Relay endpoint. For example, it can be used to store descriptive data, such as list of teams and their contact information. Also, user-defined configuration settings can be stored."
                  }
                },
                "description" : "Properties of the WCF relay."
              }
            },
            "description" : "Description of the WCF relay resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "eaf6369b-875e-4bce-b553-4bac84a1e3d8",
    "name" : "Lists the WCF relays within the namespace.",
    "request" : {
      "urlPath" : "/subscriptions/5k9z/resourceGroups/Bryan+Wunsch/providers/Microsoft.Relay/namespaces/Elias+Johns/wcfRelays",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "waii9ddai2xlzi5ie58zkp4ei7cax"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Whitney Stokes\",\n    \"id\" : \"50j5\",\n    \"type\" : \"d84r19ax62ghqbhx08as3aytvezlaq7lfo1svbijkx2q7kb3tpotz6rvzf3v78xq13yf8ax0jpv68llpp0tv3gm5irm7yph2z2wp110lcuajxzwbfkp20su99ihh62sjq\",\n    \"properties\" : {\n      \"createdAt\" : \"2023-11-03T18:31:38.333Z\",\n      \"listenerCount\" : 14,\n      \"isDynamic\" : false,\n      \"relayType\" : \"NetTcp\",\n      \"requiresClientAuthorization\" : false,\n      \"userMetadata\" : \"u71hwjaztb6yrv78ij2yis91f5z5xnymoxgffck09fdrsbmbiigu2i9axhpn0ran1rn2ifa1h0cvav9oz7cu2f2p9vmenfmwz4okq44bmpnaqlpt2hh9fo1elgtlc8ojh5yeyb5o5qrnbb2os1n93qphb3atev8ij8ynjj2exkjfqj\",\n      \"requiresTransportSecurity\" : true,\n      \"updatedAt\" : \"2023-01-16T12:39:12.333Z\"\n    }\n  }, {\n    \"name\" : \"Valene Littel\",\n    \"id\" : \"eg99\",\n    \"type\" : \"6kjeev7\",\n    \"properties\" : {\n      \"createdAt\" : \"2022-11-29T13:42:36.333Z\",\n      \"listenerCount\" : 14,\n      \"isDynamic\" : true,\n      \"relayType\" : \"Http\",\n      \"requiresClientAuthorization\" : false,\n      \"userMetadata\" : \"a1qkkg0j2nkrb83j43qzv81g6imzlpeioc31lqf6ay7k6ua2ywi4w0jh4fc0rausmkjqnt06zeka0qdouw4fmox9dgpgvrhm8los5ewmqhmh394787p9orobqidbh5i43r56hhcntq9ilnj4ctccvmhgenl2gjotx\",\n      \"requiresTransportSecurity\" : true,\n      \"updatedAt\" : \"2023-07-26T13:16:50.333Z\"\n    }\n  }, {\n    \"name\" : \"Jason Bashirian\",\n    \"id\" : \"jjb1\",\n    \"type\" : \"p0pap87f6165s3qtln2a75jrel5g6k60ljueyubr9nmmpmyzkpc9b5pwkw5f9icl6yatxenku7mt23pbryfrvkp61eyr9z9afa14cqx3okqb4qqvbh299ydg5r\",\n    \"properties\" : {\n      \"createdAt\" : \"2023-01-17T16:43:39.333Z\",\n      \"listenerCount\" : 3,\n      \"isDynamic\" : true,\n      \"relayType\" : \"Http\",\n      \"requiresClientAuthorization\" : true,\n      \"userMetadata\" : \"309pr1rjigb013q2215be2vkheetp8rwd7c5dwsdoram1s22f3298jwqhwuzxpi8vknqhm7szijrdym4v1sz7aec40kdhbjydh6tres6jowrcn5uk4psl2oraypbf81\",\n      \"requiresTransportSecurity\" : false,\n      \"updatedAt\" : \"2023-09-20T05:04:54.333Z\"\n    }\n  }, {\n    \"name\" : \"China Pollich\",\n    \"id\" : \"5pde\",\n    \"type\" : \"ozv6zyqtmxvon7ntknn7sfiyclinuqfcmswne33goxjd2m0x94ch3jprwdwysx1kcexne0h9eq8znjtxcaadhq1z68lgqhhawf9vjy6r54lhfucrvnt57gcoe2c31f5r\",\n    \"properties\" : {\n      \"createdAt\" : \"2022-12-11T04:34:57.333Z\",\n      \"listenerCount\" : 16,\n      \"isDynamic\" : false,\n      \"relayType\" : \"NetTcp\",\n      \"requiresClientAuthorization\" : false,\n      \"userMetadata\" : \"43vwmn08faub6tltjht7rkudt45wxv8rcu85rh5l0lciyuako1jvhdbjlds90qqz8ncaszjpfm6y01ogwsj2aueycf22bxybo6xwqq14c\",\n      \"requiresTransportSecurity\" : true,\n      \"updatedAt\" : \"2023-09-12T12:47:37.333Z\"\n    }\n  }, {\n    \"name\" : \"Earle O'Reilly\",\n    \"id\" : \"8u8r\",\n    \"type\" : \"c4asu0dlm7k1piflmp4d0wgmjawj6w8f8vuy26oit7z4tdh091fakd0zl\",\n    \"properties\" : {\n      \"createdAt\" : \"2023-08-25T12:22:48.334Z\",\n      \"listenerCount\" : 2,\n      \"isDynamic\" : false,\n      \"relayType\" : \"NetTcp\",\n      \"requiresClientAuthorization\" : false,\n      \"userMetadata\" : \"73zdj5nvpd60cel8jty018vdhlb2mmzyl4oawrp5ucsvgiavlb12typ8tl6ve9e2r4vff08m4692ntwvkc8mt4qk6afxtqxul0jnt8cr336diwsfxlfipu9uz0gm0ofkjb2pdhcfnj9g72i4we7cys\",\n      \"requiresTransportSecurity\" : false,\n      \"updatedAt\" : \"2023-05-06T10:13:09.334Z\"\n    }\n  } ],\n  \"nextLink\" : \"sv9h918trqscb1qlepykagic1f8zqxxv3s6cvr9j2ugcbwu4yrbj7vnlzkys\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eaf6369b-875e-4bce-b553-4bac84a1e3d8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:59.334527Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_ListByNamespace",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if value contains incomplete list of WCF relays."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the list WCF relay operation.",
                "items" : {
                  "$ref" : "#/components/schemas/WcfRelay"
                }
              }
            },
            "description" : "The response of the list WCF relay operation."
          }
        }
      }
    }
  }, {
    "id" : "cbd080eb-8088-4048-8534-596bbb1aa475",
    "name" : "Regenerates the primary or secondary connection strings to the hybrid connection...",
    "request" : {
      "urlPath" : "/subscriptions/43ni/resourceGroups/Emmanuel+Dooley/providers/Microsoft.Relay/namespaces/Yer+Maggio/hybridConnections/Lea+Turner+Sr./authorizationRules/Leanne+Cole/regenerateKeys",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "lz8rjqtm0eqh244lg3jboixnoza1ag3d0cy6o28gafmccemlz1e4ny33dwv4xolyf0rqrrekp0e8w9tsfsd0cdmp1ay3ik5lhv2bf6jono1yonrkwnpm3vawz5jploj36cromxvv1rnu46twmz5j3s7kb"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"secondaryKey\" : \"treswqu1sd9vnt0s38l22vseklqre1aj5ds723iwcklz8z354gdvo3kvj18fgex418jfsni77ikkcn1jobwgxtcp5xko7l0824ll\",\n  \"keyName\" : \"Sharita Prosacco PhD\",\n  \"primaryConnectionString\" : \"9prtem17jgk\",\n  \"secondaryConnectionString\" : \"cetrsxhrcr3f4gxxa2ldsa2o5wfp99rmerf7gjzh22vev\",\n  \"primaryKey\" : \"frtkck436dku08ip4r830itwxf2p20448x0llty8c\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cbd080eb-8088-4048-8534-596bbb1aa475",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:59.333336Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_RegenerateKeys",
          "schema" : {
            "type" : "object",
            "properties" : {
              "keyName" : {
                "type" : "string",
                "description" : "A string that describes the authorization rule."
              },
              "primaryConnectionString" : {
                "type" : "string",
                "description" : "Primary connection string of the created namespace authorization rule."
              },
              "primaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit primary key for signing and validating the SAS token."
              },
              "secondaryConnectionString" : {
                "type" : "string",
                "description" : "Secondary connection string of the created namespace authorization rule."
              },
              "secondaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit secondary key for signing and validating the SAS token."
              }
            },
            "description" : "Namespace/Relay Connection String"
          }
        }
      }
    }
  }, {
    "id" : "d1bc679e-e718-452d-9541-7d846b905e20",
    "name" : "Primary and secondary connection strings to the hybrid connection.",
    "request" : {
      "urlPath" : "/subscriptions/w387/resourceGroups/Ashley+Swift+DVM/providers/Microsoft.Relay/namespaces/Jude+Hayes/hybridConnections/Luz+Green+PhD/authorizationRules/Josiah+Windler+Jr./listKeys",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "3d2gnjs8dbgww046uiw2k30bgqjucrdmnnuzdxqu8ipalqoeeh7qyxy0s4bwuzdrty3tc8piuwkl5w2pbuo0xh04dfq8px758rusni21moqo9kfjvn"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"secondaryKey\" : \"598ijp7yj8dza8k87syqagfop0tgcn2dy7hmgue923gmdfwzhkw5ehzte0l99hkp669qo4g1l5axi1hweczdmtd9jlnz0epk74knpr26ar5fbk7j0sfeis80ysjuszs8mgyfhqkci33pcgxgxh\",\n  \"keyName\" : \"Kareem Hermiston\",\n  \"primaryConnectionString\" : \"sqycns9np531e2402mwl5lmnqd35a9xfchshi4ncj6j28bylexjz9yatjshql2oojkq6c8l44p\",\n  \"secondaryConnectionString\" : \"s8fz6ucd4alb884sg58ex4p6i20svjcpwpfrmcbs0j8b8ny18x9k4bpyn05xao42m1ys9fxjz73rjj97xaie8rne8fv0ep2v1qkkq3nk4ru2hpcct6ldvnucfgsgkh7h7m47xfox5dicqtsroyt0jde12lrpm5nuuko4bw9zcjt6728z8j\",\n  \"primaryKey\" : \"hgp61u5w4yzkcavrogs2o815hhusswutehzboy69osq688g1mst5tq03o6it11cri0o18spjg4h6zioscjnr2tbfxalpv7f9owl4xch7f68b8en6c5b81zhfrj1tsuefpesg8jeoqnnzqh8u7wfs8m3y81olpfua9iiozbdq82a8cwj4o\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d1bc679e-e718-452d-9541-7d846b905e20",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:59.332953Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_ListKeys",
          "schema" : {
            "type" : "object",
            "properties" : {
              "keyName" : {
                "type" : "string",
                "description" : "A string that describes the authorization rule."
              },
              "primaryConnectionString" : {
                "type" : "string",
                "description" : "Primary connection string of the created namespace authorization rule."
              },
              "primaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit primary key for signing and validating the SAS token."
              },
              "secondaryConnectionString" : {
                "type" : "string",
                "description" : "Secondary connection string of the created namespace authorization rule."
              },
              "secondaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit secondary key for signing and validating the SAS token."
              }
            },
            "description" : "Namespace/Relay Connection String"
          }
        }
      }
    }
  }, {
    "id" : "7e9ca340-8557-4b4c-a708-1fbde05f8b67",
    "name" : "Deletes a hybrid connection authorization rule. - 204",
    "request" : {
      "urlPath" : "/subscriptions/p6id/resourceGroups/Carol+Mraz/providers/Microsoft.Relay/namespaces/Elda+McLaughlin/hybridConnections/Rossana+Hettinger/authorizationRules/Maida+Rath",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "qob36lfdksojrunqih3fkbgig6esrjtwzh63nzd20ihpl22bitahgpc9pn9j2c5r7t6uufnwo4wnlamtjh0fa9xak289cvypl7qpdf0535p5v2mg8aoscp7tger56p9qarjc1dcb12jsa1m0xry2kaealoqgx7n2tpgm7e8k79rc04axb"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "7e9ca340-8557-4b4c-a708-1fbde05f8b67",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:59.332541Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_DeleteAuthorizationRule"
        }
      }
    }
  }, {
    "id" : "3424a4ba-2d6a-4435-923b-6b0189de5a3b",
    "name" : "Deletes a hybrid connection authorization rule. - 200",
    "request" : {
      "urlPath" : "/subscriptions/0x4u/resourceGroups/Ms.+Frankie+Wuckert/providers/Microsoft.Relay/namespaces/Ken+Zulauf/hybridConnections/Marvin+Veum/authorizationRules/Nathanael+McClure+IV",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "zs0ovqx6wvgnxd4z4oqjks4i5s4km46q4qjbf12jv2lp149mpbj5a6rd"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "3424a4ba-2d6a-4435-923b-6b0189de5a3b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:59.332312Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_DeleteAuthorizationRule"
        }
      }
    }
  }, {
    "id" : "1a0e95ca-55ed-4e2e-827d-a2ff65a87efc",
    "name" : "Creates or updates an authorization rule for a hybrid connection.",
    "request" : {
      "urlPath" : "/subscriptions/aepa/resourceGroups/Jeromy+Fadel/providers/Microsoft.Relay/namespaces/Wendy+Sanford/hybridConnections/Young+Daniel/authorizationRules/Miss+Ida+Rath",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "eqtyabivg5ipxzwher29x14boydrg82mf6hq34a8zvcx1nv8grpmijkcaxt6nyjqizunbfav5tfkdr7youlz2lldgid6xwvu1ek53hq099hluyojoervvohezfxtml6giv"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Jeri Jacobs\",\n  \"id\" : \"fgk8\",\n  \"type\" : \"ghmh6kcgevqnoncmzv31oqjqiedae3773xy5sc9nayzhhn7xwc1vl8eyrdwkqzkxq1pxo1mkehasuh72hu\",\n  \"properties\" : {\n    \"rights\" : [ \"Send\", \"Manage\", \"Listen\", \"Send\", \"Listen\", \"Manage\", \"Send\" ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1a0e95ca-55ed-4e2e-827d-a2ff65a87efc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:59.332062Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_CreateOrUpdateAuthorizationRule",
          "schema" : {
            "properties" : {
              "properties" : {
                "required" : [ "rights" ],
                "type" : "object",
                "properties" : {
                  "rights" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    "description" : "The rights associated with the rule.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "Manage", "Send", "Listen" ]
                    }
                  }
                },
                "description" : "Authorization rule properties."
              }
            },
            "description" : "Description of a namespace authorization rule.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "69113192-5ba5-4ec7-b21c-8ed3cc5d32af",
    "name" : "Hybrid connection authorization rule for a hybrid connection by name.",
    "request" : {
      "urlPath" : "/subscriptions/nevy/resourceGroups/Lula+Olson+Jr./providers/Microsoft.Relay/namespaces/Caterina+Marquardt+V/hybridConnections/Mrs.+Liberty+Cruickshank/authorizationRules/Levi+Altenwerth+DDS",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "dxmhxfx7g0gh8dcpe8m0o3jqljjclheo8o3lo56"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Ilene Stark IV\",\n  \"id\" : \"xbc4\",\n  \"type\" : \"y12aalrm2fmuuxwoexsxv3i8adyun2rlwwuqdwn9cpc5htxdksz78z1rk80tx1cof3835mjaby9srdux94lbw0t7eeumkiyqj90rrepi1hqd8cuxl51plobgl6y6cwf44nnzucz4u47mw9nvgdpc9xlxw9o\",\n  \"properties\" : {\n    \"rights\" : [ \"Send\" ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "69113192-5ba5-4ec7-b21c-8ed3cc5d32af",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:59.331633Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_GetAuthorizationRule",
          "schema" : {
            "properties" : {
              "properties" : {
                "required" : [ "rights" ],
                "type" : "object",
                "properties" : {
                  "rights" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    "description" : "The rights associated with the rule.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "Manage", "Send", "Listen" ]
                    }
                  }
                },
                "description" : "Authorization rule properties."
              }
            },
            "description" : "Description of a namespace authorization rule.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "cb8c5e68-75b4-492e-826c-3d3aa9a425f6",
    "name" : "Authorization rules for a hybrid connection.",
    "request" : {
      "urlPath" : "/subscriptions/7lmj/resourceGroups/Vania+Effertz/providers/Microsoft.Relay/namespaces/Dawne+Renner+DDS/hybridConnections/Lyndon+Crooks/authorizationRules",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "9wprmc5sbsh73jszegfeyithulys8aashvsr0lse07ine476nebza5hlioidjubb"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Detra Keeling\",\n    \"id\" : \"s5hs\",\n    \"type\" : \"iq38aew9iejx592e8rm6\",\n    \"properties\" : {\n      \"rights\" : [ \"Manage\", \"Send\", \"Manage\", \"Send\", \"Send\" ]\n    }\n  }, {\n    \"name\" : \"Mr. Russell Hamill\",\n    \"id\" : \"5trx\",\n    \"type\" : \"uv5aicqxikrsd6839ju1v4gatuht29abw5fwlx5ao1asozxbvatddl9z8fa9gn1eka9qsxslmemczjnbvfv61w89mibghyvz4f37pe02sw89aq6lb4qk64a\",\n    \"properties\" : {\n      \"rights\" : [ \"Manage\", \"Manage\", \"Listen\", \"Listen\", \"Listen\" ]\n    }\n  }, {\n    \"name\" : \"Jerlene Okuneva II\",\n    \"id\" : \"741c\",\n    \"type\" : \"47hfd9i8s1otwvuagj32qi9kdfzqs8qp0dotmz\",\n    \"properties\" : {\n      \"rights\" : [ \"Manage\", \"Manage\", \"Listen\" ]\n    }\n  }, {\n    \"name\" : \"Ms. Michale Bode\",\n    \"id\" : \"r61w\",\n    \"type\" : \"jirbkxp9b49u464u3f8u2w74qz2mpjyy1mlrwpfj7u3c\",\n    \"properties\" : {\n      \"rights\" : [ \"Manage\", \"Manage\", \"Listen\", \"Manage\", \"Listen\" ]\n    }\n  } ],\n  \"nextLink\" : \"o2rswvrmie7srlhfu47b9x4ti251li56jpcz5nev7tc50t4ba4pp81vjxosnhsl4aycl7g2upje7vuh2lox9zkodjjep1hsx2ehobua8g8la5tug\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cb8c5e68-75b4-492e-826c-3d3aa9a425f6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:59.331204Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_ListAuthorizationRules",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if value contains incomplete list of authorization rules."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the list authorization rules operation.",
                "items" : {
                  "$ref" : "#/components/schemas/AuthorizationRule"
                }
              }
            },
            "description" : "The response from the list namespace operation."
          }
        }
      }
    }
  }, {
    "id" : "3daf6e95-00a6-44f7-9c81-68e258d83bfb",
    "name" : "Deletes a hybrid connection. - 204",
    "request" : {
      "urlPath" : "/subscriptions/0nd2/resourceGroups/Norma+Muller/providers/Microsoft.Relay/namespaces/Jonas+Rau/hybridConnections/Lieselotte+Langworth",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "1fml5x0cbsn3p9fq9nlz05crjkvyp728h8b5r029nem3lpv113l7kf1usbj0ynxcdys3i6cqjjxk1a51nfyl8u5ixrxsxhvnt92186fbc33tw5c5f8ij55kkggkjp3ctajaxttnziekiestdsbvbqouzap87u7ut"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "3daf6e95-00a6-44f7-9c81-68e258d83bfb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:59.330361Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_Delete"
        }
      }
    }
  }, {
    "id" : "d0d217b0-2882-490f-a518-f35ed6eb9479",
    "name" : "Deletes a hybrid connection. - 200",
    "request" : {
      "urlPath" : "/subscriptions/wj27/resourceGroups/Mrs.+Sharla+Deckow/providers/Microsoft.Relay/namespaces/Lesia+Ortiz/hybridConnections/Anastasia+Ankunding",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "u39b9uza4yp9ajfhpug6syc4tn801d6j6md4wduuniuk1w18jmvrrfu2aerczkiwxlxqppc3k5psn3zl4mduvwt3m5huzcnu0y9ssb5p1hgu65tfnld0n0dr2on0d96j0g622jtv4ottcxm4gbzc485apfdlourfrurhbs038t"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "d0d217b0-2882-490f-a518-f35ed6eb9479",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:59.330162Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_Delete"
        }
      }
    }
  }, {
    "id" : "37133b0c-c8c8-497f-a114-60a6a1c33d7b",
    "name" : "Creates or updates a service hybrid connection. This operation is idempotent.",
    "request" : {
      "urlPath" : "/subscriptions/1b9p/resourceGroups/Stanley+Wiza/providers/Microsoft.Relay/namespaces/Cherly+Kris+IV/hybridConnections/Norris+Lindgren",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "onvgukxsbwcxmdrho2mpvusikf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Berry Bayer\",\n  \"id\" : \"1ym4\",\n  \"type\" : \"whd18zeh98cbq8usbf4bd31j6y0n2021lpdk5sccsgmuzxekdipuvhbozvrqk8pf673d\",\n  \"properties\" : {\n    \"createdAt\" : \"2022-06-09T06:32:18.329Z\",\n    \"listenerCount\" : 11,\n    \"requiresClientAuthorization\" : true,\n    \"userMetadata\" : \"639fy2c9y9qbars02t9a6hnlt788dxho0tt34hsqtq7wcqpfc5dkpvr3khllhh67ejmwe2pbu9minwgfvj0tepyjfpqxtuksoefpj2bmzkjd42decv1gqolvc5cx8xaudc6vu5jcptdumf6pj5qlocv8k050ui9z6\",\n    \"updatedAt\" : \"2023-11-10T22:55:24.329Z\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "37133b0c-c8c8-497f-a114-60a6a1c33d7b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:59.329946Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_CreateOrUpdate",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "createdAt" : {
                    "type" : "string",
                    "description" : "The time the hybrid connection was created.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "listenerCount" : {
                    "maximum" : 25,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "The number of listeners for this hybrid connection. Note that min : 1 and max:25 are supported.",
                    "format" : "int32",
                    "readOnly" : true
                  },
                  "requiresClientAuthorization" : {
                    "type" : "boolean",
                    "description" : "Returns true if client authorization is needed for this hybrid connection; otherwise, false."
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "The time the namespace was updated.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "userMetadata" : {
                    "type" : "string",
                    "description" : "The usermetadata is a placeholder to store user-defined string data for the hybrid connection endpoint. For example, it can be used to store descriptive data, such as a list of teams and their contact information. Also, user-defined configuration settings can be stored."
                  }
                },
                "description" : "Properties of the HybridConnection."
              }
            },
            "description" : "Description of hybrid connection resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "7c8dd330-8fe8-4569-bab5-73b0033af0a3",
    "name" : "Returns the description for the specified hybrid connection.",
    "request" : {
      "urlPath" : "/subscriptions/whi9/resourceGroups/Kristin+Ward/providers/Microsoft.Relay/namespaces/Leonel+Brakus/hybridConnections/Daryl+Hagenes",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "mqawcrd31sk0d9vqju6wm11iswgoixd68i4ev45ekwxx3ejt52uzrd9uhkere9o7ijrjrp60hylja25gw5uv5mc4ldtscaa91qp7q3kim3w0oudgq1e423hr4z6zjdkn325b4sy"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Rosario Auer\",\n  \"id\" : \"uf37\",\n  \"type\" : \"arxomeb663or294rzqevq3oyi5k6xmtxhljof9mqw4a5gn9a4bigx8p8zt7stws79yx8owp70fo8ye2xdmfx5ybs1lquadh0ch31bq42osricxtpeci01dghkc2wxvavdwwjl0j98\",\n  \"properties\" : {\n    \"createdAt\" : \"2023-07-19T00:18:26.329Z\",\n    \"listenerCount\" : 23,\n    \"requiresClientAuthorization\" : true,\n    \"userMetadata\" : \"yp487l9d5qzwmb4qpha0wbqxcb5u163x6withdd8ctechje5zenkqlsk47ddf7ey47bwx9i2e4d0hzi0tvd4\",\n    \"updatedAt\" : \"2022-07-10T12:18:06.329Z\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7c8dd330-8fe8-4569-bab5-73b0033af0a3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:59.329524Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_Get",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "createdAt" : {
                    "type" : "string",
                    "description" : "The time the hybrid connection was created.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "listenerCount" : {
                    "maximum" : 25,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "The number of listeners for this hybrid connection. Note that min : 1 and max:25 are supported.",
                    "format" : "int32",
                    "readOnly" : true
                  },
                  "requiresClientAuthorization" : {
                    "type" : "boolean",
                    "description" : "Returns true if client authorization is needed for this hybrid connection; otherwise, false."
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "The time the namespace was updated.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "userMetadata" : {
                    "type" : "string",
                    "description" : "The usermetadata is a placeholder to store user-defined string data for the hybrid connection endpoint. For example, it can be used to store descriptive data, such as a list of teams and their contact information. Also, user-defined configuration settings can be stored."
                  }
                },
                "description" : "Properties of the HybridConnection."
              }
            },
            "description" : "Description of hybrid connection resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "bc799d7b-2e90-418d-82a3-e2561ff49e1f",
    "name" : "Lists the hybrid connection within the namespace.",
    "request" : {
      "urlPath" : "/subscriptions/b6bh/resourceGroups/Otha+Blanda+DDS/providers/Microsoft.Relay/namespaces/Travis+Wolff/hybridConnections",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "qj67lgozjmx2gjba8knpbt3wu6usbpkf1brq2yimitly5oym20ri1zcq7hcufmcjf4o9ptf4qeey2z47my5r605tp3xyw3pm5wsi601"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Margo Sanford\",\n    \"id\" : \"6448\",\n    \"type\" : \"kohkym5hqxsfr4fd9ra6fghxz7d9fxqoxt67uu3zfy7akph1uz3u9rnzbbvdod24b1hnumax3v03z6g9frt5t04lkymqhgetozm3r5\",\n    \"properties\" : {\n      \"createdAt\" : \"2023-07-25T06:16:12.328Z\",\n      \"listenerCount\" : 7,\n      \"requiresClientAuthorization\" : true,\n      \"userMetadata\" : \"1328fyvyxaf73ac4qd8wcanj0axwn6ntxwj9yzkqc93g56pj3tfh0t1g9igrrqhrttiqwlj5gbrjhjapayj8qbr257pu6y5crn3kv0h6gour4ea0x3byazqtmtyxgizewcff0sursxc2xbqflhkf3vq1592cw5uz1k1z\",\n      \"updatedAt\" : \"2023-12-20T17:46:48.328Z\"\n    }\n  }, {\n    \"name\" : \"Dr. Joshua Schmidt\",\n    \"id\" : \"4199\",\n    \"type\" : \"6ofgqhyuy4bief0y0uxba8eecgz9j2v8dfaaqikcei\",\n    \"properties\" : {\n      \"createdAt\" : \"2023-09-23T23:43:24.328Z\",\n      \"listenerCount\" : 8,\n      \"requiresClientAuthorization\" : true,\n      \"userMetadata\" : \"75y0fiyptdimzm5o7unnye21ho1f28s6x51gqi924o2e9shts5pyt466z6d94slajdfgi03kf52m0ngk7n379wnqcn28pfciwqfqxj8brbaajqo30hftk62qww96tcmrh1ao0s1cv4drw2hzilbj\",\n      \"updatedAt\" : \"2023-09-30T17:04:01.328Z\"\n    }\n  }, {\n    \"name\" : \"Raven Ryan\",\n    \"id\" : \"79h3\",\n    \"type\" : \"sbwrobwozs1zo9ga1if8qm3jqxv42j4gl6h7uq3nqsiah5e1wl83p0xiq3p998a1xl41b81qs9ylyw8inp5u9ukzwsgau293w8dyrkdbyj8v3qmp2jmgesbr7cgukmyvxqjkuisczy68doydq4bcg3aubv8qpb0oh\",\n    \"properties\" : {\n      \"createdAt\" : \"2022-04-25T16:33:31.328Z\",\n      \"listenerCount\" : 15,\n      \"requiresClientAuthorization\" : false,\n      \"userMetadata\" : \"et3hnvcsbf0bs2ez3s12wxdhrkv7xvfqfdgsxvgj0fxpqx0u3tg4yp3ld26tm7bb698lgml98qnfidx1nk5ymkgu0da0ifq1cr2xzwv1nmz08lrgz8hcmb8vsfg0a405n9abwyek9ifcnxkqf0yzwtzdp63di97bxelw40eyz2rcg26coio60gtoc0soxbm7lxqmqlv\",\n      \"updatedAt\" : \"2023-09-24T10:34:34.328Z\"\n    }\n  } ],\n  \"nextLink\" : \"mc00ucy4gy1xv0gtgyih2stz8heoa9t64kfh5q87zrv21wwpacufgqi3ewoyul14oledjl9ddmq206rtg60l8z7ckopq9qfrozocu6f9a4tunfxalqopm5w6go4ni0r9vb6lsxwlkfhtgf6y9e9kymhwvhuly7ndiw4gyhio6lqot9jih6shcvacvde92bwq7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bc799d7b-2e90-418d-82a3-e2561ff49e1f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:59.329054Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_ListByNamespace",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if value contains incomplete list hybrid connection operation."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the list hybrid connections.",
                "items" : {
                  "$ref" : "#/components/schemas/HybridConnection"
                }
              }
            },
            "description" : "The response of the list hybrid connection operation."
          }
        }
      }
    }
  }, {
    "id" : "bb82fcd6-cf08-4dae-9e0b-606650c51894",
    "name" : "Regenerates the primary or secondary connection strings to the namespace.",
    "request" : {
      "urlPath" : "/subscriptions/fq02/resourceGroups/Winnifred+Abernathy/providers/Microsoft.Relay/namespaces/Dylan+Ondricka/authorizationRules/Shantae+Gleason/regenerateKeys",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "94mvhjo93gnc5dkjiad6hqulpq4un9x26c1mrralzb8e22bo6ut0dv58uxu7vue"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"secondaryKey\" : \"4vtxbkuhc4nb3s8pgbi9sxd0ko\",\n  \"keyName\" : \"Janelle Collier\",\n  \"primaryConnectionString\" : \"dryb2y3vf6dfc7d147m7o2frrp5k1yw1dmfuoat9o1gi6ye8hxr0o0a6bcerhjsgqo000aa9o70m9t69cwh8u70frrtczmxcod0eodk9p9k3s1g8aokiqvirr5uxov2vzhzg0ov597stj5d8zx4yecwpyxaxvig5r01vz90iado\",\n  \"secondaryConnectionString\" : \"mlqcv949yg54r1e0ju1e2yg61\",\n  \"primaryKey\" : \"lvexczjtsvff7d56juc5k4mhficr3p2o2jzuqaenxok4uu\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bb82fcd6-cf08-4dae-9e0b-606650c51894",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:59.32826Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_RegenerateKeys",
          "schema" : {
            "type" : "object",
            "properties" : {
              "keyName" : {
                "type" : "string",
                "description" : "A string that describes the authorization rule."
              },
              "primaryConnectionString" : {
                "type" : "string",
                "description" : "Primary connection string of the created namespace authorization rule."
              },
              "primaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit primary key for signing and validating the SAS token."
              },
              "secondaryConnectionString" : {
                "type" : "string",
                "description" : "Secondary connection string of the created namespace authorization rule."
              },
              "secondaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit secondary key for signing and validating the SAS token."
              }
            },
            "description" : "Namespace/Relay Connection String"
          }
        }
      }
    }
  }, {
    "id" : "7acc5d7e-b7e2-4085-b167-2489165cc03f",
    "name" : "Primary and secondary connection strings to the namespace.",
    "request" : {
      "urlPath" : "/subscriptions/p92g/resourceGroups/May+Collier/providers/Microsoft.Relay/namespaces/Frieda+Cormier/authorizationRules/Nick+Klein/listKeys",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "yjrlf4lyad4bvh99ou2artxkvfcjcuk6qwjmmuw3vcl8clvqrznojdaqjtr8ix"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"secondaryKey\" : \"xgcz4rfa1udlq229dhl1ayyk7nb3w1fst3zk70pf2lf768k\",\n  \"keyName\" : \"Grover Hodkiewicz PhD\",\n  \"primaryConnectionString\" : \"nnq7l1p6u9ikjr6c7tnhofrnyke9mdw7be6agyn6kqxx4vyzf7\",\n  \"secondaryConnectionString\" : \"apfot9r0g53740m7pbkyi0oo9p423g78n9kju88ny6e9k2i9hvz9lc39khd2dbvyzvap4sikqer06qixr4dsrs6qt3n4rtv5gwivbd6emqmm5kcovm3sc3tm6ilnd4tk94n3yzhugp1or1yh2w55jxoyeaohzz4sre6mzq523o9ie7vgjbu\",\n  \"primaryKey\" : \"3uydbpxz1vf6aucn3grckuikdhy1sbp4xn489osoisprco9yk\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7acc5d7e-b7e2-4085-b167-2489165cc03f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:59.327892Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_ListKeys",
          "schema" : {
            "type" : "object",
            "properties" : {
              "keyName" : {
                "type" : "string",
                "description" : "A string that describes the authorization rule."
              },
              "primaryConnectionString" : {
                "type" : "string",
                "description" : "Primary connection string of the created namespace authorization rule."
              },
              "primaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit primary key for signing and validating the SAS token."
              },
              "secondaryConnectionString" : {
                "type" : "string",
                "description" : "Secondary connection string of the created namespace authorization rule."
              },
              "secondaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit secondary key for signing and validating the SAS token."
              }
            },
            "description" : "Namespace/Relay Connection String"
          }
        }
      }
    }
  }, {
    "id" : "572d4377-4a87-41d8-a1e4-0f04866791eb",
    "name" : "Deletes a namespace authorization rule. - 204",
    "request" : {
      "urlPath" : "/subscriptions/971d/resourceGroups/Raleigh+Wisoky/providers/Microsoft.Relay/namespaces/Willard+Schmidt/authorizationRules/Edward+Fisher",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "gks93glz4rca"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "572d4377-4a87-41d8-a1e4-0f04866791eb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:59.327484Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_DeleteAuthorizationRule"
        }
      }
    }
  }, {
    "id" : "06720e4e-6761-415b-be30-1cdf47f9ea3b",
    "name" : "Deletes a namespace authorization rule. - 200",
    "request" : {
      "urlPath" : "/subscriptions/125i/resourceGroups/Miss+Shad+Cruickshank/providers/Microsoft.Relay/namespaces/Chantel+Wisoky+PhD/authorizationRules/Domenic+Cremin",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "tr90jp81tz7uizh5akbgh4skhkpnak"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "06720e4e-6761-415b-be30-1cdf47f9ea3b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:59.327278Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_DeleteAuthorizationRule"
        }
      }
    }
  }, {
    "id" : "344d1cc4-a3ce-4483-b8f6-a5eac51ec330",
    "name" : "Creates or updates an authorization rule for a namespace.",
    "request" : {
      "urlPath" : "/subscriptions/tyc7/resourceGroups/Suk+Quitzon/providers/Microsoft.Relay/namespaces/Charolette+Pagac/authorizationRules/Daniela+Kub",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "vodvyt0rdct2pf0x1vsgylfi7go321vw4p56gsskgbk37zmobezxvzxix5tafy0mr2ll5z4npz9y793lwupkao7c3h3lvxeok6tejq6nq8kqww"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Sachiko Parker\",\n  \"id\" : \"df2n\",\n  \"type\" : \"kurxj3k7roj1tob5oi3b96ne2gnr5uzbobpr9zzrmlso2hqr4uike3v0vq2n990hdrqo90xn0l6mufl3ra2xm9x441nhvcrbkorn7tf4l4bo\",\n  \"properties\" : {\n    \"rights\" : [ \"Send\", \"Send\", \"Send\", \"Listen\", \"Manage\", \"Manage\", \"Send\", \"Listen\" ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "344d1cc4-a3ce-4483-b8f6-a5eac51ec330",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:59.327036Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_CreateOrUpdateAuthorizationRule",
          "schema" : {
            "properties" : {
              "properties" : {
                "required" : [ "rights" ],
                "type" : "object",
                "properties" : {
                  "rights" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    "description" : "The rights associated with the rule.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "Manage", "Send", "Listen" ]
                    }
                  }
                },
                "description" : "Authorization rule properties."
              }
            },
            "description" : "Description of a namespace authorization rule.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "93566500-42ed-4d38-a1c9-3f6a83f32628",
    "name" : "Authorization rule for a namespace by name.",
    "request" : {
      "urlPath" : "/subscriptions/fx80/resourceGroups/Mrs.+Malka+Witting/providers/Microsoft.Relay/namespaces/Elissa+Brekke/authorizationRules/Lashon+Boyer",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "rwgv6ez1yckk2iwo8g1ycm64xxs9d3w9dctvvpj0v6iii3999iipj12pxg7g3j27h3jfcmk10zac93f17immu8pa0l0umgj25cdu3wxb15m2mxow1jbt3vu3ottmcm7mv23x2b3w63ks671ekebt"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Miss Ruben Trantow\",\n  \"id\" : \"191a\",\n  \"type\" : \"08o5s96xmcx48mamxqo28il13quz0ncistizhwo8fxtgfm9t745r7fhvsoprcardd0srrcuid5agk4wcshx0go9lxuhczl3aopm61b1umwwfup2n1dyq3155zhpeolc4jy3kuza6x4y6s\",\n  \"properties\" : {\n    \"rights\" : [ \"Manage\" ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "93566500-42ed-4d38-a1c9-3f6a83f32628",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:59.326627Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_GetAuthorizationRule",
          "schema" : {
            "properties" : {
              "properties" : {
                "required" : [ "rights" ],
                "type" : "object",
                "properties" : {
                  "rights" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    "description" : "The rights associated with the rule.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "Manage", "Send", "Listen" ]
                    }
                  }
                },
                "description" : "Authorization rule properties."
              }
            },
            "description" : "Description of a namespace authorization rule.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "74c9cbf0-3029-452f-8725-65f1ab35408b",
    "name" : "Authorization rules for a namespace.",
    "request" : {
      "urlPath" : "/subscriptions/bgsd/resourceGroups/Coralee+Reinger/providers/Microsoft.Relay/namespaces/Larry+Hermiston+Sr./authorizationRules",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "hrjo5hojdbbtz80ecurjq2ckb5m7grwgb48bjg2tf1lm"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Lakeshia Gutmann\",\n    \"id\" : \"83no\",\n    \"type\" : \"ahhv95rcev0r4psxd1rvlkyqonvsgqc06u8kw7n2cfh0r31lkjquaot9xvopuddchz1a\",\n    \"properties\" : {\n      \"rights\" : [ \"Listen\" ]\n    }\n  }, {\n    \"name\" : \"Edmond VonRueden\",\n    \"id\" : \"66r6\",\n    \"type\" : \"31we9my7r00hr8drumzpedrv8a5p01qrg2aot0in1gyt7t9i9nt27ezkx9wr2ka91w\",\n    \"properties\" : {\n      \"rights\" : [ \"Listen\", \"Send\", \"Listen\" ]\n    }\n  }, {\n    \"name\" : \"Dennis Nienow\",\n    \"id\" : \"x62y\",\n    \"type\" : \"p8s1zj42dt5it5sbxuf35r40c8bglrzera5aq5y6pd21ty9giyed1ab3a2t5565ahc7adufhfha8tw3566gvz73no6f7vscpo5\",\n    \"properties\" : {\n      \"rights\" : [ \"Manage\", \"Listen\", \"Manage\", \"Send\", \"Listen\" ]\n    }\n  }, {\n    \"name\" : \"Thad Reilly\",\n    \"id\" : \"fzb7\",\n    \"type\" : \"ifcrrva2wmzmcgm92bh73do72z1t1x\",\n    \"properties\" : {\n      \"rights\" : [ \"Manage\", \"Manage\", \"Manage\", \"Send\", \"Send\", \"Send\", \"Send\" ]\n    }\n  }, {\n    \"name\" : \"Isaura Stracke\",\n    \"id\" : \"4t0d\",\n    \"type\" : \"u52cptb9ovbw9k3mybol4ug19yu2rcmqw9aeapod09v10yejx6ohcy23mpcoopbfkwwqm68a7yw9mbd1bid681eg024bbedsm9tlow5wtbk0rxhi9pw8lb84q06k4mrdd8pecf4bpz9rvd5k6pbeqf336mu61jfaahpeey07sqimjuuccl3ob2ztiuwygy\",\n    \"properties\" : {\n      \"rights\" : [ \"Listen\", \"Send\", \"Send\", \"Send\", \"Listen\", \"Listen\" ]\n    }\n  }, {\n    \"name\" : \"Clorinda Okuneva\",\n    \"id\" : \"ln99\",\n    \"type\" : \"79g91n799ae5fkgpdb6owi6m8j32ayzemoo41tqzlrmfd9vmpg11mh3fenvpmfdwxbw0ix95z9eocusbjxuumjt3kr8x1ctlsxv6n3n4h7ukt59\",\n    \"properties\" : {\n      \"rights\" : [ \"Manage\" ]\n    }\n  }, {\n    \"name\" : \"Connie Schimmel\",\n    \"id\" : \"o2q2\",\n    \"type\" : \"ndcvm1oqc5ol3k6ffl74f74e2lhqqzeli17vkua3yqlg2olzqwhtuh0ylbiqij3jmc6joadmmiydou9n4jp9vhemfu1cej46r4knon7ontoyn5z34mbz84mngej9qb77w6uvm9ismnvpdeh23xfnkl1o5fgq2qaye3gc\",\n    \"properties\" : {\n      \"rights\" : [ \"Listen\", \"Manage\" ]\n    }\n  }, {\n    \"name\" : \"Lemuel Shanahan\",\n    \"id\" : \"6586\",\n    \"type\" : \"dmo9iu7sk9ikr19utpmujbd1muiku8ggf4rjrp5fs2zqaprb6zyjmluzqz5ecz1z8157mw6988catn44wua2fzca3y5gdxwjzn9r9tqysso31jphz22wurybvlqut3luqxzv0a1vk8f65lym7ivwejiw1ig73tfr4wnde4ai9nqz2crkc20fvli7ct88fn3atiebkr6\",\n    \"properties\" : {\n      \"rights\" : [ \"Manage\", \"Listen\", \"Send\", \"Manage\" ]\n    }\n  } ],\n  \"nextLink\" : \"8y457ohauqko9fbdd4cduo2i2un65akc4oc3d05j17qp5l2qb0f\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "74c9cbf0-3029-452f-8725-65f1ab35408b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:59.326218Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_ListAuthorizationRules",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if value contains incomplete list of authorization rules."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the list authorization rules operation.",
                "items" : {
                  "$ref" : "#/components/schemas/AuthorizationRule"
                }
              }
            },
            "description" : "The response from the list namespace operation."
          }
        }
      }
    }
  }, {
    "id" : "5e67cb4c-ab31-40d2-b6d7-684b532b7c45",
    "name" : "Creates or updates a namespace. Once created, this namespace's resource manifest...",
    "request" : {
      "urlPath" : "/subscriptions/g30q/resourceGroups/Miss+Dee+Marks/providers/Microsoft.Relay/namespaces/Vito+Wiegand",
      "method" : "PATCH",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "zkv74t3yb90ttpne5li7lnx8i1zhxz3acapanwe95xl3jxlyztgkp9nyrvldb"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"location\" : \"the5ynsv3bz46moncadetxqngnisyfw2cih38q9sz1zi131bsa5pa1yj3o7w82bfz61hf02n60d1uofsqnuzcr5xg4xvzrth1i74wyzivj3yzjvnm2y4pa1i4jfyewfzrom\",\n  \"sku\" : {\n    \"tier\" : \"Standard\",\n    \"name\" : \"Standard\"\n  },\n  \"properties\" : {\n    \"createdAt\" : \"2023-04-19T19:09:00.324Z\",\n    \"metricId\" : \"34yq\",\n    \"serviceBusEndpoint\" : \"vl9d3ygvj1fguqb06557ywwbiwtg7x64ks9cufo3d\",\n    \"provisioningState\" : \"Unknown\",\n    \"updatedAt\" : \"2023-01-20T05:56:58.324Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5e67cb4c-ab31-40d2-b6d7-684b532b7c45",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:59.324842Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Update",
          "schema" : {
            "properties" : {
              "properties" : {
                "$ref" : "#/components/schemas/RelayNamespaceProperties"
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Description of a namespace resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "e23468ba-f034-47be-8ac9-bcb22b97401f",
    "name" : "Creates or updates a namespace. Once created, this namespace's resource manifest...",
    "request" : {
      "urlPath" : "/subscriptions/url1/resourceGroups/Dani+Leuschke+III/providers/Microsoft.Relay/namespaces/Cathy+Beier",
      "method" : "PATCH",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "oda7knder38aa4456td8p1eo9xldrcez9utedmqyidl1gnb"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"location\" : \"pqha0txumct3gjmbfi2js4gia7f0fkrfnygeltcyhs3hilp35ut52pu6ctwtljo4vogf2hagu4b2pi5e3vfqqz1vish6hvgm4jxhq2rrxfahonm8gn57sa7nbgeo0t7l25sc2m5hzpv7o380t752jlae6dsq\",\n  \"sku\" : {\n    \"tier\" : \"Standard\",\n    \"name\" : \"Standard\"\n  },\n  \"properties\" : {\n    \"createdAt\" : \"2022-09-06T20:11:04.324Z\",\n    \"metricId\" : \"n437\",\n    \"serviceBusEndpoint\" : \"pxwz0j4m8b1xy0hbk71t2xkrnr0uyvn3dptz1yhr0xuckmp0trkdbjhfm6dwzh84s3z4vwmfvyog1wgvvk2bjpnpbzp2s0ngpji7ici0magofpg2hh22ixt998yehpscdtd7ij19hqtxfbwy76\",\n    \"provisioningState\" : \"Succeeded\",\n    \"updatedAt\" : \"2022-06-20T19:11:09.324Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e23468ba-f034-47be-8ac9-bcb22b97401f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:59.324517Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Update",
          "schema" : {
            "properties" : {
              "properties" : {
                "$ref" : "#/components/schemas/RelayNamespaceProperties"
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Description of a namespace resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "a68cdced-3067-4b71-8826-21c7732ede2c",
    "name" : "Deletes an existing namespace. This operation also removes all associated resour... - 204",
    "request" : {
      "urlPath" : "/subscriptions/72dr/resourceGroups/Oren+Brekke+II/providers/Microsoft.Relay/namespaces/Cicely+Gulgowski",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "2y64p4yjxp838vez3ozqkom50kytp8uiqcmqtx8vmnxdemt43eibk45dhc7571qh6vhjhx6t02n3laosd3qhll6x0cez8stxm8ykgkj1iocy1ab6ff7psvg1qc6zpem2td7z4mjy9z"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "a68cdced-3067-4b71-8826-21c7732ede2c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:59.324171Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Delete"
        }
      }
    }
  }, {
    "id" : "6b39b34a-5679-42ba-b046-8854dba8ca94",
    "name" : "Deletes an existing namespace. This operation also removes all associated resour... - 202",
    "request" : {
      "urlPath" : "/subscriptions/40ki/resourceGroups/Sylvester+Schmitt/providers/Microsoft.Relay/namespaces/Milly+DuBuque",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "86i1keqnbyadd0ch2u6uy9jy4q4rci3s58ikc9i7mfogqnuqm9fa4nw3yjauj5t91ygy0uwdd5v7spdrsb2w4pc47jw0637fmc7"
        }
      }
    },
    "response" : {
      "status" : 202
    },
    "uuid" : "6b39b34a-5679-42ba-b046-8854dba8ca94",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:59.323997Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Delete"
        }
      }
    }
  }, {
    "id" : "e8064405-1e6d-465a-ac60-07f38acd571c",
    "name" : "Deletes an existing namespace. This operation also removes all associated resour... - 200",
    "request" : {
      "urlPath" : "/subscriptions/84fs/resourceGroups/Chelsie+Hoeger/providers/Microsoft.Relay/namespaces/Ms.+Lamar+Moore",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "dscysfvmoy0bvnm21avdy70vzo02jkelpyekrleed661sa6wj9warep3b7qpim3h1z082qlpg2c9yvm32xvq69nopx95s4g45kpiydzhsni1uvrfszfa44b4rurpuf7jhsd5jl2aschb3ea5jqx2wbx2oskl0j10pvd"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "e8064405-1e6d-465a-ac60-07f38acd571c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:59.32382Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Delete"
        }
      }
    }
  }, {
    "id" : "f796b378-a3eb-4422-86cf-c660701b2d24",
    "name" : "Create Azure Relay namespace.",
    "request" : {
      "urlPath" : "/subscriptions/o3w9/resourceGroups/Jeremy+Thompson/providers/Microsoft.Relay/namespaces/Isreal+Franecki",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "bta1ko7yc2tiv3fg7kv3c6ltrcq53gzorr8hoq02nqbqkh0yafw13uno2pe0gsrld7qrly80zteqy1rkzwr4jn9ndqdp4pfdr37w6s22zhxhl3u3gdk8xn0kxvi3fb9mr"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"location\" : \"cjtimf0uxcx4a6yg3s4cx9t3k83kuq1yp5nf7n7cusqoa9r1a7ucsg6wgxt73png7in07apgudf5oefx44pvenrt4st8tur7yridxjjrwvbrm7kh9uhvkvlud6igj3isa3nmceros6rqe694dqpdp30wmetn32a2rz3v1z687duq5h9apze6ne\",\n  \"sku\" : {\n    \"tier\" : \"Standard\",\n    \"name\" : \"Standard\"\n  },\n  \"properties\" : {\n    \"createdAt\" : \"2023-05-14T20:03:39.323Z\",\n    \"metricId\" : \"972t\",\n    \"serviceBusEndpoint\" : \"bopuo15fw1m0wcm7ml87otgtka26qobrekwcp7nzex80oro6vgq10vs3329jku9liblrtt14utge1xs0a736ahdmx68jdm6j7rz8xsbo8v2bzfg8d27r5blnosr1xj6z5mqpcmpxppvu1p9c45vnx26dvueize9jo6vhffj03l7vka72t8yuo6qnz\",\n    \"provisioningState\" : \"Deleted\",\n    \"updatedAt\" : \"2024-01-31T13:18:30.323Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f796b378-a3eb-4422-86cf-c660701b2d24",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:59.323613Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_CreateOrUpdate",
          "schema" : {
            "properties" : {
              "properties" : {
                "$ref" : "#/components/schemas/RelayNamespaceProperties"
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Description of a namespace resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "8df4606a-2e35-45ad-ad5e-46af2d1bd67c",
    "name" : "Create Azure Relay namespace.",
    "request" : {
      "urlPath" : "/subscriptions/kg6i/resourceGroups/Clarence+White/providers/Microsoft.Relay/namespaces/Mrs.+Valene+Kunze",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "4pbwhqk4xd3bu9o126g7dkkiwjle10djenzw2deh34qbnx4oiirluechpqyywap7chyxdrbjgdvi7awl5oeioplqhqdsa7uagxefy8h5ak0bd4rrqmib4uz5ui115z4voydbni7myew2m629if17w51auumnwp4spsucmnr38tzc5pg59s027t4p2a7qwmq3i4kzijt"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"location\" : \"q2mhseupgcgi7exam80c0gh9rjseleaa1bchlyj7tnxqrmvqtyyn0krj5vzqnycvk2wopqgtleswyfaxto0h8y3b9yq6t8x0all17i513p\",\n  \"sku\" : {\n    \"tier\" : \"Standard\",\n    \"name\" : \"Standard\"\n  },\n  \"properties\" : {\n    \"createdAt\" : \"2023-08-25T14:44:17.322Z\",\n    \"metricId\" : \"2fsj\",\n    \"serviceBusEndpoint\" : \"uix3d1h4x33efdeziezze8gfwjxwfrlytl69u3q2nd4r7tjhxgan1ikssr7d78k07q5d5fzz5tf41g5jo8lrgsyxxw8fslyj839vxoc6nv08x8s0k\",\n    \"provisioningState\" : \"Created\",\n    \"updatedAt\" : \"2024-01-07T19:25:11.323Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8df4606a-2e35-45ad-ad5e-46af2d1bd67c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:59.323272Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_CreateOrUpdate",
          "schema" : {
            "properties" : {
              "properties" : {
                "$ref" : "#/components/schemas/RelayNamespaceProperties"
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Description of a namespace resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "ff3da3a5-501a-4e1f-9d7a-50fa14b4165c",
    "name" : "Returns the description for the specified namespace.",
    "request" : {
      "urlPath" : "/subscriptions/f6x8/resourceGroups/Tamiko+Kuhn/providers/Microsoft.Relay/namespaces/Marinda+Luettgen",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "sfxdcnta3jex172s8wthg1qlpnekfgtsp8fla0ydh4ygj0es08f4ym3rr5mkn8l5tg1xmmgy0przq0fjt5utm7yt3quzst9isrqrmyu12yqb0n2x3rf3vjwm14w"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"location\" : \"n0lf6m7ghsayzx85zet0vqh1sitc8us8vrm30achcqbples08qtnhwhztqykmgc7fsvyajxm762fs1x93dgadwh07w7t3sgeabsu43gga2u0jplf789ku6sc4ucn2og0gvzsuc0eyjkkg6ei4\",\n  \"sku\" : {\n    \"tier\" : \"Standard\",\n    \"name\" : \"Standard\"\n  },\n  \"properties\" : {\n    \"createdAt\" : \"2023-11-27T09:43:22.322Z\",\n    \"metricId\" : \"kba3\",\n    \"serviceBusEndpoint\" : \"s5bmmr2nenkn0g32\",\n    \"provisioningState\" : \"Deleted\",\n    \"updatedAt\" : \"2023-05-26T14:54:23.322Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ff3da3a5-501a-4e1f-9d7a-50fa14b4165c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:59.322914Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Get",
          "schema" : {
            "properties" : {
              "properties" : {
                "$ref" : "#/components/schemas/RelayNamespaceProperties"
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Description of a namespace resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "32a953b3-70a6-498d-9ee3-35988a0bda0b",
    "name" : "Lists all the available namespaces within the ResourceGroup.",
    "request" : {
      "urlPath" : "/subscriptions/8qq1/resourceGroups/Emile+Funk/providers/Microsoft.Relay/namespaces",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "myj10os5szeueukjhsgx6mtd2815gxxedfsngr9fmx8pn1spruqvrob9ol0y5p7m6ond6opjb09manc4syj2feua9isirxnctwge2o8ay3y3v4xp44y87cisj1m56gha8w0s3h234b2s80xak357va76x7in9rpqdfjqaxrrsv2b77x6jgcous1kw7f0y"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"location\" : \"n876632dqybexk3goyo359p670qszmeir8xqdh4bpqshx57sb1z9m1l1tzmjwfg19k7z8jfcocnxo7wkaooy32bpployjqh3puk5pge8dr9nw1bk5t3ups33ei848ku3\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\"\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2024-02-23T20:09:08.321Z\",\n      \"metricId\" : \"88b5\",\n      \"serviceBusEndpoint\" : \"8edfbxbxzw1tvm2rn87rdxpupx7q6bdgunntyqtqz7x1t6kqd\",\n      \"provisioningState\" : \"Created\",\n      \"updatedAt\" : \"2023-09-14T22:35:21.322Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"avdqx6o8nxm8arzxnstdcursax1koal4ze8exfmvt3wfwcurytwkcpbpjnh17h2i5tqi61w0s22j116sobldk0b73v60qxuag3a1ypwgjhvs42q4lruo07chg\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\"\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2023-07-01T11:57:27.322Z\",\n      \"metricId\" : \"5qso\",\n      \"serviceBusEndpoint\" : \"s1wbccc37a7nr1zkjojzz9qqfhdufhrvf5sjjxttooiwj4osaxmgtyviqx3u64gecs4j3jognfn4ldx2qg7l2du2u08e4ny9qf35j5mpmu\",\n      \"provisioningState\" : \"Succeeded\",\n      \"updatedAt\" : \"2022-05-05T08:33:26.322Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"tx41r5n144p1f4nvm\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\"\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2023-03-04T04:36:09.322Z\",\n      \"metricId\" : \"5599\",\n      \"serviceBusEndpoint\" : \"07eavnp1o8wm18u5yjfmtet0sho2hwnu5fj12oajqio7sk2iieddq8jeqaia7\",\n      \"provisioningState\" : \"Updating\",\n      \"updatedAt\" : \"2023-10-29T01:44:53.322Z\"\n    },\n    \"tags\" : { }\n  } ],\n  \"nextLink\" : \"oamurel01ze660vy962pc4yst5enb6ii8xfpzx5i55n2xfcpildz6ascg4o8eufrxxtgvtm9wlfotddhyr0r18s2g2vrcuz8xu2if1nzi66aac9jdzrlnlvyhfb1y26f6bskcfsuv9w8pyptxa6l7kwxic4h2fluglwuc6alu9hkth31kfhe5fc1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "32a953b3-70a6-498d-9ee3-35988a0bda0b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:59.322537Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_ListByResourceGroup",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if value contains incomplete list of namespaces."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the list namespace operation.",
                "items" : {
                  "$ref" : "#/components/schemas/RelayNamespace"
                }
              }
            },
            "description" : "The response from the list namespace operation."
          }
        }
      }
    }
  }, {
    "id" : "d0e0a615-9782-4ba9-9adb-34a1ca968bb5",
    "name" : "Lists all the available namespaces within the subscription regardless of the res...",
    "request" : {
      "urlPath" : "/subscriptions/3870/providers/Microsoft.Relay/namespaces",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "8f7we25fc5tzrbzaozhorf0w0u59ym386ozxj6eeg8lkp051kflxkon"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"location\" : \"3r14t46sr1ibk5imxjq9pj53eyxxzahw54idj3v2kqlcuquwaj6rp2wtrnfujpsw1jtdd25m9tbo2ss7oygpiy9meyo3vzn3tcgai9vlin9fu39srld3tpahnpd5hsu74ekuskrdg4i9v4v27ks1\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\"\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2022-06-25T15:34:34.321Z\",\n      \"metricId\" : \"f7e2\",\n      \"serviceBusEndpoint\" : \"946bmyafdc2da9glf6kgs790serxy7xa1p5ao8ibumulec07f8h2tr4v8tgg1u3dq1odqkdjfvj1puwvcq8q5swlq5giwyqynzgfdjfbv3ntxxkj15\",\n      \"provisioningState\" : \"Deleted\",\n      \"updatedAt\" : \"2022-05-30T01:31:51.321Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"w6br6sxe5n8p9ga6fl4ukzj0iz4ns\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\"\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2024-02-29T13:41:50.321Z\",\n      \"metricId\" : \"3316\",\n      \"serviceBusEndpoint\" : \"medau4plslheu5yg6af533v7a5ws1k3e9o8p23bdbo11lc9q4wus169b8jdibc72w05pjlr2vl4q2tr5t5u7j0ktvwvzsa1tcgw\",\n      \"provisioningState\" : \"Unknown\",\n      \"updatedAt\" : \"2023-06-17T16:43:41.321Z\"\n    },\n    \"tags\" : { }\n  } ],\n  \"nextLink\" : \"vp7yoj8aag8txc3dzujcf251q1ozg0mzelsg96zenwpqxnfahromt30bmnypz202u2ii1mmuxx6plpbsus7icc7s0yc6\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d0e0a615-9782-4ba9-9adb-34a1ca968bb5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:59.321873Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_List",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if value contains incomplete list of namespaces."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the list namespace operation.",
                "items" : {
                  "$ref" : "#/components/schemas/RelayNamespace"
                }
              }
            },
            "description" : "The response from the list namespace operation."
          }
        }
      }
    }
  }, {
    "id" : "f1d80e90-2971-4ce4-90cd-9a32cf220593",
    "name" : "Check the specified namespace name availability.",
    "request" : {
      "urlPath" : "/subscriptions/x106/providers/Microsoft.Relay/checkNameAvailability",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "6rs7feqqft7mvxp5ek4zv7q36mjlwnejoxwg2vi7r1tasb3ac197xzc57ba64c9dwhojcf6h2kutojd6aasa7ir3h1vo9cj7xsqkkdl3wj0brlw70776u7c4k8urr44gdxjw2rkncgqcyg7au"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"reason\" : \"SubscriptionIsDisabled\",\n  \"nameAvailable\" : false,\n  \"message\" : \"Ipsam nisi iusto. Aut omnis qui quam blanditiis harum accusamus. Inventore et voluptas beatae praesentium vitae temporibus. Ipsam est voluptatem hic.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f1d80e90-2971-4ce4-90cd-9a32cf220593",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:59.321203Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_CheckNameAvailability",
          "schema" : {
            "type" : "object",
            "properties" : {
              "message" : {
                "type" : "string",
                "description" : "The detailed info regarding the reason associated with the namespace.",
                "readOnly" : true
              },
              "nameAvailable" : {
                "type" : "boolean",
                "description" : "Value indicating namespace is available. Returns true if the namespace is available; otherwise, false."
              },
              "reason" : {
                "$ref" : "#/components/schemas/UnavailableReason"
              }
            },
            "description" : "Description of the check name availability request properties."
          }
        }
      }
    }
  }, {
    "id" : "bcc59166-dc61-4e05-a5a9-d0afede0eff9",
    "name" : "Lists all available Relay REST API operations.",
    "request" : {
      "urlPath" : "/providers/Microsoft.Relay/operations",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "99f81d4qf1q1khp0ixkuowilkl39ggx6euqge3yk2x7kdl531vv8togrboj6nmkh4zi8fyamrnyfkgn848ek"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"display\" : {\n      \"provider\" : \"ht7dpy068x5fch3fo1bfvpxpg42jiea607w34fqbt1o40nwskbg5io97spcdojr4aimy4xwvm7ij67mk1903weyljl7fn3n3fep8d0u2v3yyv9h3b1stxclkzm1v30u4bn2noxrigxcciukaaju7i\",\n      \"resource\" : \"p9s9ky561ybu275053q8ap6d08tmc3myforgddl8ybcphp588at9g190a5zoyblwgzp49htu1c4mr0jdwq2h2gbaucq1tl6qg105inilbe\",\n      \"operation\" : \"fhyfykq73yi0vxo2znk0ethpjrycornoz5geruwv3cu1vtpo89j67j9ge5l5zvlyiyoc21vxzd6azzlzifpld9osgj28kl3mtpy57zjccx1zeptljc4p7cqa1ak97ckhg1\"\n    },\n    \"name\" : \"Asa O'Keefe\"\n  }, {\n    \"display\" : {\n      \"provider\" : \"csyay4g8peqgt3m13dfecr5b9fa67x5lueype8\",\n      \"resource\" : \"pgpk8rhx15ooc4yy16oqzzqgx\",\n      \"operation\" : \"kedkwl3ztvsazq32s9m65e4ofx1tylq524gvg8hy59yw6y8blcmmcppqj2j4c4f0z5d2w3qgdiar10qcfvaidqf5g0jq9uhweo167w6ltm65x0ntqq7r8jed8r8f9gebl5vjadghhmdwp607myfw\"\n    },\n    \"name\" : \"Willie VonRueden\"\n  }, {\n    \"display\" : {\n      \"provider\" : \"gf54blh64g27dbv6uhwl5eoz47pg03njnxlr55fngaljzi1zba832uxtwtv8fqa22yy9aq43ysebluyhi8v1gw8p0lpeg870iuoxie9\",\n      \"resource\" : \"oxyb5idn6i425hdbjvz54k2rv6z61ge4i43mwxk98zsnlrlesuhv6zrx8mlj4xmo3lqqrdhfb3xll\",\n      \"operation\" : \"a5m8o45keaymaimzt986h323tqupt2oo1qke5844n4l9d1jscsmb7br693wvzjh4r\"\n    },\n    \"name\" : \"Miss Tona Reichert\"\n  }, {\n    \"display\" : {\n      \"provider\" : \"ll87dvnnuud5oeils\",\n      \"resource\" : \"fcy1ffblhwn27ho5426dbabkhvv3y9dazgwrup49pk994j3496pcdibqdsy94dvm4gd71lxix\",\n      \"operation\" : \"3g8izzulfhzb7i4ckwuyd8fv9942bhyv6kxb2s5f7wk8hduf12xrgocsuiisbkbd2mgmqo5zm1cfs0kpux8wxt6czg5y5o3srrwlpv84mtjdrjjax\"\n    },\n    \"name\" : \"Ms. Levi Zulauf\"\n  }, {\n    \"display\" : {\n      \"provider\" : \"aczlymq8j62by67px5fatyu4a7hy4wdm44hjff1n3ndxe4mzxqnfdlczyx4leeqw1z8hkmreebi4fm1a0stas2fznsjpkxdsw87imkklpewgffo5g562ujgi142d6a1kqny6h1d0cgkw44bux\",\n      \"resource\" : \"k2q8jlnunxna8swkugkrp9\",\n      \"operation\" : \"c9bmqt6f896uxoq5h0csca9d4gi5f7qxqi292nli59dfxgrqkimtwafej3l3rq8mzt5xmucy67e76gjd93rqes95n612mdjb8akbqolev1takaklfgmjtkifm63lj7pz0o03irral9hf2hcyitk7ajdegbpm08jjkwt92u2r77qk59a5edkgtnw5b834jktuem\"\n    },\n    \"name\" : \"Fredric Murphy\"\n  }, {\n    \"display\" : {\n      \"provider\" : \"of3scp3o4gk4yam\",\n      \"resource\" : \"4qhjntnwngve5n05csbp6mis211g54p3gvyiy1d2jfkxx8ysyoukvc7jgr19trkr288uea1eb3hva676c6jm708duph1h6d499xfy7twdvsn8uov2ryqtf\",\n      \"operation\" : \"9eje92n3vgp0u1f9ctv21cm5ybzfby75t7sn2ke0id2mu2zh017jfhecj2vz9745oess6jwdpu6tvkame9wijsfceikmxoqzloez2bpllzld48xbp1dg8qhpjkq558jo6o7aho000ncbanwsd6adnyfnu3y7expj73yh8aqz42qz\"\n    },\n    \"name\" : \"Delila Gerhold\"\n  } ],\n  \"nextLink\" : \"edm\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bcc59166-dc61-4e05-a5a9-d0afede0eff9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:59.320814Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Operations_List",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "URL to get the next set of operation list results if there are any.",
                "readOnly" : true
              },
              "value" : {
                "type" : "array",
                "description" : "List of Relay operations supported by resource provider.",
                "readOnly" : true,
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                }
              }
            },
            "description" : "Result of the request to list Relay operations. It contains a list of operations and a URL link to get the next set of results."
          }
        }
      }
    }
  } ]
}