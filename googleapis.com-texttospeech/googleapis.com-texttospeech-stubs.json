{
  "mappings" : [ {
    "id" : "efdff5bc-9a34-4b67-96b4-57db7c9fd0b8",
    "name" : "Synthesizes long form text asynchronously.",
    "request" : {
      "urlPath" : "/v1beta1/6pdp8wshi0c5rt9hqye99zkxd618dhc8voacrhc68qg8:synthesizeLongAudio",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Willie Wisoky\",\n  \"error\" : {\n    \"code\" : 703211291,\n    \"details\" : [ { }, { } ],\n    \"message\" : \"Et est maxime. Nemo vitae quas amet. Qui natus veritatis facilis soluta qui tenetur nisi.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "efdff5bc-9a34-4b67-96b4-57db7c9fd0b8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:34.98806Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "texttospeech.projects.locations.synthesizeLongAudio",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "b2ce75e1-f1e8-423f-a6c1-f8e9a4d51658",
    "name" : "Lists operations that match the specified filter in the request. If the server d...",
    "request" : {
      "urlPath" : "/v1beta1/Daisey+VonRueden/operations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Andreas Rowe\",\n    \"error\" : {\n      \"code\" : 37924567,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Consectetur non dignissimos qui tenetur beatae quo velit. Praesentium distinctio et non eius odio. Saepe sint ea qui nihil aut qui.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Truman O'Reilly\",\n    \"error\" : {\n      \"code\" : 615496698,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Commodi illum sit. Id sint rerum autem in et. Et amet rerum illum id qui eos. Repellendus officiis dicta aliquam fugiat occaecati omnis.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Vena Beer\",\n    \"error\" : {\n      \"code\" : 863743365,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Commodi amet voluptatem libero ut repellat eveniet et. Laboriosam iste nisi. Sequi nisi voluptatem qui. Adipisci unde ad assumenda veniam.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Shayne Klein DDS\",\n    \"error\" : {\n      \"code\" : 175667638,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Vel ea laborum excepturi sint nihil animi. Voluptatum et quaerat voluptatem enim iure est id. Dolores in deleniti modi repudiandae aut necessitatibus.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Dr. Nikki Dicki\",\n    \"error\" : {\n      \"code\" : 2132892010,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Itaque quisquam aut vero amet est omnis. Molestiae soluta laboriosam. Deserunt ut et.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Arlen Weber DDS\",\n    \"error\" : {\n      \"code\" : 1736330829,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Est omnis molestias sapiente ratione id. Dolor minus blanditiis. Quibusdam reprehenderit enim amet nam incidunt tenetur repellat. Perspiciatis quos qui. Iure iusto laboriosam deleniti laudantium deser\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Pete Skiles\",\n    \"error\" : {\n      \"code\" : 345412691,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Harum enim voluptatum exercitationem veniam quia. Blanditiis doloribus assumenda aliquam aut. Provident maxime dolor distinctio.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Nelson Crooks\",\n    \"error\" : {\n      \"code\" : 1896070910,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Voluptatem nisi quia iure. Et blanditiis quidem magnam delectus saepe quaerat. Recusandae asperiores ipsam totam autem facilis aut. Saepe magni dolor praesentium aperiam id iusto quisquam. Velit dolor\"\n    },\n    \"done\" : true\n  } ],\n  \"nextPageToken\" : \"q36okjzxtfd9y2a3e06mx7hffdfk0ao7n59o7zdrg05wyuq6gcb60gbyfiacayixq56w5fdsmfkojghwnld1yxbuxhf46n1ux392z5ww4iflwox7667qhljboxdwd3dczs780ji0edtl2m8vnfmm9779mv0kzb\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b2ce75e1-f1e8-423f-a6c1-f8e9a4d51658",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:34.987848Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "texttospeech.projects.locations.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "b0cf7786-34d3-49f0-ae77-fa81d144b023",
    "name" : "Gets the latest state of a long-running operation. Clients can use this method t...",
    "request" : {
      "urlPath" : "/v1beta1/Angeline+Botsford",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Gaylord Johns\",\n  \"error\" : {\n    \"code\" : 5077615,\n    \"details\" : [ { }, { }, { }, { } ],\n    \"message\" : \"Voluptatem ratione aut nemo dicta aut. Molestias et est omnis sit atque quia. Maxime facilis qui esse aut eum.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b0cf7786-34d3-49f0-ae77-fa81d144b023",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:34.98649Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "texttospeech.projects.locations.operations.get",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "27637912-8be1-447f-abe1-5b9f91c6004d",
    "name" : "Returns a list of Voice supported for synthesis.",
    "request" : {
      "urlPath" : "/v1beta1/voices",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"voices\" : [ {\n    \"languageCodes\" : [ \"xqltzllbriffjua3k2lb1ixbt6y6rfbxj7e86wi6ykrvkn9a3hldu7hrfwbobh4oaan5vb5rd5io46yx7k9k09oqrvgxo5ujj6mjyna6efn14py6vzgpe60ijfe48958bgz0165zbwmf0uxrbovndpn1hv0e8jpmojgsphqny88m3zqzz2cr9\", \"909auj10s93z\", \"yc0uzmy9hspotgx2o0dv72h8bsia6604k5x0pwo13p1y8hc2j5ljgun5nka6tn88ey3re2jwygmr07qv09dvrc4h6g1er4jvq25p7hrpiu1fpv9de\", \"u8a0av8nm3kscvtdymv6z0y735o479ukxy21wxxis0kt2tlo4ci2kkgie7uv8x5p6eo52fvk69gw64qfh002xte3b4dsontrdydnppp0b2z8fzhyr5w7f834tjujvkknq54nha5gnr26ar2kh7zktcze4zw2qv4llzdttnemi0c03z9bfd\", \"wnfipn7bm1rsl0gibbvdwzu0h36ape\", \"fgvd5jomlqkjbogwojnhuqn230slg44dnmz586m3dvzalikcjmdyk2lxua6f125tlz0w6wm806lp3gbmenfvk6wmbexe99n1l1wtc40ejutuk26ph61sg3f2diojuufhdulosu1hyalberzf9vvex8qhtks05wg0iv4xg3so7zr24c1\", \"cpu2f6xlwg9n15yvpk5cbssctlwo6s8svp5iplhvje8hi54lx75w6poybja7bxcttsq48vx0cljmdvnexz9h1pfgl75zxc78tayob839c78ep9wkmsqh2lwndle8aivl7z5erx2nwyel87ntuvvy6kdjx91nmaugfr2yk61lng2grusm\" ],\n    \"ssmlGender\" : \"MALE\",\n    \"name\" : \"Deann Monahan\",\n    \"naturalSampleRateHertz\" : 864579964\n  }, {\n    \"languageCodes\" : [ \"7qgz98a45j0298br509dycdu9lb7u2tkufzgc04ivnhnqfsija3q2mes6oc78l55jeuf5sl4kyzyrb8vkrfweyhczc8o0w7mesj48xe30wtm7leldlria817ixtmwapbu3s4e27z2pvwel4mqzhh6dr1x352foso4xf3a\", \"ev4l98y1g59gl1ojpkea6w7v66bg9c4bron95nguxj4ptao8812ndugvv\", \"2wt0as70fpsfdb9h8zvrc26b4gv1wv5\", \"u3rtoc1\", \"ct2krl7pyj5c7gzxlzr800fao36d71mpn0bygy6m4f0zg3rqb447vyz1fucj9x6d4914yykodmm4oj8x\", \"i91b74mm05mtjv6mwtjlu6nna0bd14h\", \"5rn742l94g8crv0a7opx2qbtmz1\" ],\n    \"ssmlGender\" : \"SSML_VOICE_GENDER_UNSPECIFIED\",\n    \"name\" : \"Tawanna Hilll\",\n    \"naturalSampleRateHertz\" : 987668257\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "27637912-8be1-447f-abe1-5b9f91c6004d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:34.98621Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "texttospeech.voices.list",
          "schema" : {
            "description" : "The message returned to the client by the `ListVoices` method.",
            "properties" : {
              "voices" : {
                "description" : "The list of voices.",
                "items" : {
                  "$ref" : "#/components/schemas/Voice"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "303a57c4-2bdf-4e3e-9701-eba6b538f97a",
    "name" : "Synthesizes speech synchronously: receive results after all text input has been ...",
    "request" : {
      "urlPath" : "/v1beta1/text:synthesize",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"audioContent\" : \"Repellat voluptas mollitia rerum maxime. Quaerat doloremque repudiandae vel ut qui occaecati nostrum. Et et molestiae harum quos mollitia. Modi dicta quasi. Ut voluptatem ipsam.\",\n  \"timepoints\" : [ {\n    \"timeSeconds\" : 6.826387931379373E307,\n    \"markName\" : \"Ayana Emmerich\"\n  }, {\n    \"timeSeconds\" : 1.546685723038805E308,\n    \"markName\" : \"Suellen Nikolaus\"\n  }, {\n    \"timeSeconds\" : 1.162651582836226E308,\n    \"markName\" : \"Mr. Wesley Ullrich\"\n  }, {\n    \"timeSeconds\" : 6.173431733672002E307,\n    \"markName\" : \"Bell Harvey\"\n  }, {\n    \"timeSeconds\" : 1.6249911312926984E308,\n    \"markName\" : \"Olive Hartmann\"\n  }, {\n    \"timeSeconds\" : 1.265150684125529E307,\n    \"markName\" : \"Burton Kris\"\n  } ],\n  \"audioConfig\" : {\n    \"sampleRateHertz\" : 561712737,\n    \"volumeGainDb\" : 3.4454033402837295E307,\n    \"speakingRate\" : 1.0187715718086552E308,\n    \"audioEncoding\" : \"MP3\",\n    \"pitch\" : 1.3748327043064136E308,\n    \"effectsProfileId\" : [ \"3itpsy88ei88b77fzh7y7rhwavlrnkqa6wmz4pzxj4m2negca2zim3vakve96uvveaupnvupqbr91nqh4lknx0r0xlca51eoojh33373zqrtbwgpp6densvrzrgqecfwihy19e3472wi38m429\", \"jr34bx70hekrsiso2b40yk356mvjkqprl7755tauarx4n2s6c2o3ouj6gs00jjmn4lqvb6dnozvqnjl0l0co0qigwugw6ivc3pa1iekvclq1dyb5ozjgztnqdmz3hmk6bbxrb7cl2z1hhr6a293uapbh17ods8v7g3ze\", \"yj7s7b0avdt43p4wf0vb2juxu5o4vhinjaz0avfyvzqxfg70g0qpvqvl4133gnujihyptann6cfw96liv0u6jxsxx7fat6y4k6cy7vd6d7rcin5ix8ney9kvnt15qmr1t1xdhi4ifp0uw3o5hn9w5k7xvjq8b306ctd0kbo\", \"p2f1lebe0h3cnafj4ohk8e\", \"q94muawd6nk7vh6yg93e39w3f3c4ykvbbkn5h1g0yx3au5kikwofrauhnzeprs437tczvsuxbidy3jd5ycpuyihauyxwddy58hyvjh6r2u291fl5jxyh8crrhhsdh62qejavszsvuy81ea4h5i2acmu7bn30muygvwjhtmg0baegsaayf\" ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "303a57c4-2bdf-4e3e-9701-eba6b538f97a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:34.985924Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "texttospeech.text.synthesize",
          "schema" : {
            "description" : "The message returned to the client by the `SynthesizeSpeech` method.",
            "properties" : {
              "audioConfig" : {
                "$ref" : "#/components/schemas/AudioConfig"
              },
              "audioContent" : {
                "description" : "The audio data bytes encoded as specified in the request, including the header for encodings that are wrapped in containers (e.g. MP3, OGG_OPUS). For LINEAR16 audio, we include the WAV header. Note: as with all bytes fields, protobuffers use a pure binary representation, whereas JSON representations use base64.",
                "format" : "byte",
                "type" : "string"
              },
              "timepoints" : {
                "description" : "A link between a position in the original request input and a corresponding time in the output audio. It's only supported via `` of SSML input.",
                "items" : {
                  "$ref" : "#/components/schemas/Timepoint"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  } ]
}