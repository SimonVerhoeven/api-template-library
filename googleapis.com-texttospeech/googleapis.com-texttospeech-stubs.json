{
  "mappings" : [ {
    "id" : "2bb2bdfb-846f-4865-87a7-0d7419101c0a",
    "name" : "Synthesizes long form text asynchronously.",
    "request" : {
      "urlPath" : "/v1beta1/1d1nff0glviijlomr1j8gn1s71l3vo6vy0:synthesizeLongAudio",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Soledad Lubowitz\",\n  \"error\" : {\n    \"code\" : 541181676,\n    \"details\" : [ { } ],\n    \"message\" : \"Laborum sed molestias voluptatem aperiam aut. Optio minima a id repellat beatae occaecati reiciendis. Commodi sed porro. Quas alias eum perferendis ratione. Aperiam ipsam sunt.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2bb2bdfb-846f-4865-87a7-0d7419101c0a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:06.126405Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "texttospeech.projects.locations.synthesizeLongAudio",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "4418bb35-aaa5-464a-b97e-e7de158422f7",
    "name" : "Lists operations that match the specified filter in the request. If the server d...",
    "request" : {
      "urlPath" : "/v1beta1/Devorah+Mann/operations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Benedict Borer\",\n    \"error\" : {\n      \"code\" : 963186700,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Soluta quas eveniet quasi et. Perferendis eum commodi. Eligendi ab aut nemo consectetur. Et in nihil.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Angella Turcotte\",\n    \"error\" : {\n      \"code\" : 483730914,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Sed culpa delectus sed voluptatum. Aut modi accusantium aperiam facilis. Iure voluptatem dicta culpa temporibus.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Ludie Spinka\",\n    \"error\" : {\n      \"code\" : 840763893,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Accusamus doloremque possimus voluptatibus enim. At itaque dignissimos laboriosam assumenda. Nostrum quasi omnis veniam aut aliquid non ut. Nihil cum rerum fuga nobis consequatur odio. Sed et accusant\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Ermelinda Rohan\",\n    \"error\" : {\n      \"code\" : 765826832,\n      \"details\" : [ { } ],\n      \"message\" : \"Beatae quas saepe consequatur quae molestiae. Aut reprehenderit consequatur velit fugit soluta voluptatem. Id earum saepe.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Percy Block IV\",\n    \"error\" : {\n      \"code\" : 1109908964,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Beatae porro cum. Non exercitationem aut sint non corrupti magnam ut. Molestiae accusantium quisquam velit tempora.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Danita Funk Jr.\",\n    \"error\" : {\n      \"code\" : 1724389193,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Et corrupti rem. Eum et ut quaerat quae non ut. Rerum ea numquam atque et. Ipsum qui quibusdam nihil numquam quidem dolores. Fugit quia incidunt voluptatibus.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Joel Wilderman\",\n    \"error\" : {\n      \"code\" : 1293895142,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Consequatur est et doloribus aperiam. Praesentium temporibus illo voluptas nihil esse doloribus. Eos ut reiciendis molestias recusandae cumque. Autem doloribus aut. Omnis voluptas animi esse nihil sit\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Marcos Denesik\",\n    \"error\" : {\n      \"code\" : 762575025,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Cupiditate nemo asperiores harum non sint. Totam voluptatem quidem eius. Doloribus aut non et omnis quia.\"\n    },\n    \"done\" : true\n  } ],\n  \"nextPageToken\" : \"8t89zx8d3r6t6b3hj6ucb48mceri4sey\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4418bb35-aaa5-464a-b97e-e7de158422f7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:06.12615Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "texttospeech.projects.locations.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "d15857ef-0841-40d4-8024-5c1596a261a7",
    "name" : "Gets the latest state of a long-running operation. Clients can use this method t...",
    "request" : {
      "urlPath" : "/v1beta1/Paulene+Heaney",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Dimple Ratke\",\n  \"error\" : {\n    \"code\" : 73388309,\n    \"details\" : [ { } ],\n    \"message\" : \"Porro nobis amet voluptates minus amet. Fuga rerum ex voluptatem sed odio. Enim laborum incidunt velit libero. Quis quis inventore eum.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d15857ef-0841-40d4-8024-5c1596a261a7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:06.125206Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "texttospeech.projects.locations.operations.get",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "992bc45f-ed9d-44d8-95b5-13318f39bea8",
    "name" : "Returns a list of Voice supported for synthesis.",
    "request" : {
      "urlPath" : "/v1beta1/voices",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"voices\" : [ {\n    \"languageCodes\" : [ \"3zmve1n5g7pgoine7a75a5xysmay9lul2mil7rwtzi8zowvcu8baqgn0\", \"3h77d67swe9exj85se8azshbd599ca8ce7908lhv7u88wc1y1f89ibifzxw\", \"g4ihe85vjnzcdgscorh05l9w43zy0d4odr61hxqh80go6xe87edj0xpa18qp737pz9jkwebdaer7os9sxq8efsemd8m64sy8hf8e57f9plhq1\" ],\n    \"ssmlGender\" : \"FEMALE\",\n    \"name\" : \"Hayden Blanda\",\n    \"naturalSampleRateHertz\" : 2077728998\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "992bc45f-ed9d-44d8-95b5-13318f39bea8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:06.124951Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "texttospeech.voices.list",
          "schema" : {
            "description" : "The message returned to the client by the `ListVoices` method.",
            "properties" : {
              "voices" : {
                "description" : "The list of voices.",
                "items" : {
                  "$ref" : "#/components/schemas/Voice"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "1b768785-a84d-4a56-aa21-abc6a662fc8d",
    "name" : "Synthesizes speech synchronously: receive results after all text input has been ...",
    "request" : {
      "urlPath" : "/v1beta1/text:synthesize",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"audioContent\" : \"Earum expedita itaque ipsam quia unde dolor. Sed quia soluta ut dolore sit velit. In laudantium veritatis est at facere. Itaque sit nostrum. Quisquam et fugit quasi.\",\n  \"timepoints\" : [ {\n    \"timeSeconds\" : 1.3319109394729334E308,\n    \"markName\" : \"Rocco Grimes\"\n  }, {\n    \"timeSeconds\" : 8.196723194158623E305,\n    \"markName\" : \"Dr. Paul O'Connell\"\n  } ],\n  \"audioConfig\" : {\n    \"sampleRateHertz\" : 616704829,\n    \"volumeGainDb\" : 8.587953477165775E307,\n    \"speakingRate\" : 9.631037234377904E307,\n    \"audioEncoding\" : \"AUDIO_ENCODING_UNSPECIFIED\",\n    \"pitch\" : 8.131635016978988E307,\n    \"effectsProfileId\" : [ \"hmfno80eqqy2x3xdnv\", \"n047sbp1en5hlfs5xl0pjg3ejtukb2gnxff5g8df50gt9xigso7lgokc8fq2ouq7qqs0o7qq4l9d1i4009ehbcnsiomh4qp45xal6pqdbzytdvpykfktyl5vicc6hkpwbomt82s9dmlnxz110bvpnuotvjyn5z6f7rwns442q6b8hqtm92dpl73qe5k\", \"18ttyw1530mdlkwbarj0ret0g8a0khrkhhxc5ddac19bytqod2db0j5fwe89o1ihcm61m8voknubmsripunj2lm556y6y6mxhjx4qpvb8mj3nb36l4lyin7tcwl9i80ulomp61m2zqmacqnr2xqu6locx29tkvix49xgs72q6z0ktb2erzwaokhmjj6e\", \"4dp9xswtxfczxee7b570\", \"9kh0ielwiyj56nikaagx3sra7lo1qf6ofxbobfo9enud9muidppvr4sb7ctfalyer3g8b3wsr21039ragjfjush8hgriet7xf7ohvkuczwwgyywok52qws11cxn9ia87wcjbg8d6zsrlwz7ghb6k5\", \"j3yrn4tcnpm91ws5hlmp6o08l42ec7rye10zq0l6aqvrlzptpu9f6bn62i7tyngxp65x4jcd1g33a66bmggaw2668oa56d97mjndxsdk\", \"bpxljhxowvutmksx14rexpy3rwc0r64ys9c92kucg187xeiclnv8uh4ogtojr\" ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1b768785-a84d-4a56-aa21-abc6a662fc8d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:06.124779Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "texttospeech.text.synthesize",
          "schema" : {
            "description" : "The message returned to the client by the `SynthesizeSpeech` method.",
            "properties" : {
              "audioConfig" : {
                "$ref" : "#/components/schemas/AudioConfig"
              },
              "audioContent" : {
                "description" : "The audio data bytes encoded as specified in the request, including the header for encodings that are wrapped in containers (e.g. MP3, OGG_OPUS). For LINEAR16 audio, we include the WAV header. Note: as with all bytes fields, protobuffers use a pure binary representation, whereas JSON representations use base64.",
                "format" : "byte",
                "type" : "string"
              },
              "timepoints" : {
                "description" : "A link between a position in the original request input and a corresponding time in the output audio. It's only supported via `` of SSML input.",
                "items" : {
                  "$ref" : "#/components/schemas/Timepoint"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  } ]
}