{
  "mappings" : [ {
    "id" : "728eafd2-036c-3c94-b846-f2bb6782a6c0",
    "name" : "Synthesizes long form text asynchronously.",
    "request" : {
      "urlPath" : "/v1beta1/v7e0ufntqpk7gtzecmdxyh1ampqhir7o7uaygcse37p1s2r1rc2oyvfs1imc3iahevz87r8jvov32n7ona1h8xzkxtkvni4gffx9mqgwfhrui3opzwucewn3adfzkwkbvtv6u7fp75tq3ggev3z4ikxz1qxe0ky45p6v0e0aed0i38:synthesizeLongAudio",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Elfriede Hettinger\",\n  \"error\" : {\n    \"code\" : 1718331656,\n    \"details\" : [ { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Dolore corporis nam perspiciatis. Porro blanditiis sunt quidem maiores similique est ut. Amet ullam voluptatem.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "728eafd2-036c-3c94-b846-f2bb6782a6c0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "texttospeech.projects.locations.synthesizeLongAudio",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "a9ad2e0c-b7a9-3489-a1f3-edf784dc1260",
    "name" : "Lists operations that match the specified filter in the request. If the server d...",
    "request" : {
      "urlPath" : "/v1beta1/Amada+Bode/operations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Harvey DuBuque Jr.\",\n    \"error\" : {\n      \"code\" : 1011539254,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Consectetur ut iusto consequatur. Consequatur quae animi et vero. Ea a repellendus. Molestiae officiis provident et cupiditate.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Burl Ondricka\",\n    \"error\" : {\n      \"code\" : 1676727398,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"In quia magnam laboriosam. Voluptate quia rem aut quod sit. Recusandae quia et temporibus. Ipsam provident a quia voluptas quisquam.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Monroe Koepp\",\n    \"error\" : {\n      \"code\" : 583321289,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Magni perferendis et. Voluptatibus officia ipsam temporibus iste. Qui error quisquam ut similique voluptatem.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Ms. Corazon Thompson\",\n    \"error\" : {\n      \"code\" : 1242952050,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Qui corporis aut corporis et autem suscipit eveniet. Dolor possimus molestiae aut officia. Nobis hic et rerum molestias ad asperiores unde.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Oren Haley\",\n    \"error\" : {\n      \"code\" : 169841257,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Atque consequuntur et. Illum facilis facilis sed occaecati et vel. Velit voluptas consequatur et non temporibus neque eum.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Vaughn Macejkovic\",\n    \"error\" : {\n      \"code\" : 561688067,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Omnis deleniti expedita sit dolores incidunt autem. Nulla est placeat et iure minus non eos. Quia qui velit optio quae.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Catalina Hodkiewicz\",\n    \"error\" : {\n      \"code\" : 986590093,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Atque dolorem dignissimos sunt pariatur. Deserunt ipsa reprehenderit. Omnis eligendi delectus.\"\n    },\n    \"done\" : false\n  } ],\n  \"nextPageToken\" : \"a1qqqkaha3shojpmrnyaf338hwau6klwhmyo23tr8kcungwyxuoe8wraes6ibgw9rxj080zfb4pa5pz2kacmkjgxkutiyfg4sbj1wdci7ossmm10d39qp758ydnsablwebbpfg7248jiazne8opeej7wi24ecx4hrq7abz8xxnbe908k89ihotpgtg4ly\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a9ad2e0c-b7a9-3489-a1f3-edf784dc1260",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "texttospeech.projects.locations.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "5fe2c921-6a0a-346d-8f29-4851a9385ee9",
    "name" : "Gets the latest state of a long-running operation. Clients can use this method t...",
    "request" : {
      "urlPath" : "/v1beta1/Lonnie+Flatley",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Jenniffer Rosenbaum II\",\n  \"error\" : {\n    \"code\" : 2005234609,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Sapiente eligendi qui nam. Nam culpa molestiae. Optio eum molestiae ipsa. Non molestiae enim labore in et. Laborum aut suscipit praesentium pariatur.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5fe2c921-6a0a-346d-8f29-4851a9385ee9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "texttospeech.projects.locations.operations.get",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "da1f14d1-2123-34e7-9ff2-28aa30841e52",
    "name" : "Returns a list of Voice supported for synthesis.",
    "request" : {
      "urlPath" : "/v1beta1/voices",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"voices\" : [ {\n    \"languageCodes\" : [ \"p6mb9jd0sy3sr2wm4doz5gpwtjl8ljv61mnz9biignosy8mn6o4my1jwzhhyuyxut93nwjy7844t67fcpfgskm24jdish8a5k6pjvkw4gj3wax85ozpowdx1x6c5v28yy69h1fe3c3y9bp\", \"5dimkqc4sd1mnt4gb71yev7ambl8p2e7f3z4lxxvfnsjxtuv8a9j71xkli27rt72n3fhxmdi8sbvcgn3bfbcr638tdhlgp97s7n\" ],\n    \"ssmlGender\" : \"NEUTRAL\",\n    \"name\" : \"Darwin Weber\",\n    \"naturalSampleRateHertz\" : 1467474257\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "da1f14d1-2123-34e7-9ff2-28aa30841e52",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "texttospeech.voices.list",
          "schema" : {
            "description" : "The message returned to the client by the `ListVoices` method.",
            "properties" : {
              "voices" : {
                "description" : "The list of voices.",
                "items" : {
                  "$ref" : "#/components/schemas/Voice"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "206b2f16-4585-388d-9671-b8945d125a0f",
    "name" : "Synthesizes speech synchronously: receive results after all text input has been ...",
    "request" : {
      "urlPath" : "/v1beta1/text:synthesize",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"audioContent\" : \"Et numquam quas et sint voluptatem sunt sint. Accusamus sed iusto aut non. Ea asperiores libero possimus voluptate aut ut cupiditate.\",\n  \"timepoints\" : [ {\n    \"timeSeconds\" : 4.929508458075472E306,\n    \"markName\" : \"Lino Buckridge\"\n  }, {\n    \"timeSeconds\" : 1.3040461409085204E308,\n    \"markName\" : \"Mrs. Major Dare\"\n  }, {\n    \"timeSeconds\" : 5.927739762851198E307,\n    \"markName\" : \"Mrs. Latoya Maggio\"\n  }, {\n    \"timeSeconds\" : 1.3101372312946813E308,\n    \"markName\" : \"Annalee Boyle\"\n  }, {\n    \"timeSeconds\" : 1.4000498605371022E308,\n    \"markName\" : \"Shelba McCullough\"\n  }, {\n    \"timeSeconds\" : 8.996740711912026E307,\n    \"markName\" : \"Mr. Christoper Hammes\"\n  }, {\n    \"timeSeconds\" : 1.6070296182543066E308,\n    \"markName\" : \"Mireya Gutmann\"\n  }, {\n    \"timeSeconds\" : 8.360997356465211E307,\n    \"markName\" : \"Joshua Welch\"\n  } ],\n  \"audioConfig\" : {\n    \"sampleRateHertz\" : 1953957752,\n    \"volumeGainDb\" : 5.537322715558205E306,\n    \"speakingRate\" : 1.299613182090754E308,\n    \"audioEncoding\" : \"MP3\",\n    \"pitch\" : 1.5953909500966253E308,\n    \"effectsProfileId\" : [ \"bxh5g9zdj53c5ckqd826h7wfy32tygrtv6r\", \"k83bfcbdutwymnq2yzjqjztfin75ekc78pljuktlx3wh1nxrtye3p1t2hyj9isd8g34nq88gk71ajl1n39inrhfqbxera8i4co\", \"5t8bh4gvn3vdgkbf54y6lw91l4x6s5gwgqo725fxpgftmhmi8iy13lqwsk9hjh9m9mlnm4cm2xx7ksaxkx1simzlzmtv0xqo0lft78ubpew35ilpu4uqgq7jbepqeposs614ndh8jaduwlr\" ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "206b2f16-4585-388d-9671-b8945d125a0f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "texttospeech.text.synthesize",
          "schema" : {
            "description" : "The message returned to the client by the `SynthesizeSpeech` method.",
            "properties" : {
              "audioConfig" : {
                "$ref" : "#/components/schemas/AudioConfig"
              },
              "audioContent" : {
                "description" : "The audio data bytes encoded as specified in the request, including the header for encodings that are wrapped in containers (e.g. MP3, OGG_OPUS). For LINEAR16 audio, we include the WAV header. Note: as with all bytes fields, protobuffers use a pure binary representation, whereas JSON representations use base64.",
                "format" : "byte",
                "type" : "string"
              },
              "timepoints" : {
                "description" : "A link between a position in the original request input and a corresponding time in the output audio. It's only supported via `` of SSML input.",
                "items" : {
                  "$ref" : "#/components/schemas/Timepoint"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  } ]
}