{
  "mappings" : [ {
    "id" : "bb241887-e0c2-4165-82a7-3de9ff441df4",
    "name" : "NAC/Birth/Death Certificate (application/json)",
    "request" : {
      "urlPath" : "/nbcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 504,
      "body" : "{\n  \"errorDescription\" : \"Publisher service did not respond in time\",\n  \"error\" : \"gateway_timeout\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bb241887-e0c2-4165-82a7-3de9ff441df4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:23.014415Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nbcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "gateway_timeout" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service did not respond in time" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "93879fc0-c752-4fc1-9e10-dfdc9243819f",
    "name" : "NAC/Birth/Death Certificate (application/json)",
    "request" : {
      "urlPath" : "/nbcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"errorDescription\" : \"Publisher service is temporarily unavailable\",\n  \"error\" : \"service_unavailable\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "93879fc0-c752-4fc1-9e10-dfdc9243819f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:23.014342Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nbcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "service_unavailable" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service is temporarily unavailable" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1c351163-2d54-4c14-ab8f-571b58da4e8d",
    "name" : "NAC/Birth/Death Certificate (application/json)",
    "request" : {
      "urlPath" : "/nbcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 502,
      "body" : "{\n  \"errorDescription\" : \"Publisher service returned an invalid response\",\n  \"error\" : \"bad_gatewy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1c351163-2d54-4c14-ab8f-571b58da4e8d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:23.01427Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nbcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "bad_gatewy" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service returned an invalid response" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "95518ba4-198a-4a80-9c10-819c849d9b24",
    "name" : "NAC/Birth/Death Certificate (application/json)",
    "request" : {
      "urlPath" : "/nbcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errorDescription\" : \"Internal server error\",\n  \"error\" : \"internal_server_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "95518ba4-198a-4a80-9c10-819c849d9b24",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:23.014196Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nbcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "internal_server_error" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Internal server error" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2b1f4b53-0e6f-4a49-81cc-e45dab71163e",
    "name" : "NAC/Birth/Death Certificate (application/json)",
    "request" : {
      "urlPath" : "/nbcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorDescription\" : \"Your API url or path is incorrect\",\n  \"error\" : \"url_not_found\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2b1f4b53-0e6f-4a49-81cc-e45dab71163e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:23.014121Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nbcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "record_not_found", "url_not_found" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "No record found", "Your API url or path is incorrect" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "864b20b9-6acd-4610-8e49-573077fe29b9",
    "name" : "NAC/Birth/Death Certificate (application/json)",
    "request" : {
      "urlPath" : "/nbcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorDescription\" : \"You are not authorized to use this API\",\n  \"error\" : \"invalid_authentication\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "864b20b9-6acd-4610-8e49-573077fe29b9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:23.014043Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nbcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "invalid_authentication", "invalid_authorization" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Authentication failed", "You are not authorized to use this API" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "80413cbb-c90f-419a-98a7-d038c6dbc35b",
    "name" : "NAC/Birth/Death Certificate (application/json)",
    "request" : {
      "urlPath" : "/nbcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorDescription\" : \"The consentId parameter must be in UUID format\",\n  \"error\" : \"invalid_format\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "80413cbb-c90f-419a-98a7-d038c6dbc35b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:23.01394Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nbcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "missing_parameter", "invalid_parameter", "invalid_format", "invalid_txnid", "invalid_consentid" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Please provide all mandatory parameters", "Bad request", "The format parameter is invalid", "The txnId parameter must be in UUID format", "The consentId parameter must be in UUID format" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6d31f383-8812-4ef2-8135-0cda92f7d605",
    "name" : "NAC/Birth/Death Certificate (application/pdf)",
    "request" : {
      "urlPath" : "/nbcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "Response body contains contents of the certificate in PDF format.",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "6d31f383-8812-4ef2-8135-0cda92f7d605",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:23.013333Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nbcer"
        }
      }
    }
  } ]
}