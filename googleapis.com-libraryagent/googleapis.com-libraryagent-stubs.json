{
  "mappings" : [ {
    "id" : "75ed5228-3b5d-4e80-9a2e-99221f503491",
    "name" : "Lists books in a shelf. The order is unspecified but deterministic. Newly create...",
    "request" : {
      "urlPath" : "/v1/wrxc7avrdr9vxiac4y6j62xzn3lh70603zfwsct25t31s09wigpwg7ptnxxylhwii0y60qvh68a20wr9ymgl0vkqdcgg4wygrkhzgh3obj3elcaguf9ey15lmsnun7g1kksh5v8kc42k36kgc8oud5ej9s2i5tm1gewlcetwqkti9lzhcdy3uwefa88zx/books",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"books\" : [ {\n    \"read\" : true,\n    \"author\" : \"wiluv1mup3ahwfjyneljozllllpeqjgdudsx0pl0b98ujpp6rp3a4kvum48ca623d7q640ultja5qemthi6dku986t7jsbzzqjcsaauokotwj8nn82cod9slp8cam699cxp1ms8h799l4m7117bzxivje0na2r\",\n    \"name\" : \"Hue Connelly DVM\",\n    \"title\" : \"Mollitia officiis nihil.\"\n  }, {\n    \"read\" : true,\n    \"author\" : \"nwk9d1ed4rid4gxd7fyilkz4txhinhl7uicdgjjdcl4pwuyef0r7f0lvgbm7s39b83izg4ugkkpt6k5nce04qr9r93gqprkq573ww4ldn6hk676otq91luh8r5oipqc2n\",\n    \"name\" : \"Deshawn Boyle\",\n    \"title\" : \"Quo corrupti est aut qui odio iste.\"\n  }, {\n    \"read\" : true,\n    \"author\" : \"8fzdisrokglkse5w\",\n    \"name\" : \"Rex Botsford\",\n    \"title\" : \"Nihil consequatur qui repellat est nostrum similique.\"\n  }, {\n    \"read\" : true,\n    \"author\" : \"p0odlim30f80pubpjhj2fdzjxk6cs46fna0lnc2va4ppifsewfqaduo4nzm216o7ckz\",\n    \"name\" : \"Wiley Osinski\",\n    \"title\" : \"Provident ratione cupiditate.\"\n  }, {\n    \"read\" : false,\n    \"author\" : \"z6cx7xlmxuh0ipiqgs0pcka6gbas7t39lqfojh36uj7eluypuin62v4f5t83s4k9bav974ix02j9xoh596xye6lpd1zg08a6w7c18tjqrthm2knpp025gue8kdllwah1h3yjdcdv3yhhptbkw0fq9vnvp0cie2ktuotgqflyv4nw51inoeqdgo732q6yt8rgbtlyb\",\n    \"name\" : \"Ambrose Kassulke\",\n    \"title\" : \"Perspiciatis ea eveniet est voluptatem.\"\n  }, {\n    \"read\" : true,\n    \"author\" : \"rdsm3zvhyrp7y5v073kqjr\",\n    \"name\" : \"Johnnie Schuster\",\n    \"title\" : \"Porro et vel deleniti alias nemo nulla provident.\"\n  }, {\n    \"read\" : true,\n    \"author\" : \"07k0ur88ssq23juf1fpfb0lpczlnktt4767dqru483\",\n    \"name\" : \"Jesse Mertz\",\n    \"title\" : \"Quasi recusandae corrupti modi voluptatem quisquam.\"\n  } ],\n  \"nextPageToken\" : \"4qj6fcmguynu1roc2b15iwzye2bq517wpx6uf5ntl10ez5pji3cr04ki5w9ivhvwuff7magchz83m42108kn93tni4syw5lilfu1d4zz957ixxq4atgn3x7gld1l3k16rq8n3u95gjue99j7huo1myqr64v4wcv0hfo61aeig\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "75ed5228-3b5d-4e80-9a2e-99221f503491",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:59.48787Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "libraryagent.shelves.books.list",
          "schema" : {
            "description" : "Response message for LibraryAgent.ListBooks.",
            "properties" : {
              "books" : {
                "description" : "The list of books.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleExampleLibraryagentV1Book"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve next page of results. Pass this value in the ListBooksRequest.page_token field in the subsequent call to `ListBooks` method to retrieve the next page of results.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9ded7ae5-9209-4efb-9036-4e7a002eef6a",
    "name" : "Return a book to the library. Returns the book if it is returned to the library ...",
    "request" : {
      "urlPath" : "/v1/Pinkie+Grimes:return",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"read\" : true,\n  \"author\" : \"6x6ek0w4dco7eo0i8o3fprk\",\n  \"name\" : \"Jacque Larkin DVM\",\n  \"title\" : \"Alias quae cum ea sapiente.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9ded7ae5-9209-4efb-9036-4e7a002eef6a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:59.487174Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "libraryagent.shelves.books.return",
          "schema" : {
            "description" : "A single book in the library.",
            "properties" : {
              "author" : {
                "description" : "The name of the book author.",
                "type" : "string"
              },
              "name" : {
                "description" : "The resource name of the book. Book names have the form `shelves/{shelf_id}/books/{book_id}`. The name is ignored when creating a book.",
                "type" : "string"
              },
              "read" : {
                "description" : "Value indicating whether the book has been read.",
                "type" : "boolean"
              },
              "title" : {
                "description" : "The title of the book.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2c518f42-95ac-41bd-bc7a-23d68e1a09f2",
    "name" : "Borrow a book from the library. Returns the book if it is borrowed successfully....",
    "request" : {
      "urlPath" : "/v1/Sydney+Carroll:borrow",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"read\" : false,\n  \"author\" : \"bjnw3cgq35g5ir4c1pefrq71fdaka6uy0zuvo7y5ocvtwv076ekmj60dgfcm3uyiqm7anuv1fumy4xogqodh164d5zfu\",\n  \"name\" : \"Mrs. Gabriel Mann\",\n  \"title\" : \"Et amet sint officia et qui qui reiciendis.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2c518f42-95ac-41bd-bc7a-23d68e1a09f2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:59.486995Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "libraryagent.shelves.books.borrow",
          "schema" : {
            "description" : "A single book in the library.",
            "properties" : {
              "author" : {
                "description" : "The name of the book author.",
                "type" : "string"
              },
              "name" : {
                "description" : "The resource name of the book. Book names have the form `shelves/{shelf_id}/books/{book_id}`. The name is ignored when creating a book.",
                "type" : "string"
              },
              "read" : {
                "description" : "Value indicating whether the book has been read.",
                "type" : "boolean"
              },
              "title" : {
                "description" : "The title of the book.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "19228eff-24c1-4bea-bbab-5caee27fab24",
    "name" : "Gets a book. Returns NOT_FOUND if the book does not exist.",
    "request" : {
      "urlPath" : "/v1/Gertrude+Gleason",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"read\" : false,\n  \"author\" : \"lqteqhx7tqt9nrgvaa27tp6ywsqcisf1tiq571ktv6eigigwcmjbyyripqgmw7xmqvmh3dfj1bi15261bwnz1hejoocsh03ca4uphwaw2z3rittqp1ciw92pwijxjrgpwlxzfaxh3g5afph0o86ol2ltavtuz9cw5kkij7ppiinybtlyf\",\n  \"name\" : \"Dannie Koss II\",\n  \"title\" : \"Adipisci temporibus delectus voluptas minima veniam.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "19228eff-24c1-4bea-bbab-5caee27fab24",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:59.486817Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "libraryagent.shelves.books.get",
          "schema" : {
            "description" : "A single book in the library.",
            "properties" : {
              "author" : {
                "description" : "The name of the book author.",
                "type" : "string"
              },
              "name" : {
                "description" : "The resource name of the book. Book names have the form `shelves/{shelf_id}/books/{book_id}`. The name is ignored when creating a book.",
                "type" : "string"
              },
              "read" : {
                "description" : "Value indicating whether the book has been read.",
                "type" : "boolean"
              },
              "title" : {
                "description" : "The title of the book.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "188dbdf4-6558-4af2-9a7e-fe1d50ae9511",
    "name" : "Lists shelves. The order is unspecified but deterministic. Newly created shelves...",
    "request" : {
      "urlPath" : "/v1/shelves",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"3ovhx3yn9oky230qkr2n2y24s0sliaclwdt8qt7dr4hwxb2njppe72c1lk26mmowbd5gcxzigsyk7i57mp8zk3byuaupro6kaywnwvatq9y07s03seve94808ff0gnepo9i674kzkn9qql2n56rf69lrmzalunojqlhh7iuvfelcwd9liq\",\n  \"shelves\" : [ {\n    \"name\" : \"Louis Gutkowski IV\",\n    \"theme\" : \"qvx6fvgr0s57iwhqgk7yo4c3lcoj8lz3e61xlqrqz3eo8cv9qcy08r1enztgw87s9wgu4zjmkisbf7iuh2rhm3o3vssavc2lliasztqe5q69si60b54qbqlrvn2\"\n  }, {\n    \"name\" : \"Tyrone Ankunding\",\n    \"theme\" : \"lx141uuxt4hvlkwih4lprlupkhw0ake93iyuq9u\"\n  }, {\n    \"name\" : \"Simon Parisian\",\n    \"theme\" : \"e7lu14lpnpll52awgn6irjvmouu86t2s01nu5avygjn8colakwr1od0g7xrz624efprcrkw3y8hdt4zkacfr8smpujxv9dnuum57u2z\"\n  }, {\n    \"name\" : \"Ms. Elliott Goldner\",\n    \"theme\" : \"7ijyby4wrko3zyp8cd62qu90vw3wr2xcwhmk6t4471qwkhjm38h1t78oy1hplpc4ayl4qhkypyxpvxru9c5f9v9jpvt38jho21325ykgi2vhvzuz40yi0todoujms2g0zq0f2znvppx9xmnuec4eoasylevz2v7wn6weil978jk73wg\"\n  }, {\n    \"name\" : \"Britt Ebert\",\n    \"theme\" : \"emwbmjsfqxsgn9w30namou7aw54boun6iaiyj\"\n  }, {\n    \"name\" : \"Ms. Cedrick Cremin\",\n    \"theme\" : \"42lpl2zd41yovd\"\n  }, {\n    \"name\" : \"Paul Wehner\",\n    \"theme\" : \"mjbujv55e3n177lzcu54\"\n  }, {\n    \"name\" : \"Gregg McGlynn\",\n    \"theme\" : \"a6kvxmegzrpp2ihjkewzmc2gzd6synawy2ak8p48c20lhnvz964r4gaue67318bm6bu1bbrqmi8zs1jf8pgqp8i1jqw0jnsdlo22rfwrkvjdue2v9lqcwy9xzx5lwftbxygwuya3vqb2g2fb84kv5f\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "188dbdf4-6558-4af2-9a7e-fe1d50ae9511",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:59.486576Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "libraryagent.shelves.list",
          "schema" : {
            "description" : "Response message for LibraryAgent.ListShelves.",
            "properties" : {
              "nextPageToken" : {
                "description" : "A token to retrieve next page of results. Pass this value in the ListShelvesRequest.page_token field in the subsequent call to `ListShelves` method to retrieve the next page of results.",
                "type" : "string"
              },
              "shelves" : {
                "description" : "The list of shelves.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleExampleLibraryagentV1Shelf"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  } ]
}