{
  "mappings" : [ {
    "id" : "fd709c69-88d0-3b07-9b32-b311ac0b9bbc",
    "name" : "Returns permissions that the caller has on the specified table resource.",
    "request" : {
      "urlPath" : "/v2/qc0rhqud32lqonm0izm4lmpmk5z7c6o2klw5ykwy19gzu0exhwk6e3iup5flgni3gkcwglpzqn9xip2gwycmm41loz6gllajjqmqm0a4yx8b0unzgwzvwyct8xhi514foprnevh12l:testIamPermissions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"permissions\" : [ \"czv2wrgydop2\", \"adh7jz2jsapm6x01db2yw328zi1lxbdro3mltkghuc7zeejvfd7o7gs5dbwmktiwabak30g29t978xaf3mx5tgg8n4ha3l8rmvbpvnb47k1193w3i7vmvdsktuafevceu9agknxxtdlmc3i14bxfsc8nmctxqkhvfjszim1i6grhdvojpd3f1cxwbtseacoj\", \"1sls9w0nb00r7tc7u3kgxwy0h2t2prsrq44ruibakar9h7mskdt3thl2j84an2uihdi3ujy45lm58winya91aii23mhb3zbobbf7oiyipeu766ahs12pb597gb9nwqz8nlsx2dx3wobzngfs7bow997huw8nno6n5w1jqrpnmcso1albp4cz8\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fd709c69-88d0-3b07-9b32-b311ac0b9bbc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "bigtableadmin.projects.instances.tables.testIamPermissions",
          "schema" : {
            "description" : "Response message for `TestIamPermissions` method.",
            "properties" : {
              "permissions" : {
                "description" : "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "6ae17f1f-53dd-3203-aa60-6a0e23cb29b4",
    "name" : "Sets the access control policy on a Table resource. Replaces any existing policy...",
    "request" : {
      "urlPath" : "/v2/4vljds94csi8hu8d3wpkja68bm2nvjxvy3r4pf:setIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"0yo11lo7yp8br26f22p1bjxcf7jb4kp2t4itrhfxkffivaozl7vqj4t7y0tsgarnosy4mc2ntnbydubs9c\",\n      \"description\" : \"Aspernatur at culpa similique temporibus dignissimos voluptas vel. Velit quasi consequatur omnis. Vitae magnam reiciendis quas.\",\n      \"location\" : \"mxqidvxk02378ijryf2j8ayeef1jytdo2x53df7a5hh14q66koux9znyyr3c3wko5lafhujpkn6rkyms7oe4cxl\",\n      \"title\" : \"Delectus et aut ullam sit amet.\"\n    },\n    \"role\" : \"jqgvcbfe2vhai6pamzsbvaa24x02v3vq61unw90v1e17wi9718svkh5rxicgx0m6d9d5ynp8uprf77pomz7pu3lwat9bh1b9dzlnoh1sk98mqo16er9j5ae87vmkrlbq65xz\",\n    \"members\" : [ \"ktah1rtxcqen1wo3wqj364hjtfg21ql8q624s5wx9agqgw6ux1hme1yuas0g5k25787kqjwu2pnzst7jf3xtj5edh1wahizm3okj0lpa8jw7xomdaa00jfh9yw4pfmk7ey2o5s6sqfrjafrdr32g0j7c2f2ac26al106zy9ho63pkkt6xt2yzh7uoil\", \"r5hq11ns4l5na7en1v25rv6qexaap4sihxdnep4d643owlrz3dorqex2ghe5xg7wzy66rcuto3iw74h8m7ksynbx0itervydwezn8wprbrzvebye2p72hywa6ox884961j9y9wsou328u8du\", \"sleehww2i4djyxc61b4dkpz6ubkk5ydc427v1jphjx0nqefazmpjv2ocgi5xv9ykssufxr7fjryr71mn4krjpu882cghl1ewj2z8\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"px0peo988wy03mhjdtw7hqt2ys2qtn5ucokh\",\n      \"description\" : \"Fugiat voluptatem voluptas cum debitis veritatis. Autem magnam eum qui dolor delectus vitae. Fugit debitis eius. Iste est non laudantium beatae. Possimus sit quaerat reprehenderit.\",\n      \"location\" : \"lccivmayoute62yv6ea4kwlcrgxfuu2srtt2yk5jfwd3h9hd6ag8tsz9qfgkur63ztl2eiuyobeh3l0qno8edahmrojttzc69um4v9ay0bjpl625ro2kbyw28bxm8mf2saq2s4pkg46gpdb3v92wj0oaa2qfnh0ni6zexjrfy22kjo1b78do6\",\n      \"title\" : \"Dignissimos dolorem ut a iste impedit culpa.\"\n    },\n    \"role\" : \"lbd69p9ow62hquz9r9sdwvj2kkkinvhy4cjn3t2uuq7mwlg011gf7ov8wwadxizp5l0vnb08lzc8eihpr4yrhrib6buzfmrcqz8r94har9dq69gabx\",\n    \"members\" : [ \"h22zuxa5ctopxv5vac53zx2munvs0ssb1iahnlk7a51m4esp0fq11nu1xv0hr195byyoc640c1vdc2btut5auzvs9twb1m786t2wp36ekq2qh4qk13vm1h0i7qs87pvsks6pv889bkblgao9zo36me\", \"ilya2p94c8o2o4qq39kc7uoq711gnqz1uuyacx4ibpr6eidcb4mfa4xanwzrz49q4h46eye89y90kftqtoxyrdmvhw6x9zklhf1srk3x8rfbj55zvpkry1gpetz61\", \"5up5pbrxmusutuq7291nm41jb0l0y94t9mnalk5pnw3iwhdybuz8zm559ptyuz6oode0r7l18mlbe6eejsbc7zh8olwkrhgevv9fjndly00f3p2jrbj3v305nu\", \"75uw8m5fg5vi7yfqss2p88jz1hlbuo6w4snvxb6c9ncgv7r8kqf97it5vngjyfugqlgo4yqtqsqqlozor01uuo86jdzpvjw849y2bpahu5qp9s3k3275bfpcw1lif5cmzrk3wykydtgob1wifxv9nnndfjsp35ekuvvbdla30h34ah1owre77w2bfh1zrmqgy\", \"spclqw059llpiznc4n5lcm0599dmip62yez20zg5bzzpyv4kaocssm7pi46dt7mrhsvdalkbgzwv1fqj35qfpnxlnfjg2igcx58cjp0ymj30ejl8fmg9rsk18opou3hyavr6sokfbmo3vq5gy7lu0dukx9fn1lh19s3wdt0im7ctccyno\", \"ehy1cvmwnu0wd6l28q5jzupxhww2p3idkbhjcwyshn1s63k1zauprz7mlgcqcgby42x3nmsjx62i4i7h1t9tcratyzscaetehbganqw64kk9rk9tm8l0n4p4g4mo7pszs53o703rh832vlm4zmbp8s4ktcq5ud4ywsx0u8zwou6cg\", \"ya6c2vw0gewi641220vgi9yavjepyeggn09le87a36khf8cl5ovpzor31jvaczxodjfvdfiutu8pzgnz3an50k13r5fx36b5o5nh1kkd4rom9vag4to2t3rtyisc2morwqyug7sefdr3mt91kq2xqjjqcqy6m7yn14k0sdo9nv26nqk981saafg\" ]\n  } ],\n  \"etag\" : \"iiiid\",\n  \"version\" : 579569117,\n  \"auditConfigs\" : [ {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"s3k29ppkzhpytaugckatd1uykdzjy1uq8ia5jh52c5cp2hlv8i865i2qmasid88kp4n4joorkwqldon4vrtgpzmpkq08y38273ras\", \"zoobw266gv6ku0qemrjr3ljkppdvxvf5yjvdc1bm7fwcvyv3hdk52yb143sjxysp9q2xw28dk868gnxsele0wkicjbq3924x8s4fwy11asc24ugjsede42ed9m5o9fucfl5itnago27359zbxohr7nd89fkqo83q2ihj3mzskbhnbbvgjca5px5qlyo\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"op4fq4koqzz0e8ti1qk9ejkp63be09edx85x0qd3exfnwueg1bxp0gbejr8ytm9ziah15l7ftjjxxecblx03918ytokj3ifxut084sgor0w2l4mspvk8vsy5je6qrun7\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"dlzh5ns3okk3bbwv0h0i840q0nh95f0jjewdr0wk86m3on3nc\", \"jldojqqednvntyfstbqsz9wdzz0o719zi3008c9xvbpfdbddu6cd9hvgcvp\", \"dzg8mj16y3vcwtgla8q7suepseewsiktrwetnbl9hhm94k8t3a7gkdrdq60vo6mw5jqususv80dr4zkkenke7e9hbdkkahnwmre6x8764hbx27p6yy3d84p8i5ywgalsjz0tb7sisk2317ai\", \"kyynei7cmm50yjwfig6\", \"hv6gl10pcvpc1r73avjxmtqln9s7tn9tzpqaeif\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"idhqyjobbzl3j27zr5ph4hcvol60czj00inofss0t36t2kgz831jubdr9z7z300h2h6cnxjhtrc6mfio1yg70cfldf4scj4rt1ejmhh57g00agh\", \"ny4xzim85dfvzkq86idzwegfexrr4sec3zfoip8k8jqztwm63n68q9fn10y68hy6n9vwrx5xkbb1rmx\", \"ynho223plu6vjh6iqgvo8ukpxu794c20gvcs9v2a1y4xn4k7qfm3zmny9aom141enm8v0o4yn38m6km95g8nr86llh8ptmr3rx\", \"fsqyjkrulwd5zo94g3ix0alrkzeelqknx8dmg9k3524nml6me8e9a4b2jqx67xhs7fgcwn0mzwcg0br4665r2hi3dbsz7ngwqakp0kwpayvmvapepqztesrhurfilstq1w15n\", \"qgwufar711g7pmk8i5qna07kcyenb92nkx4g1nswg31qie5ltr0oi4kj9u15jfvv655q4ke1pnz3ufnhnhbjpjvim7b2w9rlkmp4gxs4j6umwu7dbr11rsxa7lb20lz071d2d7uiubxxwiskdkgxko\", \"drh4foc692oyz795b8m789ia0d9pyj2zsjqgi0jmdujq7bvzmfoks01hzpzae7ykhbqaxjjawb9awgfca7blzhfxfcv\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"nr2w48rg54gbm1hx2tb7yajdj71pddv4sopdgmvqeydoqvfjw46iqc4l7z0krz914dd3981l9l0ev6l36c78c09swdffgsgqhy8xmri6skobumbyrmj\", \"fyoiue72ynaqxtt3d121p2rh3vhykzwhe0jk91mul3blcuriz5aesnljci8\", \"ndtcu04cy6c2b3ty4352aib3j5xlpkh4ac23bpbpd4hzcd85r97pycr6nk3uwodwixndjktmm67uj4mfuuf4aowsbhclpc3oh87utju9rvoaf2duh40zjr3tdva2wk4f1lmdpjz56fhsx5d70ypmw08svynoz3c77kvqz7k14a66j5lyq\", \"45jigjow5kaluw7ivdlc6ky0wj1nob0pyl5xt8cxnarwcip4nmdr45uxlpwt0ni5xcr4e5to7bggol4wqnikmn4zxvtdtfj7ho1846xtg3zqzmc9vnp7mhg552qxumgrdvfvb46mvymtvkm1vk60hkjgkq5ge8jtib074\", \"kh0wefid9pap69ml4rdlgkvqg1ko42mx1mwrxzagnci4bkgpvnngbzt7rb1n3g0769h84micbzhiiqjj5qszg7kri3fshj8ipn0634tq24eqw4vo2mtlm3dnhb88y8kqemsx6o99m85wchffeih69k8nkkvltjf6nj1ds7175w\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"0m5xswqh60aelv6hj6l1hbkjxu9wb4ig\", \"cq215gzdx3toir4cdwc11yby20mt7k0bl3039lmjtzjggmemz52zn95jy5xm2gjp1hf3jy0fi6t7dtbxbbyymgjrg7wsaa0ppitsfp8tb0o1s0028hfg0pe05mduvnyp9i7ch0flcaddv3cvz3jarmlpkk1mttprxwpxu5os3gml6e\", \"7kmqnw6e2kc47rdehd153m36bm56korbfy7f3mnw1b0e7kvobm2fph5db8nuhq9atetb0cne7pxs2kma6uiqep47cz5tam996k8664rocrob69gyq7dvi2hi7wi57w7rphnxty92x3tjg5vvax691o2svaftwzr7ak3o48bohk7vowhpqmi5qe1sg9kr8w5r210yp04\", \"oct5zyj7q\", \"gwpn1s1mm67ld1zm79g8ng9n7bolwch3hexaxbfl6qegmdxfth9xad16z6m4t6p7d8h1g7dtht3v4l4i020qrrbxmzaxcwwboxlfbmg4chs72bp8gsa1s7gcfy24urfoxl0wk2nt3lvj07b1s7hqn4335w4memummggxlfnbupnknev5er7vv01mxbai4601\", \"rubapujaeqvpsy9m54iycjv15flxbanwhto18gu050nfmb2u02qztvb3z3uxya9tdyz9k7q7vkmjjvp0ojmf9b8h34hxhfvtt5mqy874dze\", \"yq6gjfkefdobvl50wspwjpshl6h4zolr2rv5q9v759g3n3ghl32hbb7uwk2k6bfq68r6lcny81jlane2tg3tljefd1kdb1m6iiue68lal\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"vkosuvwl0cf4modr22q1zyawb2scv8a0sg5cx0x28igwj2ri5lm8mnmqn4kfeqqu6etro2qjiob3hgty2cx419o2kko4j2khko3tp7evi7c264\", \"zapg2nl4sfg9o9p7ca748v96xjws9585oghyh6fi9bxwejbvtogdknq7y05hcprft12rsjx6qn4rj3zjieyj9mif84609u02hlbcd6v8rffepywph12r\", \"83bosswzky6v3vdqhxhnauayfxpc4aj6scssodgpne2uwiap2yhc4bs28s6azqayg19fithosgkpash7ix79qct5m1pe7rle53q02hr1bnjzsu9ype8b8i1c0m8vzr123lf4jbmyc3j\", \"v90davol8tf0b3fil8l34bye1d2swcprocl71ly8iu9m21oc2f6nwkroojcncg9wnssmfp6bjg9ycrsxsws7e4z9oljmm9y9djho4zonwqje3grzv3d48p4xrefnubpa9n0d889fpmxclhmb64ed7jasvxvxwv\", \"42vhga9z3eosgsk1idiroglz6oldgydmvuglh0gng8ulpv93wp985nk5x3tcp01xhw30p3bq3twv8d054h9qlgxfwqmx02czr3x6jx4xechkr24rmtd1ac14tb08orrfyccb0l94z69q9a\", \"em1i21gwb6pubzhir8pfpzbr1xdr40mz5ojc37p8pxldo5lnks442wp6y0ewm3c95ekq6k8\" ]\n    } ],\n    \"service\" : \"eyv4obypnxttlq7xgkoi95ds5knb9mzz45qave9m0xsdwylzgnc2b8dp3p29tioumdhppesnfv8hac64a5jxavvt0tden7b9x20s9g5mrb2\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"0t2rveb8v14drabwo2ixxmb4jeoetrc2qzmzqbwsobpfjyzz88rsjrf5ymyueuls1mi3\", \"vjju9qbybghckw1po7ilyhfa0wjs8ft6f0idsaz2uw4egf44rwwlj2lkqnx1xt5ktdy5y4ouo78xbdrepna5k3tn1aknzxghhrddjq0t6bpiycrpghvw1azvy9f447ibo27brnlf7dq552k9np81cavdwjzdiogds1ildz5tjl\", \"urzeo2nn5tsj\", \"yb19c\", \"priws7o7rctm7504goh701pc2pegy9ra7gh0zc8vmxpe2vgvy11qnc3443qw36cpq2czi7e0wl2zmsgv9fg3s0bjsqi3gh\", \"w7opesstr8hp3ob75ju70v0nl24ksuaqkrpfr3jiegwob6sgpk7fxtszb0l5rd7bevavgq9a0mcg122l1wlbwmw6mq560zuk1rn7u95y24x3kbn7p5ahdd6ma6x7hsypyyg9gxst2rbfsq7ldwwjh678jt70it4vqdhoilako7nqy10t481obya6129125o2zkz\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"psvicbt87ufwvgozwyp72u0j8zpw5meyp8vgcicjktriuktnbd57kzvbr5knofbk93ga5p1qxrh4a7btnvr7s4smn96luyj62jtzfi6g619rwf9r0nky8qum9qwul3k6u2zciae7my6y0e3npicufttsscxdwl3dd3x0u0dy1n46y55r262k101ggf2meyhc\", \"pvi2\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"dmt0lmphl64zpkhcv9dnaaooigg6pqvc43ozn9v\", \"qttg9908wdhgutvxulfqq9gj7vyldo77p5f7phg78wk33dbv45ci5frfhr1pwvty4qhp97sclb9h4n5t8kqwd6mkekyjsi08rlwy6kqifcyopp0snc4y2h76yeok13l5ai93e3ra1\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"7jnv0agyrdfyq2z89lobkhg26n69fqskmypiqob983rkiqcez9etqx389hslzrysgsxklgdbjafzspk45bxxnygzt5j8gh2xqvvjmzm84dfilj4pxqsbpbqml5o560fzyhkpknpnwhmjd4c19w4jqwhxaqvy1sja7uszdacgqy5cf8818n4h3259yz7\", \"5v27lp0tivvlqdy9o4g6viy1gv7x74fol7gn65dxucssuy8wwzcafrodmvlrgq4anp8zqhktvx5gy6ps3m2k0y9bwpqx0bdp5ro\", \"cqb0eywvorpp3k56wtmra07oszuibo6mk6y470h5l97bsq9yd3w8xga294yvd5rf4sl0qkkpaetv7frln1jc0wd8fyzb6z7whn2peu7ynhv18ubx1qv3i9rh3zfg4iw167a3fudgnu1w8hq9xzs935sahq\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"9bdwaxf2rgxw6nvu56cvbcb8w60b3c1bn5q1pdy7a4hl57ksxnha8agtb41uifryo023enb4d7qnym8dxuqph8d9v4hkmjq1sheq07db04p31obvlesyxb9090my6g5gv48uzkcvazdg6drd2dfxs14elom\", \"3kk3aeazd3qof0spi7v3ad4djw70ecupi4plg7kohdl7mwspvr72l\", \"mbh3vssewcydd362paprw76qdfo1cmh48bgux8v2s5\" ]\n    } ],\n    \"service\" : \"af24y5ma8cyuv8md9xf1qtc1fst\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"jdmfmn2zvp7zsus9ejdlf0l2zy03l6f9yvwmkc5ywt06qch8nrfdx2tq77d97b1fhnnszb7nr\", \"p2ldfmkfo14p4nxa8i5d4qwfsy040vg6ufzr9u0nk195kt5mqwqstnvykf7lpilarq1baqbohlis3yfyiqt2myvkjyhnbjbrbcqhkstl6sdmhsimo1aorlrbczqpauq\", \"60ifp1d6lty3nja7bvwv52spu5a8ctxcf8v0wht6givlyjj2akolbrz8wg9y86vasrvfh10wbruhobvk2leap2yj94b1pp250j7wxfts6nts1azygflczpy2gtc5juzyszrvr0sfqrhe66y33lnp\" ]\n    } ],\n    \"service\" : \"pdef3uqxyg9r9vr7qn9on5mkc8be2n3lewl40s2yriaqf3zjm4exn2vf5ule9yn0o0hjc2y5lgajoloywh7mtg\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"msv1axt7gz57anuo1o3h9ow21yuuoe5i7s14jxqzby2bbr8twi6i4x0due8ar53coo2z0cqpac2cofaaoaez8gxzh7g0wjjfcdmhlv6k2sygj0hketq2b8g4zb5\", \"rt41550ulryp45qbuw10w915pbuzyrobpecfr5luzj4o3815ddt9340ootgfv0d7ab9rg0c2cgwfayq9xjp1rn4ugjsx99gbacs1892ntj7dxs36ekcicn0vancsekkz8tx1nchpxyl91lz12ubiy3daiq08xkta5a0chicjtimqklmtgjqjh0yp34ql\", \"y4dfdp5l7mdinahgbjyw7ef6ph7p2tvczyrtuh1ldt2lu524i511rkrzxngwwl70sq2d3x9dwa9ylic9uwt1hkpfzhpphjcgwsqfvi3p27xztg1jniwx1e7p7duaxthj0sinrb1u9mv2h6j72galief2pcm4nialu9asnkljk\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"ldqd4alj2zg8m086uw7kf57hwmq\", \"zuhc68wq1g7kepsexfw4wls5aycxw96jk7uvqr23csx5h31\", \"eoghffodeve6ga1w374knq86nk94m2m20c7at30bc05qspt9wfoj169unconpspcdf5sgn7p2gskb00tnrymk66tttxa1dx069clut80q4liufu9jj6hy0rha0evbrvkv927i6\", \"k4swmjk2ndaztzjg6958niyo9p8s53wr02x7at29xt5cyx7435h30\", \"rkugj0th269n9xqdlyad7aucmg8xoz82nf5irgbwajsbn5okgnu5m48zzz6y8x0t9f7d25ycg6m6ijr4ezyuv5d40ett3n07l0qnebmzxyzbej4i4dhyrhonuhl4pam1a0bgeiuf57jcbx2xha9r4o6ptb6ly\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"f31om127z69wqfv08trrfzjaryui9re\" ]\n    } ],\n    \"service\" : \"j9x0unmedxp5wuxpkyi74m0lbb9oam98evj1ofdh1lpaqzeitb2ir8pt1cwqxl1h1zenkmmzaznmnxuzs7qw9d776cw8tr74ako6hwy6xnp4z8jim6yaer6v8hgndfqrjasr87ww6pmkcf6mc4yrfq1hxqq\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"3dxwcrr3ryoitaekvat65g8npfko6q09ryg4bolom5fb6jzs5whngwqbdg5fp6facf9gbfwlshlw12yyze4jxa2m64s\", \"0iarmyuzz3ny0a53mzbtmpudu7osclr8a21x42zc50uod7qh0ru61z2j5t4wnza1251ulgj7vmva63etrcx8we6nn7tx7mb54hom8kt25osz3i5u2j4ahxfai4ayiq68lok7z\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"53guds8sir3oj7lx4mzik2rjfjsg91qou5atmmliurnei4bvmy740cp7jst8ezamll0jh5dhw1307ymz4nbqjwwx1ihwx6gdajtwz4d81wbd01p9pwhdofljzprfocl7xcl2ygcppxfdczd5u1s9450v5xe2ylldh7\", \"kfcyyeude1kckz0ubmv1hyeduxx1ws0dpkm50a5qe45f5mp4f6n2dwliopk95cugcfhursubcbgkyrsuama756k0jk7kuncih9048nbcxi4wujm51jo39v5l352g5oqrbmlr8rukkt6\", \"mp12ujw58ndv6myuaoacim0093jdwnaohn4vask0edplqlkrn5nqc81j3enhpugio9k547sgxmlol5in62ebzl39c5ek3m3fv5gvhr91i8gxo1czaa8br26y5wlvzqwgup05whafjlv7yzi2l\", \"zdzywddlma2v3syku8mtnotzx1ehbmhj8h7rp21mekgfe4pjj1o9udnu7fdxeekpe38j38qnrfu491h\", \"h7hxva59v8m27gmb5\", \"dux0ehegfg59dwcou5bwryd0cydj3ualo59mvvsuqixt98pc8677d589w5wrka9iry5xd5q2rrh9vuzvdo85pfq6okmh0ar9f5knw8ll676i39iip12pgcfoblfn1155wmnm870vql8lxlvg77r7uj5yha3s9w1r59qw567w8z6hx\", \"l24ux1uafnbljuzzqk9f443ddyen9qirvpw8qb1nqtbx6yasy1phsz0yg2zgszdfng5leeq\", \"oggo611bnmdvth4pwdduhqhl4wiz0dg1n6re5dm4noc8huia7r5j1naeykkb088b7p4x8obugm636nhhlhsavcsrsg6bvgn1ojjum9gyn\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"v7kt3jjh6nn7yjt6pglf0a902hjl13mqz5fuabvb0y\", \"ve0g1cozfswujvri83pxqn6ld5tom8sgrhhbnf2rfep7umoqmmd6swiel5fowc5h13g3je42a0uoymy61v0zpus3ru3yxwx5hfdizpwrz6u4hq2ag5ddheeiuitydiaqrf1nnzx8ot60tngdqjhekcj1izcuiemx0e0f1pm3g35q2\", \"jzthqsuloqbuxldrmigac8qrdpykvi8e66khlusag9mtdpzjg52quo9huxe0silk8qqvu9ris2xob8g0sc\", \"62zw7noipa2m7qcp1mgafxcrirc9bq\", \"eun7txr91tfngt0wwxp5b5k6wrxu99hpqt2birggwtoq8qwe1izvk72nr98kfzlrvstj09cpm6qci2841pog37c0i\", \"rotebclr5v8eggw9mqw4hjpmprux7sx65n9s0l5obmv2ra7zia7qp5giy7r90ct4fyhzj9149s3sldm5fj0slwcuet3n9mw65yc85cuej2s1q30aakj9io930kedz2jbqewjxiyiqbylreqqbqw3idt755f87c8\", \"f8397r1lipj9a0fplbrf5chtsiho9xf75qjikwupgti1xryteebvrjqakb03390k7bs99w83v0sccxhkydeesl9i8h27s7jqeunt6v5mpisd77pxhwhkesyet3pvcqm8qe7z\", \"20s722q12rnypo7vth9mneert4sc1lq91mjsnh7zkbcis48o2e1i3hqj\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"onipwsh49rvaunwog3pzeshy847jwfudk1wik4ujds4tl0h5dr7lw5daxxf2o5afs8c6lbqqpuqdcqqy8amckzv2pmwso8hnbgftydeo6qsx097p18mcff\", \"znsol074xnk12kfmrsfcv6s3s4w4zc47mcmusua3rga8f8pt7zcg8m4jqg4pgj8vkb28k11l04cgqfz3oepvwzwix0y\", \"76xyl1uscepor7ta4svkut2p3d\", \"exgb73inre2shdw8jl3yaxz235rc27ihw5zjkusbnzbguioej3swbswr1zr1wipn06cvy9gux7neh0s4v99x7s5avlkm5buj1t2ypfzxgl22e2rf5l71v5nfksaj3jluqlr56l58p5c1mtibjtop6d95m3p1yuht8teqoztvwf1r0x5cbk58w2whf5\", \"5j279lgqrhpy6aqtazu9a9d6mu378rjd444gpl5mumnjz847xz1c9jromf8f2zyxclumn7rju047v3sw3ylvx91q33yzyuwvovle1x9bbbw109\", \"n8raqsnvdbw6xevp0z7vsxmlsd3ibq5gxmd7f25k6xvbqq0t17mxae6qh7o6asd2myzf3znd3avrrjwingvbud5gcfxj716gjj9ovljyh5muilmlybsl3zfeey614xmdebcjj7wcfepgpk293raz\", \"orot5vh0xs4gpiw6qhefps7yifyngcc36ckv6e1pf9o6qgx9xsx9btof1h5zmaa6jjfhi3sg0yvy70xgt4ddj66i29hjzd6bf0toal67aemfce5gy0l0wyxy93bverwe68gnarrtf502m6ts0gp5fkc\", \"219auj5qyurj4i3sror930lqugntozxekyw1m6tfupc2tzmeqlug9d39g08zglvguwwuvvmuvci1q0j5ho3wej4cqolg1iwiipk2a7zy2dpwsxemm6y1z2ci43wif4x468khafmro4m3myqh7asr0n6r6qrpl95ekasasp5prbcdpnwv6ccdwsv3gw2nfb2o\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"fenuam124ev9n2qel4w12dh64dpmhcoh3kyj4ge9hoiv7gw3ebx5rs3yck4cqzikqy5vcaan666p672tk8ri7qdczmaozroasgn6a1jhjxek7vzvw4agzj2rz056x2g6qd952oubl67r76yv0hfkr6v4604r4gg5ifqzn4e4a3\", \"st1fc738chdvt6i6zh9fcp8o156uusfwccklw0pqjeczqbjufeid5zidag2jrft31fclz5ecv4yqr456e4q88sjf222myos5zutoeuu8hih9pzgm0ol\", \"xi7004ca9fqqt33\", \"ptrloht10y6sv6t980ec9ggiezyr4nt2h0jwoeyjdb0dykfm9ouidxm1pc1u0zl78m432g3k2kggc07j65h0yh0hger9e4t2szmsebuttxlhl30p23zgvte4sjcl86mvpbk5osr9myl0i8xna6fs7vi78xi8noqkk2j4dawl2ne9d4zz1eun8eqh51ow4ikn\", \"fe1f5jw3n25m5bgak9tr4hh506f87r3rx22o3w954qbw5allzo5mgs98olu9vdhae3hl6voagk0fygyuv95fzjcm6krw8voqhu4kzbsb5l9pa146nnr863io2kh8s34ynnlb0y52slyc0oxnoot78ywtvcyods7ig59njvgicrv\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"w8cz9texlzbxevlct9xzs2duogk8fm7o3zw3j8fabzktsaqm7dduq\", \"r2nu1ojb0f0qudxizbzyo2xzgpnrmebqpkforprfpqw37w0fg0wqm0nwcdwwitbghir7z98utpctxg31hpb11br2it81fbjjomafawp0pvlhn4z8yw4btruudt7txathlx18ceai4a6vsk9acxqsica3\", \"femmjk0turpo5141oc1130vyhflwzrkkrs4obt9aa9l4nrhh2zi2o\", \"vec5cgr0d7o3s8zsv495370jkdt2bv4d7xctvdmujwzq78x7xmmsihpkrd7u2y91wlkovh5ml246cw69lrexvwtxpzcmwfj3c0xonwve32rzdf5k6f5pnc0g\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"4w83rpqxh19furyf2xm8obrfqnjzyfw1fcynwfg3ayb1xtlnkjep2datydbwkva7pxgq8ue2uqaqlwzcrx1qmppeogeeon4\", \"5lk1s9k0axwlbo6giqq3axrfdvrjsdg3pa8pgphq5npr0zaib5f1pm67o6qr9yh64gzf6qbprse5hz1n8olggsnedaz\", \"byu36qto460fuf5hz5imibt7xjchclwapz7l0rkt0xedllq6odo6koh1n5izq3s8uevk8s5kksa3az22idcyv99eqpolxq\", \"1rzokm7xusl9i86uwbn6y8ljmlpsllx13kamzvfx60jg9a8ewzw5a75tu9guz1hg5w784p8i3p4d6xks\", \"94in8qgnzcve98\", \"r4fc3qbccnkd8exzpgd5\" ]\n    } ],\n    \"service\" : \"05cwvtgsf2ly0mqawsb\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"dca9ecd35rtnrfqj8kdicad6i6czqe5peommf72077t6zr8hswozb8dc5s3i1nh71dqh590u2w5daao6izy1hmrqpmqipuaq07678m7lbfbogm6czcaoj6gf5usx1wu9hhqc9ivhmzee8q6c4jc8wjfs5r20ifmw2vvj4gk68gntnlnb3xwslsu34ai6r\", \"dj5axpl1o6z02x89lxzzpwkdmkmef8p1owqixddo3gk0g1mv18zbkfo32zzd4i01tem4911f5da66i29kad7gcui0a7vja9n4hj3v0hwmzxiozvkgysi2\", \"h1p2xlljrrgzi7c2l9xzesk15zw2erw6sks8t93jo3689ezjlapayschppthzi5oq0vh27fxsxc16v20w2b5cdhf20ht7iu8gpp42nl3y1bx7u0hfl25n9d1b7wbrf5jc4umqoljyzr9p1tqys3qp1q942m2hhdvun0eu3kzdg3t0ytbfq\", \"7todh7yacwomq7kzwg4apgoerksmr459k57wi961en9fxoniz38653gpm6hdzqw165jemhga2jshb3y8o241topfwl6r1owwnyudkydvndg5ltpfn3dh2qb9dwnpw7ygxkz0pk0d95uhr2vjczhok6ycxuj212iv\", \"rmy7ugg6q\", \"cu273b5qd22g87c2oedd2pt17bmqf0j6uzppmlzlb9u5wgl46dsiw130hu293v0ad6kfctycnmfz0dnzwckqze0s59xox489rhvi8c5ebkg8hyz6a52dm5mdacmb03flrx9ycjv42s6yw0ri1w9vjx6kg3liyomxpe7nehulpuwa8twqwneko58w4t\", \"2vw8aey08fg4axl4xol2koffblyald6y0w1zufosixc0duyuk9vob9ydyo83cdt4o0o0ls1pfts6khrjmddtekuy10zp8oaftezf6q6yaxs9q9q5bed4\", \"ctcyt94m8fal1hfdixifptxw6sttf8ny7hpo3sjdkp05y358c9cjy6tu4zqv2hdc62lz002z1l6bmf0j93v70y44i0h2yhs4dbg4sde\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"m94lh2hfcyteb6h9yiugi5o05xtsqdanbx6zkf\", \"rjv28hv2f0jqe2oene17bcjv1ef5iczcvs8f3wk76a0eizkzydy4x6x3qxs6qkz9qxed4jt454kot45j7h3brmd6tb89wv671tufz5im9nn33xvodajdow4lfjyp78dt7o0mwrze1l8vv\", \"6tini2tnebcjej9m4ghorp3k9zrhclfcludypeigxeb96wvjjqp9zqod2jcp484ucyqdw9fmvv90zp32h84ohv7is47664bha3lyymwbm4h28avpiavfx9bqyptanmdw83tscupx4cnemukuu8pla8l7l4srni2w\", \"zxcg0hjq9h9c3si5zf8w7tjukcatfrhu3v4aslgmmals\", \"8e3dn6lrund3fnbre2d8w7psfoftmslf09vuh7t\", \"l2jg4w5q12\", \"ooqhyihuy976envzp8di47dkzypz78ou595jk5lmj5qnvlixxbw293em6qqfkkzz4st1siovt0bx98981zaig70mrmccdane6xxmka34aza82i44uj2pysrsg4dp29287lybdpowap7rw00yn4d9vp8cknegbffda3gz3a\", \"inr4x3y1tx40nfkajsxskip9knjs6lg8z5yhdblavpzhzdbbdhjecqmxb5tb6zlb\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"oatc2y58qi6xucua7khelebu1u4whaf3sk0kxgpk4h0lcrz7n4lbbk5uyjx92fq6ikqz9fvfoqmocig0ooydwmcgvd9c1g1nagch4gj8jupzg7slzuqve7mrc7o4r2ylbqahv3x9l31ah73fbpjmftxrbu610dcyl2nsu0hdd0dbrm1gdyp6pmocp5254dnxdiw\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"hj7myxl9x4m0jc0qxcj0z6uxvde64gm75kym52f2kztp0dpqfmfxiuwxjuvdnolg6hf2tlqzq3rafsocl4ax7ogo0eaiisggd7aa0c507w3wqyg3yf26aiadyy96jbnbeh35wlwimgmzfle731psnas4cx1xk\", \"v7hadmtqp1llo9bc19iicz3atah2c3va5nka8zni1vx8bh952lelu2otn04jrtq9\", \"m0jcckhqamvn9ndny628cj440vzt0dwwvy0a\", \"im3x54zb7ttf68ru5ta6gzfniei4b2pdv316my9r2wzc2rdx19pv1ey16a39yf9nu5qkbbol8ed3lqt711h6sd8vfmi6alem5klemda8q7bfzsgvuh61zwtkjf4fessk1x4aimccopsdmldd4872p79hol3npzxjx72uvgs\", \"vl6w7qloppdyfiltau3dktur\", \"6hz1ilq3p14a2y5q7qc56rdvqk4xmk89lry5avdyqogx\", \"6o1qehhr6gg551b8qtcbhfkrxstuyac7panrrir8jmcn50e\", \"1lpy20kfuenegr53whdk5o2ft1ylar9kb72ko9qa34e61z5vovzjr5g57c0u9snbjue07s2j4txpbijm5wp4gnmhzscjs6qa6ztp8l3pcpcxk48z3t1d18g5h1ujwp1trl26pom8d3i7fq7u5yugwloh5yic3xt97djoo9us\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"lpzq1rs0mtjfr2ht7a8wjalp4gc2o04mk25e89z529t453rom3vd6mh1ktqbblgunao9os2pz1c515u2fv614dcu7nb2h5nofn6p9bhvxvwwjse9je0u561beer2fkdvfn4d3jtct0hwzd06h6rlt5lpgmucar3pg465iepofvey5j\" ]\n    } ],\n    \"service\" : \"9f3ugxeucf7zu7crbdneyprhriuu55o56spuvuy7j9eb1c051ze09po19sztx3ak7delki2it4td6g8evbh580ntz8pi9atwid50ergg4gfjf3cfkph8qk325ohi\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6ae17f1f-53dd-3203-aa60-6a0e23cb29b4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "bigtableadmin.projects.instances.tables.setIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "auditConfigs" : {
                "description" : "Specifies cloud audit logging configuration for this policy.",
                "items" : {
                  "$ref" : "#/components/schemas/AuditConfig"
                },
                "type" : "array"
              },
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "b3b9fd07-66cd-39de-9b4b-cde1f6315e98",
    "name" : "Gets the access control policy for a Table resource. Returns an empty policy if ...",
    "request" : {
      "urlPath" : "/v2/lmnneldtz14ew09z02sbl5s7sn6j35g7t:getIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"23wijkdw01pfs97ym3rpk2bnqrrqtr3pc6tzsruw4cnyzjcie411bruadz9y\",\n      \"description\" : \"Deleniti suscipit qui. Aut et sit. Voluptates consequatur hic animi mollitia occaecati in corporis. Et ut debitis dolores maiores quia. Magnam eum deserunt ut.\",\n      \"location\" : \"p5ktgrs2ks6jike184cg5qip63404kcl86r6bb78gz9j8lgd0jz3t43z6cj6fcby3cmk7mor88n9s8wveqetd7oobilk1cu6wo3r4i2wswxsmvqczwq6cmsde5le8a983dz2qpdhrarurp7zipz1i9ct7cukr049pci7xdixub59\",\n      \"title\" : \"Illum perspiciatis deserunt aut ratione sint.\"\n    },\n    \"role\" : \"a7j5t3aug9yvzshby34lkl4fpt20io5mw15r0\",\n    \"members\" : [ \"my0m9tu8ztkw07cjtclm7\", \"fiq56mvg3pb3slnu4grzhjvsgqtqqo1v4qllzbn4jksu1r4fuuc7ng4kwvr52qspunfn7eluzc8o66j34qbvmow9jsfudwcpn43eihwu6y5wa3wvf5qi2\", \"u3ugne6uh8slohneivo5d9w2cu502w7sqi9alqmjyfe8obai71j31f\", \"cvt2u7vp7shl84pykcykgz6vcfc3j31kiwiraxeu3y83xbfh7e46kjit95i8sn1uztug6w853oqlkdn2uu4jwr1m0sro4s11agugch0zemsfamsreii42uy8piji654wwuvovog2a03uhpjr3sav29qy0em6yjzptszjsckbh33x7an9dmozafwfhgo1d5\", \"x9x37egncc\", \"vnf8juhjqs7oa49s0x8zw4jrzw6x3zgw10oq1fk3vp7dtj1vmux6hf09bx99zcdx4qv52t0dtkuh0qkwa5gx3180hmaqagyv6kutjg1xtndf38xsgnfo32z6c5kn2cbquiffun84jkgwmognhj7ivxul950ptw9nthaugw8od3fsptl6c9o4wo8waf2n1bykpcx\", \"fozqgsbyiznuwclae3b0m20qcxsxzmryjfkx5jvup8swgh\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"3ep49ueemuf9oysip71lbj2g6560bt8wf018up95w5wi6ppjgu77mq0upu8dhhq4yqulse3yh1sj1bevc0shwho81niuotjm0lwdwchmdzxzo3sbt6dnjkxyon0532vtt9o2e0zwm7hp\",\n      \"description\" : \"Iste incidunt aliquam. Velit fugit sunt dolorem minima cumque impedit. Doloremque provident nisi voluptatem. Minima provident non earum. Fugit perferendis consequatur numquam aut soluta molestiae odio\",\n      \"location\" : \"scuye31plilfbjr2fq5fr2p7ie71lh4tj\",\n      \"title\" : \"Rerum nihil animi ipsa.\"\n    },\n    \"role\" : \"uyi5mbhd51offh1kohu7wvlw1m0mif5h59w6ypom7sob6eov9tl6atyf264bh4569ydsmf53a2lbdkxnh1tsxz3sk8abtohyy256qf753d6ggv5oweqvqbgrysb7gp6evt8\",\n    \"members\" : [ \"cusjx1937klgjt2s0xbv7kz2v4uzhgmlcuac4hkt4xqyitwsjrwylkmjdbvtlsmd\", \"o2ee2bwlj010aoeronx0a13798mkrjctdebir282n9326hculzkmk3jru1yucmf8gr0eq459e962h8wwnml0arvaotac3p65hant02ty4b4ug70gslehp1zuz2jgn\", \"9g8cfmasfduzc1a5ptvxvf2928j086dcm8jmh5pmwsrphovj9w2b8q3nv9ov9ezd74i3ngwmeg3biqjsbexhwy59biitx0nzv1vv52evxeky1dw8vrt89vlblny8zx92qjv27f\", \"jso84qhi\", \"sjhh\", \"o9yprqkg2mh7zqgwhtx4zc26bb819r97bvy7zmdwznhy4jqqd5xoj7o5zqefo8u8cdeieihl3gigmiozgi6jkxqbc73u35d\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"5l59g94ftre1vi6gl4pg5jgnzky84sj3kbgsorldmndo29max2kmtgw21qhohor8pio6is4gxo2nlgyzdmigfekb47t6jesta4em3v24p9v4sa5la3hyhcwudifkz9ihc2mogxqgow6hj7flc7f9ly0d7k4gy2dxdtw0od0e2vj9lok\",\n      \"description\" : \"Sit dolorem corporis itaque ipsam fugiat fuga. Nam ad tempore. Eaque adipisci quia enim consequatur dolores dolorem fugiat. Ut dolor dolore. Sequi repellat saepe in quam.\",\n      \"location\" : \"g05n0asmyiswvdiqkpj2jyfq4assmjlfq0i0e5v6r7bcds6ykvsrc13an\",\n      \"title\" : \"Officia quibusdam aut maiores eveniet et incidunt.\"\n    },\n    \"role\" : \"7v260drhkrmrfupndf0hlif6n6i7ja690sziwymt038o4j4rybyp50dfat0dmlu6a7kkw2zwnlzozbi6ilezf\",\n    \"members\" : [ \"w10gx9lwah8p5zd9b0n0qq25fkfawmvdaihz1y42c56cpuawbq50c73lt11vcpsi8a1yx7p250bruxhox10bj9t8k38ieyvaw8gscc49jjyofh0pb80nvce\", \"yi2oopsse7vi3kpop90u0e3b2ejh3mhpeyfxuoe6rfymxzyjo0kuj9ts24e7ykmskqotrwpqwbju3p90zhbfbzu0o41qsebxl0l0v69gso0me9lsjjvmgdlccyu05tsqtmiviltb0hjjd\", \"h99gfx561koqetss5qi02gwvw7cpravxn9dyfzaeh281bpfbnir5krhmsc8juavj9qkxs8kiyjieu3f7riwqtj6rvhm5ihuvk80xfwmethkybk5gush7ahwjiip3arhtc0vvyp\", \"73odm6ijgi362n5\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"o3jzzryuo2jzk51yk6xihdd03m8kno9ur5vn41mohn50m4lu0n3qr7tl7n1ux7r09ti96zzt05fni4n540t8legffekcr9tddgse45hpmy0\",\n      \"description\" : \"Dolores necessitatibus corrupti et. Animi aut debitis. Hic quisquam sed dolor ab voluptatem. Eum suscipit omnis. Esse a ut dolores.\",\n      \"location\" : \"lnilod4q3ejyyzhqietchicockpyv3trs4074f7wzyrc7gu5sly6kc36q0zw9dtbvfttvgojoqj30s6luqololi2opqmhxuxj5hixkyectbs55t\",\n      \"title\" : \"Facere quibusdam ducimus perspiciatis aperiam voluptas a.\"\n    },\n    \"role\" : \"hhgv5t9l03chv8yso7soqzcxjkn34sqg3une2ugxgdwgon7z3itaftbwbjdcq2bkj1b03i16y85v\",\n    \"members\" : [ \"zbzfwojhxudkvy8ul80ozzvn78giez8cp82mjt2mrddnzq7t9cxpexhutqt318m5fp6uf5p4isb8i\", \"7483o7qyv46hixn3oqr6q1pfe6o38qe6sg4217t7osnqorpoic3qb1okhnyjnzc2la503oyc2yqz5o6l3bmj64jfwxwtio1r2jk9l7hjypb8ruazi35t1yvf\", \"xy204q5srftx9ywpgzs06gwowhlvzex5qumxv95vxcprvs2dcxa5vmennjgdbjygjg7jmguaxtj524yfijrutn4oon6bhnu2ffpsdykuwki51906ttqs9hw8zv4iambv6k37zp334u3p9jgr2jk5ryj203dfq\", \"3spi36txd8z4uhvs4uermxyzg607zcd5nzkc7ty6z40atleziruizebbz6n9xz413jasaljq5xd4i9qt4rup2gtrxm45dxtiiork2rfv0hi37516hiky7gsmmtm7o9wnp62qy5\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"5al\",\n      \"description\" : \"Veniam et non quam architecto sapiente et. Tempore aperiam autem. Dignissimos dolor nesciunt non repellat. Velit modi fugiat. Ipsam in quis.\",\n      \"location\" : \"qo1zd5t1lgk9y0ldqbfs7eamgq4oilxb3jj245b8sfplxqi55516hp72j9g\",\n      \"title\" : \"Deserunt dolores ipsum ullam consequatur molestiae adipisci.\"\n    },\n    \"role\" : \"b9ur0eu2yl42or1ly3kz1umsotxfy1pnmdj3s8ednuqogpjatg0tb0yamcxg4zdzxm1l2vljvcvdvdtnwpy3dtrkljwue6b9un989k8bjlqcx39j8gwdry5v7ev58l41qtxa5pfx7zrzlrx7iz0kja5easftzs0apgfe3cq6vv6xfuti0jkyzxj\",\n    \"members\" : [ \"7b1xdwr0u3f1qrl483qiu1riitcy7wj1iw81pza9fpsr2g5vlj9ftrm7kp4u18t1frd\", \"u6go24n\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"v4nklmkc5q09o8a9w1u8xtlfdkq655pw7xncrhxn7baxygkpqs7dgdx3tleicsbxjzyvp4hv9q8uo\",\n      \"description\" : \"Quibusdam animi sequi sint facere sit hic. Harum sapiente voluptas sit at excepturi. Deleniti atque assumenda.\",\n      \"location\" : \"zz53sigtxb1x32tss7rywoge749jwpvluntkwf65472k97jed99tmu2p92ca5ydki1irm4156co1\",\n      \"title\" : \"Quae corrupti eum est consequuntur.\"\n    },\n    \"role\" : \"33foxworr4wgstsry\",\n    \"members\" : [ \"b9e6qztjcnkn\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"qehkuw5uq8iu986mm\",\n      \"description\" : \"Provident voluptatem ea minus quasi quo officiis amet. Animi eum libero soluta dolores. Veritatis quo officiis laboriosam eligendi suscipit dignissimos. Dolorem recusandae nesciunt totam modi.\",\n      \"location\" : \"fn77gol4eaj4uhpfb20r9gs4k965mhtbeqry6pnewhpflptvv4eydxjo9h1hdx5uz1geoj\",\n      \"title\" : \"Deleniti libero ut nam quas commodi ut qui.\"\n    },\n    \"role\" : \"a9acnezzj2fa43sxgv3rhxgad64zf1nkhb857hqjw\",\n    \"members\" : [ \"2iognxpk9k5898j4rb270rntim9qu35eehgtq4gju8ucby7yce4vszlvjvn39bv3ezf7eqegg8zvd5e\", \"q1ovysgsil4wcriytktblubchfqofetdoaaqmrgdrw9nm6jhp8ri1wqfajwafp32yy6ltij5us76ons\", \"8lfwvzhj2eygfnwqcallypnw96tc2qkvq2vn3c9al4uxlup9qz1ewvygy8jo3injmgtzkktqisw1b872c8p20tzzk4uwwfokqxsn0jg5dklzatezwt05psihd5th661l8koqvrwlf3zzejxywavfcsfor3x6sb9n7cexj7zvipl2bbikv75lpgu65x9bc\", \"2z2wmnnhhifhnujj99hvm4\", \"mqmifx3dgu5z1e7bnkm4ja120ja1b4z8n1jcf5gwiialyf9qx301kihudw\", \"tvmcn3nknjn5qw4gunoyoowc6o3qh2ofnqfamiy0hnxatc1g4iu4u9kmceayi22q2q99jt\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"lyqb271s1ng3mfqgid9czhen6wk7mdd6j4lc2zsk9br1pivyytq6ft6iqi85r0mz27mz7v7auq10wgl6phnzsl1566hzakesi18fngeqqn66giohkxj3895722aygx5ugsr1q1d44ss7lkkj11qrxbgya8zxx0n9iq8zqs44\",\n      \"description\" : \"Aut quo quia architecto ut dicta. Molestias et ea laboriosam culpa. Expedita voluptas laborum consectetur omnis quam nemo. Eligendi fuga ut a.\",\n      \"location\" : \"aoi217yidqo443k6rd7xerl8096uooh1gyd3m0s11w8xja4d5rh8vmw3ymxmc6cl0f7rv94kb19vmuoybo02ppa8h5duv10w47wf49tgnuv6ar\",\n      \"title\" : \"Natus occaecati aut quisquam.\"\n    },\n    \"role\" : \"zf3rm84qxmwn17q50uxeviezw0ju4yk43hk8b3sa4aj21qaldqjusne3gs015d43hvt7eixolszgcmvwkog2p4lzs01nimkaniqp24yqdy9xlpqhioi7xfihsfoq81nib57ycskuin0j5d\",\n    \"members\" : [ \"t3lrb7qq5wnel5rjtpg0v\" ]\n  } ],\n  \"etag\" : \"reprehenderit\",\n  \"version\" : 468708636,\n  \"auditConfigs\" : [ {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"vcqkbsdjbyqwu2zvo8lnwqmnxwh2rnzmh4j6hqhofn6yqrwt7quon44jh4xrj20r72tiul14wn2jxsqq41elbewkcpyfr6179y951f24l6hh8wjlb7zbe8u3i7wgpn5xq4082rf3cgvraborkdlzfv78ilf7x56xc34tat1600p\", \"w71su3r97kpb6gdvv14w5weu2vnjzissb9ohdr76au8ad4zi5z12tywtz0cycdw0xjviq33s7abig4hnzo7361zh60vtiy3u5bqob3f00k3tr8xvif37ze\", \"mwsuqyn055imrlqdxxg8d\", \"06kaen56jhq6hjdxdm82si6e9uxvzjqykjedc1huhdg4nhtor3nkx0n8oriycaxz2l71q\", \"440nhpxsf1tbgquxt0fsw1f6sm1irlr2cu88oym33bw5wvxqt7kgwp1eklp0kpl9b02wkltd4dkknu370wmxhz243zmwyw3epmdnar6n6wkbgjoq3spwt7kr396fg\", \"13ay5uduar\", \"b62n9k7xik\", \"1le00f1r0z521bnk8tpax1efqnazp7y6at11h0lez75wru33mvbxvckjt20vz1eixv3frfab321kjkucsmi4tsymeafkaw0abzzy2gx85w9mya7cv72wyoi44f0c1dqn4wnii01kks46qiiqixis28b9g3j8s68w7een3hu0eac7xx0nq1k3mjimd5gcrd\" ]\n    } ],\n    \"service\" : \"hrwu7z72kwr9ebi5q3axcjgxppi6u8swpj5clnvxgkyfhzd0kqkytpyhgpn6zk66vigqqnk3zl01z0et6g1tis35wmfknzgsj5cvhyjzlt4h0ledlq1esx1q1qgxrxz\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"hjatjceylho9sqhxe16siapehsozayvnefsdfet7enemgz1mib96ps6u1hwxfaqlmupquty\", \"9y6unjk9qe860erruocihewd1w3dowocatgkkrb06egtlw2pxxuh4irpus2uab60qa7hut03d131pe6157ntyf7os4xa40j83tbt1e8ez4r5iz12udu7n9dwwa3fmbmnzr3\", \"ld6j5g7nzmyht2gxmb2esj72ht2s7m6hbovbtjgp3dnhzdprz5wagk7hvndw1zxyp9y3w3j7cvimae2bb58sas78sx8z89pj3j8815h3i26c4uvu0d684sct17yle8rv1h3wt4u328jn90w1o4vaecul0tvft\", \"pdi77n2as1ztv28c8sxxncl2w7gsyo9i33dp02bsr3lc9nlu\", \"p7pl2gbibqrhlbre0yv6mf0bfy5bpr9xdg78a6zdxgqtb5kdkxe4s0s23sdqd9iw9bg21219srr93rhv59fyd11xa87m3csth49966qkzpszz1i0j1ujn468f5dn62gkkhvl5\", \"n4ulfokywlrbzgxu4xceq7u9cggey5jvuhgkuzesemdgek69irid7h13ost81psio9njt1zn4gu43xridfkibsmx6xjaasf6lhonn7t3jjp0oiategtikluxip1fb5uxywm43hbhut4rflyqkmqkg5v0grw89thpraq15i1jps\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"4a22mc9ag9nkhnttygvvyt0k2rj6u7xi5uwztcvk7nfjyg71eh37pqc72acf6r83wm0js0ughgz09yrp240zy5mebjnapwm7x0658jlcq2atddohtnp0mt06dibag9ckhlr59hh22jkifs8cm3itd707kvssywynqtarv\", \"d2wkicflu9g\", \"njpjyxwu143v7zmbg4ff4kuvsnp4f4unw4u88nfacn6eypawpslfqte0hdo5lti15zqkwj9dox6jjjvkz0xv5j6yt1ywol7k6df16jd3d0zz8yekrgr6k1zczajrgiqhiy7kjinqalwa4stypi7mnt0i916nx6aq218wpgo8wangwy084vcl265s42w3rg41uyg\", \"ax2a6rrqw3w2vq7zqm9p1pwyp80dprreei832430xxgzc362ve0\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"2xvc2jk6xa9jqqk3upds3r79ffnp4oya9ug5qctytexdnbxmxesekrtz5yxwznleuc2eoct3gwv0811thnuml5eh39k871g8pst29ku7i1sro5c6syc4607r21n40q82b1my5ko4n16wf96ms1l41y8hmhqyn7\", \"yxdv9znby4holg0jei63exyoxt3996f56soundbrawadx2nt084sj9u\", \"kh0huytjtg7mp2r7zg3zq4ofkfyzhm77jdcplbxay0cl73qepbmticf1ywsk9cv1wdzxqsbo6ix0f6c\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"sl6sovnltgg64qdhjcdnd7xy5n6inw7io07u5m9g9ap0og85h35pyfa03j2i8xpvfryl\", \"tnfl4nik884qteomeh8oqlyn9n3hr2yaqraeuh1sikogipcnw7fa9d8dc4dn71n46gr60rnxwnt2xkhjfsbi7yfnvlp7ehtjha7mm1580bhc1fam848661ogwa\", \"p9qzjin845e1xgcxs7ods4om1cmhokeu1ilqskc1cdvkf8tp0rp9en7vot9j7bys8x8fx3i2kh\", \"2nioql5wmfyd1efm7fvztb55w7gczek63g42ewagoqf5o20evkexiolp3u5kr0q87ujx5zdhtqeydq0a7acy2uxx7oqj\", \"vvja0a9eh4dasr0fcoho9k0ajz79p0e3v5s3hvs8wi6h6pgdc09gw7pk14e2dmn95l8ec99neeoucju9dsmmzyjlwhfz95gwmlu1g6ofz918n8nbrvkgx9fylne4pcybagc5ph0xlvrg84rc19qs25rps5fohlsuc486b19gpngdgqc2cguiao7wskmwt3\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"ii6k5ltvo88gz6stgkk6hcpxxdmpwll3h0tqef3deuovoi1n5b26g6x7xf65nnk4cp7lrzisis112wnz7s9exkrv9fkiaf2ovaxv5p0bvb2um2igs6yeomq5vudsknu7eq9u4wmi46b2ni52ut4hvxnmp2kbl46hlmd\", \"dkx7k4akcz4wagcsus61xoszznnn9jaubcxkwq9tudl66g176uw8tahq01ju1muhmpm7tx2erg6akq5vsnyrcm3a8jxwujwzlzqzzjqftei0cslsp30defmlt18zqnfw1m70ylo\", \"991viej59dmkkw0b5pacqyrc9nguag4r413n6gmtf560i2j68avyhdfqy5agfaet4hco27dybaueqapcb1q7flpzsmqj7k18qoyriza8\", \"b2b6rjfvquqh0s4xyp1nv4xth2qt7ac20ihgv3cu6mn6eca8lk1r7slhbueq20xluogflyl54g00rd8c399ubt7wyqkj9l0vxuywby8cc0k5pq9xg6ldejk0w77lsg0wki963d9m5um5yw9ib2178way9v3\", \"451y40xs5ywdcyl8bdpcdj0rnqtbtsm\", \"d8b8n658bqnu3w9jkeom3bjtsvptapupkgsu2s13r5kc1xmlaagt4fj6trr4uawxml7nqgi6zv0ygdcc61kl6cl3mhuxonvgc8dfdfzgg8cnu4scv5cin1rz\", \"30aiztkjlbbz1ai7xjdunuuicwdqv7zliu7ubph7ylpbv4fmgbpr61shtpxpd5oxvpgi57bjrhr1jqqgs2zrfoa4n1rgv72qya3r3oihr7qx5qc8w1tys7\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"lq6mfnp23pkx4l3gtrqmbau2w45cxi9skhzamculwezjmf1n9vyazz56p9wt06qutnwfrpx8nvzfrzu25su1m3k4vrnu0znfgczpmdk2pjea7x1xot07y260db5310kn8vex2h9550ij6eidistp1pjywto8nu\", \"rvv3hwbeuw2cxbdqjyqb3gy77n80xb4pkdw6c1qb3p46l86zxbhqzbqsfqhzacz3zebli2cuthtc5ywlb9hbswn38xrqbpka2tc9rcppjte1avdbzi5rzokn3q\", \"z5alft5z1rpomt11tm1byqoxh8c6rmypuh846nujt2l5w2gltod30e3dlf1vc4cvw8r2sakgo163je9nli2cre02s4ae8iszlfxwxzqcz9cw14rlf92c31cesvmczmxz0oj9yuhi98fvkli9ha8c18fm2gtwrypouttypik144uxol\", \"wz0g8bervg03z58unxgaxi7ncvivmgpjcsy126kmf19vs\", \"m7idon18jtdqcdobwf2u5xhlff98ouq2pj3g73t9j09vuz379ugrkmiai9ktu5lqdde1c5pab6okwp7rskem5fzw5wcoduwkogk2w6ui\", \"vzw0v0v1iesa4niln1er76v932x81ouvcsg03scpr1gqadvlin2gs0kby1jylm2od1af3o5ik6z9s8gjedcnwv5lr1ufjyxwtgj\", \"i1jfmou0wt1fuy2ndturraea1ewpveh8fskq92yt8fauvk5xzc2e05n02bcjtv2and1azijy8xzfbdu8o49wwf0kg70d48kmv1jvfv1ylnffm3hfpxvh0t1eng83g9xltk\", \"91tcquwmjm0czb7vkvpde51yhs32o8gtnufkrapj0gb00sg3qjmnjkrua7dhjhsjtto9pjizisv98mnwmu9zgco3\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"5ntm1dp5zw7un6xno0v9gsh82rja6wcee7wllhhbqt506sjn5qfhvtozcvxxfn7zxh\", \"icynmt813e8wclzufmhzdn0gtgd4yx930h65shzw7q3qkzwizjxqnomrtm8xjw9er85a4sdsvkxwj4udzl5m6sdetek8haxxw50pi9fhxmwpepclzfyexiauj3m4l0zjbgxj2ukjinjhb9rjm45ugj5ed\", \"k3myk841qlliwvr7ssdwo9qfiwiiv675fzvflxoha0tm3r37c0kiveb7jom3jjqlepxbwwaqjh\", \"fplvf1t7wo4dll3f6qayf1ne7fmf5ywm2cj0jzwae70lf5hwwacxmjwclt784s6chinuud5ksdrfmqztgybinojzcchwcdtl2edwt1ap6n26\", \"sidb09sd0b99paz1rdrjav1yrzp4m3jmx3qpe21oz8qnntl7sn5pwf2h91z7f1e4\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"j13i0pp70yu9v22sa6dac5rdt1p5809m5wjhyt3lvjmrsva2r5yqnwzi1w5p9xeelqa7qbb8wsra5ckmme48acwp8gr1ccnehioeiu4ojw4qjh1rs7jsgp7en67ni95aym5o57zkwxxjenluedb7ykraqmecakwhtotzcn0ki5qlsdfre8pjyni494b4\", \"2qh5a4b53vo823jszb4c9h05yhv5pzqzrpwpwparhkchvgwz6khtd6d6ji4q8ehh6uc7q36t33sykfn4v5dp6ux3ngdztl1ylx1azhrg\", \"2dszaxrw956nt91avbyzcrvabf4g4a35f7yxyvuz5taeo70i0ei3kxyawrfdfzyb5agdf4r4bjx6hxlkwkwl0p80kj97byi6scb06k4x3is0124oz5kzjetylm2bbzl4cbq2yit85agbn8pme3r1d75nxsfhhesbxb9i0ggs942psp\", \"5a1hdiihfkk9uw8xevhawl8acyi9id5o9d3d47hudzwd0hytivzg972kht0tw798djrnuvftyt2prxsf9j51z9emuev58rruf3o5peeecaqe2pc0zj2mehk7b0m1gctcn8653fchlalimc8c8fmqgc8gkj9dl\" ]\n    } ],\n    \"service\" : \"9gnm8yyr8ee8jpqe245xwupdi6f4y21tu34oh952eylxouk66\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"dbi8zgk7k0ykeawkjnv7kidzpw3dm9rh8h40ak05vvm0xzc9btbw8xenhh2ntm5x392c03czc7\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"wcwv4yvswwkj3cqypn6pav9fkbj3\", \"7uc0bztkbj02ec2migjvf4xdidg9ttek9i9sz9qstymbkopl47syweqwctqw9oh8m6n0yotfbw9pjzhreo776kiz6fn93jvdu98bgl73wf0rtwb802nhxpl6z3z1ffpvdf5d9zrtlmtxwo20ct6h9eyxa6\", \"hq5d0sys7d94cst2mj5uuo55g9jovxwftndz05vh7y3ntxji523010fhxtjs1dxyzxqxwdsgtuox2ydey9pk78w456qsyzt6mqdlovh5l1wpj2ckfpahihq8agmgt3k7itlbvsi4b3lnimgkncuwyz3rfbj9f8isjy3div7c8chz9p10m32roxt\", \"kffdv11121x0u11wg3buehu43fbyw594vv41a31o4xx8wr3sbgoodzyqjp9thraunnej2mjh9m2v9u52af72fg\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"bdj0axfmevp975dnl3sb9uwvbw63t8t6gryuca3j50ha11vf698qt2xfxo11n\", \"vv9lgzyeug999cr1q0eryhlo61134hpo8g2txflw3p73pzgkfk7rsrpiqihlzjtg3l8bs88vnrafschy243swc4w82d93tkly0sno3ntovkmdo2z1yndwh0n8f6xfje8zvwy17hu0xg5d6pg6rayodmayvyzfiqw4jmybgn1s1iarmw4f7obipl\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"y55iepbo1rv8hdsi98w7wwlr46msjl7k70nkmher26gi4otlqg20ffd4no1p5d0utynri0c092fqcsrj7qbn91lqfj7pp\", \"nua1sdlfjhsvewjz04yolf8e63957lam3czw42xq0mpxs2qsndr4qq13c38xph5tppkisv89kr44z0x\" ]\n    } ],\n    \"service\" : \"uu95bror9ejgf4ax0yaqyb9s57chy5lqmjgdrfesjsejczda848vh53u99gy0ry9buup25h9lscjpt9fliimok0azk9hsn7aznerby\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"l8uprh2mo2befh24lu86j\" ]\n    } ],\n    \"service\" : \"zaok6dv6120ottv8r1g86xohfslr6071779ljx676v915ggi5ltlv3kjn1eex2jgr8gn5r9qu1d28e1gsdx6oxztxu6ptg\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"3ddvqidip6o3m2oqndffb0zizi64uvs3em7ypkymm22dy89y9usjx\", \"kk9wnjlf6icodxtkafm0b2rs2hy7ljihnylrs84z5v84g87hb16rrv9ag7z0gj51jy2rbciiwngkdm5q1ofqe23h2vbjtl9v2oi1crueof1ae0hdevfcuey9pkrqfhj6k9u5n9ct1yjfezph8rwz1rdk06hyuuime95as\", \"54zc1w2a7oq56zv2la3vp3hsn9o9idaq9ygppt1n9g1\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"mp9tjuqb8zfoi9yeurq89pygu3pgbe3sdbyrifjw2iz42jp5kd2lztwlollinx4301a4tnazwrwkflwzo1vnw2fu0a3x6reuypp5outnnmoo1bfwt10nvd7j6surgn7l81yssd3him0gw6rgpfz7rhkrvx43h2f2hqf7\", \"7i2vtwb6eq34j8nyisecrohxztyi6smpnlxbe9ykridwq9ipr9mdub827cas91fca7ntpsel7\", \"m8c1srj9hk47azdav23y4vgaffn9c9etxklz47u8qndk3908celj5c0vh6v7f7v5nl5\", \"0cz4n9327l3tvfznsg1uhikbl7pln\", \"vovcu37n7h6of768e7mg3oqniptfx4tniv0vnb0k1uim3f84nkv0n4z057mxlb865t6t0dvagakxhmtbarv1a85l5qnpaj925paemzcm82lcpfdpf2bmceelbggreamq93jx5bj4iq8226wwfxr1s0ct9v2fqq4i5tu4ok0ep9e0qsyzcdmcg\", \"nbetzadd1zzl3jvduz038a7prir7anq0j0u1rl9xbwvxk0fzpxhnoyj67ner5k44rewmcfz99myuarhwa5m1v97m8hyj52zht66vr2h3jnplj2xie2x7mx6avudak2yvxsid2bi68zlai74j\", \"bgqwxtwirjd5n0v80cxle9l8kzxcgptn7ejkylfid2qfbxr8j9d02rhtpezi2jbvuejnz8ksp1vqz11117elgx3clbzrq4ajjyimn3eugkgq\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"f1i4vkv01hp6qf6y763ekh1hrqjh5px1ob7rmaf3yl8b1wsn4q369xskohr0dqomr2y1rxd3z37121iumavtidibm06j9v0klngtx60s4jiee9l89dki65vgq3n6pqkm6916wu\", \"ven0p58cprbcvk0elkxpzoaak2143s8bquqi9sq\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"j5rcgfq4bfhgxs80bra544pmvjh6vpj62q4294bkuv1m5tka91jr7bpy8qkjk3ragt4alnsyz6cro85ez\", \"m94owps1fhuks06rpii02ocodr02vnil7r241gl6ps92n1myzj0pqbliw7j\", \"v6igzknjkz4k9v8zxs02o179tjd70laaw4rh6jo7m4lgar0cxp50wlu6kr0xdqih0gxdl5lqn001gu5q959onuiwdojyq8wvyev5x5l9wwl3l9659631lw7l27q5jt5gmyqgi5st4u35j4796fwwmu9\", \"u4r2k6rhdr2vr7wvp472huprkm0ha3s2szbl1jxsc3rowxz1lsf\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"0gijtfi807k2uke1853e7rnizvmlfpqsd5vv3vh0bg9tcvipeyryw4z44x0m7\", \"rtt7gu29yy5pg2nrzpznz9gs4zfy2xs3e2uaquf5do7akzst0ligjf5saqko1eq8rmg3mvpar67prm7592wdjh5dlfs9l4kjhd75w61ivc8jdn915s160yxp8v\", \"yods48vg89515jkry6v1g05zzdpfquz1zaw85z2mw9yzg773ur4y0vou47l87gegdolzts1efeee5dfu26m1s3jlqfv1t8nckd42yf6lgw2lljfwxfsejywwvqmcsh3tkuracwferqatswnu4ejwqid49kuugv04tjbxtr\", \"dp80b1hec8bk2fcgc0skp3qujbzxf4cn9nim4dzaeuy8rwcuj8bzhcw29kevaga8jy2gt6tmvpp25cwwp610n1djdbe8conlb1slmfd2ei7zgazs37gzglzb5a2s69vtct7ibmwa09f64puxkfibfshxdxv72dj4r5xbcakfc1i2\", \"oclozv5unlt7q169frgohx2j8djtbqu1dl3rgbb6g0e2ksgjo8x8zdejjge2zh97tahlv0meth8tw1hddiopwoikzrfpggt3xjquvq8paj\" ]\n    } ],\n    \"service\" : \"dz7sfdhvkljie8jaf0pqj6py5sofahzilka3gfcq8w01fmqnq74gv9ah1sqgfvg7wrv6nw9mo6ksrxes\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"b7b7ykdt5wlhvss7okpt893lpioqqqu54\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"kgawhioih66\", \"059a8bsej1zo1trp2n49a8d700z0gj70r211j2r00u7w7l9m2od79uqs42c7hqrwwl5zf0hm4m6w49ksi65f3g101m4pmj6w0i5u7wux8t6cupnfzvckbr9ts6piqqibjq3jlb2jfgr6t4u20117jvahgcktabxhkr9dn5xpuejvnjpnxklo5oxf67s\", \"ski386z7hkzniopguye5gsmcwm3c5hd4omkhjorusijwsgstwh6inlcpy1aht0618qnp6xx8lz0nrv3zizsksj8l192hd0pd9pamuszi74e1hh71gyuncl435j4k9imott290inkj3nlh025fi9wzwqjjqzxpy5azsnp2vfvsust6yiqixgjtkxlzml5ps\", \"odz8hokm17l5vqk9bimtzv8s5lkkjv1q5zikx9ldhupv2laj7zt1k49adqok7hkp9stodwjutquh9kujo5yirl5fr2vx60ek\", \"x01t0i2bxb25rcp20c5z9bg239qov52lly0euc2jzby1iqpwow6x8jpps7m12cx72wlrru2jn4k5p1muudvkw5sl4jrgajsyneravoh9xtc080r0j8iwlskj42v591ds1j5w22k38ja3zlker0t9fyu6f0z\", \"tk3y5og6o7am0aeal2tw9z7ko4rhchtuubntr7lyy1v6fs2397srxcwv916pg47b3wqt0ebfez57yqgppq0kgq5e9hktffasxw0d\", \"r33xs5a6pv7rdx3g4uqyxod006p9a4ffeksnhqqp9bgzwzfwsd7a2oahgfkgbrrufl52ynsk1n29rr37b9ltxvn9swpibxku2yqekp1ab99hgcfsentjectclbb92mb6u6vc6m99\" ]\n    } ],\n    \"service\" : \"rtps23qjseuqxfk2zb7takf9ah5owpmq4dxvpthtv92a6lxaj2olw4lwhdnn2o2rds0hwgsn4gn516you6bhd3lqwgbfj4iqmfa4cpu4i0o799xz6wawdvv9ai678ko27lck0whe9c97z0k7hnrzjinbvtu4gilswyxrx07pcw66npv1q\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"k7ifbgy9d5ljqqda4kaf4nhgw8mvpz8zmespe29ujg2k4kymsl2yyu8rdfao6tlnhk5uwb14wous91qglvzm5l8sfh31xbc8v\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"0uidus2abb38vhsoyc6xwk2zt2mrqedzs\", \"bojquq2nhtfq13rnhgm2apl7pxhgg9hheqy8amzaqjj9vwdupyjkemw2smkpex3gw59vj4x5cjlumcq0j6qowju59abyoit2q46us9x6vsuwj826305idlkd2duewdfesr3p5dqqyy8ndvwgwxmr\", \"b60fhncmeldwurc5bifqqr5ow037jsult2zc9xnman1m4veugyvt4qi7eefcnu98f7yefqbcymxwqhq95phnknp2m44apsrd287eg5c9crp3cdo8ndq\", \"n9jtx9p9z5amhpemqgo3hc38r3sbjuabmj356k\", \"gkr4zjutpexqo\", \"k1udn6zfnp22r91rxscz7yevtwgo7og5y6qkgw185ktzym15wxq9sn3oy8f1ooh2z5ziu9rgiu996nevbbao7o2epy25t7drmmw8o8rtnssk40u2mtpymepyc4lvhzjy3uylcbrav4cqfsqref30vead6o3jxp\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"3izmr36h7jqmpg35vwuu01m52vcux6z3mcplrrjk4ww32nyvjrt9im8eyet3fgxe8d6wsv3f4yyoi4c1pkplcueo0khme5ot6z3mjcsmo91ytixhfbza59k906jryp02rt388dg5dmg4zad\", \"y6zsekenippeb49tlqvr23ss0ojdvd0m4vyahk9ewewwkhdufcjouovfrxo0lmdhf8gryv06tx8tnffh05pa1mo9yu9le1ppamrn0cczssuz08f3zsms08oixy14oeq1fgipclhx8apw4uda6i5b2cv2l2bof\", \"8o3jj2t5nhr259\" ]\n    } ],\n    \"service\" : \"xzgv44f05q9nvpny406u0ycawl4n435norkk6n8shgga1z7nnowj6cc4s90anpxkzbse0kwseuv81381k5m0yl97ffjx\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b3b9fd07-66cd-39de-9b4b-cde1f6315e98",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "bigtableadmin.projects.instances.tables.getIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "auditConfigs" : {
                "description" : "Specifies cloud audit logging configuration for this policy.",
                "items" : {
                  "$ref" : "#/components/schemas/AuditConfig"
                },
                "type" : "array"
              },
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "e9d92f7d-2c83-3017-bd9d-0f35d72d9d56",
    "name" : "Create a new table by restoring from a completed backup. The returned table long...",
    "request" : {
      "urlPath" : "/v2/780b257z1domi97morxpwwnblxubeoi0eth079364azdhxlxixkychwjb2oedfuz0y72fgqhbgpwho3l5l6zljh3zqjt2fbp0qvratre92ux8b0i3zxp/tables:restore",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Ginette Abernathy\",\n  \"error\" : {\n    \"code\" : 1544921491,\n    \"details\" : [ { }, { }, { }, { }, { } ],\n    \"message\" : \"Dolor amet ut nihil. Quasi temporibus error. Odio aperiam voluptas vitae temporibus sequi suscipit nulla. Fugiat quo et blanditiis sit.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e9d92f7d-2c83-3017-bd9d-0f35d72d9d56",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "bigtableadmin.projects.instances.tables.restore",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "d71edb4a-74ac-3ae4-ac2e-a2a0d51de32a",
    "name" : "Creates a new table in the specified instance. The table can be created with a f...",
    "request" : {
      "urlPath" : "/v2/7wzkwncya0unkoss4ap1vpolqmllhphz6mf2ryoeypmuhazuebh5h56nuckpfaze9urwrlt4ak7jdcwbr4f3nhfnl3rb1rzmo5r3fhi5ljllqomwi8mj8ydz3rtxznct9xjppqohhxjoiuhtc9rx4e775wxalrjh1j70k620iyiksxedxtemak21/tables",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"stats\" : {\n    \"averageCellsPerColumn\" : 1.205312187279812E308,\n    \"logicalDataBytes\" : \"3um2unqicr4ml9g1ty3qzijhd8u4l34rouw67ydsqxjjdraamqxcfespyucsq7f7qet3uq9buoers7zyxk9xs2gtqrn1x3qo8v4xxvi88x8es4163k569tndusx6uzij3029bkxnfmxz77e0nruvgmidtk\",\n    \"rowCount\" : \"yh9q8gikhbhkf1k8mdg27ypioo94v8z4kgmakjuqwy3g33aedl4i5y83b51t\",\n    \"averageColumnsPerRow\" : 1.5095469918286148E308\n  },\n  \"granularity\" : \"TIMESTAMP_GRANULARITY_UNSPECIFIED\",\n  \"name\" : \"Micheal Anderson\",\n  \"restoreInfo\" : {\n    \"sourceType\" : \"RESTORE_SOURCE_TYPE_UNSPECIFIED\",\n    \"backupInfo\" : {\n      \"backup\" : \"y93bshbfcwa5k5eo91zzc7wubwy1x2xpnnhlcqayyevzvv55rmm3uhh2qoxc3m5vvc352l1ezf55uqxok4bcd5b294zxje884bjvfnrmikfi8ns5i\",\n      \"sourceTable\" : \"9fjl19xgvh5dekv9hibxwjiz4gpa2ep7yw4drt8pvy\",\n      \"startTime\" : \"2023-02-28T14:21:07.136743Z\",\n      \"endTime\" : \"2022-07-31T13:19:07.136773Z\",\n      \"sourceBackup\" : \"ztwnzxjqt8n4tdzly9li6ekti99vdor19e9tu0zb6ssw1viy6s9etcardb5gityarsoghukow34rc3t4we41zk9rzwiiv4266slgqk10k8jcdv0mx4skwq0lap0vlqz8mcs6lefx2jdnkcu2903ed5j9gvnl3zj2fqp6cwhp9o6duab7g8q84ujvewbg\"\n    }\n  },\n  \"columnFamilies\" : { },\n  \"clusterStates\" : { },\n  \"deletionProtection\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d71edb4a-74ac-3ae4-ac2e-a2a0d51de32a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "bigtableadmin.projects.instances.tables.create",
          "schema" : {
            "description" : "A collection of user data indexed by row, column, and timestamp. Each table is served using the resources of its parent cluster.",
            "properties" : {
              "clusterStates" : {
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/ClusterState"
                },
                "description" : "Output only. Map from cluster ID to per-cluster table state. If it could not be determined whether or not the table has data in a particular cluster (for example, if its zone is unavailable), then there will be an entry for the cluster with UNKNOWN `replication_status`. Views: `REPLICATION_VIEW`, `ENCRYPTION_VIEW`, `FULL`",
                "readOnly" : true,
                "type" : "object"
              },
              "columnFamilies" : {
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/ColumnFamily"
                },
                "description" : "The column families configured for this table, mapped by column family ID. Views: `SCHEMA_VIEW`, `STATS_VIEW`, `FULL`",
                "type" : "object"
              },
              "deletionProtection" : {
                "description" : "Set to true to make the table protected against data loss. i.e. deleting the following resources through Admin APIs are prohibited: * The table. * The column families in the table. * The instance containing the table. Note one can still delete the data stored in the table through Data APIs.",
                "type" : "boolean"
              },
              "granularity" : {
                "description" : "Immutable. The granularity (i.e. `MILLIS`) at which timestamps are stored in this table. Timestamps not matching the granularity will be rejected. If unspecified at creation time, the value will be set to `MILLIS`. Views: `SCHEMA_VIEW`, `FULL`.",
                "enum" : [ "TIMESTAMP_GRANULARITY_UNSPECIFIED", "MILLIS" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The unique name of the table. Values are of the form `projects/{project}/instances/{instance}/tables/_a-zA-Z0-9*`. Views: `NAME_ONLY`, `SCHEMA_VIEW`, `REPLICATION_VIEW`, `STATS_VIEW`, `FULL`",
                "type" : "string"
              },
              "restoreInfo" : {
                "$ref" : "#/components/schemas/RestoreInfo"
              },
              "stats" : {
                "$ref" : "#/components/schemas/TableStats"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "76c697ef-78ce-3e77-96af-c7574eb44953",
    "name" : "Lists all tables served from a specified instance.",
    "request" : {
      "urlPath" : "/v2/yd6qsxwic8mnszchsb1kblrhkifajv23rni6tkewf0ylskrpe8/tables",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"tables\" : [ {\n    \"stats\" : {\n      \"averageCellsPerColumn\" : 1.4732976623671556E308,\n      \"logicalDataBytes\" : \"4rq2g9yhikjyoqiv17a6qaao5mx0zh1492l38gmtlrl573qoyvor\",\n      \"rowCount\" : \"filxtvqtekqpgcugbw9kd6lp9b4y4iqx9odp3iy72e32bffwtstbcg50potncu4wvjlmcrv3jcqga1q7smz3ta8nj4e4o8lgw17k28xa803c3vjaxi5q91zrtcvrfvcf202xhqpg6gt9p9n9s4y\",\n      \"averageColumnsPerRow\" : 1.9383399068022146E307\n    },\n    \"granularity\" : \"TIMESTAMP_GRANULARITY_UNSPECIFIED\",\n    \"name\" : \"Norberto Sporer\",\n    \"restoreInfo\" : {\n      \"sourceType\" : \"RESTORE_SOURCE_TYPE_UNSPECIFIED\",\n      \"backupInfo\" : {\n        \"backup\" : \"9q68zm9te94eailh1favcq2v8btw79satzbqunkw75xayvmr6us91xywgxz39osukc0vmgqwh3zx5tuy5ytjxmibnz60aztlr5hwcnxbe22dbpxmkdar2eq8o4wgppf78uw8glaurltenuaq\",\n        \"sourceTable\" : \"loll7i8qymy3dh6lx8qjlwy71nsz2n314nhj64h2jm32mwznl0wf4khccef57jqhmhullrqc4is1s1tne1c8svew580y6g8fyazegc0k9unku1szrbrqhqq1bg8d3h6yibw3pm\",\n        \"startTime\" : \"2022-03-29T14:13:07.134818Z\",\n        \"endTime\" : \"2022-09-25T14:02:07.134853Z\",\n        \"sourceBackup\" : \"yjn6rp0k9txdudnzzlfijgmldjkcyibcs5gsjxt0p36lwoq5tt2ptjlk1n4yqn4w6nqf34j1ppdfopzno8sjs0b3f3riioa7v0xdy4m5a1tlcnickngpmzdf3khm8xv58iox2\"\n      }\n    },\n    \"columnFamilies\" : { },\n    \"clusterStates\" : { },\n    \"deletionProtection\" : true\n  }, {\n    \"stats\" : {\n      \"averageCellsPerColumn\" : 5.936419395196599E307,\n      \"logicalDataBytes\" : \"g41a76ol8pyx5enomnyx27ha0os0eafx4pzhvqxhar6tnpjfz0ot0qw4gg8cqqq1wuujc5vaxq74fg5hsit6x66egcshr0om6gd4zzmtbnm8ue41wkjru6364a3flg2ihxsv8bapfhajk5\",\n      \"rowCount\" : \"0kwytglibafo1liupz3x2h4b55rvzjc6ndz3iwijd3b76fic8279pxjwtpa69dgxm2snddbd4ptrmaoswq27kfww8ixs8yngw2no5tcdf0mtmpybpzp0jabf4i1z0hau99bmstqtfmalsuej4533isc6ox5\",\n      \"averageColumnsPerRow\" : 1.1199099098587634E308\n    },\n    \"granularity\" : \"TIMESTAMP_GRANULARITY_UNSPECIFIED\",\n    \"name\" : \"Karl Wolf\",\n    \"restoreInfo\" : {\n      \"sourceType\" : \"RESTORE_SOURCE_TYPE_UNSPECIFIED\",\n      \"backupInfo\" : {\n        \"backup\" : \"65jz25p1qnulmm9sgqsf9kfxvoah6wxcad41vd2t48zhob2su2smzebp7g70gtemw7pybdyl44lsgm8dhfq1p6pk09ap0iawg4c90a6vzjfnkqu034cp0kgqmv875vsdqqjzgr5mwdxp4fthddoln\",\n        \"sourceTable\" : \"i6fyrgqa56c4f51t9lygrydgbln8k0jeoh5e85nzng76qx2mw79xvo\",\n        \"startTime\" : \"2022-05-19T13:44:07.135047Z\",\n        \"endTime\" : \"2022-06-12T16:51:07.135078Z\",\n        \"sourceBackup\" : \"nhil9cwqo4pdxfm7laj6stayv9te36em90itb2zkt2kh9ovqhi3gvtlc36r6s833hxq13wya97ja97yjqm4yqnkxsc8v7dnsntxrejsywsq9sn0yiia5h4acion2nxq2rnvvvzm2m3msu9c6eqxvp7d\"\n      }\n    },\n    \"columnFamilies\" : { },\n    \"clusterStates\" : { },\n    \"deletionProtection\" : false\n  }, {\n    \"stats\" : {\n      \"averageCellsPerColumn\" : 3.7942771512481845E307,\n      \"logicalDataBytes\" : \"1hw469g8903pniojy4krlbehf4tcmnv2j2iv41rhbsmaz5dbtkid4to6yiulfq6c521c12cngthxeug42uo34ca1zqg0q7r94ffnpr8l12jw2rnmyeqh9mwv9uy0vld6nrm94p6\",\n      \"rowCount\" : \"sqrsf0whwkxudaq6r7or07mnikpuhk2d2efh3u7xovom9jrz06h6ufcbll6icdozm6rq5yfxnzso9uac4bygtzeskgnb0fdcns91mvwtpmilbobqbg1lwv8jgsjkdmjgmdri0hu5\",\n      \"averageColumnsPerRow\" : 9.069241048138868E307\n    },\n    \"granularity\" : \"TIMESTAMP_GRANULARITY_UNSPECIFIED\",\n    \"name\" : \"Venessa Schiller\",\n    \"restoreInfo\" : {\n      \"sourceType\" : \"RESTORE_SOURCE_TYPE_UNSPECIFIED\",\n      \"backupInfo\" : {\n        \"backup\" : \"4j495hcbao0h4pafx7j5h0j6ak4yonkf2b4wyckv05x5z8l9ti9xlxz9imj2ijd2qe0o5clqty8otukzxyme4xmt4bavl4ydb0uxa6898fo8624idfl9rh90axds953dadc351jwyjiritz5384rz4j8k1wemy4xykoryycmakastasyi\",\n        \"sourceTable\" : \"fj8edd1vawi7evwqum46sh539joh2jctv8j72ullbg3dkjzke\",\n        \"startTime\" : \"2022-09-03T16:03:07.13527Z\",\n        \"endTime\" : \"2022-03-27T15:25:07.135301Z\",\n        \"sourceBackup\" : \"fact7p0p4c748mg8vgm5viuma1jm8wvno5mlq8q575iahzve0x0b2pxo0t4m3\"\n      }\n    },\n    \"columnFamilies\" : { },\n    \"clusterStates\" : { },\n    \"deletionProtection\" : false\n  }, {\n    \"stats\" : {\n      \"averageCellsPerColumn\" : 1.3968839191694652E308,\n      \"logicalDataBytes\" : \"96r96cs9o9gr0kg66guhgatwyle8e063u20uuvv5wzxd2uzwdnm5omb29wzo6heu9e0r1waav67vwullyg822tdvu2feka5aroo2ri6pngmmj9b8u13hyk8hh6uy0swysix60ff2a7ihi7kf8ghmqavuy889bqv8wnhkl1w1lhrx1op8jc930c3g0t52s6\",\n      \"rowCount\" : \"bjztjzqhvkdvw3g8w56jtzps1wc7e\",\n      \"averageColumnsPerRow\" : 4.321563949701662E306\n    },\n    \"granularity\" : \"MILLIS\",\n    \"name\" : \"Normand Kozey\",\n    \"restoreInfo\" : {\n      \"sourceType\" : \"BACKUP\",\n      \"backupInfo\" : {\n        \"backup\" : \"4st57flg5ftw31g2fd2mpvieejdinoyz4zztb7dhkl510o5es7hzcjdn4kctphrxpwaw6coc2htal3k\",\n        \"sourceTable\" : \"wjdeub989rgz0p46axh60s02mez0hhb0n8wkfokws37vdizuv9g0jzdc48tjocd6nwrwxfv4mryjks0xsvomp4c0u9zsohajl16ykevuda7impj2bg7mrpmow5ovp3ghbjlolrgxu52xuekd2rxa83jfe9l7yg9uz0t4\",\n        \"startTime\" : \"2022-05-02T15:18:07.13549Z\",\n        \"endTime\" : \"2022-04-05T15:01:07.135519Z\",\n        \"sourceBackup\" : \"khhiwv26\"\n      }\n    },\n    \"columnFamilies\" : { },\n    \"clusterStates\" : { },\n    \"deletionProtection\" : false\n  }, {\n    \"stats\" : {\n      \"averageCellsPerColumn\" : 1.7719533939374125E308,\n      \"logicalDataBytes\" : \"ou6ekcd1rrym4wxujvnzs7727m3y3ti4us00jkxafr6yw6l9cegcac98wyl9ew3lu9go6k25amiczgro16t1jn6yzlsdk20nxhbvtq03oph6u687m\",\n      \"rowCount\" : \"xx48wmk1gc78quplsxnhjpbeeqi0n0pzw6c26t2qpbncfsw1451keg96z46946uruisb0jlq3aroqy4ygajz\",\n      \"averageColumnsPerRow\" : 9.082658234534917E306\n    },\n    \"granularity\" : \"MILLIS\",\n    \"name\" : \"Shaunna Hoeger\",\n    \"restoreInfo\" : {\n      \"sourceType\" : \"RESTORE_SOURCE_TYPE_UNSPECIFIED\",\n      \"backupInfo\" : {\n        \"backup\" : \"7uyosh0\",\n        \"sourceTable\" : \"0kw2z1qd3dpcddw6he0y\",\n        \"startTime\" : \"2023-02-23T13:40:07.1357Z\",\n        \"endTime\" : \"2022-04-09T13:30:07.135731Z\",\n        \"sourceBackup\" : \"2cqggrbynv9ccpw89kttpmvy79eevyfqnpq8ayt5j8qplllesu4r0lagl1fcmdxqo6uu7uejpesi7oayxydpp83o70nvx9bydl51u58uc3vsb2w2b3bbxr2iw6x3f6vlbwfe1dlo4pxu9r30otakc6a7w1p7hohj0jww476b9kki0nysrhqt9p5tr7rk2zf4dt\"\n      }\n    },\n    \"columnFamilies\" : { },\n    \"clusterStates\" : { },\n    \"deletionProtection\" : true\n  }, {\n    \"stats\" : {\n      \"averageCellsPerColumn\" : 1.611764075589474E308,\n      \"logicalDataBytes\" : \"if807jbv1fx72xsxz4cphc05jt21i2v2u5wxqo0noiqn6xnt0sxhrynnv\",\n      \"rowCount\" : \"rt3a9jq94v9j9m47npsplrttfighaz5qy8jx8pv052rfq93c872zgi333rtv39exda4dvtc9kmzlcfrtuwkhkte5p7dtbpzhg121b481jb1cvx7fuawcopb82mabi6awy4hpvqw5rx1w0ix0cvn6lt4tygn7x9c11b9m7u7voh7i1ndhkptzljxete7knh7jr3r7blfk\",\n      \"averageColumnsPerRow\" : 8.9443468927259E307\n    },\n    \"granularity\" : \"MILLIS\",\n    \"name\" : \"Miss Ngoc Adams\",\n    \"restoreInfo\" : {\n      \"sourceType\" : \"RESTORE_SOURCE_TYPE_UNSPECIFIED\",\n      \"backupInfo\" : {\n        \"backup\" : \"bdqj7j4ukd6a22a5sndkx1v2lppcr74t4slj21v5gxpkqclpxj2phof7frh7qvzhmqh10n6ap6nyqf9hpl6myed2tnd08mhmc41z6ioz8\",\n        \"sourceTable\" : \"57q\",\n        \"startTime\" : \"2022-06-18T13:16:07.135914Z\",\n        \"endTime\" : \"2022-09-20T16:54:07.135945Z\",\n        \"sourceBackup\" : \"yytoiqzp11qfd5sj4awbh4hiyxlo3zl01p6shpyddbld1s7ds9v1qvjb6k3a950hlkx8l9\"\n      }\n    },\n    \"columnFamilies\" : { },\n    \"clusterStates\" : { },\n    \"deletionProtection\" : false\n  }, {\n    \"stats\" : {\n      \"averageCellsPerColumn\" : 1.0375345051047943E308,\n      \"logicalDataBytes\" : \"12tsddp\",\n      \"rowCount\" : \"c0m1uflffpj8ge244mr3j8hwrpn877tmfubwaxqtwxoatwj8z5lf40z1i3gj4ua1y80a6766fe777yc7sirk39r\",\n      \"averageColumnsPerRow\" : 1.1146852177828077E308\n    },\n    \"granularity\" : \"TIMESTAMP_GRANULARITY_UNSPECIFIED\",\n    \"name\" : \"Lyle Hettinger MD\",\n    \"restoreInfo\" : {\n      \"sourceType\" : \"RESTORE_SOURCE_TYPE_UNSPECIFIED\",\n      \"backupInfo\" : {\n        \"backup\" : \"7mknp88vkdmgzrad3lgtrfyput105gytf44ikpq4rhi0o65palrvvo0osr954uheqo8rrvd32lgvica76zdiwd1n16hduk4ff84xcf8r5t68glgwzioerx8mr7436kbpwo4d990esd24nwsks\",\n        \"sourceTable\" : \"bobm21wp74ys0nm8unvtudwh8vb4o8ysa0019pklxirhjiojtex07hcco1cyvqa6fvolxd1rpw4w31rhtuggbazzic9p1nqyax7om43opi87591kpbr31kdu9yxtwfijcan1fvu3s1fiwhwix5mz20aj5mqm\",\n        \"startTime\" : \"2022-06-11T15:28:07.136133Z\",\n        \"endTime\" : \"2022-09-03T17:01:07.136164Z\",\n        \"sourceBackup\" : \"qndp9ikn7qeyedtyk5a7rs4x7c5jdtr8jmo4qzzgfpc5u0yng\"\n      }\n    },\n    \"columnFamilies\" : { },\n    \"clusterStates\" : { },\n    \"deletionProtection\" : false\n  }, {\n    \"stats\" : {\n      \"averageCellsPerColumn\" : 1.3331315299098194E307,\n      \"logicalDataBytes\" : \"9m4t0bdjxfi9\",\n      \"rowCount\" : \"os8ryrua357v05m6zta87kmhsp\",\n      \"averageColumnsPerRow\" : 1.2937151364240253E308\n    },\n    \"granularity\" : \"TIMESTAMP_GRANULARITY_UNSPECIFIED\",\n    \"name\" : \"Ms. Sharri Leuschke\",\n    \"restoreInfo\" : {\n      \"sourceType\" : \"RESTORE_SOURCE_TYPE_UNSPECIFIED\",\n      \"backupInfo\" : {\n        \"backup\" : \"j7i6ceiu9dqq2b3vlf70jn\",\n        \"sourceTable\" : \"d6qzz3j1bhkxsdch7izsmr256f\",\n        \"startTime\" : \"2023-03-05T16:12:07.136348Z\",\n        \"endTime\" : \"2022-08-03T15:28:07.136377Z\",\n        \"sourceBackup\" : \"l05qgbrnc5oq2fl50p2bch6ed3djof9o6fpokc6vn9blybj1z\"\n      }\n    },\n    \"columnFamilies\" : { },\n    \"clusterStates\" : { },\n    \"deletionProtection\" : false\n  } ],\n  \"nextPageToken\" : \"jklw51a0w720pb3jrzjokktrysoz5npye47c6crq65yk6mlb31o1ak3qc8hn9yqmywsems278tain\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "76c697ef-78ce-3e77-96af-c7574eb44953",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "bigtableadmin.projects.instances.tables.list",
          "schema" : {
            "description" : "Response message for google.bigtable.admin.v2.BigtableTableAdmin.ListTables",
            "properties" : {
              "nextPageToken" : {
                "description" : "Set if not all tables could be returned in a single response. Pass this value to `page_token` in another request to get the next page of results.",
                "type" : "string"
              },
              "tables" : {
                "description" : "The tables present in the requested instance.",
                "items" : {
                  "$ref" : "#/components/schemas/Table"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "3ce376dd-9530-3ca1-bd04-c80d7b129877",
    "name" : "Create an instance within a project. Note that exactly one of Cluster.serve_node...",
    "request" : {
      "urlPath" : "/v2/a2sonx3myvgjtl2cily6zdgkfkuhq2bpww51631ya9kpnqoqawz98e1m/instances",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Buford Mayer\",\n  \"error\" : {\n    \"code\" : 1294647385,\n    \"details\" : [ { } ],\n    \"message\" : \"Libero non optio ex. Aut porro velit provident quae maxime optio. Non quia est omnis quis dolores. Repellat enim aut. Qui consequuntur omnis voluptas nemo consequatur necessitatibus.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3ce376dd-9530-3ca1-bd04-c80d7b129877",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "bigtableadmin.projects.instances.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "3857e0a2-5ab1-322e-b64d-5abd9ecabcc2",
    "name" : "Lists information about instances in a project.",
    "request" : {
      "urlPath" : "/v2/xhnji5eb0ei0mpkh7zfh5ed2p6dk72hgdqwrwimejjdbgy1x53me0npe0990kfhtpc4xwkseqcjxqto8hsjicq5p1qjdf8smqradgzu5vbthjphhsocm8pgsrom6d5s5r1717ymm6gf/instances",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"instances\" : [ {\n    \"createTime\" : \"2022-07-22T14:45:07.133612Z\",\n    \"displayName\" : \"Roosevelt Gutkowski\",\n    \"name\" : \"Carmon Yost\",\n    \"satisfiesPzs\" : false,\n    \"state\" : \"READY\",\n    \"type\" : \"DEVELOPMENT\",\n    \"labels\" : { }\n  }, {\n    \"createTime\" : \"2022-04-05T16:30:07.133759Z\",\n    \"displayName\" : \"Annabell Torphy\",\n    \"name\" : \"Reynaldo Wunsch Jr.\",\n    \"satisfiesPzs\" : false,\n    \"state\" : \"CREATING\",\n    \"type\" : \"TYPE_UNSPECIFIED\",\n    \"labels\" : { }\n  }, {\n    \"createTime\" : \"2022-10-27T14:34:07.133892Z\",\n    \"displayName\" : \"Joycelyn Spinka Jr.\",\n    \"name\" : \"Dr. Benito Ferry\",\n    \"satisfiesPzs\" : true,\n    \"state\" : \"CREATING\",\n    \"type\" : \"PRODUCTION\",\n    \"labels\" : { }\n  }, {\n    \"createTime\" : \"2022-08-12T16:43:07.134025Z\",\n    \"displayName\" : \"Raye Kohler\",\n    \"name\" : \"Teodoro Rolfson\",\n    \"satisfiesPzs\" : false,\n    \"state\" : \"CREATING\",\n    \"type\" : \"DEVELOPMENT\",\n    \"labels\" : { }\n  }, {\n    \"createTime\" : \"2022-07-16T14:02:07.134151Z\",\n    \"displayName\" : \"Laquanda Kshlerin\",\n    \"name\" : \"Mr. Branden Ondricka\",\n    \"satisfiesPzs\" : false,\n    \"state\" : \"CREATING\",\n    \"type\" : \"TYPE_UNSPECIFIED\",\n    \"labels\" : { }\n  } ],\n  \"nextPageToken\" : \"5kt45e5nxek0nxc4zac6zdf0rpjkug408ygnw10c13ouf7cbteb36f2gwdmsgsmjgwor8qv69isx3\",\n  \"failedLocations\" : [ \"0l3u4m45x2v7svtdo48pbum4e4c0jdu9ihd83rfsj2rhee0e6rse7hpzw64wn9ni6zwedx9902rlg73ja5sa4reo199s5shxukahqoxqhd6afim9jtgdf3z6oqz8q4xepz7db0l26odx33wbcgxbsvudofjfijje2051gsjtn2qtnqrdfoajipspzr8\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3857e0a2-5ab1-322e-b64d-5abd9ecabcc2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "bigtableadmin.projects.instances.list",
          "schema" : {
            "description" : "Response message for BigtableInstanceAdmin.ListInstances.",
            "properties" : {
              "failedLocations" : {
                "description" : "Locations from which Instance information could not be retrieved, due to an outage or some other transient condition. Instances whose Clusters are all in one of the failed locations may be missing from `instances`, and Instances with at least one Cluster in a failed location may only have partial information returned. Values are of the form `projects//locations/`",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "instances" : {
                "description" : "The list of requested instances.",
                "items" : {
                  "$ref" : "#/components/schemas/Instance"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "DEPRECATED: This field is unused and ignored.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "4b7e4503-279c-3d5c-b01b-f1e8c0d6f0be",
    "name" : "Lists hot tablets in a cluster, within the time range provided. Hot tablets are ...",
    "request" : {
      "urlPath" : "/v2/3zdcyod1ykqhc4u7xreke12pr33da5whhrkl5gncupj6w2nmgeh6xjeh3l3fe9t9qgwhie5z6pv6899gsdrs8hvqgvbylt4zh99nkdufm/hotTablets",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"hotTablets\" : [ {\n    \"startKey\" : \"vtl9lvp2rqcbc2bg8xzsk97artqsqr00ykdyfst3gazfebzqyjux8cypqnn56fqk81dj8u4t9nvtjqwdyfzcw2ufg131dr3kr3px8e674nw5z4p217zxg1mjhwro9rhcy2i2rv2ao0jpk5ptlim1664y9uifqpcvx9f8s\",\n    \"endKey\" : \"3xxm1blvgllyfkzup89jq4j97fhbjba4q3zm2g5yu0torob2jcj085k1hmals8yn4dxevcn9xsw43vtt3tws1asfmcrvt2ng63h7tzfm9e9461xowhvaw3kpa6dz9i82g2yn6d8fpo469w04jjq252v18y2wh4i7qcwh49iee0gime6nsb\",\n    \"name\" : \"Nathanael Lehner Sr.\",\n    \"startTime\" : \"2022-11-02T15:09:07.13338Z\",\n    \"endTime\" : \"2023-02-19T16:18:07.13341Z\",\n    \"nodeCpuUsagePercent\" : 2.928126468343804E38,\n    \"tableName\" : \"Henry Mraz\"\n  } ],\n  \"nextPageToken\" : \"p0gaicoj16ruhvm7lsrxolgut5upin0hvwsec726nehenmjo7f8tzny47h31tacdzqvvq5\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4b7e4503-279c-3d5c-b01b-f1e8c0d6f0be",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "bigtableadmin.projects.instances.clusters.hotTablets.list",
          "schema" : {
            "description" : "Response message for BigtableInstanceAdmin.ListHotTablets.",
            "properties" : {
              "hotTablets" : {
                "description" : "List of hot tablets in the tables of the requested cluster that fall within the requested time range. Hot tablets are ordered by node cpu usage percent. If there are multiple hot tablets that correspond to the same tablet within a 15-minute interval, only the hot tablet with the highest node cpu usage will be included in the response.",
                "items" : {
                  "$ref" : "#/components/schemas/HotTablet"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "Set if not all hot tablets could be returned in a single response. Pass this value to `page_token` in another request to get the next page of results.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "f16da827-681b-3aae-a95f-7db37bc98db0",
    "name" : "Creates a cluster within an instance. Note that exactly one of Cluster.serve_nod...",
    "request" : {
      "urlPath" : "/v2/51hybura2o7jwrn20zdi6ciim88p3rqukd2em6yq67oex7hwytqvnkbos73q48seaj3qy8h3m1juwiskpo966l84vmi6mrcp7jd1e9v7lejjx2uc472yh7zijz48nnij6a8j4wfs8f9so5xpzi74i5bap4v5tuek/clusters",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Dr. Giuseppina Emmerich\",\n  \"error\" : {\n    \"code\" : 759388761,\n    \"details\" : [ { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Aliquam quia laboriosam delectus consequatur nobis. Voluptatibus sapiente quisquam ratione eos eum. Et eos cumque. Corrupti laborum ullam nesciunt qui repellendus nihil unde. Dicta cupiditate neque.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f16da827-681b-3aae-a95f-7db37bc98db0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "bigtableadmin.projects.instances.clusters.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "9c5fcddd-9f16-3b60-8dd3-c22051c83408",
    "name" : "Lists information about clusters in an instance.",
    "request" : {
      "urlPath" : "/v2/b506h1toqbf5a9zr67ut66vheho2y4l4jfozy4nzcdxo61jckhsyz2v3eu1fmcczr/clusters",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"hte0129007te48lwwfjcw1ljorxnje1aihd9nedj253qr4bcig6wftckdteeijcrd0hk5zlx2xgt3o1jf1o6w\",\n  \"failedLocations\" : [ \"tbsfqr9n7myze1d403ubl0v382ajutpnmu3bic3408e04vehvau5ppett57chadgxx80cf1piqqfl09qfz3vqgodfpzy15fja9ezca\", \"fhjsvgwilo\", \"nmirmciyib8dmnyul99h0k900sbpeaqoyijtx\" ],\n  \"clusters\" : [ {\n    \"encryptionConfig\" : {\n      \"kmsKeyName\" : \"Barrie Baumbach IV\"\n    },\n    \"clusterConfig\" : {\n      \"clusterAutoscalingConfig\" : {\n        \"autoscalingLimits\" : {\n          \"maxServeNodes\" : 1010711741,\n          \"minServeNodes\" : 1360583713\n        },\n        \"autoscalingTargets\" : {\n          \"cpuUtilizationPercent\" : 5355254,\n          \"storageUtilizationGibPerNode\" : 1149270959\n        }\n      }\n    },\n    \"name\" : \"Johnetta Kuhlman\",\n    \"serveNodes\" : 1797315766,\n    \"location\" : \"6ngxt274nxpw8snrhtzp80du8by47vtmb8e71f1vzypu986thggxvuobs1qa5v5qs28iafilg3h\",\n    \"state\" : \"READY\",\n    \"defaultStorageType\" : \"STORAGE_TYPE_UNSPECIFIED\"\n  }, {\n    \"encryptionConfig\" : {\n      \"kmsKeyName\" : \"Monserrate Kuvalis\"\n    },\n    \"clusterConfig\" : {\n      \"clusterAutoscalingConfig\" : {\n        \"autoscalingLimits\" : {\n          \"maxServeNodes\" : 1199068472,\n          \"minServeNodes\" : 20892796\n        },\n        \"autoscalingTargets\" : {\n          \"cpuUtilizationPercent\" : 1230778445,\n          \"storageUtilizationGibPerNode\" : 1744702428\n        }\n      }\n    },\n    \"name\" : \"Donnie Huels\",\n    \"serveNodes\" : 1206035006,\n    \"location\" : \"vc5yj1uah7z35egygtynxbam3s0gdzlmlf16q9g7otwv2tcwoqhzz2ixvltt8ttjc4bzksi6uxrqsnhxwcmv7eoxrer69ogttbee3l0ue007es81mtrq16z0ccdo1ta4i4q28du\",\n    \"state\" : \"DISABLED\",\n    \"defaultStorageType\" : \"SSD\"\n  }, {\n    \"encryptionConfig\" : {\n      \"kmsKeyName\" : \"Clair Crist\"\n    },\n    \"clusterConfig\" : {\n      \"clusterAutoscalingConfig\" : {\n        \"autoscalingLimits\" : {\n          \"maxServeNodes\" : 187198427,\n          \"minServeNodes\" : 1886112056\n        },\n        \"autoscalingTargets\" : {\n          \"cpuUtilizationPercent\" : 117529,\n          \"storageUtilizationGibPerNode\" : 2083430944\n        }\n      }\n    },\n    \"name\" : \"Dominique Keeling\",\n    \"serveNodes\" : 1900299477,\n    \"location\" : \"q4vnqwseya12c9ijud8e8diwym\",\n    \"state\" : \"STATE_NOT_KNOWN\",\n    \"defaultStorageType\" : \"HDD\"\n  }, {\n    \"encryptionConfig\" : {\n      \"kmsKeyName\" : \"Everett Weissnat\"\n    },\n    \"clusterConfig\" : {\n      \"clusterAutoscalingConfig\" : {\n        \"autoscalingLimits\" : {\n          \"maxServeNodes\" : 222398397,\n          \"minServeNodes\" : 1093775422\n        },\n        \"autoscalingTargets\" : {\n          \"cpuUtilizationPercent\" : 395751688,\n          \"storageUtilizationGibPerNode\" : 172491817\n        }\n      }\n    },\n    \"name\" : \"Tiera McKenzie\",\n    \"serveNodes\" : 1824776015,\n    \"location\" : \"x4kqx0mb0p0gqtpjrjvnbl5qag4wfug14vcibcs0wl6vu8nv1jpy27l6bgd59iomqxppphzgqcye4aoy1kq6k9ldqha3rbejle8vnchcgc15ky7vwhzfg9mglzgvhrxx8xogjs86c3a01ce7g70l0hu2bcyhz\",\n    \"state\" : \"STATE_NOT_KNOWN\",\n    \"defaultStorageType\" : \"SSD\"\n  }, {\n    \"encryptionConfig\" : {\n      \"kmsKeyName\" : \"Brinda Ankunding\"\n    },\n    \"clusterConfig\" : {\n      \"clusterAutoscalingConfig\" : {\n        \"autoscalingLimits\" : {\n          \"maxServeNodes\" : 259400378,\n          \"minServeNodes\" : 2058576759\n        },\n        \"autoscalingTargets\" : {\n          \"cpuUtilizationPercent\" : 1088927305,\n          \"storageUtilizationGibPerNode\" : 1530221474\n        }\n      }\n    },\n    \"name\" : \"Elmer Berge\",\n    \"serveNodes\" : 2069469212,\n    \"location\" : \"4bhbrjq\",\n    \"state\" : \"CREATING\",\n    \"defaultStorageType\" : \"STORAGE_TYPE_UNSPECIFIED\"\n  }, {\n    \"encryptionConfig\" : {\n      \"kmsKeyName\" : \"Enrique Kessler\"\n    },\n    \"clusterConfig\" : {\n      \"clusterAutoscalingConfig\" : {\n        \"autoscalingLimits\" : {\n          \"maxServeNodes\" : 904380420,\n          \"minServeNodes\" : 929652894\n        },\n        \"autoscalingTargets\" : {\n          \"cpuUtilizationPercent\" : 1140648450,\n          \"storageUtilizationGibPerNode\" : 1045721764\n        }\n      }\n    },\n    \"name\" : \"Jess Mayert\",\n    \"serveNodes\" : 534665039,\n    \"location\" : \"ep72s3gethwtqz5it14ap9vro6kp38r9p40tmvxuj7ztzj5dc8xr4q80kthwgxi0d8edvujo2o8f9uniu0a7h4bkj5aj3bvombuzoo0k303f3plaf32rsuodvh4qu3gl0o3t9su23r126n1xrupa8l3lwjj969f\",\n    \"state\" : \"RESIZING\",\n    \"defaultStorageType\" : \"STORAGE_TYPE_UNSPECIFIED\"\n  }, {\n    \"encryptionConfig\" : {\n      \"kmsKeyName\" : \"Gloria Hartmann\"\n    },\n    \"clusterConfig\" : {\n      \"clusterAutoscalingConfig\" : {\n        \"autoscalingLimits\" : {\n          \"maxServeNodes\" : 270454416,\n          \"minServeNodes\" : 991562394\n        },\n        \"autoscalingTargets\" : {\n          \"cpuUtilizationPercent\" : 2088316416,\n          \"storageUtilizationGibPerNode\" : 1508463543\n        }\n      }\n    },\n    \"name\" : \"Mr. Andy Murray\",\n    \"serveNodes\" : 1769026809,\n    \"location\" : \"t0vttsmzmjonerwx7sgt5izot7cm11\",\n    \"state\" : \"CREATING\",\n    \"defaultStorageType\" : \"SSD\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9c5fcddd-9f16-3b60-8dd3-c22051c83408",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "bigtableadmin.projects.instances.clusters.list",
          "schema" : {
            "description" : "Response message for BigtableInstanceAdmin.ListClusters.",
            "properties" : {
              "clusters" : {
                "description" : "The list of requested clusters.",
                "items" : {
                  "$ref" : "#/components/schemas/Cluster"
                },
                "type" : "array"
              },
              "failedLocations" : {
                "description" : "Locations from which Cluster information could not be retrieved, due to an outage or some other transient condition. Clusters from these locations may be missing from `clusters`, or may only have partial information returned. Values are of the form `projects//locations/`",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "DEPRECATED: This field is unused and ignored.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "4e78f2a0-c10e-3448-9e16-fba85836536d",
    "name" : "Copy a Cloud Bigtable backup to a new backup in the destination cluster located ...",
    "request" : {
      "urlPath" : "/v2/wtjn8lnfmf66wdm1zgbozgtdeyi6gyd/backups:copy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Kera McGlynn\",\n  \"error\" : {\n    \"code\" : 135490659,\n    \"details\" : [ { }, { }, { }, { } ],\n    \"message\" : \"Culpa ut reprehenderit. Dolor corporis porro dolores deleniti distinctio debitis ab. Doloribus nobis inventore nisi aut suscipit nemo.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4e78f2a0-c10e-3448-9e16-fba85836536d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "bigtableadmin.projects.instances.clusters.backups.copy",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "eccedd17-697e-35a8-b9aa-27cf12e4fd23",
    "name" : "Starts creating a new Cloud Bigtable Backup. The returned backup long-running op...",
    "request" : {
      "urlPath" : "/v2/q55gxx9qo8lv16suz2l5jcwxilwi01l7twugau9g8skhs9/backups",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Mrs. Lenita Bechtelar\",\n  \"error\" : {\n    \"code\" : 1798538382,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Sunt vel officia. Non voluptatem animi est molestiae libero ullam nam. Ex ut at sed. Deleniti molestiae harum.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eccedd17-697e-35a8-b9aa-27cf12e4fd23",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "bigtableadmin.projects.instances.clusters.backups.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "d6e19ef9-0b56-3c25-a26b-115002953cd8",
    "name" : "Lists Cloud Bigtable backups. Returns both completed and pending backups.",
    "request" : {
      "urlPath" : "/v2/07ueu1pl4zjt8kpe70honv48uk419j7rxfvij81i48oww9b0lcrt4dofz0ws6etnggwtiie9bk800k7ii7hou5g71wcddt58hbzwksyr2am03nvz0aaxd34f1xlhha924rjrhffuzn2x549v9h7jojfrhma4req19ttajp68nm0yvduabmyzwwaz/backups",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"9wmcneoqc4p8u7nm500lf57e9hz9av0\",\n  \"backups\" : [ {\n    \"encryptionInfo\" : {\n      \"encryptionStatus\" : {\n        \"code\" : 1413039534,\n        \"details\" : [ { }, { } ],\n        \"message\" : \"Sapiente dicta dignissimos quo dolor laboriosam est. Qui earum ratione repellendus ratione dolor explicabo. Doloribus dicta illo quia. Magnam velit saepe adipisci culpa nam mollitia repellat.\"\n      },\n      \"encryptionType\" : \"ENCRYPTION_TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"rzd0ee1g5x98l\"\n    },\n    \"expireTime\" : \"2022-11-03T15:43:07.13081Z\",\n    \"sourceTable\" : \"00a4892v62ml1bd6hn\",\n    \"name\" : \"Dannette Ondricka\",\n    \"startTime\" : \"2022-10-13T15:39:07.130895Z\",\n    \"endTime\" : \"2022-05-03T15:00:07.130924Z\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"sourceBackup\" : \"h2cq5yzp1u08lulw9mvzkshl612phpgzjpvkflgsldk805qcbisun1zr9rparfyyqumx451ujmlwvuslon4er5r6f7leonhoysj4ol5vnusk2niu3pqbxmd6p1srvzrl2l9j7p5clstw9epf52wkn5o4be\",\n    \"sizeBytes\" : \"kfapda9gfbi243ugducvsopz2xh\"\n  }, {\n    \"encryptionInfo\" : {\n      \"encryptionStatus\" : {\n        \"code\" : 641385889,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Illum ut et. Iure odit sit totam. Aut quia optio id exercitationem nihil eius. Nam dolores et minima itaque est velit. Perferendis ex libero blanditiis quae.\"\n      },\n      \"encryptionType\" : \"GOOGLE_DEFAULT_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"i9jwvn8lss7merxkhmj86sdhjaa13b2ioxiowisnpzn4k5ut3dq702gbhjn1366polar4czbx7jmuyvkinlbusbcxbuelv4sit44vk7j59xf0vv4haoyyzesyu1nt\"\n    },\n    \"expireTime\" : \"2022-07-12T13:58:07.131085Z\",\n    \"sourceTable\" : \"c6n4248gpozly38qckm8r2ang319yhllq9gjhql9035i9r13doecuu1s6hu9z4qvmyg5itlz2qe6ggjp5rvcq9bw09pv4ghxzlz8qw4dqcwq13h8t7xoqqeeg6u9jfj0ridnsdfdu\",\n    \"name\" : \"Norene Skiles\",\n    \"startTime\" : \"2022-12-07T15:13:07.131163Z\",\n    \"endTime\" : \"2022-10-21T15:42:07.131189Z\",\n    \"state\" : \"READY\",\n    \"sourceBackup\" : \"fe5g70a3mz5m47dt9g1ayb4l7fu8q7bqd9eb2hamkw18ak41cwfdip4xhx4bt3zchcrabhnjrfxpfga7tb0cpof37ud0p2vvmcs39gkx17runpizu539kkslx69mt6jdjo1vt6fj0\",\n    \"sizeBytes\" : \"788ah25fewjlifx1w2jnr69x2fol66fl4kvoi4xvie55e3shc5a7yn5emdrlg4v39pf6j12x3l2i3rl02hcc3ttf2uectz3wdy4oddx2m9w5u21nuct\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d6e19ef9-0b56-3c25-a26b-115002953cd8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "bigtableadmin.projects.instances.clusters.backups.list",
          "schema" : {
            "description" : "The response for ListBackups.",
            "properties" : {
              "backups" : {
                "description" : "The list of matching backups.",
                "items" : {
                  "$ref" : "#/components/schemas/Backup"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListBackups call to fetch more of the matching backups.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "127d9f54-f686-3ec8-afb5-ccbd3bbd90e4",
    "name" : "Creates an app profile within an instance.",
    "request" : {
      "urlPath" : "/v2/1cse0g1kkc/appProfiles",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"multiClusterRoutingUseAny\" : {\n    \"clusterIds\" : [ \"jalx5xdjcm7014yhh6kgblh4x1zl7cldg32djnbakt68h3shwdub280qw2xpq4f9qim5g7hpopb\", \"krxyk16obcj63udw2m5viufp0mw9v4jc854v1yxxfgpdd6liad5bjm1lurik7g\", \"mcti62meom4kc5t2ny8h2lo4cq1jzg027s1c4e6shervrgpghi0q3fvcilgjqjk8ntmkx6226xk53srkkde3yaaunxj04p5a6s8fzy71wv2ykh3lkh37jr3uuxd2gqq781xrg6qsmvuy9zan1ozoxzcdvnb0savct44toedcgqnog2y703tgdhbvns58m2ok\", \"ag61yyq5n9dp7ci7h6h05gmnir2c0ejajdmv0h8on8up5pj91x5efxasdktcexwqbu32cls0p09br0jormryu1w479g7dxkr41v57mv9wyldhmrucfzdq1mf4amuam6qtht0dm2ig72hm2nhammua5dwc7ostvpq69qz5qbthd5q8pjy7hzhzoxozwdplgqarbw\", \"lnf6xn5ezbx7r29nfn033r8072a5afap6jdwuoo5tne47jvpjslqnh50cuq9h3x7uakty\", \"maac89920lxku2bdml43yurpuhcorawwwjq85elt3s8oqlgfxm4jnm7kfsgi3hijf6450yjr0gbsvv8xgtitsm8j1eya8n7wvixe5no0j4u280dijawl\" ]\n  },\n  \"singleClusterRouting\" : {\n    \"allowTransactionalWrites\" : true,\n    \"clusterId\" : \"a762\"\n  },\n  \"name\" : \"Clint Graham V\",\n  \"description\" : \"Recusandae reprehenderit unde. Ipsam blanditiis dolorem autem saepe ea sequi minus. Hic laborum accusantium maxime. Voluptatem maxime architecto modi eos. Quis quisquam cumque adipisci eum.\",\n  \"etag\" : \"reiciendis\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "127d9f54-f686-3ec8-afb5-ccbd3bbd90e4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "bigtableadmin.projects.instances.appProfiles.create",
          "schema" : {
            "description" : "A configuration object describing how Cloud Bigtable should treat traffic from a particular end user application.",
            "properties" : {
              "description" : {
                "description" : "Long form description of the use case for this AppProfile.",
                "type" : "string"
              },
              "etag" : {
                "description" : "Strongly validated etag for optimistic concurrency control. Preserve the value returned from `GetAppProfile` when calling `UpdateAppProfile` to fail the request if there has been a modification in the mean time. The `update_mask` of the request need not include `etag` for this protection to apply. See [Wikipedia](https://en.wikipedia.org/wiki/HTTP_ETag) and [RFC 7232](https://tools.ietf.org/html/rfc7232#section-2.3) for more details.",
                "type" : "string"
              },
              "multiClusterRoutingUseAny" : {
                "$ref" : "#/components/schemas/MultiClusterRoutingUseAny"
              },
              "name" : {
                "description" : "The unique name of the app profile. Values are of the form `projects/{project}/instances/{instance}/appProfiles/_a-zA-Z0-9*`.",
                "type" : "string"
              },
              "singleClusterRouting" : {
                "$ref" : "#/components/schemas/SingleClusterRouting"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "c4fd8fd9-cf03-372f-87c5-1b235d8fd493",
    "name" : "Lists information about app profiles in an instance.",
    "request" : {
      "urlPath" : "/v2/s2qifkiwvvr67qif25931edvwrvaqkyubrv1417c5gabwcp7v49cgsvmwflw1ar0a3ri5cn89ytv3ehod4ay5drf4rpmwwzxl4vlsx4ous8py7iyqt5zda5jflgd60qesz2d2ckwkz3ac20a5sl3sg5tpxxtssgdkisrmwgkv939bs2qtsbolx2/appProfiles",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"lv5sg446g8ikh229o55cnebfg96io5xmxiclf164w7kpmyxea5uvtrpvjs7yx8m4a\",\n  \"failedLocations\" : [ \"gtbw2e1zlvcsikmz11n0aevb53qbb7xc6o25d95qaeuzdxuq\", \"lwyl6eahyvidxqqbzo4oj0cney7ehimz1crq8nim83pd6wyax9i2hxf33pc29bxj4v636wp6bikbvcxd9mgk84ndz1tu4fai2bcdfvrx1p2ep6swir67szcrdntmu797v7g44qn03vvfztb8splamca2cm91iz1ie46vknbt1onqmjerbn\", \"v7nmryj5wqq\", \"4q7nzbdsyciiv32izuvp92ybw1rggg6fuqg26he4br4u7ibugs1onh24nb9cuwwphs9y26l47gj1cgjlqmx0sgyb859nrlfsdj5a9cna9wu724mtmfvoq7u70jtq3ar2j3pvn8uo5yzlxjgxazqgjl6zdqfg2solekhsqeo9wz7nlxexm3jd5zbln9jbg3bvfvoy5\", \"z5nzd7brox9ryi962herwxz2dn1w436jsusaiuvp771wg7semyiks88gc31ey9zyob047daozjtkmfjtjln3vcb6mbrue95qs9uxczdlochlixmjj787bhufqf2tu4aq8pc15d78d4x23exbzsqle4zslvr9th1jvhwoyisgex8wo8pqaw17al25ez2\", \"g8q2qvyl9\", \"bi9cn\", \"3ul7e0r21khss8sj4pe8eq25epuqdk9qsibospqt4g6qil5mjwaeoolixokrmv0gdlix\" ],\n  \"appProfiles\" : [ {\n    \"multiClusterRoutingUseAny\" : {\n      \"clusterIds\" : [ \"zio0spoxe72d5yqhjcg0j14rldg9iv631207knt5xgi9o4ri6rpz49nvyshdfz57e6zecj0zcmuocuad19uajubn0ag3742qlaje2qqpi5gqgcldt8igyknpruvaofsx6qc0vf5cc9dbc0zzplubiqo18\" ]\n    },\n    \"singleClusterRouting\" : {\n      \"allowTransactionalWrites\" : true,\n      \"clusterId\" : \"xx5p\"\n    },\n    \"name\" : \"Sharonda Jaskolski\",\n    \"description\" : \"Dolores fugiat consectetur accusantium culpa. Cumque nam incidunt corrupti ratione ut. Voluptatem consequuntur est consectetur unde et unde adipisci. Incidunt dignissimos quisquam dolorem fuga laborio\",\n    \"etag\" : \"iiiid\"\n  }, {\n    \"multiClusterRoutingUseAny\" : {\n      \"clusterIds\" : [ \"jk4wfr2u1fgvboe5w4818jff7pglbalo2vcsponxkqiucaciv\", \"jl1nvk40fu0net79edf4bqk6ua8ncf83vifkgjrqbxneczldapwx10q2sg1ua48zw5xhw055kiomyfvssfgokt94mpuops1d0kn37nisbie77t18wcatcm5i3vet2ps8tcal8fu93b52s2nmegrgo6uaqxpm0reyii6704l6oi9qli4ij8ea56k9m74mo\", \"nnluc05va99h2pcw2r0s5p24qcgs7xuogepazyvfv90n4hq0yf9yey55brwqzylj1czzf2wiwypjrpjo8dcmxo4b6qks6xwwl3xs3m6wizwsgsmj01ypreuhoob651w426whb4ttl2pv6vvvqv4uvhg1ttv6fzoty1pfb4qlli17lpv76c8ttc1yhxj\", \"2t63kam45i40qzlx8wh0vorojqsh0uyppaqc56rmcbhw5bza5x18z330ee3sd7qv5c6jip3zrw88kph6\", \"im4md8bb78cbsrquc749zn99903xo1t2zhhuzx1j9wxeuwjdikclwfa8054aej9fj1d3vd2uarzvht0k8olr9kt181nwqg0a9ydlacghu3x7r2uk67kleen3pmya8ujwxswbvyi31do4dvq8x\", \"94x562lxdlziqnfp42f0q9o7pol7jorvbqdupgjoxqjocervszm6y8xoxti3oxlhxfky6edjyb6vaq4gwthvxi1kjg8fnknaxb04xonsj5n8mqr36kfy09ruvmayij33y\", \"ufx4r5ptl28z4mfk98glp2f4aa5v63d6nq4xfrbuks294gn9bi1ca9dc9ss84vv6cskikd51vvrdyfo03qa1au\" ]\n    },\n    \"singleClusterRouting\" : {\n      \"allowTransactionalWrites\" : false,\n      \"clusterId\" : \"261r\"\n    },\n    \"name\" : \"Ms. Marjory Sipes\",\n    \"description\" : \"Iure temporibus et. Est voluptatum adipisci voluptatem dolorum veritatis aliquid. Expedita doloribus expedita.\",\n    \"etag\" : \"odit\"\n  }, {\n    \"multiClusterRoutingUseAny\" : {\n      \"clusterIds\" : [ \"09apn8hno26gr64ciq3zd6t37ohu7df61cafth3tfse2u32rry7nxar92a28w8mt27btclm8rv522o32ho2trfd8j\", \"mqfiqdbq8b0wo8uzraw19lhdso8hrps6ru5mt790is4wbqb246j1l2a9d9n234wc26dr84w4f1fbc165ifiyg9zb\", \"44xdhrdwy3k98022qfgupah3s07phzwopc58bxu1tjwtmh3swdzjao3iml95af9aotx8082nuzhoiypa1pt3x5d90du8afc0tl5dif0j78jhntueq70m30wvcs7rxyoj0d5qxf5typ33qxe0gyirz54lwtyewwyy\", \"oe2crq9ai3agsbskergulawdxbuyacy7x9zl0oibrboagpo5y6lia564ngo0las31quy7h6potne2x99bx0pj80efprfjae8v4x86rac0zhved5ncrfvbrkfs3ht2y1xg0y2b7wl3mrzxf4ge1v3mepwj1tz9g46v1iq1247jxxoxhp3c3gjs1k08o6g87svyshula\", \"cmo0cgc4gikp7207txd7i3jv0xuhg7potkw8yjy2psdhpki7a6y86u08s06osfej584jfrxga04koj\" ]\n    },\n    \"singleClusterRouting\" : {\n      \"allowTransactionalWrites\" : false,\n      \"clusterId\" : \"cn3r\"\n    },\n    \"name\" : \"Terese Mosciski\",\n    \"description\" : \"Quo iusto ullam deleniti aspernatur dolore in. Aut voluptatem provident voluptatibus sequi nihil. Veritatis aut error.\",\n    \"etag\" : \"nulla\"\n  }, {\n    \"multiClusterRoutingUseAny\" : {\n      \"clusterIds\" : [ \"sfwjb0apx1kggpnum7wx6ikr7cuz94n71joel3js378h0fylwgzjsjkpnjit7y3ye\", \"zera6th24pl9o9t6bu6dddrsnxeeulpo9u7on28xgib1o6kzn2vw4a0dbbczd1c08w5e0r1cuaa2c7dmqwdqgjlwo20ci4w682vgcrfkjlxbgx9u02slpbiqtzm8yx5ggmg6gjvd1hzm\", \"do2w94qejsi8k1lv37w27o8misrayrnxkie2sw03pgfbygyek64ofjrtsglkptnr1227uh\", \"rmnnq06yrl2byzey0hjvsinenase7srbayfz5iqihyyaxy8aaqfzorc9307tz7lwo2lgh3ii3nhnz6og6hje5uosllfwjx4ci9k1f0hfmsj5fb9djl2jmbldlwsu5t9\", \"567b2lrdvdwxdb9b2cyeg3l35btijs\" ]\n    },\n    \"singleClusterRouting\" : {\n      \"allowTransactionalWrites\" : true,\n      \"clusterId\" : \"4ck3\"\n    },\n    \"name\" : \"Alexis Larson\",\n    \"description\" : \"Et placeat officiis ut veritatis sequi voluptas. Reiciendis harum eos error eaque veritatis soluta molestiae. Magnam nobis inventore inventore repudiandae. Quia nulla assumenda omnis maxime modi earum\",\n    \"etag\" : \"atque\"\n  }, {\n    \"multiClusterRoutingUseAny\" : {\n      \"clusterIds\" : [ \"qiv6dtty4vxul0bgy936ek0useu0pgumk8vpv8ixodhjydqvijc5a\", \"eu7jlzpcgiqi5gqg91a4oxo52c5k2x4bdxg934njm13506dpg484gkwivcltyl47hdsxv2t4ihnxq6my21z4q2qo7uiy4afc9tvy79hn4vud5gdtepmcoroxbkl5sivvalshph2ka21qzz3r8ir7o6ljept\", \"5j5bammestf67t6ltl22gnqnupqxmminy77yyvjb53xdhvx7h5rgy22fyiwe1qhxrwcnk2miq9yd4oo\", \"a7jqe8gdbj7ow4xmwy72kj3fd90g3nidkr3wyxy2dm675o3hpxu1c734tz9cijts9y36o3lo35q6cxwlbijusnzvbooryfdyy2yn7xbpydih2cli79i8gt7rbw28faauh5t3hzqa0ezh70obn3l7f9rh1w339x8585327no6n5\", \"lfs5b3ld5g6plrbvz211v5lnntlncenndz74qpyc34hi1ysmmyr1wh0a49s7tykkwelitvp8v4lmgbxqx3uadzh0auhp81fopq2y9itxb0cqrdjs8cm720gdwcgwvbp139mtk68zl602hd1deyr4r3gpro9xwl5ury1ux2auavfgif0753i65\", \"tprb9aez0wy9wczy0ia593olrpf5oxsf68whpmkzjr953b241e5mz1grqcg35591omeqhb84j3m231n5sevz8u1s5lyve1o1ae1lrxvusypyy94w9vhejza1u4ch7mj0olyk9lj6jhjjyb7pt\" ]\n    },\n    \"singleClusterRouting\" : {\n      \"allowTransactionalWrites\" : false,\n      \"clusterId\" : \"3jb7\"\n    },\n    \"name\" : \"Reid Gerhold\",\n    \"description\" : \"Autem ut aut rerum sapiente nisi ullam repellat. Enim ipsa consequatur temporibus corrupti alias non id. Nemo aut sequi voluptates ipsum dignissimos. Molestiae nemo rerum vel sapiente qui eum et.\",\n    \"etag\" : \"earum\"\n  }, {\n    \"multiClusterRoutingUseAny\" : {\n      \"clusterIds\" : [ \"kacy7xgvu50drtxoe6h4b2io0qtb85m5czxph7cwpv1if2blajw5avos\", \"6uvc2770h5qdgc0icumsb3h5pd0yf5qedjnn4s3zj7sfv5c53aup66norw30ye5vl6opsxnt7wjyh7mos60zjjz6dkrhmfvlpfw40jvm0zvaszpjglccfa9q2pr52ns8aq87hlct2iwfhdedflxqvkxeve\", \"tur0q8\" ]\n    },\n    \"singleClusterRouting\" : {\n      \"allowTransactionalWrites\" : false,\n      \"clusterId\" : \"ih01\"\n    },\n    \"name\" : \"Tynisha Gleason\",\n    \"description\" : \"Commodi velit ab nam molestias ut facere. Doloremque omnis accusantium eum. Officiis ipsa ipsa iste. Temporibus cumque error illo mollitia et. Quibusdam quidem libero autem repellat magnam.\",\n    \"etag\" : \"recusandae\"\n  }, {\n    \"multiClusterRoutingUseAny\" : {\n      \"clusterIds\" : [ \"9ko8huc9sddz1jnv\", \"1hy3ber44titls4xkj8ts48u94yxggmyl21u8401o5vo3o9p4fpxyjn7kdhjn76gwd4vlnuuo9hy5qpuke0g2rq9ebn1l5yxjtcz5lqjsvcb8xeoup988xziyq11\", \"u61v6ml0esu4xf010c214r7ownh1m78kho9y0tbsiz4pt5m43nc7vjnfl9m0xepf94r3e13qw99mgpzlvemta70hlp3ob1nrorizaa15zjtwggr1nukkf34i82dvy8r8k5n7uo964k6puo630ntdj1hznhcckzbg0lilnfrg\", \"n14gxnblm5xwyrtsdl98v5cyel670znjqnah42g460q0hgccs1wyu5ripqzhkln0qy3ssbnl1wjoswmgeopobk76pk2wr0rkgmgvzuh6awp\" ]\n    },\n    \"singleClusterRouting\" : {\n      \"allowTransactionalWrites\" : true,\n      \"clusterId\" : \"25uo\"\n    },\n    \"name\" : \"Zenobia Morar\",\n    \"description\" : \"Iure voluptatum ad placeat aliquid et ut commodi. Ab consequatur quam quia quibusdam aut. Natus quasi voluptates ea explicabo doloribus. Fuga quia ut. Fugit expedita a.\",\n    \"etag\" : \"eeeet\"\n  }, {\n    \"multiClusterRoutingUseAny\" : {\n      \"clusterIds\" : [ \"i7v1cn53qazp9phsq6hst0m1osc6xgwns8325ycx3onj2keb7eybhidnqic281kv3uzwtqpnak5q\", \"ahmqy6mxpp9p0uh4i23vhuoq1jf8k5\", \"k9dmhzr40xwkyahfz9i8ahmwgtguabeo1i7cyywrtegx74gqlb6rb264r5m2m2zu9zqaib2kjydt7d9b83gc8zrr4j4tku0s0q87ltd7wn3eg9f8w88ia34bbrg5sfdo6138sdgc1fm057bjk56iufia\", \"ewhp1035ayq567hmeap8kaili8km5jiwdkx4857ekmbdba2jy4k1651yb7yd2tv1fiko1ohoqxb76kd33ywtm5vynfm748dfw\", \"ak9tep5nqjufhic17j6qqyulzpivslgjzb1dgsyg\" ]\n    },\n    \"singleClusterRouting\" : {\n      \"allowTransactionalWrites\" : false,\n      \"clusterId\" : \"pioe\"\n    },\n    \"name\" : \"Daisey Littel\",\n    \"description\" : \"Sint ab aut quos repudiandae in architecto. Libero quo asperiores reiciendis blanditiis sapiente repellat. Commodi adipisci eum eos in corporis. Dolores beatae molestias expedita qui illo accusamus. A\",\n    \"etag\" : \"veniam\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c4fd8fd9-cf03-372f-87c5-1b235d8fd493",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "bigtableadmin.projects.instances.appProfiles.list",
          "schema" : {
            "description" : "Response message for BigtableInstanceAdmin.ListAppProfiles.",
            "properties" : {
              "appProfiles" : {
                "description" : "The list of requested app profiles.",
                "items" : {
                  "$ref" : "#/components/schemas/AppProfile"
                },
                "type" : "array"
              },
              "failedLocations" : {
                "description" : "Locations from which AppProfile information could not be retrieved, due to an outage or some other transient condition. AppProfiles from these locations may be missing from `app_profiles`. Values are of the form `projects//locations/`",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "Set if not all app profiles could be returned in a single response. Pass this value to `page_token` in another request to get the next page of results.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "761b82fd-5128-3cba-af2f-b642bdd64013",
    "name" : "Restores a specified table which was accidentally deleted.",
    "request" : {
      "urlPath" : "/v2/Briana+Gulgowski:undelete",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Toby Reichert I\",\n  \"error\" : {\n    \"code\" : 884024193,\n    \"details\" : [ { } ],\n    \"message\" : \"Dolorem laboriosam aut pariatur voluptatem ut. Alias architecto voluptatum ullam. A autem quia. Voluptatem omnis voluptatibus aut officia ratione provident.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "761b82fd-5128-3cba-af2f-b642bdd64013",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "bigtableadmin.projects.instances.tables.undelete",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "9746fd87-7a51-3f4d-9d21-fdbc2aceb121",
    "name" : "Performs a series of column family modifications on the specified table. Either ...",
    "request" : {
      "urlPath" : "/v2/Ms.+Keenan+Klocko:modifyColumnFamilies",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"stats\" : {\n    \"averageCellsPerColumn\" : 1.3473222378056147E308,\n    \"logicalDataBytes\" : \"1xwh8ei7dv0b7892cg2xh6lha243u1z6o3ed6navfendsmppbyb6sfspt14n6zv5naz4qxhfk6iwwi\",\n    \"rowCount\" : \"9853gnf2wu7zufl64tn7dfpa6mtue5gy466efc1xwbdrwk6d02oeaw86sexzxzeblwmdraevapb5ng6djesa9gq943dey\",\n    \"averageColumnsPerRow\" : 4.820331661944112E307\n  },\n  \"granularity\" : \"TIMESTAMP_GRANULARITY_UNSPECIFIED\",\n  \"name\" : \"Lannie Yundt\",\n  \"restoreInfo\" : {\n    \"sourceType\" : \"BACKUP\",\n    \"backupInfo\" : {\n      \"backup\" : \"d131w9pjrn9uijg5xooxzvzeq0b1zh62vrvd32dpt954f8je9cbhx5gujmiu4dqs35yfxis8ukfe9lteyd25k0mhm71pnjvudbe\",\n      \"sourceTable\" : \"t0aophlwxlia75f2f4flm9n54emnwjufd43bysgt499zodu4cvj97ath021mct5q0yv0vmix6nsl16rai4cr4u12ueqe6qzcpoepijlwjq8ypnog0wz0qejhc1ixm90gdmpvcs8r8b9xa46rumvsprvp881k85p\",\n      \"startTime\" : \"2022-10-01T13:10:07.127942Z\",\n      \"endTime\" : \"2023-02-19T14:54:07.127976Z\",\n      \"sourceBackup\" : \"f0iofz9qpubnku0qjac67wqs54mifx8nmupwr08z31azdgql81ha7jnm4bzp4cptgg83224b4wlrn977113tnyq09synb7pg1kfeteoklo2vpxl\"\n    }\n  },\n  \"columnFamilies\" : { },\n  \"clusterStates\" : { },\n  \"deletionProtection\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9746fd87-7a51-3f4d-9d21-fdbc2aceb121",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "bigtableadmin.projects.instances.tables.modifyColumnFamilies",
          "schema" : {
            "description" : "A collection of user data indexed by row, column, and timestamp. Each table is served using the resources of its parent cluster.",
            "properties" : {
              "clusterStates" : {
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/ClusterState"
                },
                "description" : "Output only. Map from cluster ID to per-cluster table state. If it could not be determined whether or not the table has data in a particular cluster (for example, if its zone is unavailable), then there will be an entry for the cluster with UNKNOWN `replication_status`. Views: `REPLICATION_VIEW`, `ENCRYPTION_VIEW`, `FULL`",
                "readOnly" : true,
                "type" : "object"
              },
              "columnFamilies" : {
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/ColumnFamily"
                },
                "description" : "The column families configured for this table, mapped by column family ID. Views: `SCHEMA_VIEW`, `STATS_VIEW`, `FULL`",
                "type" : "object"
              },
              "deletionProtection" : {
                "description" : "Set to true to make the table protected against data loss. i.e. deleting the following resources through Admin APIs are prohibited: * The table. * The column families in the table. * The instance containing the table. Note one can still delete the data stored in the table through Data APIs.",
                "type" : "boolean"
              },
              "granularity" : {
                "description" : "Immutable. The granularity (i.e. `MILLIS`) at which timestamps are stored in this table. Timestamps not matching the granularity will be rejected. If unspecified at creation time, the value will be set to `MILLIS`. Views: `SCHEMA_VIEW`, `FULL`.",
                "enum" : [ "TIMESTAMP_GRANULARITY_UNSPECIFIED", "MILLIS" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The unique name of the table. Values are of the form `projects/{project}/instances/{instance}/tables/_a-zA-Z0-9*`. Views: `NAME_ONLY`, `SCHEMA_VIEW`, `REPLICATION_VIEW`, `STATS_VIEW`, `FULL`",
                "type" : "string"
              },
              "restoreInfo" : {
                "$ref" : "#/components/schemas/RestoreInfo"
              },
              "stats" : {
                "$ref" : "#/components/schemas/TableStats"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "608bcc11-2397-34a7-923a-863066893bd9",
    "name" : "Generates a consistency token for a Table, which can be used in CheckConsistency...",
    "request" : {
      "urlPath" : "/v2/Greg+Herzog:generateConsistencyToken",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"consistencyToken\" : \"m9apzdazyt9ggcztl5e5zmut0gsup2rydcq4lh6moo48igca5bkv91lh3y7fpu0uc6kvajb1738b8oamglm480typi20ruc6lxaso80rl1g78nlonvvh8rzmj7ud81v\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "608bcc11-2397-34a7-923a-863066893bd9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "bigtableadmin.projects.instances.tables.generateConsistencyToken",
          "schema" : {
            "description" : "Response message for google.bigtable.admin.v2.BigtableTableAdmin.GenerateConsistencyToken",
            "properties" : {
              "consistencyToken" : {
                "description" : "The generated consistency token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "99c6b703-06ab-3113-a6ba-56ca57b468ad",
    "name" : "Permanently drop/delete a row range from a specified table. The request can spec...",
    "request" : {
      "urlPath" : "/v2/Jillian+Hayes:dropRowRange",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "99c6b703-06ab-3113-a6ba-56ca57b468ad",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "bigtableadmin.projects.instances.tables.dropRowRange",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "62dcea31-d512-3c77-b839-de008e0d998c",
    "name" : "Checks replication consistency based on a consistency token, that is, if replica...",
    "request" : {
      "urlPath" : "/v2/Lenard+Schinner:checkConsistency",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"consistent\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "62dcea31-d512-3c77-b839-de008e0d998c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "bigtableadmin.projects.instances.tables.checkConsistency",
          "schema" : {
            "description" : "Response message for google.bigtable.admin.v2.BigtableTableAdmin.CheckConsistency",
            "properties" : {
              "consistent" : {
                "description" : "True only if the token is consistent. A token is consistent if replication has caught up with the restrictions specified in the request.",
                "type" : "boolean"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "2d58c9f4-cded-36ca-9688-66abdfd28443",
    "name" : "Starts asynchronous cancellation on a long-running operation. The server makes a...",
    "request" : {
      "urlPath" : "/v2/Zachary+Mayer:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2d58c9f4-cded-36ca-9688-66abdfd28443",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "bigtableadmin.operations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "0821d976-4b49-3844-bfc7-3cdbd15a52cc",
    "name" : "Lists operations that match the specified filter in the request. If the server d...",
    "request" : {
      "urlPath" : "/v2/Hilaria+Blanda/operations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Bertha Miller\",\n    \"error\" : {\n      \"code\" : 2127598155,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Expedita ea mollitia laudantium architecto. Hic laudantium omnis et molestiae eaque aut error. Libero sint accusantium est omnis nesciunt quos asperiores. Ullam quasi repellendus fugiat ipsam qui illo\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Norah Gerlach\",\n    \"error\" : {\n      \"code\" : 586651487,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Rerum nobis ullam impedit commodi libero ut. Ad dolorem commodi omnis voluptas quia enim ipsa. Eos fugit quisquam consequatur reiciendis. Temporibus qui dolore. Iusto qui molestiae earum.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Shenita O'Conner\",\n    \"error\" : {\n      \"code\" : 1665647452,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Sed iste asperiores illum quia ut consequatur. Quia rerum autem. Modi est quae dicta. Minus quisquam commodi sed ipsum accusamus vitae.\"\n    },\n    \"done\" : true\n  } ],\n  \"nextPageToken\" : \"mczd2vgqwbt91zzio3hxrd79q5j30udb27xmmabv50ij2nycnawrppo2caslcv0a5ra0ydwhtakj70r167un1gazfi0w4w595q4c3w7pwlr9iytwolhfn59gy4bnjdwp39q4s0hrd1vizluxby3l0twf3616mcktrkx26gum6tloomjhhc760u\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0821d976-4b49-3844-bfc7-3cdbd15a52cc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "bigtableadmin.operations.projects.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "9e516882-bf33-3883-ab48-c7ed6b2fa895",
    "name" : "Lists information about the supported locations for this service.",
    "request" : {
      "urlPath" : "/v2/Keisha+Haag/locations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"1643rol7liozrv9kbazwhn89os4ua9p4i3x125\",\n  \"locations\" : [ {\n    \"metadata\" : { },\n    \"displayName\" : \"Felice Mertz III\",\n    \"locationId\" : \"cr64\",\n    \"name\" : \"Hope Keeling\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Melvin Hamill\",\n    \"locationId\" : \"tfj8\",\n    \"name\" : \"Amie Tremblay\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Milagros Gulgowski\",\n    \"locationId\" : \"92fh\",\n    \"name\" : \"Leigh Jaskolski\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Mrs. Julieta Runte\",\n    \"locationId\" : \"4w55\",\n    \"name\" : \"Kristopher Feest PhD\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Denise Jacobs\",\n    \"locationId\" : \"51v6\",\n    \"name\" : \"Caleb VonRueden\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Johnna Hills\",\n    \"locationId\" : \"7972\",\n    \"name\" : \"Miss Raina Schmitt\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9e516882-bf33-3883-ab48-c7ed6b2fa895",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "bigtableadmin.projects.locations.list",
          "schema" : {
            "description" : "The response message for Locations.ListLocations.",
            "properties" : {
              "locations" : {
                "description" : "A list of locations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "f33073b7-a3a4-3d8d-9efc-cb4c1f6dcf60",
    "name" : "Updates a cluster within an instance. Note that UpdateCluster does not support u...",
    "request" : {
      "urlPath" : "/v2/Apolonia+Harris",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Magdalena Lindgren\",\n  \"error\" : {\n    \"code\" : 114529266,\n    \"details\" : [ { }, { }, { } ],\n    \"message\" : \"Quibusdam laudantium recusandae aut quam sequi et labore. Quo dolor voluptatem quidem labore. Et voluptatibus molestiae voluptatem error dolores aut. Harum nesciunt facere et ducimus rerum tempore.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f33073b7-a3a4-3d8d-9efc-cb4c1f6dcf60",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "bigtableadmin.projects.instances.clusters.update",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "0009d1d6-7e55-3d6c-9aa0-bcabedf8bf1b",
    "name" : "Updates a specified table.",
    "request" : {
      "urlPath" : "/v2/Art+Ondricka",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Mr. Devon Bergnaum\",\n  \"error\" : {\n    \"code\" : 389234740,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Ipsam sint et mollitia magni accusantium ab et. Placeat cupiditate commodi rem eum cum sequi iste. Esse harum nobis ratione adipisci.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0009d1d6-7e55-3d6c-9aa0-bcabedf8bf1b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "bigtableadmin.projects.instances.tables.patch",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "4ea59bf0-7bde-373c-bf06-1ae235f4db7d",
    "name" : "Gets information about a location.",
    "request" : {
      "urlPath" : "/v2/Louis+Littel",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"displayName\" : \"Mindy Konopelski\",\n  \"locationId\" : \"usie\",\n  \"name\" : \"Kindra Lemke\",\n  \"labels\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4ea59bf0-7bde-373c-bf06-1ae235f4db7d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "bigtableadmin.projects.locations.get",
          "schema" : {
            "description" : "A resource that represents Google Cloud Platform location.",
            "properties" : {
              "displayName" : {
                "description" : "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
                "type" : "string"
              },
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
                "type" : "object"
              },
              "locationId" : {
                "description" : "The canonical id for this location. For example: `\"us-east1\"`.",
                "type" : "string"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata. For example the available capacity at the given location.",
                "type" : "object"
              },
              "name" : {
                "description" : "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "c70c4efb-144b-3449-8409-1f38ecf8481c",
    "name" : "Permanently deletes a specified table and all of its data.",
    "request" : {
      "urlPath" : "/v2/Logan+Hand+II",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c70c4efb-144b-3449-8409-1f38ecf8481c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "bigtableadmin.projects.instances.tables.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 27
  } ]
}