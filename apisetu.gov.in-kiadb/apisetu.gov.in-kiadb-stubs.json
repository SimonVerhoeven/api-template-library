{
  "mappings" : [ {
    "id" : "f6dea72f-ca89-4026-a601-602db76a7430",
    "name" : "Water Bill/ Connection (application/json)",
    "request" : {
      "urlPath" : "/wtrbl/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 504,
      "body" : "{\n  \"errorDescription\" : \"Publisher service did not respond in time\",\n  \"error\" : \"gateway_timeout\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f6dea72f-ca89-4026-a601-602db76a7430",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.307487Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "wtrbl",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "gateway_timeout" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service did not respond in time" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7f4b376d-0511-4c7a-acd5-1167f96eef93",
    "name" : "Water Bill/ Connection (application/json)",
    "request" : {
      "urlPath" : "/wtrbl/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"errorDescription\" : \"Publisher service is temporarily unavailable\",\n  \"error\" : \"service_unavailable\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7f4b376d-0511-4c7a-acd5-1167f96eef93",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.307426Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "wtrbl",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "service_unavailable" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service is temporarily unavailable" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "337ff3eb-4c86-4109-9c84-4078117b5ae7",
    "name" : "Water Bill/ Connection (application/json)",
    "request" : {
      "urlPath" : "/wtrbl/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 502,
      "body" : "{\n  \"errorDescription\" : \"Publisher service returned an invalid response\",\n  \"error\" : \"bad_gatewy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "337ff3eb-4c86-4109-9c84-4078117b5ae7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.307362Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "wtrbl",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "bad_gatewy" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service returned an invalid response" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "de7547b7-86c3-4488-a87c-82903391b7b5",
    "name" : "Water Bill/ Connection (application/json)",
    "request" : {
      "urlPath" : "/wtrbl/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errorDescription\" : \"Internal server error\",\n  \"error\" : \"internal_server_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "de7547b7-86c3-4488-a87c-82903391b7b5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.307306Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "wtrbl",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "internal_server_error" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Internal server error" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "875b5c52-d982-4e6f-87c7-8c9979c053a6",
    "name" : "Water Bill/ Connection (application/json)",
    "request" : {
      "urlPath" : "/wtrbl/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorDescription\" : \"Your API url or path is incorrect\",\n  \"error\" : \"url_not_found\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "875b5c52-d982-4e6f-87c7-8c9979c053a6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.307251Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "wtrbl",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "record_not_found", "url_not_found" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "No record found", "Your API url or path is incorrect" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "64cb0216-ffdb-456b-857e-7ec12942a74a",
    "name" : "Water Bill/ Connection (application/json)",
    "request" : {
      "urlPath" : "/wtrbl/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorDescription\" : \"Authentication failed\",\n  \"error\" : \"invalid_authentication\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "64cb0216-ffdb-456b-857e-7ec12942a74a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.307195Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "wtrbl",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "invalid_authentication", "invalid_authorization" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Authentication failed", "You are not authorized to use this API" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4244dd73-b4e9-4e1e-b7c5-800f68ed0b86",
    "name" : "Water Bill/ Connection (application/json)",
    "request" : {
      "urlPath" : "/wtrbl/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorDescription\" : \"Please provide all mandatory parameters\",\n  \"error\" : \"invalid_consentid\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4244dd73-b4e9-4e1e-b7c5-800f68ed0b86",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.307135Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "wtrbl",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "missing_parameter", "invalid_parameter", "invalid_format", "invalid_txnid", "invalid_consentid" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Please provide all mandatory parameters", "Bad request", "The format parameter is invalid", "The txnId parameter must be in UUID format", "The consentId parameter must be in UUID format" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "71f37b35-70aa-4e79-bb63-fa6cb1a38581",
    "name" : "Water Bill/ Connection (application/pdf)",
    "request" : {
      "urlPath" : "/wtrbl/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "Response body contains contents of the certificate in PDF format.",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "71f37b35-70aa-4e79-bb63-fa6cb1a38581",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.307076Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "wtrbl"
        }
      }
    }
  }, {
    "id" : "4107be52-09fe-4dc0-b569-92f3b8d4c4be",
    "name" : "NOC for New Power Supply (application/json)",
    "request" : {
      "urlPath" : "/psnoc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 504,
      "body" : "{\n  \"errorDescription\" : \"Publisher service did not respond in time\",\n  \"error\" : \"gateway_timeout\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4107be52-09fe-4dc0-b569-92f3b8d4c4be",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.307039Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "psnoc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "gateway_timeout" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service did not respond in time" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0fed8580-98f7-4713-ac65-dece139466d0",
    "name" : "NOC for New Power Supply (application/json)",
    "request" : {
      "urlPath" : "/psnoc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"errorDescription\" : \"Publisher service is temporarily unavailable\",\n  \"error\" : \"service_unavailable\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0fed8580-98f7-4713-ac65-dece139466d0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.306983Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "psnoc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "service_unavailable" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service is temporarily unavailable" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3b5715ad-be79-461e-872c-46a14b41a3d2",
    "name" : "NOC for New Power Supply (application/json)",
    "request" : {
      "urlPath" : "/psnoc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 502,
      "body" : "{\n  \"errorDescription\" : \"Publisher service returned an invalid response\",\n  \"error\" : \"bad_gatewy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3b5715ad-be79-461e-872c-46a14b41a3d2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.306929Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "psnoc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "bad_gatewy" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service returned an invalid response" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4cf37f6a-7663-413f-808f-beb4816f26dc",
    "name" : "NOC for New Power Supply (application/json)",
    "request" : {
      "urlPath" : "/psnoc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errorDescription\" : \"Internal server error\",\n  \"error\" : \"internal_server_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4cf37f6a-7663-413f-808f-beb4816f26dc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.306874Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "psnoc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "internal_server_error" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Internal server error" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "eadf6523-a8ff-4b61-a385-3ee6112a90ef",
    "name" : "NOC for New Power Supply (application/json)",
    "request" : {
      "urlPath" : "/psnoc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorDescription\" : \"No record found\",\n  \"error\" : \"url_not_found\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eadf6523-a8ff-4b61-a385-3ee6112a90ef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.306821Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "psnoc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "record_not_found", "url_not_found" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "No record found", "Your API url or path is incorrect" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "80765575-13c4-4e44-bf3b-0921a8813ede",
    "name" : "NOC for New Power Supply (application/json)",
    "request" : {
      "urlPath" : "/psnoc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorDescription\" : \"You are not authorized to use this API\",\n  \"error\" : \"invalid_authorization\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "80765575-13c4-4e44-bf3b-0921a8813ede",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.306763Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "psnoc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "invalid_authentication", "invalid_authorization" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Authentication failed", "You are not authorized to use this API" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ec49e5b8-67da-4242-908c-f69f1710cca4",
    "name" : "NOC for New Power Supply (application/json)",
    "request" : {
      "urlPath" : "/psnoc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorDescription\" : \"The consentId parameter must be in UUID format\",\n  \"error\" : \"invalid_format\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ec49e5b8-67da-4242-908c-f69f1710cca4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.3067Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "psnoc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "missing_parameter", "invalid_parameter", "invalid_format", "invalid_txnid", "invalid_consentid" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Please provide all mandatory parameters", "Bad request", "The format parameter is invalid", "The txnId parameter must be in UUID format", "The consentId parameter must be in UUID format" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9d44c628-9bcb-4831-bd54-d5c5c74d335f",
    "name" : "NOC for New Power Supply (application/pdf)",
    "request" : {
      "urlPath" : "/psnoc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "Response body contains contents of the certificate in PDF format.",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "9d44c628-9bcb-4831-bd54-d5c5c74d335f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.306638Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "psnoc"
        }
      }
    }
  }, {
    "id" : "0da33f00-b6de-4f35-a1ca-15866d0ed96f",
    "name" : "Possession Certificate (application/json)",
    "request" : {
      "urlPath" : "/pscer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 504,
      "body" : "{\n  \"errorDescription\" : \"Publisher service did not respond in time\",\n  \"error\" : \"gateway_timeout\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0da33f00-b6de-4f35-a1ca-15866d0ed96f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.3066Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pscer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "gateway_timeout" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service did not respond in time" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9dc39513-246b-418b-8482-6f882e8e8270",
    "name" : "Possession Certificate (application/json)",
    "request" : {
      "urlPath" : "/pscer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"errorDescription\" : \"Publisher service is temporarily unavailable\",\n  \"error\" : \"service_unavailable\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9dc39513-246b-418b-8482-6f882e8e8270",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.306542Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pscer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "service_unavailable" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service is temporarily unavailable" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "59899b41-a63d-4198-8f18-787941a17dd5",
    "name" : "Possession Certificate (application/json)",
    "request" : {
      "urlPath" : "/pscer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 502,
      "body" : "{\n  \"errorDescription\" : \"Publisher service returned an invalid response\",\n  \"error\" : \"bad_gatewy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "59899b41-a63d-4198-8f18-787941a17dd5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.306484Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pscer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "bad_gatewy" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service returned an invalid response" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c472ab7d-9eb3-4e49-a61a-f4a7e163f8ce",
    "name" : "Possession Certificate (application/json)",
    "request" : {
      "urlPath" : "/pscer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errorDescription\" : \"Internal server error\",\n  \"error\" : \"internal_server_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c472ab7d-9eb3-4e49-a61a-f4a7e163f8ce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.306428Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pscer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "internal_server_error" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Internal server error" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8e7e2a6d-8056-4bf7-88c7-ecdde12f64e9",
    "name" : "Possession Certificate (application/json)",
    "request" : {
      "urlPath" : "/pscer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorDescription\" : \"No record found\",\n  \"error\" : \"url_not_found\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8e7e2a6d-8056-4bf7-88c7-ecdde12f64e9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.306371Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pscer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "record_not_found", "url_not_found" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "No record found", "Your API url or path is incorrect" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f17c6db9-76b6-4230-980e-04ec0ef546e9",
    "name" : "Possession Certificate (application/json)",
    "request" : {
      "urlPath" : "/pscer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorDescription\" : \"Authentication failed\",\n  \"error\" : \"invalid_authentication\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f17c6db9-76b6-4230-980e-04ec0ef546e9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.306313Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pscer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "invalid_authentication", "invalid_authorization" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Authentication failed", "You are not authorized to use this API" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a7e548db-21a0-4767-99be-05a0338d85aa",
    "name" : "Possession Certificate (application/json)",
    "request" : {
      "urlPath" : "/pscer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorDescription\" : \"Bad request\",\n  \"error\" : \"missing_parameter\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a7e548db-21a0-4767-99be-05a0338d85aa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.306252Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pscer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "missing_parameter", "invalid_parameter", "invalid_format", "invalid_txnid", "invalid_consentid" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Please provide all mandatory parameters", "Bad request", "The format parameter is invalid", "The txnId parameter must be in UUID format", "The consentId parameter must be in UUID format" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5f0e386a-f4cd-4d32-9a36-955984aa1201",
    "name" : "Possession Certificate (application/pdf)",
    "request" : {
      "urlPath" : "/pscer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "Response body contains contents of the certificate in PDF format.",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "5f0e386a-f4cd-4d32-9a36-955984aa1201",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.306192Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pscer"
        }
      }
    }
  }, {
    "id" : "f847c91b-69f0-47bd-beb3-393b46755bda",
    "name" : "Lease cum Sale Agreement (application/json)",
    "request" : {
      "urlPath" : "/lcsag/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 504,
      "body" : "{\n  \"errorDescription\" : \"Publisher service did not respond in time\",\n  \"error\" : \"gateway_timeout\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f847c91b-69f0-47bd-beb3-393b46755bda",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.306154Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "lcsag",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "gateway_timeout" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service did not respond in time" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b2560ebe-4dd9-496d-a82d-550d997e7875",
    "name" : "Lease cum Sale Agreement (application/json)",
    "request" : {
      "urlPath" : "/lcsag/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"errorDescription\" : \"Publisher service is temporarily unavailable\",\n  \"error\" : \"service_unavailable\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b2560ebe-4dd9-496d-a82d-550d997e7875",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.306097Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "lcsag",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "service_unavailable" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service is temporarily unavailable" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "477550c7-42e5-47f8-9da0-6eccbcac5c35",
    "name" : "Lease cum Sale Agreement (application/json)",
    "request" : {
      "urlPath" : "/lcsag/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 502,
      "body" : "{\n  \"errorDescription\" : \"Publisher service returned an invalid response\",\n  \"error\" : \"bad_gatewy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "477550c7-42e5-47f8-9da0-6eccbcac5c35",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.306039Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "lcsag",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "bad_gatewy" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service returned an invalid response" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8ae3cbfd-d47c-4b73-8a15-22c3f9fdd902",
    "name" : "Lease cum Sale Agreement (application/json)",
    "request" : {
      "urlPath" : "/lcsag/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errorDescription\" : \"Internal server error\",\n  \"error\" : \"internal_server_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8ae3cbfd-d47c-4b73-8a15-22c3f9fdd902",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.305982Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "lcsag",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "internal_server_error" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Internal server error" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3e83f506-80e2-4520-9b25-9b48e02e8538",
    "name" : "Lease cum Sale Agreement (application/json)",
    "request" : {
      "urlPath" : "/lcsag/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorDescription\" : \"No record found\",\n  \"error\" : \"url_not_found\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3e83f506-80e2-4520-9b25-9b48e02e8538",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.305924Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "lcsag",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "record_not_found", "url_not_found" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "No record found", "Your API url or path is incorrect" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3de6c5c9-c49b-4577-929b-4c9609a02956",
    "name" : "Lease cum Sale Agreement (application/json)",
    "request" : {
      "urlPath" : "/lcsag/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorDescription\" : \"You are not authorized to use this API\",\n  \"error\" : \"invalid_authorization\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3de6c5c9-c49b-4577-929b-4c9609a02956",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.305868Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "lcsag",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "invalid_authentication", "invalid_authorization" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Authentication failed", "You are not authorized to use this API" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "02bc8e2b-c5f0-463a-abfe-1c0dbcf721a4",
    "name" : "Lease cum Sale Agreement (application/json)",
    "request" : {
      "urlPath" : "/lcsag/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorDescription\" : \"Please provide all mandatory parameters\",\n  \"error\" : \"invalid_format\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "02bc8e2b-c5f0-463a-abfe-1c0dbcf721a4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.305812Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "lcsag",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "missing_parameter", "invalid_parameter", "invalid_format", "invalid_txnid", "invalid_consentid" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Please provide all mandatory parameters", "Bad request", "The format parameter is invalid", "The txnId parameter must be in UUID format", "The consentId parameter must be in UUID format" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9e34f00c-475f-4e5a-a517-a664e9acfda5",
    "name" : "Lease cum Sale Agreement (application/pdf)",
    "request" : {
      "urlPath" : "/lcsag/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "Response body contains contents of the certificate in PDF format.",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "9e34f00c-475f-4e5a-a517-a664e9acfda5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.305757Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "lcsag"
        }
      }
    }
  }, {
    "id" : "774d1845-58b9-4704-a5bf-b1b8d789a67e",
    "name" : "Confirmatory Letter (application/json)",
    "request" : {
      "urlPath" : "/cfltr/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 504,
      "body" : "{\n  \"errorDescription\" : \"Publisher service did not respond in time\",\n  \"error\" : \"gateway_timeout\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "774d1845-58b9-4704-a5bf-b1b8d789a67e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.30572Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cfltr",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "gateway_timeout" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service did not respond in time" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4a2cea32-27fd-4339-86ce-e00104ee008c",
    "name" : "Confirmatory Letter (application/json)",
    "request" : {
      "urlPath" : "/cfltr/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"errorDescription\" : \"Publisher service is temporarily unavailable\",\n  \"error\" : \"service_unavailable\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4a2cea32-27fd-4339-86ce-e00104ee008c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.305666Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cfltr",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "service_unavailable" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service is temporarily unavailable" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f82a39bd-b760-4967-98d0-f7dbca910522",
    "name" : "Confirmatory Letter (application/json)",
    "request" : {
      "urlPath" : "/cfltr/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 502,
      "body" : "{\n  \"errorDescription\" : \"Publisher service returned an invalid response\",\n  \"error\" : \"bad_gatewy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f82a39bd-b760-4967-98d0-f7dbca910522",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.305601Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cfltr",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "bad_gatewy" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service returned an invalid response" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8f9f967d-b4f0-4506-9c0c-d05d84fdbfc5",
    "name" : "Confirmatory Letter (application/json)",
    "request" : {
      "urlPath" : "/cfltr/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errorDescription\" : \"Internal server error\",\n  \"error\" : \"internal_server_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8f9f967d-b4f0-4506-9c0c-d05d84fdbfc5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.305545Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cfltr",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "internal_server_error" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Internal server error" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3a5d867c-3936-4e9d-8716-51f18fd73c38",
    "name" : "Confirmatory Letter (application/json)",
    "request" : {
      "urlPath" : "/cfltr/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorDescription\" : \"No record found\",\n  \"error\" : \"record_not_found\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3a5d867c-3936-4e9d-8716-51f18fd73c38",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.305489Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cfltr",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "record_not_found", "url_not_found" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "No record found", "Your API url or path is incorrect" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9c734ad5-4c3a-4aa9-b876-58099dba8fd3",
    "name" : "Confirmatory Letter (application/json)",
    "request" : {
      "urlPath" : "/cfltr/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorDescription\" : \"Authentication failed\",\n  \"error\" : \"invalid_authentication\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9c734ad5-4c3a-4aa9-b876-58099dba8fd3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.305431Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cfltr",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "invalid_authentication", "invalid_authorization" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Authentication failed", "You are not authorized to use this API" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "dd4d9e61-ec78-48f8-a0db-4ac0fd46a399",
    "name" : "Confirmatory Letter (application/json)",
    "request" : {
      "urlPath" : "/cfltr/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorDescription\" : \"Bad request\",\n  \"error\" : \"invalid_consentid\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dd4d9e61-ec78-48f8-a0db-4ac0fd46a399",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.305374Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cfltr",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "missing_parameter", "invalid_parameter", "invalid_format", "invalid_txnid", "invalid_consentid" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Please provide all mandatory parameters", "Bad request", "The format parameter is invalid", "The txnId parameter must be in UUID format", "The consentId parameter must be in UUID format" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a644f687-fe63-4486-bec4-ae8b5054b819",
    "name" : "Confirmatory Letter (application/pdf)",
    "request" : {
      "urlPath" : "/cfltr/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "Response body contains contents of the certificate in PDF format.",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "a644f687-fe63-4486-bec4-ae8b5054b819",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.305317Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cfltr"
        }
      }
    }
  }, {
    "id" : "a11fdd07-3d21-4350-be0b-9c920cd656d9",
    "name" : "Building Plan (application/json)",
    "request" : {
      "urlPath" : "/bpcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 504,
      "body" : "{\n  \"errorDescription\" : \"Publisher service did not respond in time\",\n  \"error\" : \"gateway_timeout\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a11fdd07-3d21-4350-be0b-9c920cd656d9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.30528Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bpcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "gateway_timeout" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service did not respond in time" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5ea841a7-a777-4f12-ae3f-8c6efb27bbe4",
    "name" : "Building Plan (application/json)",
    "request" : {
      "urlPath" : "/bpcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"errorDescription\" : \"Publisher service is temporarily unavailable\",\n  \"error\" : \"service_unavailable\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5ea841a7-a777-4f12-ae3f-8c6efb27bbe4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.305226Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bpcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "service_unavailable" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service is temporarily unavailable" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a109f3db-fea7-4abe-813b-69bcdd028354",
    "name" : "Building Plan (application/json)",
    "request" : {
      "urlPath" : "/bpcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 502,
      "body" : "{\n  \"errorDescription\" : \"Publisher service returned an invalid response\",\n  \"error\" : \"bad_gatewy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a109f3db-fea7-4abe-813b-69bcdd028354",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.305163Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bpcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "bad_gatewy" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service returned an invalid response" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "bc56ca1d-1cf7-40d1-a2f3-227d3ea2c7bc",
    "name" : "Building Plan (application/json)",
    "request" : {
      "urlPath" : "/bpcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errorDescription\" : \"Internal server error\",\n  \"error\" : \"internal_server_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bc56ca1d-1cf7-40d1-a2f3-227d3ea2c7bc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.305099Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bpcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "internal_server_error" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Internal server error" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6a484819-5a84-4c22-9f36-bb1eebe78b2c",
    "name" : "Building Plan (application/json)",
    "request" : {
      "urlPath" : "/bpcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorDescription\" : \"Your API url or path is incorrect\",\n  \"error\" : \"url_not_found\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6a484819-5a84-4c22-9f36-bb1eebe78b2c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.305044Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bpcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "record_not_found", "url_not_found" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "No record found", "Your API url or path is incorrect" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "fdb47936-8902-4e3e-a48e-ba0dfca3cc30",
    "name" : "Building Plan (application/json)",
    "request" : {
      "urlPath" : "/bpcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorDescription\" : \"Authentication failed\",\n  \"error\" : \"invalid_authorization\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fdb47936-8902-4e3e-a48e-ba0dfca3cc30",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.304989Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bpcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "invalid_authentication", "invalid_authorization" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Authentication failed", "You are not authorized to use this API" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0b1da82d-ab20-4100-8087-e6ca5ab359d2",
    "name" : "Building Plan (application/json)",
    "request" : {
      "urlPath" : "/bpcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorDescription\" : \"Bad request\",\n  \"error\" : \"missing_parameter\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0b1da82d-ab20-4100-8087-e6ca5ab359d2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.304932Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bpcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "missing_parameter", "invalid_parameter", "invalid_format", "invalid_txnid", "invalid_consentid" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Please provide all mandatory parameters", "Bad request", "The format parameter is invalid", "The txnId parameter must be in UUID format", "The consentId parameter must be in UUID format" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "68d2ff00-f485-402b-993a-de69d6048a16",
    "name" : "Building Plan (application/pdf)",
    "request" : {
      "urlPath" : "/bpcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "Response body contains contents of the certificate in PDF format.",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "68d2ff00-f485-402b-993a-de69d6048a16",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.304875Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bpcer"
        }
      }
    }
  }, {
    "id" : "64cc9e58-9e99-46a3-9cdd-5340f195a408",
    "name" : "NOC For Banks (application/json)",
    "request" : {
      "urlPath" : "/bknoc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 504,
      "body" : "{\n  \"errorDescription\" : \"Publisher service did not respond in time\",\n  \"error\" : \"gateway_timeout\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "64cc9e58-9e99-46a3-9cdd-5340f195a408",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.304839Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bknoc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "gateway_timeout" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service did not respond in time" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "80e2e152-90e6-46c6-ab7b-d2fc3697143c",
    "name" : "NOC For Banks (application/json)",
    "request" : {
      "urlPath" : "/bknoc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"errorDescription\" : \"Publisher service is temporarily unavailable\",\n  \"error\" : \"service_unavailable\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "80e2e152-90e6-46c6-ab7b-d2fc3697143c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.304786Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bknoc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "service_unavailable" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service is temporarily unavailable" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4ce091b2-9091-4e90-bc4a-ed36a641c7a1",
    "name" : "NOC For Banks (application/json)",
    "request" : {
      "urlPath" : "/bknoc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 502,
      "body" : "{\n  \"errorDescription\" : \"Publisher service returned an invalid response\",\n  \"error\" : \"bad_gatewy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4ce091b2-9091-4e90-bc4a-ed36a641c7a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.304728Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bknoc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "bad_gatewy" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service returned an invalid response" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "77de1e51-f95b-48ae-b540-51a7b8aab4f7",
    "name" : "NOC For Banks (application/json)",
    "request" : {
      "urlPath" : "/bknoc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errorDescription\" : \"Internal server error\",\n  \"error\" : \"internal_server_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "77de1e51-f95b-48ae-b540-51a7b8aab4f7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.304672Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bknoc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "internal_server_error" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Internal server error" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8768238d-802b-4dd9-bd7c-4de1117fd316",
    "name" : "NOC For Banks (application/json)",
    "request" : {
      "urlPath" : "/bknoc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorDescription\" : \"No record found\",\n  \"error\" : \"url_not_found\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8768238d-802b-4dd9-bd7c-4de1117fd316",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.304612Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bknoc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "record_not_found", "url_not_found" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "No record found", "Your API url or path is incorrect" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a91a7b3f-815a-4eae-bacb-180959b6c860",
    "name" : "NOC For Banks (application/json)",
    "request" : {
      "urlPath" : "/bknoc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorDescription\" : \"You are not authorized to use this API\",\n  \"error\" : \"invalid_authorization\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a91a7b3f-815a-4eae-bacb-180959b6c860",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.304554Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bknoc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "invalid_authentication", "invalid_authorization" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Authentication failed", "You are not authorized to use this API" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ad19955a-2b6d-4f9f-83d4-71e430c87689",
    "name" : "NOC For Banks (application/json)",
    "request" : {
      "urlPath" : "/bknoc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorDescription\" : \"The consentId parameter must be in UUID format\",\n  \"error\" : \"invalid_parameter\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ad19955a-2b6d-4f9f-83d4-71e430c87689",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.30449Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bknoc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "missing_parameter", "invalid_parameter", "invalid_format", "invalid_txnid", "invalid_consentid" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Please provide all mandatory parameters", "Bad request", "The format parameter is invalid", "The txnId parameter must be in UUID format", "The consentId parameter must be in UUID format" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7bd0b86b-4756-44c5-a88c-7ab674090ff1",
    "name" : "NOC For Banks (application/pdf)",
    "request" : {
      "urlPath" : "/bknoc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "Response body contains contents of the certificate in PDF format.",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "7bd0b86b-4756-44c5-a88c-7ab674090ff1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.304428Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bknoc"
        }
      }
    }
  }, {
    "id" : "6f16376e-ab49-49e4-8961-8eaec3c50c2f",
    "name" : "Allotment Letter (application/json)",
    "request" : {
      "urlPath" : "/alltr/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 504,
      "body" : "{\n  \"errorDescription\" : \"Publisher service did not respond in time\",\n  \"error\" : \"gateway_timeout\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6f16376e-ab49-49e4-8961-8eaec3c50c2f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.304384Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "alltr",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "gateway_timeout" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service did not respond in time" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ede5b999-fe5d-47d7-a17a-41b81f4cdf8f",
    "name" : "Allotment Letter (application/json)",
    "request" : {
      "urlPath" : "/alltr/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"errorDescription\" : \"Publisher service is temporarily unavailable\",\n  \"error\" : \"service_unavailable\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ede5b999-fe5d-47d7-a17a-41b81f4cdf8f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.304311Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "alltr",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "service_unavailable" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service is temporarily unavailable" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7a9fbce6-2015-40c3-973e-77f39e70eb0e",
    "name" : "Allotment Letter (application/json)",
    "request" : {
      "urlPath" : "/alltr/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 502,
      "body" : "{\n  \"errorDescription\" : \"Publisher service returned an invalid response\",\n  \"error\" : \"bad_gatewy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7a9fbce6-2015-40c3-973e-77f39e70eb0e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.304234Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "alltr",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "bad_gatewy" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service returned an invalid response" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7e7feee8-d2ab-4f82-95cf-d301336bf17e",
    "name" : "Allotment Letter (application/json)",
    "request" : {
      "urlPath" : "/alltr/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errorDescription\" : \"Internal server error\",\n  \"error\" : \"internal_server_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7e7feee8-d2ab-4f82-95cf-d301336bf17e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.304159Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "alltr",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "internal_server_error" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Internal server error" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "779852e8-32e8-4467-aa51-d8c1f74979d1",
    "name" : "Allotment Letter (application/json)",
    "request" : {
      "urlPath" : "/alltr/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorDescription\" : \"Your API url or path is incorrect\",\n  \"error\" : \"record_not_found\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "779852e8-32e8-4467-aa51-d8c1f74979d1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.304084Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "alltr",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "record_not_found", "url_not_found" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "No record found", "Your API url or path is incorrect" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1adea726-c524-467f-8ee1-65c1e1c03f48",
    "name" : "Allotment Letter (application/json)",
    "request" : {
      "urlPath" : "/alltr/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorDescription\" : \"Authentication failed\",\n  \"error\" : \"invalid_authorization\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1adea726-c524-467f-8ee1-65c1e1c03f48",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.304005Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "alltr",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "invalid_authentication", "invalid_authorization" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Authentication failed", "You are not authorized to use this API" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9f102d76-22fd-4c4f-b78b-765895698590",
    "name" : "Allotment Letter (application/json)",
    "request" : {
      "urlPath" : "/alltr/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorDescription\" : \"Please provide all mandatory parameters\",\n  \"error\" : \"invalid_format\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9f102d76-22fd-4c4f-b78b-765895698590",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.303893Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "alltr",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "missing_parameter", "invalid_parameter", "invalid_format", "invalid_txnid", "invalid_consentid" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Please provide all mandatory parameters", "Bad request", "The format parameter is invalid", "The txnId parameter must be in UUID format", "The consentId parameter must be in UUID format" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e4e9f2ad-fdaf-4c85-a96f-c2ebf6f05223",
    "name" : "Allotment Letter (application/pdf)",
    "request" : {
      "urlPath" : "/alltr/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "Response body contains contents of the certificate in PDF format.",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "e4e9f2ad-fdaf-4c85-a96f-c2ebf6f05223",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:20.30367Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "alltr"
        }
      }
    }
  } ]
}