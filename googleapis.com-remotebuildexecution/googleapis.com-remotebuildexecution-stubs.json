{
  "mappings" : [ {
    "id" : "85828c79-afed-3034-bb06-f24f1e021f06",
    "name" : "Creates a new worker pool with a specified size and configuration. Returns a lon...",
    "request" : {
      "urlPath" : "/v1alpha/w4mlhe3bqzq1o7vkncye9tevnjmc25rw93ryejm94bo3df3ty4jfsg3s48yy038sdkgy1zwhujvftcedxspx83xttzp53j2i9413v7nci67e/workerpools",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Miss Lucien Denesik\",\n  \"error\" : {\n    \"code\" : 1065381323,\n    \"details\" : [ { } ],\n    \"message\" : \"Aperiam aut cumque delectus ut. Expedita porro laborum sequi quasi blanditiis. Modi neque facere odio voluptas quia est dolores. Ut nihil id et aperiam ea.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "85828c79-afed-3034-bb06-f24f1e021f06",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "remotebuildexecution.projects.instances.workerpools.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "e633b950-df37-3645-b873-b7dd47ff3bdd",
    "name" : "Lists worker pools in an instance.",
    "request" : {
      "urlPath" : "/v1alpha/gdw/workerpools",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"workerPools\" : [ {\n    \"workerCount\" : \"jcfxojvurp8ra9z0rg75tpg7wqn3d3aev22xwcj88b3q11joa9n4u5h6er6xje9jvelu65eh0ozced30rmmuaznduaoo9caue1w6u9336h0tb9qmaceo72h4tm9ox3suteqb8zv44iy4658xi\",\n    \"hostOs\" : \"ip2pudf149rgln\",\n    \"channel\" : \"705ygx4v8f0dvove3u5v7e46qxvwebmf5vfc8fgq58mzv0j8o4c5ippvnn5u1w8bqehv5s2708tq5upxdeoyp0pc6p0g7dohlodifeu88qb46gmbsz9dkf84rgqee03qoa42aufbrf13c\",\n    \"name\" : \"Lenore Johns\",\n    \"state\" : \"CREATING\",\n    \"autoscale\" : {\n      \"maxSize\" : \"l9bb7y1m4cg1zvln6z5u5u65av2pfjmbrzl4wqt2z9jbfq1f7xy7ipf9k7ho3cge561hhy4bul9c7hqimpnpw295\",\n      \"minSize\" : \"lgp38ji5nmo90hqjd6q0dobqx0laluyttfvoouj38ul4ijumpp5lyaf1ay7knxqsm2pu2snkmfvexsr6bxahlct2a7ciouxmaoeqwrrip48bmsd7j\"\n    },\n    \"workerConfig\" : {\n      \"soleTenantNodeType\" : \"mo4gjr51euhhs50e6fn1xlpab0o3gvsb8300gan9zv21uo99wccl2s9378wpc3v06jr2d7n46r42d6ulp43aosyp7t48jkvnz83y6mpigdi2p7ys6bcz5bj0vdeit1sodit5j6azgih9av6fqe\",\n      \"accelerator\" : {\n        \"acceleratorType\" : \"bmx4f266uy96fqhwy8xjuhz4r50m5lqn6ptmix3tlefn8gi8165at3wx6qrxegifhjjqzzp9u39bll429izsz4fc9ql6mgm7w5lc7maoswjxxt2ogzi2zevdjd9fqd5xviuf4njcex2eqja8x1ysivx4n6rklnmruvzs\",\n        \"acceleratorCount\" : \"fz9c46amiuqk0hlnjj6xrk72f1i7fjn45u1fuuc6ktpy8pibwgw5z1xw8g0smjd3ptjp7d0vl1r\"\n      },\n      \"maxConcurrentActions\" : \"sb1xkor3f7u02h26on21214wfh300qqcxbqwkjgtc21bfqbr8\",\n      \"networkAccess\" : \"nj401poz1uajh4623ma5yxca6wuvyz3rww\",\n      \"vmImage\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/scips/128.jpg\",\n      \"minCpuPlatform\" : \"u2pai1hb0i1izj03pfb47158bkyek0x9rezi38k66oovjzju4mueexuwkhbnik2zym4ngzbo78c97wv1skqw9j9hrhzgdeeo0bd6nojqgdoez8895x88pmasrsd5mepkgh5ld923o0tg21atx1g7i2\",\n      \"reserved\" : true,\n      \"diskType\" : \"mm14urzo1zupylfbftwt9xma60xdgxbzy3augogs8lbhzdzm42nwz1pp35heqwsu854n0tknmtf20yprgm59a4no42d9m96r08zoj26sk8p8o03g52ynqc5g2vijjl0knx7g83x7o19fkrbbypariq2k9hv72o\",\n      \"machineType\" : \"gac8w4fgz7zy6707jzp1fdfyfs6aqln5ly3qusxojffgjgnw7m57viut8yjuue8wrv8q1f94qtiou92y3xl5qplfhtp75puqx8jfqqwwixdzcgwd5bsitepup8phyjxusfxak5y744uowm2l2g0\",\n      \"diskSizeGb\" : \"51h0icqqb9w7f301e8kk66qrjyvtpn8v4dw18u8qzn0ewsgpl138xoc0w0a4l1e6z3hrnp3earou3vxjo504qm147no3s0ctw3tpcr78lxgc4qdkctdyjxm4bi0ak07ogscg6vp3ka08v40flk3v7jav9ux8v9qk62us\",\n      \"labels\" : { }\n    }\n  }, {\n    \"workerCount\" : \"20hxgkrj0rw2dvok1dxtqnut2e18x99mavw9djlnl2ahbr9\",\n    \"hostOs\" : \"opekisr2xquzdsi7g1l04y1j8pg2lxgj5dyv0mq1vzdbc43wqfg9u0bz7ylt8fhsi2c3wskkeuicsdtqo4vicv21n4\",\n    \"channel\" : \"l6w2s3xuuv9sv88x2lkvw1dw42ci9j94hh0b74yktaq1khvf4ydqzf8tj48ad6cmq9iy44wd0452wuf20i9b31ig03kkyyufiza1\",\n    \"name\" : \"Pei Ebert\",\n    \"state\" : \"UPDATING\",\n    \"autoscale\" : {\n      \"maxSize\" : \"3gn1ayz6oa1w6n64haa6ajtzh5d92ka2je9o8n6e4sgwp0r2sib3e1zlvxxkqm5f2sl4wq8ws0as3cp3fsq0zuf0bumgupyijjp2p27ht\",\n      \"minSize\" : \"mpgtqaka4bygvcdkdlwxbw0kk6s789osayiaf0zogdjls9sxyw1ahcov9lwu2y99hi6s8rl1ryjg57wygcpqwjxbnp5drbw3rjwu3zmxuqn9qgjbn5q8x1mws74wicgrgsctn8mseyxz0i58r2btcm5m3agzs9r\"\n    },\n    \"workerConfig\" : {\n      \"soleTenantNodeType\" : \"gi530yafpba96emkq5eloakln56foaw81bit2e\",\n      \"accelerator\" : {\n        \"acceleratorType\" : \"u6n93d7c9eb4es7ehxohmemugkfhl054p418j0bzmj4jv5uil22rxeyxopu44zes2ob6nmgik707h73vzvlrzjuzf7e26soobvp12foypoikog6awdxx5qhuaf9vmwb7t99fh8ofg8vba39uko21hmwx106jkhit4y06bwjw0w4aldic40x7rfnq\",\n        \"acceleratorCount\" : \"611c1uy7j5w45tlh5zbe8bwclc58s66xg0iga0qcw7vm1nes9vjqx1l\"\n      },\n      \"maxConcurrentActions\" : \"qrw741tu92k61qusknzxkk21vspo3nfdwuijophkymo1c0cg6i4qo2qyibn2bfy24qm6qsf1ixakyj8st005hz2w9q1rhqmsm3fdbjmkmi5wdv4eseb9rd6lhuw31cmoyql7m9j9wdgcmcus67ur1iinzeu9qpkpwy5p4\",\n      \"networkAccess\" : \"fdrmceahwsec7wadvsizphqq3c3znzioqbnvw92kfmmsb4q64qulgn34kkr3y4dx1iv8tnj5n9n49fdlb2j0t60x5bywpnvbe972k7s7ypdwyzp62pwg2qzdqu571cix0\",\n      \"vmImage\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/carlfairclough/128.jpg\",\n      \"minCpuPlatform\" : \"0esqcyic74pa5b\",\n      \"reserved\" : false,\n      \"diskType\" : \"of0o3vkz\",\n      \"machineType\" : \"dx5tzrecozcfwn0bqvuyhqbqqs9dwd9akt1gjodjve1fxba9upvxjyr28eme66c2yu5ae6xlt3fna68812ftovtrfr9pfs08kt49920y9b6ao4w6wnr67fm6xawhrzp8o\",\n      \"diskSizeGb\" : \"swzb05nyco45oi1r26dafweddsv1z67xl0b8vnqzm4n5ymcav8ixfg62gbj0j1xxqu2qpj7mors862hx931obi14ms5s9zcmz3p3g7fc2ytpmmje1ihjnkeivmipsak1na0xx6l42lvumur3vqgivsu5eme2dcexnc7\",\n      \"labels\" : { }\n    }\n  }, {\n    \"workerCount\" : \"3bsdx3zgpypxiykb822yusn\",\n    \"hostOs\" : \"g7umn3tpzcgxiikby2hki0krv96bxb9f2jqx0m6jv0mh1pnzttg67srchfil4iixfjjj\",\n    \"channel\" : \"m8mulaxod209twldyqj1rarnkjzqhvb1pvu10e6\",\n    \"name\" : \"Katharyn Schuppe\",\n    \"state\" : \"DELETING\",\n    \"autoscale\" : {\n      \"maxSize\" : \"a8o2ungnr4wdhnl8e0oi1ti6vue259m6xsl6ycyqv4x4tv7u83bnjz0mo8b2s0zs87sxkvcj50lpbmo9y072mhryx8tsywmfleyl\",\n      \"minSize\" : \"6czs98l9lnupmrkekpjsowrjltyslkb1n2h1t8e0y43dlvt6ev6cz6a5482eobi2n9jih88q0lqmuewxqvc7h0kv6ed4vveyooq7dmr3rcfd8x9\"\n    },\n    \"workerConfig\" : {\n      \"soleTenantNodeType\" : \"nl3hs28abn71bmzitahx0tq4vlf5ijxkbofhpf3sog76oni1r1exnkzukmqecrkz4nbyr4srfqv1za4rdxm9c9p4a60olyyssbo9hl0shl8qky2n3goj8wohts6le8hspxooz33bmg7yev7ttswomt06ti7bypqpsgpk25gvyx\",\n      \"accelerator\" : {\n        \"acceleratorType\" : \"m1t60zclpmy6e7ogkq6ajegoder1wue0srsdda242day2gkt8d3v2ezbe2qyqjul6vkc4wrokqfe244geuqt2h7tzi675any1zk3evzh4t1wmmkwmycu7pdluh4jbwvjr8gzz3e64et\",\n        \"acceleratorCount\" : \"67dhtfn3ole28tg9dlgxdddsk0q74rkad5c8211puw9x2jw1kxqk0\"\n      },\n      \"maxConcurrentActions\" : \"be93q54y4x2hdejz3l4vgnxqqol06gjhh4ts3k44igene9s1fs4t468ngfeif9fx243ps461sf5b0hsb9uhumkjtr6co32565qffsxnya\",\n      \"networkAccess\" : \"26lp2vzi8ktp6di5tf0k81zv4mq4rrp7frmxrpjcuuks8dx0xs64phmem5vx6w82ogz3i4i15dcms0lf4t6t1pvzzzzksm6b1vnr8d1egs9mddhs4wz1zohii0prddz46fi4vccg13tl4y763tpk4k935vtamcagn\",\n      \"vmImage\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/nelshd/128.jpg\",\n      \"minCpuPlatform\" : \"9gzcyicm\",\n      \"reserved\" : false,\n      \"diskType\" : \"oj032ya5d44uikzbg1a5c52c34idbr718qhm07ffj9psldor6p3dr7olbhvgwnaz1wqaia7xe23gd5y3q2dtwlwwqgqzhog89ufzwsvzuw8wwsx6gxsx9at28tv3dyxwifaarnzhbdixrmcdz5llvgwi1cb8lw8rezlf64izhghywbg1h\",\n      \"machineType\" : \"rehj3bpufnjglbg76ba2ncebssrk47r6duyqvgseotfs4wrjyhbvrjufxkaqhno38jwuwq4ibd6p4jj11moappz1gcm6tq42k95xhldz56sqxc1\",\n      \"diskSizeGb\" : \"e2xa7actdzyi0au40\",\n      \"labels\" : { }\n    }\n  }, {\n    \"workerCount\" : \"41avlvrqg0ruuspknspjvjaj48hetd3p8dzt0kei3ng4gzcd5a8z8p4iotizndvw2y1h92cg1gmdsgrc5nur5x8lenj9ip6l40gmbei9s7rtfwr05n0r2lt9y8w4auw4s3warjwlejd3cyoqr187qx8hnx1wayd83uicwm9rop2p07l1dngchbtarez1yrs9u3owzxij\",\n    \"hostOs\" : \"ir45yoka53bilxsnddjysvv1gbllrrqrsz0qof47ldn1p165cb4bb18z92960jpwlpt3ikbbsunu1fkykqfmg2qesnun0gvfxtd579wygfy11nugd5tc6lka1x84ekuctvf07j1s449hzpna8o41enjnkd4lvcfg7os0fn89jnmb0gl0nknkwo7t5\",\n    \"channel\" : \"ecyyk8l5t4ujjodlp31vxxi0qf943a99vqg7k6k0sig1i1tj61yesf38l0rp5axa5c5lbb9d8iebxlid2ofvqelstbu65vr68mgebldh7ysv6ce299hdhxkwxcjd1t3i14ev16s3ded76mzrswo6z9h1pha7y11oaxjks06ktnqwtobzx\",\n    \"name\" : \"Ebonie Kassulke Jr.\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"autoscale\" : {\n      \"maxSize\" : \"mzovdkjvfxdbiia0ku67sit2ejblrzstenkl7g51z8lo3ww9xl7u8ji6nipd541zelryqb2gfp\",\n      \"minSize\" : \"m01yszc3n53\"\n    },\n    \"workerConfig\" : {\n      \"soleTenantNodeType\" : \"39yu4iqs4tbw0zow559lraexp6hvxc0j5owdcxy1c63ehw7cpgasassq03v65r0kqs6zlu29ckgn5a8vpiewttkpiktit2ef3opy7g2fw5c0fzc36bi04td71lsshe2ru2mznsufcryjr6i9oa5zukcbb2yi2qelfw0i0cp2oz7puk84vwevfbwy6y15oaol\",\n      \"accelerator\" : {\n        \"acceleratorType\" : \"nbmsw1ha5mfh6i8zzu4d7gl5ovo0hj3rs5wg3nrhpnjv9lqhun84sd5bot2ev5gb3tvpmsz3xks16u7w7va0649w6okozmhqfm6wxi47yujuv8mh6q73idgbastgry2d1xqhzgyaz0vat3i7ppars4eg8sydt9vzz6\",\n        \"acceleratorCount\" : \"o2uptiy7snr7dfrynbv1ddolc3056s87zscir8bsg4p3ah6ksz4rhnantzhb7bncg9ityknd3tpn4iajmc9egz04fll3goonkz51m72d9pfgcsisptcaav8a7c9tkvspy0djvlgmfculu1a5zrxcz\"\n      },\n      \"maxConcurrentActions\" : \"xpqkcbogypvw38y7c9ltu8q29x0d8kr3saoqz2a77u62cqv8r631q48q1nmiyoiwwhvwpbg0z5bnbse8a0son4nhxtg42xozafbk3z6u5ffuptt2je5qy9sw20vhkf5z0mpa4homxw9fxudc83to7ugaesqv6n1rczgotieozpy7dehc89wwm411fax1y9w0teh\",\n      \"networkAccess\" : \"qehs3ft1xtcwj94lmrkgnv6gw3zroznq2m8kv26qno3wnl1olthtrvk7d1xm9nq98i4mzcmnx3pfgluo4991brvhbbo7f8eb4zielbwi2b6ex1eqvz1y9ntds7ccj7bdo7xkb5w1\",\n      \"vmImage\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/bargaorobalo/128.jpg\",\n      \"minCpuPlatform\" : \"awhtg8ih6dtkasn99s9kon8we0vvintx75bd6gqsb79f3sy86nf9ev1lmr1pxv7zu6shscsoydq5q18pzzme2lquq1ab86nx6bezelxaoww0mva1g1wl49oy3jmxqk071ndhhl5px4v6jikglpc4lfj1djazv63m1cv552cuh94hqv5kuvie0se0klw98\",\n      \"reserved\" : false,\n      \"diskType\" : \"ogfbtr2hrasg7jrwripk99fp864dlj490yg4ner042kaednajkahld8oahxq7othc4vq38qz08rzcv2x1krphyylw7u7p83x6001zif618hm321euw1x76wneyxhf7nf0kqmhg090y1f56brynu4drbsfol\",\n      \"machineType\" : \"hpen97vflgfbt5pc06kn8os21eotu3q29rquwsy80cz3r0w77rch91ii8b9e1y6yo464ra5afv1zlyheyxh0e6z14ywq385ja8atcus3q7nzr77zb8og9yq0a0rg28n2\",\n      \"diskSizeGb\" : \"0wl731lyj6qxqurtmeaishvsq3yzej7fbuye94w0pydt77wdpd26lzqg2wupor7kmaajyigm\",\n      \"labels\" : { }\n    }\n  }, {\n    \"workerCount\" : \"fk7alz18vr2n27145mktkndgwwezyjqzu4inyiwuzor9o4lgyfulkwyyh3xgve6c2fjmnls671cv5yurrwgkbye1nbxa0f2nt0jsl0tl9m1jfw96cvigxyphjqnuk7irm19f\",\n    \"hostOs\" : \"srmwfehrhboze4lo9pww505xfws1eqxjwj6r7rna425vbkbu1vt4jpulp1xeorcb9kqke1okunnnc3gxlgk4wev3gfdpxlx17fmcp1utavtu\",\n    \"channel\" : \"ila6wp1whte2l6o6e3h737ve9wsl0rux08pajbx749dd4xesciota5r8n5qjwruoo5tvhvq39wyyx3p1h637kwpzgffci\",\n    \"name\" : \"Lowell Grady\",\n    \"state\" : \"UPDATING\",\n    \"autoscale\" : {\n      \"maxSize\" : \"6jisi1v7eve1ueysuo9sf2rhu6rioe9yt48xnlvoexn6ucni5nde3ahjk70gm5rpcmylo74b09difxsofp6\",\n      \"minSize\" : \"bzgbafiiddj7blmxgzksjzioec7iwejtbrnnnuejgarjcp5ml4o86c2y8ffx5pt0eblayhzj\"\n    },\n    \"workerConfig\" : {\n      \"soleTenantNodeType\" : \"bsi4fvth3qmkjybjfmevf29fa5fq84lcs0n8\",\n      \"accelerator\" : {\n        \"acceleratorType\" : \"vl1qx3q54mgozuya1lt5lj7p19zdxgy1wvz65yp141zfpp71u52\",\n        \"acceleratorCount\" : \"2ynsh8avk92ld6rbh3w0fljdx0gws7v9a1rz9wu56lr0j6w9280hsusmjv7mtwoudi5oviyug4b6o6m89lpjpjw04706ffhb9o54s3ya\"\n      },\n      \"maxConcurrentActions\" : \"ocjpzxywlbka4zthsmrowkxe\",\n      \"networkAccess\" : \"wd6r9ejcrbimnilahrz4k24cnf4xdex1xyaztira9qa9dwvhoap3j6etpdtt9c6v3pnng1ne6khfvranh26q71198gbtfgjia2e1zn2cg66resqo7mfcd2i2j5clnpvm\",\n      \"vmImage\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/tjisousa/128.jpg\",\n      \"minCpuPlatform\" : \"73052re5elyixgah34aafsmgfd9ojbtx1jzbk2gz3tx3uegzaj73im3na5rux3mw4lcowz8tdvjrdtti1clkk1391ayt2mh5n7zqy9ua67h1esuq6lvwqeckc6v08z1grb0loin4cx9uuh6325kryg61638runuro\",\n      \"reserved\" : false,\n      \"diskType\" : \"5b7wui5j7eu9dxtsusvkwi1w70rai9bxuu8kmfpgimdevi83h5o91mnez5mm01renhzw90eh3q91avufrur88054mdj0s8weaq6wc85z2m8w1grgnc6ew7iryqumudqihirbb3u9ntgp0u2c6vrpqj3d1wrqcog1phoztlwkqozig84s9z57p9sq4hryftakj28\",\n      \"machineType\" : \"hc8tlpdyxkui26r6\",\n      \"diskSizeGb\" : \"dimohr5c6uzv4k6nwsqly2jnlrf5tmhzbiafzx1eo1iimhm4pjf7b5i9mrytr473z449kyk7din1o050ldjbwmx4oe9028n8tf3jvfwtiei1unyveeicadsfjn1uvvjul0wklg6ep4j6f3\",\n      \"labels\" : { }\n    }\n  }, {\n    \"workerCount\" : \"dvee2lzddas5eniiu0okgclxzngysgo9yavh9ijmiu9ldga492rb1a8uy05nkf1ch1d6wmihr4nsyi5l5ycig63zdbx0itgkqkfwsz7u3ym18ppxo44odxwke1k9\",\n    \"hostOs\" : \"yw3njgj17pxcbohitj8bqcki94efnsxxr4gsgz4rtnkw9ue4g7j26z2d3v95721sxlaavnkutoclniyc52cza9oikro7pprem73nthiyhf6btxnekhvyvjstpembkl3oceh56cojfwe3fyft169\",\n    \"channel\" : \"epxg2slp3ztywjxd0tipbmok7w4ta12sthf8e12savgf9c6lk85m1e2p6vrfwnh4a3ff39dhpvbfgyx1j3cj2z271dfq5i59tp58txc1yiaetkywzoftp752y8tymk8je1vvbs0ofack735ni5zffbg6gi8wzxnwutiw5jq5vi1mf7ly6orl\",\n    \"name\" : \"Ms. Scot Crooks\",\n    \"state\" : \"INACTIVE\",\n    \"autoscale\" : {\n      \"maxSize\" : \"6ldmn2qb4ibjn43dn3mayaowg71oqdc3f1eogy8km96f5swnw5ebooriszv6\",\n      \"minSize\" : \"g6bkmrfvo0ubjeevdr0bovxzlkz5i848pwxvahtdtnczw7r1gz5a42ka6eaabwojiim4pd5uj0x2ylyytl36y\"\n    },\n    \"workerConfig\" : {\n      \"soleTenantNodeType\" : \"nmd399g21esfc1boj24x3xirz0r0say8mc4j283t7q93otb2o676ohe6ndawlpj1msc2rxps6miruf7f78ewjkpk74p11c62e4ecpfseuxleqk15oi4jhi1lu0pomqdfueqloa9cksyew6ee4hyfy3xake5yilulfibxwaco8mb28vniyos\",\n      \"accelerator\" : {\n        \"acceleratorType\" : \"xc7xdjixtveedvfj1n76qhcjsmyfryx03ns\",\n        \"acceleratorCount\" : \"yw8fv37z05qobfo4bwqywppeeul7qskmta4p7j4otey40o6mzzy278nd6dr1p5qrnw0s77olxnn2e7r7f9gtle62vep07q1pq2cwf3i10leuubkeiobnxq9ok61ytq9jvr4d8o892kpcf05ceg1org9hn\"\n      },\n      \"maxConcurrentActions\" : \"8oqou6ahj0nw7ny95lqx8t3woqc4tao5fbx6ga6pn9skxm4nrfnqs5rq9tdg3a02lk2b3fyrubzciknk6rovz48h88bhnq351x0i\",\n      \"networkAccess\" : \"vs78gunslvxqjsfr5gw6ngp70y3ybpxzwkrht11b8u59v4cs\",\n      \"vmImage\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/moynihan/128.jpg\",\n      \"minCpuPlatform\" : \"7oh5pg4u0lzcn\",\n      \"reserved\" : true,\n      \"diskType\" : \"7ao\",\n      \"machineType\" : \"vaic7j9caul6zxrvwphjbg32pe9oiqwagc2utldk2z0r0g35m6kaz5gok8ho6e3xttan0i5m4t94oat1op2qr6su7q8i33m3zrm3s1ygdk7kzsh3snara9fbm\",\n      \"diskSizeGb\" : \"6t545elmr6l68\",\n      \"labels\" : { }\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e633b950-df37-3645-b873-b7dd47ff3bdd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "remotebuildexecution.projects.instances.workerpools.list",
          "schema" : {
            "properties" : {
              "workerPools" : {
                "description" : "The list of worker pools in a given instance.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "cc770793-1f5b-330d-91d3-c145127b1cea",
    "name" : "Creates a new instance in the specified region. Returns a long running operation...",
    "request" : {
      "urlPath" : "/v1alpha/koc/instances",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Dean Cruickshank\",\n  \"error\" : {\n    \"code\" : 369636064,\n    \"details\" : [ { }, { }, { } ],\n    \"message\" : \"Est deleniti modi commodi voluptates nihil nobis odit. Ut iste impedit magni eum. Libero qui magnam illum hic animi dicta ea. Sequi et adipisci laborum tempore sit.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cc770793-1f5b-330d-91d3-c145127b1cea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "remotebuildexecution.projects.instances.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "2601d5e6-ccdd-306e-b529-96075eb97be5",
    "name" : "Lists instances in a project.",
    "request" : {
      "urlPath" : "/v1alpha/j1eacbg5d06r096h534x644dow9i939pimnxp2joe4wsnisymz5dnjb8y24n4srgeh2kobrg7xxt56tg2nnjcq7a0y4h0ozs6rz9bgadmg1yg8cd3okxrguohvkeoxo3e45tfffg207nlkvg3i/instances",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"unreachable\" : [ \"sup4uv49nybq7f16b26ptnwyan26varcee4axosydj1aw2b21fhxmzcb448afien9dolcs5x0k9gbloel63rxjf1l3uju8ykft9w0nvrgj6c4rgyvocsydq0tipic0acptn7j0wgpviw1hqh2jwfxq4cjpn5ixbh7luns7d8mlg2g\", \"8koy3gnulw9z28nd603cg2zy5668k24jtrvd77qk3bivn1bofahf7he8xglsrtn5aidtapiafm4gk2bo2exc8aow2oyz4mk8xvjohun1hkdi20tqla1ftdejial1btxy5zfwzn2thyzpoi6pz63oxkjsnu\", \"gas6cwjqe465zs6u9286ha6armjv7hht2jwl4tol0k4yaptgrx938uh56ibdy2ymm444ewmdy1qg5oudrc19w9fr0cysrs3ou00ftcgbgm2q5mkxzhrctj6u3koqavvecn1oa67ja6bxg6b71bap469g8jgqce7qdphxvaehnv9g0u8pqi4bn86j\", \"80zske9fote9k7m42au70t00o733c29hjfvyy6b5iemff1w4fjvi10rarbthfolsd6fw8sqhsneyre3vg5f7vu65oxylokxju4b1845jho0hvh4sq8p5z4fbz6esk4ok6i7e8t97mh\", \"wdei8brqxln9untiwytxbsgfiguekdyng4fzcradmx3m41hvmec0elmu4\" ],\n  \"instances\" : [ {\n    \"loggingEnabled\" : true,\n    \"featurePolicy\" : {\n      \"linuxExecution\" : \"LINUX_EXECUTION_HARDENED_GVISOR\",\n      \"actionHermeticity\" : \"ACTION_HERMETICITY_OFF\",\n      \"vmVerification\" : \"VM_VERIFICATION_GCP_TOKEN\",\n      \"dockerChrootPath\" : {\n        \"allowedValues\" : [ \"4t6z433oa7bbasxxdwo0a775376494sa2me9skt77x0keyelee82kymcmel5u2dnsig35cf3w7ry1d13p64aaccyjkdyoy9n0ivmco5cidxxmc4\", \"821hdmfqe5opmdjh7nazv12sjz2gr7vwom4tid4d5uxv8o06\", \"a6tb79x875p875kd6eki97z6ryqlp\", \"9zlb5w3gb5tpullnwlvoa6ev9umuyidfop35k79b29jbzs2825mz97z08szlljchdww6bbntri0611107jhvlnbt8ypsrlvunn67e0ic39o1kvcog5van2tz100q8mojgzuc5ik3eib6s\", \"849z4br5xcy2iqbd8hu4lpu3z0li8a266t5hnnqarwn7ptgbxvxwoev9v9fmyr0p3dw1vqjusggz3wssi29oecss7l3nbazddcd3sl4455w2a5yx7itp343nk3g9copfehdb57z6wxb0qued5np2qadgnb3x9hrz9e3yv5yenlyq0rj665\", \"8zjq7aitkp8sxltcocc4\", \"e0d32y1jel8mcii2i19tp5poqmnk81hbtjgr0mlljeyxqskmstywqhxmrt88qs01w35f9uf0uw3v5l6wsnolhuvcbwnuj9mpyd5q6te9lt4atfdaq8zzec3hyb8mndvxkj0wkkrrcnm\", \"7lcy2u282el3rf8rmd3glnxadtpufraxjohri60ggpyfuvawiqr8d2pk5zrfqriwbs3st84drujd8is3\" ],\n        \"policy\" : \"RESTRICTED\"\n      },\n      \"dockerSiblingContainers\" : {\n        \"allowedValues\" : [ \"tg5kuqd99a0m682xc9f096j2rz46u1gynlh9d5h2umbt4y21j1fkkytus2hosjwu4sjlhjyrguh02qz9vow48ee4k6812no8x1j8xfofjzysb6uem8wq4aas770cr03ppo6qzxmrfwajoub0q35lgrg19ch1wvysm4a7bp1u8c1u0s5t8hnp5s0wmbvo\", \"j0uq0x1aliqh04grqpsez3uwluo3di512vd0et2s7\" ],\n        \"policy\" : \"POLICY_UNSPECIFIED\"\n      },\n      \"actionIsolation\" : \"ACTION_ISOLATION_UNSPECIFIED\",\n      \"dockerRuntime\" : {\n        \"allowedValues\" : [ \"0mx46\", \"5eyicwv1wprptbxvv98yb7ax0a138hm22ptae4d5gzlw6\", \"qsz99bdl2ye6lks66vtosm794zn0u8h262f0yukk8c3smftntjbiv9\" ],\n        \"policy\" : \"FORBIDDEN\"\n      },\n      \"windowsExecution\" : \"WINDOWS_EXECUTION_UNSPECIFIED\",\n      \"macExecution\" : \"MAC_EXECUTION_UNSPECIFIED\",\n      \"dockerNetwork\" : {\n        \"allowedValues\" : [ \"k0z7mczhrokyf040kiz86ji7e3ty6mm45fumhfp617u71a5sceojc\", \"mdkn2uvic6rebv7uxyfiasuac4po1drszepgtpr1um2pvv16rdz329fu0g6abkrgb18afhu7d1bugknq29vr0x0zuutgbckpe3qslifkrfoh\", \"xy1obccfv8vy97woxsfknhzwyunvq8jio9fq7am26bj7e61d9aayovz3pjivut1zjizkqdhhuovwdxc8gbklhpabjln6zvajet\", \"gwslphbxigf5vobay7nzodwh2qz2r3xtyg1nwly6454lj09gzp77j6hfyoeqtkj\", \"vhp28hi9r5k3futvu8l9qch7xj2i1qn0l1pb0bd3jkjir6aphfzh8oon1bqswvv8m4qhr60z4ctbvy0hmcoe1uk2vordx71hjbdc8wnfkkhqtrbr8liju2bdfccq2yym71xne2voyk8au8s0j5uu\" ],\n        \"policy\" : \"RESTRICTED\"\n      },\n      \"linuxIsolation\" : \"OFF\",\n      \"containerImageSources\" : {\n        \"allowedValues\" : [ \"42ou48k5kvj8sffyivhej2ts6al1qyze7oogh0cav8jcjq7h7ftqlueq0x61e7sbq4w97uv9s5uswm2qiw869djzx5n6xhx12vntigj6zaf8npb2f2uakogfevlxhmw4mo7cyviv3av0zqgwr4w0m95f2f8284gf6coq3cre0ax0e5w1hb2vqimvtwjue\", \"nrr4mgqcaf0fjpsa279v13b9ks7lwaekpe5c90rhnsokpa3ij1as6jdkab9wvic6qfrjcasuvzhye09k0fa7x9xhtwviyzk0dn2q4zb7zmw8pecnyldbfzafeqkuh26pudat5\" ],\n        \"policy\" : \"RESTRICTED\"\n      },\n      \"dockerPrivileged\" : {\n        \"allowedValues\" : [ \"zhiv8fzhpbwtee2zo3chz5yiafpsf2py3fu8\", \"4advwagj4mxniftrqbc4j9wyxwe073t1s1smz9bm3yy1amwu69asb5goosflw2adt27wfcmgzh3\" ],\n        \"policy\" : \"ALLOWED\"\n      },\n      \"dockerRunAsRoot\" : {\n        \"allowedValues\" : [ \"chqzmev22audihbo8htfhqrni6jcmikm2t8hqdqdlpve8605ovosdsmlr1tzl0ew6\", \"cpjuog3cpoutrr63b0hkpng4qrtod3x6r2ovlkrvw1c19s92a2j607l6mu2o80k2aqbxgo6e3ypqh60g2h89sssgkr8szg91p54n5v2jqs8ygd97wh53nidgy\" ],\n        \"policy\" : \"ALLOWED\"\n      },\n      \"dockerAddCapabilities\" : {\n        \"allowedValues\" : [ \"uiuh58mv8w1uqchxoowcrf62nne4k1aj6o83bkfrwwbccxmhzi0eq82dd0fjmccsknad1wbz41dtzbj4p2qackv477oe7ioxgxl1rlppy31zwartncya0qwve485w0xbt7gta22lfeqren2l5gkgfzedzp74wksell2nlz92jy4qxluzzlpqkeoysoxjc4ptabai\", \"5h7dxwx3mmr9a1i977ov2wpfiy8j1bncw38tdxozi7awfb6whh4bzvx2z4ciugank68pcfyxwj1ulbt0dqif9udmvmgly9apuucymb9zwdysom70pu136o9e8dir13bghrk7ll707e66coxol66wwiyoqwuabamauirhodrnk\", \"yz01d6ke2gc3998203hj4tw4z5slea91sbkxmsjtynrs3ibvvr9zf0g2cispnrp8cpqi4x9jxzt33jle0btj9htixcwpke6ugfxc06yxdua1993x09ylvb6zda6u50h3lv34tbhjr0uy2kd93zibwz83ifhv2gqvj4vdz3blavxhunpypg2hx12\", \"y50cd4to826zckjw9hy3e6d5ul0h2lphbipbml9rf6\", \"abcm2ai2fo959k5mpqdh1ft4vumuk5qu69crnz8vdtove5eaxs1aw6o892mrs9doy5mhh01083yf66bzbqiaairfn1koooxak9i0c98pa0jawsfd1qze34zv1kehd2uyrbsd4e9i\", \"n3og0btx3nnrnufj5vg81a5solns65iffcdf\" ],\n        \"policy\" : \"ALLOWED\"\n      },\n      \"dockerRunAsContainerProvidedUser\" : {\n        \"allowedValues\" : [ \"vm84arvkxk86963xsyxxcpyb702skkq6adhr8rq0162jtvbaskwf7xmlu6dk5hh10wom54ldkpmkrqn4494zckldy74b964sjw14ztd\", \"z1ttmeuzp0fe8eo2\" ],\n        \"policy\" : \"POLICY_UNSPECIFIED\"\n      }\n    },\n    \"name\" : \"Jed Effertz\",\n    \"location\" : \"gjx5mq\",\n    \"state\" : \"INACTIVE\",\n    \"schedulerNotificationConfig\" : {\n      \"topic\" : \"vzw0pg9sewbxja0oqk9p9vtl6dbcyg1\"\n    }\n  }, {\n    \"loggingEnabled\" : false,\n    \"featurePolicy\" : {\n      \"linuxExecution\" : \"LINUX_EXECUTION_UNSPECIFIED\",\n      \"actionHermeticity\" : \"ACTION_HERMETICITY_BEST_EFFORT\",\n      \"vmVerification\" : \"VM_VERIFICATION_OFF\",\n      \"dockerChrootPath\" : {\n        \"allowedValues\" : [ \"xz5moi9coc\", \"q8r2gugl72fdf574rro09le3qvbkl2cy46\", \"621bes4xdcr3hc72kij4zyyairbhfmp0upk2auv8fzvzxv9beqgzfr403vjpud1aevbqwikj56dcvtvaov8rrgypjt08k5nif7cdq1xivopybbm52b2e1uyjf54t6yjyr5xzqrttnung52tyd4nh247sp509saikeh35mn0g8reuc3o\", \"s0c0ybcrmqlfk7ij4ljg1zacjrx63rtf2h2xzild9dnfp\", \"nxe1mnaejete1h7kp2ew40koxfeljgw54h45s71v3qymxadynq1kof7e0joj6jmqtuepvfh3h63z\" ],\n        \"policy\" : \"RESTRICTED\"\n      },\n      \"dockerSiblingContainers\" : {\n        \"allowedValues\" : [ \"3009wig5ns2n\" ],\n        \"policy\" : \"ALLOWED\"\n      },\n      \"actionIsolation\" : \"ACTION_ISOLATION_ENFORCED\",\n      \"dockerRuntime\" : {\n        \"allowedValues\" : [ \"ilygqvrh8dt1\", \"qbjjmjzv2vsmqzgjin3goucnpoovx85rt7gvryp57ucbofydierpxsmzf97\", \"joihatlg8gz2wxg8t5srck78glizzl4xhc6v2t4neccq0razprbsapt34934l60aoclj3zwu0168ejtnuucoa9jjz7utnbnqi3sdw3nh060dtztkqme49qsy5cwzkel5g5ekywzoh079xdmmsw1r3uza2nsqp9ef23vl4cd3bm10bzgicz\", \"4y32oii905hwo8ql02dwylqnaf57djqknn8odtdm3agjgrcmkgdovkuv8m20r97shjogmw7hinwrpbhn4zccysqa3fyh5rupku20gk3e7u2a8kyd0g8irzvpfbt6ehar2y7qy\", \"fvvshj1aa4kp0nap8vph7ztn7z6qq0ub6il2wsnfmjdn13xkw0gmtqn9agakcrsovd56x2i763j6gef0pu4fmc098cmlyp3otwp2442sicllvyvx87lav\" ],\n        \"policy\" : \"POLICY_UNSPECIFIED\"\n      },\n      \"windowsExecution\" : \"WINDOWS_EXECUTION_UNSPECIFIED\",\n      \"macExecution\" : \"MAC_EXECUTION_FORBIDDEN\",\n      \"dockerNetwork\" : {\n        \"allowedValues\" : [ \"9g6ksdlvbdhxw7ykref5dbk3vi\", \"eio2mw4ewopg76gjfql8mnxrb3h3gghmva663xdikucpxz9t30j7melorql111w0674m3n5osn2mh54ve\", \"4pa0h9jiupwk7natsgeqgwnyyk7jlbac5k6rz9fydx8xo68ivxmdlfefg8nz5uzkwd4vzuy0b7en4mkajqteerxwvkodqsh50yyyazjl47zqv7o9e2k40x0lnxtislf0ny2g0cp705xeqlugttmg35y68y3t1hi38y3qokt4j2aa0\", \"fh0\", \"tzc80gls8ji976bormmqi98lx2fs1e23cptspu9lcpsm9aeidjrq6vtqzpqpz1qkkibqthbz22sb4hsqowbzo4xappd3d905x5337enux6jkqqd1em4dytuean90vg2epid3h0pjhzp95duaj\", \"634ye0iwurzpw5bu5rslq8llh2qniw97dvvylr2swanlp4htsy0ycxtbr6\", \"3leaicf0cr4hgpabhkgh9oar8wjp02gya94gntwlz2woak8jhrylnoawcpsxsb5kxxrjjcn7xpnq9b2c6ssdmzio2lt6ypg118d5qxx6n60sr63jj82d68mbtsnt208joks5811ps4o0ivn7hpze7krwyxu0s99raws3h0z\" ],\n        \"policy\" : \"RESTRICTED\"\n      },\n      \"linuxIsolation\" : \"GVISOR\",\n      \"containerImageSources\" : {\n        \"allowedValues\" : [ \"bhc1nz2ohrrcgw4fcdsr4frk8w1hmp1ruqaejrr4copt16alr5fib1hacx6d0x03izk8xhht\", \"l036w2sm3n9diw0xq0kl9w97ppg0kajv04vt93nxz9ktdeyza3yl0dk862iwkmaz18kvycj6ei5tcxfdlmw6nfqh14ziadez0yihw8g1064iqcnx94w5ajxjs2trd2zpptaiyok6xwevf1il0lw6qkn4g1beyv44w2zgh5t5l4u1wi\", \"mzgwvhvrqhx8ou5ox6u6r79b6rpw5eetun6k4yr7epb7tlpjuw\", \"p0glk4bi2m867tzj9tn8hm7hnmoxbsnp5yh32uybp546k4dkw\", \"aohvviwatibjq586f043eoe8rmfjxyaajesph9o8\", \"m64tlxycmtjha5ls8001h120bd9wnfsu623r4qlysl9h8shvofesz588jtrmhvoyszpimuc\" ],\n        \"policy\" : \"FORBIDDEN\"\n      },\n      \"dockerPrivileged\" : {\n        \"allowedValues\" : [ \"f2nnxzk4izbkik3f6hmra1udpie282eue63aulhojszd80x77oil1521d8r9unbpzk0g4bw9f7unixeu5qmpxax525wieilpafr62x1t6dipo7m12zlz9uc1sv1i6sbjf7rk2vz\", \"7xzbq691g08bg4i6pqon54b6y7h9akaj3i5vaeojo7vjim187rc1ye05uou51lfdgv2jpqgxokrxk4u62us9n5r2nem5z831ger\" ],\n        \"policy\" : \"FORBIDDEN\"\n      },\n      \"dockerRunAsRoot\" : {\n        \"allowedValues\" : [ \"qfze04op1f25xmkdiz16zbyht8biln61ssiih34f7xbe74p0ls3d8j6tp8t\", \"pd5xznky5697g8h42epoezthvngsxsaso9eqxbjfnhf1vogk5w7eb7qrzg9b2hy2najdfp8i7d9qj3ql7ljzj4wi4debi3vi90fydgcpu5xn89j5w2xigoi667511qp\", \"bsrqfoenl0utkiy08xsdo9u6a908rj42p867lbfp9wa1vnajwywxpkww4ryoz4g2\", \"tyhq70ss1g1bmen6mgdcivr9jp7t1ecrbwyoqhhtgj3ewuuo06m1ht117d015nu4pz51qwcoq45eftjlqgwxsi6c8pc0x9sy98j4kpp4sg31l4bw9t33tw3qji5vitirvicfrwm25jpp\", \"lz8k98w7fuopru0hej9oq53u5dv6c1p76cy28jmi8njyp0i9ibi5pzey0uee0mr1jk9f0h3u1c7vhl3t430tsillxosoe910fq85niyxvp7ycm80j44ejytxt8oek69or\", \"d8tzbpjs5btcspus7fxnn4v6oq0pqn9vuukgdzn6r481erqr6t\", \"zzktx3ibg8r56dac6tnk006lf2wrfi7ggzgjv1wegiktk1zyebzee5yaaajbxel0ldppr1oeu7fyb97q1dta1aoawb2bgekwxsd4yn3itt798yjrtxhlha6kh0o5peqwy3zvkey49m91qyr7b1st1h9y1pm7ovhkvww7cvnaawvazp34oky0qwhec67hk5zbc9i3jtb1\" ],\n        \"policy\" : \"RESTRICTED\"\n      },\n      \"dockerAddCapabilities\" : {\n        \"allowedValues\" : [ \"rskagasjlrqwhdde6y6cevdg6ksm4vhnsis2zi7zh9nlhspufbl2bf6ctxyl552fv27br1css50ng23kqrdjryfkxyegm4m0h7lt4qt374h8c770p6hu6tiyjs5bn4vluxyna10npe9affp349r0wpqk3zd6ch83lutq6utgkaue4yi\", \"hibye54zac396hkw7ga1n2nkqj21fsepsfc8gi0j065wdsbkt77uplmq25ac\", \"jsvx74kpntiba05ccbx19rrj0ii0xiq9vgzi2kt1oqp30if5od2z7oik4q9l4xas0mq1c2w84id2mv9fzrd5bzm24aeovpvpzl5ffpmeefhx6m64qgu4hvuhtyrko9l4b1gf9udn7suwylumd4879ratf3tm5i4tx2r63tzcq6nezyiwac8mm6a\", \"42n36muo4tz1n3hzypcf1am\", \"cmitp6rir518axqexalytkvijfuap7g5q3rkqm4o3su3xrl5lt9l17x38s425psm5xikjkxv02289tqedk0nzymn0bfthwm1mequb57d0mtr9ej37cionm5y4vmpz0fwvpvsb5kk6uydmf1at7glc2xax0eysq7seiu03rp5711d7zc4aal17\", \"tgqlmz7u2lg4a16qvx6ab2yku2epge1moefsocjpw3yedyape1muhxnm0dsnosn7097mzl7jvkthi50kro4crez0icpowtdtcyndsfwskswtqhrvrgvp\", \"t6ljpflnbn0lsusj3m3bg1vyhltwkf3wqfolgs6d54vvsix08vl6d5jx639n5nlvzhdvqga21zdd3ir9fc3rg5udxpadk40w4ppryaoyhuujy1uzjt9deqrbr5o04emopgqb4emmujr183geh1nr56rq8hwmld7emja21gwyo7ez15rdyaezpft\", \"iprbtpdfiip9p2p5377gc9i4u5mssyhgzswxsyel2yg9mcboq7v5g8suod731zmy099lq4ibmzs438k3suleambsyxjksstnkf2fd0cf7z1j6vl\" ],\n        \"policy\" : \"ALLOWED\"\n      },\n      \"dockerRunAsContainerProvidedUser\" : {\n        \"allowedValues\" : [ \"ksxtmwlq70xd9j9hnl6phlcspv4b8cipqq4zvhsmbkl6cqavntff54k2h5o9wyrehpcerwj5s77anlwry9343kvtldcnwivr53iajqmts8vwwjbet5zce5jguxlme\", \"wf42oio8ck8l6eblq1wt4hngp1aa2suytq4roevc8wg52ce6e9k6u9kku6ta\", \"0iafxfmsks4qb8k42nze3trdutwa5m7n1bhbk15pgw4x2bujgw2hdgenzjp2bt6mlmh1zbm2be6a1j6nwdnf26142yoylzotx219yefwj3hnmoll8aod82mboycgdxzz382nosmmsj2ub7dsae6swsj50rjqwayk\", \"u8f4l8e98kciisvrrtdzrc9fq3rsk6okhe34li8dqugl6dcx9iim8rh8j7kjimqp6onisvng75cevqtr61lvyvfjuesfu58lm6e863ufke907jz\", \"1gwgv5fhkyutnm9ot0g749h8lwdf9wg549vpak016ht4bwgibgbgct6qb48v3dv9q1am3iuz4gmng5br\", \"k1mbe4daeerh7wd1l5lgn6s70s6xs4c7yejsbf\", \"7uy1i02uqa2sewg0qpbg6tlo0y93249z7qq6l3h\", \"6rs9pxfi47fuzz\" ],\n        \"policy\" : \"RESTRICTED\"\n      }\n    },\n    \"name\" : \"Merle Murray\",\n    \"location\" : \"ickmu26rdowkmnva3nmh2gh\",\n    \"state\" : \"CREATING\",\n    \"schedulerNotificationConfig\" : {\n      \"topic\" : \"yb79441bgg6ywhibpyvf4bz6tgg2k9bxtvrjic827fklfr9cyedafqoh5f1bts8138\"\n    }\n  }, {\n    \"loggingEnabled\" : true,\n    \"featurePolicy\" : {\n      \"linuxExecution\" : \"LINUX_EXECUTION_UNRESTRICTED\",\n      \"actionHermeticity\" : \"ACTION_HERMETICITY_ENFORCED\",\n      \"vmVerification\" : \"VM_VERIFICATION_UNSPECIFIED\",\n      \"dockerChrootPath\" : {\n        \"allowedValues\" : [ \"eokbimsbf9bucxsqbflfetpsd464ivtilt76zowjfpq3gsps7zqi4zby7s2wiz6xii3\", \"977dudywkwn5fgepj6e5toliulmmkswaf4qfgnffyp8tdbe0o5clmwsl6zzqdok7sd9arq9twe8p1pzzi9nurtuqq0\", \"ko8p80cvuri00lx4ehdrzl9t8wbovqcdtfk4ux5uhcd0um5m3w9y3sn00zj7579mky1slrplajmbz39inxxkylh937r\", \"hfxklxxx585tz7q83m1v43wyve26vh7hnt63y60zhtys6g6iwrr2sbh5fwps74raoab3v0lqtuwd31yorpmsri1n59myqn93xym8hl34j32h6gkwg4nm5dmbngq\", \"eg2uiks6atyk97u8z5mxqizyf3ov2dxvc942h9nk32o1nwfs2libza71w9umi3lg6ibfa\", \"bfh9w9wxpz9scsj8x3v7ddrdx4lqc7c7rrvwd891iegucj21dmnmw9l3noz6d3wdtqvkfgcdzdqt3wx7za4n5tri82bl4eakfk2wv420dro9j3jtiqhsbgamq978ea524nnh8uvfegp0cstzumzauh24veyvm17p096bv03or1t8dbbevjso7te6qchtxcy3ri35v\" ],\n        \"policy\" : \"ALLOWED\"\n      },\n      \"dockerSiblingContainers\" : {\n        \"allowedValues\" : [ \"z4mv1hvfoombn38o\", \"kb22yv4u1prydayg68q29z8hjyk1go\", \"k3ocinxdv50vef7utxl5szxjs1z4m6ymbgmnfmn6w6expqddvp65f29ilcrs2rzfywcd10xzom6n\", \"5xj7r57ym2orwklvpvtxvsmigz8ieyk9q515dcokj4sdyxwe3umpdyienmrdhdeh3b1ssfz\", \"jnycdn4cbh5pqedxp1qtlzir1wo7co1uxa1uw4f9fkqnurpfdydwvdc6ukyp91lkn6dvw51rn16iipd4ap9ci5rxarmyd8r0wzlz01e2ccmxnviz0w\", \"0l4hko8b3dhpdkcd5tevcd5tr1ia98mw5juvfe7e9amc418tx6e0j91p7hzgc1ywhk17sqwzgmomr7wr2bggzjt1y2iub0n6cjvcvtsazxq2gscpd1s4aly1r5dao1qtj9m4gz6k8dm652ny5oqku8z1vp\" ],\n        \"policy\" : \"RESTRICTED\"\n      },\n      \"actionIsolation\" : \"ACTION_ISOLATION_OFF\",\n      \"dockerRuntime\" : {\n        \"allowedValues\" : [ \"yimt441fgj78ya36pelwzox6y7hlsd94c347wfynk9dvpyqnf9s6434\" ],\n        \"policy\" : \"RESTRICTED\"\n      },\n      \"windowsExecution\" : \"WINDOWS_EXECUTION_FORBIDDEN\",\n      \"macExecution\" : \"MAC_EXECUTION_UNSPECIFIED\",\n      \"dockerNetwork\" : {\n        \"allowedValues\" : [ \"2lgcf0gvphuiy68f2dlq1oz3m2grywhy4j8ktfilpun0qvbr9ctcbvdjc0vvc2z9stldob7cvfpbv5x5ftvobclewdtghmr8m2ybzb2xpdsxl1nae8csm4l6st24h608qrfd288wlrs5h25qc173z2tcms64t9f4f4l9y4gghv6ae9e4m\", \"1c3jai2dw8liobz4dp7dpq7bf3qikdn1vj54d3fk56z8hcgzoiey\", \"hcdmfjxyqe07i3o4yddfxzz71pcum00f7s7nms6haebk1aa21rxycpjq5hlbaujvbdau90r1v0jkj5ahqzvaiwm8tilba25bwuxsf35mzgsrfgc332znwcoih5csr9kwdbkhd1wp8kbv6n033vmsp9xe1w3elti0s1fs2enccq\", \"j0xuxmz7k5u803au5x8okojmh21z7kt6sffttr4fu94la0rcpvzp3f4d57p84ej2r49tfaqqdwgvv4au495l5u\" ],\n        \"policy\" : \"ALLOWED\"\n      },\n      \"linuxIsolation\" : \"LINUX_ISOLATION_UNSPECIFIED\",\n      \"containerImageSources\" : {\n        \"allowedValues\" : [ \"hjfsj4holj82i5nu\", \"scws5ghyu1nl0filqzb3ojv6ks34n23lifbnlkhpflauckpzj2e9jyhmo35e048l0z14drd6grgait87m0cf5jbd79k2ry6z\", \"3gn2abm2f2eovhcitht53e10bow5777ebuxcpkoy7ukhd8m3mm1zhb4cd71dxi3pm0gbj3aegcwgov\", \"fvnw7fcpkmosxt5hief9mpaauz9q06jsconm83r9n95fgnb3qrhsi89fbnfv93\", \"ypt1qe397k9ydrsadlfw4uaebd7x5wej9bi5c22rjdzuuy7hkn3ve9a8f51me1btseuwnpljcp\", \"ok9srzckqqgjtgrx9me87\" ],\n        \"policy\" : \"ALLOWED\"\n      },\n      \"dockerPrivileged\" : {\n        \"allowedValues\" : [ \"xs8zn7n9fzppuw7je93x\" ],\n        \"policy\" : \"POLICY_UNSPECIFIED\"\n      },\n      \"dockerRunAsRoot\" : {\n        \"allowedValues\" : [ \"oe8li425aid8630aj3p9ttrwp0vli\", \"81k4np45bj6f5hxnhz1rx68lsyxvihv4iqdsjmn2bugczix9sffie8p2o8y6cj7mom036hmrc0tgd7jjhzd609ggb64kann22oelnuugqsdoun6ytrjr2oaotagsuz2lwzam6qe4lj4di9fy279x0ye12iwe\", \"kazy88gsmjc7e6pvwrefotfwlzu47bdm7jh7alup7q\", \"8aap4c53l9vxxnyt5wuuqulyb172lf0mmopodnarqdv5a1e6dstswjq534ogb6yg2yh6j7a6ahmheuab9ddold95jae82390zftc42tr8x9rs7\", \"7vory9u95zy974n8ml3a73np4q55es98fluc645gicwkih416i5tjj37x3mo614nb9wqvj7e0jegn7mak6wmvtp2pxvyam7nlrlwmeurc1552vq3xux2xeied1mnx14de6j2\", \"qvpri4j1whbg2l0zneyxnev19cijd23us5rxhn0kemmwkxlv04nnoxdjpl2j33ggyr8jskko208dk3jd1wkfm3l23eniobc6rzjpg5uhl0lv8nm82f9cntk4cq1\" ],\n        \"policy\" : \"POLICY_UNSPECIFIED\"\n      },\n      \"dockerAddCapabilities\" : {\n        \"allowedValues\" : [ \"p87thcqeiobfx34yiy05btx5d9w15fsp2aphvg660iqv3vwip4pyf9rlnt8qrze0riqn6ajxn5p2zmghxb3urzd80q80vi0gzkj3gs32j\", \"bp1sbz8libgi2sz599n7b7qcc77ptv5rrr4jpwct616egink6qn8\", \"g7jhx4umnkzg9rgtq1z7x8lmz9onstndsqiqa7\", \"5gleieylblzmwi5w0vavkac6qernkp21asutpp762rwn79q6tcd68vzejx5d7ejzcfs2vwkr3gvr7ggd9qqyh26g1aedhlqc2mmagncnayksflm0v27nru8rme8rkc8f5gq1gfotm5vovv88\" ],\n        \"policy\" : \"RESTRICTED\"\n      },\n      \"dockerRunAsContainerProvidedUser\" : {\n        \"allowedValues\" : [ \"k9sx2eps4hiz0f2k39scyira6am1ul8sf7k98w8u4z8s90jbqj189tz6jt3qpk0m65v13l\", \"50t6e6wiek4pt8wzjk4u13ipghxnr5hecy7orl0lyzoxp3wpxogudsdvg\", \"dmhq\", \"pmcxdakd13ayd5wpuz0hcagq19vck91mhlppkg8r6voq1jvewjhpajjv39d289g5pwiu2\" ],\n        \"policy\" : \"RESTRICTED\"\n      }\n    },\n    \"name\" : \"Ray Schulist\",\n    \"location\" : \"m1o83km4\",\n    \"state\" : \"RUNNING\",\n    \"schedulerNotificationConfig\" : {\n      \"topic\" : \"we3dbcnnzbq3hcpwndl1uy80m7ge53q5exp3ajmvn2rqh4402t6oqgreupo8ul267i00camkpbbhpllahzp8mba4ou4x9pqz9gd5kowsn2wl8a5b85gfz1tjqcgpytbqtb7p7y423c8djpgkfr6ms5n9mnp3wbxlknaxcg2mn\"\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2601d5e6-ccdd-306e-b529-96075eb97be5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "remotebuildexecution.projects.instances.list",
          "schema" : {
            "description" : "The response used for `ListInstances`.",
            "properties" : {
              "instances" : {
                "description" : "The list of instances in a given project.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleDevtoolsRemotebuildexecutionAdminV1alphaInstance"
                },
                "type" : "array"
              },
              "unreachable" : {
                "description" : "Unreachable regions.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "103a4a86-e77a-36e6-b817-f0d74c241a2a",
    "name" : "Sends a test notification to the specified instance. Returns a `google.protobuf....",
    "request" : {
      "urlPath" : "/v1alpha/Beula+Kerluke+Jr.:testNotify",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "103a4a86-e77a-36e6-b817-f0d74c241a2a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "remotebuildexecution.projects.instances.testNotify",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "2fa4c68c-e344-3560-858a-fd635a7b50e8",
    "name" : "Updates an existing worker pool with a specified size and/or configuration. Retu...",
    "request" : {
      "urlPath" : "/v1alpha/Holley+Huels",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Effie Steuber\",\n  \"error\" : {\n    \"code\" : 838046778,\n    \"details\" : [ { }, { }, { }, { } ],\n    \"message\" : \"Autem ut beatae. Mollitia esse distinctio ipsum soluta minus veniam ut. Corporis vitae quae saepe qui sed rem. Consectetur beatae expedita.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2fa4c68c-e344-3560-858a-fd635a7b50e8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "remotebuildexecution.projects.instances.workerpools.patch",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "c438da92-fa7d-3a5a-acd8-eea849901a37",
    "name" : "Gets the latest state of a long-running operation. Clients can use this method t...",
    "request" : {
      "urlPath" : "/v1alpha/Lashaun+Crist",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Ms. Fabiola Hackett\",\n  \"error\" : {\n    \"code\" : 1845813327,\n    \"details\" : [ { } ],\n    \"message\" : \"Eos et nihil quis totam ut. Eum molestiae placeat ut atque necessitatibus. Quaerat ut aliquam omnis. Animi porro quia esse aspernatur occaecati error.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c438da92-fa7d-3a5a-acd8-eea849901a37",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "remotebuildexecution.projects.operations.get",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "ec5c67a2-78e2-3bb7-b715-b3238acd0b4a",
    "name" : "Deletes the specified worker pool. Returns a long running operation, which conta...",
    "request" : {
      "urlPath" : "/v1alpha/Niki+Hessel",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Edgar Pollich\",\n  \"error\" : {\n    \"code\" : 144013760,\n    \"details\" : [ { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Ad consequatur quis harum quia aperiam. Hic deserunt non non qui beatae praesentium et. Rem iure consequatur cum totam amet perspiciatis. Facere ut veritatis consequatur nisi omnis. Quibusdam voluptas\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ec5c67a2-78e2-3bb7-b715-b3238acd0b4a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "remotebuildexecution.projects.instances.workerpools.delete",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  } ]
}