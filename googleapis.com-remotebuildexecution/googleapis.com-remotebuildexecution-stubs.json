{
  "mappings" : [ {
    "id" : "998b3d2d-f809-40e8-81c2-226a088ed931",
    "name" : "Creates a new worker pool with a specified size and configuration. Returns a lon...",
    "request" : {
      "urlPath" : "/v1alpha/mmgt77a240io38i2lb7yrb0zw2iqrjy9xx0x4nx87idllamgezdq5f6hhq7wwr6jsn8apjfsne5ruwf2d8kwzhe8hv7ac92q8vhjsgubt1magk20v82gs64oti6f/workerpools",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Dallas Smith\",\n  \"error\" : {\n    \"code\" : 344500885,\n    \"details\" : [ { }, { }, { }, { } ],\n    \"message\" : \"Dolores et quisquam et explicabo adipisci. Nemo distinctio quis aliquam. Aperiam sit corporis laboriosam et. Hic in esse assumenda blanditiis. Delectus et porro modi.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "998b3d2d-f809-40e8-81c2-226a088ed931",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.788911Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "remotebuildexecution.projects.instances.workerpools.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "13a3b05d-66f8-4fac-b763-fe3a5702d3b1",
    "name" : "Lists worker pools in an instance.",
    "request" : {
      "urlPath" : "/v1alpha/jaja9rlggky0u0285l49tfmojrzvaxt2niv45633gbixp01v0lkousacao0ckuu6o7oxdgqa2kg6n3hxdcbonrdsoxfuy9fjyohhsouzeria3382dtb98ni7vym2le80pluvzwipoqa6am0gkwimgbb8xmk7d9dptnswduk8ob7in5i/workerpools",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"workerPools\" : [ {\n    \"workerCount\" : \"x3z9t8pvaoc8tgei8n22bztdn90o8xqiflzgdsot8zihcajpwus8nf5km2ltu96f7tunnqyfdlsj9situseibcwezqdh3qa42ztktic7ey6f4h07kqdil07oxc6at4jl0uml1n8k6tk9h9louj1tnc5xx2ai6ewmpma2enxy7mq50czj6cma4lfuq476cqhs0\",\n    \"hostOs\" : \"phdgsb7jxahdivzsig7gx3x60w4yyjtwjcpnu9m9me\",\n    \"channel\" : \"aokmgin2nd0hst9ur31p0n6uey3k3ivnyvey7w4qh29sfwbexc7ebazqmw90m3ple1a5bv30tup43h7wwvpwczcuqwghpp5s6hnrvsf7qqrwu4792afy1kxdhh\",\n    \"name\" : \"Whitney Witting\",\n    \"state\" : \"UPDATING\",\n    \"autoscale\" : {\n      \"maxSize\" : \"q9kvwtpm4xd7vsz3ljc99rnf66tcleud3umtvy77eacauejht5x8bcmgufgbvzsl9n3nchklsz4bsvsoadfg7pzzgipj5ed4vj4895p68xkz68abl2n6mmxp6ngk9d0y\",\n      \"minSize\" : \"9a9n0kyazsmy8qae91vc04fj5s9fog6lhgiolg3i6pxhmqvxxsunxkv4bvgnpoo6mbj0vyn1cb4ji8300na900keemsh\"\n    },\n    \"workerConfig\" : {\n      \"soleTenantNodeType\" : \"8n0nimitw28gdfjuki0t24yp54qttigu75ryjqy88ua6098cehb07vbfn11tht3q42sph5tjfjbtduhmu1vcwilmujy49hw7pqk4aiv3fs0\",\n      \"accelerator\" : {\n        \"acceleratorType\" : \"3s4rr9th980tpxpwa6zfs79plqcebz1yknzxcgmrgk35ws0kmro232cjff9kl56c5nz15zkyr3nzpwl1sk8djayz0cag5l4h55rnquflygmxaacgr4q711r2rqz180hyc0wjeafxmx128sdsvkjm5mfc89znev3u29u1atgh6fnh74old3is2tuo8xi9f9ce80c\",\n        \"acceleratorCount\" : \"sruc7c583f3jetm2fw1ibbsp2yxibmehq5za3j7i80vbcm\"\n      },\n      \"maxConcurrentActions\" : \"54duwqzh3aqvo1iyoeeo10blk93xb99ctqtnq4dcu9sazeo2muraglysmoxm304u6jgxy0zvnkcqgv22wu8xnl77o1l2bf9lgpxzdznfrk5bk3v2l\",\n      \"networkAccess\" : \"oy0h3t1he00mmo2ui24j6062d3v6j2n986ebyit650zpydafd4o9kdcpyxeih8sbpgsfx9vnfh3gbdp1l7hg5vjd10w3y3qkn8pmwar7byvxhkjmr4z4jouav7sbuv17vs2vugqu9kgjo\",\n      \"vmImage\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/jeremyshimko/128.jpg\",\n      \"minCpuPlatform\" : \"8cgy2x6jxe6jk39niq5etvbbf9ym4tddjnc5zguo95z555lnj2lshfeebqldaxn0psc0m9\",\n      \"reserved\" : true,\n      \"diskType\" : \"fhuysd2z6jhmb660n3betop37aea95vob8kae4p4hrzdlpxqi3hap1mw0v35wc2ufi83xi16pms5e\",\n      \"machineType\" : \"bnaw8xjxl4tzae9gkfdyzwrdec5kway0v52\",\n      \"diskSizeGb\" : \"zw982fr1ts5p3q28melwu21i996ydolcsmkz191oa810\",\n      \"labels\" : { }\n    }\n  }, {\n    \"workerCount\" : \"l3r2im8p9y6tnn1hzxb2j7\",\n    \"hostOs\" : \"671hr7xgofljtorebsdd6tyogo20q3huh5sfdx3konzpriwv31n5yprofjmgggjh356jh17cnu9crbzzr9acd2f2cvr8ue1nvu7rdrpebbmxg7\",\n    \"channel\" : \"y1hxhrsfepw69tlteh4y6to6goevtmgxdg1p24nyvv7haoutvv2f9x7xcb\",\n    \"name\" : \"Johnie Batz\",\n    \"state\" : \"DELETING\",\n    \"autoscale\" : {\n      \"maxSize\" : \"0cttfq2qfl7a85aoje562e4l9lkjxrszzzy8il7p6o438u6usilmhptohr28xoumnulyf5tujxwjttczjxxxpz2og8lu615e31nd3t9alzstk2g0hyaxm89wm029263c8141qz\",\n      \"minSize\" : \"cqoi32elbqisgbwt8b8juia7uo0nh9woamoezg7eu3yzr212vfd5nzpsjftcmo3fntqgituv9pxa3w4pu4lchcx3p1rxiuoumheg9bnu3wkkrpbyez6nxthx86q8rc2pbpsnawvopcgp2yx4y0ya5n2eh56ge4tsz8w734doid0xmq2brv2pzpv908jyv2d\"\n    },\n    \"workerConfig\" : {\n      \"soleTenantNodeType\" : \"50curj5yb8k4w3yzgl1pvf40l3ws3d1yst8bypticpknfy1r7ryljo944ubvnx8vyslrae\",\n      \"accelerator\" : {\n        \"acceleratorType\" : \"ip5sxrckgahhpc1alq71db5wezn6hg0tk63n967vl28udvuwxzaltns94uqcdc2eqpi7dornagh2usaudxyijx5cphdj8mk33muhpz3uzefts5w6zmeredi9g90eq823zwep5hpfsp76yczs62sf3b\",\n        \"acceleratorCount\" : \"poxasamb7g5xjjmdb8uxvrfian2w3yvk0pyrss91ku3u52jsonqjq3zezopab9cipvodcfodv3r5caluo5g3b4qzc770dttdy7wpfmf3rnljv8lrwojjyhebu2neir8wdleyqvae2r2bnqtyi\"\n      },\n      \"maxConcurrentActions\" : \"1cx0nptgree129smedgf56tuvz96k4sqlmsqlaktl7mxqgdcvq0bt2l6f4qff9axovudu7anfui8gt1f4otn2hr83zqeqejjs6jn410ynt3rir7xk530wfmdkf0iv2mtmjvg1v1re7f5f71kgri1pkb9msobq7fetf66wfuwsgf3vw7ekdaevfhsoquuxv8w784\",\n      \"networkAccess\" : \"s7qjws1h7\",\n      \"vmImage\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/jeremyworboys/128.jpg\",\n      \"minCpuPlatform\" : \"di8h3himnadd94fibwhp0mqhjaebvhxwd7o1439jeem7zo34jsdb9mfhfkx1abwd2gpfor6z\",\n      \"reserved\" : false,\n      \"diskType\" : \"482983agaxf77qe6aia5lr\",\n      \"machineType\" : \"4op3k2hsyma9wrcc0ujfq54rt5h8m9i4umx88s1nv2n8eaihapyy8h3nkq8gx3i7sa795zaiy\",\n      \"diskSizeGb\" : \"rtt3s97spa4c3at5n4plw8e71r3rt48gmh9goqwrrtmo25cukx8m9ix75ppe8crn6zgjbng0\",\n      \"labels\" : { }\n    }\n  }, {\n    \"workerCount\" : \"fcpv8i373wg5ody9eyutg35g0b45p093czzlia6nd7kzcfkrsgaopz4f6mksypts45sd6alaajolakogmrhj8px3kzd9awunhfo0a6p4y\",\n    \"hostOs\" : \"cobagdoy559wkan9ibh8zg3tm0vlryulmmvy4l1ztpfgp9hi14bzp4xgn9em33tqimzleawls4pmph3pbl53bmsdlzn40s78cll7er0cdjix4qymd6sri8kij27ne4gdnyvbgymric4qv6hxr7tkp4q2ifgcerrzo43thsp4xgyfozhe4w61w6y8bg\",\n    \"channel\" : \"s3fo75rt29zlu1ry92zelqrpv27w0194u0odksldgm5h7hrrs72396is1efiz9mv6qwfn7al497fmue9hrwvoge2wl41jfh9xh6qrpyx9e88fb5802qri0nxehade8lualyvhn8c9mcv69ck3ophc1fuj1p9us26fu8l88xw6znts4udkpvst8\",\n    \"name\" : \"Doreatha Willms\",\n    \"state\" : \"UPDATING\",\n    \"autoscale\" : {\n      \"maxSize\" : \"6iqyk55i7p9powfsa3ljakh4hvbd6uviaqbk2q1x1zpjnr385fwkygknslzr1fcnh74m5kflxeq7znezot5tt53ivu6ef7r4mzdx0vcr8dp1gghn34c0up70bhx9tyr6o3nts\",\n      \"minSize\" : \"qyg7fo3jbfxl0mi643j7g\"\n    },\n    \"workerConfig\" : {\n      \"soleTenantNodeType\" : \"9xrk4m572bcsjyxzwsp5qk0k88nobz3u8bertzv5y1htm7a8uzyd55fojtb1qjx354q5c2ozcz1zd71q8c2dm762na0gu8s\",\n      \"accelerator\" : {\n        \"acceleratorType\" : \"ndu18aw7hqwm5ewzt8xjdopqel7qcb6gmlt3n6r64lfxopwkvkoy0kbwilvyeyy1vqkk3bk96pq0y1zx2a9rnqk50zidtg0xwmfxl0f05q2vur8khmydlf6bc4bmc6er4rtdcxnjsoquhm13rwlgzy3fq8j5g8mg3rml6rm9f7uufjkfx0uww44lfbla8t6kx8v7s\",\n        \"acceleratorCount\" : \"lotroriy1hisswxv0k9vp5ykee5qq9sgivifowzggj87skx4rsw6n9mrzs16szwp0wkrmgftg5jyqlm\"\n      },\n      \"maxConcurrentActions\" : \"y8j09kxuih4chsw15x42x891n1hjorkqe2xf8vi4mz966pj\",\n      \"networkAccess\" : \"67s3vlx5c7envv8qawdxfte95sjslfrn7dqtwz12ddp53vcgfwpxc2vigqxpnn5iwiglzon0bfox1zeyx6yiac7sidraz1xf1lujgsbhi8gc7sw35jmabf09ytjwsp7dxasrbiigdl1mkciv3yn6drir10dm625hlra050vydd7es0z3qxu\",\n      \"vmImage\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/davidmerrique/128.jpg\",\n      \"minCpuPlatform\" : \"rr2v4txvqsl8mz6q8bxfqvvzokl14fqbqgpltk33pulxsvvtzh7d6utu0bxke0b0nlk45s9qv\",\n      \"reserved\" : true,\n      \"diskType\" : \"dz5f7q1wcdw57l0lmysk5p2vffxno0qt1276xxbnp4xe6frg4qaa310fytz0b2ptxfacfwx3ef4xqrnt\",\n      \"machineType\" : \"tc8k8a6iqy61mwegvtcfv8oq0gr\",\n      \"diskSizeGb\" : \"ijlf5qhrjamtvnkjenfvlij8cwao\",\n      \"labels\" : { }\n    }\n  }, {\n    \"workerCount\" : \"goujr8vsob66upsbuod1ce7cilz07zklj2830e5yg6t2qa30rj398lshmlow9akxmizks76ild20r89txa6gch529zsh9ke34dtrt8ll7rfhiabo19g01\",\n    \"hostOs\" : \"ndhl8jemotwge\",\n    \"channel\" : \"v3gp8a1qexfh4cizf8qfreryn82262ft7e1lge9xnt7z6hpxhsaui08qpxfvmi770fs4otpyr1un1sfqncau0no6o4dx6kj4wji19tajfkg86aiy6dfthf7wd5l8pcvuq26kmv0a6cyvh1vz5bkhgxhm7c21sbv23t1itefc48giihzc7vdie1qta6lfjpe05qi\",\n    \"name\" : \"Alia Murazik\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"autoscale\" : {\n      \"maxSize\" : \"78w1rz388xm8914417ph3d8es6di2113xzh1ky691ia0qck41pe71\",\n      \"minSize\" : \"daomztl2aohirbulzz4ea23w6yx41z5oadqnn2614g2lq2fpuqnqeki2i1gmlqw2zks8jtgneqt2upq9y25lviwpg7o4zvk5vu7xj3v459udgon4ogvy3gaotoc95xk6fhsvo0koodi9z7bc7hne10zd84kpntt53x5dwbb75u3i8dmvt3b7q4gnbvksne2y\"\n    },\n    \"workerConfig\" : {\n      \"soleTenantNodeType\" : \"3zouq3ts40dk0fmgt6y4yrrvfybs2yp298hho9l4s\",\n      \"accelerator\" : {\n        \"acceleratorType\" : \"cypxj4nywdsw8bg49g24o6sv4cjjj59xevbc1oy7hf2teihnm99lfmt1ts7xan4krdp16r9n62054h2m3xbty9\",\n        \"acceleratorCount\" : \"5pj0qvhmpzx67d4osyfpsotz6y3255fz819wpvt87sjgcnasi19teeg3zf6ql3fpirsgbvclkr7y1f3m0rayo2bmx1o8vsl\"\n      },\n      \"maxConcurrentActions\" : \"t1ra54gqeu2x1864kbhm9xj626\",\n      \"networkAccess\" : \"1rlbv5zosck13eplchp6nvokw244okf6yx50ksjet5eo7aufaxm8nx5evbcr04aa6y1c0uui6ix7nvcj0d6ssackbtaw615spbho7dzon7h780or4ekdu3yqm6s3emnyu6e4u9nbgxmz5z2xk94nysvky515do9t29ii0g9\",\n      \"vmImage\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/sunshinedgirl/128.jpg\",\n      \"minCpuPlatform\" : \"oh3h3kuvix7gomxthll6c5dp2q\",\n      \"reserved\" : true,\n      \"diskType\" : \"matiqz8bx7v0p7iss37xbrks2tamc9vwqlhbbz8nkgm1fkf6u0rfcwg83zhqm8pyrvvfylin80w22fvoybrawo1387ypgg9n4ji654mua5g2zsf7liqysvy9fs21hk1ilu\",\n      \"machineType\" : \"g6xevq6ylkq9zazxggzor7pfeu1udyklcp2p\",\n      \"diskSizeGb\" : \"5npo4u41jxgtmot2e56j799ji3v44l9fqhwsdvuxcaydmcq4u4x053775noe4xhbt17qtkorzek40q3oxbotnl6jxc8\",\n      \"labels\" : { }\n    }\n  }, {\n    \"workerCount\" : \"1o3dowlrhuo9okuycsxjtjxlhbm3bbxmt07msbvsqlxj26hovxx2fhfa2qvsvz9n0dc4l\",\n    \"hostOs\" : \"p38bnpec0vr2va77rbcib2icetp5nii3dnpkg9063oxo3hlzu5pe\",\n    \"channel\" : \"56nsh07a7wajs9pvbp4op0gr48rzk4py2bv0954h7ckjs3uyrwut2\",\n    \"name\" : \"Yajaira Lind\",\n    \"state\" : \"UPDATING\",\n    \"autoscale\" : {\n      \"maxSize\" : \"lf6cev6ng7n8nqfia89qvvlplp9uwvugppa1exmd4m8wz7fqren0bq9p4wn58hsnojbqrbyow24uzwcwhltpfsuwey5fhf9h6gy\",\n      \"minSize\" : \"9uxiz9r7e5rjgkvnya5pqn3rbf6gz93x4pb0p2h3ddizkrsx9bwjfbmgzl0hwfwjzoeueiflnlflyim0s5628dkj55udx08hdjokkjlgeefs3eiqe5r91l06ew4gvw8vyorr57bbmr\"\n    },\n    \"workerConfig\" : {\n      \"soleTenantNodeType\" : \"196axbto2wo5dk6zk33tfjygghbau52c990ub5vtu03sz6cswiq3az3ces220o3334wncwsye6b\",\n      \"accelerator\" : {\n        \"acceleratorType\" : \"fta2mkxl6c2btzxqkp2jzkwb5hfgn8spa8b\",\n        \"acceleratorCount\" : \"xhis8eq6039qlm3hirngna1l8z8i9fwg4f0bpp9soe09q026yxx7f25tsnlu32ppv7b84utothd0il0a49wjvujqnptjyfym52xfu20f33ixanamg06ybb9r0cx1\"\n      },\n      \"maxConcurrentActions\" : \"myoii7ak8ub2u04q6j2nh4yt8eygr8pvh7ro0m2zezasyz72x9wekn\",\n      \"networkAccess\" : \"pj6scagfofpgihq5xvs96vtdawe2m1ksi25h44dy53pjhz3v0h0agzrun301vqtl9gs7bk27ohw4615sbjs294ofpad9bhyflb57p3bdhbekmepjt1n6n5r4vvsdqdhh2xkko0c1pjqm4ut6q32lirb1h1mu7fnhk4s6a4xg67gam2az7t0b4yh1zjh6ze0\",\n      \"vmImage\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/r_garcia/128.jpg\",\n      \"minCpuPlatform\" : \"dgb0qitadz58hjhb9lx5qqvwfsm17pbzdqkg5gqjcmt6y1rrla26hypnvgpkv3jxyqyoi7vm4kdaw5mv7m1mvcqn9lviwhuo7o38rht7ypdow6ae43pzlxtk464v5ywh1o0odlj42836q80t87ov9r\",\n      \"reserved\" : true,\n      \"diskType\" : \"0yz9bqoxmz6885crcnpc4x3znegyvn2bplo9mkzdmorw09emaofe1xlhlw3ld3o39h39xut2b4gbyeos2bl8fa0ftefej1s45maz\",\n      \"machineType\" : \"e0wvlsa8oqbiik79962eiqgjhl65baqc3y1v4y3212k9mmuunym67jckrp73f6x7yh2wpz3r1bvuawy3ly85u5drvx3ts\",\n      \"diskSizeGb\" : \"6buim5ta98ifdxa6c7vxkliatz8rxeyyjpcsvlulq4nfuafihoh83mq1v4w79af5a\",\n      \"labels\" : { }\n    }\n  }, {\n    \"workerCount\" : \"y99jtsxw8mnbuvpdldkh8rnbufh2pecoplg58o4zb7o8n9wj9ohlzwu8tgbqtyhov4xv4r8cj5jzik1ijdmb6f\",\n    \"hostOs\" : \"polwxrwqqyv5ax979q8h7ua6tkmzfdxvmq2nl56e7jcv7n1odo8z3tm4o6oxyga1y6hcirwy33d5tdrc90vla2wqj78b16m1wmekg8c0bo5hpo7x1srnnxidg9xf7f7f446uf18dx9sav\",\n    \"channel\" : \"kws0g0fsu05huyvqzs1084k17jh01byv2a78p839v8df5n68h7ut4m0jm0yo5z2yjefkkho5djws8fquclnoj56\",\n    \"name\" : \"Willy Green\",\n    \"state\" : \"RUNNING\",\n    \"autoscale\" : {\n      \"maxSize\" : \"a83o7pdyoyvk6acgvh66piifimbxoxynhvqinlfwldyo6w7rcgz6qniifb0xtv0mly9d2r5lyehyqfw7xpy14sn2hkvm1fhsgm49j5o16ktiudebnhh7\",\n      \"minSize\" : \"dco8xujdv9fqwa7ckex6ir0o42e7h1ml\"\n    },\n    \"workerConfig\" : {\n      \"soleTenantNodeType\" : \"cqoe1o9myueuft9qldrmcrt97xf00a9sh4izp4335a8iii6v77l486aa3e59ogpw5m1d3zv9v2wddrjymqnjihb98jdjzw7nvg2p9oa4snknn6v7hoc20l5rv2dqzsuu8udg17jfh\",\n      \"accelerator\" : {\n        \"acceleratorType\" : \"kkrq909sledcr4sicbtsbq8dvlljileurlhv6zyitxlqzwt89wcghuj8ufip74envzqd6207gj5auocmmw12zs4kucyjha8n6yso97yc62ab5df1czz37n8mzqxl5m5toe\",\n        \"acceleratorCount\" : \"znecpuui4u916nmckfg7grl800g736dp47m4r39eo3ff3xg8d\"\n      },\n      \"maxConcurrentActions\" : \"aij16tzpuxxofto5z8wbybom80dkzpgj227lslunoltkm7jdy5xb4kr5ks040vtalw7lvgmx6qlhe3rcdpvplpt8p0a0xja56bdr7sf5fvdpgjmhy0urd672rddwybkk3wq5o\",\n      \"networkAccess\" : \"0sfcee8obijjmf7ov2gk1g7nqav05zt2c2pm9f88i966p9pxbe14e9ku7dmcu4t\",\n      \"vmImage\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/jayrobinson/128.jpg\",\n      \"minCpuPlatform\" : \"n32mo3evlq3wieary7ru5y0ez0ul4y0g6qgnl3si9nqtnh16i7k3xnl0i6ve96oycwmxgagcxrehilrwzoohow565tqh4td5q84id7f8z2zrdo41ntp5czfdiato45n9onl4g8w6guo5jbh1grgqwjo4dx719s7v9szsho3mfw75cqhdy9p6owu37\",\n      \"reserved\" : true,\n      \"diskType\" : \"p70to6rlbw4qpjy\",\n      \"machineType\" : \"1bh3fdgourixdmyi7971y9clsoagkcvsnvv9qp4lf9hwopwbnqqd0p7u9lu84psfnl8491oudimqoaetw3ls\",\n      \"diskSizeGb\" : \"sbmel7shg2dckfoqp8nugl4pg266x09vk4acvn0vzeldcllkcr2ustjmg1v2qv7g3aonqkob2zbaf2txc5nmsp4nn7v84av75h2dnfbmpzjy0o7mtq\",\n      \"labels\" : { }\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "13a3b05d-66f8-4fac-b763-fe3a5702d3b1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.78869Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "remotebuildexecution.projects.instances.workerpools.list",
          "schema" : {
            "properties" : {
              "workerPools" : {
                "description" : "The list of worker pools in a given instance.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "da438215-0594-404f-8796-d989ce365f6d",
    "name" : "Creates a new instance in the specified region. Returns a long running operation...",
    "request" : {
      "urlPath" : "/v1alpha/0i03n95mmye3lkixm9vt324xq7di3ldm2fj2drrjt13exaqilbip6y7i9m8yu7tk65qryy0rxeyvkrsa4vntol41mi8y5sc7mwjrv6lx0x3/instances",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Blake Tromp\",\n  \"error\" : {\n    \"code\" : 1786487497,\n    \"details\" : [ { }, { } ],\n    \"message\" : \"Sit velit maxime non delectus ratione dolores delectus. Atque eveniet sed eos voluptatem facere ut. Expedita error eaque quasi esse non temporibus.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "da438215-0594-404f-8796-d989ce365f6d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.786758Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "remotebuildexecution.projects.instances.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "811fd02f-bef9-480b-a0fa-c680ff5c5731",
    "name" : "Lists instances in a project.",
    "request" : {
      "urlPath" : "/v1alpha/8r028lqner8b7wd22xjq8kgez06z7trj3xhsoavlp4awvs4804r802exvmxwury3ta1d9moy8i0le5pnik45vdzphj6atnucg2rsraz2hr9ma2v0tgdvciwxbq0xvqdwak4hhl2smkptf48e3yaxkhfjrv7els0paeb1o4udl9h8a6z0eloj39pp4po8/instances",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"unreachable\" : [ \"7ymu4rod87g6e09\", \"mi71ooh1zgjvwehsfzwng7k8ufnhjbhubyiklryyogk4w2z9bba9zsq9sbdtaaan5f0hybuvkqp0gkpnpi5f7sgqrc7n0lhb15utn1wvvaskd5dxn4bll5ut24nm1dk4mkwzg9npfwucbx4cxiugmddc1phb92hk9d6w5it3ytujdsfeu3accpbdhv29v\" ],\n  \"instances\" : [ {\n    \"loggingEnabled\" : true,\n    \"featurePolicy\" : {\n      \"linuxExecution\" : \"LINUX_EXECUTION_UNRESTRICTED\",\n      \"actionHermeticity\" : \"ACTION_HERMETICITY_BEST_EFFORT\",\n      \"vmVerification\" : \"VM_VERIFICATION_OFF\",\n      \"dockerChrootPath\" : {\n        \"allowedValues\" : [ \"70l2kbqx4o3osthzzmuyoqw0tshsrb8eb7ay30roajwrc36me9w2vs5xkvd0unobps6rrghtz3w9a5hu6s38iauaknfk0fsgq2tcdmuvwfp0qyu5m3n68wiuz7bgb5kayunewhvu9l1mlqmb2xvud6a6j85b6k4gtw7y4ziexhellghywfd1xsp8s557941a63\", \"10d3whcyvwopfzkhswg3ak\", \"n7uv3cabn73hio5v0bcbowkk3n72pplaruekwdiievnagr5nprmh8s5rfn4j3xz92tyw0dqu8b7ffh6ef9906fiyd1d9keptcyu3gqcdr7hwey9c2nvl0j1x191iifiqhb6y3othpogmt15xpr2bcaa3unnqfhu3o76cl9vvek04lrnc6kwex8mit\", \"g8tuu0iv7mfvf5l0klz4ig38862hqop7fdk98tz66b4uuqh4g5rgrbwaafuh2tcjwxqif1h49x8sbov43ef01xbd2arnxkecn8aafsr1f28eii3czgo03ru43jyedu5w13gr7j6kkwzffs9c3ox9\", \"mjpvjw5pzbknml25k6uwqo0mqlx5\", \"0e87rtwxsop0c4tzgsgqk4ob7yieodk4xayr1bqboywt3\", \"05rskzo5p8oa7j742ynzni\" ],\n        \"policy\" : \"RESTRICTED\"\n      },\n      \"dockerSiblingContainers\" : {\n        \"allowedValues\" : [ \"x7d297zc5mg1pfytiflqwkq4f9p0ejriw7ej5ob970zdinevlek05v5vdmhyj15n2qxgvx3yyh5bnk736ysi9g741\", \"5mok9lii2jyvv9y2q2won6f10ljmihjdnc2uwu67b4w4uz0dd86ddtjnvkm8druhhwd23kv8sshwl2dejjut156go1dymg2v66s4ll52yqe61zcgthlevc8cj9ziqlpazhrwr6skkme8p9dvkqqybu2xhbo34l97\", \"kiqhha1cdji4ztd2pfyk8izr59fv5spjrr9kd3cmos3m6idbbmno4vpjfzrgv061xp9m56s0f38v5ih69vzktp8pnjcq4l56hia5sov7xamv4t4a0hbsbgcqprqxr\" ],\n        \"policy\" : \"POLICY_UNSPECIFIED\"\n      },\n      \"actionIsolation\" : \"ACTION_ISOLATION_OFF\",\n      \"dockerRuntime\" : {\n        \"allowedValues\" : [ \"tg7asvhm70lvhy6ipx0nudkidooa7s2oesztjz0pie1o1rbb2m8glxggrcflt6eg80clu3vefyjqvmbzjhuoyqp8ljgcbjropvsye77gr2279yal4eandivpcl14gjmp3rx0ig7bibuimbut\", \"2rg5rbw4m12wc59i2oct0btq90j29mqimotvo5s21hknv85m45nvscsvnht88tcml2fp92f3j98z1wt3lukubilai8zy6tg6vn5jziut8warwz5mc80v21y8ikdac890zegoa0j7salvqamxa9z2nk53gevkh869hvvhia8wg3x9\", \"c8u3tczus636g3khtxz2ktu2i1ivm\", \"elbf4ojwbaf4oqe95h3ton5vplcwsdg0tr6okwpt9pmaklkivcq98tp7641s1hknqoqw2m30ywd93g6fodmo4whf41rnz72j0l21pmsy1sw1kho04zy48brv9dvxxe1cnq8iuscp21m6dq2fz7fqg9mc3r55w6vr8qwyt5u41q4nwi\", \"d333y7dxa7jusnww950ezt9oslpnnik6y7z18s7oruwkeaxi8nt9lulvrpsjrgsmm8mll96bnkacdq992hczuh\", \"6pv6eh7ps3y6is67af06eitr12q45sfoemd8ps61mhev8q1py5wrjm7lszsr2e5f7qo1pfoeab4fodk2gkw5r9lvxej7id9u0lx9yn3p20dc13up1rjom0fby7bpa3qupa7knx59whl9tnybkbyzjq98ytz9\" ],\n        \"policy\" : \"FORBIDDEN\"\n      },\n      \"windowsExecution\" : \"WINDOWS_EXECUTION_TERMINAL\",\n      \"macExecution\" : \"MAC_EXECUTION_UNSPECIFIED\",\n      \"dockerNetwork\" : {\n        \"allowedValues\" : [ \"g7o5nzbvb8x622laby3qae8m9433f5i7jz6xssw5sq2lgruzra5mnhbppa7bolyatnivq2dqh1o3cr3csovvjbr4wsa9ddx6jduvdxaxav14n1hseezor8xg82x\", \"k8ma48v9366i4f024xn7no24oqles5si9mk7s3u21otx7b42nkh9rt194wzblak8zqxnp3y3xec7qqh016nf7d6khmjjvunj\", \"lbegce7fze7rh7ehnbv54sgc91hbgluqyspgtqvy3ezrh4gw0f3ph3sd96buwz8x0k\", \"fwdxejbw1f105n5euj4van4xr1aioaxt83t\", \"bxjl004vg819uv42bku9t5gbs0a5dagcsv74ipxstu94kdi1yl0euvusxzinppewuhjbrvd6z7btaup68y8hgjx8hqycismngcwvfrkditin\", \"qyc27\", \"hyatszfmb909b0i753hq5d2c3uvsbp4whbygwmfxkwl57uvmt5m28suvf49lv6t10jtrryesxqoy\" ],\n        \"policy\" : \"FORBIDDEN\"\n      },\n      \"linuxIsolation\" : \"LINUX_ISOLATION_UNSPECIFIED\",\n      \"containerImageSources\" : {\n        \"allowedValues\" : [ \"st6si6v77obaqtkjnro4f7dr78blsxhf5h0qz4ozri6qb0j91jecnntlkl66t9h6xy7hk3hzyfv9kxsp4ni05hspjnlgkrlk9keus\", \"rxz0ol0usdv8ef4pjn82ptc0ek83p5cr4vzb1gpmz5jbad3ur4deu7re9zcy3evf2b7\", \"u9c34pd6685zm3gh1udg6unme1jeg82tzstk6u34olylp2t52vy8tefthwv1eu1w4su16pbqas1pogxz87kbplxgwk7im8xbhxjvud3i5diym8uz5fpot34xhn9czz3pfrpc07em23k\", \"fyjr7ajtkesz5legim5ryhooq2fg7vzdaf4n5mkp3k29lduz4mcxuw5wo5f2ikg9nf2cxkylltukoommprpiqhu93fr42ya552si7uhx9jztixrmtxqqbipklqzevwk2588d7iu18trhjlb3d0tmz2k91bj1ly7z2dw2s0wctmobzj50gobwfe\", \"4017b2t6og1aeptytnd8w6ls6iyvkjxwltd95m35w0sd92cp7l86acmev74k9a\" ],\n        \"policy\" : \"ALLOWED\"\n      },\n      \"dockerPrivileged\" : {\n        \"allowedValues\" : [ \"awg3f0aqi0s4l6fn9ili6q5iqyedld74p8pnea1x7qumv1u6z85y92n9ti05sx6ya3a1ak3e\", \"mnbwmy8s6x0kgsxsjuy0d2085zje80bvtjk3m2bug0y8zaglaq7dequ35mghbvfd9wqn63imfqbyj4f4wy7yiqvxhrpj9h6veg15a04g5mtmkifiuu25rc\", \"f1watxkbhldic177ckvsa7a0wtm4j27sgfkx6j0blc02uatfgp7gtf8e1r7ed98aovufwt8gkfhj5nur0auun361s3cz7dj7m64lcpakbo75b7khoj0lokq7cosidj4rqjy68048h6vu67d8mpd9wanztqtz3mrihaef1ihoim\" ],\n        \"policy\" : \"ALLOWED\"\n      },\n      \"dockerRunAsRoot\" : {\n        \"allowedValues\" : [ \"o07ftanhyrw0wse2th71vbp8xdlwh0y7ueyriexz577bx3k51akxwwede3aieqaoowqcctw5lwv\", \"06v94zq2o13x9xk21y2opn6rp84\", \"1m4st51eqh4xiixjmsp46js5sbk36ck3xwffrvaj8aodhin2cctr8a384u79p2lzhh2m6w06ctiyq4w1bf10oil1oxhfdqimpuauokr40omlp7s0og3b6jf22acwrcli98vy3aglydgp45qbbcwsngw3fjvc987wkey2qjngobl7hvulsxpwmelujbecq1vsoo5v2z3\", \"piawh5okkkmkj780qyv27pgrtj4ueyf6mjwkk7oksh067puvmjpt62dct0phmy7130ejss3ztpi8o8\", \"ie3aqrudb0gx03i156olulekd84znz6i397okypgq3be9pf5679jnykweqbpil4oiwv0a8f6fhbjfx3ynm8q3hqp8stkwl8c61bi8fnb7pwvideu7thxcpkvijiik1canb6s94wj5bx6y7xzzvkxzoyid118syimum5jn\", \"puvg043vjs9euip6zf39gw3fovwmmt9hvbu7irqyx3amuc54jwef0uouw0ga33uz3bq2\" ],\n        \"policy\" : \"RESTRICTED\"\n      },\n      \"dockerAddCapabilities\" : {\n        \"allowedValues\" : [ \"0v4x8gyfvk2x3t7ticmkvz4h2edb0u9y7bvfoxsjuqmmevj5ok9ayy37uimfu01onxhaxh1milam8mxmag5bjaj8w6h7sw0azgg2gmktdq\", \"foh2spjjh8ef0m1udu9fjh87beicowmhv1z7ri2c61702nf6e2bzpiwix4kem3u5ud71sb3rx90935lkva7a3sdl7ndi82oae\", \"gkf1ah2llojjzwzafhy2wieb4y7dhvk608vtjiu34ehll94yzp43bzat0yo3usx19w10112ki1asxqdxqq3qa9jtchjzbe4mj4esh\" ],\n        \"policy\" : \"ALLOWED\"\n      },\n      \"dockerRunAsContainerProvidedUser\" : {\n        \"allowedValues\" : [ \"yz1lhf7ljvijoy1epd51iba7jso6wil0zro9wybb5dq1c7xm3jglahayr9f039evx9cudbrlgeo9bi8kex2s21ygq7labh9130gfaligc47dio43s61tv24ll8avqemrdo0h8kf8q5w8d0z5nu3spp6pu13nu319wtp665zk0kqvjruspt\", \"pdmb27n3csxcxcjwjhqne1vafj02ovkal0xby0cg5rmjv0hwy6bb9ihwjjob6fwuoo9hejv9xort2w39xhgk5ge18xma7gteuzreolcfod66t850ppwdyz8p7usndybqt6v9tdn6gjo23\", \"zm7q8dj4syd481hbuwrxdflhaumy9c8a271gc2jhwnrgu01mqezs6aook87c6v1blnb6bx1n7k5k4d4exdcy0765ddrxuh27dtdwq4xtr83m31l0jk7x8pk5urdo4xwn2a5e0febyxdgiitbwcynx5ij2nsv17nbcacwekh6a1ww\" ],\n        \"policy\" : \"POLICY_UNSPECIFIED\"\n      }\n    },\n    \"name\" : \"Brinda Stehr\",\n    \"location\" : \"53a8mogtiwmkzwrh8jnb6p1zk4qekn2znu49rwiejkj0vz43jv86vxgvllhgvmzjvdei5gjuc0gzd0lr95gnfn0amt6n15dc\",\n    \"state\" : \"CREATING\",\n    \"schedulerNotificationConfig\" : {\n      \"topic\" : \"wnkoe3m5eqok6gbxbrpfziovnqvz930ryxbjhegp4xwf9jlie9xm9mivasssm3kqq1wg2cgyg2fsywwhrvohe7xdwha2sluhuxz\"\n    }\n  }, {\n    \"loggingEnabled\" : false,\n    \"featurePolicy\" : {\n      \"linuxExecution\" : \"LINUX_EXECUTION_HARDENED_GVISOR_OR_TERMINAL\",\n      \"actionHermeticity\" : \"ACTION_HERMETICITY_UNSPECIFIED\",\n      \"vmVerification\" : \"VM_VERIFICATION_OFF\",\n      \"dockerChrootPath\" : {\n        \"allowedValues\" : [ \"ljt8zd4vzbnsbfar4xld0ha1f1zgxsitloz1h9wwf0ko6fvxe2fjpbshlbc8b2l4699l63d\", \"3v76ho4gbh3byqg07ar6ivmb7w56m7sl2k6zq3dr3htf5iu4x1xuc9\" ],\n        \"policy\" : \"FORBIDDEN\"\n      },\n      \"dockerSiblingContainers\" : {\n        \"allowedValues\" : [ \"pfeli2qad3oeyg96amf73vzd36jbnvcabg3zmphk83d375esvj5gb5j2xd26y5epu34hznryyau9w5uhizcr7bconihchsa1vv\", \"nyoet7jmjm21aqwit5sdjvhzpncicit979xu0a4tdjwdb3oprz3ldd08u7a2eugr8ngbi35tksgv448v8xak1b8hs9k7nciami0twjm76rm7u45tsj\", \"ckp7qlle4fjtyr9g3mhvtst8aig37wgkmy3nas\" ],\n        \"policy\" : \"POLICY_UNSPECIFIED\"\n      },\n      \"actionIsolation\" : \"ACTION_ISOLATION_ENFORCED\",\n      \"dockerRuntime\" : {\n        \"allowedValues\" : [ \"9serwp6ih6pbruuenlnzlfupikpmfs38gh7fmlj0uq6e2qnrr8edv364egltjqb5jitp49v5pg2qc7k5jyprzki4l59xzzdhj96\" ],\n        \"policy\" : \"POLICY_UNSPECIFIED\"\n      },\n      \"windowsExecution\" : \"WINDOWS_EXECUTION_UNRESTRICTED\",\n      \"macExecution\" : \"MAC_EXECUTION_FORBIDDEN\",\n      \"dockerNetwork\" : {\n        \"allowedValues\" : [ \"k49tbhh17myb02v9un8hnsuq53s1y80ckjywi5rzwhaxr44y6f75grzx4jp5iicv1wsiur9wj6anlq4kk6bm2971norzodfd1m5jxjzlqbc9r39qjxqo08prgdrqv6axtfgi7p3xyuujp\", \"sgbq8gi0kwdxquyq4qo30jkrs6tazli149meekm0qyfuzlqlbs2umdi8fasmypydzlvla1y0okczt380rbk13gef0jxk5wqjkf35i4futrtzl33euf7sfxdq27ivo5anktigmglbp912zzp9u06r64fewl2b2wyd566\" ],\n        \"policy\" : \"POLICY_UNSPECIFIED\"\n      },\n      \"linuxIsolation\" : \"LINUX_ISOLATION_UNSPECIFIED\",\n      \"containerImageSources\" : {\n        \"allowedValues\" : [ \"vrd0z2rjyxlv9q6zwk7v31mka82ijeagrm45yb6as775hh595rncgmy25suvitmk126mujsdk6xhbp788tj8dm3rv8qogf3nff1ega8w6k6kb6kkuvzr03oldpgl7ke15iveiyfv\", \"8mkqluuauv50tbzjpy8jurzdb8toucsqv4d1265j02uih8q3470eqoadci718mviv9pxvtp0strxphcg69lr4y15wns60nupkckovcjy7skxi21ribnenqry1tjn3ulkeqnge6zpf3p\", \"pibd9x9wv97m48tubyghp\", \"212selw834y843hdjqrc6hwau353oo40am4seotun0s1hb01jwnbnuwjqq6ak4ekmqwbn\", \"yvqu2yhlkc6fk0a28zkvyy9vqd0zzwunt3nw8dzogywz9m71a8qnbbq1sjq51gkt0ozfpprulh5xamzoze0nlvxjyx\", \"8x811uzq3r8x3wm29zlngsywqvdtnoyuvvhjibrvhg20itdh16a22rddaa663eym873hq06mtkbsvicm80f1uy26zlw71iie2tvd\" ],\n        \"policy\" : \"ALLOWED\"\n      },\n      \"dockerPrivileged\" : {\n        \"allowedValues\" : [ \"6vb0155v774i45x8mvf9x7kjksshxep1kcbtwcxx3zerwylbed2irrd7sjplsyflx5unaufr3im\", \"zz3q0x887rn1dnh7sbju8j71polqtg1srbbkj5dcyetlfb5v05ojncr0ovujwsyi\", \"00lh7rh5hppn3knui7nt5n7radz6gnwruhvf85zcno3q8ee9nki5udg2jimalv737cn29dbqi2w33md\", \"7y8s297ft48btp2jzdi81i7qzsz5jm27tsdbd8cxjyhlzgzemj282gl1rccqobamfzmxpt5vy\", \"0cm2aq2wh7tp4vtmw7i1rj44klz5y3kpohegja2i3p70rtle\", \"2oqm39x5f00aixarenqhe0u9fxuu3ykuma4lmwk92spg3h4wcpj18ogbqfdhl8vlqqu3sepqutjovmx3f4acmpytkjn40\", \"pvyyym95m3pmone0bcl3elttcimcovrxks1eqj7vlaxegrtucu1sl6mavo7wodd0pnrlioj1b00c1snp3klox5rpzf997n9y6dnicr612pa8qoyz6iqm3f9hpgctsxezdhl37uoldmn1kakurdunjpnq2at0skuxs025piwsc6gonxyhg4\" ],\n        \"policy\" : \"FORBIDDEN\"\n      },\n      \"dockerRunAsRoot\" : {\n        \"allowedValues\" : [ \"s6zxuahtk2imtdy59173dk2nm15mxsftvyae7kmcx5rzwvi10vywg660a6qhpx\", \"6fiwuh6iwceuzki51x3lulshv8tz0r1j6lggj8dwotjzl4mhq6pyakug8uulphpm8nxzm9z43xz67a28q6zx142jt6btvdayjg5jjc1nsbr170eit2lq9jyanauc2eeg3h7mq9acbpy9t1ik3tkh43ge1fv3a43rta0peop\" ],\n        \"policy\" : \"ALLOWED\"\n      },\n      \"dockerAddCapabilities\" : {\n        \"allowedValues\" : [ \"wmn2g9inmxm1w629ry5h9989usuj7cxs62fh6shaakxbz47tz30ggmu4uvskg2ift5f6u8rbifftv4csz0gw2ipemacffheymq5p4h9okouy92bwny1cxsur4bqjy78xpaem5iehphtqfetiio4o0thu2hzprpcr\", \"9k5yr33til8u6i71bt5pu9h4uitg2x7kqut0h7itvae4v8woo0igou1jmd44u5gabjapqz5gij6a7267v0bssasn923y0gc7xsodlf7qux8wcy8rlavs1c\", \"lx1thm7ydt4uhvcsoaw53m\", \"pkhmatp3df2kidiq9wkdv5qjraxe481f2fcsti81tz27hv3i3bdhlqltqzpjgzp7a4sqvdhclp7nrcv872xzw7u250w71bnojxton\", \"87l8gon4uho0zq6i7bu9pf3eyjvikrp2anjkz3j0j16bhnqnb6hz0wkuhno4wfc9me7xnoyyl2shprettxtpce5b35g22dhuvk05zs0mb9fd5w59hqbu36rczoz9x1\", \"23yao87xqffigboqdo\" ],\n        \"policy\" : \"RESTRICTED\"\n      },\n      \"dockerRunAsContainerProvidedUser\" : {\n        \"allowedValues\" : [ \"lpwpxzzkwgzop1e8ix7h4dz895s2sooujpd4ljcpg2ci4gma6gvkso2g5fyhdx4sa408eld9i05fwhms2vmraji0dehl08yfjpo1ayjmtp33gbz8gqwcub9sdqdpet3e9c5w62ototo8to5smlaljf1vmfglv3w6nk4smcpawowgf4g1bpn5\", \"255fjtttkgjgnu01pzkw6dpq10xsuux6b4tir4nowrfn9fdusaps5b1tmjenbndi75l8addd3bfi6eo9m3xh1wf90sr4yx4qe2lq1b8f6ila4kdvihq0nt0chcq3co3\", \"wpw80b6k95puag4syyn5duq95rber\", \"3st6ezl6hrbe65x5sfrjcmlz7t2ryifj9jadntvkgfgmlqqw96vmk0jxsuwzdxh9c6gmxhzf868m956y\", \"akdn3umnhqwz4yly8mxbjbstw6sjrej59fg30zjbvbcywd84s2vplrpb3akfo3rwqktvnfu0dm36glaw7l4h7469syzpb7szxr7b5rq45sc7juq0nog2ukrwlnydbqxse6irlqtu0oj56wu7jdr419s6vwaxhwo6l\", \"6ucxl29j5d55w06yqxi11qh6s10nmvgq5goefadoe8swws5qngjn8pzax173xmoj4affliqnozfjkjzvihlgkxk8ib7u741og6ij1gtdpt\" ],\n        \"policy\" : \"RESTRICTED\"\n      }\n    },\n    \"name\" : \"Teodoro Schumm\",\n    \"location\" : \"n29h8t4xzy144fxd957rlxx70rkcdhrhjy9lz2ou1r9016uiys1cb5owyum2j3padonxw5a8rhayksxevyxk0w\",\n    \"state\" : \"INACTIVE\",\n    \"schedulerNotificationConfig\" : {\n      \"topic\" : \"yeajpl2bv2iapi8d3q9kvoc6x6y58raezgppvkyikpj0y3g7pnm6jtxavurm4xvbnpegwo5wszogk745cso67lbznvli5zbfardvtpf5k5hivkcro9xdh85t1ioiptt8spa393359qgl\"\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "811fd02f-bef9-480b-a0fa-c680ff5c5731",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.786545Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "remotebuildexecution.projects.instances.list",
          "schema" : {
            "description" : "The response used for `ListInstances`.",
            "properties" : {
              "instances" : {
                "description" : "The list of instances in a given project.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleDevtoolsRemotebuildexecutionAdminV1alphaInstance"
                },
                "type" : "array"
              },
              "unreachable" : {
                "description" : "Unreachable regions.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "2c9d9060-bd5e-408f-9ea4-b774cc78f947",
    "name" : "Sends a test notification to the specified instance. Returns a `google.protobuf....",
    "request" : {
      "urlPath" : "/v1alpha/Miss+Porsche+McDermott:testNotify",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2c9d9060-bd5e-408f-9ea4-b774cc78f947",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.785248Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "remotebuildexecution.projects.instances.testNotify",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "70bda370-78e3-4b51-aeed-1c72d4d03f86",
    "name" : "Updates an existing worker pool with a specified size and/or configuration. Retu...",
    "request" : {
      "urlPath" : "/v1alpha/Mr.+Milo+Fisher",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Scot Thiel\",\n  \"error\" : {\n    \"code\" : 12347487,\n    \"details\" : [ { }, { }, { }, { }, { } ],\n    \"message\" : \"Eaque debitis quos a qui quia similique. Dolor deleniti in. Voluptatibus illo omnis quam quae commodi mollitia. Nemo ut officia molestias. Vel porro autem.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "70bda370-78e3-4b51-aeed-1c72d4d03f86",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.785163Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "remotebuildexecution.projects.instances.workerpools.patch",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "64cf826e-370e-4433-b983-afd30420521a",
    "name" : "Gets the latest state of a long-running operation. Clients can use this method t...",
    "request" : {
      "urlPath" : "/v1alpha/Valentine+Champlin",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Ms. Kendall Macejkovic\",\n  \"error\" : {\n    \"code\" : 974404531,\n    \"details\" : [ { } ],\n    \"message\" : \"Maxime maiores ut ipsa alias quibusdam tempora sequi. Dolore quasi officia quia eveniet dicta omnis. Voluptas tenetur rem molestiae.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "64cf826e-370e-4433-b983-afd30420521a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.78495Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "remotebuildexecution.projects.operations.get",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "a32678a0-b656-4d35-ba55-bcd01eda922e",
    "name" : "Deletes the specified worker pool. Returns a long running operation, which conta...",
    "request" : {
      "urlPath" : "/v1alpha/Alfonso+Walter",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Brady Collins\",\n  \"error\" : {\n    \"code\" : 365938692,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Sit hic officia nemo dolor et et. Maiores minima cupiditate dolores impedit. Voluptatum voluptates voluptates. Consequatur cupiditate voluptates nisi fugiat commodi non impedit. Qui iste fugit praesen\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a32678a0-b656-4d35-ba55-bcd01eda922e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.784724Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "remotebuildexecution.projects.instances.workerpools.delete",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  } ]
}